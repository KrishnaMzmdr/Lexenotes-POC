(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "+pVZ":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _isNativeFunction; });
function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

/***/ }),

/***/ "/d8p":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/repeat.js ***!
  \*****************************************************************/
/*! exports provided: repeat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return repeat; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../observable/empty */ "EY2u");








function repeat() {
  var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
  return function (source) {
    if (count === 0) {
      return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_7__["empty"])();
    } else if (count < 0) {
      return source.lift(new RepeatOperator(-1, source));
    } else {
      return source.lift(new RepeatOperator(count - 1, source));
    }
  };
}

var RepeatOperator = /*#__PURE__*/function () {
  function RepeatOperator(count, source) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, RepeatOperator);

    this.count = count;
    this.source = source;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RepeatOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));
    }
  }]);

  return RepeatOperator;
}();

var RepeatSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(RepeatSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(RepeatSubscriber);

  function RepeatSubscriber(destination, count, source) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, RepeatSubscriber);

    _this = _super.call(this, destination);
    _this.count = count;
    _this.source = source;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RepeatSubscriber, [{
    key: "complete",
    value: function complete() {
      if (!this.isStopped) {
        var source = this.source,
            count = this.count;

        if (count === 0) {
          return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(RepeatSubscriber.prototype), "complete", this).call(this);
        } else if (count > -1) {
          this.count = count - 1;
        }

        source.subscribe(this._unsubscribeAndRecycle());
      }
    }
  }]);

  return RepeatSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_6__["Subscriber"]);

/***/ }),

/***/ "/uUt":
/*!*******************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/distinctUntilChanged.js ***!
  \*******************************************************************************/
/*! exports provided: distinctUntilChanged */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distinctUntilChanged", function() { return distinctUntilChanged; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");





function distinctUntilChanged(compare, keySelector) {
  return function (source) {
    return source.lift(new DistinctUntilChangedOperator(compare, keySelector));
  };
}

var DistinctUntilChangedOperator = /*#__PURE__*/function () {
  function DistinctUntilChangedOperator(compare, keySelector) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DistinctUntilChangedOperator);

    this.compare = compare;
    this.keySelector = keySelector;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DistinctUntilChangedOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
    }
  }]);

  return DistinctUntilChangedOperator;
}();

var DistinctUntilChangedSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(DistinctUntilChangedSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(DistinctUntilChangedSubscriber);

  function DistinctUntilChangedSubscriber(destination, compare, keySelector) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DistinctUntilChangedSubscriber);

    _this = _super.call(this, destination);
    _this.keySelector = keySelector;
    _this.hasKey = false;

    if (typeof compare === 'function') {
      _this.compare = compare;
    }

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DistinctUntilChangedSubscriber, [{
    key: "compare",
    value: function compare(x, y) {
      return x === y;
    }
  }, {
    key: "_next",
    value: function _next(value) {
      var key;

      try {
        var keySelector = this.keySelector;
        key = keySelector ? keySelector(value) : value;
      } catch (err) {
        return this.destination.error(err);
      }

      var result = false;

      if (this.hasKey) {
        try {
          var compare = this.compare;
          result = compare(this.key, key);
        } catch (err) {
          return this.destination.error(err);
        }
      } else {
        this.hasKey = true;
      }

      if (!result) {
        this.key = key;
        this.destination.next(value);
      }
    }
  }]);

  return DistinctUntilChangedSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\xampp\htdocs\demotest\src\main.ts */"zUnb");


/***/ }),

/***/ "0/63":
/*!********************************************************************!*\
  !*** ./src/app/admin/admin-dashboard/admin-dashboard.component.ts ***!
  \********************************************************************/
/*! exports provided: AdminDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminDashboardComponent", function() { return AdminDashboardComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _services_firebase_firebase_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../services/firebase/firebase.service */ "qnoD");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "ofXK");




function AdminDashboardComponent_tr_23_span_10_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Admin");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
}
function AdminDashboardComponent_tr_23_span_11_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Author");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
}
function AdminDashboardComponent_tr_23_span_12_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "User");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
}
function AdminDashboardComponent_tr_23_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "tr");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "th", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "td");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "td");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "td");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "td");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](10, AdminDashboardComponent_tr_23_span_10_Template, 2, 0, "span", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](11, AdminDashboardComponent_tr_23_span_11_Template, 2, 0, "span", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](12, AdminDashboardComponent_tr_23_span_12_Template, 2, 0, "span", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        var user_r1 = ctx.$implicit;
        var i_r2 = ctx.index;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](i_r2 + 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate2"]("", user_r1.fname, " ", user_r1.lname, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](user_r1.eMail);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("", user_r1.CellPhone, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", user_r1.role_id == 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", user_r1.role_id == 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", user_r1.role_id == 2);
    }
}
var AdminDashboardComponent = /** @class */ /*@__PURE__*/ (function () {
    function AdminDashboardComponent(firebaseService) {
        this.firebaseService = firebaseService;
        this.ListUser = [];
    }
    AdminDashboardComponent.prototype.ngOnInit = function () {
        var _this = this;
        var param = {};
        this.firebaseService.getUsers().subscribe(function (result) {
            _this.ListUser = result;
        });
    };
    AdminDashboardComponent.ɵfac = function AdminDashboardComponent_Factory(t) { return new (t || AdminDashboardComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_services_firebase_firebase_service__WEBPACK_IMPORTED_MODULE_1__["FirebaseService"])); };
    AdminDashboardComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: AdminDashboardComponent, selectors: [["app-admin-dashboard"]], decls: 24, vars: 1, consts: [[1, "main-content"], [1, "container-fluid"], [1, "row"], [1, "col-md-12"], ["type", "button", 1, "btn", "btn-primary", 2, "float", "right"], [1, "table", "table-striped"], ["scope", "col"], [4, "ngFor", "ngForOf"], ["scope", "row"], [4, "ngIf"]], template: function AdminDashboardComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "button", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "Add New User");
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](6, "br");
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "table", 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "thead");
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "tr");
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "th", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "#");
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "th", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](15, "Name");
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "th", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "Email");
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "th", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](19, "Phone No");
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "th", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, "Role");
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "tbody");
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](23, AdminDashboardComponent_tr_23_Template, 13, 8, "tr", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](23);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.ListUser);
            }
        }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["NgForOf"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZG1pbi1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */"] });
    return AdminDashboardComponent;
}());




/***/ }),

/***/ "02Lk":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/distinct.js ***!
  \*******************************************************************/
/*! exports provided: distinct, DistinctSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distinct", function() { return distinct; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DistinctSubscriber", function() { return DistinctSubscriber; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");






function distinct(keySelector, flushes) {
  return function (source) {
    return source.lift(new DistinctOperator(keySelector, flushes));
  };
}

var DistinctOperator = /*#__PURE__*/function () {
  function DistinctOperator(keySelector, flushes) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, DistinctOperator);

    this.keySelector = keySelector;
    this.flushes = flushes;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(DistinctOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));
    }
  }]);

  return DistinctOperator;
}();

var DistinctSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(DistinctSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(DistinctSubscriber);

  function DistinctSubscriber(destination, keySelector, flushes) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, DistinctSubscriber);

    _this = _super.call(this, destination);
    _this.keySelector = keySelector;
    _this.values = new Set();

    if (flushes) {
      _this.add(Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_5__["innerSubscribe"])(flushes, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_5__["SimpleInnerSubscriber"](Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this))));
    }

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(DistinctSubscriber, [{
    key: "notifyNext",
    value: function notifyNext() {
      this.values.clear();
    }
  }, {
    key: "notifyError",
    value: function notifyError(error) {
      this._error(error);
    }
  }, {
    key: "_next",
    value: function _next(value) {
      if (this.keySelector) {
        this._useKeySelector(value);
      } else {
        this._finalizeNext(value, value);
      }
    }
  }, {
    key: "_useKeySelector",
    value: function _useKeySelector(value) {
      var key;
      var destination = this.destination;

      try {
        key = this.keySelector(value);
      } catch (err) {
        destination.error(err);
        return;
      }

      this._finalizeNext(key, value);
    }
  }, {
    key: "_finalizeNext",
    value: function _finalizeNext(key, value) {
      var values = this.values;

      if (!values.has(key)) {
        values.add(key);
        this.destination.next(value);
      }
    }
  }]);

  return DistinctSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_5__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "04ZW":
/*!****************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/fromEventPattern.js ***!
  \****************************************************************************/
/*! exports provided: fromEventPattern */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromEventPattern", function() { return fromEventPattern; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ "DH7j");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isFunction */ "n6bG");
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operators/map */ "lJxs");





function fromEventPattern(addHandler, removeHandler, resultSelector) {
  if (resultSelector) {
    return fromEventPattern(addHandler, removeHandler).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_4__["map"])(function (args) {
      return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(args) ? resultSelector.apply(void 0, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(args)) : resultSelector(args);
    }));
  }

  return new _Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"](function (subscriber) {
    var handler = function handler() {
      for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {
        e[_key] = arguments[_key];
      }

      return subscriber.next(e.length === 1 ? e[0] : e);
    };

    var retValue;

    try {
      retValue = addHandler(handler);
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }

    if (!Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(removeHandler)) {
      return undefined;
    }

    return function () {
      return removeHandler(handler, retValue);
    };
  });
}

/***/ }),

/***/ "05l1":
/*!************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/publishReplay.js ***!
  \************************************************************************/
/*! exports provided: publishReplay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "publishReplay", function() { return publishReplay; });
/* harmony import */ var _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ReplaySubject */ "jtHE");
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ "oB13");


function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {
  if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {
    scheduler = selectorOrScheduler;
  }

  var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;
  var subject = new _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__["ReplaySubject"](bufferSize, windowTime, scheduler);
  return function (source) {
    return Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(function () {
      return subject;
    }, selector)(source);
  };
}

/***/ }),

/***/ "05qF":
/*!*****************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/es2015/index.js ***!
  \*****************************************************************/
/*! exports provided: RealtimeDatabaseURL, DATABASE_URL, ɵZoneScheduler, ɵBlockUntilFirstOperator, ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, runOutsideAngular, runInZone, FirebaseZoneScheduler, ɵlazySDKProxy, FirebaseOptionsToken, FirebaseNameOrConfigToken, FIREBASE_OPTIONS, FIREBASE_APP_NAME, FirebaseApp, VERSION, _firebaseAppFactory, AngularFireModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./public_api */ "mgdk");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RealtimeDatabaseURL", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["RealtimeDatabaseURL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DATABASE_URL", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DATABASE_URL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵZoneScheduler", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ɵZoneScheduler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵBlockUntilFirstOperator", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ɵBlockUntilFirstOperator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵAngularFireSchedulers", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ɵAngularFireSchedulers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵkeepUnstableUntilFirstFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ɵkeepUnstableUntilFirstFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "runOutsideAngular", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["runOutsideAngular"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "runInZone", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["runInZone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FirebaseZoneScheduler", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["FirebaseZoneScheduler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵlazySDKProxy", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ɵlazySDKProxy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FirebaseOptionsToken", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["FirebaseOptionsToken"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FirebaseNameOrConfigToken", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["FirebaseNameOrConfigToken"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FIREBASE_OPTIONS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["FIREBASE_OPTIONS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FIREBASE_APP_NAME", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["FIREBASE_APP_NAME"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FirebaseApp", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["FirebaseApp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["VERSION"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_firebaseAppFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["_firebaseAppFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngularFireModule", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AngularFireModule"]; });



/***/ }),

/***/ "0EUg":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/concatAll.js ***!
  \********************************************************************/
/*! exports provided: concatAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concatAll", function() { return concatAll; });
/* harmony import */ var _mergeAll__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeAll */ "bHdf");

function concatAll() {
  return Object(_mergeAll__WEBPACK_IMPORTED_MODULE_0__["mergeAll"])(1);
}

/***/ }),

/***/ "0Em7":
/*!***********************************************!*\
  !*** ./src/app/admin/admin-routing.module.ts ***!
  \***********************************************/
/*! exports provided: AdminRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminRoutingModule", function() { return AdminRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _admin_admin_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./admin/admin.component */ "hYta");
/* harmony import */ var _admin_dashboard_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./admin-dashboard/admin-dashboard.component */ "0/63");






//import { AuthGuard } from '../auth/auth.guard';
var routes = [
    {
        path: 'admin',
        component: _admin_admin_component__WEBPACK_IMPORTED_MODULE_2__["AdminComponent"],
        // canActivate: [AuthGuard],
        children: [
            {
                path: '',
                children: [
                    { path: 'dashboard', component: _admin_dashboard_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_3__["AdminDashboardComponent"] }
                ],
            }
        ]
    }
];
var AdminRoutingModule = /** @class */ /*@__PURE__*/ (function () {
    function AdminRoutingModule() {
    }
    AdminRoutingModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: AdminRoutingModule });
    AdminRoutingModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function AdminRoutingModule_Factory(t) { return new (t || AdminRoutingModule)(); }, imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)], _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]] });
    return AdminRoutingModule;
}());

(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](AdminRoutingModule, { imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]], exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]] }); })();



/***/ }),

/***/ "0Pi8":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/endWith.js ***!
  \******************************************************************/
/*! exports provided: endWith */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "endWith", function() { return endWith; });
/* harmony import */ var _observable_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/concat */ "GyhO");
/* harmony import */ var _observable_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../observable/of */ "LRne");


function endWith() {
  for (var _len = arguments.length, array = new Array(_len), _key = 0; _key < _len; _key++) {
    array[_key] = arguments[_key];
  }

  return function (source) {
    return Object(_observable_concat__WEBPACK_IMPORTED_MODULE_0__["concat"])(source, _observable_of__WEBPACK_IMPORTED_MODULE_1__["of"].apply(void 0, array));
  };
}

/***/ }),

/***/ "128B":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/reduce.js ***!
  \*****************************************************************/
/*! exports provided: reduce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return reduce; });
/* harmony import */ var _scan__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scan */ "Kqap");
/* harmony import */ var _takeLast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./takeLast */ "BFxc");
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultIfEmpty */ "xbPD");
/* harmony import */ var _util_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/pipe */ "mCNh");




function reduce(accumulator, seed) {
  if (arguments.length >= 2) {
    return function reduceOperatorFunctionWithSeed(source) {
      return Object(_util_pipe__WEBPACK_IMPORTED_MODULE_3__["pipe"])(Object(_scan__WEBPACK_IMPORTED_MODULE_0__["scan"])(accumulator, seed), Object(_takeLast__WEBPACK_IMPORTED_MODULE_1__["takeLast"])(1), Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_2__["defaultIfEmpty"])(seed))(source);
    };
  }

  return function reduceOperatorFunction(source) {
    return Object(_util_pipe__WEBPACK_IMPORTED_MODULE_3__["pipe"])(Object(_scan__WEBPACK_IMPORTED_MODULE_0__["scan"])(function (acc, value, index) {
      return accumulator(acc, value, index + 1);
    }), Object(_takeLast__WEBPACK_IMPORTED_MODULE_1__["takeLast"])(1))(source);
  };
}

/***/ }),

/***/ "1G5W":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/takeUntil.js ***!
  \********************************************************************/
/*! exports provided: takeUntil */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "takeUntil", function() { return takeUntil; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");





function takeUntil(notifier) {
  return function (source) {
    return source.lift(new TakeUntilOperator(notifier));
  };
}

var TakeUntilOperator = /*#__PURE__*/function () {
  function TakeUntilOperator(notifier) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, TakeUntilOperator);

    this.notifier = notifier;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(TakeUntilOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);
      var notifierSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["innerSubscribe"])(this.notifier, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["SimpleInnerSubscriber"](takeUntilSubscriber));

      if (notifierSubscription && !takeUntilSubscriber.seenValue) {
        takeUntilSubscriber.add(notifierSubscription);
        return source.subscribe(takeUntilSubscriber);
      }

      return takeUntilSubscriber;
    }
  }]);

  return TakeUntilOperator;
}();

var TakeUntilSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(TakeUntilSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(TakeUntilSubscriber);

  function TakeUntilSubscriber(destination) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, TakeUntilSubscriber);

    _this = _super.call(this, destination);
    _this.seenValue = false;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(TakeUntilSubscriber, [{
    key: "notifyNext",
    value: function notifyNext() {
      this.seenValue = true;
      this.complete();
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {}
  }]);

  return TakeUntilSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "1OyB":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _classCallCheck; });
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

/***/ }),

/***/ "1Ykd":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/sampleTime.js ***!
  \*********************************************************************/
/*! exports provided: sampleTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sampleTime", function() { return sampleTime; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../scheduler/async */ "D0XW");







function sampleTime(period) {
  var scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _scheduler_async__WEBPACK_IMPORTED_MODULE_6__["async"];
  return function (source) {
    return source.lift(new SampleTimeOperator(period, scheduler));
  };
}

var SampleTimeOperator = /*#__PURE__*/function () {
  function SampleTimeOperator(period, scheduler) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, SampleTimeOperator);

    this.period = period;
    this.scheduler = scheduler;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(SampleTimeOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));
    }
  }]);

  return SampleTimeOperator;
}();

var SampleTimeSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(SampleTimeSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(SampleTimeSubscriber);

  function SampleTimeSubscriber(destination, period, scheduler) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, SampleTimeSubscriber);

    _this = _super.call(this, destination);
    _this.period = period;
    _this.scheduler = scheduler;
    _this.hasValue = false;

    _this.add(scheduler.schedule(dispatchNotification, period, {
      subscriber: Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this),
      period: period
    }));

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(SampleTimeSubscriber, [{
    key: "_next",
    value: function _next(value) {
      this.lastValue = value;
      this.hasValue = true;
    }
  }, {
    key: "notifyNext",
    value: function notifyNext() {
      if (this.hasValue) {
        this.hasValue = false;
        this.destination.next(this.lastValue);
      }
    }
  }]);

  return SampleTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_5__["Subscriber"]);

function dispatchNotification(state) {
  var subscriber = state.subscriber,
      period = state.period;
  subscriber.notifyNext();
  this.schedule(state, period);
}

/***/ }),

/***/ "1uah":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/zip.js ***!
  \***************************************************************/
/*! exports provided: zip, ZipOperator, ZipSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return zip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZipOperator", function() { return ZipOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZipSubscriber", function() { return ZipSubscriber; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fromArray */ "yCtX");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isArray */ "DH7j");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../internal/symbol/iterator */ "Lhse");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");









function zip() {
  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {
    observables[_key] = arguments[_key];
  }

  var resultSelector = observables[observables.length - 1];

  if (typeof resultSelector === 'function') {
    observables.pop();
  }

  return Object(_fromArray__WEBPACK_IMPORTED_MODULE_4__["fromArray"])(observables, undefined).lift(new ZipOperator(resultSelector));
}
var ZipOperator = /*#__PURE__*/function () {
  function ZipOperator(resultSelector) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ZipOperator);

    this.resultSelector = resultSelector;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ZipOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));
    }
  }]);

  return ZipOperator;
}();
var ZipSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(ZipSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(ZipSubscriber);

  function ZipSubscriber(destination, resultSelector) {
    var _this;

    var values = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Object.create(null);

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ZipSubscriber);

    _this = _super.call(this, destination);
    _this.resultSelector = resultSelector;
    _this.iterators = [];
    _this.active = 0;
    _this.resultSelector = typeof resultSelector === 'function' ? resultSelector : undefined;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ZipSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var iterators = this.iterators;

      if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_5__["isArray"])(value)) {
        iterators.push(new StaticArrayIterator(value));
      } else if (typeof value[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_7__["iterator"]] === 'function') {
        iterators.push(new StaticIterator(value[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_7__["iterator"]]()));
      } else {
        iterators.push(new ZipBufferIterator(this.destination, this, value));
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      var iterators = this.iterators;
      var len = iterators.length;
      this.unsubscribe();

      if (len === 0) {
        this.destination.complete();
        return;
      }

      this.active = len;

      for (var i = 0; i < len; i++) {
        var iterator = iterators[i];

        if (iterator.stillUnsubscribed) {
          var destination = this.destination;
          destination.add(iterator.subscribe());
        } else {
          this.active--;
        }
      }
    }
  }, {
    key: "notifyInactive",
    value: function notifyInactive() {
      this.active--;

      if (this.active === 0) {
        this.destination.complete();
      }
    }
  }, {
    key: "checkIterators",
    value: function checkIterators() {
      var iterators = this.iterators;
      var len = iterators.length;
      var destination = this.destination;

      for (var i = 0; i < len; i++) {
        var iterator = iterators[i];

        if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {
          return;
        }
      }

      var shouldComplete = false;
      var args = [];

      for (var _i = 0; _i < len; _i++) {
        var _iterator = iterators[_i];

        var result = _iterator.next();

        if (_iterator.hasCompleted()) {
          shouldComplete = true;
        }

        if (result.done) {
          destination.complete();
          return;
        }

        args.push(result.value);
      }

      if (this.resultSelector) {
        this._tryresultSelector(args);
      } else {
        destination.next(args);
      }

      if (shouldComplete) {
        destination.complete();
      }
    }
  }, {
    key: "_tryresultSelector",
    value: function _tryresultSelector(args) {
      var result;

      try {
        result = this.resultSelector.apply(this, args);
      } catch (err) {
        this.destination.error(err);
        return;
      }

      this.destination.next(result);
    }
  }]);

  return ZipSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_6__["Subscriber"]);

var StaticIterator = /*#__PURE__*/function () {
  function StaticIterator(iterator) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, StaticIterator);

    this.iterator = iterator;
    this.nextResult = iterator.next();
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(StaticIterator, [{
    key: "hasValue",
    value: function hasValue() {
      return true;
    }
  }, {
    key: "next",
    value: function next() {
      var result = this.nextResult;
      this.nextResult = this.iterator.next();
      return result;
    }
  }, {
    key: "hasCompleted",
    value: function hasCompleted() {
      var nextResult = this.nextResult;
      return Boolean(nextResult && nextResult.done);
    }
  }]);

  return StaticIterator;
}();

var StaticArrayIterator = /*#__PURE__*/function () {
  function StaticArrayIterator(array) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, StaticArrayIterator);

    this.array = array;
    this.index = 0;
    this.length = 0;
    this.length = array.length;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(StaticArrayIterator, [{
    key: _internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_7__["iterator"],
    value: function value() {
      return this;
    }
  }, {
    key: "next",
    value: function next(value) {
      var i = this.index++;
      var array = this.array;
      return i < this.length ? {
        value: array[i],
        done: false
      } : {
        value: null,
        done: true
      };
    }
  }, {
    key: "hasValue",
    value: function hasValue() {
      return this.array.length > this.index;
    }
  }, {
    key: "hasCompleted",
    value: function hasCompleted() {
      return this.array.length === this.index;
    }
  }]);

  return StaticArrayIterator;
}();

var ZipBufferIterator = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(ZipBufferIterator, _SimpleOuterSubscribe);

  var _super2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(ZipBufferIterator);

  function ZipBufferIterator(destination, parent, observable) {
    var _this2;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ZipBufferIterator);

    _this2 = _super2.call(this, destination);
    _this2.parent = parent;
    _this2.observable = observable;
    _this2.stillUnsubscribed = true;
    _this2.buffer = [];
    _this2.isComplete = false;
    return _this2;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ZipBufferIterator, [{
    key: _internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_7__["iterator"],
    value: function value() {
      return this;
    }
  }, {
    key: "next",
    value: function next() {
      var buffer = this.buffer;

      if (buffer.length === 0 && this.isComplete) {
        return {
          value: null,
          done: true
        };
      } else {
        return {
          value: buffer.shift(),
          done: false
        };
      }
    }
  }, {
    key: "hasValue",
    value: function hasValue() {
      return this.buffer.length > 0;
    }
  }, {
    key: "hasCompleted",
    value: function hasCompleted() {
      return this.buffer.length === 0 && this.isComplete;
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {
      if (this.buffer.length > 0) {
        this.isComplete = true;
        this.parent.notifyInactive();
      } else {
        this.destination.complete();
      }
    }
  }, {
    key: "notifyNext",
    value: function notifyNext(innerValue) {
      this.buffer.push(innerValue);
      this.parent.checkIterators();
    }
  }, {
    key: "subscribe",
    value: function subscribe() {
      return Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_8__["innerSubscribe"])(this.observable, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_8__["SimpleInnerSubscriber"](this));
    }
  }]);

  return ZipBufferIterator;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_8__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "25BE":
/*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _iterableToArray; });
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

/***/ }),

/***/ "2QA8":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/symbol/rxSubscriber.js ***!
  \********************************************************************/
/*! exports provided: rxSubscriber, $$rxSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rxSubscriber", function() { return rxSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$$rxSubscriber", function() { return $$rxSubscriber; });
var rxSubscriber = /*@__PURE__*/function () {
  return typeof Symbol === 'function' ? Symbol('rxSubscriber') : '@@rxSubscriber_' + Math.random();
}();
var $$rxSubscriber = rxSubscriber;

/***/ }),

/***/ "2QGa":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/partition.js ***!
  \*********************************************************************/
/*! exports provided: partition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return partition; });
/* harmony import */ var _util_not__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/not */ "F97/");
/* harmony import */ var _util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeTo */ "SeVD");
/* harmony import */ var _operators_filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/filter */ "pLZG");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Observable */ "HDdC");




function partition(source, predicate, thisArg) {
  return [Object(_operators_filter__WEBPACK_IMPORTED_MODULE_2__["filter"])(predicate, thisArg)(new _Observable__WEBPACK_IMPORTED_MODULE_3__["Observable"](Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__["subscribeTo"])(source))), Object(_operators_filter__WEBPACK_IMPORTED_MODULE_2__["filter"])(Object(_util_not__WEBPACK_IMPORTED_MODULE_0__["not"])(predicate, thisArg))(new _Observable__WEBPACK_IMPORTED_MODULE_3__["Observable"](Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__["subscribeTo"])(source)))];
}

/***/ }),

/***/ "2Vo4":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js ***!
  \****************************************************************/
/*! exports provided: BehaviorSubject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BehaviorSubject", function() { return BehaviorSubject; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Subject */ "XNiG");
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ "9ppp");








var BehaviorSubject = /*#__PURE__*/function (_Subject) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(BehaviorSubject, _Subject);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(BehaviorSubject);

  function BehaviorSubject(_value) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, BehaviorSubject);

    _this = _super.call(this);
    _this._value = _value;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(BehaviorSubject, [{
    key: "_subscribe",
    value: function _subscribe(subscriber) {
      var subscription = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(BehaviorSubject.prototype), "_subscribe", this).call(this, subscriber);

      if (subscription && !subscription.closed) {
        subscriber.next(this._value);
      }

      return subscription;
    }
  }, {
    key: "getValue",
    value: function getValue() {
      if (this.hasError) {
        throw this.thrownError;
      } else if (this.closed) {
        throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_7__["ObjectUnsubscribedError"]();
      } else {
        return this._value;
      }
    }
  }, {
    key: "next",
    value: function next(value) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(BehaviorSubject.prototype), "next", this).call(this, this._value = value);
    }
  }, {
    key: "value",
    get: function get() {
      return this.getValue();
    }
  }]);

  return BehaviorSubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_6__["Subject"]);

/***/ }),

/***/ "2WcH":
/*!*****************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _isNativeReflectConstruct; });
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

/***/ }),

/***/ "2fFW":
/*!*******************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/config.js ***!
  \*******************************************************/
/*! exports provided: config */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "config", function() { return config; });
var _enable_super_gross_mode_that_will_cause_bad_things = false;
var config = {
  Promise: undefined,

  set useDeprecatedSynchronousErrorHandling(value) {
    if (value) {
      var error = new Error();
      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + error.stack);
    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {
      console.log('RxJS: Back to a better error behavior. Thank you. <3');
    }

    _enable_super_gross_mode_that_will_cause_bad_things = value;
  },

  get useDeprecatedSynchronousErrorHandling() {
    return _enable_super_gross_mode_that_will_cause_bad_things;
  }

};

/***/ }),

/***/ "32Ea":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/skipWhile.js ***!
  \********************************************************************/
/*! exports provided: skipWhile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "skipWhile", function() { return skipWhile; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");





function skipWhile(predicate) {
  return function (source) {
    return source.lift(new SkipWhileOperator(predicate));
  };
}

var SkipWhileOperator = /*#__PURE__*/function () {
  function SkipWhileOperator(predicate) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SkipWhileOperator);

    this.predicate = predicate;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SkipWhileOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));
    }
  }]);

  return SkipWhileOperator;
}();

var SkipWhileSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(SkipWhileSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(SkipWhileSubscriber);

  function SkipWhileSubscriber(destination, predicate) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SkipWhileSubscriber);

    _this = _super.call(this, destination);
    _this.predicate = predicate;
    _this.skipping = true;
    _this.index = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SkipWhileSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var destination = this.destination;

      if (this.skipping) {
        this.tryCallPredicate(value);
      }

      if (!this.skipping) {
        destination.next(value);
      }
    }
  }, {
    key: "tryCallPredicate",
    value: function tryCallPredicate(value) {
      try {
        var result = this.predicate(value, this.index++);
        this.skipping = Boolean(result);
      } catch (err) {
        this.destination.error(err);
      }
    }
  }]);

  return SkipWhileSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "3CkQ":
/*!****************************************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/firestore/es2015/collection/changes.js ***!
  \****************************************************************************************/
/*! exports provided: docChanges, sortedChanges, combineChanges, combineChange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "docChanges", function() { return docChanges; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortedChanges", function() { return sortedChanges; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineChanges", function() { return combineChanges; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineChange", function() { return combineChange; });
/* harmony import */ var _observable_fromRef__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/fromRef */ "Ttzs");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "kU1M");


function docChanges(query, scheduler) {
  return Object(_observable_fromRef__WEBPACK_IMPORTED_MODULE_0__["fromCollectionRef"])(query, scheduler).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (action) {
    return action.payload.docChanges().map(function (change) {
      return {
        type: change.type,
        payload: change
      };
    });
  }));
}
function sortedChanges(query, events, scheduler) {
  return Object(_observable_fromRef__WEBPACK_IMPORTED_MODULE_0__["fromCollectionRef"])(query, scheduler).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (changes) {
    return changes.payload.docChanges();
  }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["scan"])(function (current, changes) {
    return combineChanges(current, changes, events);
  }, []), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (changes) {
    return changes.map(function (c) {
      return {
        type: c.type,
        payload: c
      };
    });
  }));
}
function combineChanges(current, changes, events) {
  changes.forEach(function (change) {
    if (events.indexOf(change.type) > -1) {
      current = combineChange(current, change);
    }
  });
  return current;
}
function combineChange(combined, change) {
  switch (change.type) {
    case 'added':
      if (combined[change.newIndex] && combined[change.newIndex].doc.ref.isEqual(change.doc.ref)) {} else {
        combined.splice(change.newIndex, 0, change);
      }

      break;

    case 'modified':
      if (combined[change.oldIndex] == null || combined[change.oldIndex].doc.ref.isEqual(change.doc.ref)) {
        if (change.oldIndex !== change.newIndex) {
          combined.splice(change.oldIndex, 1);
          combined.splice(change.newIndex, 0, change);
        } else {
          combined.splice(change.newIndex, 1, change);
        }
      }

      break;

    case 'removed':
      if (combined[change.oldIndex] && combined[change.oldIndex].doc.ref.isEqual(change.doc.ref)) {
        combined.splice(change.oldIndex, 1);
      }

      break;
  }

  return combined;
}

/***/ }),

/***/ "3E0/":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/delay.js ***!
  \****************************************************************/
/*! exports provided: delay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return delay; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../scheduler/async */ "D0XW");
/* harmony import */ var _util_isDate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isDate */ "mlxB");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Notification */ "WMd4");








function delay(delay) {
  var scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _scheduler_async__WEBPACK_IMPORTED_MODULE_4__["async"];
  var absoluteDelay = Object(_util_isDate__WEBPACK_IMPORTED_MODULE_5__["isDate"])(delay);
  var delayFor = absoluteDelay ? +delay - scheduler.now() : Math.abs(delay);
  return function (source) {
    return source.lift(new DelayOperator(delayFor, scheduler));
  };
}

var DelayOperator = /*#__PURE__*/function () {
  function DelayOperator(delay, scheduler) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DelayOperator);

    this.delay = delay;
    this.scheduler = scheduler;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DelayOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));
    }
  }]);

  return DelayOperator;
}();

var DelaySubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(DelaySubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(DelaySubscriber);

  function DelaySubscriber(destination, delay, scheduler) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DelaySubscriber);

    _this = _super.call(this, destination);
    _this.delay = delay;
    _this.scheduler = scheduler;
    _this.queue = [];
    _this.active = false;
    _this.errored = false;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DelaySubscriber, [{
    key: "_schedule",
    value: function _schedule(scheduler) {
      this.active = true;
      var destination = this.destination;
      destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {
        source: this,
        destination: this.destination,
        scheduler: scheduler
      }));
    }
  }, {
    key: "scheduleNotification",
    value: function scheduleNotification(notification) {
      if (this.errored === true) {
        return;
      }

      var scheduler = this.scheduler;
      var message = new DelayMessage(scheduler.now() + this.delay, notification);
      this.queue.push(message);

      if (this.active === false) {
        this._schedule(scheduler);
      }
    }
  }, {
    key: "_next",
    value: function _next(value) {
      this.scheduleNotification(_Notification__WEBPACK_IMPORTED_MODULE_7__["Notification"].createNext(value));
    }
  }, {
    key: "_error",
    value: function _error(err) {
      this.errored = true;
      this.queue = [];
      this.destination.error(err);
      this.unsubscribe();
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.scheduleNotification(_Notification__WEBPACK_IMPORTED_MODULE_7__["Notification"].createComplete());
      this.unsubscribe();
    }
  }], [{
    key: "dispatch",
    value: function dispatch(state) {
      var source = state.source;
      var queue = source.queue;
      var scheduler = state.scheduler;
      var destination = state.destination;

      while (queue.length > 0 && queue[0].time - scheduler.now() <= 0) {
        queue.shift().notification.observe(destination);
      }

      if (queue.length > 0) {
        var _delay = Math.max(0, queue[0].time - scheduler.now());

        this.schedule(state, _delay);
      } else {
        this.unsubscribe();
        source.active = false;
      }
    }
  }]);

  return DelaySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_6__["Subscriber"]);

var DelayMessage = function DelayMessage(time, notification) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DelayMessage);

  this.time = time;
  this.notification = notification;
};

/***/ }),

/***/ "3N8a":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduler/AsyncAction.js ***!
  \**********************************************************************/
/*! exports provided: AsyncAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncAction", function() { return AsyncAction; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Action */ "7ve7");





var AsyncAction = /*#__PURE__*/function (_Action) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(AsyncAction, _Action);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(AsyncAction);

  function AsyncAction(scheduler, work) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, AsyncAction);

    _this = _super.call(this, scheduler, work);
    _this.scheduler = scheduler;
    _this.work = work;
    _this.pending = false;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(AsyncAction, [{
    key: "schedule",
    value: function schedule(state) {
      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      if (this.closed) {
        return this;
      }

      this.state = state;
      var id = this.id;
      var scheduler = this.scheduler;

      if (id != null) {
        this.id = this.recycleAsyncId(scheduler, id, delay);
      }

      this.pending = true;
      this.delay = delay;
      this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
      return this;
    }
  }, {
    key: "requestAsyncId",
    value: function requestAsyncId(scheduler, id) {
      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      return setInterval(scheduler.flush.bind(scheduler, this), delay);
    }
  }, {
    key: "recycleAsyncId",
    value: function recycleAsyncId(scheduler, id) {
      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

      if (delay !== null && this.delay === delay && this.pending === false) {
        return id;
      }

      clearInterval(id);
      return undefined;
    }
  }, {
    key: "execute",
    value: function execute(state, delay) {
      if (this.closed) {
        return new Error('executing a cancelled action');
      }

      this.pending = false;

      var error = this._execute(state, delay);

      if (error) {
        return error;
      } else if (this.pending === false && this.id != null) {
        this.id = this.recycleAsyncId(this.scheduler, this.id, null);
      }
    }
  }, {
    key: "_execute",
    value: function _execute(state, delay) {
      var errored = false;
      var errorValue = undefined;

      try {
        this.work(state);
      } catch (e) {
        errored = true;
        errorValue = !!e && e || new Error(e);
      }

      if (errored) {
        this.unsubscribe();
        return errorValue;
      }
    }
  }, {
    key: "_unsubscribe",
    value: function _unsubscribe() {
      var id = this.id;
      var scheduler = this.scheduler;
      var actions = scheduler.actions;
      var index = actions.indexOf(this);
      this.work = null;
      this.state = null;
      this.pending = false;
      this.scheduler = null;

      if (index !== -1) {
        actions.splice(index, 1);
      }

      if (id != null) {
        this.id = this.recycleAsyncId(scheduler, id, null);
      }

      this.delay = null;
    }
  }]);

  return AsyncAction;
}(_Action__WEBPACK_IMPORTED_MODULE_4__["Action"]);

/***/ }),

/***/ "3Pt+":
/*!********************************************************************!*\
  !*** ./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js ***!
  \********************************************************************/
/*! exports provided: AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormsModule, MaxLengthValidator, MinLengthValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NumberValueAccessor, PatternValidator, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, VERSION, Validators, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption, ɵangular_packages_forms_forms_a, ɵangular_packages_forms_forms_b, ɵangular_packages_forms_forms_ba, ɵangular_packages_forms_forms_bb, ɵangular_packages_forms_forms_bc, ɵangular_packages_forms_forms_bd, ɵangular_packages_forms_forms_be, ɵangular_packages_forms_forms_c, ɵangular_packages_forms_forms_d, ɵangular_packages_forms_forms_e, ɵangular_packages_forms_forms_f, ɵangular_packages_forms_forms_g, ɵangular_packages_forms_forms_h, ɵangular_packages_forms_forms_i, ɵangular_packages_forms_forms_j, ɵangular_packages_forms_forms_k, ɵangular_packages_forms_forms_l, ɵangular_packages_forms_forms_m, ɵangular_packages_forms_forms_n, ɵangular_packages_forms_forms_o, ɵangular_packages_forms_forms_p, ɵangular_packages_forms_forms_q, ɵangular_packages_forms_forms_r, ɵangular_packages_forms_forms_s, ɵangular_packages_forms_forms_t, ɵangular_packages_forms_forms_u, ɵangular_packages_forms_forms_v, ɵangular_packages_forms_forms_w, ɵangular_packages_forms_forms_x, ɵangular_packages_forms_forms_y, ɵangular_packages_forms_forms_z */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbstractControl", function() { return AbstractControl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbstractControlDirective", function() { return AbstractControlDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbstractFormGroupDirective", function() { return AbstractFormGroupDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COMPOSITION_BUFFER_MODE", function() { return COMPOSITION_BUFFER_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CheckboxControlValueAccessor", function() { return CheckboxControlValueAccessor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CheckboxRequiredValidator", function() { return CheckboxRequiredValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ControlContainer", function() { return ControlContainer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultValueAccessor", function() { return DefaultValueAccessor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmailValidator", function() { return EmailValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormArray", function() { return FormArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormArrayName", function() { return FormArrayName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormBuilder", function() { return FormBuilder; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormControl", function() { return FormControl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormControlDirective", function() { return FormControlDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormControlName", function() { return FormControlName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormGroup", function() { return FormGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormGroupDirective", function() { return FormGroupDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormGroupName", function() { return FormGroupName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormsModule", function() { return FormsModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaxLengthValidator", function() { return MaxLengthValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MinLengthValidator", function() { return MinLengthValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NG_ASYNC_VALIDATORS", function() { return NG_ASYNC_VALIDATORS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NG_VALIDATORS", function() { return NG_VALIDATORS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NG_VALUE_ACCESSOR", function() { return NG_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgControl", function() { return NgControl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgControlStatus", function() { return NgControlStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgControlStatusGroup", function() { return NgControlStatusGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgForm", function() { return NgForm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgModel", function() { return NgModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgModelGroup", function() { return NgModelGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgSelectOption", function() { return NgSelectOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NumberValueAccessor", function() { return NumberValueAccessor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PatternValidator", function() { return PatternValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadioControlValueAccessor", function() { return RadioControlValueAccessor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RangeValueAccessor", function() { return RangeValueAccessor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReactiveFormsModule", function() { return ReactiveFormsModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequiredValidator", function() { return RequiredValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectControlValueAccessor", function() { return SelectControlValueAccessor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectMultipleControlValueAccessor", function() { return SelectMultipleControlValueAccessor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Validators", function() { return Validators; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵInternalFormsSharedModule", function() { return ɵInternalFormsSharedModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNgNoValidate", function() { return ɵNgNoValidate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNgSelectMultipleOption", function() { return ɵNgSelectMultipleOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_a", function() { return SHARED_FORM_DIRECTIVES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_b", function() { return TEMPLATE_DRIVEN_DIRECTIVES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_ba", function() { return CHECKBOX_REQUIRED_VALIDATOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_bb", function() { return EMAIL_VALIDATOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_bc", function() { return MIN_LENGTH_VALIDATOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_bd", function() { return MAX_LENGTH_VALIDATOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_be", function() { return PATTERN_VALIDATOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_c", function() { return REACTIVE_DRIVEN_DIRECTIVES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_d", function() { return ɵInternalFormsSharedModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_e", function() { return CHECKBOX_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_f", function() { return DEFAULT_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_g", function() { return AbstractControlStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_h", function() { return ngControlStatusHost; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_i", function() { return formDirectiveProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_j", function() { return formControlBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_k", function() { return modelGroupProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_l", function() { return NUMBER_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_m", function() { return RADIO_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_n", function() { return RadioControlRegistry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_o", function() { return RANGE_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_p", function() { return NG_MODEL_WITH_FORM_CONTROL_WARNING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_q", function() { return formControlBinding$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_r", function() { return controlNameBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_s", function() { return formDirectiveProvider$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_t", function() { return formGroupNameProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_u", function() { return formArrayNameProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_v", function() { return SELECT_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_w", function() { return SELECT_MULTIPLE_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_x", function() { return ɵNgSelectMultipleOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_y", function() { return ɵNgNoValidate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_z", function() { return REQUIRED_VALIDATOR; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "uFwe");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs/operators */ "kU1M");








/**
 * @license Angular v11.0.2
 * (c) 2010-2020 Google LLC. https://angular.io/
 * License: MIT
 */




/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Used to provide a `ControlValueAccessor` for form controls.
 *
 * See `DefaultValueAccessor` for how to implement one.
 *
 * @publicApi
 */


var NG_VALUE_ACCESSOR = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('NgValueAccessor');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var CHECKBOX_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return CheckboxControlValueAccessor;
  }),
  multi: true
};

var CheckboxControlValueAccessor = /*@__PURE__*/function () {
  var CheckboxControlValueAccessor = /*#__PURE__*/function () {
    function CheckboxControlValueAccessor(_renderer, _elementRef) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, CheckboxControlValueAccessor);

      this._renderer = _renderer;
      this._elementRef = _elementRef;
      /**
       * The registered callback function called when a change event occurs on the input element.
       * @nodoc
       */

      this.onChange = function (_) {};
      /**
       * The registered callback function called when a blur event occurs on the input element.
       * @nodoc
       */


      this.onTouched = function () {};
    }
    /**
     * Sets the "checked" property on the input element.
     * @nodoc
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(CheckboxControlValueAccessor, [{
      key: "writeValue",
      value: function writeValue(value) {
        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);
      }
      /**
       * Registers a function called when the control value changes.
       * @nodoc
       */

    }, {
      key: "registerOnChange",
      value: function registerOnChange(fn) {
        this.onChange = fn;
      }
      /**
       * Registers a function called when the control is touched.
       * @nodoc
       */

    }, {
      key: "registerOnTouched",
      value: function registerOnTouched(fn) {
        this.onTouched = fn;
      }
      /**
       * Sets the "disabled" property on the input element.
       * @nodoc
       */

    }, {
      key: "setDisabledState",
      value: function setDisabledState(isDisabled) {
        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
      }
    }]);

    return CheckboxControlValueAccessor;
  }();

  CheckboxControlValueAccessor.ɵfac = function CheckboxControlValueAccessor_Factory(t) {
    return new (t || CheckboxControlValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]));
  };

  CheckboxControlValueAccessor.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: CheckboxControlValueAccessor,
    selectors: [["input", "type", "checkbox", "formControlName", ""], ["input", "type", "checkbox", "formControl", ""], ["input", "type", "checkbox", "ngModel", ""]],
    hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("change", function CheckboxControlValueAccessor_change_HostBindingHandler($event) {
          return ctx.onChange($event.target.checked);
        })("blur", function CheckboxControlValueAccessor_blur_HostBindingHandler() {
          return ctx.onTouched();
        });
      }
    },
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([CHECKBOX_VALUE_ACCESSOR])]
  });
  return CheckboxControlValueAccessor;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var DEFAULT_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return DefaultValueAccessor;
  }),
  multi: true
};
/**
 * We must check whether the agent is Android because composition events
 * behave differently between iOS and Android.
 */

function _isAndroid() {
  var userAgent = Object(_angular_common__WEBPACK_IMPORTED_MODULE_8__["ɵgetDOM"])() ? Object(_angular_common__WEBPACK_IMPORTED_MODULE_8__["ɵgetDOM"])().getUserAgent() : '';
  return /android (\d+)/.test(userAgent.toLowerCase());
}
/**
 * @description
 * Provide this token to control if form directives buffer IME input until
 * the "compositionend" event occurs.
 * @publicApi
 */


var COMPOSITION_BUFFER_MODE = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('CompositionEventMode');

var DefaultValueAccessor = /*@__PURE__*/function () {
  var DefaultValueAccessor = /*#__PURE__*/function () {
    function DefaultValueAccessor(_renderer, _elementRef, _compositionMode) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, DefaultValueAccessor);

      this._renderer = _renderer;
      this._elementRef = _elementRef;
      this._compositionMode = _compositionMode;
      /**
       * The registered callback function called when an input event occurs on the input element.
       * @nodoc
       */

      this.onChange = function (_) {};
      /**
       * The registered callback function called when a blur event occurs on the input element.
       * @nodoc
       */


      this.onTouched = function () {};
      /** Whether the user is creating a composition string (IME events). */


      this._composing = false;

      if (this._compositionMode == null) {
        this._compositionMode = !_isAndroid();
      }
    }
    /**
     * Sets the "value" property on the input element.
     * @nodoc
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(DefaultValueAccessor, [{
      key: "writeValue",
      value: function writeValue(value) {
        var normalizedValue = value == null ? '' : value;

        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);
      }
      /**
       * Registers a function called when the control value changes.
       * @nodoc
       */

    }, {
      key: "registerOnChange",
      value: function registerOnChange(fn) {
        this.onChange = fn;
      }
      /**
       * Registers a function called when the control is touched.
       * @nodoc
       */

    }, {
      key: "registerOnTouched",
      value: function registerOnTouched(fn) {
        this.onTouched = fn;
      }
      /**
       * Sets the "disabled" property on the input element.
       * @nodoc
       */

    }, {
      key: "setDisabledState",
      value: function setDisabledState(isDisabled) {
        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
      }
      /** @internal */

    }, {
      key: "_handleInput",
      value: function _handleInput(value) {
        if (!this._compositionMode || this._compositionMode && !this._composing) {
          this.onChange(value);
        }
      }
      /** @internal */

    }, {
      key: "_compositionStart",
      value: function _compositionStart() {
        this._composing = true;
      }
      /** @internal */

    }, {
      key: "_compositionEnd",
      value: function _compositionEnd(value) {
        this._composing = false;
        this._compositionMode && this.onChange(value);
      }
    }]);

    return DefaultValueAccessor;
  }();

  DefaultValueAccessor.ɵfac = function DefaultValueAccessor_Factory(t) {
    return new (t || DefaultValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](COMPOSITION_BUFFER_MODE, 8));
  };

  DefaultValueAccessor.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: DefaultValueAccessor,
    selectors: [["input", "formControlName", "", 3, "type", "checkbox"], ["textarea", "formControlName", ""], ["input", "formControl", "", 3, "type", "checkbox"], ["textarea", "formControl", ""], ["input", "ngModel", "", 3, "type", "checkbox"], ["textarea", "ngModel", ""], ["", "ngDefaultControl", ""]],
    hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("input", function DefaultValueAccessor_input_HostBindingHandler($event) {
          return ctx._handleInput($event.target.value);
        })("blur", function DefaultValueAccessor_blur_HostBindingHandler() {
          return ctx.onTouched();
        })("compositionstart", function DefaultValueAccessor_compositionstart_HostBindingHandler() {
          return ctx._compositionStart();
        })("compositionend", function DefaultValueAccessor_compositionend_HostBindingHandler($event) {
          return ctx._compositionEnd($event.target.value);
        });
      }
    },
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([DEFAULT_VALUE_ACCESSOR])]
  });
  return DefaultValueAccessor;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function isEmptyInputValue(value) {
  // we don't check for string here so it also works with arrays
  return value == null || value.length === 0;
}

function hasValidLength(value) {
  // non-strict comparison is intentional, to check for both `null` and `undefined` values
  return value != null && typeof value.length === 'number';
}
/**
 * @description
 * An `InjectionToken` for registering additional synchronous validators used with
 * `AbstractControl`s.
 *
 * @see `NG_ASYNC_VALIDATORS`
 *
 * @usageNotes
 *
 * ### Providing a custom validator
 *
 * The following example registers a custom validator directive. Adding the validator to the
 * existing collection of validators requires the `multi: true` option.
 *
 * ```typescript
 * @Directive({
 *   selector: '[customValidator]',
 *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]
 * })
 * class CustomValidatorDirective implements Validator {
 *   validate(control: AbstractControl): ValidationErrors | null {
 *     return { 'custom': true };
 *   }
 * }
 * ```
 *
 * @publicApi
 */


var NG_VALIDATORS = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('NgValidators');
/**
 * @description
 * An `InjectionToken` for registering additional asynchronous validators used with
 * `AbstractControl`s.
 *
 * @see `NG_VALIDATORS`
 *
 * @publicApi
 */

var NG_ASYNC_VALIDATORS = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('NgAsyncValidators');
/**
 * A regular expression that matches valid e-mail addresses.
 *
 * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:
 * - `local-part` consists of one or more of the allowed characters (alphanumeric and some
 *   punctuation symbols).
 * - `local-part` cannot begin or end with a period (`.`).
 * - `local-part` cannot be longer than 64 characters.
 * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or
 *   `foo.com`.
 * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and
 *   periods (`.`)).
 * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).
 * - A `label` cannot be longer than 63 characters.
 * - The whole address cannot be longer than 254 characters.
 *
 * ## Implementation background
 *
 * This regexp was ported over from AngularJS (see there for git history):
 * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27
 * It is based on the
 * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with
 * some enhancements to incorporate more RFC rules (such as rules related to domain names and the
 * lengths of different parts of the address). The main differences from the WHATWG version are:
 *   - Disallow `local-part` to begin or end with a period (`.`).
 *   - Disallow `local-part` length to exceed 64 characters.
 *   - Disallow total address length to exceed 254 characters.
 *
 * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.
 */

var EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
/**
 * @description
 * Provides a set of built-in validators that can be used by form controls.
 *
 * A validator is a function that processes a `FormControl` or collection of
 * controls and returns an error map or null. A null map means that validation has passed.
 *
 * @see [Form Validation](/guide/form-validation)
 *
 * @publicApi
 */

var Validators = /*#__PURE__*/function () {
  function Validators() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, Validators);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(Validators, null, [{
    key: "min",

    /**
     * @description
     * Validator that requires the control's value to be greater than or equal to the provided number.
     * The validator exists only as a function and not as a directive.
     *
     * @usageNotes
     *
     * ### Validate against a minimum of 3
     *
     * ```typescript
     * const control = new FormControl(2, Validators.min(3));
     *
     * console.log(control.errors); // {min: {min: 3, actual: 2}}
     * ```
     *
     * @returns A validator function that returns an error map with the
     * `min` property if the validation check fails, otherwise `null`.
     *
     * @see `updateValueAndValidity()`
     *
     */
    value: function min(_min) {
      return function (control) {
        if (isEmptyInputValue(control.value) || isEmptyInputValue(_min)) {
          return null; // don't validate empty values to allow optional controls
        }

        var value = parseFloat(control.value); // Controls with NaN values after parsing should be treated as not having a
        // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min

        return !isNaN(value) && value < _min ? {
          'min': {
            'min': _min,
            'actual': control.value
          }
        } : null;
      };
    }
    /**
     * @description
     * Validator that requires the control's value to be less than or equal to the provided number.
     * The validator exists only as a function and not as a directive.
     *
     * @usageNotes
     *
     * ### Validate against a maximum of 15
     *
     * ```typescript
     * const control = new FormControl(16, Validators.max(15));
     *
     * console.log(control.errors); // {max: {max: 15, actual: 16}}
     * ```
     *
     * @returns A validator function that returns an error map with the
     * `max` property if the validation check fails, otherwise `null`.
     *
     * @see `updateValueAndValidity()`
     *
     */

  }, {
    key: "max",
    value: function max(_max) {
      return function (control) {
        if (isEmptyInputValue(control.value) || isEmptyInputValue(_max)) {
          return null; // don't validate empty values to allow optional controls
        }

        var value = parseFloat(control.value); // Controls with NaN values after parsing should be treated as not having a
        // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max

        return !isNaN(value) && value > _max ? {
          'max': {
            'max': _max,
            'actual': control.value
          }
        } : null;
      };
    }
    /**
     * @description
     * Validator that requires the control have a non-empty value.
     *
     * @usageNotes
     *
     * ### Validate that the field is non-empty
     *
     * ```typescript
     * const control = new FormControl('', Validators.required);
     *
     * console.log(control.errors); // {required: true}
     * ```
     *
     * @returns An error map with the `required` property
     * if the validation check fails, otherwise `null`.
     *
     * @see `updateValueAndValidity()`
     *
     */

  }, {
    key: "required",
    value: function required(control) {
      return isEmptyInputValue(control.value) ? {
        'required': true
      } : null;
    }
    /**
     * @description
     * Validator that requires the control's value be true. This validator is commonly
     * used for required checkboxes.
     *
     * @usageNotes
     *
     * ### Validate that the field value is true
     *
     * ```typescript
     * const control = new FormControl('', Validators.requiredTrue);
     *
     * console.log(control.errors); // {required: true}
     * ```
     *
     * @returns An error map that contains the `required` property
     * set to `true` if the validation check fails, otherwise `null`.
     *
     * @see `updateValueAndValidity()`
     *
     */

  }, {
    key: "requiredTrue",
    value: function requiredTrue(control) {
      return control.value === true ? null : {
        'required': true
      };
    }
    /**
     * @description
     * Validator that requires the control's value pass an email validation test.
     *
     * Tests the value using a [regular
     * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)
     * pattern suitable for common usecases. The pattern is based on the definition of a valid email
     * address in the [WHATWG HTML
     * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with
     * some enhancements to incorporate more RFC rules (such as rules related to domain names and the
     * lengths of different parts of the address).
     *
     * The differences from the WHATWG version include:
     * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).
     * - Disallow `local-part` to be longer than 64 characters.
     * - Disallow the whole address to be longer than 254 characters.
     *
     * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to
     * validate the value against a different pattern.
     *
     * @usageNotes
     *
     * ### Validate that the field matches a valid email pattern
     *
     * ```typescript
     * const control = new FormControl('bad@', Validators.email);
     *
     * console.log(control.errors); // {email: true}
     * ```
     *
     * @returns An error map with the `email` property
     * if the validation check fails, otherwise `null`.
     *
     * @see `updateValueAndValidity()`
     *
     */

  }, {
    key: "email",
    value: function email(control) {
      if (isEmptyInputValue(control.value)) {
        return null; // don't validate empty values to allow optional controls
      }

      return EMAIL_REGEXP.test(control.value) ? null : {
        'email': true
      };
    }
    /**
     * @description
     * Validator that requires the length of the control's value to be greater than or equal
     * to the provided minimum length. This validator is also provided by default if you use the
     * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used
     * only for types that have a numeric `length` property, such as strings or arrays. The
     * `minLength` validator logic is also not invoked for values when their `length` property is 0
     * (for example in case of an empty string or an empty array), to support optional controls. You
     * can use the standard `required` validator if empty values should not be considered valid.
     *
     * @usageNotes
     *
     * ### Validate that the field has a minimum of 3 characters
     *
     * ```typescript
     * const control = new FormControl('ng', Validators.minLength(3));
     *
     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}
     * ```
     *
     * ```html
     * <input minlength="5">
     * ```
     *
     * @returns A validator function that returns an error map with the
     * `minlength` if the validation check fails, otherwise `null`.
     *
     * @see `updateValueAndValidity()`
     *
     */

  }, {
    key: "minLength",
    value: function minLength(_minLength) {
      return function (control) {
        if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {
          // don't validate empty values to allow optional controls
          // don't validate values without `length` property
          return null;
        }

        return control.value.length < _minLength ? {
          'minlength': {
            'requiredLength': _minLength,
            'actualLength': control.value.length
          }
        } : null;
      };
    }
    /**
     * @description
     * Validator that requires the length of the control's value to be less than or equal
     * to the provided maximum length. This validator is also provided by default if you use the
     * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used
     * only for types that have a numeric `length` property, such as strings or arrays.
     *
     * @usageNotes
     *
     * ### Validate that the field has maximum of 5 characters
     *
     * ```typescript
     * const control = new FormControl('Angular', Validators.maxLength(5));
     *
     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}
     * ```
     *
     * ```html
     * <input maxlength="5">
     * ```
     *
     * @returns A validator function that returns an error map with the
     * `maxlength` property if the validation check fails, otherwise `null`.
     *
     * @see `updateValueAndValidity()`
     *
     */

  }, {
    key: "maxLength",
    value: function maxLength(_maxLength) {
      return function (control) {
        return hasValidLength(control.value) && control.value.length > _maxLength ? {
          'maxlength': {
            'requiredLength': _maxLength,
            'actualLength': control.value.length
          }
        } : null;
      };
    }
    /**
     * @description
     * Validator that requires the control's value to match a regex pattern. This validator is also
     * provided by default if you use the HTML5 `pattern` attribute.
     *
     * @usageNotes
     *
     * ### Validate that the field only contains letters or spaces
     *
     * ```typescript
     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));
     *
     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}
     * ```
     *
     * ```html
     * <input pattern="[a-zA-Z ]*">
     * ```
     *
     * ### Pattern matching with the global or sticky flag
     *
     * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`
     * can produce different results on the same input when validations are run consecutively. This is
     * due to how the behavior of `RegExp.prototype.test` is
     * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)
     * (`RegExp` preserves the index of the last match when the global or sticky flag is used).
     * Due to this behavior, it is recommended that when using
     * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky
     * flag enabled.
     *
     * ```typescript
     * // Not recommended (since the `g` flag is used)
     * const controlOne = new FormControl('1', Validators.pattern(/foo/g));
     *
     * // Good
     * const controlTwo = new FormControl('1', Validators.pattern(/foo/));
     * ```
     *
     * @param pattern A regular expression to be used as is to test the values, or a string.
     * If a string is passed, the `^` character is prepended and the `$` character is
     * appended to the provided string (if not already present), and the resulting regular
     * expression is used to test the values.
     *
     * @returns A validator function that returns an error map with the
     * `pattern` property if the validation check fails, otherwise `null`.
     *
     * @see `updateValueAndValidity()`
     *
     */

  }, {
    key: "pattern",
    value: function pattern(_pattern) {
      if (!_pattern) return Validators.nullValidator;
      var regex;
      var regexStr;

      if (typeof _pattern === 'string') {
        regexStr = '';
        if (_pattern.charAt(0) !== '^') regexStr += '^';
        regexStr += _pattern;
        if (_pattern.charAt(_pattern.length - 1) !== '$') regexStr += '$';
        regex = new RegExp(regexStr);
      } else {
        regexStr = _pattern.toString();
        regex = _pattern;
      }

      return function (control) {
        if (isEmptyInputValue(control.value)) {
          return null; // don't validate empty values to allow optional controls
        }

        var value = control.value;
        return regex.test(value) ? null : {
          'pattern': {
            'requiredPattern': regexStr,
            'actualValue': value
          }
        };
      };
    }
    /**
     * @description
     * Validator that performs no operation.
     *
     * @see `updateValueAndValidity()`
     *
     */

  }, {
    key: "nullValidator",
    value: function nullValidator(control) {
      return null;
    }
  }, {
    key: "compose",
    value: function compose(validators) {
      if (!validators) return null;
      var presentValidators = validators.filter(isPresent);
      if (presentValidators.length == 0) return null;
      return function (control) {
        return mergeErrors(executeValidators(control, presentValidators));
      };
    }
    /**
     * @description
     * Compose multiple async validators into a single function that returns the union
     * of the individual error objects for the provided control.
     *
     * @returns A validator function that returns an error map with the
     * merged error objects of the async validators if the validation check fails, otherwise `null`.
     *
     * @see `updateValueAndValidity()`
     *
     */

  }, {
    key: "composeAsync",
    value: function composeAsync(validators) {
      if (!validators) return null;
      var presentValidators = validators.filter(isPresent);
      if (presentValidators.length == 0) return null;
      return function (control) {
        var observables = executeValidators(control, presentValidators).map(toObservable);
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_9__["forkJoin"])(observables).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__["map"])(mergeErrors));
      };
    }
  }]);

  return Validators;
}();

function isPresent(o) {
  return o != null;
}

function toObservable(r) {
  var obs = Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵisPromise"])(r) ? Object(rxjs__WEBPACK_IMPORTED_MODULE_9__["from"])(r) : r;

  if (!Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵisObservable"])(obs) && (typeof ngDevMode === 'undefined' || ngDevMode)) {
    throw new Error("Expected validator to return Promise or Observable.");
  }

  return obs;
}

function mergeErrors(arrayOfErrors) {
  var res = {}; // Not using Array.reduce here due to a Chrome 80 bug
  // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982

  arrayOfErrors.forEach(function (errors) {
    res = errors != null ? Object.assign(Object.assign({}, res), errors) : res;
  });
  return Object.keys(res).length === 0 ? null : res;
}

function executeValidators(control, validators) {
  return validators.map(function (validator) {
    return validator(control);
  });
}

function isValidatorFn(validator) {
  return !validator.validate;
}
/**
 * Given the list of validators that may contain both functions as well as classes, return the list
 * of validator functions (convert validator classes into validator functions). This is needed to
 * have consistent structure in validators list before composing them.
 *
 * @param validators The set of validators that may contain validators both in plain function form
 *     as well as represented as a validator class.
 */


function normalizeValidators(validators) {
  return validators.map(function (validator) {
    return isValidatorFn(validator) ? validator : function (c) {
      return validator.validate(c);
    };
  });
}
/**
 * Merges synchronous validators into a single validator function (combined using
 * `Validators.compose`).
 */


function composeValidators(validators) {
  return validators != null ? Validators.compose(normalizeValidators(validators)) : null;
}
/**
 * Merges asynchronous validators into a single validator function (combined using
 * `Validators.composeAsync`).
 */


function composeAsyncValidators(validators) {
  return validators != null ? Validators.composeAsync(normalizeValidators(validators)) : null;
}
/**
 * Merges raw control validators with a given directive validator and returns the combined list of
 * validators as an array.
 */


function mergeValidators(controlValidators, dirValidator) {
  if (controlValidators === null) return [dirValidator];
  return Array.isArray(controlValidators) ? [].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__["default"])(controlValidators), [dirValidator]) : [controlValidators, dirValidator];
}
/**
 * Retrieves the list of raw synchronous validators attached to a given control.
 */


function getControlValidators(control) {
  return control._rawValidators;
}
/**
 * Retrieves the list of raw asynchronous validators attached to a given control.
 */


function getControlAsyncValidators(control) {
  return control._rawAsyncValidators;
}

var AbstractControlDirective = /*@__PURE__*/function () {
  var AbstractControlDirective = /*#__PURE__*/function () {
    function AbstractControlDirective() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, AbstractControlDirective);

      /**
       * Set of synchronous validators as they were provided while calling `setValidators` function.
       * @internal
       */
      this._rawValidators = [];
      /**
       * Set of asynchronous validators as they were provided while calling `setAsyncValidators`
       * function.
       * @internal
       */

      this._rawAsyncValidators = [];
      /*
       * The set of callbacks to be invoked when directive instance is being destroyed.
       */

      this._onDestroyCallbacks = [];
    }
    /**
     * @description
     * Reports the value of the control if it is present, otherwise null.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(AbstractControlDirective, [{
      key: "_setValidators",

      /**
       * Sets synchronous validators for this directive.
       * @internal
       */
      value: function _setValidators(validators) {
        this._rawValidators = validators || [];
        this._composedValidatorFn = composeValidators(this._rawValidators);
      }
      /**
       * Sets asynchronous validators for this directive.
       * @internal
       */

    }, {
      key: "_setAsyncValidators",
      value: function _setAsyncValidators(validators) {
        this._rawAsyncValidators = validators || [];
        this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);
      }
      /**
       * @description
       * Synchronous validator function composed of all the synchronous validators registered with this
       * directive.
       */

    }, {
      key: "_registerOnDestroy",

      /**
       * Internal function to register callbacks that should be invoked
       * when directive instance is being destroyed.
       * @internal
       */
      value: function _registerOnDestroy(fn) {
        this._onDestroyCallbacks.push(fn);
      }
      /**
       * Internal function to invoke all registered "on destroy" callbacks.
       * Note: calling this function also clears the list of callbacks.
       * @internal
       */

    }, {
      key: "_invokeOnDestroyCallbacks",
      value: function _invokeOnDestroyCallbacks() {
        this._onDestroyCallbacks.forEach(function (fn) {
          return fn();
        });

        this._onDestroyCallbacks = [];
      }
      /**
       * @description
       * Resets the control with the provided value if the control is present.
       */

    }, {
      key: "reset",
      value: function reset() {
        var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
        if (this.control) this.control.reset(value);
      }
      /**
       * @description
       * Reports whether the control with the given path has the error specified.
       *
       * @param errorCode The code of the error to check
       * @param path A list of control names that designates how to move from the current control
       * to the control that should be queried for errors.
       *
       * @usageNotes
       * For example, for the following `FormGroup`:
       *
       * ```
       * form = new FormGroup({
       *   address: new FormGroup({ street: new FormControl() })
       * });
       * ```
       *
       * The path to the 'street' control from the root form would be 'address' -> 'street'.
       *
       * It can be provided to this method in one of two formats:
       *
       * 1. An array of string control names, e.g. `['address', 'street']`
       * 1. A period-delimited list of control names in one string, e.g. `'address.street'`
       *
       * If no path is given, this method checks for the error on the current control.
       *
       * @returns whether the given error is present in the control at the given path.
       *
       * If the control is not present, false is returned.
       */

    }, {
      key: "hasError",
      value: function hasError(errorCode, path) {
        return this.control ? this.control.hasError(errorCode, path) : false;
      }
      /**
       * @description
       * Reports error data for the control with the given path.
       *
       * @param errorCode The code of the error to check
       * @param path A list of control names that designates how to move from the current control
       * to the control that should be queried for errors.
       *
       * @usageNotes
       * For example, for the following `FormGroup`:
       *
       * ```
       * form = new FormGroup({
       *   address: new FormGroup({ street: new FormControl() })
       * });
       * ```
       *
       * The path to the 'street' control from the root form would be 'address' -> 'street'.
       *
       * It can be provided to this method in one of two formats:
       *
       * 1. An array of string control names, e.g. `['address', 'street']`
       * 1. A period-delimited list of control names in one string, e.g. `'address.street'`
       *
       * @returns error data for that particular error. If the control or error is not present,
       * null is returned.
       */

    }, {
      key: "getError",
      value: function getError(errorCode, path) {
        return this.control ? this.control.getError(errorCode, path) : null;
      }
    }, {
      key: "value",
      get: function get() {
        return this.control ? this.control.value : null;
      }
      /**
       * @description
       * Reports whether the control is valid. A control is considered valid if no
       * validation errors exist with the current value.
       * If the control is not present, null is returned.
       */

    }, {
      key: "valid",
      get: function get() {
        return this.control ? this.control.valid : null;
      }
      /**
       * @description
       * Reports whether the control is invalid, meaning that an error exists in the input value.
       * If the control is not present, null is returned.
       */

    }, {
      key: "invalid",
      get: function get() {
        return this.control ? this.control.invalid : null;
      }
      /**
       * @description
       * Reports whether a control is pending, meaning that that async validation is occurring and
       * errors are not yet available for the input value. If the control is not present, null is
       * returned.
       */

    }, {
      key: "pending",
      get: function get() {
        return this.control ? this.control.pending : null;
      }
      /**
       * @description
       * Reports whether the control is disabled, meaning that the control is disabled
       * in the UI and is exempt from validation checks and excluded from aggregate
       * values of ancestor controls. If the control is not present, null is returned.
       */

    }, {
      key: "disabled",
      get: function get() {
        return this.control ? this.control.disabled : null;
      }
      /**
       * @description
       * Reports whether the control is enabled, meaning that the control is included in ancestor
       * calculations of validity or value. If the control is not present, null is returned.
       */

    }, {
      key: "enabled",
      get: function get() {
        return this.control ? this.control.enabled : null;
      }
      /**
       * @description
       * Reports the control's validation errors. If the control is not present, null is returned.
       */

    }, {
      key: "errors",
      get: function get() {
        return this.control ? this.control.errors : null;
      }
      /**
       * @description
       * Reports whether the control is pristine, meaning that the user has not yet changed
       * the value in the UI. If the control is not present, null is returned.
       */

    }, {
      key: "pristine",
      get: function get() {
        return this.control ? this.control.pristine : null;
      }
      /**
       * @description
       * Reports whether the control is dirty, meaning that the user has changed
       * the value in the UI. If the control is not present, null is returned.
       */

    }, {
      key: "dirty",
      get: function get() {
        return this.control ? this.control.dirty : null;
      }
      /**
       * @description
       * Reports whether the control is touched, meaning that the user has triggered
       * a `blur` event on it. If the control is not present, null is returned.
       */

    }, {
      key: "touched",
      get: function get() {
        return this.control ? this.control.touched : null;
      }
      /**
       * @description
       * Reports the validation status of the control. Possible values include:
       * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.
       * If the control is not present, null is returned.
       */

    }, {
      key: "status",
      get: function get() {
        return this.control ? this.control.status : null;
      }
      /**
       * @description
       * Reports whether the control is untouched, meaning that the user has not yet triggered
       * a `blur` event on it. If the control is not present, null is returned.
       */

    }, {
      key: "untouched",
      get: function get() {
        return this.control ? this.control.untouched : null;
      }
      /**
       * @description
       * Returns a multicasting observable that emits a validation status whenever it is
       * calculated for the control. If the control is not present, null is returned.
       */

    }, {
      key: "statusChanges",
      get: function get() {
        return this.control ? this.control.statusChanges : null;
      }
      /**
       * @description
       * Returns a multicasting observable of value changes for the control that emits every time the
       * value of the control changes in the UI or programmatically.
       * If the control is not present, null is returned.
       */

    }, {
      key: "valueChanges",
      get: function get() {
        return this.control ? this.control.valueChanges : null;
      }
      /**
       * @description
       * Returns an array that represents the path from the top-level form to this control.
       * Each index is the string name of the control on that level.
       */

    }, {
      key: "path",
      get: function get() {
        return null;
      }
    }, {
      key: "validator",
      get: function get() {
        return this._composedValidatorFn || null;
      }
      /**
       * @description
       * Asynchronous validator function composed of all the asynchronous validators registered with
       * this directive.
       */

    }, {
      key: "asyncValidator",
      get: function get() {
        return this._composedAsyncValidatorFn || null;
      }
    }]);

    return AbstractControlDirective;
  }();

  AbstractControlDirective.ɵfac = function AbstractControlDirective_Factory(t) {
    return new (t || AbstractControlDirective)();
  };

  AbstractControlDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: AbstractControlDirective
  });
  return AbstractControlDirective;
}();

var ControlContainer = /*@__PURE__*/function () {
  var ControlContainer = /*#__PURE__*/function (_AbstractControlDirec) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(ControlContainer, _AbstractControlDirec);

    var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(ControlContainer);

    function ControlContainer() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, ControlContainer);

      return _super.apply(this, arguments);
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(ControlContainer, [{
      key: "formDirective",

      /**
       * @description
       * The top-level form directive for the control.
       */
      get: function get() {
        return null;
      }
      /**
       * @description
       * The path to this group.
       */

    }, {
      key: "path",
      get: function get() {
        return null;
      }
    }]);

    return ControlContainer;
  }(AbstractControlDirective);

  ControlContainer.ɵfac = function ControlContainer_Factory(t) {
    return ɵControlContainer_BaseFactory(t || ControlContainer);
  };

  ControlContainer.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: ControlContainer,
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
  });
  return ControlContainer;
}();

var ɵControlContainer_BaseFactory =
/*@__PURE__*/

/*@__PURE__*/
_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](ControlContainer);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 * A base class that all `FormControl`-based directives extend. It binds a `FormControl`
 * object to a DOM element.
 *
 * @publicApi
 */

var NgControl = /*#__PURE__*/function (_AbstractControlDirec2) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(NgControl, _AbstractControlDirec2);

  var _super2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(NgControl);

  function NgControl() {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgControl);

    _this = _super2.apply(this, arguments);
    /**
     * @description
     * The parent form for the control.
     *
     * @internal
     */

    _this._parent = null;
    /**
     * @description
     * The name for the control
     */

    _this.name = null;
    /**
     * @description
     * The value accessor for the control
     */

    _this.valueAccessor = null;
    return _this;
  }

  return NgControl;
}(AbstractControlDirective);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var AbstractControlStatus = /*#__PURE__*/function () {
  function AbstractControlStatus(cd) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, AbstractControlStatus);

    this._cd = cd;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(AbstractControlStatus, [{
    key: "ngClassUntouched",
    get: function get() {
      return this._cd.control ? this._cd.control.untouched : false;
    }
  }, {
    key: "ngClassTouched",
    get: function get() {
      return this._cd.control ? this._cd.control.touched : false;
    }
  }, {
    key: "ngClassPristine",
    get: function get() {
      return this._cd.control ? this._cd.control.pristine : false;
    }
  }, {
    key: "ngClassDirty",
    get: function get() {
      return this._cd.control ? this._cd.control.dirty : false;
    }
  }, {
    key: "ngClassValid",
    get: function get() {
      return this._cd.control ? this._cd.control.valid : false;
    }
  }, {
    key: "ngClassInvalid",
    get: function get() {
      return this._cd.control ? this._cd.control.invalid : false;
    }
  }, {
    key: "ngClassPending",
    get: function get() {
      return this._cd.control ? this._cd.control.pending : false;
    }
  }]);

  return AbstractControlStatus;
}();

var ngControlStatusHost = {
  '[class.ng-untouched]': 'ngClassUntouched',
  '[class.ng-touched]': 'ngClassTouched',
  '[class.ng-pristine]': 'ngClassPristine',
  '[class.ng-dirty]': 'ngClassDirty',
  '[class.ng-valid]': 'ngClassValid',
  '[class.ng-invalid]': 'ngClassInvalid',
  '[class.ng-pending]': 'ngClassPending'
};

var NgControlStatus = /*@__PURE__*/function () {
  var NgControlStatus = /*#__PURE__*/function (_AbstractControlStatu) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(NgControlStatus, _AbstractControlStatu);

    var _super3 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(NgControlStatus);

    function NgControlStatus(cd) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgControlStatus);

      return _super3.call(this, cd);
    }

    return NgControlStatus;
  }(AbstractControlStatus);

  NgControlStatus.ɵfac = function NgControlStatus_Factory(t) {
    return new (t || NgControlStatus)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NgControl, 2));
  };

  NgControlStatus.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: NgControlStatus,
    selectors: [["", "formControlName", ""], ["", "ngModel", ""], ["", "formControl", ""]],
    hostVars: 14,
    hostBindings: function NgControlStatus_HostBindings(rf, ctx) {
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵclassProp"]("ng-untouched", ctx.ngClassUntouched)("ng-touched", ctx.ngClassTouched)("ng-pristine", ctx.ngClassPristine)("ng-dirty", ctx.ngClassDirty)("ng-valid", ctx.ngClassValid)("ng-invalid", ctx.ngClassInvalid)("ng-pending", ctx.ngClassPending);
      }
    },
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
  });
  return NgControlStatus;
}();

var NgControlStatusGroup = /*@__PURE__*/function () {
  var NgControlStatusGroup = /*#__PURE__*/function (_AbstractControlStatu2) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(NgControlStatusGroup, _AbstractControlStatu2);

    var _super4 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(NgControlStatusGroup);

    function NgControlStatusGroup(cd) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgControlStatusGroup);

      return _super4.call(this, cd);
    }

    return NgControlStatusGroup;
  }(AbstractControlStatus);

  NgControlStatusGroup.ɵfac = function NgControlStatusGroup_Factory(t) {
    return new (t || NgControlStatusGroup)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](ControlContainer, 2));
  };

  NgControlStatusGroup.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: NgControlStatusGroup,
    selectors: [["", "formGroupName", ""], ["", "formArrayName", ""], ["", "ngModelGroup", ""], ["", "formGroup", ""], ["form", 3, "ngNoForm", ""], ["", "ngForm", ""]],
    hostVars: 14,
    hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) {
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵclassProp"]("ng-untouched", ctx.ngClassUntouched)("ng-touched", ctx.ngClassTouched)("ng-pristine", ctx.ngClassPristine)("ng-dirty", ctx.ngClassDirty)("ng-valid", ctx.ngClassValid)("ng-invalid", ctx.ngClassInvalid)("ng-pending", ctx.ngClassPending);
      }
    },
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
  });
  return NgControlStatusGroup;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NUMBER_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return NumberValueAccessor;
  }),
  multi: true
};

var NumberValueAccessor = /*@__PURE__*/function () {
  var NumberValueAccessor = /*#__PURE__*/function () {
    function NumberValueAccessor(_renderer, _elementRef) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NumberValueAccessor);

      this._renderer = _renderer;
      this._elementRef = _elementRef;
      /**
       * The registered callback function called when a change or input event occurs on the input
       * element.
       * @nodoc
       */

      this.onChange = function (_) {};
      /**
       * The registered callback function called when a blur event occurs on the input element.
       * @nodoc
       */


      this.onTouched = function () {};
    }
    /**
     * Sets the "value" property on the input element.
     * @nodoc
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(NumberValueAccessor, [{
      key: "writeValue",
      value: function writeValue(value) {
        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null
        var normalizedValue = value == null ? '' : value;

        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);
      }
      /**
       * Registers a function called when the control value changes.
       * @nodoc
       */

    }, {
      key: "registerOnChange",
      value: function registerOnChange(fn) {
        this.onChange = function (value) {
          fn(value == '' ? null : parseFloat(value));
        };
      }
      /**
       * Registers a function called when the control is touched.
       * @nodoc
       */

    }, {
      key: "registerOnTouched",
      value: function registerOnTouched(fn) {
        this.onTouched = fn;
      }
      /**
       * Sets the "disabled" property on the input element.
       * @nodoc
       */

    }, {
      key: "setDisabledState",
      value: function setDisabledState(isDisabled) {
        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
      }
    }]);

    return NumberValueAccessor;
  }();

  NumberValueAccessor.ɵfac = function NumberValueAccessor_Factory(t) {
    return new (t || NumberValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]));
  };

  NumberValueAccessor.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: NumberValueAccessor,
    selectors: [["input", "type", "number", "formControlName", ""], ["input", "type", "number", "formControl", ""], ["input", "type", "number", "ngModel", ""]],
    hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("input", function NumberValueAccessor_input_HostBindingHandler($event) {
          return ctx.onChange($event.target.value);
        })("blur", function NumberValueAccessor_blur_HostBindingHandler() {
          return ctx.onTouched();
        });
      }
    },
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([NUMBER_VALUE_ACCESSOR])]
  });
  return NumberValueAccessor;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var RADIO_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return RadioControlValueAccessor;
  }),
  multi: true
};

function throwNameError() {
  throw new Error("\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    ");
}

var RadioControlRegistry = /*@__PURE__*/function () {
  var RadioControlRegistry = /*#__PURE__*/function () {
    function RadioControlRegistry() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, RadioControlRegistry);

      this._accessors = [];
    }
    /**
     * @description
     * Adds a control to the internal registry. For internal use only.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(RadioControlRegistry, [{
      key: "add",
      value: function add(control, accessor) {
        this._accessors.push([control, accessor]);
      }
      /**
       * @description
       * Removes a control from the internal registry. For internal use only.
       */

    }, {
      key: "remove",
      value: function remove(accessor) {
        for (var i = this._accessors.length - 1; i >= 0; --i) {
          if (this._accessors[i][1] === accessor) {
            this._accessors.splice(i, 1);

            return;
          }
        }
      }
      /**
       * @description
       * Selects a radio button. For internal use only.
       */

    }, {
      key: "select",
      value: function select(accessor) {
        var _this2 = this;

        this._accessors.forEach(function (c) {
          if (_this2._isSameGroup(c, accessor) && c[1] !== accessor) {
            c[1].fireUncheck(accessor.value);
          }
        });
      }
    }, {
      key: "_isSameGroup",
      value: function _isSameGroup(controlPair, accessor) {
        if (!controlPair[0].control) return false;
        return controlPair[0]._parent === accessor._control._parent && controlPair[1].name === accessor.name;
      }
    }]);

    return RadioControlRegistry;
  }();

  RadioControlRegistry.ɵfac = function RadioControlRegistry_Factory(t) {
    return new (t || RadioControlRegistry)();
  };

  RadioControlRegistry.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"]({
    token: RadioControlRegistry,
    factory: RadioControlRegistry.ɵfac
  });
  return RadioControlRegistry;
}();

var RadioControlValueAccessor = /*@__PURE__*/function () {
  var RadioControlValueAccessor = /*#__PURE__*/function () {
    function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, RadioControlValueAccessor);

      this._renderer = _renderer;
      this._elementRef = _elementRef;
      this._registry = _registry;
      this._injector = _injector;
      /**
       * The registered callback function called when a change event occurs on the input element.
       * @nodoc
       */

      this.onChange = function () {};
      /**
       * The registered callback function called when a blur event occurs on the input element.
       * @nodoc
       */


      this.onTouched = function () {};
    }
    /** @nodoc */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(RadioControlValueAccessor, [{
      key: "ngOnInit",
      value: function ngOnInit() {
        this._control = this._injector.get(NgControl);

        this._checkName();

        this._registry.add(this._control, this);
      }
      /** @nodoc */

    }, {
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        this._registry.remove(this);
      }
      /**
       * Sets the "checked" property value on the radio input element.
       * @nodoc
       */

    }, {
      key: "writeValue",
      value: function writeValue(value) {
        this._state = value === this.value;

        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);
      }
      /**
       * Registers a function called when the control value changes.
       * @nodoc
       */

    }, {
      key: "registerOnChange",
      value: function registerOnChange(fn) {
        var _this3 = this;

        this._fn = fn;

        this.onChange = function () {
          fn(_this3.value);

          _this3._registry.select(_this3);
        };
      }
      /**
       * Sets the "value" on the radio input element and unchecks it.
       *
       * @param value
       */

    }, {
      key: "fireUncheck",
      value: function fireUncheck(value) {
        this.writeValue(value);
      }
      /**
       * Registers a function called when the control is touched.
       * @nodoc
       */

    }, {
      key: "registerOnTouched",
      value: function registerOnTouched(fn) {
        this.onTouched = fn;
      }
      /**
       * Sets the "disabled" property on the input element.
       * @nodoc
       */

    }, {
      key: "setDisabledState",
      value: function setDisabledState(isDisabled) {
        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
      }
    }, {
      key: "_checkName",
      value: function _checkName() {
        if (this.name && this.formControlName && this.name !== this.formControlName && (typeof ngDevMode === 'undefined' || ngDevMode)) {
          throwNameError();
        }

        if (!this.name && this.formControlName) this.name = this.formControlName;
      }
    }]);

    return RadioControlValueAccessor;
  }();

  RadioControlValueAccessor.ɵfac = function RadioControlValueAccessor_Factory(t) {
    return new (t || RadioControlValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](RadioControlRegistry), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["Injector"]));
  };

  RadioControlValueAccessor.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: RadioControlValueAccessor,
    selectors: [["input", "type", "radio", "formControlName", ""], ["input", "type", "radio", "formControl", ""], ["input", "type", "radio", "ngModel", ""]],
    hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("change", function RadioControlValueAccessor_change_HostBindingHandler() {
          return ctx.onChange();
        })("blur", function RadioControlValueAccessor_blur_HostBindingHandler() {
          return ctx.onTouched();
        });
      }
    },
    inputs: {
      name: "name",
      formControlName: "formControlName",
      value: "value"
    },
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([RADIO_VALUE_ACCESSOR])]
  });
  return RadioControlValueAccessor;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var RANGE_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return RangeValueAccessor;
  }),
  multi: true
};

var RangeValueAccessor = /*@__PURE__*/function () {
  var RangeValueAccessor = /*#__PURE__*/function () {
    function RangeValueAccessor(_renderer, _elementRef) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, RangeValueAccessor);

      this._renderer = _renderer;
      this._elementRef = _elementRef;
      /**
       * The registered callback function called when a change or input event occurs on the input
       * element.
       * @nodoc
       */

      this.onChange = function (_) {};
      /**
       * The registered callback function called when a blur event occurs on the input element.
       * @nodoc
       */


      this.onTouched = function () {};
    }
    /**
     * Sets the "value" property on the input element.
     * @nodoc
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(RangeValueAccessor, [{
      key: "writeValue",
      value: function writeValue(value) {
        this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));
      }
      /**
       * Registers a function called when the control value changes.
       * @nodoc
       */

    }, {
      key: "registerOnChange",
      value: function registerOnChange(fn) {
        this.onChange = function (value) {
          fn(value == '' ? null : parseFloat(value));
        };
      }
      /**
       * Registers a function called when the control is touched.
       * @nodoc
       */

    }, {
      key: "registerOnTouched",
      value: function registerOnTouched(fn) {
        this.onTouched = fn;
      }
      /**
       * Sets the "disabled" property on the range input element.
       * @nodoc
       */

    }, {
      key: "setDisabledState",
      value: function setDisabledState(isDisabled) {
        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
      }
    }]);

    return RangeValueAccessor;
  }();

  RangeValueAccessor.ɵfac = function RangeValueAccessor_Factory(t) {
    return new (t || RangeValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]));
  };

  RangeValueAccessor.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: RangeValueAccessor,
    selectors: [["input", "type", "range", "formControlName", ""], ["input", "type", "range", "formControl", ""], ["input", "type", "range", "ngModel", ""]],
    hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("change", function RangeValueAccessor_change_HostBindingHandler($event) {
          return ctx.onChange($event.target.value);
        })("input", function RangeValueAccessor_input_HostBindingHandler($event) {
          return ctx.onChange($event.target.value);
        })("blur", function RangeValueAccessor_blur_HostBindingHandler() {
          return ctx.onTouched();
        });
      }
    },
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([RANGE_VALUE_ACCESSOR])]
  });
  return RangeValueAccessor;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var FormErrorExamples = {
  formControlName: "\n    <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });",
  formGroupName: "\n    <div [formGroup]=\"myGroup\">\n       <div formGroupName=\"person\">\n          <input formControlName=\"firstName\">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });",
  formArrayName: "\n    <div [formGroup]=\"myGroup\">\n      <div formArrayName=\"cities\">\n        <div *ngFor=\"let city of cityArray.controls; index as i\">\n          <input [formControlName]=\"i\">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl('SF')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });",
  ngModelGroup: "\n    <form>\n       <div ngModelGroup=\"person\">\n          <input [(ngModel)]=\"person.name\" name=\"firstName\">\n       </div>\n    </form>",
  ngModelWithFormGroup: "\n    <div [formGroup]=\"myGroup\">\n       <input formControlName=\"firstName\">\n       <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n    </div>\n  "
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var ReactiveErrors = /*#__PURE__*/function () {
  function ReactiveErrors() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, ReactiveErrors);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(ReactiveErrors, null, [{
    key: "controlParentException",
    value: function controlParentException() {
      throw new Error("formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ".concat(FormErrorExamples.formControlName));
    }
  }, {
    key: "ngModelGroupException",
    value: function ngModelGroupException() {
      throw new Error("formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        ".concat(FormErrorExamples.formGroupName, "\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        ").concat(FormErrorExamples.ngModelGroup));
    }
  }, {
    key: "missingFormException",
    value: function missingFormException() {
      throw new Error("formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       ".concat(FormErrorExamples.formControlName));
    }
  }, {
    key: "groupParentException",
    value: function groupParentException() {
      throw new Error("formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ".concat(FormErrorExamples.formGroupName));
    }
  }, {
    key: "arrayParentException",
    value: function arrayParentException() {
      throw new Error("formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        ".concat(FormErrorExamples.formArrayName));
    }
  }, {
    key: "disabledAttrWarning",
    value: function disabledAttrWarning() {
      console.warn("\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n\n      Example:\n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    ");
    }
  }, {
    key: "ngModelWarning",
    value: function ngModelWarning(directiveName) {
      console.warn("\n    It looks like you're using ngModel on the same form field as ".concat(directiveName, ".\n    Support for using the ngModel input property and ngModelChange event with\n    reactive form directives has been deprecated in Angular v6 and will be removed\n    in a future version of Angular.\n\n    For more information on this, see our API docs here:\n    https://angular.io/api/forms/").concat(directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName', "#use-with-ngmodel\n    "));
    }
  }]);

  return ReactiveErrors;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SELECT_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return SelectControlValueAccessor;
  }),
  multi: true
};

function _buildValueString(id, value) {
  if (id == null) return "".concat(value);
  if (value && typeof value === 'object') value = 'Object';
  return "".concat(id, ": ").concat(value).slice(0, 50);
}

function _extractId(valueString) {
  return valueString.split(':')[0];
}

var SelectControlValueAccessor = /*@__PURE__*/function () {
  var SelectControlValueAccessor = /*#__PURE__*/function () {
    function SelectControlValueAccessor(_renderer, _elementRef) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, SelectControlValueAccessor);

      this._renderer = _renderer;
      this._elementRef = _elementRef;
      /** @internal */

      this._optionMap = new Map();
      /** @internal */

      this._idCounter = 0;
      /**
       * The registered callback function called when a change event occurs on the input element.
       * @nodoc
       */

      this.onChange = function (_) {};
      /**
       * The registered callback function called when a blur event occurs on the input element.
       * @nodoc
       */


      this.onTouched = function () {};

      this._compareWith = Object.is;
    }
    /**
     * @description
     * Tracks the option comparison algorithm for tracking identities when
     * checking for changes.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(SelectControlValueAccessor, [{
      key: "writeValue",

      /**
       * Sets the "value" property on the input element. The "selectedIndex"
       * property is also set if an ID is provided on the option element.
       * @nodoc
       */
      value: function writeValue(value) {
        this.value = value;

        var id = this._getOptionId(value);

        if (id == null) {
          this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);
        }

        var valueString = _buildValueString(id, value);

        this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);
      }
      /**
       * Registers a function called when the control value changes.
       * @nodoc
       */

    }, {
      key: "registerOnChange",
      value: function registerOnChange(fn) {
        var _this4 = this;

        this.onChange = function (valueString) {
          _this4.value = _this4._getOptionValue(valueString);
          fn(_this4.value);
        };
      }
      /**
       * Registers a function called when the control is touched.
       * @nodoc
       */

    }, {
      key: "registerOnTouched",
      value: function registerOnTouched(fn) {
        this.onTouched = fn;
      }
      /**
       * Sets the "disabled" property on the select input element.
       * @nodoc
       */

    }, {
      key: "setDisabledState",
      value: function setDisabledState(isDisabled) {
        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
      }
      /** @internal */

    }, {
      key: "_registerOption",
      value: function _registerOption() {
        return (this._idCounter++).toString();
      }
      /** @internal */

    }, {
      key: "_getOptionId",
      value: function _getOptionId(value) {
        for (var _i = 0, _Array$from = Array.from(this._optionMap.keys()); _i < _Array$from.length; _i++) {
          var id = _Array$from[_i];
          if (this._compareWith(this._optionMap.get(id), value)) return id;
        }

        return null;
      }
      /** @internal */

    }, {
      key: "_getOptionValue",
      value: function _getOptionValue(valueString) {
        var id = _extractId(valueString);

        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;
      }
    }, {
      key: "compareWith",
      set: function set(fn) {
        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {
          throw new Error("compareWith must be a function, but received ".concat(JSON.stringify(fn)));
        }

        this._compareWith = fn;
      }
    }]);

    return SelectControlValueAccessor;
  }();

  SelectControlValueAccessor.ɵfac = function SelectControlValueAccessor_Factory(t) {
    return new (t || SelectControlValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]));
  };

  SelectControlValueAccessor.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: SelectControlValueAccessor,
    selectors: [["select", "formControlName", "", 3, "multiple", ""], ["select", "formControl", "", 3, "multiple", ""], ["select", "ngModel", "", 3, "multiple", ""]],
    hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("change", function SelectControlValueAccessor_change_HostBindingHandler($event) {
          return ctx.onChange($event.target.value);
        })("blur", function SelectControlValueAccessor_blur_HostBindingHandler() {
          return ctx.onTouched();
        });
      }
    },
    inputs: {
      compareWith: "compareWith"
    },
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([SELECT_VALUE_ACCESSOR])]
  });
  return SelectControlValueAccessor;
}();

var NgSelectOption = /*@__PURE__*/function () {
  var NgSelectOption = /*#__PURE__*/function () {
    function NgSelectOption(_element, _renderer, _select) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgSelectOption);

      this._element = _element;
      this._renderer = _renderer;
      this._select = _select;
      if (this._select) this.id = this._select._registerOption();
    }
    /**
     * @description
     * Tracks the value bound to the option element. Unlike the value binding,
     * ngValue supports binding to objects.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(NgSelectOption, [{
      key: "_setElementValue",

      /** @internal */
      value: function _setElementValue(value) {
        this._renderer.setProperty(this._element.nativeElement, 'value', value);
      }
      /** @nodoc */

    }, {
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        if (this._select) {
          this._select._optionMap.delete(this.id);

          this._select.writeValue(this._select.value);
        }
      }
    }, {
      key: "ngValue",
      set: function set(value) {
        if (this._select == null) return;

        this._select._optionMap.set(this.id, value);

        this._setElementValue(_buildValueString(this.id, value));

        this._select.writeValue(this._select.value);
      }
      /**
       * @description
       * Tracks simple string values bound to the option element.
       * For objects, use the `ngValue` input binding.
       */

    }, {
      key: "value",
      set: function set(value) {
        this._setElementValue(value);

        if (this._select) this._select.writeValue(this._select.value);
      }
    }]);

    return NgSelectOption;
  }();

  NgSelectOption.ɵfac = function NgSelectOption_Factory(t) {
    return new (t || NgSelectOption)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](SelectControlValueAccessor, 9));
  };

  NgSelectOption.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: NgSelectOption,
    selectors: [["option"]],
    inputs: {
      ngValue: "ngValue",
      value: "value"
    }
  });
  return NgSelectOption;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SELECT_MULTIPLE_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return SelectMultipleControlValueAccessor;
  }),
  multi: true
};

function _buildValueString$1(id, value) {
  if (id == null) return "".concat(value);
  if (typeof value === 'string') value = "'".concat(value, "'");
  if (value && typeof value === 'object') value = 'Object';
  return "".concat(id, ": ").concat(value).slice(0, 50);
}

function _extractId$1(valueString) {
  return valueString.split(':')[0];
}
/** Mock interface for HTMLCollection */


var HTMLCollection = function HTMLCollection() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, HTMLCollection);
};

var SelectMultipleControlValueAccessor = /*@__PURE__*/function () {
  var SelectMultipleControlValueAccessor = /*#__PURE__*/function () {
    function SelectMultipleControlValueAccessor(_renderer, _elementRef) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, SelectMultipleControlValueAccessor);

      this._renderer = _renderer;
      this._elementRef = _elementRef;
      /** @internal */

      this._optionMap = new Map();
      /** @internal */

      this._idCounter = 0;
      /**
       * The registered callback function called when a change event occurs on the input element.
       * @nodoc
       */

      this.onChange = function (_) {};
      /**
       * The registered callback function called when a blur event occurs on the input element.
       * @nodoc
       */


      this.onTouched = function () {};

      this._compareWith = Object.is;
    }
    /**
     * @description
     * Tracks the option comparison algorithm for tracking identities when
     * checking for changes.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(SelectMultipleControlValueAccessor, [{
      key: "writeValue",

      /**
       * Sets the "value" property on one or of more of the select's options.
       * @nodoc
       */
      value: function writeValue(value) {
        var _this5 = this;

        this.value = value;
        var optionSelectedStateSetter;

        if (Array.isArray(value)) {
          // convert values to ids
          var ids = value.map(function (v) {
            return _this5._getOptionId(v);
          });

          optionSelectedStateSetter = function optionSelectedStateSetter(opt, o) {
            opt._setSelected(ids.indexOf(o.toString()) > -1);
          };
        } else {
          optionSelectedStateSetter = function optionSelectedStateSetter(opt, o) {
            opt._setSelected(false);
          };
        }

        this._optionMap.forEach(optionSelectedStateSetter);
      }
      /**
       * Registers a function called when the control value changes
       * and writes an array of the selected options.
       * @nodoc
       */

    }, {
      key: "registerOnChange",
      value: function registerOnChange(fn) {
        var _this6 = this;

        this.onChange = function (_) {
          var selected = [];

          if (_.selectedOptions !== undefined) {
            var options = _.selectedOptions;

            for (var i = 0; i < options.length; i++) {
              var opt = options.item(i);

              var val = _this6._getOptionValue(opt.value);

              selected.push(val);
            }
          } // Degrade on IE
          else {
              var _options = _.options;

              for (var _i2 = 0; _i2 < _options.length; _i2++) {
                var _opt = _options.item(_i2);

                if (_opt.selected) {
                  var _val = _this6._getOptionValue(_opt.value);

                  selected.push(_val);
                }
              }
            }

          _this6.value = selected;
          fn(selected);
        };
      }
      /**
       * Registers a function called when the control is touched.
       * @nodoc
       */

    }, {
      key: "registerOnTouched",
      value: function registerOnTouched(fn) {
        this.onTouched = fn;
      }
      /**
       * Sets the "disabled" property on the select input element.
       * @nodoc
       */

    }, {
      key: "setDisabledState",
      value: function setDisabledState(isDisabled) {
        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
      }
      /** @internal */

    }, {
      key: "_registerOption",
      value: function _registerOption(value) {
        var id = (this._idCounter++).toString();

        this._optionMap.set(id, value);

        return id;
      }
      /** @internal */

    }, {
      key: "_getOptionId",
      value: function _getOptionId(value) {
        for (var _i3 = 0, _Array$from2 = Array.from(this._optionMap.keys()); _i3 < _Array$from2.length; _i3++) {
          var id = _Array$from2[_i3];
          if (this._compareWith(this._optionMap.get(id)._value, value)) return id;
        }

        return null;
      }
      /** @internal */

    }, {
      key: "_getOptionValue",
      value: function _getOptionValue(valueString) {
        var id = _extractId$1(valueString);

        return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;
      }
    }, {
      key: "compareWith",
      set: function set(fn) {
        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {
          throw new Error("compareWith must be a function, but received ".concat(JSON.stringify(fn)));
        }

        this._compareWith = fn;
      }
    }]);

    return SelectMultipleControlValueAccessor;
  }();

  SelectMultipleControlValueAccessor.ɵfac = function SelectMultipleControlValueAccessor_Factory(t) {
    return new (t || SelectMultipleControlValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]));
  };

  SelectMultipleControlValueAccessor.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: SelectMultipleControlValueAccessor,
    selectors: [["select", "multiple", "", "formControlName", ""], ["select", "multiple", "", "formControl", ""], ["select", "multiple", "", "ngModel", ""]],
    hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("change", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) {
          return ctx.onChange($event.target);
        })("blur", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() {
          return ctx.onTouched();
        });
      }
    },
    inputs: {
      compareWith: "compareWith"
    },
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([SELECT_MULTIPLE_VALUE_ACCESSOR])]
  });
  return SelectMultipleControlValueAccessor;
}();

var ɵNgSelectMultipleOption = /*@__PURE__*/function () {
  var ɵNgSelectMultipleOption = /*#__PURE__*/function () {
    function ɵNgSelectMultipleOption(_element, _renderer, _select) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, ɵNgSelectMultipleOption);

      this._element = _element;
      this._renderer = _renderer;
      this._select = _select;

      if (this._select) {
        this.id = this._select._registerOption(this);
      }
    }
    /**
     * @description
     * Tracks the value bound to the option element. Unlike the value binding,
     * ngValue supports binding to objects.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(ɵNgSelectMultipleOption, [{
      key: "_setElementValue",

      /** @internal */
      value: function _setElementValue(value) {
        this._renderer.setProperty(this._element.nativeElement, 'value', value);
      }
      /** @internal */

    }, {
      key: "_setSelected",
      value: function _setSelected(selected) {
        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);
      }
      /** @nodoc */

    }, {
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        if (this._select) {
          this._select._optionMap.delete(this.id);

          this._select.writeValue(this._select.value);
        }
      }
    }, {
      key: "ngValue",
      set: function set(value) {
        if (this._select == null) return;
        this._value = value;

        this._setElementValue(_buildValueString$1(this.id, value));

        this._select.writeValue(this._select.value);
      }
      /**
       * @description
       * Tracks simple string values bound to the option element.
       * For objects, use the `ngValue` input binding.
       */

    }, {
      key: "value",
      set: function set(value) {
        if (this._select) {
          this._value = value;

          this._setElementValue(_buildValueString$1(this.id, value));

          this._select.writeValue(this._select.value);
        } else {
          this._setElementValue(value);
        }
      }
    }]);

    return ɵNgSelectMultipleOption;
  }();

  ɵNgSelectMultipleOption.ɵfac = function ɵNgSelectMultipleOption_Factory(t) {
    return new (t || ɵNgSelectMultipleOption)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](SelectMultipleControlValueAccessor, 9));
  };

  ɵNgSelectMultipleOption.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: ɵNgSelectMultipleOption,
    selectors: [["option"]],
    inputs: {
      ngValue: "ngValue",
      value: "value"
    }
  });
  return ɵNgSelectMultipleOption;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function controlPath(name, parent) {
  return [].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__["default"])(parent.path), [name]);
}

function setUpControl(control, dir) {
  if (typeof ngDevMode === 'undefined' || ngDevMode) {
    if (!control) _throwError(dir, 'Cannot find control with');
    if (!dir.valueAccessor) _throwError(dir, 'No value accessor for form control with');
  }

  setUpValidators(control, dir,
  /* handleOnValidatorChange */
  true);
  dir.valueAccessor.writeValue(control.value);
  setUpViewChangePipeline(control, dir);
  setUpModelChangePipeline(control, dir);
  setUpBlurPipeline(control, dir);
  setUpDisabledChangeHandler(control, dir);
}

function cleanUpControl(control, dir) {
  var noop = function noop() {
    if (typeof ngDevMode === 'undefined' || ngDevMode) {
      _noControlError(dir);
    }
  };

  dir.valueAccessor.registerOnChange(noop);
  dir.valueAccessor.registerOnTouched(noop);
  cleanUpValidators(control, dir,
  /* handleOnValidatorChange */
  true);

  if (control) {
    dir._invokeOnDestroyCallbacks();

    control._registerOnCollectionChange(function () {});
  }
}

function registerOnValidatorChange(validators, onChange) {
  validators.forEach(function (validator) {
    if (validator.registerOnValidatorChange) validator.registerOnValidatorChange(onChange);
  });
}
/**
 * Sets up disabled change handler function on a given form control if ControlValueAccessor
 * associated with a given directive instance supports the `setDisabledState` call.
 *
 * @param control Form control where disabled change handler should be setup.
 * @param dir Corresponding directive instance associated with this control.
 */


function setUpDisabledChangeHandler(control, dir) {
  if (dir.valueAccessor.setDisabledState) {
    var onDisabledChange = function onDisabledChange(isDisabled) {
      dir.valueAccessor.setDisabledState(isDisabled);
    };

    control.registerOnDisabledChange(onDisabledChange); // Register a callback function to cleanup disabled change handler
    // from a control instance when a directive is destroyed.

    dir._registerOnDestroy(function () {
      control._unregisterOnDisabledChange(onDisabledChange);
    });
  }
}
/**
 * Sets up sync and async directive validators on provided form control.
 * This function merges validators from the directive into the validators of the control.
 *
 * @param control Form control where directive validators should be setup.
 * @param dir Directive instance that contains validators to be setup.
 * @param handleOnValidatorChange Flag that determines whether directive validators should be setup
 *     to handle validator input change.
 */


function setUpValidators(control, dir, handleOnValidatorChange) {
  var validators = getControlValidators(control);

  if (dir.validator !== null) {
    control.setValidators(mergeValidators(validators, dir.validator));
  } else if (typeof validators === 'function') {
    // If sync validators are represented by a single validator function, we force the
    // `Validators.compose` call to happen by executing the `setValidators` function with
    // an array that contains that function. We need this to avoid possible discrepancies in
    // validators behavior, so sync validators are always processed by the `Validators.compose`.
    // Note: we should consider moving this logic inside the `setValidators` function itself, so we
    // have consistent behavior on AbstractControl API level. The same applies to the async
    // validators logic below.
    control.setValidators([validators]);
  }

  var asyncValidators = getControlAsyncValidators(control);

  if (dir.asyncValidator !== null) {
    control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));
  } else if (typeof asyncValidators === 'function') {
    control.setAsyncValidators([asyncValidators]);
  } // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4


  if (handleOnValidatorChange) {
    var onValidatorChange = function onValidatorChange() {
      return control.updateValueAndValidity();
    };

    registerOnValidatorChange(dir._rawValidators, onValidatorChange);
    registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);
  }
}
/**
 * Cleans up sync and async directive validators on provided form control.
 * This function reverts the setup performed by the `setUpValidators` function, i.e.
 * removes directive-specific validators from a given control instance.
 *
 * @param control Form control from where directive validators should be removed.
 * @param dir Directive instance that contains validators to be removed.
 * @param handleOnValidatorChange Flag that determines whether directive validators should also be
 *     cleaned up to stop handling validator input change (if previously configured to do so).
 */


function cleanUpValidators(control, dir, handleOnValidatorChange) {
  if (control !== null) {
    if (dir.validator !== null) {
      var validators = getControlValidators(control);

      if (Array.isArray(validators) && validators.length > 0) {
        // Filter out directive validator function.
        control.setValidators(validators.filter(function (validator) {
          return validator !== dir.validator;
        }));
      }
    }

    if (dir.asyncValidator !== null) {
      var asyncValidators = getControlAsyncValidators(control);

      if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {
        // Filter out directive async validator function.
        control.setAsyncValidators(asyncValidators.filter(function (asyncValidator) {
          return asyncValidator !== dir.asyncValidator;
        }));
      }
    }
  }

  if (handleOnValidatorChange) {
    // Clear onValidatorChange callbacks by providing a noop function.
    var noop = function noop() {};

    registerOnValidatorChange(dir._rawValidators, noop);
    registerOnValidatorChange(dir._rawAsyncValidators, noop);
  }
}

function setUpViewChangePipeline(control, dir) {
  dir.valueAccessor.registerOnChange(function (newValue) {
    control._pendingValue = newValue;
    control._pendingChange = true;
    control._pendingDirty = true;
    if (control.updateOn === 'change') updateControl(control, dir);
  });
}

function setUpBlurPipeline(control, dir) {
  dir.valueAccessor.registerOnTouched(function () {
    control._pendingTouched = true;
    if (control.updateOn === 'blur' && control._pendingChange) updateControl(control, dir);
    if (control.updateOn !== 'submit') control.markAsTouched();
  });
}

function updateControl(control, dir) {
  if (control._pendingDirty) control.markAsDirty();
  control.setValue(control._pendingValue, {
    emitModelToViewChange: false
  });
  dir.viewToModelUpdate(control._pendingValue);
  control._pendingChange = false;
}

function setUpModelChangePipeline(control, dir) {
  var onChange = function onChange(newValue, emitModelEvent) {
    // control -> view
    dir.valueAccessor.writeValue(newValue); // control -> ngModel

    if (emitModelEvent) dir.viewToModelUpdate(newValue);
  };

  control.registerOnChange(onChange); // Register a callback function to cleanup onChange handler
  // from a control instance when a directive is destroyed.

  dir._registerOnDestroy(function () {
    control._unregisterOnChange(onChange);
  });
}

function setUpFormContainer(control, dir) {
  if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'Cannot find control with');
  setUpValidators(control, dir,
  /* handleOnValidatorChange */
  false);
}

function _noControlError(dir) {
  return _throwError(dir, 'There is no FormControl instance attached to form control element with');
}

function _throwError(dir, message) {
  var messageEnd;

  if (dir.path.length > 1) {
    messageEnd = "path: '".concat(dir.path.join(' -> '), "'");
  } else if (dir.path[0]) {
    messageEnd = "name: '".concat(dir.path, "'");
  } else {
    messageEnd = 'unspecified name attribute';
  }

  throw new Error("".concat(message, " ").concat(messageEnd));
}

function isPropertyUpdated(changes, viewModel) {
  if (!changes.hasOwnProperty('model')) return false;
  var change = changes['model'];
  if (change.isFirstChange()) return true;
  return !Object.is(viewModel, change.currentValue);
}

var BUILTIN_ACCESSORS = [CheckboxControlValueAccessor, RangeValueAccessor, NumberValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor];

function isBuiltInAccessor(valueAccessor) {
  return BUILTIN_ACCESSORS.some(function (a) {
    return valueAccessor.constructor === a;
  });
}

function syncPendingControls(form, directives) {
  form._syncPendingControls();

  directives.forEach(function (dir) {
    var control = dir.control;

    if (control.updateOn === 'submit' && control._pendingChange) {
      dir.viewToModelUpdate(control._pendingValue);
      control._pendingChange = false;
    }
  });
} // TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented


function selectValueAccessor(dir, valueAccessors) {
  if (!valueAccessors) return null;
  if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'Value accessor was not provided as an array for form control with');
  var defaultAccessor = undefined;
  var builtinAccessor = undefined;
  var customAccessor = undefined;
  valueAccessors.forEach(function (v) {
    if (v.constructor === DefaultValueAccessor) {
      defaultAccessor = v;
    } else if (isBuiltInAccessor(v)) {
      if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one built-in value accessor matches form control with');
      builtinAccessor = v;
    } else {
      if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one custom value accessor matches form control with');
      customAccessor = v;
    }
  });
  if (customAccessor) return customAccessor;
  if (builtinAccessor) return builtinAccessor;
  if (defaultAccessor) return defaultAccessor;

  if (typeof ngDevMode === 'undefined' || ngDevMode) {
    _throwError(dir, 'No valid value accessor for form control with');
  }

  return null;
}

function removeListItem(list, el) {
  var index = list.indexOf(el);
  if (index > -1) list.splice(index, 1);
} // TODO(kara): remove after deprecation period


function _ngModelWarning(name, type, instance, warningConfig) {
  if (!Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["isDevMode"])() || warningConfig === 'never') return;

  if ((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce || warningConfig === 'always' && !instance._ngModelWarningSent) {
    if (typeof ngDevMode === 'undefined' || ngDevMode) {
      ReactiveErrors.ngModelWarning(name);
    }

    type._ngModelWarningSentOnce = true;
    instance._ngModelWarningSent = true;
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Reports that a FormControl is valid, meaning that no errors exist in the input value.
 *
 * @see `status`
 */


var VALID = 'VALID';
/**
 * Reports that a FormControl is invalid, meaning that an error exists in the input value.
 *
 * @see `status`
 */

var INVALID = 'INVALID';
/**
 * Reports that a FormControl is pending, meaning that that async validation is occurring and
 * errors are not yet available for the input value.
 *
 * @see `markAsPending`
 * @see `status`
 */

var PENDING = 'PENDING';
/**
 * Reports that a FormControl is disabled, meaning that the control is exempt from ancestor
 * calculations of validity or value.
 *
 * @see `markAsDisabled`
 * @see `status`
 */

var DISABLED = 'DISABLED';

function _find(control, path, delimiter) {
  if (path == null) return null;

  if (!Array.isArray(path)) {
    path = path.split(delimiter);
  }

  if (Array.isArray(path) && path.length === 0) return null; // Not using Array.reduce here due to a Chrome 80 bug
  // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982

  var controlToFind = control;
  path.forEach(function (name) {
    if (controlToFind instanceof FormGroup) {
      controlToFind = controlToFind.controls.hasOwnProperty(name) ? controlToFind.controls[name] : null;
    } else if (controlToFind instanceof FormArray) {
      controlToFind = controlToFind.at(name) || null;
    } else {
      controlToFind = null;
    }
  });
  return controlToFind;
}
/**
 * Gets validators from either an options object or given validators.
 */


function pickValidators(validatorOrOpts) {
  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;
}
/**
 * Creates validator function by combining provided validators.
 */


function coerceToValidator(validator) {
  return Array.isArray(validator) ? composeValidators(validator) : validator || null;
}
/**
 * Gets async validators from either an options object or given validators.
 */


function pickAsyncValidators(asyncValidator, validatorOrOpts) {
  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;
}
/**
 * Creates async validator function by combining provided async validators.
 */


function coerceToAsyncValidator(asyncValidator) {
  return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator || null;
}

function isOptionsObj(validatorOrOpts) {
  return validatorOrOpts != null && !Array.isArray(validatorOrOpts) && typeof validatorOrOpts === 'object';
}
/**
 * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.
 *
 * It provides some of the shared behavior that all controls and groups of controls have, like
 * running validators, calculating status, and resetting state. It also defines the properties
 * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be
 * instantiated directly.
 *
 * @see [Forms Guide](/guide/forms)
 * @see [Reactive Forms Guide](/guide/reactive-forms)
 * @see [Dynamic Forms Guide](/guide/dynamic-form)
 *
 * @publicApi
 */


var AbstractControl = /*#__PURE__*/function () {
  /**
   * Initialize the AbstractControl instance.
   *
   * @param validators The function or array of functions that is used to determine the validity of
   *     this control synchronously.
   * @param asyncValidators The function or array of functions that is used to determine validity of
   *     this control asynchronously.
   */
  function AbstractControl(validators, asyncValidators) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, AbstractControl);

    /**
     * Indicates that a control has its own pending asynchronous validation in progress.
     *
     * @internal
     */
    this._hasOwnPendingAsyncValidator = false;
    /** @internal */

    this._onCollectionChange = function () {};

    this._parent = null;
    /**
     * A control is `pristine` if the user has not yet changed
     * the value in the UI.
     *
     * @returns True if the user has not yet changed the value in the UI; compare `dirty`.
     * Programmatic changes to a control's value do not mark it dirty.
     */

    this.pristine = true;
    /**
     * True if the control is marked as `touched`.
     *
     * A control is marked `touched` once the user has triggered
     * a `blur` event on it.
     */

    this.touched = false;
    /** @internal */

    this._onDisabledChange = [];
    this._rawValidators = validators;
    this._rawAsyncValidators = asyncValidators;
    this._composedValidatorFn = coerceToValidator(this._rawValidators);
    this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);
  }
  /**
   * The function that is used to determine the validity of this control synchronously.
   */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(AbstractControl, [{
    key: "setValidators",

    /**
     * Sets the synchronous validators that are active on this control.  Calling
     * this overwrites any existing sync validators.
     *
     * When you add or remove a validator at run time, you must call
     * `updateValueAndValidity()` for the new validation to take effect.
     *
     */
    value: function setValidators(newValidator) {
      this._rawValidators = newValidator;
      this._composedValidatorFn = coerceToValidator(newValidator);
    }
    /**
     * Sets the async validators that are active on this control. Calling this
     * overwrites any existing async validators.
     *
     * When you add or remove a validator at run time, you must call
     * `updateValueAndValidity()` for the new validation to take effect.
     *
     */

  }, {
    key: "setAsyncValidators",
    value: function setAsyncValidators(newValidator) {
      this._rawAsyncValidators = newValidator;
      this._composedAsyncValidatorFn = coerceToAsyncValidator(newValidator);
    }
    /**
     * Empties out the sync validator list.
     *
     * When you add or remove a validator at run time, you must call
     * `updateValueAndValidity()` for the new validation to take effect.
     *
     */

  }, {
    key: "clearValidators",
    value: function clearValidators() {
      this.validator = null;
    }
    /**
     * Empties out the async validator list.
     *
     * When you add or remove a validator at run time, you must call
     * `updateValueAndValidity()` for the new validation to take effect.
     *
     */

  }, {
    key: "clearAsyncValidators",
    value: function clearAsyncValidators() {
      this.asyncValidator = null;
    }
    /**
     * Marks the control as `touched`. A control is touched by focus and
     * blur events that do not change the value.
     *
     * @see `markAsUntouched()`
     * @see `markAsDirty()`
     * @see `markAsPristine()`
     *
     * @param opts Configuration options that determine how the control propagates changes
     * and emits events after marking is applied.
     * * `onlySelf`: When true, mark only this control. When false or not supplied,
     * marks all direct ancestors. Default is false.
     */

  }, {
    key: "markAsTouched",
    value: function markAsTouched() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.touched = true;

      if (this._parent && !opts.onlySelf) {
        this._parent.markAsTouched(opts);
      }
    }
    /**
     * Marks the control and all its descendant controls as `touched`.
     * @see `markAsTouched()`
     */

  }, {
    key: "markAllAsTouched",
    value: function markAllAsTouched() {
      this.markAsTouched({
        onlySelf: true
      });

      this._forEachChild(function (control) {
        return control.markAllAsTouched();
      });
    }
    /**
     * Marks the control as `untouched`.
     *
     * If the control has any children, also marks all children as `untouched`
     * and recalculates the `touched` status of all parent controls.
     *
     * @see `markAsTouched()`
     * @see `markAsDirty()`
     * @see `markAsPristine()`
     *
     * @param opts Configuration options that determine how the control propagates changes
     * and emits events after the marking is applied.
     * * `onlySelf`: When true, mark only this control. When false or not supplied,
     * marks all direct ancestors. Default is false.
     */

  }, {
    key: "markAsUntouched",
    value: function markAsUntouched() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.touched = false;
      this._pendingTouched = false;

      this._forEachChild(function (control) {
        control.markAsUntouched({
          onlySelf: true
        });
      });

      if (this._parent && !opts.onlySelf) {
        this._parent._updateTouched(opts);
      }
    }
    /**
     * Marks the control as `dirty`. A control becomes dirty when
     * the control's value is changed through the UI; compare `markAsTouched`.
     *
     * @see `markAsTouched()`
     * @see `markAsUntouched()`
     * @see `markAsPristine()`
     *
     * @param opts Configuration options that determine how the control propagates changes
     * and emits events after marking is applied.
     * * `onlySelf`: When true, mark only this control. When false or not supplied,
     * marks all direct ancestors. Default is false.
     */

  }, {
    key: "markAsDirty",
    value: function markAsDirty() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.pristine = false;

      if (this._parent && !opts.onlySelf) {
        this._parent.markAsDirty(opts);
      }
    }
    /**
     * Marks the control as `pristine`.
     *
     * If the control has any children, marks all children as `pristine`,
     * and recalculates the `pristine` status of all parent
     * controls.
     *
     * @see `markAsTouched()`
     * @see `markAsUntouched()`
     * @see `markAsDirty()`
     *
     * @param opts Configuration options that determine how the control emits events after
     * marking is applied.
     * * `onlySelf`: When true, mark only this control. When false or not supplied,
     * marks all direct ancestors. Default is false.
     */

  }, {
    key: "markAsPristine",
    value: function markAsPristine() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.pristine = true;
      this._pendingDirty = false;

      this._forEachChild(function (control) {
        control.markAsPristine({
          onlySelf: true
        });
      });

      if (this._parent && !opts.onlySelf) {
        this._parent._updatePristine(opts);
      }
    }
    /**
     * Marks the control as `pending`.
     *
     * A control is pending while the control performs async validation.
     *
     * @see {@link AbstractControl.status}
     *
     * @param opts Configuration options that determine how the control propagates changes and
     * emits events after marking is applied.
     * * `onlySelf`: When true, mark only this control. When false or not supplied,
     * marks all direct ancestors. Default is false.
     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`
     * observable emits an event with the latest status the control is marked pending.
     * When false, no events are emitted.
     *
     */

  }, {
    key: "markAsPending",
    value: function markAsPending() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.status = PENDING;

      if (opts.emitEvent !== false) {
        this.statusChanges.emit(this.status);
      }

      if (this._parent && !opts.onlySelf) {
        this._parent.markAsPending(opts);
      }
    }
    /**
     * Disables the control. This means the control is exempt from validation checks and
     * excluded from the aggregate value of any parent. Its status is `DISABLED`.
     *
     * If the control has children, all children are also disabled.
     *
     * @see {@link AbstractControl.status}
     *
     * @param opts Configuration options that determine how the control propagates
     * changes and emits events after the control is disabled.
     * * `onlySelf`: When true, mark only this control. When false or not supplied,
     * marks all direct ancestors. Default is false.
     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
     * `valueChanges`
     * observables emit events with the latest status and value when the control is disabled.
     * When false, no events are emitted.
     */

  }, {
    key: "disable",
    value: function disable() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      // If parent has been marked artificially dirty we don't want to re-calculate the
      // parent's dirtiness based on the children.
      var skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);

      this.status = DISABLED;
      this.errors = null;

      this._forEachChild(function (control) {
        control.disable(Object.assign(Object.assign({}, opts), {
          onlySelf: true
        }));
      });

      this._updateValue();

      if (opts.emitEvent !== false) {
        this.valueChanges.emit(this.value);
        this.statusChanges.emit(this.status);
      }

      this._updateAncestors(Object.assign(Object.assign({}, opts), {
        skipPristineCheck: skipPristineCheck
      }));

      this._onDisabledChange.forEach(function (changeFn) {
        return changeFn(true);
      });
    }
    /**
     * Enables the control. This means the control is included in validation checks and
     * the aggregate value of its parent. Its status recalculates based on its value and
     * its validators.
     *
     * By default, if the control has children, all children are enabled.
     *
     * @see {@link AbstractControl.status}
     *
     * @param opts Configure options that control how the control propagates changes and
     * emits events when marked as untouched
     * * `onlySelf`: When true, mark only this control. When false or not supplied,
     * marks all direct ancestors. Default is false.
     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
     * `valueChanges`
     * observables emit events with the latest status and value when the control is enabled.
     * When false, no events are emitted.
     */

  }, {
    key: "enable",
    value: function enable() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      // If parent has been marked artificially dirty we don't want to re-calculate the
      // parent's dirtiness based on the children.
      var skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);

      this.status = VALID;

      this._forEachChild(function (control) {
        control.enable(Object.assign(Object.assign({}, opts), {
          onlySelf: true
        }));
      });

      this.updateValueAndValidity({
        onlySelf: true,
        emitEvent: opts.emitEvent
      });

      this._updateAncestors(Object.assign(Object.assign({}, opts), {
        skipPristineCheck: skipPristineCheck
      }));

      this._onDisabledChange.forEach(function (changeFn) {
        return changeFn(false);
      });
    }
  }, {
    key: "_updateAncestors",
    value: function _updateAncestors(opts) {
      if (this._parent && !opts.onlySelf) {
        this._parent.updateValueAndValidity(opts);

        if (!opts.skipPristineCheck) {
          this._parent._updatePristine();
        }

        this._parent._updateTouched();
      }
    }
    /**
     * @param parent Sets the parent of the control
     */

  }, {
    key: "setParent",
    value: function setParent(parent) {
      this._parent = parent;
    }
    /**
     * Recalculates the value and validation status of the control.
     *
     * By default, it also updates the value and validity of its ancestors.
     *
     * @param opts Configuration options determine how the control propagates changes and emits events
     * after updates and validity checks are applied.
     * * `onlySelf`: When true, only update this control. When false or not supplied,
     * update all direct ancestors. Default is false.
     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
     * `valueChanges`
     * observables emit events with the latest status and value when the control is updated.
     * When false, no events are emitted.
     */

  }, {
    key: "updateValueAndValidity",
    value: function updateValueAndValidity() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      this._setInitialStatus();

      this._updateValue();

      if (this.enabled) {
        this._cancelExistingSubscription();

        this.errors = this._runValidator();
        this.status = this._calculateStatus();

        if (this.status === VALID || this.status === PENDING) {
          this._runAsyncValidator(opts.emitEvent);
        }
      }

      if (opts.emitEvent !== false) {
        this.valueChanges.emit(this.value);
        this.statusChanges.emit(this.status);
      }

      if (this._parent && !opts.onlySelf) {
        this._parent.updateValueAndValidity(opts);
      }
    }
    /** @internal */

  }, {
    key: "_updateTreeValidity",
    value: function _updateTreeValidity() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        emitEvent: true
      };

      this._forEachChild(function (ctrl) {
        return ctrl._updateTreeValidity(opts);
      });

      this.updateValueAndValidity({
        onlySelf: true,
        emitEvent: opts.emitEvent
      });
    }
  }, {
    key: "_setInitialStatus",
    value: function _setInitialStatus() {
      this.status = this._allControlsDisabled() ? DISABLED : VALID;
    }
  }, {
    key: "_runValidator",
    value: function _runValidator() {
      return this.validator ? this.validator(this) : null;
    }
  }, {
    key: "_runAsyncValidator",
    value: function _runAsyncValidator(emitEvent) {
      var _this7 = this;

      if (this.asyncValidator) {
        this.status = PENDING;
        this._hasOwnPendingAsyncValidator = true;
        var obs = toObservable(this.asyncValidator(this));
        this._asyncValidationSubscription = obs.subscribe(function (errors) {
          _this7._hasOwnPendingAsyncValidator = false; // This will trigger the recalculation of the validation status, which depends on
          // the state of the asynchronous validation (whether it is in progress or not). So, it is
          // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.

          _this7.setErrors(errors, {
            emitEvent: emitEvent
          });
        });
      }
    }
  }, {
    key: "_cancelExistingSubscription",
    value: function _cancelExistingSubscription() {
      if (this._asyncValidationSubscription) {
        this._asyncValidationSubscription.unsubscribe();

        this._hasOwnPendingAsyncValidator = false;
      }
    }
    /**
     * Sets errors on a form control when running validations manually, rather than automatically.
     *
     * Calling `setErrors` also updates the validity of the parent control.
     *
     * @usageNotes
     *
     * ### Manually set the errors for a control
     *
     * ```
     * const login = new FormControl('someLogin');
     * login.setErrors({
     *   notUnique: true
     * });
     *
     * expect(login.valid).toEqual(false);
     * expect(login.errors).toEqual({ notUnique: true });
     *
     * login.setValue('someOtherLogin');
     *
     * expect(login.valid).toEqual(true);
     * ```
     */

  }, {
    key: "setErrors",
    value: function setErrors(errors) {
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      this.errors = errors;

      this._updateControlsErrors(opts.emitEvent !== false);
    }
    /**
     * Retrieves a child control given the control's name or path.
     *
     * @param path A dot-delimited string or array of string/number values that define the path to the
     * control.
     *
     * @usageNotes
     * ### Retrieve a nested control
     *
     * For example, to get a `name` control nested within a `person` sub-group:
     *
     * * `this.form.get('person.name');`
     *
     * -OR-
     *
     * * `this.form.get(['person', 'name']);`
     */

  }, {
    key: "get",
    value: function get(path) {
      return _find(this, path, '.');
    }
    /**
     * @description
     * Reports error data for the control with the given path.
     *
     * @param errorCode The code of the error to check
     * @param path A list of control names that designates how to move from the current control
     * to the control that should be queried for errors.
     *
     * @usageNotes
     * For example, for the following `FormGroup`:
     *
     * ```
     * form = new FormGroup({
     *   address: new FormGroup({ street: new FormControl() })
     * });
     * ```
     *
     * The path to the 'street' control from the root form would be 'address' -> 'street'.
     *
     * It can be provided to this method in one of two formats:
     *
     * 1. An array of string control names, e.g. `['address', 'street']`
     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`
     *
     * @returns error data for that particular error. If the control or error is not present,
     * null is returned.
     */

  }, {
    key: "getError",
    value: function getError(errorCode, path) {
      var control = path ? this.get(path) : this;
      return control && control.errors ? control.errors[errorCode] : null;
    }
    /**
     * @description
     * Reports whether the control with the given path has the error specified.
     *
     * @param errorCode The code of the error to check
     * @param path A list of control names that designates how to move from the current control
     * to the control that should be queried for errors.
     *
     * @usageNotes
     * For example, for the following `FormGroup`:
     *
     * ```
     * form = new FormGroup({
     *   address: new FormGroup({ street: new FormControl() })
     * });
     * ```
     *
     * The path to the 'street' control from the root form would be 'address' -> 'street'.
     *
     * It can be provided to this method in one of two formats:
     *
     * 1. An array of string control names, e.g. `['address', 'street']`
     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`
     *
     * If no path is given, this method checks for the error on the current control.
     *
     * @returns whether the given error is present in the control at the given path.
     *
     * If the control is not present, false is returned.
     */

  }, {
    key: "hasError",
    value: function hasError(errorCode, path) {
      return !!this.getError(errorCode, path);
    }
    /**
     * Retrieves the top-level ancestor of this control.
     */

  }, {
    key: "_updateControlsErrors",

    /** @internal */
    value: function _updateControlsErrors(emitEvent) {
      this.status = this._calculateStatus();

      if (emitEvent) {
        this.statusChanges.emit(this.status);
      }

      if (this._parent) {
        this._parent._updateControlsErrors(emitEvent);
      }
    }
    /** @internal */

  }, {
    key: "_initObservables",
    value: function _initObservables() {
      this.valueChanges = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["EventEmitter"]();
      this.statusChanges = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["EventEmitter"]();
    }
  }, {
    key: "_calculateStatus",
    value: function _calculateStatus() {
      if (this._allControlsDisabled()) return DISABLED;
      if (this.errors) return INVALID;
      if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING)) return PENDING;
      if (this._anyControlsHaveStatus(INVALID)) return INVALID;
      return VALID;
    }
    /** @internal */

  }, {
    key: "_anyControlsHaveStatus",
    value: function _anyControlsHaveStatus(status) {
      return this._anyControls(function (control) {
        return control.status === status;
      });
    }
    /** @internal */

  }, {
    key: "_anyControlsDirty",
    value: function _anyControlsDirty() {
      return this._anyControls(function (control) {
        return control.dirty;
      });
    }
    /** @internal */

  }, {
    key: "_anyControlsTouched",
    value: function _anyControlsTouched() {
      return this._anyControls(function (control) {
        return control.touched;
      });
    }
    /** @internal */

  }, {
    key: "_updatePristine",
    value: function _updatePristine() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.pristine = !this._anyControlsDirty();

      if (this._parent && !opts.onlySelf) {
        this._parent._updatePristine(opts);
      }
    }
    /** @internal */

  }, {
    key: "_updateTouched",
    value: function _updateTouched() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.touched = this._anyControlsTouched();

      if (this._parent && !opts.onlySelf) {
        this._parent._updateTouched(opts);
      }
    }
    /** @internal */

  }, {
    key: "_isBoxedValue",
    value: function _isBoxedValue(formState) {
      return typeof formState === 'object' && formState !== null && Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;
    }
    /** @internal */

  }, {
    key: "_registerOnCollectionChange",
    value: function _registerOnCollectionChange(fn) {
      this._onCollectionChange = fn;
    }
    /** @internal */

  }, {
    key: "_setUpdateStrategy",
    value: function _setUpdateStrategy(opts) {
      if (isOptionsObj(opts) && opts.updateOn != null) {
        this._updateOn = opts.updateOn;
      }
    }
    /**
     * Check to see if parent has been marked artificially dirty.
     *
     * @internal
     */

  }, {
    key: "_parentMarkedDirty",
    value: function _parentMarkedDirty(onlySelf) {
      var parentDirty = this._parent && this._parent.dirty;
      return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();
    }
  }, {
    key: "validator",
    get: function get() {
      return this._composedValidatorFn;
    },
    set: function set(validatorFn) {
      this._rawValidators = this._composedValidatorFn = validatorFn;
    }
    /**
     * The function that is used to determine the validity of this control asynchronously.
     */

  }, {
    key: "asyncValidator",
    get: function get() {
      return this._composedAsyncValidatorFn;
    },
    set: function set(asyncValidatorFn) {
      this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;
    }
    /**
     * The parent control.
     */

  }, {
    key: "parent",
    get: function get() {
      return this._parent;
    }
    /**
     * A control is `valid` when its `status` is `VALID`.
     *
     * @see {@link AbstractControl.status}
     *
     * @returns True if the control has passed all of its validation tests,
     * false otherwise.
     */

  }, {
    key: "valid",
    get: function get() {
      return this.status === VALID;
    }
    /**
     * A control is `invalid` when its `status` is `INVALID`.
     *
     * @see {@link AbstractControl.status}
     *
     * @returns True if this control has failed one or more of its validation checks,
     * false otherwise.
     */

  }, {
    key: "invalid",
    get: function get() {
      return this.status === INVALID;
    }
    /**
     * A control is `pending` when its `status` is `PENDING`.
     *
     * @see {@link AbstractControl.status}
     *
     * @returns True if this control is in the process of conducting a validation check,
     * false otherwise.
     */

  }, {
    key: "pending",
    get: function get() {
      return this.status == PENDING;
    }
    /**
     * A control is `disabled` when its `status` is `DISABLED`.
     *
     * Disabled controls are exempt from validation checks and
     * are not included in the aggregate value of their ancestor
     * controls.
     *
     * @see {@link AbstractControl.status}
     *
     * @returns True if the control is disabled, false otherwise.
     */

  }, {
    key: "disabled",
    get: function get() {
      return this.status === DISABLED;
    }
    /**
     * A control is `enabled` as long as its `status` is not `DISABLED`.
     *
     * @returns True if the control has any status other than 'DISABLED',
     * false if the status is 'DISABLED'.
     *
     * @see {@link AbstractControl.status}
     *
     */

  }, {
    key: "enabled",
    get: function get() {
      return this.status !== DISABLED;
    }
    /**
     * A control is `dirty` if the user has changed the value
     * in the UI.
     *
     * @returns True if the user has changed the value of this control in the UI; compare `pristine`.
     * Programmatic changes to a control's value do not mark it dirty.
     */

  }, {
    key: "dirty",
    get: function get() {
      return !this.pristine;
    }
    /**
     * True if the control has not been marked as touched
     *
     * A control is `untouched` if the user has not yet triggered
     * a `blur` event on it.
     */

  }, {
    key: "untouched",
    get: function get() {
      return !this.touched;
    }
    /**
     * Reports the update strategy of the `AbstractControl` (meaning
     * the event on which the control updates itself).
     * Possible values: `'change'` | `'blur'` | `'submit'`
     * Default value: `'change'`
     */

  }, {
    key: "updateOn",
    get: function get() {
      return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';
    }
  }, {
    key: "root",
    get: function get() {
      var x = this;

      while (x._parent) {
        x = x._parent;
      }

      return x;
    }
  }]);

  return AbstractControl;
}();
/**
 * Tracks the value and validation status of an individual form control.
 *
 * This is one of the three fundamental building blocks of Angular forms, along with
 * `FormGroup` and `FormArray`. It extends the `AbstractControl` class that
 * implements most of the base functionality for accessing the value, validation status,
 * user interactions and events. See [usage examples below](#usage-notes).
 *
 * @see `AbstractControl`
 * @see [Reactive Forms Guide](guide/reactive-forms)
 * @see [Usage Notes](#usage-notes)
 *
 * @usageNotes
 *
 * ### Initializing Form Controls
 *
 * Instantiate a `FormControl`, with an initial value.
 *
 * ```ts
 * const control = new FormControl('some value');
 * console.log(control.value);     // 'some value'
 *```
 *
 * The following example initializes the control with a form state object. The `value`
 * and `disabled` keys are required in this case.
 *
 * ```ts
 * const control = new FormControl({ value: 'n/a', disabled: true });
 * console.log(control.value);     // 'n/a'
 * console.log(control.status);    // 'DISABLED'
 * ```
 *
 * The following example initializes the control with a sync validator.
 *
 * ```ts
 * const control = new FormControl('', Validators.required);
 * console.log(control.value);      // ''
 * console.log(control.status);     // 'INVALID'
 * ```
 *
 * The following example initializes the control using an options object.
 *
 * ```ts
 * const control = new FormControl('', {
 *    validators: Validators.required,
 *    asyncValidators: myAsyncValidator
 * });
 * ```
 *
 * ### Configure the control to update on a blur event
 *
 * Set the `updateOn` option to `'blur'` to update on the blur `event`.
 *
 * ```ts
 * const control = new FormControl('', { updateOn: 'blur' });
 * ```
 *
 * ### Configure the control to update on a submit event
 *
 * Set the `updateOn` option to `'submit'` to update on a submit `event`.
 *
 * ```ts
 * const control = new FormControl('', { updateOn: 'submit' });
 * ```
 *
 * ### Reset the control back to an initial value
 *
 * You reset to a specific form state by passing through a standalone
 * value or a form state object that contains both a value and a disabled state
 * (these are the only two properties that cannot be calculated).
 *
 * ```ts
 * const control = new FormControl('Nancy');
 *
 * console.log(control.value); // 'Nancy'
 *
 * control.reset('Drew');
 *
 * console.log(control.value); // 'Drew'
 * ```
 *
 * ### Reset the control back to an initial value and disabled
 *
 * ```
 * const control = new FormControl('Nancy');
 *
 * console.log(control.value); // 'Nancy'
 * console.log(control.status); // 'VALID'
 *
 * control.reset({ value: 'Drew', disabled: true });
 *
 * console.log(control.value); // 'Drew'
 * console.log(control.status); // 'DISABLED'
 * ```
 *
 * @publicApi
 */


var FormControl = /*#__PURE__*/function (_AbstractControl) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(FormControl, _AbstractControl);

  var _super5 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(FormControl);

  /**
   * Creates a new `FormControl` instance.
   *
   * @param formState Initializes the control with an initial value,
   * or an object that defines the initial value and disabled state.
   *
   * @param validatorOrOpts A synchronous validator function, or an array of
   * such functions, or an `AbstractControlOptions` object that contains validation functions
   * and a validation trigger.
   *
   * @param asyncValidator A single async validator or array of async validator functions
   *
   */
  function FormControl() {
    var _this8;

    var formState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    var validatorOrOpts = arguments.length > 1 ? arguments[1] : undefined;
    var asyncValidator = arguments.length > 2 ? arguments[2] : undefined;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, FormControl);

    _this8 = _super5.call(this, pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));
    /** @internal */

    _this8._onChange = [];

    _this8._applyFormState(formState);

    _this8._setUpdateStrategy(validatorOrOpts);

    _this8._initObservables();

    _this8.updateValueAndValidity({
      onlySelf: true,
      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to
      // `VALID` or `INVALID`.
      // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`
      // to `true` to allow that during the control creation process.
      emitEvent: !!asyncValidator
    });

    return _this8;
  }
  /**
   * Sets a new value for the form control.
   *
   * @param value The new value for the control.
   * @param options Configuration options that determine how the control propagates changes
   * and emits events when the value changes.
   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity
   * updateValueAndValidity} method.
   *
   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is
   * false.
   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
   * `valueChanges`
   * observables emit events with the latest status and value when the control value is updated.
   * When false, no events are emitted.
   * * `emitModelToViewChange`: When true or not supplied  (the default), each change triggers an
   * `onChange` event to
   * update the view.
   * * `emitViewToModelChange`: When true or not supplied (the default), each change triggers an
   * `ngModelChange`
   * event to update the model.
   *
   */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(FormControl, [{
    key: "setValue",
    value: function setValue(value) {
      var _this9 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      this.value = this._pendingValue = value;

      if (this._onChange.length && options.emitModelToViewChange !== false) {
        this._onChange.forEach(function (changeFn) {
          return changeFn(_this9.value, options.emitViewToModelChange !== false);
        });
      }

      this.updateValueAndValidity(options);
    }
    /**
     * Patches the value of a control.
     *
     * This function is functionally the same as {@link FormControl#setValue setValue} at this level.
     * It exists for symmetry with {@link FormGroup#patchValue patchValue} on `FormGroups` and
     * `FormArrays`, where it does behave differently.
     *
     * @see `setValue` for options
     */

  }, {
    key: "patchValue",
    value: function patchValue(value) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      this.setValue(value, options);
    }
    /**
     * Resets the form control, marking it `pristine` and `untouched`, and setting
     * the value to null.
     *
     * @param formState Resets the control with an initial value,
     * or an object that defines the initial value and disabled state.
     *
     * @param options Configuration options that determine how the control propagates changes
     * and emits events after the value changes.
     *
     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is
     * false.
     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
     * `valueChanges`
     * observables emit events with the latest status and value when the control is reset.
     * When false, no events are emitted.
     *
     */

  }, {
    key: "reset",
    value: function reset() {
      var formState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      this._applyFormState(formState);

      this.markAsPristine(options);
      this.markAsUntouched(options);
      this.setValue(this.value, options);
      this._pendingChange = false;
    }
    /**
     * @internal
     */

  }, {
    key: "_updateValue",
    value: function _updateValue() {}
    /**
     * @internal
     */

  }, {
    key: "_anyControls",
    value: function _anyControls(condition) {
      return false;
    }
    /**
     * @internal
     */

  }, {
    key: "_allControlsDisabled",
    value: function _allControlsDisabled() {
      return this.disabled;
    }
    /**
     * Register a listener for change events.
     *
     * @param fn The method that is called when the value changes
     */

  }, {
    key: "registerOnChange",
    value: function registerOnChange(fn) {
      this._onChange.push(fn);
    }
    /**
     * Internal function to unregister a change events listener.
     * @internal
     */

  }, {
    key: "_unregisterOnChange",
    value: function _unregisterOnChange(fn) {
      removeListItem(this._onChange, fn);
    }
    /**
     * Register a listener for disabled events.
     *
     * @param fn The method that is called when the disabled status changes.
     */

  }, {
    key: "registerOnDisabledChange",
    value: function registerOnDisabledChange(fn) {
      this._onDisabledChange.push(fn);
    }
    /**
     * Internal function to unregister a disabled event listener.
     * @internal
     */

  }, {
    key: "_unregisterOnDisabledChange",
    value: function _unregisterOnDisabledChange(fn) {
      removeListItem(this._onDisabledChange, fn);
    }
    /**
     * @internal
     */

  }, {
    key: "_forEachChild",
    value: function _forEachChild(cb) {}
    /** @internal */

  }, {
    key: "_syncPendingControls",
    value: function _syncPendingControls() {
      if (this.updateOn === 'submit') {
        if (this._pendingDirty) this.markAsDirty();
        if (this._pendingTouched) this.markAsTouched();

        if (this._pendingChange) {
          this.setValue(this._pendingValue, {
            onlySelf: true,
            emitModelToViewChange: false
          });
          return true;
        }
      }

      return false;
    }
  }, {
    key: "_applyFormState",
    value: function _applyFormState(formState) {
      if (this._isBoxedValue(formState)) {
        this.value = this._pendingValue = formState.value;
        formState.disabled ? this.disable({
          onlySelf: true,
          emitEvent: false
        }) : this.enable({
          onlySelf: true,
          emitEvent: false
        });
      } else {
        this.value = this._pendingValue = formState;
      }
    }
  }]);

  return FormControl;
}(AbstractControl);
/**
 * Tracks the value and validity state of a group of `FormControl` instances.
 *
 * A `FormGroup` aggregates the values of each child `FormControl` into one object,
 * with each control name as the key.  It calculates its status by reducing the status values
 * of its children. For example, if one of the controls in a group is invalid, the entire
 * group becomes invalid.
 *
 * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,
 * along with `FormControl` and `FormArray`.
 *
 * When instantiating a `FormGroup`, pass in a collection of child controls as the first
 * argument. The key for each child registers the name for the control.
 *
 * @usageNotes
 *
 * ### Create a form group with 2 controls
 *
 * ```
 * const form = new FormGroup({
 *   first: new FormControl('Nancy', Validators.minLength(2)),
 *   last: new FormControl('Drew'),
 * });
 *
 * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}
 * console.log(form.status);  // 'VALID'
 * ```
 *
 * ### Create a form group with a group-level validator
 *
 * You include group-level validators as the second arg, or group-level async
 * validators as the third arg. These come in handy when you want to perform validation
 * that considers the value of more than one child control.
 *
 * ```
 * const form = new FormGroup({
 *   password: new FormControl('', Validators.minLength(2)),
 *   passwordConfirm: new FormControl('', Validators.minLength(2)),
 * }, passwordMatchValidator);
 *
 *
 * function passwordMatchValidator(g: FormGroup) {
 *    return g.get('password').value === g.get('passwordConfirm').value
 *       ? null : {'mismatch': true};
 * }
 * ```
 *
 * Like `FormControl` instances, you choose to pass in
 * validators and async validators as part of an options object.
 *
 * ```
 * const form = new FormGroup({
 *   password: new FormControl('')
 *   passwordConfirm: new FormControl('')
 * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });
 * ```
 *
 * ### Set the updateOn property for all controls in a form group
 *
 * The options object is used to set a default value for each child
 * control's `updateOn` property. If you set `updateOn` to `'blur'` at the
 * group level, all child controls default to 'blur', unless the child
 * has explicitly specified a different `updateOn` value.
 *
 * ```ts
 * const c = new FormGroup({
 *   one: new FormControl()
 * }, { updateOn: 'blur' });
 * ```
 *
 * @publicApi
 */


var FormGroup = /*#__PURE__*/function (_AbstractControl2) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(FormGroup, _AbstractControl2);

  var _super6 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(FormGroup);

  /**
   * Creates a new `FormGroup` instance.
   *
   * @param controls A collection of child controls. The key for each child is the name
   * under which it is registered.
   *
   * @param validatorOrOpts A synchronous validator function, or an array of
   * such functions, or an `AbstractControlOptions` object that contains validation functions
   * and a validation trigger.
   *
   * @param asyncValidator A single async validator or array of async validator functions
   *
   */
  function FormGroup(controls, validatorOrOpts, asyncValidator) {
    var _this10;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, FormGroup);

    _this10 = _super6.call(this, pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));
    _this10.controls = controls;

    _this10._initObservables();

    _this10._setUpdateStrategy(validatorOrOpts);

    _this10._setUpControls();

    _this10.updateValueAndValidity({
      onlySelf: true,
      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to
      // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,
      // so we set `emitEvent` to `true` to allow that during the control creation process.
      emitEvent: !!asyncValidator
    });

    return _this10;
  }
  /**
   * Registers a control with the group's list of controls.
   *
   * This method does not update the value or validity of the control.
   * Use {@link FormGroup#addControl addControl} instead.
   *
   * @param name The control name to register in the collection
   * @param control Provides the control for the given name
   */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(FormGroup, [{
    key: "registerControl",
    value: function registerControl(name, control) {
      if (this.controls[name]) return this.controls[name];
      this.controls[name] = control;
      control.setParent(this);

      control._registerOnCollectionChange(this._onCollectionChange);

      return control;
    }
    /**
     * Add a control to this group.
     *
     * This method also updates the value and validity of the control.
     *
     * @param name The control name to add to the collection
     * @param control Provides the control for the given name
     */

  }, {
    key: "addControl",
    value: function addControl(name, control) {
      this.registerControl(name, control);
      this.updateValueAndValidity();

      this._onCollectionChange();
    }
    /**
     * Remove a control from this group.
     *
     * @param name The control name to remove from the collection
     */

  }, {
    key: "removeControl",
    value: function removeControl(name) {
      if (this.controls[name]) this.controls[name]._registerOnCollectionChange(function () {});
      delete this.controls[name];
      this.updateValueAndValidity();

      this._onCollectionChange();
    }
    /**
     * Replace an existing control.
     *
     * @param name The control name to replace in the collection
     * @param control Provides the control for the given name
     */

  }, {
    key: "setControl",
    value: function setControl(name, control) {
      if (this.controls[name]) this.controls[name]._registerOnCollectionChange(function () {});
      delete this.controls[name];
      if (control) this.registerControl(name, control);
      this.updateValueAndValidity();

      this._onCollectionChange();
    }
    /**
     * Check whether there is an enabled control with the given name in the group.
     *
     * Reports false for disabled controls. If you'd like to check for existence in the group
     * only, use {@link AbstractControl#get get} instead.
     *
     * @param controlName The control name to check for existence in the collection
     *
     * @returns false for disabled controls, true otherwise.
     */

  }, {
    key: "contains",
    value: function contains(controlName) {
      return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;
    }
    /**
     * Sets the value of the `FormGroup`. It accepts an object that matches
     * the structure of the group, with control names as keys.
     *
     * @usageNotes
     * ### Set the complete value for the form group
     *
     * ```
     * const form = new FormGroup({
     *   first: new FormControl(),
     *   last: new FormControl()
     * });
     *
     * console.log(form.value);   // {first: null, last: null}
     *
     * form.setValue({first: 'Nancy', last: 'Drew'});
     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}
     * ```
     *
     * @throws When strict checks fail, such as setting the value of a control
     * that doesn't exist or if you exclude a value of a control that does exist.
     *
     * @param value The new value for the control that matches the structure of the group.
     * @param options Configuration options that determine how the control propagates changes
     * and emits events after the value changes.
     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity
     * updateValueAndValidity} method.
     *
     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is
     * false.
     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
     * `valueChanges`
     * observables emit events with the latest status and value when the control value is updated.
     * When false, no events are emitted.
     */

  }, {
    key: "setValue",
    value: function setValue(value) {
      var _this11 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      this._checkAllValuesPresent(value);

      Object.keys(value).forEach(function (name) {
        _this11._throwIfControlMissing(name);

        _this11.controls[name].setValue(value[name], {
          onlySelf: true,
          emitEvent: options.emitEvent
        });
      });
      this.updateValueAndValidity(options);
    }
    /**
     * Patches the value of the `FormGroup`. It accepts an object with control
     * names as keys, and does its best to match the values to the correct controls
     * in the group.
     *
     * It accepts both super-sets and sub-sets of the group without throwing an error.
     *
     * @usageNotes
     * ### Patch the value for a form group
     *
     * ```
     * const form = new FormGroup({
     *    first: new FormControl(),
     *    last: new FormControl()
     * });
     * console.log(form.value);   // {first: null, last: null}
     *
     * form.patchValue({first: 'Nancy'});
     * console.log(form.value);   // {first: 'Nancy', last: null}
     * ```
     *
     * @param value The object that matches the structure of the group.
     * @param options Configuration options that determine how the control propagates changes and
     * emits events after the value is patched.
     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is
     * true.
     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
     * `valueChanges`
     * observables emit events with the latest status and value when the control value is updated.
     * When false, no events are emitted.
     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity
     * updateValueAndValidity} method.
     */

  }, {
    key: "patchValue",
    value: function patchValue(value) {
      var _this12 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      Object.keys(value).forEach(function (name) {
        if (_this12.controls[name]) {
          _this12.controls[name].patchValue(value[name], {
            onlySelf: true,
            emitEvent: options.emitEvent
          });
        }
      });
      this.updateValueAndValidity(options);
    }
    /**
     * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets
     * the value of all descendants to null.
     *
     * You reset to a specific form state by passing in a map of states
     * that matches the structure of your form, with control names as keys. The state
     * is a standalone value or a form state object with both a value and a disabled
     * status.
     *
     * @param value Resets the control with an initial value,
     * or an object that defines the initial value and disabled state.
     *
     * @param options Configuration options that determine how the control propagates changes
     * and emits events when the group is reset.
     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is
     * false.
     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
     * `valueChanges`
     * observables emit events with the latest status and value when the control is reset.
     * When false, no events are emitted.
     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity
     * updateValueAndValidity} method.
     *
     * @usageNotes
     *
     * ### Reset the form group values
     *
     * ```ts
     * const form = new FormGroup({
     *   first: new FormControl('first name'),
     *   last: new FormControl('last name')
     * });
     *
     * console.log(form.value);  // {first: 'first name', last: 'last name'}
     *
     * form.reset({ first: 'name', last: 'last name' });
     *
     * console.log(form.value);  // {first: 'name', last: 'last name'}
     * ```
     *
     * ### Reset the form group values and disabled status
     *
     * ```
     * const form = new FormGroup({
     *   first: new FormControl('first name'),
     *   last: new FormControl('last name')
     * });
     *
     * form.reset({
     *   first: {value: 'name', disabled: true},
     *   last: 'last'
     * });
     *
     * console.log(this.form.value);  // {first: 'name', last: 'last name'}
     * console.log(this.form.get('first').status);  // 'DISABLED'
     * ```
     */

  }, {
    key: "reset",
    value: function reset() {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      this._forEachChild(function (control, name) {
        control.reset(value[name], {
          onlySelf: true,
          emitEvent: options.emitEvent
        });
      });

      this._updatePristine(options);

      this._updateTouched(options);

      this.updateValueAndValidity(options);
    }
    /**
     * The aggregate value of the `FormGroup`, including any disabled controls.
     *
     * Retrieves all values regardless of disabled status.
     * The `value` property is the best way to get the value of the group, because
     * it excludes disabled controls in the `FormGroup`.
     */

  }, {
    key: "getRawValue",
    value: function getRawValue() {
      return this._reduceChildren({}, function (acc, control, name) {
        acc[name] = control instanceof FormControl ? control.value : control.getRawValue();
        return acc;
      });
    }
    /** @internal */

  }, {
    key: "_syncPendingControls",
    value: function _syncPendingControls() {
      var subtreeUpdated = this._reduceChildren(false, function (updated, child) {
        return child._syncPendingControls() ? true : updated;
      });

      if (subtreeUpdated) this.updateValueAndValidity({
        onlySelf: true
      });
      return subtreeUpdated;
    }
    /** @internal */

  }, {
    key: "_throwIfControlMissing",
    value: function _throwIfControlMissing(name) {
      if (!Object.keys(this.controls).length) {
        throw new Error("\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");
      }

      if (!this.controls[name]) {
        throw new Error("Cannot find form control with name: ".concat(name, "."));
      }
    }
    /** @internal */

  }, {
    key: "_forEachChild",
    value: function _forEachChild(cb) {
      var _this13 = this;

      Object.keys(this.controls).forEach(function (k) {
        return cb(_this13.controls[k], k);
      });
    }
    /** @internal */

  }, {
    key: "_setUpControls",
    value: function _setUpControls() {
      var _this14 = this;

      this._forEachChild(function (control) {
        control.setParent(_this14);

        control._registerOnCollectionChange(_this14._onCollectionChange);
      });
    }
    /** @internal */

  }, {
    key: "_updateValue",
    value: function _updateValue() {
      this.value = this._reduceValue();
    }
    /** @internal */

  }, {
    key: "_anyControls",
    value: function _anyControls(condition) {
      for (var _i4 = 0, _Object$keys = Object.keys(this.controls); _i4 < _Object$keys.length; _i4++) {
        var controlName = _Object$keys[_i4];
        var control = this.controls[controlName];

        if (this.contains(controlName) && condition(control)) {
          return true;
        }
      }

      return false;
    }
    /** @internal */

  }, {
    key: "_reduceValue",
    value: function _reduceValue() {
      var _this15 = this;

      return this._reduceChildren({}, function (acc, control, name) {
        if (control.enabled || _this15.disabled) {
          acc[name] = control.value;
        }

        return acc;
      });
    }
    /** @internal */

  }, {
    key: "_reduceChildren",
    value: function _reduceChildren(initValue, fn) {
      var res = initValue;

      this._forEachChild(function (control, name) {
        res = fn(res, control, name);
      });

      return res;
    }
    /** @internal */

  }, {
    key: "_allControlsDisabled",
    value: function _allControlsDisabled() {
      for (var _i5 = 0, _Object$keys2 = Object.keys(this.controls); _i5 < _Object$keys2.length; _i5++) {
        var controlName = _Object$keys2[_i5];

        if (this.controls[controlName].enabled) {
          return false;
        }
      }

      return Object.keys(this.controls).length > 0 || this.disabled;
    }
    /** @internal */

  }, {
    key: "_checkAllValuesPresent",
    value: function _checkAllValuesPresent(value) {
      this._forEachChild(function (control, name) {
        if (value[name] === undefined) {
          throw new Error("Must supply a value for form control with name: '".concat(name, "'."));
        }
      });
    }
  }]);

  return FormGroup;
}(AbstractControl);
/**
 * Tracks the value and validity state of an array of `FormControl`,
 * `FormGroup` or `FormArray` instances.
 *
 * A `FormArray` aggregates the values of each child `FormControl` into an array.
 * It calculates its status by reducing the status values of its children. For example, if one of
 * the controls in a `FormArray` is invalid, the entire array becomes invalid.
 *
 * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,
 * along with `FormControl` and `FormGroup`.
 *
 * @usageNotes
 *
 * ### Create an array of form controls
 *
 * ```
 * const arr = new FormArray([
 *   new FormControl('Nancy', Validators.minLength(2)),
 *   new FormControl('Drew'),
 * ]);
 *
 * console.log(arr.value);   // ['Nancy', 'Drew']
 * console.log(arr.status);  // 'VALID'
 * ```
 *
 * ### Create a form array with array-level validators
 *
 * You include array-level validators and async validators. These come in handy
 * when you want to perform validation that considers the value of more than one child
 * control.
 *
 * The two types of validators are passed in separately as the second and third arg
 * respectively, or together as part of an options object.
 *
 * ```
 * const arr = new FormArray([
 *   new FormControl('Nancy'),
 *   new FormControl('Drew')
 * ], {validators: myValidator, asyncValidators: myAsyncValidator});
 * ```
 *
 * ### Set the updateOn property for all controls in a form array
 *
 * The options object is used to set a default value for each child
 * control's `updateOn` property. If you set `updateOn` to `'blur'` at the
 * array level, all child controls default to 'blur', unless the child
 * has explicitly specified a different `updateOn` value.
 *
 * ```ts
 * const arr = new FormArray([
 *    new FormControl()
 * ], {updateOn: 'blur'});
 * ```
 *
 * ### Adding or removing controls from a form array
 *
 * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods
 * in `FormArray` itself. These methods ensure the controls are properly tracked in the
 * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate
 * the `FormArray` directly, as that result in strange and unexpected behavior such
 * as broken change detection.
 *
 * @publicApi
 */


var FormArray = /*#__PURE__*/function (_AbstractControl3) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(FormArray, _AbstractControl3);

  var _super7 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(FormArray);

  /**
   * Creates a new `FormArray` instance.
   *
   * @param controls An array of child controls. Each child control is given an index
   * where it is registered.
   *
   * @param validatorOrOpts A synchronous validator function, or an array of
   * such functions, or an `AbstractControlOptions` object that contains validation functions
   * and a validation trigger.
   *
   * @param asyncValidator A single async validator or array of async validator functions
   *
   */
  function FormArray(controls, validatorOrOpts, asyncValidator) {
    var _this16;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, FormArray);

    _this16 = _super7.call(this, pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));
    _this16.controls = controls;

    _this16._initObservables();

    _this16._setUpdateStrategy(validatorOrOpts);

    _this16._setUpControls();

    _this16.updateValueAndValidity({
      onlySelf: true,
      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to
      // `VALID` or `INVALID`.
      // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`
      // to `true` to allow that during the control creation process.
      emitEvent: !!asyncValidator
    });

    return _this16;
  }
  /**
   * Get the `AbstractControl` at the given `index` in the array.
   *
   * @param index Index in the array to retrieve the control
   */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(FormArray, [{
    key: "at",
    value: function at(index) {
      return this.controls[index];
    }
    /**
     * Insert a new `AbstractControl` at the end of the array.
     *
     * @param control Form control to be inserted
     */

  }, {
    key: "push",
    value: function push(control) {
      this.controls.push(control);

      this._registerControl(control);

      this.updateValueAndValidity();

      this._onCollectionChange();
    }
    /**
     * Insert a new `AbstractControl` at the given `index` in the array.
     *
     * @param index Index in the array to insert the control
     * @param control Form control to be inserted
     */

  }, {
    key: "insert",
    value: function insert(index, control) {
      this.controls.splice(index, 0, control);

      this._registerControl(control);

      this.updateValueAndValidity();
    }
    /**
     * Remove the control at the given `index` in the array.
     *
     * @param index Index in the array to remove the control
     */

  }, {
    key: "removeAt",
    value: function removeAt(index) {
      if (this.controls[index]) this.controls[index]._registerOnCollectionChange(function () {});
      this.controls.splice(index, 1);
      this.updateValueAndValidity();
    }
    /**
     * Replace an existing control.
     *
     * @param index Index in the array to replace the control
     * @param control The `AbstractControl` control to replace the existing control
     */

  }, {
    key: "setControl",
    value: function setControl(index, control) {
      if (this.controls[index]) this.controls[index]._registerOnCollectionChange(function () {});
      this.controls.splice(index, 1);

      if (control) {
        this.controls.splice(index, 0, control);

        this._registerControl(control);
      }

      this.updateValueAndValidity();

      this._onCollectionChange();
    }
    /**
     * Length of the control array.
     */

  }, {
    key: "setValue",

    /**
     * Sets the value of the `FormArray`. It accepts an array that matches
     * the structure of the control.
     *
     * This method performs strict checks, and throws an error if you try
     * to set the value of a control that doesn't exist or if you exclude the
     * value of a control.
     *
     * @usageNotes
     * ### Set the values for the controls in the form array
     *
     * ```
     * const arr = new FormArray([
     *   new FormControl(),
     *   new FormControl()
     * ]);
     * console.log(arr.value);   // [null, null]
     *
     * arr.setValue(['Nancy', 'Drew']);
     * console.log(arr.value);   // ['Nancy', 'Drew']
     * ```
     *
     * @param value Array of values for the controls
     * @param options Configure options that determine how the control propagates changes and
     * emits events after the value changes
     *
     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default
     * is false.
     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
     * `valueChanges`
     * observables emit events with the latest status and value when the control value is updated.
     * When false, no events are emitted.
     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity
     * updateValueAndValidity} method.
     */
    value: function setValue(value) {
      var _this17 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      this._checkAllValuesPresent(value);

      value.forEach(function (newValue, index) {
        _this17._throwIfControlMissing(index);

        _this17.at(index).setValue(newValue, {
          onlySelf: true,
          emitEvent: options.emitEvent
        });
      });
      this.updateValueAndValidity(options);
    }
    /**
     * Patches the value of the `FormArray`. It accepts an array that matches the
     * structure of the control, and does its best to match the values to the correct
     * controls in the group.
     *
     * It accepts both super-sets and sub-sets of the array without throwing an error.
     *
     * @usageNotes
     * ### Patch the values for controls in a form array
     *
     * ```
     * const arr = new FormArray([
     *    new FormControl(),
     *    new FormControl()
     * ]);
     * console.log(arr.value);   // [null, null]
     *
     * arr.patchValue(['Nancy']);
     * console.log(arr.value);   // ['Nancy', null]
     * ```
     *
     * @param value Array of latest values for the controls
     * @param options Configure options that determine how the control propagates changes and
     * emits events after the value changes
     *
     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default
     * is false.
     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
     * `valueChanges`
     * observables emit events with the latest status and value when the control value is updated.
     * When false, no events are emitted.
     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity
     * updateValueAndValidity} method.
     */

  }, {
    key: "patchValue",
    value: function patchValue(value) {
      var _this18 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      value.forEach(function (newValue, index) {
        if (_this18.at(index)) {
          _this18.at(index).patchValue(newValue, {
            onlySelf: true,
            emitEvent: options.emitEvent
          });
        }
      });
      this.updateValueAndValidity(options);
    }
    /**
     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the
     * value of all descendants to null or null maps.
     *
     * You reset to a specific form state by passing in an array of states
     * that matches the structure of the control. The state is a standalone value
     * or a form state object with both a value and a disabled status.
     *
     * @usageNotes
     * ### Reset the values in a form array
     *
     * ```ts
     * const arr = new FormArray([
     *    new FormControl(),
     *    new FormControl()
     * ]);
     * arr.reset(['name', 'last name']);
     *
     * console.log(this.arr.value);  // ['name', 'last name']
     * ```
     *
     * ### Reset the values in a form array and the disabled status for the first control
     *
     * ```
     * this.arr.reset([
     *   {value: 'name', disabled: true},
     *   'last'
     * ]);
     *
     * console.log(this.arr.value);  // ['name', 'last name']
     * console.log(this.arr.get(0).status);  // 'DISABLED'
     * ```
     *
     * @param value Array of values for the controls
     * @param options Configure options that determine how the control propagates changes and
     * emits events after the value changes
     *
     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default
     * is false.
     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
     * `valueChanges`
     * observables emit events with the latest status and value when the control is reset.
     * When false, no events are emitted.
     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity
     * updateValueAndValidity} method.
     */

  }, {
    key: "reset",
    value: function reset() {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      this._forEachChild(function (control, index) {
        control.reset(value[index], {
          onlySelf: true,
          emitEvent: options.emitEvent
        });
      });

      this._updatePristine(options);

      this._updateTouched(options);

      this.updateValueAndValidity(options);
    }
    /**
     * The aggregate value of the array, including any disabled controls.
     *
     * Reports all values regardless of disabled status.
     * For enabled controls only, the `value` property is the best way to get the value of the array.
     */

  }, {
    key: "getRawValue",
    value: function getRawValue() {
      return this.controls.map(function (control) {
        return control instanceof FormControl ? control.value : control.getRawValue();
      });
    }
    /**
     * Remove all controls in the `FormArray`.
     *
     * @usageNotes
     * ### Remove all elements from a FormArray
     *
     * ```ts
     * const arr = new FormArray([
     *    new FormControl(),
     *    new FormControl()
     * ]);
     * console.log(arr.length);  // 2
     *
     * arr.clear();
     * console.log(arr.length);  // 0
     * ```
     *
     * It's a simpler and more efficient alternative to removing all elements one by one:
     *
     * ```ts
     * const arr = new FormArray([
     *    new FormControl(),
     *    new FormControl()
     * ]);
     *
     * while (arr.length) {
     *    arr.removeAt(0);
     * }
     * ```
     */

  }, {
    key: "clear",
    value: function clear() {
      if (this.controls.length < 1) return;

      this._forEachChild(function (control) {
        return control._registerOnCollectionChange(function () {});
      });

      this.controls.splice(0);
      this.updateValueAndValidity();
    }
    /** @internal */

  }, {
    key: "_syncPendingControls",
    value: function _syncPendingControls() {
      var subtreeUpdated = this.controls.reduce(function (updated, child) {
        return child._syncPendingControls() ? true : updated;
      }, false);
      if (subtreeUpdated) this.updateValueAndValidity({
        onlySelf: true
      });
      return subtreeUpdated;
    }
    /** @internal */

  }, {
    key: "_throwIfControlMissing",
    value: function _throwIfControlMissing(index) {
      if (!this.controls.length) {
        throw new Error("\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");
      }

      if (!this.at(index)) {
        throw new Error("Cannot find form control at index ".concat(index));
      }
    }
    /** @internal */

  }, {
    key: "_forEachChild",
    value: function _forEachChild(cb) {
      this.controls.forEach(function (control, index) {
        cb(control, index);
      });
    }
    /** @internal */

  }, {
    key: "_updateValue",
    value: function _updateValue() {
      var _this19 = this;

      this.value = this.controls.filter(function (control) {
        return control.enabled || _this19.disabled;
      }).map(function (control) {
        return control.value;
      });
    }
    /** @internal */

  }, {
    key: "_anyControls",
    value: function _anyControls(condition) {
      return this.controls.some(function (control) {
        return control.enabled && condition(control);
      });
    }
    /** @internal */

  }, {
    key: "_setUpControls",
    value: function _setUpControls() {
      var _this20 = this;

      this._forEachChild(function (control) {
        return _this20._registerControl(control);
      });
    }
    /** @internal */

  }, {
    key: "_checkAllValuesPresent",
    value: function _checkAllValuesPresent(value) {
      this._forEachChild(function (control, i) {
        if (value[i] === undefined) {
          throw new Error("Must supply a value for form control at index: ".concat(i, "."));
        }
      });
    }
    /** @internal */

  }, {
    key: "_allControlsDisabled",
    value: function _allControlsDisabled() {
      var _iterator = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(this.controls),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var control = _step.value;
          if (control.enabled) return false;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return this.controls.length > 0 || this.disabled;
    }
  }, {
    key: "_registerControl",
    value: function _registerControl(control) {
      control.setParent(this);

      control._registerOnCollectionChange(this._onCollectionChange);
    }
  }, {
    key: "length",
    get: function get() {
      return this.controls.length;
    }
  }]);

  return FormArray;
}(AbstractControl);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var formDirectiveProvider = {
  provide: ControlContainer,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return NgForm;
  })
};

var ɵ0 = function ɵ0() {
  return Promise.resolve(null);
};

var resolvedPromise = /*@__PURE__*/ɵ0();

var NgForm = /*@__PURE__*/function () {
  var NgForm = /*#__PURE__*/function (_ControlContainer) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(NgForm, _ControlContainer);

    var _super8 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(NgForm);

    function NgForm(validators, asyncValidators) {
      var _this21;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgForm);

      _this21 = _super8.call(this);
      /**
       * @description
       * Returns whether the form submission has been triggered.
       */

      _this21.submitted = false;
      _this21._directives = [];
      /**
       * @description
       * Event emitter for the "ngSubmit" event
       */

      _this21.ngSubmit = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["EventEmitter"]();
      _this21.form = new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));
      return _this21;
    }
    /** @nodoc */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(NgForm, [{
      key: "ngAfterViewInit",
      value: function ngAfterViewInit() {
        this._setUpdateStrategy();
      }
      /**
       * @description
       * The directive instance.
       */

    }, {
      key: "addControl",

      /**
       * @description
       * Method that sets up the control directive in this group, re-calculates its value
       * and validity, and adds the instance to the internal list of directives.
       *
       * @param dir The `NgModel` directive instance.
       */
      value: function addControl(dir) {
        var _this22 = this;

        resolvedPromise.then(function () {
          var container = _this22._findContainer(dir.path);

          dir.control = container.registerControl(dir.name, dir.control);
          setUpControl(dir.control, dir);
          dir.control.updateValueAndValidity({
            emitEvent: false
          });

          _this22._directives.push(dir);
        });
      }
      /**
       * @description
       * Retrieves the `FormControl` instance from the provided `NgModel` directive.
       *
       * @param dir The `NgModel` directive instance.
       */

    }, {
      key: "getControl",
      value: function getControl(dir) {
        return this.form.get(dir.path);
      }
      /**
       * @description
       * Removes the `NgModel` instance from the internal list of directives
       *
       * @param dir The `NgModel` directive instance.
       */

    }, {
      key: "removeControl",
      value: function removeControl(dir) {
        var _this23 = this;

        resolvedPromise.then(function () {
          var container = _this23._findContainer(dir.path);

          if (container) {
            container.removeControl(dir.name);
          }

          removeListItem(_this23._directives, dir);
        });
      }
      /**
       * @description
       * Adds a new `NgModelGroup` directive instance to the form.
       *
       * @param dir The `NgModelGroup` directive instance.
       */

    }, {
      key: "addFormGroup",
      value: function addFormGroup(dir) {
        var _this24 = this;

        resolvedPromise.then(function () {
          var container = _this24._findContainer(dir.path);

          var group = new FormGroup({});
          setUpFormContainer(group, dir);
          container.registerControl(dir.name, group);
          group.updateValueAndValidity({
            emitEvent: false
          });
        });
      }
      /**
       * @description
       * Removes the `NgModelGroup` directive instance from the form.
       *
       * @param dir The `NgModelGroup` directive instance.
       */

    }, {
      key: "removeFormGroup",
      value: function removeFormGroup(dir) {
        var _this25 = this;

        resolvedPromise.then(function () {
          var container = _this25._findContainer(dir.path);

          if (container) {
            container.removeControl(dir.name);
          }
        });
      }
      /**
       * @description
       * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance
       *
       * @param dir The `NgModelGroup` directive instance.
       */

    }, {
      key: "getFormGroup",
      value: function getFormGroup(dir) {
        return this.form.get(dir.path);
      }
      /**
       * Sets the new value for the provided `NgControl` directive.
       *
       * @param dir The `NgControl` directive instance.
       * @param value The new value for the directive's control.
       */

    }, {
      key: "updateModel",
      value: function updateModel(dir, value) {
        var _this26 = this;

        resolvedPromise.then(function () {
          var ctrl = _this26.form.get(dir.path);

          ctrl.setValue(value);
        });
      }
      /**
       * @description
       * Sets the value for this `FormGroup`.
       *
       * @param value The new value
       */

    }, {
      key: "setValue",
      value: function setValue(value) {
        this.control.setValue(value);
      }
      /**
       * @description
       * Method called when the "submit" event is triggered on the form.
       * Triggers the `ngSubmit` emitter to emit the "submit" event as its payload.
       *
       * @param $event The "submit" event object
       */

    }, {
      key: "onSubmit",
      value: function onSubmit($event) {
        this.submitted = true;
        syncPendingControls(this.form, this._directives);
        this.ngSubmit.emit($event);
        return false;
      }
      /**
       * @description
       * Method called when the "reset" event is triggered on the form.
       */

    }, {
      key: "onReset",
      value: function onReset() {
        this.resetForm();
      }
      /**
       * @description
       * Resets the form to an initial value and resets its submitted status.
       *
       * @param value The new value for the form.
       */

    }, {
      key: "resetForm",
      value: function resetForm() {
        var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
        this.form.reset(value);
        this.submitted = false;
      }
    }, {
      key: "_setUpdateStrategy",
      value: function _setUpdateStrategy() {
        if (this.options && this.options.updateOn != null) {
          this.form._updateOn = this.options.updateOn;
        }
      }
      /** @internal */

    }, {
      key: "_findContainer",
      value: function _findContainer(path) {
        path.pop();
        return path.length ? this.form.get(path) : this.form;
      }
    }, {
      key: "formDirective",
      get: function get() {
        return this;
      }
      /**
       * @description
       * The internal `FormGroup` instance.
       */

    }, {
      key: "control",
      get: function get() {
        return this.form;
      }
      /**
       * @description
       * Returns an array representing the path to this group. Because this directive
       * always lives at the top level of a form, it is always an empty array.
       */

    }, {
      key: "path",
      get: function get() {
        return [];
      }
      /**
       * @description
       * Returns a map of the controls in this group.
       */

    }, {
      key: "controls",
      get: function get() {
        return this.form.controls;
      }
    }]);

    return NgForm;
  }(ControlContainer);

  NgForm.ɵfac = function NgForm_Factory(t) {
    return new (t || NgForm)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_ASYNC_VALIDATORS, 10));
  };

  NgForm.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: NgForm,
    selectors: [["form", 3, "ngNoForm", "", 3, "formGroup", ""], ["ng-form"], ["", "ngForm", ""]],
    hostBindings: function NgForm_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("submit", function NgForm_submit_HostBindingHandler($event) {
          return ctx.onSubmit($event);
        })("reset", function NgForm_reset_HostBindingHandler() {
          return ctx.onReset();
        });
      }
    },
    inputs: {
      options: ["ngFormOptions", "options"]
    },
    outputs: {
      ngSubmit: "ngSubmit"
    },
    exportAs: ["ngForm"],
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([formDirectiveProvider]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
  });
  return NgForm;
}();

var AbstractFormGroupDirective = /*@__PURE__*/function () {
  var AbstractFormGroupDirective = /*#__PURE__*/function (_ControlContainer2) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(AbstractFormGroupDirective, _ControlContainer2);

    var _super9 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(AbstractFormGroupDirective);

    function AbstractFormGroupDirective() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, AbstractFormGroupDirective);

      return _super9.apply(this, arguments);
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(AbstractFormGroupDirective, [{
      key: "ngOnInit",

      /** @nodoc */
      value: function ngOnInit() {
        this._checkParentType(); // Register the group with its parent group.


        this.formDirective.addFormGroup(this);
      }
      /** @nodoc */

    }, {
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        if (this.formDirective) {
          // Remove the group from its parent group.
          this.formDirective.removeFormGroup(this);
        }
      }
      /**
       * @description
       * The `FormGroup` bound to this directive.
       */

    }, {
      key: "_checkParentType",

      /** @internal */
      value: function _checkParentType() {}
    }, {
      key: "control",
      get: function get() {
        return this.formDirective.getFormGroup(this);
      }
      /**
       * @description
       * The path to this group from the top-level directive.
       */

    }, {
      key: "path",
      get: function get() {
        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);
      }
      /**
       * @description
       * The top-level directive for this group if present, otherwise null.
       */

    }, {
      key: "formDirective",
      get: function get() {
        return this._parent ? this._parent.formDirective : null;
      }
    }]);

    return AbstractFormGroupDirective;
  }(ControlContainer);

  AbstractFormGroupDirective.ɵfac = function AbstractFormGroupDirective_Factory(t) {
    return ɵAbstractFormGroupDirective_BaseFactory(t || AbstractFormGroupDirective);
  };

  AbstractFormGroupDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: AbstractFormGroupDirective,
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
  });
  return AbstractFormGroupDirective;
}();

var ɵAbstractFormGroupDirective_BaseFactory =
/*@__PURE__*/

/*@__PURE__*/
_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](AbstractFormGroupDirective);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var TemplateDrivenErrors = /*#__PURE__*/function () {
  function TemplateDrivenErrors() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, TemplateDrivenErrors);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(TemplateDrivenErrors, null, [{
    key: "modelParentException",
    value: function modelParentException() {
      throw new Error("\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive \"formControlName\" instead.  Example:\n\n      ".concat(FormErrorExamples.formControlName, "\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      ").concat(FormErrorExamples.ngModelWithFormGroup));
    }
  }, {
    key: "formGroupNameException",
    value: function formGroupNameException() {
      throw new Error("\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ".concat(FormErrorExamples.formGroupName, "\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ").concat(FormErrorExamples.ngModelGroup));
    }
  }, {
    key: "missingNameException",
    value: function missingNameException() {
      throw new Error("If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as 'standalone' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">");
    }
  }, {
    key: "modelGroupParentException",
    value: function modelGroupParentException() {
      throw new Error("\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ".concat(FormErrorExamples.formGroupName, "\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ").concat(FormErrorExamples.ngModelGroup));
    }
  }]);

  return TemplateDrivenErrors;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var modelGroupProvider = {
  provide: ControlContainer,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return NgModelGroup;
  })
};

var NgModelGroup = /*@__PURE__*/function () {
  var NgModelGroup = /*#__PURE__*/function (_AbstractFormGroupDir) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(NgModelGroup, _AbstractFormGroupDir);

    var _super10 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(NgModelGroup);

    function NgModelGroup(parent, validators, asyncValidators) {
      var _this27;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgModelGroup);

      _this27 = _super10.call(this);
      _this27._parent = parent;

      _this27._setValidators(validators);

      _this27._setAsyncValidators(asyncValidators);

      return _this27;
    }
    /** @internal */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(NgModelGroup, [{
      key: "_checkParentType",
      value: function _checkParentType() {
        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) && (typeof ngDevMode === 'undefined' || ngDevMode)) {
          TemplateDrivenErrors.modelGroupParentException();
        }
      }
    }]);

    return NgModelGroup;
  }(AbstractFormGroupDirective);

  NgModelGroup.ɵfac = function NgModelGroup_Factory(t) {
    return new (t || NgModelGroup)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](ControlContainer, 5), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_ASYNC_VALIDATORS, 10));
  };

  NgModelGroup.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: NgModelGroup,
    selectors: [["", "ngModelGroup", ""]],
    inputs: {
      name: ["ngModelGroup", "name"]
    },
    exportAs: ["ngModelGroup"],
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([modelGroupProvider]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
  });
  return NgModelGroup;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var formControlBinding = {
  provide: NgControl,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return NgModel;
  })
};

var ɵ0$1 = function ɵ0$1() {
  return Promise.resolve(null);
};
/**
 * `ngModel` forces an additional change detection run when its inputs change:
 * E.g.:
 * ```
 * <div>{{myModel.valid}}</div>
 * <input [(ngModel)]="myValue" #myModel="ngModel">
 * ```
 * I.e. `ngModel` can export itself on the element and then be used in the template.
 * Normally, this would result in expressions before the `input` that use the exported directive
 * to have an old value as they have been
 * dirty checked before. As this is a very common case for `ngModel`, we added this second change
 * detection run.
 *
 * Notes:
 * - this is just one extra run no matter how many `ngModel`s have been changed.
 * - this is a general problem when using `exportAs` for directives!
 */


var resolvedPromise$1 = /*@__PURE__*/ɵ0$1();

var NgModel = /*@__PURE__*/function () {
  var NgModel = /*#__PURE__*/function (_NgControl) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(NgModel, _NgControl);

    var _super11 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(NgModel);

    function NgModel(parent, validators, asyncValidators, valueAccessors) {
      var _this28;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgModel);

      _this28 = _super11.call(this);
      _this28.control = new FormControl();
      /** @internal */

      _this28._registered = false;
      /**
       * @description
       * Event emitter for producing the `ngModelChange` event after
       * the view model updates.
       */

      _this28.update = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["EventEmitter"]();
      _this28._parent = parent;

      _this28._setValidators(validators);

      _this28._setAsyncValidators(asyncValidators);

      _this28.valueAccessor = selectValueAccessor(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this28), valueAccessors);
      return _this28;
    }
    /** @nodoc */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(NgModel, [{
      key: "ngOnChanges",
      value: function ngOnChanges(changes) {
        this._checkForErrors();

        if (!this._registered) this._setUpControl();

        if ('isDisabled' in changes) {
          this._updateDisabled(changes);
        }

        if (isPropertyUpdated(changes, this.viewModel)) {
          this._updateValue(this.model);

          this.viewModel = this.model;
        }
      }
      /** @nodoc */

    }, {
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        this.formDirective && this.formDirective.removeControl(this);
      }
      /**
       * @description
       * Returns an array that represents the path from the top-level form to this control.
       * Each index is the string name of the control on that level.
       */

    }, {
      key: "viewToModelUpdate",

      /**
       * @description
       * Sets the new value for the view model and emits an `ngModelChange` event.
       *
       * @param newValue The new value emitted by `ngModelChange`.
       */
      value: function viewToModelUpdate(newValue) {
        this.viewModel = newValue;
        this.update.emit(newValue);
      }
    }, {
      key: "_setUpControl",
      value: function _setUpControl() {
        this._setUpdateStrategy();

        this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);
        this._registered = true;
      }
    }, {
      key: "_setUpdateStrategy",
      value: function _setUpdateStrategy() {
        if (this.options && this.options.updateOn != null) {
          this.control._updateOn = this.options.updateOn;
        }
      }
    }, {
      key: "_isStandalone",
      value: function _isStandalone() {
        return !this._parent || !!(this.options && this.options.standalone);
      }
    }, {
      key: "_setUpStandalone",
      value: function _setUpStandalone() {
        setUpControl(this.control, this);
        this.control.updateValueAndValidity({
          emitEvent: false
        });
      }
    }, {
      key: "_checkForErrors",
      value: function _checkForErrors() {
        if (!this._isStandalone()) {
          this._checkParentType();
        }

        this._checkName();
      }
    }, {
      key: "_checkParentType",
      value: function _checkParentType() {
        if (typeof ngDevMode === 'undefined' || ngDevMode) {
          if (!(this._parent instanceof NgModelGroup) && this._parent instanceof AbstractFormGroupDirective) {
            TemplateDrivenErrors.formGroupNameException();
          } else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {
            TemplateDrivenErrors.modelParentException();
          }
        }
      }
    }, {
      key: "_checkName",
      value: function _checkName() {
        if (this.options && this.options.name) this.name = this.options.name;

        if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {
          TemplateDrivenErrors.missingNameException();
        }
      }
    }, {
      key: "_updateValue",
      value: function _updateValue(value) {
        var _this29 = this;

        resolvedPromise$1.then(function () {
          _this29.control.setValue(value, {
            emitViewToModelChange: false
          });
        });
      }
    }, {
      key: "_updateDisabled",
      value: function _updateDisabled(changes) {
        var _this30 = this;

        var disabledValue = changes['isDisabled'].currentValue;
        var isDisabled = disabledValue === '' || disabledValue && disabledValue !== 'false';
        resolvedPromise$1.then(function () {
          if (isDisabled && !_this30.control.disabled) {
            _this30.control.disable();
          } else if (!isDisabled && _this30.control.disabled) {
            _this30.control.enable();
          }
        });
      }
    }, {
      key: "path",
      get: function get() {
        return this._parent ? controlPath(this.name, this._parent) : [this.name];
      }
      /**
       * @description
       * The top-level directive for this control if present, otherwise null.
       */

    }, {
      key: "formDirective",
      get: function get() {
        return this._parent ? this._parent.formDirective : null;
      }
    }]);

    return NgModel;
  }(NgControl);

  NgModel.ɵfac = function NgModel_Factory(t) {
    return new (t || NgModel)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](ControlContainer, 9), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_ASYNC_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_VALUE_ACCESSOR, 10));
  };

  NgModel.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: NgModel,
    selectors: [["", "ngModel", "", 3, "formControlName", "", 3, "formControl", ""]],
    inputs: {
      name: "name",
      isDisabled: ["disabled", "isDisabled"],
      model: ["ngModel", "model"],
      options: ["ngModelOptions", "options"]
    },
    outputs: {
      update: "ngModelChange"
    },
    exportAs: ["ngModel"],
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([formControlBinding]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵNgOnChangesFeature"]]
  });
  return NgModel;
}();

var ɵNgNoValidate = /*@__PURE__*/function () {
  var ɵNgNoValidate = function ɵNgNoValidate() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, ɵNgNoValidate);
  };

  ɵNgNoValidate.ɵfac = function ɵNgNoValidate_Factory(t) {
    return new (t || ɵNgNoValidate)();
  };

  ɵNgNoValidate.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: ɵNgNoValidate,
    selectors: [["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""]],
    hostAttrs: ["novalidate", ""]
  });
  return ɵNgNoValidate;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Token to provide to turn off the ngModel warning on formControl and formControlName.
 */


var NG_MODEL_WITH_FORM_CONTROL_WARNING = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('NgModelWithFormControlWarning');
var formControlBinding$1 = {
  provide: NgControl,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return FormControlDirective;
  })
};

var FormControlDirective = /*@__PURE__*/function () {
  var FormControlDirective = /*#__PURE__*/function (_NgControl2) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(FormControlDirective, _NgControl2);

    var _super12 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(FormControlDirective);

    function FormControlDirective(validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {
      var _this31;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, FormControlDirective);

      _this31 = _super12.call(this);
      _this31._ngModelWarningConfig = _ngModelWarningConfig;
      /** @deprecated as of v6 */

      _this31.update = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["EventEmitter"]();
      /**
       * @description
       * Instance property used to track whether an ngModel warning has been sent out for this
       * particular `FormControlDirective` instance. Used to support warning config of "always".
       *
       * @internal
       */

      _this31._ngModelWarningSent = false;

      _this31._setValidators(validators);

      _this31._setAsyncValidators(asyncValidators);

      _this31.valueAccessor = selectValueAccessor(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this31), valueAccessors);
      return _this31;
    }
    /**
     * @description
     * Triggers a warning in dev mode that this input should not be used with reactive forms.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(FormControlDirective, [{
      key: "ngOnChanges",

      /** @nodoc */
      value: function ngOnChanges(changes) {
        if (this._isControlChanged(changes)) {
          setUpControl(this.form, this);

          if (this.control.disabled && this.valueAccessor.setDisabledState) {
            this.valueAccessor.setDisabledState(true);
          }

          this.form.updateValueAndValidity({
            emitEvent: false
          });
        }

        if (isPropertyUpdated(changes, this.viewModel)) {
          _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);

          this.form.setValue(this.model);
          this.viewModel = this.model;
        }
      }
      /**
       * @description
       * Returns an array that represents the path from the top-level form to this control.
       * Each index is the string name of the control on that level.
       */

    }, {
      key: "viewToModelUpdate",

      /**
       * @description
       * Sets the new value for the view model and emits an `ngModelChange` event.
       *
       * @param newValue The new value for the view model.
       */
      value: function viewToModelUpdate(newValue) {
        this.viewModel = newValue;
        this.update.emit(newValue);
      }
    }, {
      key: "_isControlChanged",
      value: function _isControlChanged(changes) {
        return changes.hasOwnProperty('form');
      }
    }, {
      key: "isDisabled",
      set: function set(isDisabled) {
        if (typeof ngDevMode === 'undefined' || ngDevMode) {
          ReactiveErrors.disabledAttrWarning();
        }
      }
    }, {
      key: "path",
      get: function get() {
        return [];
      }
      /**
       * @description
       * The `FormControl` bound to this directive.
       */

    }, {
      key: "control",
      get: function get() {
        return this.form;
      }
    }]);

    return FormControlDirective;
  }(NgControl);

  FormControlDirective.ɵfac = function FormControlDirective_Factory(t) {
    return new (t || FormControlDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_ASYNC_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_VALUE_ACCESSOR, 10), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_MODEL_WITH_FORM_CONTROL_WARNING, 8));
  };

  FormControlDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: FormControlDirective,
    selectors: [["", "formControl", ""]],
    inputs: {
      isDisabled: ["disabled", "isDisabled"],
      form: ["formControl", "form"],
      model: ["ngModel", "model"]
    },
    outputs: {
      update: "ngModelChange"
    },
    exportAs: ["ngForm"],
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([formControlBinding$1]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵNgOnChangesFeature"]]
  });
  /**
   * @description
   * Static property used to track whether any ngModel warnings have been sent across
   * all instances of FormControlDirective. Used to support warning config of "once".
   *
   * @internal
   */

  FormControlDirective._ngModelWarningSentOnce = false;
  return FormControlDirective;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var formDirectiveProvider$1 = {
  provide: ControlContainer,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return FormGroupDirective;
  })
};

var FormGroupDirective = /*@__PURE__*/function () {
  var FormGroupDirective = /*#__PURE__*/function (_ControlContainer3) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(FormGroupDirective, _ControlContainer3);

    var _super13 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(FormGroupDirective);

    function FormGroupDirective(validators, asyncValidators) {
      var _this32;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, FormGroupDirective);

      _this32 = _super13.call(this);
      _this32.validators = validators;
      _this32.asyncValidators = asyncValidators;
      /**
       * @description
       * Reports whether the form submission has been triggered.
       */

      _this32.submitted = false;
      /**
       * @description
       * Tracks the list of added `FormControlName` instances
       */

      _this32.directives = [];
      /**
       * @description
       * Tracks the `FormGroup` bound to this directive.
       */

      _this32.form = null;
      /**
       * @description
       * Emits an event when the form submission has been triggered.
       */

      _this32.ngSubmit = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["EventEmitter"]();

      _this32._setValidators(validators);

      _this32._setAsyncValidators(asyncValidators);

      return _this32;
    }
    /** @nodoc */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(FormGroupDirective, [{
      key: "ngOnChanges",
      value: function ngOnChanges(changes) {
        this._checkFormPresent();

        if (changes.hasOwnProperty('form')) {
          this._updateValidators();

          this._updateDomValue();

          this._updateRegistrations();

          this._oldForm = this.form;
        }
      }
      /**
       * @description
       * Returns this directive's instance.
       */

    }, {
      key: "addControl",

      /**
       * @description
       * Method that sets up the control directive in this group, re-calculates its value
       * and validity, and adds the instance to the internal list of directives.
       *
       * @param dir The `FormControlName` directive instance.
       */
      value: function addControl(dir) {
        var ctrl = this.form.get(dir.path);
        setUpControl(ctrl, dir);
        ctrl.updateValueAndValidity({
          emitEvent: false
        });
        this.directives.push(dir);
        return ctrl;
      }
      /**
       * @description
       * Retrieves the `FormControl` instance from the provided `FormControlName` directive
       *
       * @param dir The `FormControlName` directive instance.
       */

    }, {
      key: "getControl",
      value: function getControl(dir) {
        return this.form.get(dir.path);
      }
      /**
       * @description
       * Removes the `FormControlName` instance from the internal list of directives
       *
       * @param dir The `FormControlName` directive instance.
       */

    }, {
      key: "removeControl",
      value: function removeControl(dir) {
        removeListItem(this.directives, dir);
      }
      /**
       * Adds a new `FormGroupName` directive instance to the form.
       *
       * @param dir The `FormGroupName` directive instance.
       */

    }, {
      key: "addFormGroup",
      value: function addFormGroup(dir) {
        var ctrl = this.form.get(dir.path);
        setUpFormContainer(ctrl, dir);
        ctrl.updateValueAndValidity({
          emitEvent: false
        });
      }
      /**
       * No-op method to remove the form group.
       *
       * @param dir The `FormGroupName` directive instance.
       */

    }, {
      key: "removeFormGroup",
      value: function removeFormGroup(dir) {}
      /**
       * @description
       * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance
       *
       * @param dir The `FormGroupName` directive instance.
       */

    }, {
      key: "getFormGroup",
      value: function getFormGroup(dir) {
        return this.form.get(dir.path);
      }
      /**
       * Adds a new `FormArrayName` directive instance to the form.
       *
       * @param dir The `FormArrayName` directive instance.
       */

    }, {
      key: "addFormArray",
      value: function addFormArray(dir) {
        var ctrl = this.form.get(dir.path);
        setUpFormContainer(ctrl, dir);
        ctrl.updateValueAndValidity({
          emitEvent: false
        });
      }
      /**
       * No-op method to remove the form array.
       *
       * @param dir The `FormArrayName` directive instance.
       */

    }, {
      key: "removeFormArray",
      value: function removeFormArray(dir) {}
      /**
       * @description
       * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.
       *
       * @param dir The `FormArrayName` directive instance.
       */

    }, {
      key: "getFormArray",
      value: function getFormArray(dir) {
        return this.form.get(dir.path);
      }
      /**
       * Sets the new value for the provided `FormControlName` directive.
       *
       * @param dir The `FormControlName` directive instance.
       * @param value The new value for the directive's control.
       */

    }, {
      key: "updateModel",
      value: function updateModel(dir, value) {
        var ctrl = this.form.get(dir.path);
        ctrl.setValue(value);
      }
      /**
       * @description
       * Method called with the "submit" event is triggered on the form.
       * Triggers the `ngSubmit` emitter to emit the "submit" event as its payload.
       *
       * @param $event The "submit" event object
       */

    }, {
      key: "onSubmit",
      value: function onSubmit($event) {
        this.submitted = true;
        syncPendingControls(this.form, this.directives);
        this.ngSubmit.emit($event);
        return false;
      }
      /**
       * @description
       * Method called when the "reset" event is triggered on the form.
       */

    }, {
      key: "onReset",
      value: function onReset() {
        this.resetForm();
      }
      /**
       * @description
       * Resets the form to an initial value and resets its submitted status.
       *
       * @param value The new value for the form.
       */

    }, {
      key: "resetForm",
      value: function resetForm() {
        var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
        this.form.reset(value);
        this.submitted = false;
      }
      /** @internal */

    }, {
      key: "_updateDomValue",
      value: function _updateDomValue() {
        var _this33 = this;

        this.directives.forEach(function (dir) {
          var newCtrl = _this33.form.get(dir.path);

          if (dir.control !== newCtrl) {
            // Note: the value of the `dir.control` may not be defined, for example when it's a first
            // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).
            cleanUpControl(dir.control || null, dir);
            if (newCtrl) setUpControl(newCtrl, dir);
            dir.control = newCtrl;
          }
        });

        this.form._updateTreeValidity({
          emitEvent: false
        });
      }
    }, {
      key: "_updateRegistrations",
      value: function _updateRegistrations() {
        var _this34 = this;

        this.form._registerOnCollectionChange(function () {
          return _this34._updateDomValue();
        });

        if (this._oldForm) {
          this._oldForm._registerOnCollectionChange(function () {});
        }
      }
    }, {
      key: "_updateValidators",
      value: function _updateValidators() {
        setUpValidators(this.form, this,
        /* handleOnValidatorChange */
        false);

        if (this._oldForm) {
          cleanUpValidators(this._oldForm, this,
          /* handleOnValidatorChange */
          false);
        }
      }
    }, {
      key: "_checkFormPresent",
      value: function _checkFormPresent() {
        if (!this.form && (typeof ngDevMode === 'undefined' || ngDevMode)) {
          ReactiveErrors.missingFormException();
        }
      }
    }, {
      key: "formDirective",
      get: function get() {
        return this;
      }
      /**
       * @description
       * Returns the `FormGroup` bound to this directive.
       */

    }, {
      key: "control",
      get: function get() {
        return this.form;
      }
      /**
       * @description
       * Returns an array representing the path to this group. Because this directive
       * always lives at the top level of a form, it always an empty array.
       */

    }, {
      key: "path",
      get: function get() {
        return [];
      }
    }]);

    return FormGroupDirective;
  }(ControlContainer);

  FormGroupDirective.ɵfac = function FormGroupDirective_Factory(t) {
    return new (t || FormGroupDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_ASYNC_VALIDATORS, 10));
  };

  FormGroupDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: FormGroupDirective,
    selectors: [["", "formGroup", ""]],
    hostBindings: function FormGroupDirective_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("submit", function FormGroupDirective_submit_HostBindingHandler($event) {
          return ctx.onSubmit($event);
        })("reset", function FormGroupDirective_reset_HostBindingHandler() {
          return ctx.onReset();
        });
      }
    },
    inputs: {
      form: ["formGroup", "form"]
    },
    outputs: {
      ngSubmit: "ngSubmit"
    },
    exportAs: ["ngForm"],
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([formDirectiveProvider$1]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵNgOnChangesFeature"]]
  });
  return FormGroupDirective;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var formGroupNameProvider = {
  provide: ControlContainer,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return FormGroupName;
  })
};

var FormGroupName = /*@__PURE__*/function () {
  var FormGroupName = /*#__PURE__*/function (_AbstractFormGroupDir2) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(FormGroupName, _AbstractFormGroupDir2);

    var _super14 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(FormGroupName);

    function FormGroupName(parent, validators, asyncValidators) {
      var _this35;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, FormGroupName);

      _this35 = _super14.call(this);
      _this35._parent = parent;

      _this35._setValidators(validators);

      _this35._setAsyncValidators(asyncValidators);

      return _this35;
    }
    /** @internal */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(FormGroupName, [{
      key: "_checkParentType",
      value: function _checkParentType() {
        if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {
          ReactiveErrors.groupParentException();
        }
      }
    }]);

    return FormGroupName;
  }(AbstractFormGroupDirective);

  FormGroupName.ɵfac = function FormGroupName_Factory(t) {
    return new (t || FormGroupName)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](ControlContainer, 13), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_ASYNC_VALIDATORS, 10));
  };

  FormGroupName.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: FormGroupName,
    selectors: [["", "formGroupName", ""]],
    inputs: {
      name: ["formGroupName", "name"]
    },
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([formGroupNameProvider]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
  });
  return FormGroupName;
}();

var formArrayNameProvider = {
  provide: ControlContainer,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return FormArrayName;
  })
};

var FormArrayName = /*@__PURE__*/function () {
  var FormArrayName = /*#__PURE__*/function (_ControlContainer4) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(FormArrayName, _ControlContainer4);

    var _super15 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(FormArrayName);

    function FormArrayName(parent, validators, asyncValidators) {
      var _this36;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, FormArrayName);

      _this36 = _super15.call(this);
      _this36._parent = parent;

      _this36._setValidators(validators);

      _this36._setAsyncValidators(asyncValidators);

      return _this36;
    }
    /**
     * A lifecycle method called when the directive's inputs are initialized. For internal use only.
     * @throws If the directive does not have a valid parent.
     * @nodoc
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(FormArrayName, [{
      key: "ngOnInit",
      value: function ngOnInit() {
        this._checkParentType();

        this.formDirective.addFormArray(this);
      }
      /**
       * A lifecycle method called before the directive's instance is destroyed. For internal use only.
       * @nodoc
       */

    }, {
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        if (this.formDirective) {
          this.formDirective.removeFormArray(this);
        }
      }
      /**
       * @description
       * The `FormArray` bound to this directive.
       */

    }, {
      key: "_checkParentType",
      value: function _checkParentType() {
        if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {
          ReactiveErrors.arrayParentException();
        }
      }
    }, {
      key: "control",
      get: function get() {
        return this.formDirective.getFormArray(this);
      }
      /**
       * @description
       * The top-level directive for this group if present, otherwise null.
       */

    }, {
      key: "formDirective",
      get: function get() {
        return this._parent ? this._parent.formDirective : null;
      }
      /**
       * @description
       * Returns an array that represents the path from the top-level form to this control.
       * Each index is the string name of the control on that level.
       */

    }, {
      key: "path",
      get: function get() {
        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);
      }
    }]);

    return FormArrayName;
  }(ControlContainer);

  FormArrayName.ɵfac = function FormArrayName_Factory(t) {
    return new (t || FormArrayName)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](ControlContainer, 13), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_ASYNC_VALIDATORS, 10));
  };

  FormArrayName.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: FormArrayName,
    selectors: [["", "formArrayName", ""]],
    inputs: {
      name: ["formArrayName", "name"]
    },
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([formArrayNameProvider]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
  });
  return FormArrayName;
}();

function _hasInvalidParent(parent) {
  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) && !(parent instanceof FormArrayName);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var controlNameBinding = {
  provide: NgControl,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return FormControlName;
  })
};

var FormControlName = /*@__PURE__*/function () {
  var FormControlName = /*#__PURE__*/function (_NgControl3) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(FormControlName, _NgControl3);

    var _super16 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(FormControlName);

    function FormControlName(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {
      var _this37;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, FormControlName);

      _this37 = _super16.call(this);
      _this37._ngModelWarningConfig = _ngModelWarningConfig;
      _this37._added = false;
      /** @deprecated as of v6 */

      _this37.update = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["EventEmitter"]();
      /**
       * @description
       * Instance property used to track whether an ngModel warning has been sent out for this
       * particular FormControlName instance. Used to support warning config of "always".
       *
       * @internal
       */

      _this37._ngModelWarningSent = false;
      _this37._parent = parent;

      _this37._setValidators(validators);

      _this37._setAsyncValidators(asyncValidators);

      _this37.valueAccessor = selectValueAccessor(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this37), valueAccessors);
      return _this37;
    }
    /**
     * @description
     * Triggers a warning in dev mode that this input should not be used with reactive forms.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(FormControlName, [{
      key: "ngOnChanges",

      /** @nodoc */
      value: function ngOnChanges(changes) {
        if (!this._added) this._setUpControl();

        if (isPropertyUpdated(changes, this.viewModel)) {
          _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);

          this.viewModel = this.model;
          this.formDirective.updateModel(this, this.model);
        }
      }
      /** @nodoc */

    }, {
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        if (this.formDirective) {
          this.formDirective.removeControl(this);
        }
      }
      /**
       * @description
       * Sets the new value for the view model and emits an `ngModelChange` event.
       *
       * @param newValue The new value for the view model.
       */

    }, {
      key: "viewToModelUpdate",
      value: function viewToModelUpdate(newValue) {
        this.viewModel = newValue;
        this.update.emit(newValue);
      }
      /**
       * @description
       * Returns an array that represents the path from the top-level form to this control.
       * Each index is the string name of the control on that level.
       */

    }, {
      key: "_checkParentType",
      value: function _checkParentType() {
        if (typeof ngDevMode === 'undefined' || ngDevMode) {
          if (!(this._parent instanceof FormGroupName) && this._parent instanceof AbstractFormGroupDirective) {
            ReactiveErrors.ngModelGroupException();
          } else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) && !(this._parent instanceof FormArrayName)) {
            ReactiveErrors.controlParentException();
          }
        }
      }
    }, {
      key: "_setUpControl",
      value: function _setUpControl() {
        this._checkParentType();

        this.control = this.formDirective.addControl(this);

        if (this.control.disabled && this.valueAccessor.setDisabledState) {
          this.valueAccessor.setDisabledState(true);
        }

        this._added = true;
      }
    }, {
      key: "isDisabled",
      set: function set(isDisabled) {
        if (typeof ngDevMode === 'undefined' || ngDevMode) {
          ReactiveErrors.disabledAttrWarning();
        }
      }
    }, {
      key: "path",
      get: function get() {
        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);
      }
      /**
       * @description
       * The top-level directive for this group if present, otherwise null.
       */

    }, {
      key: "formDirective",
      get: function get() {
        return this._parent ? this._parent.formDirective : null;
      }
    }]);

    return FormControlName;
  }(NgControl);

  FormControlName.ɵfac = function FormControlName_Factory(t) {
    return new (t || FormControlName)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](ControlContainer, 13), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_ASYNC_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_VALUE_ACCESSOR, 10), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](NG_MODEL_WITH_FORM_CONTROL_WARNING, 8));
  };

  FormControlName.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: FormControlName,
    selectors: [["", "formControlName", ""]],
    inputs: {
      isDisabled: ["disabled", "isDisabled"],
      name: ["formControlName", "name"],
      model: ["ngModel", "model"]
    },
    outputs: {
      update: "ngModelChange"
    },
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([controlNameBinding]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵNgOnChangesFeature"]]
  });
  /**
   * @description
   * Static property used to track whether any ngModel warnings have been sent across
   * all instances of FormControlName. Used to support warning config of "once".
   *
   * @internal
   */

  FormControlName._ngModelWarningSentOnce = false;
  return FormControlName;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.
 */


var REQUIRED_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return RequiredValidator;
  }),
  multi: true
};
/**
 * @description
 * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.
 */

var CHECKBOX_REQUIRED_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return CheckboxRequiredValidator;
  }),
  multi: true
};

var RequiredValidator = /*@__PURE__*/function () {
  var RequiredValidator = /*#__PURE__*/function () {
    function RequiredValidator() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, RequiredValidator);

      this._required = false;
    }
    /**
     * @description
     * Tracks changes to the required attribute bound to this directive.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(RequiredValidator, [{
      key: "validate",

      /**
       * Method that validates whether the control is empty.
       * Returns the validation result if enabled, otherwise null.
       * @nodoc
       */
      value: function validate(control) {
        return this.required ? Validators.required(control) : null;
      }
      /**
       * Registers a callback function to call when the validator inputs change.
       * @nodoc
       */

    }, {
      key: "registerOnValidatorChange",
      value: function registerOnValidatorChange(fn) {
        this._onChange = fn;
      }
    }, {
      key: "required",
      get: function get() {
        return this._required;
      },
      set: function set(value) {
        this._required = value != null && value !== false && "".concat(value) !== 'false';
        if (this._onChange) this._onChange();
      }
    }]);

    return RequiredValidator;
  }();

  RequiredValidator.ɵfac = function RequiredValidator_Factory(t) {
    return new (t || RequiredValidator)();
  };

  RequiredValidator.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: RequiredValidator,
    selectors: [["", "required", "", "formControlName", "", 3, "type", "checkbox"], ["", "required", "", "formControl", "", 3, "type", "checkbox"], ["", "required", "", "ngModel", "", 3, "type", "checkbox"]],
    hostVars: 1,
    hostBindings: function RequiredValidator_HostBindings(rf, ctx) {
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("required", ctx.required ? "" : null);
      }
    },
    inputs: {
      required: "required"
    },
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([REQUIRED_VALIDATOR])]
  });
  return RequiredValidator;
}();

var CheckboxRequiredValidator = /*@__PURE__*/function () {
  var CheckboxRequiredValidator = /*#__PURE__*/function (_RequiredValidator) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(CheckboxRequiredValidator, _RequiredValidator);

    var _super17 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(CheckboxRequiredValidator);

    function CheckboxRequiredValidator() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, CheckboxRequiredValidator);

      return _super17.apply(this, arguments);
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(CheckboxRequiredValidator, [{
      key: "validate",

      /**
       * Method that validates whether or not the checkbox has been checked.
       * Returns the validation result if enabled, otherwise null.
       * @nodoc
       */
      value: function validate(control) {
        return this.required ? Validators.requiredTrue(control) : null;
      }
    }]);

    return CheckboxRequiredValidator;
  }(RequiredValidator);

  CheckboxRequiredValidator.ɵfac = function CheckboxRequiredValidator_Factory(t) {
    return ɵCheckboxRequiredValidator_BaseFactory(t || CheckboxRequiredValidator);
  };

  CheckboxRequiredValidator.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: CheckboxRequiredValidator,
    selectors: [["input", "type", "checkbox", "required", "", "formControlName", ""], ["input", "type", "checkbox", "required", "", "formControl", ""], ["input", "type", "checkbox", "required", "", "ngModel", ""]],
    hostVars: 1,
    hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) {
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("required", ctx.required ? "" : null);
      }
    },
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([CHECKBOX_REQUIRED_VALIDATOR]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
  });
  return CheckboxRequiredValidator;
}();

var ɵCheckboxRequiredValidator_BaseFactory =
/*@__PURE__*/

/*@__PURE__*/
_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](CheckboxRequiredValidator);
/**
 * @description
 * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.
 */

var EMAIL_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return EmailValidator;
  }),
  multi: true
};

var EmailValidator = /*@__PURE__*/function () {
  var EmailValidator = /*#__PURE__*/function () {
    function EmailValidator() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, EmailValidator);

      this._enabled = false;
    }
    /**
     * @description
     * Tracks changes to the email attribute bound to this directive.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(EmailValidator, [{
      key: "validate",

      /**
       * Method that validates whether an email address is valid.
       * Returns the validation result if enabled, otherwise null.
       * @nodoc
       */
      value: function validate(control) {
        return this._enabled ? Validators.email(control) : null;
      }
      /**
       * Registers a callback function to call when the validator inputs change.
       * @nodoc
       */

    }, {
      key: "registerOnValidatorChange",
      value: function registerOnValidatorChange(fn) {
        this._onChange = fn;
      }
    }, {
      key: "email",
      set: function set(value) {
        this._enabled = value === '' || value === true || value === 'true';
        if (this._onChange) this._onChange();
      }
    }]);

    return EmailValidator;
  }();

  EmailValidator.ɵfac = function EmailValidator_Factory(t) {
    return new (t || EmailValidator)();
  };

  EmailValidator.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: EmailValidator,
    selectors: [["", "email", "", "formControlName", ""], ["", "email", "", "formControl", ""], ["", "email", "", "ngModel", ""]],
    inputs: {
      email: "email"
    },
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([EMAIL_VALIDATOR])]
  });
  return EmailValidator;
}();
/**
 * @description
 * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.
 */


var MIN_LENGTH_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return MinLengthValidator;
  }),
  multi: true
};

var MinLengthValidator = /*@__PURE__*/function () {
  var MinLengthValidator = /*#__PURE__*/function () {
    function MinLengthValidator() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MinLengthValidator);

      this._validator = Validators.nullValidator;
    }
    /** @nodoc */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(MinLengthValidator, [{
      key: "ngOnChanges",
      value: function ngOnChanges(changes) {
        if ('minlength' in changes) {
          this._createValidator();

          if (this._onChange) this._onChange();
        }
      }
      /**
       * Method that validates whether the value meets a minimum length requirement.
       * Returns the validation result if enabled, otherwise null.
       * @nodoc
       */

    }, {
      key: "validate",
      value: function validate(control) {
        return this.minlength == null ? null : this._validator(control);
      }
      /**
       * Registers a callback function to call when the validator inputs change.
       * @nodoc
       */

    }, {
      key: "registerOnValidatorChange",
      value: function registerOnValidatorChange(fn) {
        this._onChange = fn;
      }
    }, {
      key: "_createValidator",
      value: function _createValidator() {
        this._validator = Validators.minLength(typeof this.minlength === 'number' ? this.minlength : parseInt(this.minlength, 10));
      }
    }]);

    return MinLengthValidator;
  }();

  MinLengthValidator.ɵfac = function MinLengthValidator_Factory(t) {
    return new (t || MinLengthValidator)();
  };

  MinLengthValidator.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: MinLengthValidator,
    selectors: [["", "minlength", "", "formControlName", ""], ["", "minlength", "", "formControl", ""], ["", "minlength", "", "ngModel", ""]],
    hostVars: 1,
    hostBindings: function MinLengthValidator_HostBindings(rf, ctx) {
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("minlength", ctx.minlength ? ctx.minlength : null);
      }
    },
    inputs: {
      minlength: "minlength"
    },
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([MIN_LENGTH_VALIDATOR]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵNgOnChangesFeature"]]
  });
  return MinLengthValidator;
}();
/**
 * @description
 * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.
 */


var MAX_LENGTH_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return MaxLengthValidator;
  }),
  multi: true
};

var MaxLengthValidator = /*@__PURE__*/function () {
  var MaxLengthValidator = /*#__PURE__*/function () {
    function MaxLengthValidator() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MaxLengthValidator);

      this._validator = Validators.nullValidator;
    }
    /** @nodoc */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(MaxLengthValidator, [{
      key: "ngOnChanges",
      value: function ngOnChanges(changes) {
        if ('maxlength' in changes) {
          this._createValidator();

          if (this._onChange) this._onChange();
        }
      }
      /**
       * Method that validates whether the value exceeds the maximum length requirement.
       * @nodoc
       */

    }, {
      key: "validate",
      value: function validate(control) {
        return this.maxlength != null ? this._validator(control) : null;
      }
      /**
       * Registers a callback function to call when the validator inputs change.
       * @nodoc
       */

    }, {
      key: "registerOnValidatorChange",
      value: function registerOnValidatorChange(fn) {
        this._onChange = fn;
      }
    }, {
      key: "_createValidator",
      value: function _createValidator() {
        this._validator = Validators.maxLength(typeof this.maxlength === 'number' ? this.maxlength : parseInt(this.maxlength, 10));
      }
    }]);

    return MaxLengthValidator;
  }();

  MaxLengthValidator.ɵfac = function MaxLengthValidator_Factory(t) {
    return new (t || MaxLengthValidator)();
  };

  MaxLengthValidator.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: MaxLengthValidator,
    selectors: [["", "maxlength", "", "formControlName", ""], ["", "maxlength", "", "formControl", ""], ["", "maxlength", "", "ngModel", ""]],
    hostVars: 1,
    hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) {
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("maxlength", ctx.maxlength ? ctx.maxlength : null);
      }
    },
    inputs: {
      maxlength: "maxlength"
    },
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([MAX_LENGTH_VALIDATOR]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵNgOnChangesFeature"]]
  });
  return MaxLengthValidator;
}();
/**
 * @description
 * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.
 */


var PATTERN_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["forwardRef"])(function () {
    return PatternValidator;
  }),
  multi: true
};

var PatternValidator = /*@__PURE__*/function () {
  var PatternValidator = /*#__PURE__*/function () {
    function PatternValidator() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, PatternValidator);

      this._validator = Validators.nullValidator;
    }
    /** @nodoc */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(PatternValidator, [{
      key: "ngOnChanges",
      value: function ngOnChanges(changes) {
        if ('pattern' in changes) {
          this._createValidator();

          if (this._onChange) this._onChange();
        }
      }
      /**
       * Method that validates whether the value matches the the pattern requirement.
       * @nodoc
       */

    }, {
      key: "validate",
      value: function validate(control) {
        return this._validator(control);
      }
      /**
       * Registers a callback function to call when the validator inputs change.
       * @nodoc
       */

    }, {
      key: "registerOnValidatorChange",
      value: function registerOnValidatorChange(fn) {
        this._onChange = fn;
      }
    }, {
      key: "_createValidator",
      value: function _createValidator() {
        this._validator = Validators.pattern(this.pattern);
      }
    }]);

    return PatternValidator;
  }();

  PatternValidator.ɵfac = function PatternValidator_Factory(t) {
    return new (t || PatternValidator)();
  };

  PatternValidator.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
    type: PatternValidator,
    selectors: [["", "pattern", "", "formControlName", ""], ["", "pattern", "", "formControl", ""], ["", "pattern", "", "ngModel", ""]],
    hostVars: 1,
    hostBindings: function PatternValidator_HostBindings(rf, ctx) {
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("pattern", ctx.pattern ? ctx.pattern : null);
      }
    },
    inputs: {
      pattern: "pattern"
    },
    features: [/*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([PATTERN_VALIDATOR]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵNgOnChangesFeature"]]
  });
  return PatternValidator;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SHARED_FORM_DIRECTIVES = [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator];
var TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];
var REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];

var ɵInternalFormsSharedModule = /*@__PURE__*/function () {
  var ɵInternalFormsSharedModule = function ɵInternalFormsSharedModule() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, ɵInternalFormsSharedModule);
  };

  ɵInternalFormsSharedModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
    type: ɵInternalFormsSharedModule
  });
  ɵInternalFormsSharedModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
    factory: function ɵInternalFormsSharedModule_Factory(t) {
      return new (t || ɵInternalFormsSharedModule)();
    }
  });
  return ɵInternalFormsSharedModule;
}();
/*@__PURE__*/


(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](ɵInternalFormsSharedModule, {
    declarations: [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator],
    exports: [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function isAbstractControlOptions(options) {
  return options.asyncValidators !== undefined || options.validators !== undefined || options.updateOn !== undefined;
}

var FormBuilder = /*@__PURE__*/function () {
  var FormBuilder = /*#__PURE__*/function () {
    function FormBuilder() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, FormBuilder);
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(FormBuilder, [{
      key: "group",

      /**
       * @description
       * Construct a new `FormGroup` instance.
       *
       * @param controlsConfig A collection of child controls. The key for each child is the name
       * under which it is registered.
       *
       * @param options Configuration options object for the `FormGroup`. The object can
       * have two shapes:
       *
       * 1) `AbstractControlOptions` object (preferred), which consists of:
       * * `validators`: A synchronous validator function, or an array of validator functions
       * * `asyncValidators`: A single async validator or array of async validator functions
       * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur' |
       * submit')
       *
       * 2) Legacy configuration object, which consists of:
       * * `validator`: A synchronous validator function, or an array of validator functions
       * * `asyncValidator`: A single async validator or array of async validator functions
       *
       */
      value: function group(controlsConfig) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

        var controls = this._reduceControls(controlsConfig);

        var validators = null;
        var asyncValidators = null;
        var updateOn = undefined;

        if (options != null) {
          if (isAbstractControlOptions(options)) {
            // `options` are `AbstractControlOptions`
            validators = options.validators != null ? options.validators : null;
            asyncValidators = options.asyncValidators != null ? options.asyncValidators : null;
            updateOn = options.updateOn != null ? options.updateOn : undefined;
          } else {
            // `options` are legacy form group options
            validators = options['validator'] != null ? options['validator'] : null;
            asyncValidators = options['asyncValidator'] != null ? options['asyncValidator'] : null;
          }
        }

        return new FormGroup(controls, {
          asyncValidators: asyncValidators,
          updateOn: updateOn,
          validators: validators
        });
      }
      /**
       * @description
       * Construct a new `FormControl` with the given state, validators and options.
       *
       * @param formState Initializes the control with an initial state value, or
       * with an object that contains both a value and a disabled status.
       *
       * @param validatorOrOpts A synchronous validator function, or an array of
       * such functions, or an `AbstractControlOptions` object that contains
       * validation functions and a validation trigger.
       *
       * @param asyncValidator A single async validator or array of async validator
       * functions.
       *
       * @usageNotes
       *
       * ### Initialize a control as disabled
       *
       * The following example returns a control with an initial value in a disabled state.
       *
       * <code-example path="forms/ts/formBuilder/form_builder_example.ts" region="disabled-control">
       * </code-example>
       */

    }, {
      key: "control",
      value: function control(formState, validatorOrOpts, asyncValidator) {
        return new FormControl(formState, validatorOrOpts, asyncValidator);
      }
      /**
       * Constructs a new `FormArray` from the given array of configurations,
       * validators and options.
       *
       * @param controlsConfig An array of child controls or control configs. Each
       * child control is given an index when it is registered.
       *
       * @param validatorOrOpts A synchronous validator function, or an array of
       * such functions, or an `AbstractControlOptions` object that contains
       * validation functions and a validation trigger.
       *
       * @param asyncValidator A single async validator or array of async validator
       * functions.
       */

    }, {
      key: "array",
      value: function array(controlsConfig, validatorOrOpts, asyncValidator) {
        var _this38 = this;

        var controls = controlsConfig.map(function (c) {
          return _this38._createControl(c);
        });
        return new FormArray(controls, validatorOrOpts, asyncValidator);
      }
      /** @internal */

    }, {
      key: "_reduceControls",
      value: function _reduceControls(controlsConfig) {
        var _this39 = this;

        var controls = {};
        Object.keys(controlsConfig).forEach(function (controlName) {
          controls[controlName] = _this39._createControl(controlsConfig[controlName]);
        });
        return controls;
      }
      /** @internal */

    }, {
      key: "_createControl",
      value: function _createControl(controlConfig) {
        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup || controlConfig instanceof FormArray) {
          return controlConfig;
        } else if (Array.isArray(controlConfig)) {
          var value = controlConfig[0];
          var validator = controlConfig.length > 1 ? controlConfig[1] : null;
          var asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;
          return this.control(value, validator, asyncValidator);
        } else {
          return this.control(controlConfig);
        }
      }
    }]);

    return FormBuilder;
  }();

  FormBuilder.ɵfac = function FormBuilder_Factory(t) {
    return new (t || FormBuilder)();
  };

  FormBuilder.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"]({
    token: FormBuilder,
    factory: FormBuilder.ɵfac
  });
  return FormBuilder;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @publicApi
 */


var VERSION = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_7__["Version"]('11.0.2');

var FormsModule = /*@__PURE__*/function () {
  var FormsModule = function FormsModule() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, FormsModule);
  };

  FormsModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
    type: FormsModule
  });
  FormsModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
    factory: function FormsModule_Factory(t) {
      return new (t || FormsModule)();
    },
    providers: [RadioControlRegistry],
    imports: [ɵInternalFormsSharedModule]
  });
  return FormsModule;
}();
/*@__PURE__*/


(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](FormsModule, {
    declarations: [NgModel, NgModelGroup, NgForm],
    exports: [ɵInternalFormsSharedModule, NgModel, NgModelGroup, NgForm]
  });
})();

var ReactiveFormsModule = /*@__PURE__*/function () {
  var ReactiveFormsModule = /*#__PURE__*/function () {
    function ReactiveFormsModule() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, ReactiveFormsModule);
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(ReactiveFormsModule, null, [{
      key: "withConfig",

      /**
       * @description
       * Provides options for configuring the reactive forms module.
       *
       * @param opts An object of configuration options
       * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`
       * binding is used with reactive form directives.
       */
      value: function withConfig(opts) {
        return {
          ngModule: ReactiveFormsModule,
          providers: [{
            provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,
            useValue: opts.warnOnNgModelWithFormControl
          }]
        };
      }
    }]);

    return ReactiveFormsModule;
  }();

  ReactiveFormsModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
    type: ReactiveFormsModule
  });
  ReactiveFormsModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
    factory: function ReactiveFormsModule_Factory(t) {
      return new (t || ReactiveFormsModule)();
    },
    providers: [FormBuilder, RadioControlRegistry],
    imports: [ɵInternalFormsSharedModule]
  });
  return ReactiveFormsModule;
}();
/*@__PURE__*/


(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](ReactiveFormsModule, {
    declarations: [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName],
    exports: [ɵInternalFormsSharedModule, FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This file only reexports content of the `src` folder. Keep it that way.

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "3UWI":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/auditTime.js ***!
  \********************************************************************/
/*! exports provided: auditTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "auditTime", function() { return auditTime; });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ "D0XW");
/* harmony import */ var _audit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./audit */ "tnsW");
/* harmony import */ var _observable_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/timer */ "PqYM");



function auditTime(duration) {
  var scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _scheduler_async__WEBPACK_IMPORTED_MODULE_0__["async"];
  return Object(_audit__WEBPACK_IMPORTED_MODULE_1__["audit"])(function () {
    return Object(_observable_timer__WEBPACK_IMPORTED_MODULE_2__["timer"])(duration, scheduler);
  });
}

/***/ }),

/***/ "4A3s":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/ignoreElements.js ***!
  \*************************************************************************/
/*! exports provided: ignoreElements */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ignoreElements", function() { return ignoreElements; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");





function ignoreElements() {
  return function ignoreElementsOperatorFunction(source) {
    return source.lift(new IgnoreElementsOperator());
  };
}

var IgnoreElementsOperator = /*#__PURE__*/function () {
  function IgnoreElementsOperator() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, IgnoreElementsOperator);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(IgnoreElementsOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new IgnoreElementsSubscriber(subscriber));
    }
  }]);

  return IgnoreElementsOperator;
}();

var IgnoreElementsSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(IgnoreElementsSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(IgnoreElementsSubscriber);

  function IgnoreElementsSubscriber() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, IgnoreElementsSubscriber);

    return _super.apply(this, arguments);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(IgnoreElementsSubscriber, [{
    key: "_next",
    value: function _next(unused) {}
  }]);

  return IgnoreElementsSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "4I5i":
/*!*****************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/ArgumentOutOfRangeError.js ***!
  \*****************************************************************************/
/*! exports provided: ArgumentOutOfRangeError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArgumentOutOfRangeError", function() { return ArgumentOutOfRangeError; });
var ArgumentOutOfRangeErrorImpl = /*@__PURE__*/function () {
  function ArgumentOutOfRangeErrorImpl() {
    Error.call(this);
    this.message = 'argument out of range';
    this.name = 'ArgumentOutOfRangeError';
    return this;
  }

  ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);
  return ArgumentOutOfRangeErrorImpl;
}();

var ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;

/***/ }),

/***/ "4O5X":
/*!****************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/bindNodeCallback.js ***!
  \****************************************************************************/
/*! exports provided: bindNodeCallback */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bindNodeCallback", function() { return bindNodeCallback; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _AsyncSubject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../AsyncSubject */ "NHP+");
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operators/map */ "lJxs");
/* harmony import */ var _util_canReportError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/canReportError */ "8Qeq");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isScheduler */ "z+Ro");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/isArray */ "DH7j");







function bindNodeCallback(callbackFunc, resultSelector, scheduler) {
  if (resultSelector) {
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_5__["isScheduler"])(resultSelector)) {
      scheduler = resultSelector;
    } else {
      return function () {
        return bindNodeCallback(callbackFunc, scheduler).apply(void 0, arguments).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_3__["map"])(function (args) {
          return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_6__["isArray"])(args) ? resultSelector.apply(void 0, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(args)) : resultSelector(args);
        }));
      };
    }
  }

  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var params = {
      subject: undefined,
      args: args,
      callbackFunc: callbackFunc,
      scheduler: scheduler,
      context: this
    };
    return new _Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"](function (subscriber) {
      var context = params.context;
      var subject = params.subject;

      if (!scheduler) {
        if (!subject) {
          subject = params.subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_2__["AsyncSubject"]();

          var handler = function handler() {
            for (var _len2 = arguments.length, innerArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              innerArgs[_key2] = arguments[_key2];
            }

            var err = innerArgs.shift();

            if (err) {
              subject.error(err);
              return;
            }

            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
            subject.complete();
          };

          try {
            callbackFunc.apply(context, [].concat(args, [handler]));
          } catch (err) {
            if (Object(_util_canReportError__WEBPACK_IMPORTED_MODULE_4__["canReportError"])(subject)) {
              subject.error(err);
            } else {
              console.warn(err);
            }
          }
        }

        return subject.subscribe(subscriber);
      } else {
        return scheduler.schedule(dispatch, 0, {
          params: params,
          subscriber: subscriber,
          context: context
        });
      }
    });
  };
}

function dispatch(state) {
  var _this = this;

  var params = state.params,
      subscriber = state.subscriber,
      context = state.context;
  var callbackFunc = params.callbackFunc,
      args = params.args,
      scheduler = params.scheduler;
  var subject = params.subject;

  if (!subject) {
    subject = params.subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_2__["AsyncSubject"]();

    var handler = function handler() {
      for (var _len3 = arguments.length, innerArgs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        innerArgs[_key3] = arguments[_key3];
      }

      var err = innerArgs.shift();

      if (err) {
        _this.add(scheduler.schedule(dispatchError, 0, {
          err: err,
          subject: subject
        }));
      } else {
        var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;

        _this.add(scheduler.schedule(dispatchNext, 0, {
          value: value,
          subject: subject
        }));
      }
    };

    try {
      callbackFunc.apply(context, [].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(args), [handler]));
    } catch (err) {
      this.add(scheduler.schedule(dispatchError, 0, {
        err: err,
        subject: subject
      }));
    }
  }

  this.add(subject.subscribe(subscriber));
}

function dispatchNext(arg) {
  var value = arg.value,
      subject = arg.subject;
  subject.next(value);
  subject.complete();
}

function dispatchError(arg) {
  var err = arg.err,
      subject = arg.subject;
  subject.error(err);
}

/***/ }),

/***/ "4f8F":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/race.js ***!
  \***************************************************************/
/*! exports provided: race */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "race", function() { return race; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isArray */ "DH7j");
/* harmony import */ var _observable_race__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/race */ "Nv8m");



function race() {
  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {
    observables[_key] = arguments[_key];
  }

  return function raceOperatorFunction(source) {
    if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__["isArray"])(observables[0])) {
      observables = observables[0];
    }

    return source.lift.call(_observable_race__WEBPACK_IMPORTED_MODULE_2__["race"].apply(void 0, [source].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(observables))));
  };
}

/***/ }),

/***/ "4hIw":
/*!***********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/timeInterval.js ***!
  \***********************************************************************/
/*! exports provided: timeInterval, TimeInterval */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return timeInterval; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeInterval", function() { return TimeInterval; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ "D0XW");
/* harmony import */ var _scan__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scan */ "Kqap");
/* harmony import */ var _observable_defer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../observable/defer */ "NXyV");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./map */ "lJxs");





function timeInterval() {
  var scheduler = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
  return function (source) {
    return Object(_observable_defer__WEBPACK_IMPORTED_MODULE_3__["defer"])(function () {
      return source.pipe(Object(_scan__WEBPACK_IMPORTED_MODULE_2__["scan"])(function (_ref, value) {
        var current = _ref.current;
        return {
          value: value,
          current: scheduler.now(),
          last: current
        };
      }, {
        current: scheduler.now(),
        value: undefined,
        last: undefined
      }), Object(_map__WEBPACK_IMPORTED_MODULE_4__["map"])(function (_ref2) {
        var current = _ref2.current,
            last = _ref2.last,
            value = _ref2.value;
        return new TimeInterval(value, current - last);
      }));
    });
  };
}
var TimeInterval = function TimeInterval(value, interval) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, TimeInterval);

  this.value = value;
  this.interval = interval;
};

/***/ }),

/***/ "4yVj":
/*!**************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduled/schedulePromise.js ***!
  \**************************************************************************/
/*! exports provided: schedulePromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "schedulePromise", function() { return schedulePromise; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "quSY");


function schedulePromise(input, scheduler) {
  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
    sub.add(scheduler.schedule(function () {
      return input.then(function (value) {
        sub.add(scheduler.schedule(function () {
          subscriber.next(value);
          sub.add(scheduler.schedule(function () {
            return subscriber.complete();
          }));
        }));
      }, function (err) {
        sub.add(scheduler.schedule(function () {
          return subscriber.error(err);
        }));
      });
    }));
    return sub;
  });
}

/***/ }),

/***/ "5+tZ":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/mergeMap.js ***!
  \*******************************************************************/
/*! exports provided: mergeMap, MergeMapOperator, MergeMapSubscriber, flatMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeMap", function() { return mergeMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeMapOperator", function() { return MergeMapOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeMapSubscriber", function() { return MergeMapSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flatMap", function() { return flatMap; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./map */ "lJxs");
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../observable/from */ "Cfvw");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");







function mergeMap(project, resultSelector) {
  var concurrent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.POSITIVE_INFINITY;

  if (typeof resultSelector === 'function') {
    return function (source) {
      return source.pipe(mergeMap(function (a, i) {
        return Object(_observable_from__WEBPACK_IMPORTED_MODULE_5__["from"])(project(a, i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_4__["map"])(function (b, ii) {
          return resultSelector(a, b, i, ii);
        }));
      }, concurrent));
    };
  } else if (typeof resultSelector === 'number') {
    concurrent = resultSelector;
  }

  return function (source) {
    return source.lift(new MergeMapOperator(project, concurrent));
  };
}
var MergeMapOperator = /*#__PURE__*/function () {
  function MergeMapOperator(project) {
    var concurrent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.POSITIVE_INFINITY;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, MergeMapOperator);

    this.project = project;
    this.concurrent = concurrent;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(MergeMapOperator, [{
    key: "call",
    value: function call(observer, source) {
      return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));
    }
  }]);

  return MergeMapOperator;
}();
var MergeMapSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(MergeMapSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(MergeMapSubscriber);

  function MergeMapSubscriber(destination, project) {
    var _this;

    var concurrent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.POSITIVE_INFINITY;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, MergeMapSubscriber);

    _this = _super.call(this, destination);
    _this.project = project;
    _this.concurrent = concurrent;
    _this.hasCompleted = false;
    _this.buffer = [];
    _this.active = 0;
    _this.index = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(MergeMapSubscriber, [{
    key: "_next",
    value: function _next(value) {
      if (this.active < this.concurrent) {
        this._tryNext(value);
      } else {
        this.buffer.push(value);
      }
    }
  }, {
    key: "_tryNext",
    value: function _tryNext(value) {
      var result;
      var index = this.index++;

      try {
        result = this.project(value, index);
      } catch (err) {
        this.destination.error(err);
        return;
      }

      this.active++;

      this._innerSub(result);
    }
  }, {
    key: "_innerSub",
    value: function _innerSub(ish) {
      var innerSubscriber = new _innerSubscribe__WEBPACK_IMPORTED_MODULE_6__["SimpleInnerSubscriber"](this);
      var destination = this.destination;
      destination.add(innerSubscriber);
      var innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_6__["innerSubscribe"])(ish, innerSubscriber);

      if (innerSubscription !== innerSubscriber) {
        destination.add(innerSubscription);
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.hasCompleted = true;

      if (this.active === 0 && this.buffer.length === 0) {
        this.destination.complete();
      }

      this.unsubscribe();
    }
  }, {
    key: "notifyNext",
    value: function notifyNext(innerValue) {
      this.destination.next(innerValue);
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {
      var buffer = this.buffer;
      this.active--;

      if (buffer.length > 0) {
        this._next(buffer.shift());
      } else if (this.active === 0 && this.hasCompleted) {
        this.destination.complete();
      }
    }
  }]);

  return MergeMapSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_6__["SimpleOuterSubscriber"]);
var flatMap = mergeMap;

/***/ }),

/***/ "51Bx":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/mergeScan.js ***!
  \********************************************************************/
/*! exports provided: mergeScan, MergeScanOperator, MergeScanSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeScan", function() { return mergeScan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeScanOperator", function() { return MergeScanOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeScanSubscriber", function() { return MergeScanSubscriber; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");





function mergeScan(accumulator, seed) {
  var concurrent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.POSITIVE_INFINITY;
  return function (source) {
    return source.lift(new MergeScanOperator(accumulator, seed, concurrent));
  };
}
var MergeScanOperator = /*#__PURE__*/function () {
  function MergeScanOperator(accumulator, seed, concurrent) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, MergeScanOperator);

    this.accumulator = accumulator;
    this.seed = seed;
    this.concurrent = concurrent;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(MergeScanOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));
    }
  }]);

  return MergeScanOperator;
}();
var MergeScanSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(MergeScanSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(MergeScanSubscriber);

  function MergeScanSubscriber(destination, accumulator, acc, concurrent) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, MergeScanSubscriber);

    _this = _super.call(this, destination);
    _this.accumulator = accumulator;
    _this.acc = acc;
    _this.concurrent = concurrent;
    _this.hasValue = false;
    _this.hasCompleted = false;
    _this.buffer = [];
    _this.active = 0;
    _this.index = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(MergeScanSubscriber, [{
    key: "_next",
    value: function _next(value) {
      if (this.active < this.concurrent) {
        var index = this.index++;
        var destination = this.destination;
        var ish;

        try {
          var accumulator = this.accumulator;
          ish = accumulator(this.acc, value, index);
        } catch (e) {
          return destination.error(e);
        }

        this.active++;

        this._innerSub(ish);
      } else {
        this.buffer.push(value);
      }
    }
  }, {
    key: "_innerSub",
    value: function _innerSub(ish) {
      var innerSubscriber = new _innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["SimpleInnerSubscriber"](this);
      var destination = this.destination;
      destination.add(innerSubscriber);
      var innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["innerSubscribe"])(ish, innerSubscriber);

      if (innerSubscription !== innerSubscriber) {
        destination.add(innerSubscription);
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.hasCompleted = true;

      if (this.active === 0 && this.buffer.length === 0) {
        if (this.hasValue === false) {
          this.destination.next(this.acc);
        }

        this.destination.complete();
      }

      this.unsubscribe();
    }
  }, {
    key: "notifyNext",
    value: function notifyNext(innerValue) {
      var destination = this.destination;
      this.acc = innerValue;
      this.hasValue = true;
      destination.next(innerValue);
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {
      var buffer = this.buffer;
      this.active--;

      if (buffer.length > 0) {
        this._next(buffer.shift());
      } else if (this.active === 0 && this.hasCompleted) {
        if (this.hasValue === false) {
          this.destination.next(this.acc);
        }

        this.destination.complete();
      }
    }
  }]);

  return MergeScanSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "51Dv":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/InnerSubscriber.js ***!
  \****************************************************************/
/*! exports provided: InnerSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InnerSubscriber", function() { return InnerSubscriber; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Subscriber */ "7o/Q");





var InnerSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(InnerSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(InnerSubscriber);

  function InnerSubscriber(parent, outerValue, outerIndex) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, InnerSubscriber);

    _this = _super.call(this);
    _this.parent = parent;
    _this.outerValue = outerValue;
    _this.outerIndex = outerIndex;
    _this.index = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(InnerSubscriber, [{
    key: "_next",
    value: function _next(value) {
      this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
    }
  }, {
    key: "_error",
    value: function _error(error) {
      this.parent.notifyError(error, this);
      this.unsubscribe();
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.parent.notifyComplete(this);
      this.unsubscribe();
    }
  }]);

  return InnerSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "5B2Y":
/*!*****************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduled/scheduleObservable.js ***!
  \*****************************************************************************/
/*! exports provided: scheduleObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduleObservable", function() { return scheduleObservable; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "quSY");
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../symbol/observable */ "kJWO");



function scheduleObservable(input, scheduler) {
  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
    sub.add(scheduler.schedule(function () {
      var observable = input[_symbol_observable__WEBPACK_IMPORTED_MODULE_2__["observable"]]();
      sub.add(observable.subscribe({
        next: function next(value) {
          sub.add(scheduler.schedule(function () {
            return subscriber.next(value);
          }));
        },
        error: function error(err) {
          sub.add(scheduler.schedule(function () {
            return subscriber.error(err);
          }));
        },
        complete: function complete() {
          sub.add(scheduler.schedule(function () {
            return subscriber.complete();
          }));
        }
      }));
    }));
    return sub;
  });
}

/***/ }),

/***/ "5x/H":
/*!***********************************************************!*\
  !*** ./node_modules/firebase/firestore/dist/index.esm.js ***!
  \***********************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/firestore */ "6Joi");
/* harmony import */ var _firebase_firestore__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_firebase_firestore__WEBPACK_IMPORTED_MODULE_0__);


/***/ }),

/***/ "5yfJ":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/never.js ***!
  \*****************************************************************/
/*! exports provided: NEVER, never */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NEVER", function() { return NEVER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "never", function() { return never; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _util_noop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/noop */ "KqfI");


var NEVER = /*@__PURE__*/new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](_util_noop__WEBPACK_IMPORTED_MODULE_1__["noop"]);
function never() {
  return NEVER;
}

/***/ }),

/***/ "6Joi":
/*!************************************************************!*\
  !*** ./node_modules/@firebase/firestore/dist/index.cjs.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: !0
});

var t = __webpack_require__(/*! tslib */ "mrSG"),
    e = __webpack_require__(/*! @firebase/app */ "wj3C"),
    n = __webpack_require__(/*! @firebase/logger */ "q/0M"),
    r = __webpack_require__(/*! @firebase/util */ "zVF4"),
    i = __webpack_require__(/*! @firebase/webchannel-wrapper */ "x7I3"),
    o = __webpack_require__(/*! @firebase/component */ "S+S0");

function s(t) {
  return t && "object" == typeof t && "default" in t ? t : {
    default: t
  };
}

var u = s(e),
    a = {
  // Causes are copied from:
  // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h

  /** Not an error; returned on success. */
  OK: "ok",

  /** The operation was cancelled (typically by the caller). */
  CANCELLED: "cancelled",

  /** Unknown error or an error from a different error domain. */
  UNKNOWN: "unknown",

  /**
   * Client specified an invalid argument. Note that this differs from
   * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are
   * problematic regardless of the state of the system (e.g., a malformed file
   * name).
   */
  INVALID_ARGUMENT: "invalid-argument",

  /**
   * Deadline expired before operation could complete. For operations that
   * change the state of the system, this error may be returned even if the
   * operation has completed successfully. For example, a successful response
   * from a server could have been delayed long enough for the deadline to
   * expire.
   */
  DEADLINE_EXCEEDED: "deadline-exceeded",

  /** Some requested entity (e.g., file or directory) was not found. */
  NOT_FOUND: "not-found",

  /**
   * Some entity that we attempted to create (e.g., file or directory) already
   * exists.
   */
  ALREADY_EXISTS: "already-exists",

  /**
   * The caller does not have permission to execute the specified operation.
   * PERMISSION_DENIED must not be used for rejections caused by exhausting
   * some resource (use RESOURCE_EXHAUSTED instead for those errors).
   * PERMISSION_DENIED must not be used if the caller can not be identified
   * (use UNAUTHENTICATED instead for those errors).
   */
  PERMISSION_DENIED: "permission-denied",

  /**
   * The request does not have valid authentication credentials for the
   * operation.
   */
  UNAUTHENTICATED: "unauthenticated",

  /**
   * Some resource has been exhausted, perhaps a per-user quota, or perhaps the
   * entire file system is out of space.
   */
  RESOURCE_EXHAUSTED: "resource-exhausted",

  /**
   * Operation was rejected because the system is not in a state required for
   * the operation's execution. For example, directory to be deleted may be
   * non-empty, an rmdir operation is applied to a non-directory, etc.
   *
   * A litmus test that may help a service implementor in deciding
   * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:
   *  (a) Use UNAVAILABLE if the client can retry just the failing call.
   *  (b) Use ABORTED if the client should retry at a higher-level
   *      (e.g., restarting a read-modify-write sequence).
   *  (c) Use FAILED_PRECONDITION if the client should not retry until
   *      the system state has been explicitly fixed. E.g., if an "rmdir"
   *      fails because the directory is non-empty, FAILED_PRECONDITION
   *      should be returned since the client should not retry unless
   *      they have first fixed up the directory by deleting files from it.
   *  (d) Use FAILED_PRECONDITION if the client performs conditional
   *      REST Get/Update/Delete on a resource and the resource on the
   *      server does not match the condition. E.g., conflicting
   *      read-modify-write on the same resource.
   */
  FAILED_PRECONDITION: "failed-precondition",

  /**
   * The operation was aborted, typically due to a concurrency issue like
   * sequencer check failures, transaction aborts, etc.
   *
   * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,
   * and UNAVAILABLE.
   */
  ABORTED: "aborted",

  /**
   * Operation was attempted past the valid range. E.g., seeking or reading
   * past end of file.
   *
   * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed
   * if the system state changes. For example, a 32-bit file system will
   * generate INVALID_ARGUMENT if asked to read at an offset that is not in the
   * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from
   * an offset past the current file size.
   *
   * There is a fair bit of overlap between FAILED_PRECONDITION and
   * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)
   * when it applies so that callers who are iterating through a space can
   * easily look for an OUT_OF_RANGE error to detect when they are done.
   */
  OUT_OF_RANGE: "out-of-range",

  /** Operation is not implemented or not supported/enabled in this service. */
  UNIMPLEMENTED: "unimplemented",

  /**
   * Internal errors. Means some invariants expected by underlying System has
   * been broken. If you see one of these errors, Something is very broken.
   */
  INTERNAL: "internal",

  /**
   * The service is currently unavailable. This is a most likely a transient
   * condition and may be corrected by retrying with a backoff.
   *
   * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,
   * and UNAVAILABLE.
   */
  UNAVAILABLE: "unavailable",

  /** Unrecoverable data loss or corruption. */
  DATA_LOSS: "data-loss"
},
    c =
/** @class */
function (e) {
  function n(t, n) {
    var r = this;
    return (r = e.call(this, n) || this).code = t, r.message = n, r.name = "FirebaseError", // HACK: We write a toString property directly because Error is not a real
    // class and so inheritance does not work correctly. We could alternatively
    // do the same "back-door inheritance" trick that FirebaseError does.
    r.toString = function () {
      return r.name + ": [code=" + r.code + "]: " + r.message;
    }, r;
  }

  return t.__extends(n, e), n;
}(Error),
    h = new n.Logger("@firebase/firestore");
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** Converts a Base64 encoded string to a binary string. */

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Helper methods are needed because variables can't be exported as read/write


function f() {
  return h.logLevel;
}
/**
 * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).
 *
 * @param logLevel
 *   The verbosity you set for activity and error logging. Can be any of
 *   the following values:
 *
 *   <ul>
 *     <li>`debug` for the most verbose logging level, primarily for
 *     debugging.</li>
 *     <li>`error` to log errors only.</li>
 *     <li><code>`silent` to turn off logging.</li>
 *   </ul>
 */


function l(e) {
  for (var r = [], i = 1; i < arguments.length; i++) {
    r[i - 1] = arguments[i];
  }

  if (h.logLevel <= n.LogLevel.DEBUG) {
    var o = r.map(v);
    h.debug.apply(h, t.__spreadArrays(["Firestore (7.24.0): " + e], o));
  }
}

function p(e) {
  for (var r = [], i = 1; i < arguments.length; i++) {
    r[i - 1] = arguments[i];
  }

  if (h.logLevel <= n.LogLevel.ERROR) {
    var o = r.map(v);
    h.error.apply(h, t.__spreadArrays(["Firestore (7.24.0): " + e], o));
  }
}

function d(e) {
  for (var r = [], i = 1; i < arguments.length; i++) {
    r[i - 1] = arguments[i];
  }

  if (h.logLevel <= n.LogLevel.WARN) {
    var o = r.map(v);
    h.warn.apply(h, t.__spreadArrays(["Firestore (7.24.0): " + e], o));
  }
}
/**
 * Converts an additional log parameter to a string representation.
 */


function v(t) {
  if ("string" == typeof t) return t;

  try {
    return e = t, JSON.stringify(e);
  } catch (e) {
    // Converting to JSON failed, just log the object directly
    return t;
  }
  /**
  * @license
  * Copyright 2020 Google LLC
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */

  /** Formats an object as a JSON string, suitable for logging. */


  var e;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Unconditionally fails, throwing an Error with the given message.
 * Messages are stripped in production builds.
 *
 * Returns `never` and can be used in expressions:
 * @example
 * let futureVar = fail('not implemented yet');
 */


function y(t) {
  void 0 === t && (t = "Unexpected state"); // Log the failure in addition to throw an exception, just in case the
  // exception is swallowed.

  var e = "FIRESTORE (7.24.0) INTERNAL ASSERTION FAILED: " + t; // NOTE: We don't use FirestoreError here because these are internal failures
  // that cannot be handled by the user. (Also it would create a circular
  // dependency between the error and assert modules which doesn't work.)

  throw p(e), new Error(e);
}

function g(t, e) {
  t || y();
}
/**
 * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an
 * instance of `T` before casting.
 */


function m(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any
e) {
  return t;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function w(t) {
  var e = 0;

  for (var n in t) {
    Object.prototype.hasOwnProperty.call(t, n) && e++;
  }

  return e;
}

function _(t, e) {
  for (var n in t) {
    Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);
  }
}

function b(t) {
  for (var e in t) {
    if (Object.prototype.hasOwnProperty.call(t, e)) return !1;
  }

  return !0;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Path represents an ordered sequence of string segments.
 */


var I =
/** @class */
function () {
  function t(t, e, n) {
    void 0 === e ? e = 0 : e > t.length && y(), void 0 === n ? n = t.length - e : n > t.length - e && y(), this.segments = t, this.offset = e, this.t = n;
  }

  return Object.defineProperty(t.prototype, "length", {
    get: function get() {
      return this.t;
    },
    enumerable: !1,
    configurable: !0
  }), t.prototype.isEqual = function (e) {
    return 0 === t.i(this, e);
  }, t.prototype.child = function (e) {
    var n = this.segments.slice(this.offset, this.limit());
    return e instanceof t ? e.forEach(function (t) {
      n.push(t);
    }) : n.push(e), this.o(n);
  },
  /** The index of one past the last segment of the path. */
  t.prototype.limit = function () {
    return this.offset + this.length;
  }, t.prototype.u = function (t) {
    return t = void 0 === t ? 1 : t, this.o(this.segments, this.offset + t, this.length - t);
  }, t.prototype.h = function () {
    return this.o(this.segments, this.offset, this.length - 1);
  }, t.prototype.l = function () {
    return this.segments[this.offset];
  }, t.prototype._ = function () {
    return this.get(this.length - 1);
  }, t.prototype.get = function (t) {
    return this.segments[this.offset + t];
  }, t.prototype.m = function () {
    return 0 === this.length;
  }, t.prototype.T = function (t) {
    if (t.length < this.length) return !1;

    for (var e = 0; e < this.length; e++) {
      if (this.get(e) !== t.get(e)) return !1;
    }

    return !0;
  }, t.prototype.I = function (t) {
    if (this.length + 1 !== t.length) return !1;

    for (var e = 0; e < this.length; e++) {
      if (this.get(e) !== t.get(e)) return !1;
    }

    return !0;
  }, t.prototype.forEach = function (t) {
    for (var e = this.offset, n = this.limit(); e < n; e++) {
      t(this.segments[e]);
    }
  }, t.prototype.A = function () {
    return this.segments.slice(this.offset, this.limit());
  }, t.i = function (t, e) {
    for (var n = Math.min(t.length, e.length), r = 0; r < n; r++) {
      var i = t.get(r),
          o = e.get(r);
      if (i < o) return -1;
      if (i > o) return 1;
    }

    return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;
  }, t;
}(),
    E =
/** @class */
function (e) {
  function n() {
    return null !== e && e.apply(this, arguments) || this;
  }

  return t.__extends(n, e), n.prototype.o = function (t, e, r) {
    return new n(t, e, r);
  }, n.prototype.R = function () {
    // NOTE: The client is ignorant of any path segments containing escape
    // sequences (e.g. __id123__) and just passes them through raw (they exist
    // for legacy reasons and should not be used frequently).
    return this.A().join("/");
  }, n.prototype.toString = function () {
    return this.R();
  },
  /**
   * Creates a resource path from the given slash-delimited string. If multiple
   * arguments are provided, all components are combined. Leading and trailing
   * slashes from all components are ignored.
   */
  n.g = function () {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    } // NOTE: The client is ignorant of any path segments containing escape
    // sequences (e.g. __id123__) and just passes them through raw (they exist
    // for legacy reasons and should not be used frequently).


    for (var r = [], i = 0, o = t; i < o.length; i++) {
      var s = o[i];
      if (s.indexOf("//") >= 0) throw new c(a.INVALID_ARGUMENT, "Invalid segment (" + s + "). Paths must not contain // in them."); // Strip leading and traling slashed.

      r.push.apply(r, s.split("/").filter(function (t) {
        return t.length > 0;
      }));
    }

    return new n(r);
  }, n.P = function () {
    return new n([]);
  }, n;
}(I),
    T = /^[_a-zA-Z][_a-zA-Z0-9]*$/,
    N =
/** @class */
function (e) {
  function n() {
    return null !== e && e.apply(this, arguments) || this;
  }

  return t.__extends(n, e), n.prototype.o = function (t, e, r) {
    return new n(t, e, r);
  },
  /**
   * Returns true if the string could be used as a segment in a field path
   * without escaping.
   */
  n.V = function (t) {
    return T.test(t);
  }, n.prototype.R = function () {
    return this.A().map(function (t) {
      return t = t.replace("\\", "\\\\").replace("`", "\\`"), n.V(t) || (t = "`" + t + "`"), t;
    }).join(".");
  }, n.prototype.toString = function () {
    return this.R();
  },
  /**
   * Returns true if this field references the key of a document.
   */
  n.prototype.p = function () {
    return 1 === this.length && "__name__" === this.get(0);
  },
  /**
   * The field designating the key of a document.
   */
  n.v = function () {
    return new n(["__name__"]);
  },
  /**
   * Parses a field string from the given server-formatted string.
   *
   * - Splitting the empty string is not allowed (for now at least).
   * - Empty segments within the string (e.g. if there are two consecutive
   *   separators) are not allowed.
   *
   * TODO(b/37244157): we should make this more strict. Right now, it allows
   * non-identifier path components, even if they aren't escaped.
   */
  n.S = function (t) {
    for (var e = [], r = "", i = 0, o = function o() {
      if (0 === r.length) throw new c(a.INVALID_ARGUMENT, "Invalid field path (" + t + "). Paths must not be empty, begin with '.', end with '.', or contain '..'");
      e.push(r), r = "";
    }, s = !1; i < t.length;) {
      var u = t[i];

      if ("\\" === u) {
        if (i + 1 === t.length) throw new c(a.INVALID_ARGUMENT, "Path has trailing escape character: " + t);
        var h = t[i + 1];
        if ("\\" !== h && "." !== h && "`" !== h) throw new c(a.INVALID_ARGUMENT, "Path has invalid escape sequence: " + t);
        r += h, i += 2;
      } else "`" === u ? (s = !s, i++) : "." !== u || s ? (r += u, i++) : (o(), i++);
    }

    if (o(), s) throw new c(a.INVALID_ARGUMENT, "Unterminated ` in path: " + t);
    return new n(e);
  }, n.P = function () {
    return new n([]);
  }, n;
}(I),
    A =
/** @class */
function () {
  function t(t) {
    this.path = t;
  }

  return t.D = function (e) {
    return new t(E.g(e));
  }, t.C = function (e) {
    return new t(E.g(e).u(5));
  },
  /** Returns true if the document is in the specified collectionId. */
  t.prototype.N = function (t) {
    return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;
  }, t.prototype.isEqual = function (t) {
    return null !== t && 0 === E.i(this.path, t.path);
  }, t.prototype.toString = function () {
    return this.path.toString();
  }, t.i = function (t, e) {
    return E.i(t.path, e.path);
  }, t.F = function (t) {
    return t.length % 2 == 0;
  },
  /**
   * Creates and returns a new document key with the given segments.
   *
   * @param segments The segments of the path to the document
   * @return A new instance of DocumentKey
   */
  t.$ = function (e) {
    return new t(new E(e.slice()));
  }, t;
}();
/**
 * A slash-separated path for navigating resources (documents and collections)
 * within Firestore.
 */

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Validates that no arguments were passed in the invocation of functionName.
 *
 * Forward the magic "arguments" variable as second parameter on which the
 * parameter validation is performed:
 * validateNoArgs('myFunction', arguments);
 */


function S(t, e) {
  if (0 !== e.length) throw new c(a.INVALID_ARGUMENT, "Function " + t + "() does not support arguments, but was called with " + W(e.length, "argument") + ".");
}
/**
 * Validates the invocation of functionName has the exact number of arguments.
 *
 * Forward the magic "arguments" variable as second parameter on which the
 * parameter validation is performed:
 * validateExactNumberOfArgs('myFunction', arguments, 2);
 */


function D(t, e, n) {
  if (e.length !== n) throw new c(a.INVALID_ARGUMENT, "Function " + t + "() requires " + W(n, "argument") + ", but was called with " + W(e.length, "argument") + ".");
}
/**
 * Validates the invocation of functionName has at least the provided number of
 * arguments (but can have many more).
 *
 * Forward the magic "arguments" variable as second parameter on which the
 * parameter validation is performed:
 * validateAtLeastNumberOfArgs('myFunction', arguments, 2);
 */


function x(t, e, n) {
  if (e.length < n) throw new c(a.INVALID_ARGUMENT, "Function " + t + "() requires at least " + W(n, "argument") + ", but was called with " + W(e.length, "argument") + ".");
}
/**
 * Validates the invocation of functionName has number of arguments between
 * the values provided.
 *
 * Forward the magic "arguments" variable as second parameter on which the
 * parameter validation is performed:
 * validateBetweenNumberOfArgs('myFunction', arguments, 2, 3);
 */


function L(t, e, n, r) {
  if (e.length < n || e.length > r) throw new c(a.INVALID_ARGUMENT, "Function " + t + "() requires between " + n + " and " + r + " arguments, but was called with " + W(e.length, "argument") + ".");
}
/**
 * Validates the provided argument is an array and has as least the expected
 * number of elements.
 */

/**
 * Validates the provided positional argument has the native JavaScript type
 * using typeof checks.
 */


function k(t, e, n, r) {
  C(t, e, B(n) + " argument", r);
}
/**
 * Validates the provided argument has the native JavaScript type using
 * typeof checks or is undefined.
 */


function R(t, e, n, r) {
  void 0 !== r && k(t, e, n, r);
}
/**
 * Validates the provided named option has the native JavaScript type using
 * typeof checks.
 */


function O(t, e, n, r) {
  C(t, e, n + " option", r);
}
/**
 * Validates the provided named option has the native JavaScript type using
 * typeof checks or is undefined.
 */


function P(t, e, n, r) {
  void 0 !== r && O(t, e, n, r);
}
/**
 * Validates that two boolean options are not set at the same time.
 */

/**
 * Validates that the provided named option equals one of the expected values.
 */

/**
 * Validates that the provided named option equals one of the expected values or
 * is undefined.
 */


function V(t, e, n, r, i) {
  void 0 !== r && function (t, e, n, r, i) {
    for (var o = [], s = 0, u = i; s < u.length; s++) {
      var h = u[s];
      if (h === r) return;
      o.push(M(h));
    }

    var f = M(r);
    throw new c(a.INVALID_ARGUMENT, "Invalid value " + f + " provided to function " + t + '() for option "' + n + '". Acceptable values: ' + o.join(", "));
  }(t, 0, n, r, i);
}
/**
 * Validates that the provided argument is a valid enum.
 *
 * @param functionName Function making the validation call.
 * @param enums Array containing all possible values for the enum.
 * @param position Position of the argument in `functionName`.
 * @param argument Argument to validate.
 * @return The value as T if the argument can be converted.
 */


function U(t, e, n, r) {
  if (!e.some(function (t) {
    return t === r;
  })) throw new c(a.INVALID_ARGUMENT, "Invalid value " + M(r) + " provided to function " + t + "() for its " + B(n) + " argument. Acceptable values: " + e.join(", "));
  return r;
}
/** Helper to validate the type of a provided input. */


function C(t, e, n, r) {
  if (!("object" === e ? F(r) : "non-empty string" === e ? "string" == typeof r && "" !== r : typeof r === e)) {
    var i = M(r);
    throw new c(a.INVALID_ARGUMENT, "Function " + t + "() requires its " + n + " to be of type " + e + ", but it was: " + i);
  }
}
/**
 * Returns true if it's a non-null object without a custom prototype
 * (i.e. excludes Array, Date, etc.).
 */


function F(t) {
  return "object" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));
}
/** Returns a string describing the type / value of the provided input. */


function M(t) {
  if (void 0 === t) return "undefined";
  if (null === t) return "null";
  if ("string" == typeof t) return t.length > 20 && (t = t.substring(0, 20) + "..."), JSON.stringify(t);
  if ("number" == typeof t || "boolean" == typeof t) return "" + t;

  if ("object" == typeof t) {
    if (t instanceof Array) return "an array";

    var e =
    /** Hacky method to try to get the constructor name for an object. */
    function (t) {
      if (t.constructor) {
        var e = /function\s+([^\s(]+)\s*\(/.exec(t.constructor.toString());
        if (e && e.length > 1) return e[1];
      }

      return null;
    }(t);

    return e ? "a custom " + e + " object" : "an object";
  }

  return "function" == typeof t ? "a function" : y();
}

function q(t, e, n) {
  if (void 0 === n) throw new c(a.INVALID_ARGUMENT, "Function " + t + "() requires a valid " + B(e) + " argument, but it was undefined.");
}
/**
 * Validates the provided positional argument is an object, and its keys and
 * values match the expected keys and types provided in optionTypes.
 */


function j(t, e, n) {
  _(e, function (e, r) {
    if (n.indexOf(e) < 0) throw new c(a.INVALID_ARGUMENT, "Unknown option '" + e + "' passed to function " + t + "(). Available options: " + n.join(", "));
  });
}
/**
 * Helper method to throw an error that the provided argument did not pass
 * an instanceof check.
 */


function G(t, e, n, r) {
  var i = M(r);
  return new c(a.INVALID_ARGUMENT, "Function " + t + "() requires its " + B(n) + " argument to be a " + e + ", but it was: " + i);
}

function z(t, e, n) {
  if (n <= 0) throw new c(a.INVALID_ARGUMENT, "Function " + t + "() requires its " + B(e) + " argument to be a positive number, but it was: " + n + ".");
}
/** Converts a number to its english word representation */


function B(t) {
  switch (t) {
    case 1:
      return "first";

    case 2:
      return "second";

    case 3:
      return "third";

    default:
      return t + "th";
  }
}
/**
 * Formats the given word as plural conditionally given the preceding number.
 */


function W(t, e) {
  return t + " " + e + (1 === t ? "" : "s");
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Generates `nBytes` of random bytes.
 *
 * If `nBytes < 0` , an error will be thrown.
 */


function K(t) {
  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.
  var e = // eslint-disable-next-line @typescript-eslint/no-explicit-any
  "undefined" != typeof self && (self.crypto || self.msCrypto),
      n = new Uint8Array(t);
  if (e && "function" == typeof e.getRandomValues) e.getRandomValues(n);else // Falls back to Math.random
    for (var r = 0; r < t; r++) {
      n[r] = Math.floor(256 * Math.random());
    }
  return n;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var Q =
/** @class */
function () {
  function t() {}

  return t.k = function () {
    for ( // Alphanumeric characters
    var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", e = Math.floor(256 / t.length) * t.length, n = "" // The largest byte value that is a multiple of `char.length`.
    ; n.length < 20;) {
      for (var r = K(40), i = 0; i < r.length; ++i) {
        // Only accept values that are [0, maxMultiple), this ensures they can
        // be evenly mapped to indices of `chars` via a modulo operation.
        n.length < 20 && r[i] < e && (n += t.charAt(r[i] % t.length));
      }
    }

    return n;
  }, t;
}();

function H(t, e) {
  return t < e ? -1 : t > e ? 1 : 0;
}
/** Helper to compare arrays using isEqual(). */


function Y(t, e, n) {
  return t.length === e.length && t.every(function (t, r) {
    return n(t, e[r]);
  });
}
/**
 * Returns the immediate lexicographically-following string. This is useful to
 * construct an inclusive range for indexeddb iterators.
 */


function $(t) {
  // Return the input string, with an additional NUL byte appended.
  return t + "\0";
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Immutable class that represents a "proto" byte string.
 *
 * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when
 * sent on the wire. This class abstracts away this differentiation by holding
 * the proto byte string in a common class that must be converted into a string
 * before being sent as a proto.
 */


var X =
/** @class */
function () {
  function t(t) {
    this.M = t;
  }

  return t.fromBase64String = function (e) {
    return new t(atob(e));
  }, t.fromUint8Array = function (e) {
    return new t(
    /**
    * Helper function to convert an Uint8array to a binary string.
    */
    function (t) {
      for (var e = "", n = 0; n < t.length; ++n) {
        e += String.fromCharCode(t[n]);
      }

      return e;
    }(e));
  }, t.prototype.toBase64 = function () {
    return t = this.M, btoa(t);
    /** Converts a binary string to a Base64 encoded string. */

    var t;
    /** True if and only if the Base64 conversion functions are available. */
  }, t.prototype.toUint8Array = function () {
    return function (t) {
      for (var e = new Uint8Array(t.length), n = 0; n < t.length; n++) {
        e[n] = t.charCodeAt(n);
      }

      return e;
    }(this.M);
  }, t.prototype.O = function () {
    return 2 * this.M.length;
  }, t.prototype.L = function (t) {
    return H(this.M, t.M);
  }, t.prototype.isEqual = function (t) {
    return this.M === t.M;
  }, t;
}();

X.B = new X("");

var J =
/** @class */
function () {
  function t(t) {
    this.q = t;
  }
  /**
   * Creates a new `Bytes` object from the given Base64 string, converting it to
   * bytes.
   *
   * @param base64 The Base64 string used to create the `Bytes` object.
   */


  return t.fromBase64String = function (e) {
    try {
      return new t(X.fromBase64String(e));
    } catch (e) {
      throw new c(a.INVALID_ARGUMENT, "Failed to construct Bytes from Base64 string: " + e);
    }
  },
  /**
   * Creates a new `Bytes` object from the given Uint8Array.
   *
   * @param array The Uint8Array used to create the `Bytes` object.
   */
  t.fromUint8Array = function (e) {
    return new t(X.fromUint8Array(e));
  },
  /**
   * Returns the underlying bytes as a Base64-encoded string.
   *
   * @return The Base64-encoded string created from the `Bytes` object.
   */
  t.prototype.toBase64 = function () {
    return this.q.toBase64();
  },
  /**
   * Returns the underlying bytes in a new `Uint8Array`.
   *
   * @return The Uint8Array created from the `Bytes` object.
   */
  t.prototype.toUint8Array = function () {
    return this.q.toUint8Array();
  },
  /**
   * Returns a string representation of the `Bytes` object.
   *
   * @return A string representation of the `Bytes` object.
   */
  t.prototype.toString = function () {
    return "Bytes(base64: " + this.toBase64() + ")";
  },
  /**
   * Returns true if this `Bytes` object is equal to the provided one.
   *
   * @param other The `Bytes` object to compare against.
   * @return true if this `Bytes` object is equal to the provided one.
   */
  t.prototype.isEqual = function (t) {
    return this.q.isEqual(t.q);
  }, t;
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** Helper function to assert Uint8Array is available at runtime. */


function Z() {
  if ("undefined" == typeof Uint8Array) throw new c(a.UNIMPLEMENTED, "Uint8Arrays are not available in this environment.");
}
/** Helper function to assert Base64 functions are available at runtime. */


function tt() {
  if ("undefined" == typeof atob) throw new c(a.UNIMPLEMENTED, "Blobs are unavailable in Firestore in this environment.");
}
/**
 * Immutable class holding a blob (binary data).
 *
 * This class is directly exposed in the public API. It extends the Bytes class
 * of the firestore-exp API to support `instanceof Bytes` checks during user
 * data conversion.
 *
 * Note that while you can't hide the constructor in JavaScript code, we are
 * using the hack above to make sure no-one outside this module can call it.
 */


var et =
/** @class */
function (e) {
  function n() {
    return null !== e && e.apply(this, arguments) || this;
  }

  return t.__extends(n, e), n.fromBase64String = function (t) {
    D("Blob.fromBase64String", arguments, 1), k("Blob.fromBase64String", "string", 1, t), tt();

    try {
      return new n(X.fromBase64String(t));
    } catch (t) {
      throw new c(a.INVALID_ARGUMENT, "Failed to construct Blob from Base64 string: " + t);
    }
  }, n.fromUint8Array = function (t) {
    if (D("Blob.fromUint8Array", arguments, 1), Z(), !(t instanceof Uint8Array)) throw G("Blob.fromUint8Array", "Uint8Array", 1, t);
    return new n(X.fromUint8Array(t));
  }, n.prototype.toBase64 = function () {
    return D("Blob.toBase64", arguments, 0), tt(), e.prototype.toBase64.call(this);
  }, n.prototype.toUint8Array = function () {
    return D("Blob.toUint8Array", arguments, 0), Z(), e.prototype.toUint8Array.call(this);
  }, n.prototype.toString = function () {
    return "Blob(base64: " + this.toBase64() + ")";
  }, n;
}(J),
    nt =
/**
     * Constructs a DatabaseInfo using the provided host, databaseId and
     * persistenceKey.
     *
     * @param databaseId The database to use.
     * @param persistenceKey A unique identifier for this Firestore's local
     * storage (used in conjunction with the databaseId).
     * @param host The Firestore backend host to connect to.
     * @param ssl Whether to use SSL when connecting.
     * @param forceLongPolling Whether to use the forceLongPolling option
     * when using WebChannel as the network transport.
     * @param autoDetectLongPolling Whether to use the detectBufferingProxy
     * option when using WebChannel as the network transport.
     */
function nt(t, e, n, r, i, o) {
  this.U = t, this.persistenceKey = e, this.host = n, this.ssl = r, this.forceLongPolling = i, this.W = o;
},
    rt =
/** @class */
function () {
  function t(t, e) {
    this.projectId = t, this.database = e || "(default)";
  }

  return Object.defineProperty(t.prototype, "j", {
    get: function get() {
      return "(default)" === this.database;
    },
    enumerable: !1,
    configurable: !0
  }), t.prototype.isEqual = function (e) {
    return e instanceof t && e.projectId === this.projectId && e.database === this.database;
  }, t.prototype.L = function (t) {
    return H(this.projectId, t.projectId) || H(this.database, t.database);
  }, t;
}(),
    it =
/** @class */
function () {
  function t(t, e) {
    this.K = t, this.G = e,
    /**
         * The inner map for a key -> value pair. Due to the possibility of
         * collisions we keep a list of entries that we do a linear search through
         * to find an actual match. Note that collisions should be rare, so we still
         * expect near constant time lookups in practice.
         */
    this.H = {};
  }

  return t.prototype.get = function (t) {
    var e = this.K(t),
        n = this.H[e];
    if (void 0 !== n) for (var r = 0, i = n; r < i.length; r++) {
      var o = i[r],
          s = o[0],
          u = o[1];
      if (this.G(s, t)) return u;
    }
  }, t.prototype.has = function (t) {
    return void 0 !== this.get(t);
  },
  /** Put this key and value in the map. */
  t.prototype.set = function (t, e) {
    var n = this.K(t),
        r = this.H[n];

    if (void 0 !== r) {
      for (var i = 0; i < r.length; i++) {
        if (this.G(r[i][0], t)) return void (r[i] = [t, e]);
      }

      r.push([t, e]);
    } else this.H[n] = [[t, e]];
  },
  /**
   * Remove this key from the map. Returns a boolean if anything was deleted.
   */
  t.prototype.delete = function (t) {
    var e = this.K(t),
        n = this.H[e];
    if (void 0 === n) return !1;

    for (var r = 0; r < n.length; r++) {
      if (this.G(n[r][0], t)) return 1 === n.length ? delete this.H[e] : n.splice(r, 1), !0;
    }

    return !1;
  }, t.prototype.forEach = function (t) {
    _(this.H, function (e, n) {
      for (var r = 0, i = n; r < i.length; r++) {
        var o = i[r],
            s = o[0],
            u = o[1];
        t(s, u);
      }
    });
  }, t.prototype.m = function () {
    return b(this.H);
  }, t;
}(),
    ot =
/** @class */
function () {
  /**
   * Creates a new timestamp.
   *
   * @param seconds The number of seconds of UTC time since Unix epoch
   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
   *     9999-12-31T23:59:59Z inclusive.
   * @param nanoseconds The non-negative fractions of a second at nanosecond
   *     resolution. Negative second values with fractions must still have
   *     non-negative nanoseconds values that count forward in time. Must be
   *     from 0 to 999,999,999 inclusive.
   */
  function t(t, e) {
    if (this.seconds = t, this.nanoseconds = e, e < 0) throw new c(a.INVALID_ARGUMENT, "Timestamp nanoseconds out of range: " + e);
    if (e >= 1e9) throw new c(a.INVALID_ARGUMENT, "Timestamp nanoseconds out of range: " + e);
    if (t < -62135596800) throw new c(a.INVALID_ARGUMENT, "Timestamp seconds out of range: " + t); // This will break in the year 10,000.

    if (t >= 253402300800) throw new c(a.INVALID_ARGUMENT, "Timestamp seconds out of range: " + t);
  }
  /**
   * Creates a new timestamp with the current date, with millisecond precision.
   *
   * @return a new timestamp representing the current date.
   */


  return t.now = function () {
    return t.fromMillis(Date.now());
  },
  /**
   * Creates a new timestamp from the given date.
   *
   * @param date The date to initialize the `Timestamp` from.
   * @return A new `Timestamp` representing the same point in time as the given
   *     date.
   */
  t.fromDate = function (e) {
    return t.fromMillis(e.getTime());
  },
  /**
   * Creates a new timestamp from the given number of milliseconds.
   *
   * @param milliseconds Number of milliseconds since Unix epoch
   *     1970-01-01T00:00:00Z.
   * @return A new `Timestamp` representing the same point in time as the given
   *     number of milliseconds.
   */
  t.fromMillis = function (e) {
    var n = Math.floor(e / 1e3);
    return new t(n, 1e6 * (e - 1e3 * n));
  },
  /**
   * Converts a `Timestamp` to a JavaScript `Date` object. This conversion causes
   * a loss of precision since `Date` objects only support millisecond precision.
   *
   * @return JavaScript `Date` object representing the same point in time as
   *     this `Timestamp`, with millisecond precision.
   */
  t.prototype.toDate = function () {
    return new Date(this.toMillis());
  },
  /**
   * Converts a `Timestamp` to a numeric timestamp (in milliseconds since
   * epoch). This operation causes a loss of precision.
   *
   * @return The point in time corresponding to this timestamp, represented as
   *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.
   */
  t.prototype.toMillis = function () {
    return 1e3 * this.seconds + this.nanoseconds / 1e6;
  }, t.prototype.Y = function (t) {
    return this.seconds === t.seconds ? H(this.nanoseconds, t.nanoseconds) : H(this.seconds, t.seconds);
  },
  /**
   * Returns true if this `Timestamp` is equal to the provided one.
   *
   * @param other The `Timestamp` to compare against.
   * @return true if this `Timestamp` is equal to the provided one.
   */
  t.prototype.isEqual = function (t) {
    return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;
  }, t.prototype.toString = function () {
    return "Timestamp(seconds=" + this.seconds + ", nanoseconds=" + this.nanoseconds + ")";
  }, t.prototype.toJSON = function () {
    return {
      seconds: this.seconds,
      nanoseconds: this.nanoseconds
    };
  },
  /**
   * Converts this object to a primitive string, which allows Timestamp objects to be compared
   * using the `>`, `<=`, `>=` and `>` operators.
   */
  t.prototype.valueOf = function () {
    // This method returns a string of the form <seconds>.<nanoseconds> where <seconds> is
    // translated to have a non-negative value and both <seconds> and <nanoseconds> are left-padded
    // with zeroes to be a consistent length. Strings with this format then have a lexiographical
    // ordering that matches the expected ordering. The <seconds> translation is done to avoid
    // having a leading negative sign (i.e. a leading '-' character) in its string representation,
    // which would affect its lexiographical ordering.
    var t = this.seconds - -62135596800; // Note: Up to 12 decimal digits are required to represent all valid 'seconds' values.

    return String(t).padStart(12, "0") + "." + String(this.nanoseconds).padStart(9, "0");
  }, t;
}(),
    st =
/** @class */
function () {
  function t(t) {
    this.timestamp = t;
  }

  return t.J = function (e) {
    return new t(e);
  }, t.min = function () {
    return new t(new ot(0, 0));
  }, t.prototype.L = function (t) {
    return this.timestamp.Y(t.timestamp);
  }, t.prototype.isEqual = function (t) {
    return this.timestamp.isEqual(t.timestamp);
  },
  /** Returns a number representation of the version for use in spec tests. */
  t.prototype.X = function () {
    // Convert to microseconds.
    return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;
  }, t.prototype.toString = function () {
    return "SnapshotVersion(" + this.timestamp.toString() + ")";
  }, t.prototype.Z = function () {
    return this.timestamp;
  }, t;
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Returns whether a variable is either undefined or null.
 */


function ut(t) {
  return null == t;
}
/** Returns whether the value represents -0. */


function at(t) {
  // Detect if the value is -0.0. Based on polyfill from
  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
  return 0 === t && 1 / t == -1 / 0;
}
/**
 * Returns whether a value is an integer and in the safe integer range
 * @param value The value to test for being an integer and in the safe range
 */


function ct(t) {
  return "number" == typeof t && Number.isInteger(t) && !at(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Visible for testing


var ht = function ht(t, e, n, r, i, o, s) {
  void 0 === e && (e = null), void 0 === n && (n = []), void 0 === r && (r = []), void 0 === i && (i = null), void 0 === o && (o = null), void 0 === s && (s = null), this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = i, this.startAt = o, this.endAt = s, this.tt = null;
};
/**
 * Initializes a Target with a path and optional additional query constraints.
 * Path must currently be empty if this is a collection group query.
 *
 * NOTE: you should always construct `Target` from `Query.toTarget` instead of
 * using this factory method, because `Query` provides an implicit `orderBy`
 * property.
 */


function ft(t, e, n, r, i, o, s) {
  return void 0 === e && (e = null), void 0 === n && (n = []), void 0 === r && (r = []), void 0 === i && (i = null), void 0 === o && (o = null), void 0 === s && (s = null), new ht(t, e, n, r, i, o, s);
}

function lt(t) {
  var e = m(t);

  if (null === e.tt) {
    var n = e.path.R();
    null !== e.collectionGroup && (n += "|cg:" + e.collectionGroup), n += "|f:", n += e.filters.map(function (t) {
      return function (t) {
        // TODO(b/29183165): Technically, this won't be unique if two values have
        // the same description, such as the int 3 and the string "3". So we should
        // add the types in here somehow, too.
        return t.field.R() + t.op.toString() + re(t.value);
      }(t);
    }).join(","), n += "|ob:", n += e.orderBy.map(function (t) {
      return (e = t).field.R() + e.dir;
      var e;
    }).join(","), ut(e.limit) || (n += "|l:", n += e.limit), e.startAt && (n += "|lb:", n += ar(e.startAt)), e.endAt && (n += "|ub:", n += ar(e.endAt)), e.tt = n;
  }

  return e.tt;
}

function pt(t, e) {
  if (t.limit !== e.limit) return !1;
  if (t.orderBy.length !== e.orderBy.length) return !1;

  for (var n = 0; n < t.orderBy.length; n++) {
    if (!pr(t.orderBy[n], e.orderBy[n])) return !1;
  }

  if (t.filters.length !== e.filters.length) return !1;

  for (var r = 0; r < t.filters.length; r++) {
    if (i = t.filters[r], o = e.filters[r], i.op !== o.op || !i.field.isEqual(o.field) || !Zt(i.value, o.value)) return !1;
  }

  var i, o;
  return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!hr(t.startAt, e.startAt) && hr(t.endAt, e.endAt);
}

function dt(t) {
  return A.F(t.path) && null === t.collectionGroup && 0 === t.filters.length;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * An immutable set of metadata that the local store tracks for each target.
 */


var vt,
    yt,
    gt =
/** @class */
function () {
  function t(
  /** The target being listened to. */
  t,
  /**
   * The target ID to which the target corresponds; Assigned by the
   * LocalStore for user listens and by the SyncEngine for limbo watches.
   */
  e,
  /** The purpose of the target. */
  n,
  /**
   * The sequence number of the last transaction during which this target data
   * was modified.
   */
  r,
  /** The latest snapshot version seen for this target. */
  i
  /**
   * The maximum snapshot version at which the associated view
   * contained no limbo documents.
   */
  , o
  /**
   * An opaque, server-assigned token that allows watching a target to be
   * resumed after disconnecting without retransmitting all the data that
   * matches the target. The resume token essentially identifies a point in
   * time from which the server should resume sending results.
   */
  , s) {
    void 0 === i && (i = st.min()), void 0 === o && (o = st.min()), void 0 === s && (s = X.B), this.target = t, this.targetId = e, this.et = n, this.sequenceNumber = r, this.nt = i, this.lastLimboFreeSnapshotVersion = o, this.resumeToken = s;
  }
  /** Creates a new target data instance with an updated sequence number. */


  return t.prototype.st = function (e) {
    return new t(this.target, this.targetId, this.et, e, this.nt, this.lastLimboFreeSnapshotVersion, this.resumeToken);
  },
  /**
   * Creates a new target data instance with an updated resume token and
   * snapshot version.
   */
  t.prototype.it = function (e, n) {
    return new t(this.target, this.targetId, this.et, this.sequenceNumber, n, this.lastLimboFreeSnapshotVersion, e);
  },
  /**
   * Creates a new target data instance with an updated last limbo free
   * snapshot version number.
   */
  t.prototype.rt = function (e) {
    return new t(this.target, this.targetId, this.et, this.sequenceNumber, this.nt, e, this.resumeToken);
  }, t;
}(),
    mt = // TODO(b/33078163): just use simplest form of existence filter for now
function mt(t) {
  this.count = t;
};
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Determines whether an error code represents a permanent error when received
 * in response to a non-write operation.
 *
 * See isPermanentWriteError for classifying write errors.
 */


function wt(t) {
  switch (t) {
    case a.OK:
      return y();

    case a.CANCELLED:
    case a.UNKNOWN:
    case a.DEADLINE_EXCEEDED:
    case a.RESOURCE_EXHAUSTED:
    case a.INTERNAL:
    case a.UNAVAILABLE: // Unauthenticated means something went wrong with our token and we need
    // to retry with new credentials which will happen automatically.

    case a.UNAUTHENTICATED:
      return !1;

    case a.INVALID_ARGUMENT:
    case a.NOT_FOUND:
    case a.ALREADY_EXISTS:
    case a.PERMISSION_DENIED:
    case a.FAILED_PRECONDITION: // Aborted might be retried in some scenarios, but that is dependant on
    // the context and should handled individually by the calling code.
    // See https://cloud.google.com/apis/design/errors.

    case a.ABORTED:
    case a.OUT_OF_RANGE:
    case a.UNIMPLEMENTED:
    case a.DATA_LOSS:
      return !0;

    default:
      return y();
  }
}
/**
 * Determines whether an error code represents a permanent error when received
 * in response to a write operation.
 *
 * Write operations must be handled specially because as of b/119437764, ABORTED
 * errors on the write stream should be retried too (even though ABORTED errors
 * are not generally retryable).
 *
 * Note that during the initial handshake on the write stream an ABORTED error
 * signals that we should discard our stream token (i.e. it is permanent). This
 * means a handshake error should be classified with isPermanentError, above.
 */

/**
 * Maps an error Code from GRPC status code number, like 0, 1, or 14. These
 * are not the same as HTTP status codes.
 *
 * @returns The Code equivalent to the given GRPC status code. Fails if there
 *     is no match.
 */


function _t(t) {
  if (void 0 === t) // This shouldn't normally happen, but in certain error cases (like trying
    // to send invalid proto messages) we may get an error with no GRPC code.
    return p("GRPC error has no .code"), a.UNKNOWN;

  switch (t) {
    case vt.OK:
      return a.OK;

    case vt.CANCELLED:
      return a.CANCELLED;

    case vt.UNKNOWN:
      return a.UNKNOWN;

    case vt.DEADLINE_EXCEEDED:
      return a.DEADLINE_EXCEEDED;

    case vt.RESOURCE_EXHAUSTED:
      return a.RESOURCE_EXHAUSTED;

    case vt.INTERNAL:
      return a.INTERNAL;

    case vt.UNAVAILABLE:
      return a.UNAVAILABLE;

    case vt.UNAUTHENTICATED:
      return a.UNAUTHENTICATED;

    case vt.INVALID_ARGUMENT:
      return a.INVALID_ARGUMENT;

    case vt.NOT_FOUND:
      return a.NOT_FOUND;

    case vt.ALREADY_EXISTS:
      return a.ALREADY_EXISTS;

    case vt.PERMISSION_DENIED:
      return a.PERMISSION_DENIED;

    case vt.FAILED_PRECONDITION:
      return a.FAILED_PRECONDITION;

    case vt.ABORTED:
      return a.ABORTED;

    case vt.OUT_OF_RANGE:
      return a.OUT_OF_RANGE;

    case vt.UNIMPLEMENTED:
      return a.UNIMPLEMENTED;

    case vt.DATA_LOSS:
      return a.DATA_LOSS;

    default:
      return y();
  }
}
/**
 * Converts an HTTP response's error status to the equivalent error code.
 *
 * @param status An HTTP error response status ("FAILED_PRECONDITION",
 * "UNKNOWN", etc.)
 * @returns The equivalent Code. Non-matching responses are mapped to
 *     Code.UNKNOWN.
 */


(yt = vt || (vt = {}))[yt.OK = 0] = "OK", yt[yt.CANCELLED = 1] = "CANCELLED", yt[yt.UNKNOWN = 2] = "UNKNOWN", yt[yt.INVALID_ARGUMENT = 3] = "INVALID_ARGUMENT", yt[yt.DEADLINE_EXCEEDED = 4] = "DEADLINE_EXCEEDED", yt[yt.NOT_FOUND = 5] = "NOT_FOUND", yt[yt.ALREADY_EXISTS = 6] = "ALREADY_EXISTS", yt[yt.PERMISSION_DENIED = 7] = "PERMISSION_DENIED", yt[yt.UNAUTHENTICATED = 16] = "UNAUTHENTICATED", yt[yt.RESOURCE_EXHAUSTED = 8] = "RESOURCE_EXHAUSTED", yt[yt.FAILED_PRECONDITION = 9] = "FAILED_PRECONDITION", yt[yt.ABORTED = 10] = "ABORTED", yt[yt.OUT_OF_RANGE = 11] = "OUT_OF_RANGE", yt[yt.UNIMPLEMENTED = 12] = "UNIMPLEMENTED", yt[yt.INTERNAL = 13] = "INTERNAL", yt[yt.UNAVAILABLE = 14] = "UNAVAILABLE", yt[yt.DATA_LOSS = 15] = "DATA_LOSS";
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// An immutable sorted map implementation, based on a Left-leaning Red-Black
// tree.

var bt =
/** @class */
function () {
  function t(t, e) {
    this.i = t, this.root = e || Et.EMPTY;
  } // Returns a copy of the map, with the specified key/value added or replaced.


  return t.prototype.ot = function (e, n) {
    return new t(this.i, this.root.ot(e, n, this.i).copy(null, null, Et.at, null, null));
  }, // Returns a copy of the map, with the specified key removed.
  t.prototype.remove = function (e) {
    return new t(this.i, this.root.remove(e, this.i).copy(null, null, Et.at, null, null));
  }, // Returns the value of the node with the given key, or null.
  t.prototype.get = function (t) {
    for (var e = this.root; !e.m();) {
      var n = this.i(t, e.key);
      if (0 === n) return e.value;
      n < 0 ? e = e.left : n > 0 && (e = e.right);
    }

    return null;
  }, // Returns the index of the element in this sorted map, or -1 if it doesn't
  // exist.
  t.prototype.indexOf = function (t) {
    for ( // Number of nodes that were pruned when descending right
    var e = 0, n = this.root; !n.m();) {
      var r = this.i(t, n.key);
      if (0 === r) return e + n.left.size;
      r < 0 ? n = n.left : ( // Count all nodes left of the node plus the node itself
      e += n.left.size + 1, n = n.right);
    } // Node not found


    return -1;
  }, t.prototype.m = function () {
    return this.root.m();
  }, Object.defineProperty(t.prototype, "size", {
    // Returns the total number of nodes in the map.
    get: function get() {
      return this.root.size;
    },
    enumerable: !1,
    configurable: !0
  }), // Returns the minimum key in the map.
  t.prototype.ct = function () {
    return this.root.ct();
  }, // Returns the maximum key in the map.
  t.prototype.ut = function () {
    return this.root.ut();
  }, // Traverses the map in key order and calls the specified action function
  // for each key/value pair. If action returns true, traversal is aborted.
  // Returns the first truthy value returned by action, or the last falsey
  // value returned by action.
  t.prototype.ht = function (t) {
    return this.root.ht(t);
  }, t.prototype.forEach = function (t) {
    this.ht(function (e, n) {
      return t(e, n), !1;
    });
  }, t.prototype.toString = function () {
    var t = [];
    return this.ht(function (e, n) {
      return t.push(e + ":" + n), !1;
    }), "{" + t.join(", ") + "}";
  }, // Traverses the map in reverse key order and calls the specified action
  // function for each key/value pair. If action returns true, traversal is
  // aborted.
  // Returns the first truthy value returned by action, or the last falsey
  // value returned by action.
  t.prototype.lt = function (t) {
    return this.root.lt(t);
  }, // Returns an iterator over the SortedMap.
  t.prototype._t = function () {
    return new It(this.root, null, this.i, !1);
  }, t.prototype.ft = function (t) {
    return new It(this.root, t, this.i, !1);
  }, t.prototype.dt = function () {
    return new It(this.root, null, this.i, !0);
  }, t.prototype.wt = function (t) {
    return new It(this.root, t, this.i, !0);
  }, t;
}(),
    It =
/** @class */
function () {
  function t(t, e, n, r) {
    this.Tt = r, this.Et = [];

    for (var i = 1; !t.m();) {
      if (i = e ? n(t.key, e) : 1, // flip the comparison if we're going in reverse
      r && (i *= -1), i < 0) // This node is less than our start key. ignore it
        t = this.Tt ? t.left : t.right;else {
        if (0 === i) {
          // This node is exactly equal to our start key. Push it on the stack,
          // but stop iterating;
          this.Et.push(t);
          break;
        } // This node is greater than our start key, add it to the stack and move
        // to the next one


        this.Et.push(t), t = this.Tt ? t.right : t.left;
      }
    }
  }

  return t.prototype.It = function () {
    var t = this.Et.pop(),
        e = {
      key: t.key,
      value: t.value
    };
    if (this.Tt) for (t = t.left; !t.m();) {
      this.Et.push(t), t = t.right;
    } else for (t = t.right; !t.m();) {
      this.Et.push(t), t = t.left;
    }
    return e;
  }, t.prototype.At = function () {
    return this.Et.length > 0;
  }, t.prototype.Rt = function () {
    if (0 === this.Et.length) return null;
    var t = this.Et[this.Et.length - 1];
    return {
      key: t.key,
      value: t.value
    };
  }, t;
}(),
    Et =
/** @class */
function () {
  function t(e, n, r, i, o) {
    this.key = e, this.value = n, this.color = null != r ? r : t.RED, this.left = null != i ? i : t.EMPTY, this.right = null != o ? o : t.EMPTY, this.size = this.left.size + 1 + this.right.size;
  } // Returns a copy of the current node, optionally replacing pieces of it.


  return t.prototype.copy = function (e, n, r, i, o) {
    return new t(null != e ? e : this.key, null != n ? n : this.value, null != r ? r : this.color, null != i ? i : this.left, null != o ? o : this.right);
  }, t.prototype.m = function () {
    return !1;
  }, // Traverses the tree in key order and calls the specified action function
  // for each node. If action returns true, traversal is aborted.
  // Returns the first truthy value returned by action, or the last falsey
  // value returned by action.
  t.prototype.ht = function (t) {
    return this.left.ht(t) || t(this.key, this.value) || this.right.ht(t);
  }, // Traverses the tree in reverse key order and calls the specified action
  // function for each node. If action returns true, traversal is aborted.
  // Returns the first truthy value returned by action, or the last falsey
  // value returned by action.
  t.prototype.lt = function (t) {
    return this.right.lt(t) || t(this.key, this.value) || this.left.lt(t);
  }, // Returns the minimum node in the tree.
  t.prototype.min = function () {
    return this.left.m() ? this : this.left.min();
  }, // Returns the maximum key in the tree.
  t.prototype.ct = function () {
    return this.min().key;
  }, // Returns the maximum key in the tree.
  t.prototype.ut = function () {
    return this.right.m() ? this.key : this.right.ut();
  }, // Returns new tree, with the key/value added.
  t.prototype.ot = function (t, e, n) {
    var r = this,
        i = n(t, r.key);
    return (r = i < 0 ? r.copy(null, null, null, r.left.ot(t, e, n), null) : 0 === i ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.ot(t, e, n))).gt();
  }, t.prototype.Pt = function () {
    if (this.left.m()) return t.EMPTY;
    var e = this;
    return e.left.yt() || e.left.left.yt() || (e = e.Vt()), (e = e.copy(null, null, null, e.left.Pt(), null)).gt();
  }, // Returns new tree, with the specified item removed.
  t.prototype.remove = function (e, n) {
    var r,
        i = this;
    if (n(e, i.key) < 0) i.left.m() || i.left.yt() || i.left.left.yt() || (i = i.Vt()), i = i.copy(null, null, null, i.left.remove(e, n), null);else {
      if (i.left.yt() && (i = i.bt()), i.right.m() || i.right.yt() || i.right.left.yt() || (i = i.vt()), 0 === n(e, i.key)) {
        if (i.right.m()) return t.EMPTY;
        r = i.right.min(), i = i.copy(r.key, r.value, null, null, i.right.Pt());
      }

      i = i.copy(null, null, null, null, i.right.remove(e, n));
    }
    return i.gt();
  }, t.prototype.yt = function () {
    return this.color;
  }, // Returns new tree after performing any needed rotations.
  t.prototype.gt = function () {
    var t = this;
    return t.right.yt() && !t.left.yt() && (t = t.St()), t.left.yt() && t.left.left.yt() && (t = t.bt()), t.left.yt() && t.right.yt() && (t = t.Dt()), t;
  }, t.prototype.Vt = function () {
    var t = this.Dt();
    return t.right.left.yt() && (t = (t = (t = t.copy(null, null, null, null, t.right.bt())).St()).Dt()), t;
  }, t.prototype.vt = function () {
    var t = this.Dt();
    return t.left.left.yt() && (t = (t = t.bt()).Dt()), t;
  }, t.prototype.St = function () {
    var e = this.copy(null, null, t.RED, null, this.right.left);
    return this.right.copy(null, null, this.color, e, null);
  }, t.prototype.bt = function () {
    var e = this.copy(null, null, t.RED, this.left.right, null);
    return this.left.copy(null, null, this.color, null, e);
  }, t.prototype.Dt = function () {
    var t = this.left.copy(null, null, !this.left.color, null, null),
        e = this.right.copy(null, null, !this.right.color, null, null);
    return this.copy(null, null, !this.color, t, e);
  }, // For testing.
  t.prototype.Ct = function () {
    var t = this.Nt();
    return Math.pow(2, t) <= this.size + 1;
  }, // In a balanced RB tree, the black-depth (number of black nodes) from root to
  // leaves is equal on both sides.  This function verifies that or asserts.
  t.prototype.Nt = function () {
    if (this.yt() && this.left.yt()) throw y();
    if (this.right.yt()) throw y();
    var t = this.left.Nt();
    if (t !== this.right.Nt()) throw y();
    return t + (this.yt() ? 0 : 1);
  }, t;
}(); // end SortedMap
// An iterator over an LLRBNode.
// end LLRBNode
// Empty node is shared between all LLRB trees.
// eslint-disable-next-line @typescript-eslint/no-explicit-any


Et.EMPTY = null, Et.RED = !0, Et.at = !1, // end LLRBEmptyNode
Et.EMPTY = new (
/** @class */
function () {
  function t() {
    this.size = 0;
  }

  return Object.defineProperty(t.prototype, "key", {
    get: function get() {
      throw y();
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(t.prototype, "value", {
    get: function get() {
      throw y();
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(t.prototype, "color", {
    get: function get() {
      throw y();
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(t.prototype, "left", {
    get: function get() {
      throw y();
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(t.prototype, "right", {
    get: function get() {
      throw y();
    },
    enumerable: !1,
    configurable: !0
  }), // Returns a copy of the current node.
  t.prototype.copy = function (t, e, n, r, i) {
    return this;
  }, // Returns a copy of the tree, with the specified key/value added.
  t.prototype.ot = function (t, e, n) {
    return new Et(t, e);
  }, // Returns a copy of the tree, with the specified key removed.
  t.prototype.remove = function (t, e) {
    return this;
  }, t.prototype.m = function () {
    return !0;
  }, t.prototype.ht = function (t) {
    return !1;
  }, t.prototype.lt = function (t) {
    return !1;
  }, t.prototype.ct = function () {
    return null;
  }, t.prototype.ut = function () {
    return null;
  }, t.prototype.yt = function () {
    return !1;
  }, // For testing.
  t.prototype.Ct = function () {
    return !0;
  }, t.prototype.Nt = function () {
    return 0;
  }, t;
}())();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * SortedSet is an immutable (copy-on-write) collection that holds elements
 * in order specified by the provided comparator.
 *
 * NOTE: if provided comparator returns 0 for two elements, we consider them to
 * be equal!
 */

var Tt =
/** @class */
function () {
  function t(t) {
    this.i = t, this.data = new bt(this.i);
  }

  return t.prototype.has = function (t) {
    return null !== this.data.get(t);
  }, t.prototype.first = function () {
    return this.data.ct();
  }, t.prototype.last = function () {
    return this.data.ut();
  }, Object.defineProperty(t.prototype, "size", {
    get: function get() {
      return this.data.size;
    },
    enumerable: !1,
    configurable: !0
  }), t.prototype.indexOf = function (t) {
    return this.data.indexOf(t);
  },
  /** Iterates elements in order defined by "comparator" */
  t.prototype.forEach = function (t) {
    this.data.ht(function (e, n) {
      return t(e), !1;
    });
  },
  /** Iterates over `elem`s such that: range[0] <= elem < range[1]. */
  t.prototype.Ft = function (t, e) {
    for (var n = this.data.ft(t[0]); n.At();) {
      var r = n.It();
      if (this.i(r.key, t[1]) >= 0) return;
      e(r.key);
    }
  },
  /**
   * Iterates over `elem`s such that: start <= elem until false is returned.
   */
  t.prototype.xt = function (t, e) {
    var n;

    for (n = void 0 !== e ? this.data.ft(e) : this.data._t(); n.At();) {
      if (!t(n.It().key)) return;
    }
  },
  /** Finds the least element greater than or equal to `elem`. */
  t.prototype.$t = function (t) {
    var e = this.data.ft(t);
    return e.At() ? e.It().key : null;
  }, t.prototype._t = function () {
    return new Nt(this.data._t());
  }, t.prototype.ft = function (t) {
    return new Nt(this.data.ft(t));
  },
  /** Inserts or updates an element */
  t.prototype.add = function (t) {
    return this.copy(this.data.remove(t).ot(t, !0));
  },
  /** Deletes an element */
  t.prototype.delete = function (t) {
    return this.has(t) ? this.copy(this.data.remove(t)) : this;
  }, t.prototype.m = function () {
    return this.data.m();
  }, t.prototype.kt = function (t) {
    var e = this; // Make sure `result` always refers to the larger one of the two sets.

    return e.size < t.size && (e = t, t = this), t.forEach(function (t) {
      e = e.add(t);
    }), e;
  }, t.prototype.isEqual = function (e) {
    if (!(e instanceof t)) return !1;
    if (this.size !== e.size) return !1;

    for (var n = this.data._t(), r = e.data._t(); n.At();) {
      var i = n.It().key,
          o = r.It().key;
      if (0 !== this.i(i, o)) return !1;
    }

    return !0;
  }, t.prototype.A = function () {
    var t = [];
    return this.forEach(function (e) {
      t.push(e);
    }), t;
  }, t.prototype.toString = function () {
    var t = [];
    return this.forEach(function (e) {
      return t.push(e);
    }), "SortedSet(" + t.toString() + ")";
  }, t.prototype.copy = function (e) {
    var n = new t(this.i);
    return n.data = e, n;
  }, t;
}(),
    Nt =
/** @class */
function () {
  function t(t) {
    this.Mt = t;
  }

  return t.prototype.It = function () {
    return this.Mt.It().key;
  }, t.prototype.At = function () {
    return this.Mt.At();
  }, t;
}(),
    At = new bt(A.i);

function St() {
  return At;
}

function Dt() {
  return St();
}

var xt = new bt(A.i);

function Lt() {
  return xt;
}

var kt = new bt(A.i),
    Rt = new Tt(A.i);

function Ot() {
  for (var t = [], e = 0; e < arguments.length; e++) {
    t[e] = arguments[e];
  }

  for (var n = Rt, r = 0, i = t; r < i.length; r++) {
    var o = i[r];
    n = n.add(o);
  }

  return n;
}

var Pt = new Tt(H);

function Vt() {
  return Pt;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * DocumentSet is an immutable (copy-on-write) collection that holds documents
 * in order specified by the provided comparator. We always add a document key
 * comparator on top of what is provided to guarantee document equality based on
 * the key.
 */


var Ut =
/** @class */
function () {
  /** The default ordering is by key if the comparator is omitted */
  function t(t) {
    // We are adding document key comparator to the end as it's the only
    // guaranteed unique property of a document.
    this.i = t ? function (e, n) {
      return t(e, n) || A.i(e.key, n.key);
    } : function (t, e) {
      return A.i(t.key, e.key);
    }, this.Ot = Lt(), this.Lt = new bt(this.i);
  }

  return t.Bt = function (e) {
    return new t(e.i);
  }, t.prototype.has = function (t) {
    return null != this.Ot.get(t);
  }, t.prototype.get = function (t) {
    return this.Ot.get(t);
  }, t.prototype.first = function () {
    return this.Lt.ct();
  }, t.prototype.last = function () {
    return this.Lt.ut();
  }, t.prototype.m = function () {
    return this.Lt.m();
  },
  /**
   * Returns the index of the provided key in the document set, or -1 if the
   * document key is not present in the set;
   */
  t.prototype.indexOf = function (t) {
    var e = this.Ot.get(t);
    return e ? this.Lt.indexOf(e) : -1;
  }, Object.defineProperty(t.prototype, "size", {
    get: function get() {
      return this.Lt.size;
    },
    enumerable: !1,
    configurable: !0
  }),
  /** Iterates documents in order defined by "comparator" */
  t.prototype.forEach = function (t) {
    this.Lt.ht(function (e, n) {
      return t(e), !1;
    });
  },
  /** Inserts or updates a document with the same key */
  t.prototype.add = function (t) {
    // First remove the element if we have it.
    var e = this.delete(t.key);
    return e.copy(e.Ot.ot(t.key, t), e.Lt.ot(t, null));
  },
  /** Deletes a document with a given key */
  t.prototype.delete = function (t) {
    var e = this.get(t);
    return e ? this.copy(this.Ot.remove(t), this.Lt.remove(e)) : this;
  }, t.prototype.isEqual = function (e) {
    if (!(e instanceof t)) return !1;
    if (this.size !== e.size) return !1;

    for (var n = this.Lt._t(), r = e.Lt._t(); n.At();) {
      var i = n.It().key,
          o = r.It().key;
      if (!i.isEqual(o)) return !1;
    }

    return !0;
  }, t.prototype.toString = function () {
    var t = [];
    return this.forEach(function (e) {
      t.push(e.toString());
    }), 0 === t.length ? "DocumentSet ()" : "DocumentSet (\n  " + t.join("  \n") + "\n)";
  }, t.prototype.copy = function (e, n) {
    var r = new t();
    return r.i = this.i, r.Ot = e, r.Lt = n, r;
  }, t;
}(),
    Ct =
/** @class */
function () {
  function t() {
    this.qt = new bt(A.i);
  }

  return t.prototype.track = function (t) {
    var e = t.doc.key,
        n = this.qt.get(e);
    n ? // Merge the new change with the existing change.
    0
    /* Added */
    !== t.type && 3
    /* Metadata */
    === n.type ? this.qt = this.qt.ot(e, t) : 3
    /* Metadata */
    === t.type && 1
    /* Removed */
    !== n.type ? this.qt = this.qt.ot(e, {
      type: n.type,
      doc: t.doc
    }) : 2
    /* Modified */
    === t.type && 2
    /* Modified */
    === n.type ? this.qt = this.qt.ot(e, {
      type: 2
      /* Modified */
      ,
      doc: t.doc
    }) : 2
    /* Modified */
    === t.type && 0
    /* Added */
    === n.type ? this.qt = this.qt.ot(e, {
      type: 0
      /* Added */
      ,
      doc: t.doc
    }) : 1
    /* Removed */
    === t.type && 0
    /* Added */
    === n.type ? this.qt = this.qt.remove(e) : 1
    /* Removed */
    === t.type && 2
    /* Modified */
    === n.type ? this.qt = this.qt.ot(e, {
      type: 1
      /* Removed */
      ,
      doc: n.doc
    }) : 0
    /* Added */
    === t.type && 1
    /* Removed */
    === n.type ? this.qt = this.qt.ot(e, {
      type: 2
      /* Modified */
      ,
      doc: t.doc
    }) : // This includes these cases, which don't make sense:
    // Added->Added
    // Removed->Removed
    // Modified->Added
    // Removed->Modified
    // Metadata->Added
    // Removed->Metadata
    y() : this.qt = this.qt.ot(e, t);
  }, t.prototype.Ut = function () {
    var t = [];
    return this.qt.ht(function (e, n) {
      t.push(n);
    }), t;
  }, t;
}(),
    Ft =
/** @class */
function () {
  function t(t, e, n, r, i, o, s, u) {
    this.query = t, this.docs = e, this.Qt = n, this.docChanges = r, this.Wt = i, this.fromCache = o, this.jt = s, this.Kt = u;
  }

  return t.Gt = function (e, n, r, i) {
    var o = [];
    return n.forEach(function (t) {
      o.push({
        type: 0
        /* Added */
        ,
        doc: t
      });
    }), new t(e, n, Ut.Bt(n), o, r, i,
    /* syncStateChanged= */
    !0,
    /* excludesMetadataChanges= */
    !1);
  }, Object.defineProperty(t.prototype, "hasPendingWrites", {
    get: function get() {
      return !this.Wt.m();
    },
    enumerable: !1,
    configurable: !0
  }), t.prototype.isEqual = function (t) {
    if (!(this.fromCache === t.fromCache && this.jt === t.jt && this.Wt.isEqual(t.Wt) && Qn(this.query, t.query) && this.docs.isEqual(t.docs) && this.Qt.isEqual(t.Qt))) return !1;
    var e = this.docChanges,
        n = t.docChanges;
    if (e.length !== n.length) return !1;

    for (var r = 0; r < e.length; r++) {
      if (e[r].type !== n[r].type || !e[r].doc.isEqual(n[r].doc)) return !1;
    }

    return !0;
  }, t;
}(),
    Mt =
/** @class */
function () {
  function t(
  /**
   * The snapshot version this event brings us up to, or MIN if not set.
   */
  t,
  /**
   * A map from target to changes to the target. See TargetChange.
   */
  e,
  /**
   * A set of targets that is known to be inconsistent. Listens for these
   * targets should be re-established without resume tokens.
   */
  n,
  /**
   * A set of which documents have changed or been deleted, along with the
   * doc's new values (if not deleted).
   */
  r,
  /**
   * A set of which document updates are due only to limbo resolution targets.
   */
  i) {
    this.nt = t, this.zt = e, this.Ht = n, this.Yt = r, this.Jt = i;
  }
  /**
   * HACK: Views require RemoteEvents in order to determine whether the view is
   * CURRENT, but secondary tabs don't receive remote events. So this method is
   * used to create a synthesized RemoteEvent that can be used to apply a
   * CURRENT status change to a View, for queries executed in a different tab.
   */
  // PORTING NOTE: Multi-tab only


  return t.Xt = function (e, n) {
    var r = new Map();
    return r.set(e, qt.Zt(e, n)), new t(st.min(), r, Vt(), St(), Ot());
  }, t;
}(),
    qt =
/** @class */
function () {
  function t(
  /**
   * An opaque, server-assigned token that allows watching a query to be resumed
   * after disconnecting without retransmitting all the data that matches the
   * query. The resume token essentially identifies a point in time from which
   * the server should resume sending results.
   */
  t,
  /**
   * The "current" (synced) status of this target. Note that "current"
   * has special meaning in the RPC protocol that implies that a target is
   * both up-to-date and consistent with the rest of the watch stream.
   */
  e,
  /**
   * The set of documents that were newly assigned to this target as part of
   * this remote event.
   */
  n,
  /**
   * The set of documents that were already assigned to this target but received
   * an update during this remote event.
   */
  r,
  /**
   * The set of documents that were removed from this target as part of this
   * remote event.
   */
  i) {
    this.resumeToken = t, this.te = e, this.ee = n, this.ne = r, this.se = i;
  }

  return t.Zt = function (e, n) {
    return new t(X.B, n, Ot(), Ot(), Ot());
  }, t;
}(),
    jt = function jt(
/** The new document applies to all of these targets. */
t,
/** The new document is removed from all of these targets. */
e,
/** The key of the document for this change. */
n,
/**
     * The new document or NoDocument if it was deleted. Is null if the
     * document went out of view without the server sending a new document.
     */
r) {
  this.ie = t, this.removedTargetIds = e, this.key = n, this.re = r;
},
    Gt = function Gt(t, e) {
  this.targetId = t, this.oe = e;
},
    zt = function zt(
/** What kind of change occurred to the watch target. */
t,
/** The target IDs that were added/removed/set. */
e,
/**
     * An opaque, server-assigned token that allows watching a target to be
     * resumed after disconnecting without retransmitting all the data that
     * matches the target. The resume token essentially identifies a point in
     * time from which the server should resume sending results.
     */
n
/** An RPC error indicating why the watch failed. */
, r) {
  void 0 === n && (n = X.B), void 0 === r && (r = null), this.state = t, this.targetIds = e, this.resumeToken = n, this.cause = r;
},
    Bt =
/** @class */
function () {
  function t() {
    /**
     * The number of pending responses (adds or removes) that we are waiting on.
     * We only consider targets active that have no pending responses.
     */
    this.ae = 0,
    /**
         * Keeps track of the document changes since the last raised snapshot.
         *
         * These changes are continuously updated as we receive document updates and
         * always reflect the current set of changes against the last issued snapshot.
         */
    this.ce = Qt(),
    /** See public getters for explanations of these fields. */
    this.ue = X.B, this.he = !1,
    /**
         * Whether this target state should be included in the next snapshot. We
         * initialize to true so that newly-added targets are included in the next
         * RemoteEvent.
         */
    this.le = !0;
  }

  return Object.defineProperty(t.prototype, "te", {
    /**
     * Whether this target has been marked 'current'.
     *
     * 'Current' has special meaning in the RPC protocol: It implies that the
     * Watch backend has sent us all changes up to the point at which the target
     * was added and that the target is consistent with the rest of the watch
     * stream.
     */
    get: function get() {
      return this.he;
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(t.prototype, "resumeToken", {
    /** The last resume token sent to us for this target. */
    get: function get() {
      return this.ue;
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(t.prototype, "_e", {
    /** Whether this target has pending target adds or target removes. */
    get: function get() {
      return 0 !== this.ae;
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(t.prototype, "fe", {
    /** Whether we have modified any state that should trigger a snapshot. */
    get: function get() {
      return this.le;
    },
    enumerable: !1,
    configurable: !0
  }),
  /**
   * Applies the resume token to the TargetChange, but only when it has a new
   * value. Empty resumeTokens are discarded.
   */
  t.prototype.de = function (t) {
    t.O() > 0 && (this.le = !0, this.ue = t);
  },
  /**
   * Creates a target change from the current set of changes.
   *
   * To reset the document changes after raising this snapshot, call
   * `clearPendingChanges()`.
   */
  t.prototype.we = function () {
    var t = Ot(),
        e = Ot(),
        n = Ot();
    return this.ce.forEach(function (r, i) {
      switch (i) {
        case 0
        /* Added */
        :
          t = t.add(r);
          break;

        case 2
        /* Modified */
        :
          e = e.add(r);
          break;

        case 1
        /* Removed */
        :
          n = n.add(r);
          break;

        default:
          y();
      }
    }), new qt(this.ue, this.he, t, e, n);
  },
  /**
   * Resets the document changes and sets `hasPendingChanges` to false.
   */
  t.prototype.me = function () {
    this.le = !1, this.ce = Qt();
  }, t.prototype.Te = function (t, e) {
    this.le = !0, this.ce = this.ce.ot(t, e);
  }, t.prototype.Ee = function (t) {
    this.le = !0, this.ce = this.ce.remove(t);
  }, t.prototype.Ie = function () {
    this.ae += 1;
  }, t.prototype.Ae = function () {
    this.ae -= 1;
  }, t.prototype.Re = function () {
    this.le = !0, this.he = !0;
  }, t;
}(),
    Wt =
/** @class */
function () {
  function t(t) {
    this.ge = t,
    /** The internal state of all tracked targets. */
    this.Pe = new Map(),
    /** Keeps track of the documents to update since the last raised snapshot. */
    this.ye = St(),
    /** A mapping of document keys to their set of target IDs. */
    this.Ve = Kt(),
    /**
         * A list of targets with existence filter mismatches. These targets are
         * known to be inconsistent and their listens needs to be re-established by
         * RemoteStore.
         */
    this.pe = new Tt(H);
  }

  return t.prototype.be = function (t) {
    for (var e = 0, n = t.ie; e < n.length; e++) {
      var r = n[e];
      t.re instanceof kn ? this.ve(r, t.re) : t.re instanceof Rn && this.Se(r, t.key, t.re);
    }

    for (var i = 0, o = t.removedTargetIds; i < o.length; i++) {
      var s = o[i];
      this.Se(s, t.key, t.re);
    }
  },
  /** Processes and adds the WatchTargetChange to the current set of changes. */
  t.prototype.De = function (t) {
    var e = this;
    this.Ce(t, function (n) {
      var r = e.Ne(n);

      switch (t.state) {
        case 0
        /* NoChange */
        :
          e.Fe(n) && r.de(t.resumeToken);
          break;

        case 1
        /* Added */
        :
          // We need to decrement the number of pending acks needed from watch
          // for this targetId.
          r.Ae(), r._e || // We have a freshly added target, so we need to reset any state
          // that we had previously. This can happen e.g. when remove and add
          // back a target for existence filter mismatches.
          r.me(), r.de(t.resumeToken);
          break;

        case 2
        /* Removed */
        :
          // We need to keep track of removed targets to we can post-filter and
          // remove any target changes.
          // We need to decrement the number of pending acks needed from watch
          // for this targetId.
          r.Ae(), r._e || e.removeTarget(n);
          break;

        case 3
        /* Current */
        :
          e.Fe(n) && (r.Re(), r.de(t.resumeToken));
          break;

        case 4
        /* Reset */
        :
          e.Fe(n) && ( // Reset the target and synthesizes removes for all existing
          // documents. The backend will re-add any documents that still
          // match the target before it sends the next global snapshot.
          e.xe(n), r.de(t.resumeToken));
          break;

        default:
          y();
      }
    });
  },
  /**
   * Iterates over all targetIds that the watch change applies to: either the
   * targetIds explicitly listed in the change or the targetIds of all currently
   * active targets.
   */
  t.prototype.Ce = function (t, e) {
    var n = this;
    t.targetIds.length > 0 ? t.targetIds.forEach(e) : this.Pe.forEach(function (t, r) {
      n.Fe(r) && e(r);
    });
  },
  /**
   * Handles existence filters and synthesizes deletes for filter mismatches.
   * Targets that are invalidated by filter mismatches are added to
   * `pendingTargetResets`.
   */
  t.prototype.$e = function (t) {
    var e = t.targetId,
        n = t.oe.count,
        r = this.ke(e);

    if (r) {
      var i = r.target;
      if (dt(i)) {
        if (0 === n) {
          // The existence filter told us the document does not exist. We deduce
          // that this document does not exist and apply a deleted document to
          // our updates. Without applying this deleted document there might be
          // another query that will raise this document as part of a snapshot
          // until it is resolved, essentially exposing inconsistency between
          // queries.
          var o = new A(i.path);
          this.Se(e, o, new Rn(o, st.min()));
        } else g(1 === n);
      } else this.Me(e) !== n && ( // Existence filter mismatch: We reset the mapping and raise a new
      // snapshot with `isFromCache:true`.
      this.xe(e), this.pe = this.pe.add(e));
    }
  },
  /**
   * Converts the currently accumulated state into a remote event at the
   * provided snapshot version. Resets the accumulated changes before returning.
   */
  t.prototype.Oe = function (t) {
    var e = this,
        n = new Map();
    this.Pe.forEach(function (r, i) {
      var o = e.ke(i);

      if (o) {
        if (r.te && dt(o.target)) {
          // Document queries for document that don't exist can produce an empty
          // result set. To update our local cache, we synthesize a document
          // delete if we have not previously received the document. This
          // resolves the limbo state of the document, removing it from
          // limboDocumentRefs.
          // TODO(dimond): Ideally we would have an explicit lookup target
          // instead resulting in an explicit delete message and we could
          // remove this special logic.
          var s = new A(o.target.path);
          null !== e.ye.get(s) || e.Le(i, s) || e.Se(i, s, new Rn(s, t));
        }

        r.fe && (n.set(i, r.we()), r.me());
      }
    });
    var r = Ot(); // We extract the set of limbo-only document updates as the GC logic
    // special-cases documents that do not appear in the target cache.
    // TODO(gsoltis): Expand on this comment once GC is available in the JS
    // client.

    this.Ve.forEach(function (t, n) {
      var i = !0;
      n.xt(function (t) {
        var n = e.ke(t);
        return !n || 2
        /* LimboResolution */
        === n.et || (i = !1, !1);
      }), i && (r = r.add(t));
    });
    var i = new Mt(t, n, this.pe, this.ye, r);
    return this.ye = St(), this.Ve = Kt(), this.pe = new Tt(H), i;
  },
  /**
   * Adds the provided document to the internal list of document updates and
   * its document key to the given target's mapping.
   */
  // Visible for testing.
  t.prototype.ve = function (t, e) {
    if (this.Fe(t)) {
      var n = this.Le(t, e.key) ? 2
      /* Modified */
      : 0
      /* Added */
      ;
      this.Ne(t).Te(e.key, n), this.ye = this.ye.ot(e.key, e), this.Ve = this.Ve.ot(e.key, this.Be(e.key).add(t));
    }
  },
  /**
   * Removes the provided document from the target mapping. If the
   * document no longer matches the target, but the document's state is still
   * known (e.g. we know that the document was deleted or we received the change
   * that caused the filter mismatch), the new document can be provided
   * to update the remote document cache.
   */
  // Visible for testing.
  t.prototype.Se = function (t, e, n) {
    if (this.Fe(t)) {
      var r = this.Ne(t);
      this.Le(t, e) ? r.Te(e, 1
      /* Removed */
      ) : // The document may have entered and left the target before we raised a
      // snapshot, so we can just ignore the change.
      r.Ee(e), this.Ve = this.Ve.ot(e, this.Be(e).delete(t)), n && (this.ye = this.ye.ot(e, n));
    }
  }, t.prototype.removeTarget = function (t) {
    this.Pe.delete(t);
  },
  /**
   * Returns the current count of documents in the target. This includes both
   * the number of documents that the LocalStore considers to be part of the
   * target as well as any accumulated changes.
   */
  t.prototype.Me = function (t) {
    var e = this.Ne(t).we();
    return this.ge.qe(t).size + e.ee.size - e.se.size;
  },
  /**
   * Increment the number of acks needed from watch before we can consider the
   * server to be 'in-sync' with the client's active targets.
   */
  t.prototype.Ie = function (t) {
    this.Ne(t).Ie();
  }, t.prototype.Ne = function (t) {
    var e = this.Pe.get(t);
    return e || (e = new Bt(), this.Pe.set(t, e)), e;
  }, t.prototype.Be = function (t) {
    var e = this.Ve.get(t);
    return e || (e = new Tt(H), this.Ve = this.Ve.ot(t, e)), e;
  },
  /**
   * Verifies that the user is still interested in this target (by calling
   * `getTargetDataForTarget()`) and that we are not waiting for pending ADDs
   * from watch.
   */
  t.prototype.Fe = function (t) {
    var e = null !== this.ke(t);
    return e || l("WatchChangeAggregator", "Detected inactive target", t), e;
  },
  /**
   * Returns the TargetData for an active target (i.e. a target that the user
   * is still interested in that has no outstanding target change requests).
   */
  t.prototype.ke = function (t) {
    var e = this.Pe.get(t);
    return e && e._e ? null : this.ge.Ue(t);
  },
  /**
   * Resets the state of a Watch target to its initial state (e.g. sets
   * 'current' to false, clears the resume token and removes its target mapping
   * from all documents).
   */
  t.prototype.xe = function (t) {
    var e = this;
    this.Pe.set(t, new Bt()), this.ge.qe(t).forEach(function (n) {
      e.Se(t, n,
      /*updatedDocument=*/
      null);
    });
  },
  /**
   * Returns whether the LocalStore considers the document to be part of the
   * specified target.
   */
  t.prototype.Le = function (t, e) {
    return this.ge.qe(t).has(e);
  }, t;
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * DocumentChangeSet keeps track of a set of changes to docs in a query, merging
 * duplicate events for the same doc.
 */


function Kt() {
  return new bt(A.i);
}

function Qt() {
  return new bt(A.i);
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Represents a locally-applied ServerTimestamp.
 *
 * Server Timestamps are backed by MapValues that contain an internal field
 * `__type__` with a value of `server_timestamp`. The previous value and local
 * write time are stored in its `__previous_value__` and `__local_write_time__`
 * fields respectively.
 *
 * Notes:
 * - ServerTimestampValue instances are created as the result of applying a
 *   TransformMutation (see TransformMutation.applyTo()). They can only exist in
 *   the local view of a document. Therefore they do not need to be parsed or
 *   serialized.
 * - When evaluated locally (e.g. for snapshot.data()), they by default
 *   evaluate to `null`. This behavior can be configured by passing custom
 *   FieldValueOptions to value().
 * - With respect to other ServerTimestampValues, they sort by their
 *   localWriteTime.
 */


function Ht(t) {
  var e, n;
  return "server_timestamp" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);
}
/**
 * Creates a new ServerTimestamp proto value (using the internal format).
 */

/**
 * Returns the value of the field before this ServerTimestamp was set.
 *
 * Preserving the previous values allows the user to display the last resoled
 * value until the backend responds with the timestamp.
 */


function Yt(t) {
  var e = t.mapValue.fields.__previous_value__;
  return Ht(e) ? Yt(e) : e;
}
/**
 * Returns the local time at which this timestamp was first set.
 */


function $t(t) {
  var e = oe(t.mapValue.fields.__local_write_time__.timestampValue);
  return new ot(e.seconds, e.nanos);
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// A RegExp matching ISO 8601 UTC timestamps with optional fraction.


var Xt = new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);
/** Extracts the backend's type order for the provided value. */

function Jt(t) {
  return "nullValue" in t ? 0
  /* NullValue */
  : "booleanValue" in t ? 1
  /* BooleanValue */
  : "integerValue" in t || "doubleValue" in t ? 2
  /* NumberValue */
  : "timestampValue" in t ? 3
  /* TimestampValue */
  : "stringValue" in t ? 5
  /* StringValue */
  : "bytesValue" in t ? 6
  /* BlobValue */
  : "referenceValue" in t ? 7
  /* RefValue */
  : "geoPointValue" in t ? 8
  /* GeoPointValue */
  : "arrayValue" in t ? 9
  /* ArrayValue */
  : "mapValue" in t ? Ht(t) ? 4
  /* ServerTimestampValue */
  : 10
  /* ObjectValue */
  : y();
}
/** Tests `left` and `right` for equality based on the backend semantics. */


function Zt(t, e) {
  var n = Jt(t);
  if (n !== Jt(e)) return !1;

  switch (n) {
    case 0
    /* NullValue */
    :
      return !0;

    case 1
    /* BooleanValue */
    :
      return t.booleanValue === e.booleanValue;

    case 4
    /* ServerTimestampValue */
    :
      return $t(t).isEqual($t(e));

    case 3
    /* TimestampValue */
    :
      return function (t, e) {
        if ("string" == typeof t.timestampValue && "string" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) // Use string equality for ISO 8601 timestamps
          return t.timestampValue === e.timestampValue;
        var n = oe(t.timestampValue),
            r = oe(e.timestampValue);
        return n.seconds === r.seconds && n.nanos === r.nanos;
      }(t, e);

    case 5
    /* StringValue */
    :
      return t.stringValue === e.stringValue;

    case 6
    /* BlobValue */
    :
      return function (t, e) {
        return ue(t.bytesValue).isEqual(ue(e.bytesValue));
      }(t, e);

    case 7
    /* RefValue */
    :
      return t.referenceValue === e.referenceValue;

    case 8
    /* GeoPointValue */
    :
      return function (t, e) {
        return se(t.geoPointValue.latitude) === se(e.geoPointValue.latitude) && se(t.geoPointValue.longitude) === se(e.geoPointValue.longitude);
      }(t, e);

    case 2
    /* NumberValue */
    :
      return function (t, e) {
        if ("integerValue" in t && "integerValue" in e) return se(t.integerValue) === se(e.integerValue);

        if ("doubleValue" in t && "doubleValue" in e) {
          var n = se(t.doubleValue),
              r = se(e.doubleValue);
          return n === r ? at(n) === at(r) : isNaN(n) && isNaN(r);
        }

        return !1;
      }(t, e);

    case 9
    /* ArrayValue */
    :
      return Y(t.arrayValue.values || [], e.arrayValue.values || [], Zt);

    case 10
    /* ObjectValue */
    :
      return function (t, e) {
        var n = t.mapValue.fields || {},
            r = e.mapValue.fields || {};
        if (w(n) !== w(r)) return !1;

        for (var i in n) {
          if (n.hasOwnProperty(i) && (void 0 === r[i] || !Zt(n[i], r[i]))) return !1;
        }

        return !0;
      }(t, e);

    default:
      return y();
  }
}

function te(t, e) {
  return void 0 !== (t.values || []).find(function (t) {
    return Zt(t, e);
  });
}

function ee(t, e) {
  var n = Jt(t),
      r = Jt(e);
  if (n !== r) return H(n, r);

  switch (n) {
    case 0
    /* NullValue */
    :
      return 0;

    case 1
    /* BooleanValue */
    :
      return H(t.booleanValue, e.booleanValue);

    case 2
    /* NumberValue */
    :
      return function (t, e) {
        var n = se(t.integerValue || t.doubleValue),
            r = se(e.integerValue || e.doubleValue);
        return n < r ? -1 : n > r ? 1 : n === r ? 0 : // one or both are NaN.
        isNaN(n) ? isNaN(r) ? 0 : -1 : 1;
      }(t, e);

    case 3
    /* TimestampValue */
    :
      return ne(t.timestampValue, e.timestampValue);

    case 4
    /* ServerTimestampValue */
    :
      return ne($t(t), $t(e));

    case 5
    /* StringValue */
    :
      return H(t.stringValue, e.stringValue);

    case 6
    /* BlobValue */
    :
      return function (t, e) {
        var n = ue(t),
            r = ue(e);
        return n.L(r);
      }(t.bytesValue, e.bytesValue);

    case 7
    /* RefValue */
    :
      return function (t, e) {
        for (var n = t.split("/"), r = e.split("/"), i = 0; i < n.length && i < r.length; i++) {
          var o = H(n[i], r[i]);
          if (0 !== o) return o;
        }

        return H(n.length, r.length);
      }(t.referenceValue, e.referenceValue);

    case 8
    /* GeoPointValue */
    :
      return function (t, e) {
        var n = H(se(t.latitude), se(e.latitude));
        return 0 !== n ? n : H(se(t.longitude), se(e.longitude));
      }(t.geoPointValue, e.geoPointValue);

    case 9
    /* ArrayValue */
    :
      return function (t, e) {
        for (var n = t.values || [], r = e.values || [], i = 0; i < n.length && i < r.length; ++i) {
          var o = ee(n[i], r[i]);
          if (o) return o;
        }

        return H(n.length, r.length);
      }(t.arrayValue, e.arrayValue);

    case 10
    /* ObjectValue */
    :
      return function (t, e) {
        var n = t.fields || {},
            r = Object.keys(n),
            i = e.fields || {},
            o = Object.keys(i); // Even though MapValues are likely sorted correctly based on their insertion
        // order (e.g. when received from the backend), local modifications can bring
        // elements out of order. We need to re-sort the elements to ensure that
        // canonical IDs are independent of insertion order.

        r.sort(), o.sort();

        for (var s = 0; s < r.length && s < o.length; ++s) {
          var u = H(r[s], o[s]);
          if (0 !== u) return u;
          var a = ee(n[r[s]], i[o[s]]);
          if (0 !== a) return a;
        }

        return H(r.length, o.length);
      }(t.mapValue, e.mapValue);

    default:
      throw y();
  }
}

function ne(t, e) {
  if ("string" == typeof t && "string" == typeof e && t.length === e.length) return H(t, e);
  var n = oe(t),
      r = oe(e),
      i = H(n.seconds, r.seconds);
  return 0 !== i ? i : H(n.nanos, r.nanos);
}

function re(t) {
  return ie(t);
}

function ie(t) {
  return "nullValue" in t ? "null" : "booleanValue" in t ? "" + t.booleanValue : "integerValue" in t ? "" + t.integerValue : "doubleValue" in t ? "" + t.doubleValue : "timestampValue" in t ? function (t) {
    var e = oe(t);
    return "time(" + e.seconds + "," + e.nanos + ")";
  }(t.timestampValue) : "stringValue" in t ? t.stringValue : "bytesValue" in t ? ue(t.bytesValue).toBase64() : "referenceValue" in t ? (n = t.referenceValue, A.C(n).toString()) : "geoPointValue" in t ? "geo(" + (e = t.geoPointValue).latitude + "," + e.longitude + ")" : "arrayValue" in t ? function (t) {
    for (var e = "[", n = !0, r = 0, i = t.values || []; r < i.length; r++) {
      n ? n = !1 : e += ",", e += ie(i[r]);
    }

    return e + "]";
  }(t.arrayValue) : "mapValue" in t ? function (t) {
    for ( // Iteration order in JavaScript is not guaranteed. To ensure that we generate
    // matching canonical IDs for identical maps, we need to sort the keys.
    var e = "{", n = !0, r = 0, i = Object.keys(t.fields || {}).sort(); r < i.length; r++) {
      var o = i[r];
      n ? n = !1 : e += ",", e += o + ":" + ie(t.fields[o]);
    }

    return e + "}";
  }(t.mapValue) : y();
  var e, n;
}

function oe(t) {
  // The json interface (for the browser) will return an iso timestamp string,
  // while the proto js library (for node) will return a
  // google.protobuf.Timestamp instance.
  if (g(!!t), "string" == typeof t) {
    // The date string can have higher precision (nanos) than the Date class
    // (millis), so we do some custom parsing here.
    // Parse the nanos right out of the string.
    var e = 0,
        n = Xt.exec(t);

    if (g(!!n), n[1]) {
      // Pad the fraction out to 9 digits (nanos).
      var r = n[1];
      r = (r + "000000000").substr(0, 9), e = Number(r);
    } // Parse the date to get the seconds.


    var i = new Date(t);
    return {
      seconds: Math.floor(i.getTime() / 1e3),
      nanos: e
    };
  }

  return {
    seconds: se(t.seconds),
    nanos: se(t.nanos)
  };
}
/**
 * Converts the possible Proto types for numbers into a JavaScript number.
 * Returns 0 if the value is not numeric.
 */


function se(t) {
  // TODO(bjornick): Handle int64 greater than 53 bits.
  return "number" == typeof t ? t : "string" == typeof t ? Number(t) : 0;
}
/** Converts the possible Proto types for Blobs into a ByteString. */


function ue(t) {
  return "string" == typeof t ? X.fromBase64String(t) : X.fromUint8Array(t);
}
/** Returns a reference value for the provided database and key. */


function ae(t, e) {
  return {
    referenceValue: "projects/" + t.projectId + "/databases/" + t.database + "/documents/" + e.path.R()
  };
}
/** Returns true if `value` is an IntegerValue . */


function ce(t) {
  return !!t && "integerValue" in t;
}
/** Returns true if `value` is a DoubleValue. */

/** Returns true if `value` is an ArrayValue. */


function he(t) {
  return !!t && "arrayValue" in t;
}
/** Returns true if `value` is a NullValue. */


function fe(t) {
  return !!t && "nullValue" in t;
}
/** Returns true if `value` is NaN. */


function le(t) {
  return !!t && "doubleValue" in t && isNaN(Number(t.doubleValue));
}
/** Returns true if `value` is a MapValue. */


function pe(t) {
  return !!t && "mapValue" in t;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var de = {
  asc: "ASCENDING",
  desc: "DESCENDING"
},
    ve = {
  "<": "LESS_THAN",
  "<=": "LESS_THAN_OR_EQUAL",
  ">": "GREATER_THAN",
  ">=": "GREATER_THAN_OR_EQUAL",
  "==": "EQUAL",
  "!=": "NOT_EQUAL",
  "array-contains": "ARRAY_CONTAINS",
  in: "IN",
  "not-in": "NOT_IN",
  "array-contains-any": "ARRAY_CONTAINS_ANY"
},
    ye = function ye(t, e) {
  this.U = t, this.Qe = e;
};
/**
 * This class generates JsonObject values for the Datastore API suitable for
 * sending to either GRPC stub methods or via the JSON/HTTP REST API.
 *
 * The serializer supports both Protobuf.js and Proto3 JSON formats. By
 * setting `useProto3Json` to true, the serializer will use the Proto3 JSON
 * format.
 *
 * For a description of the Proto3 JSON format check
 * https://developers.google.com/protocol-buffers/docs/proto3#json
 *
 * TODO(klimt): We can remove the databaseId argument if we keep the full
 * resource name in documents.
 */

/**
 * Returns an IntegerValue for `value`.
 */


function ge(t) {
  return {
    integerValue: "" + t
  };
}
/**
 * Returns an DoubleValue for `value` that is encoded based the serializer's
 * `useProto3Json` setting.
 */


function me(t, e) {
  if (t.Qe) {
    if (isNaN(e)) return {
      doubleValue: "NaN"
    };
    if (e === 1 / 0) return {
      doubleValue: "Infinity"
    };
    if (e === -1 / 0) return {
      doubleValue: "-Infinity"
    };
  }

  return {
    doubleValue: at(e) ? "-0" : e
  };
}
/**
 * Returns a value for a number that's appropriate to put into a proto.
 * The return value is an IntegerValue if it can safely represent the value,
 * otherwise a DoubleValue is returned.
 */


function we(t, e) {
  return ct(e) ? ge(e) : me(t, e);
}
/**
 * Returns a value for a Date that's appropriate to put into a proto.
 */


function _e(t, e) {
  return t.Qe ? new Date(1e3 * e.seconds).toISOString().replace(/\.\d*/, "").replace("Z", "") + "." + ("000000000" + e.nanoseconds).slice(-9) + "Z" : {
    seconds: "" + e.seconds,
    nanos: e.nanoseconds
  };
}
/**
 * Returns a value for bytes that's appropriate to put in a proto.
 *
 * Visible for testing.
 */


function be(t, e) {
  return t.Qe ? e.toBase64() : e.toUint8Array();
}
/**
 * Returns a ByteString based on the proto string value.
 */


function Ie(t, e) {
  return _e(t, e.Z());
}

function Ee(t) {
  return g(!!t), st.J(function (t) {
    var e = oe(t);
    return new ot(e.seconds, e.nanos);
  }(t));
}

function Te(t, e) {
  return function (t) {
    return new E(["projects", t.projectId, "databases", t.database]);
  }(t).child("documents").child(e).R();
}

function Ne(t) {
  var e = E.g(t);
  return g(He(e)), e;
}

function Ae(t, e) {
  return Te(t.U, e.path);
}

function Se(t, e) {
  var n = Ne(e);
  return g(n.get(1) === t.U.projectId), g(!n.get(3) && !t.U.database || n.get(3) === t.U.database), new A(ke(n));
}

function De(t, e) {
  return Te(t.U, e);
}

function xe(t) {
  var e = Ne(t); // In v1beta1 queries for collections at the root did not have a trailing
  // "/documents". In v1 all resource paths contain "/documents". Preserve the
  // ability to read the v1beta1 form for compatibility with queries persisted
  // in the local target cache.

  return 4 === e.length ? E.P() : ke(e);
}

function Le(t) {
  return new E(["projects", t.U.projectId, "databases", t.U.database]).R();
}

function ke(t) {
  return g(t.length > 4 && "documents" === t.get(4)), t.u(5);
}

function Re(t, e, n) {
  return {
    name: Ae(t, e),
    fields: n.proto.mapValue.fields
  };
}

function Oe(t, e) {
  var n;
  if (e instanceof wn) n = {
    update: Re(t, e.key, e.value)
  };else if (e instanceof Nn) n = {
    delete: Ae(t, e.key)
  };else if (e instanceof _n) n = {
    update: Re(t, e.key, e.data),
    updateMask: Qe(e.We)
  };else if (e instanceof In) n = {
    transform: {
      document: Ae(t, e.key),
      fieldTransforms: e.fieldTransforms.map(function (t) {
        return function (t, e) {
          var n = e.transform;
          if (n instanceof Ze) return {
            fieldPath: e.field.R(),
            setToServerValue: "REQUEST_TIME"
          };
          if (n instanceof tn) return {
            fieldPath: e.field.R(),
            appendMissingElements: {
              values: n.elements
            }
          };
          if (n instanceof nn) return {
            fieldPath: e.field.R(),
            removeAllFromArray: {
              values: n.elements
            }
          };
          if (n instanceof on) return {
            fieldPath: e.field.R(),
            increment: n.je
          };
          throw y();
        }(0, t);
      })
    }
  };else {
    if (!(e instanceof An)) return y();
    n = {
      verify: Ae(t, e.key)
    };
  }
  return e.Ge.Ke || (n.currentDocument = function (t, e) {
    return void 0 !== e.updateTime ? {
      updateTime: Ie(t, e.updateTime)
    } : void 0 !== e.exists ? {
      exists: e.exists
    } : y();
  }(t, e.Ge)), n;
}

function Pe(t, e) {
  var n = e.currentDocument ? function (t) {
    return void 0 !== t.updateTime ? fn.updateTime(Ee(t.updateTime)) : void 0 !== t.exists ? fn.exists(t.exists) : fn.ze();
  }(e.currentDocument) : fn.ze();

  if (e.update) {
    e.update.name;
    var r = Se(t, e.update.name),
        i = new Sn({
      mapValue: {
        fields: e.update.fields
      }
    });

    if (e.updateMask) {
      var o = function (t) {
        var e = t.fieldPaths || [];
        return new an(e.map(function (t) {
          return N.S(t);
        }));
      }(e.updateMask);

      return new _n(r, i, o, n);
    }

    return new wn(r, i, n);
  }

  if (e.delete) {
    var s = Se(t, e.delete);
    return new Nn(s, n);
  }

  if (e.transform) {
    var u = Se(t, e.transform.document),
        a = e.transform.fieldTransforms.map(function (e) {
      return function (t, e) {
        var n = null;
        if ("setToServerValue" in e) g("REQUEST_TIME" === e.setToServerValue), n = new Ze();else if ("appendMissingElements" in e) {
          var r = e.appendMissingElements.values || [];
          n = new tn(r);
        } else if ("removeAllFromArray" in e) {
          var i = e.removeAllFromArray.values || [];
          n = new nn(i);
        } else "increment" in e ? n = new on(t, e.increment) : y();
        var o = N.S(e.fieldPath);
        return new cn(o, n);
      }(t, e);
    });
    return g(!0 === n.exists), new In(u, a);
  }

  if (e.verify) {
    var c = Se(t, e.verify);
    return new An(c, n);
  }

  return y();
}

function Ve(t, e) {
  return {
    documents: [De(t, e.path)]
  };
}

function Ue(t, e) {
  // Dissect the path into parent, collectionId, and optional key filter.
  var n = {
    structuredQuery: {}
  },
      r = e.path;
  null !== e.collectionGroup ? (n.parent = De(t, r), n.structuredQuery.from = [{
    collectionId: e.collectionGroup,
    allDescendants: !0
  }]) : (n.parent = De(t, r.h()), n.structuredQuery.from = [{
    collectionId: r._()
  }]);

  var i = function (t) {
    if (0 !== t.length) {
      var e = t.map(function (t) {
        // visible for testing
        return function (t) {
          if ("=="
          /* EQUAL */
          === t.op) {
            if (le(t.value)) return {
              unaryFilter: {
                field: ze(t.field),
                op: "IS_NAN"
              }
            };
            if (fe(t.value)) return {
              unaryFilter: {
                field: ze(t.field),
                op: "IS_NULL"
              }
            };
          } else if ("!="
          /* NOT_EQUAL */
          === t.op) {
            if (le(t.value)) return {
              unaryFilter: {
                field: ze(t.field),
                op: "IS_NOT_NAN"
              }
            };
            if (fe(t.value)) return {
              unaryFilter: {
                field: ze(t.field),
                op: "IS_NOT_NULL"
              }
            };
          }

          return {
            fieldFilter: {
              field: ze(t.field),
              op: Ge(t.op),
              value: t.value
            }
          };
        }(t);
      });
      return 1 === e.length ? e[0] : {
        compositeFilter: {
          op: "AND",
          filters: e
        }
      };
    }
  }(e.filters);

  i && (n.structuredQuery.where = i);

  var o = function (t) {
    if (0 !== t.length) return t.map(function (t) {
      // visible for testing
      return function (t) {
        return {
          field: ze(t.field),
          direction: je(t.dir)
        };
      }(t);
    });
  }(e.orderBy);

  o && (n.structuredQuery.orderBy = o);

  var s = function (t, e) {
    return t.Qe || ut(e) ? e : {
      value: e
    };
  }(t, e.limit);

  return null !== s && (n.structuredQuery.limit = s), e.startAt && (n.structuredQuery.startAt = Me(e.startAt)), e.endAt && (n.structuredQuery.endAt = Me(e.endAt)), n;
}

function Ce(t) {
  var e = xe(t.parent),
      n = t.structuredQuery,
      r = n.from ? n.from.length : 0,
      i = null;

  if (r > 0) {
    g(1 === r);
    var o = n.from[0];
    o.allDescendants ? i = o.collectionId : e = e.child(o.collectionId);
  }

  var s = [];
  n.where && (s = Fe(n.where));
  var u = [];
  n.orderBy && (u = n.orderBy.map(function (t) {
    return function (t) {
      return new fr(Be(t.field), // visible for testing
      function (t) {
        switch (t) {
          case "ASCENDING":
            return "asc"
            /* ASCENDING */
            ;

          case "DESCENDING":
            return "desc"
            /* DESCENDING */
            ;

          default:
            return;
        }
      }(t.direction));
    }(t);
  }));
  var a = null;
  n.limit && (a = function (t) {
    var e;
    return ut(e = "object" == typeof t ? t.value : t) ? null : e;
  }(n.limit));
  var c = null;
  n.startAt && (c = qe(n.startAt));
  var h = null;
  return n.endAt && (h = qe(n.endAt)), zn(Vn(e, i, u, s, a, "F"
  /* First */
  , c, h));
}

function Fe(t) {
  return t ? void 0 !== t.unaryFilter ? [Ke(t)] : void 0 !== t.fieldFilter ? [We(t)] : void 0 !== t.compositeFilter ? t.compositeFilter.filters.map(function (t) {
    return Fe(t);
  }).reduce(function (t, e) {
    return t.concat(e);
  }) : y() : [];
}

function Me(t) {
  return {
    before: t.before,
    values: t.position
  };
}

function qe(t) {
  var e = !!t.before,
      n = t.values || [];
  return new ur(n, e);
} // visible for testing


function je(t) {
  return de[t];
}

function Ge(t) {
  return ve[t];
}

function ze(t) {
  return {
    fieldPath: t.R()
  };
}

function Be(t) {
  return N.S(t.fieldPath);
}

function We(t) {
  return Jn.create(Be(t.fieldFilter.field), function (t) {
    switch (t) {
      case "EQUAL":
        return "=="
        /* EQUAL */
        ;

      case "NOT_EQUAL":
        return "!="
        /* NOT_EQUAL */
        ;

      case "GREATER_THAN":
        return ">"
        /* GREATER_THAN */
        ;

      case "GREATER_THAN_OR_EQUAL":
        return ">="
        /* GREATER_THAN_OR_EQUAL */
        ;

      case "LESS_THAN":
        return "<"
        /* LESS_THAN */
        ;

      case "LESS_THAN_OR_EQUAL":
        return "<="
        /* LESS_THAN_OR_EQUAL */
        ;

      case "ARRAY_CONTAINS":
        return "array-contains"
        /* ARRAY_CONTAINS */
        ;

      case "IN":
        return "in"
        /* IN */
        ;

      case "NOT_IN":
        return "not-in"
        /* NOT_IN */
        ;

      case "ARRAY_CONTAINS_ANY":
        return "array-contains-any"
        /* ARRAY_CONTAINS_ANY */
        ;

      case "OPERATOR_UNSPECIFIED":
      default:
        return y();
    }
  }(t.fieldFilter.op), t.fieldFilter.value);
}

function Ke(t) {
  switch (t.unaryFilter.op) {
    case "IS_NAN":
      var e = Be(t.unaryFilter.field);
      return Jn.create(e, "=="
      /* EQUAL */
      , {
        doubleValue: NaN
      });

    case "IS_NULL":
      var n = Be(t.unaryFilter.field);
      return Jn.create(n, "=="
      /* EQUAL */
      , {
        nullValue: "NULL_VALUE"
      });

    case "IS_NOT_NAN":
      var r = Be(t.unaryFilter.field);
      return Jn.create(r, "!="
      /* NOT_EQUAL */
      , {
        doubleValue: NaN
      });

    case "IS_NOT_NULL":
      var i = Be(t.unaryFilter.field);
      return Jn.create(i, "!="
      /* NOT_EQUAL */
      , {
        nullValue: "NULL_VALUE"
      });

    case "OPERATOR_UNSPECIFIED":
    default:
      return y();
  }
}

function Qe(t) {
  var e = [];
  return t.fields.forEach(function (t) {
    return e.push(t.R());
  }), {
    fieldPaths: e
  };
}

function He(t) {
  // Resource names have at least 4 components (project ID, database ID)
  return t.length >= 4 && "projects" === t.get(0) && "databases" === t.get(2);
}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** Represents a transform within a TransformMutation. */


var Ye = function Ye() {
  // Make sure that the structural type of `TransformOperation` is unique.
  // See https://github.com/microsoft/TypeScript/issues/5451
  this.He = void 0;
};
/**
 * Computes the local transform result against the provided `previousValue`,
 * optionally using the provided localWriteTime.
 */


function $e(t, e, n) {
  return t instanceof Ze ? function (t, e) {
    var n = {
      fields: {
        __type__: {
          stringValue: "server_timestamp"
        },
        __local_write_time__: {
          timestampValue: {
            seconds: t.seconds,
            nanos: t.nanoseconds
          }
        }
      }
    };
    return e && (n.fields.__previous_value__ = e), {
      mapValue: n
    };
  }(n, e) : t instanceof tn ? en(t, e) : t instanceof nn ? rn(t, e) : function (t, e) {
    // PORTING NOTE: Since JavaScript's integer arithmetic is limited to 53 bit
    // precision and resolves overflows by reducing precision, we do not
    // manually cap overflows at 2^63.
    var n = Je(t, e),
        r = sn(n) + sn(t.je);
    return ce(n) && ce(t.je) ? ge(r) : me(t.serializer, r);
  }(t, e);
}
/**
 * Computes a final transform result after the transform has been acknowledged
 * by the server, potentially using the server-provided transformResult.
 */


function Xe(t, e, n) {
  // The server just sends null as the transform result for array operations,
  // so we have to calculate a result the same as we do for local
  // applications.
  return t instanceof tn ? en(t, e) : t instanceof nn ? rn(t, e) : n;
}
/**
 * If this transform operation is not idempotent, returns the base value to
 * persist for this transform. If a base value is returned, the transform
 * operation is always applied to this base value, even if document has
 * already been updated.
 *
 * Base values provide consistent behavior for non-idempotent transforms and
 * allow us to return the same latency-compensated value even if the backend
 * has already applied the transform operation. The base value is null for
 * idempotent transforms, as they can be re-played even if the backend has
 * already applied them.
 *
 * @return a base value to store along with the mutation, or null for
 * idempotent transforms.
 */


function Je(t, e) {
  return t instanceof on ? ce(n = e) || function (t) {
    return !!t && "doubleValue" in t;
  }(n) ? e : {
    integerValue: 0
  } : null;
  var n;
}
/** Transforms a value into a server-generated timestamp. */


var Ze =
/** @class */
function (e) {
  function n() {
    return null !== e && e.apply(this, arguments) || this;
  }

  return t.__extends(n, e), n;
}(Ye),
    tn =
/** @class */
function (e) {
  function n(t) {
    var n = this;
    return (n = e.call(this) || this).elements = t, n;
  }

  return t.__extends(n, e), n;
}(Ye);
/** Transforms an array value via a union operation. */


function en(t, e) {
  for (var n = un(e), r = function r(t) {
    n.some(function (e) {
      return Zt(e, t);
    }) || n.push(t);
  }, i = 0, o = t.elements; i < o.length; i++) {
    r(o[i]);
  }

  return {
    arrayValue: {
      values: n
    }
  };
}
/** Transforms an array value via a remove operation. */


var nn =
/** @class */
function (e) {
  function n(t) {
    var n = this;
    return (n = e.call(this) || this).elements = t, n;
  }

  return t.__extends(n, e), n;
}(Ye);

function rn(t, e) {
  for (var n = un(e), r = function r(t) {
    n = n.filter(function (e) {
      return !Zt(e, t);
    });
  }, i = 0, o = t.elements; i < o.length; i++) {
    r(o[i]);
  }

  return {
    arrayValue: {
      values: n
    }
  };
}
/**
 * Implements the backend semantics for locally computed NUMERIC_ADD (increment)
 * transforms. Converts all field values to integers or doubles, but unlike the
 * backend does not cap integer values at 2^63. Instead, JavaScript number
 * arithmetic is used and precision loss can occur for values greater than 2^53.
 */


var on =
/** @class */
function (e) {
  function n(t, n) {
    var r = this;
    return (r = e.call(this) || this).serializer = t, r.je = n, r;
  }

  return t.__extends(n, e), n;
}(Ye);

function sn(t) {
  return se(t.integerValue || t.doubleValue);
}

function un(t) {
  return he(t) && t.arrayValue.values ? t.arrayValue.values.slice() : [];
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Provides a set of fields that can be used to partially patch a document.
 * FieldMask is used in conjunction with ObjectValue.
 * Examples:
 *   foo - Overwrites foo entirely with the provided value. If foo is not
 *         present in the companion ObjectValue, the field is deleted.
 *   foo.bar - Overwrites only the field bar of the object foo.
 *             If foo is not an object, foo is replaced with an object
 *             containing foo
 */


var an =
/** @class */
function () {
  function t(t) {
    this.fields = t, // TODO(dimond): validation of FieldMask
    // Sort the field mask to support `FieldMask.isEqual()` and assert below.
    t.sort(N.i);
  }

  return t.prototype.Ye = function (t) {
    for (var e = 0, n = this.fields; e < n.length; e++) {
      if (n[e].T(t)) return !0;
    }

    return !1;
  }, t.prototype.isEqual = function (t) {
    return Y(this.fields, t.fields, function (t, e) {
      return t.isEqual(e);
    });
  }, t;
}(),
    cn = function cn(t, e) {
  this.field = t, this.transform = e;
};
/** A field path and the TransformOperation to perform upon it. */

/** The result of successfully applying a mutation to the backend. */


var hn = function hn(
/**
     * The version at which the mutation was committed:
     *
     * - For most operations, this is the updateTime in the WriteResult.
     * - For deletes, the commitTime of the WriteResponse (because deletes are
     *   not stored and have no updateTime).
     *
     * Note that these versions can be different: No-op writes will not change
     * the updateTime even though the commitTime advances.
     */
t,
/**
     * The resulting fields returned from the backend after a
     * TransformMutation has been committed. Contains one FieldValue for each
     * FieldTransform that was in the mutation.
     *
     * Will be null if the mutation was not a TransformMutation.
     */
e) {
  this.version = t, this.transformResults = e;
},
    fn =
/** @class */
function () {
  function t(t, e) {
    this.updateTime = t, this.exists = e;
  }

  return t.ze = function () {
    return new t();
  },
  /** Creates a new Precondition with an exists flag. */
  t.exists = function (e) {
    return new t(void 0, e);
  },
  /** Creates a new Precondition based on a version a document exists at. */
  t.updateTime = function (e) {
    return new t(e);
  }, Object.defineProperty(t.prototype, "Ke", {
    /** Returns whether this Precondition is empty. */
    get: function get() {
      return void 0 === this.updateTime && void 0 === this.exists;
    },
    enumerable: !1,
    configurable: !0
  }), t.prototype.isEqual = function (t) {
    return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);
  }, t;
}();
/**
 * Encodes a precondition for a mutation. This follows the model that the
 * backend accepts with the special case of an explicit "empty" precondition
 * (meaning no precondition).
 */

/**
 * Returns true if the preconditions is valid for the given document
 * (or null if no document is available).
 */


function ln(t, e) {
  return void 0 !== t.updateTime ? e instanceof kn && e.version.isEqual(t.updateTime) : void 0 === t.exists || t.exists === e instanceof kn;
}
/**
 * A mutation describes a self-contained change to a document. Mutations can
 * create, replace, delete, and update subsets of documents.
 *
 * Mutations not only act on the value of the document but also its version.
 *
 * For local mutations (mutations that haven't been committed yet), we preserve
 * the existing version for Set, Patch, and Transform mutations. For Delete
 * mutations, we reset the version to 0.
 *
 * Here's the expected transition table.
 *
 * MUTATION           APPLIED TO            RESULTS IN
 *
 * SetMutation        Document(v3)          Document(v3)
 * SetMutation        NoDocument(v3)        Document(v0)
 * SetMutation        null                  Document(v0)
 * PatchMutation      Document(v3)          Document(v3)
 * PatchMutation      NoDocument(v3)        NoDocument(v3)
 * PatchMutation      null                  null
 * TransformMutation  Document(v3)          Document(v3)
 * TransformMutation  NoDocument(v3)        NoDocument(v3)
 * TransformMutation  null                  null
 * DeleteMutation     Document(v3)          NoDocument(v0)
 * DeleteMutation     NoDocument(v3)        NoDocument(v0)
 * DeleteMutation     null                  NoDocument(v0)
 *
 * For acknowledged mutations, we use the updateTime of the WriteResponse as
 * the resulting version for Set, Patch, and Transform mutations. As deletes
 * have no explicit update time, we use the commitTime of the WriteResponse for
 * Delete mutations.
 *
 * If a mutation is acknowledged by the backend but fails the precondition check
 * locally, we return an `UnknownDocument` and rely on Watch to send us the
 * updated version.
 *
 * Note that TransformMutations don't create Documents (in the case of being
 * applied to a NoDocument), even though they would on the backend. This is
 * because the client always combines the TransformMutation with a SetMutation
 * or PatchMutation and we only want to apply the transform if the prior
 * mutation resulted in a Document (always true for a SetMutation, but not
 * necessarily for a PatchMutation).
 *
 * ## Subclassing Notes
 *
 * Subclasses of Mutation need to implement applyToRemoteDocument() and
 * applyToLocalView() to implement the actual behavior of applying the mutation
 * to some source document.
 */


var pn = function pn() {};
/**
 * Applies this mutation to the given MaybeDocument or null for the purposes
 * of computing a new remote document. If the input document doesn't match the
 * expected state (e.g. it is null or outdated), an `UnknownDocument` can be
 * returned.
 *
 * @param mutation The mutation to apply.
 * @param maybeDoc The document to mutate. The input document can be null if
 *     the client has no knowledge of the pre-mutation state of the document.
 * @param mutationResult The result of applying the mutation from the backend.
 * @return The mutated document. The returned document may be an
 *     UnknownDocument if the mutation could not be applied to the locally
 *     cached base document.
 */


function dn(t, e, n) {
  return t instanceof wn ? function (t, e, n) {
    // Unlike applySetMutationToLocalView, if we're applying a mutation to a
    // remote document the server has accepted the mutation so the precondition
    // must have held.
    return new kn(t.key, n.version, t.value, {
      hasCommittedMutations: !0
    });
  }(t, 0, n) : t instanceof _n ? function (t, e, n) {
    if (!ln(t.Ge, e)) // Since the mutation was not rejected, we know that the  precondition
      // matched on the backend. We therefore must not have the expected version
      // of the document in our cache and return an UnknownDocument with the
      // known updateTime.
      return new On(t.key, n.version);
    var r = bn(t, e);
    return new kn(t.key, n.version, r, {
      hasCommittedMutations: !0
    });
  }(t, e, n) : t instanceof In ? function (t, e, n) {
    if (g(null != n.transformResults), !ln(t.Ge, e)) // Since the mutation was not rejected, we know that the  precondition
      // matched on the backend. We therefore must not have the expected version
      // of the document in our cache and return an UnknownDocument with the
      // known updateTime.
      return new On(t.key, n.version);

    var r = En(t, e),
        i =
    /**
    * Creates a list of "transform results" (a transform result is a field value
    * representing the result of applying a transform) for use after a
    * TransformMutation has been acknowledged by the server.
    *
    * @param fieldTransforms The field transforms to apply the result to.
    * @param baseDoc The document prior to applying this mutation batch.
    * @param serverTransformResults The transform results received by the server.
    * @return The transform results list.
    */
    function (t, e, n) {
      var r = [];
      g(t.length === n.length);

      for (var i = 0; i < n.length; i++) {
        var o = t[i],
            s = o.transform,
            u = null;
        e instanceof kn && (u = e.field(o.field)), r.push(Xe(s, u, n[i]));
      }

      return r;
    }(t.fieldTransforms, e, n.transformResults),
        o = n.version,
        s = Tn(t, r.data(), i);

    return new kn(t.key, o, s, {
      hasCommittedMutations: !0
    });
  }(t, e, n) : function (t, e, n) {
    // Unlike applyToLocalView, if we're applying a mutation to a remote
    // document the server has accepted the mutation so the precondition must
    // have held.
    return new Rn(t.key, n.version, {
      hasCommittedMutations: !0
    });
  }(t, 0, n);
}
/**
 * Applies this mutation to the given MaybeDocument or null for the purposes
 * of computing the new local view of a document. Both the input and returned
 * documents can be null.
 *
 * @param mutation The mutation to apply.
 * @param maybeDoc The document to mutate. The input document can be null if
 *     the client has no knowledge of the pre-mutation state of the document.
 * @param baseDoc The state of the document prior to this mutation batch. The
 *     input document can be null if the client has no knowledge of the
 *     pre-mutation state of the document.
 * @param localWriteTime A timestamp indicating the local write time of the
 *     batch this mutation is a part of.
 * @return The mutated document. The returned document may be null, but only
 *     if maybeDoc was null and the mutation would not create a new document.
 */


function vn(t, e, n, r) {
  return t instanceof wn ? function (t, e) {
    if (!ln(t.Ge, e)) return e;
    var n = mn(e);
    return new kn(t.key, n, t.value, {
      Je: !0
    });
  }(t, e) : t instanceof _n ? function (t, e) {
    if (!ln(t.Ge, e)) return e;
    var n = mn(e),
        r = bn(t, e);
    return new kn(t.key, n, r, {
      Je: !0
    });
  }(t, e) : t instanceof In ? function (t, e, n, r) {
    if (!ln(t.Ge, e)) return e;

    var i = En(t, e),
        o = function (t, e, n, r) {
      for (var i = [], o = 0, s = t; o < s.length; o++) {
        var u = s[o],
            a = u.transform,
            c = null;
        n instanceof kn && (c = n.field(u.field)), null === c && r instanceof kn && ( // If the current document does not contain a value for the mutated
        // field, use the value that existed before applying this mutation
        // batch. This solves an edge case where a PatchMutation clears the
        // values in a nested map before the TransformMutation is applied.
        c = r.field(u.field)), i.push($e(a, c, e));
      }

      return i;
    }(t.fieldTransforms, n, e, r),
        s = Tn(t, i.data(), o);

    return new kn(t.key, i.version, s, {
      Je: !0
    });
  }(t, e, r, n) : function (t, e) {
    return ln(t.Ge, e) ? new Rn(t.key, st.min()) : e;
  }(t, e);
}
/**
 * If this mutation is not idempotent, returns the base value to persist with
 * this mutation. If a base value is returned, the mutation is always applied
 * to this base value, even if document has already been updated.
 *
 * The base value is a sparse object that consists of only the document
 * fields for which this mutation contains a non-idempotent transformation
 * (e.g. a numeric increment). The provided value guarantees consistent
 * behavior for non-idempotent transforms and allow us to return the same
 * latency-compensated value even if the backend has already applied the
 * mutation. The base value is null for idempotent mutations, as they can be
 * re-played even if the backend has already applied them.
 *
 * @return a base value to store along with the mutation, or null for
 * idempotent mutations.
 */


function yn(t, e) {
  return t instanceof In ? function (t, e) {
    for (var n = null, r = 0, i = t.fieldTransforms; r < i.length; r++) {
      var o = i[r],
          s = e instanceof kn ? e.field(o.field) : void 0,
          u = Je(o.transform, s || null);
      null != u && (n = null == n ? new Dn().set(o.field, u) : n.set(o.field, u));
    }

    return n ? n.Xe() : null;
  }(t, e) : null;
}

function gn(t, e) {
  return t.type === e.type && !!t.key.isEqual(e.key) && !!t.Ge.isEqual(e.Ge) && (0
  /* Set */
  === t.type ? t.value.isEqual(e.value) : 1
  /* Patch */
  === t.type ? t.data.isEqual(e.data) && t.We.isEqual(e.We) : 2
  /* Transform */
  !== t.type || Y(t.fieldTransforms, t.fieldTransforms, function (t, e) {
    return function (t, e) {
      return t.field.isEqual(e.field) && function (t, e) {
        return t instanceof tn && e instanceof tn || t instanceof nn && e instanceof nn ? Y(t.elements, e.elements, Zt) : t instanceof on && e instanceof on ? Zt(t.je, e.je) : t instanceof Ze && e instanceof Ze;
      }(t.transform, e.transform);
    }(t, e);
  }));
}
/**
 * Returns the version from the given document for use as the result of a
 * mutation. Mutations are defined to return the version of the base document
 * only if it is an existing document. Deleted and unknown documents have a
 * post-mutation version of SnapshotVersion.min().
 */


function mn(t) {
  return t instanceof kn ? t.version : st.min();
}
/**
 * A mutation that creates or replaces the document at the given key with the
 * object value contents.
 */


var wn =
/** @class */
function (e) {
  function n(t, n, r) {
    var i = this;
    return (i = e.call(this) || this).key = t, i.value = n, i.Ge = r, i.type = 0
    /* Set */
    , i;
  }

  return t.__extends(n, e), n;
}(pn),
    _n =
/** @class */
function (e) {
  function n(t, n, r, i) {
    var o = this;
    return (o = e.call(this) || this).key = t, o.data = n, o.We = r, o.Ge = i, o.type = 1
    /* Patch */
    , o;
  }

  return t.__extends(n, e), n;
}(pn);

function bn(t, e) {
  return function (t, e) {
    var n = new Dn(e);
    return t.We.fields.forEach(function (e) {
      if (!e.m()) {
        var r = t.data.field(e);
        null !== r ? n.set(e, r) : n.delete(e);
      }
    }), n.Xe();
  }(t, e instanceof kn ? e.data() : Sn.empty());
}

var In =
/** @class */
function (e) {
  function n(t, n) {
    var r = this;
    return (r = e.call(this) || this).key = t, r.fieldTransforms = n, r.type = 2
    /* Transform */
    , // NOTE: We set a precondition of exists: true as a safety-check, since we
    // always combine TransformMutations with a SetMutation or PatchMutation which
    // (if successful) should end up with an existing document.
    r.Ge = fn.exists(!0), r;
  }

  return t.__extends(n, e), n;
}(pn);

function En(t, e) {
  return e;
}

function Tn(t, e, n) {
  for (var r = new Dn(e), i = 0; i < t.fieldTransforms.length; i++) {
    var o = t.fieldTransforms[i];
    r.set(o.field, n[i]);
  }

  return r.Xe();
}
/** A mutation that deletes the document at the given key. */


var Nn =
/** @class */
function (e) {
  function n(t, n) {
    var r = this;
    return (r = e.call(this) || this).key = t, r.Ge = n, r.type = 3
    /* Delete */
    , r;
  }

  return t.__extends(n, e), n;
}(pn),
    An =
/** @class */
function (e) {
  function n(t, n) {
    var r = this;
    return (r = e.call(this) || this).key = t, r.Ge = n, r.type = 4
    /* Verify */
    , r;
  }

  return t.__extends(n, e), n;
}(pn),
    Sn =
/** @class */
function () {
  function t(t) {
    this.proto = t;
  }

  return t.empty = function () {
    return new t({
      mapValue: {}
    });
  },
  /**
   * Returns the value at the given path or null.
   *
   * @param path the path to search
   * @return The value at the path or if there it doesn't exist.
   */
  t.prototype.field = function (t) {
    if (t.m()) return this.proto;

    for (var e = this.proto, n = 0; n < t.length - 1; ++n) {
      if (!e.mapValue.fields) return null;
      if (!pe(e = e.mapValue.fields[t.get(n)])) return null;
    }

    return (e = (e.mapValue.fields || {})[t._()]) || null;
  }, t.prototype.isEqual = function (t) {
    return Zt(this.proto, t.proto);
  }, t;
}(),
    Dn =
/** @class */
function () {
  /**
   * @param baseObject The object to mutate.
   */
  function t(t) {
    void 0 === t && (t = Sn.empty()), this.Ze = t,
    /** A map that contains the accumulated changes in this builder. */
    this.tn = new Map();
  }
  /**
   * Sets the field to the provided value.
   *
   * @param path The field path to set.
   * @param value The value to set.
   * @return The current Builder instance.
   */


  return t.prototype.set = function (t, e) {
    return this.en(t, e), this;
  },
  /**
   * Removes the field at the specified path. If there is no field at the
   * specified path, nothing is changed.
   *
   * @param path The field path to remove.
   * @return The current Builder instance.
   */
  t.prototype.delete = function (t) {
    return this.en(t, null), this;
  },
  /**
   * Adds `value` to the overlay map at `path`. Creates nested map entries if
   * needed.
   */
  t.prototype.en = function (t, e) {
    for (var n = this.tn, r = 0; r < t.length - 1; ++r) {
      var i = t.get(r),
          o = n.get(i);
      o instanceof Map ? // Re-use a previously created map
      n = o : o && 10
      /* ObjectValue */
      === Jt(o) ? ( // Convert the existing Protobuf MapValue into a map
      o = new Map(Object.entries(o.mapValue.fields || {})), n.set(i, o), n = o) : ( // Create an empty map to represent the current nesting level
      o = new Map(), n.set(i, o), n = o);
    }

    n.set(t._(), e);
  },
  /** Returns an ObjectValue with all mutations applied. */
  t.prototype.Xe = function () {
    var t = this.nn(N.P(), this.tn);
    return null != t ? new Sn(t) : this.Ze;
  },
  /**
   * Applies any overlays from `currentOverlays` that exist at `currentPath`
   * and returns the merged data at `currentPath` (or null if there were no
   * changes).
   *
   * @param currentPath The path at the current nesting level. Can be set to
   * FieldValue.emptyPath() to represent the root.
   * @param currentOverlays The overlays at the current nesting level in the
   * same format as `overlayMap`.
   * @return The merged data at `currentPath` or null if no modifications
   * were applied.
   */
  t.prototype.nn = function (t, e) {
    var n = this,
        r = !1,
        i = this.Ze.field(t),
        o = pe(i) ? // If there is already data at the current path, base our
    Object.assign({}, i.mapValue.fields) : {};
    return e.forEach(function (e, i) {
      if (e instanceof Map) {
        var s = n.nn(t.child(i), e);
        null != s && (o[i] = s, r = !0);
      } else null !== e ? (o[i] = e, r = !0) : o.hasOwnProperty(i) && (delete o[i], r = !0);
    }), r ? {
      mapValue: {
        fields: o
      }
    } : null;
  }, t;
}();
/**
 * Returns a FieldMask built from all fields in a MapValue.
 */


function xn(t) {
  var e = [];
  return _(t.fields || {}, function (t, n) {
    var r = new N([t]);

    if (pe(n)) {
      var i = xn(n.mapValue).fields;
      if (0 === i.length) // Preserve the empty map by adding it to the FieldMask.
        e.push(r);else // For nested and non-empty ObjectValues, add the FieldPath of the
        // leaf nodes.
        for (var o = 0, s = i; o < s.length; o++) {
          var u = s[o];
          e.push(r.child(u));
        }
    } else // For nested and non-empty ObjectValues, add the FieldPath of the leaf
      // nodes.
      e.push(r);
  }), new an(e);
}

var Ln = function Ln(t, e) {
  this.key = t, this.version = e;
},
    kn =
/** @class */
function (e) {
  function n(t, n, r, i) {
    var o = this;
    return (o = e.call(this, t, n) || this).sn = r, o.Je = !!i.Je, o.hasCommittedMutations = !!i.hasCommittedMutations, o;
  }

  return t.__extends(n, e), n.prototype.field = function (t) {
    return this.sn.field(t);
  }, n.prototype.data = function () {
    return this.sn;
  }, n.prototype.rn = function () {
    return this.sn.proto;
  }, n.prototype.isEqual = function (t) {
    return t instanceof n && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.Je === t.Je && this.hasCommittedMutations === t.hasCommittedMutations && this.sn.isEqual(t.sn);
  }, n.prototype.toString = function () {
    return "Document(" + this.key + ", " + this.version + ", " + this.sn.toString() + ", {hasLocalMutations: " + this.Je + "}), {hasCommittedMutations: " + this.hasCommittedMutations + "})";
  }, Object.defineProperty(n.prototype, "hasPendingWrites", {
    get: function get() {
      return this.Je || this.hasCommittedMutations;
    },
    enumerable: !1,
    configurable: !0
  }), n;
}(Ln),
    Rn =
/** @class */
function (e) {
  function n(t, n, r) {
    var i = this;
    return (i = e.call(this, t, n) || this).hasCommittedMutations = !(!r || !r.hasCommittedMutations), i;
  }

  return t.__extends(n, e), n.prototype.toString = function () {
    return "NoDocument(" + this.key + ", " + this.version + ")";
  }, Object.defineProperty(n.prototype, "hasPendingWrites", {
    get: function get() {
      return this.hasCommittedMutations;
    },
    enumerable: !1,
    configurable: !0
  }), n.prototype.isEqual = function (t) {
    return t instanceof n && t.hasCommittedMutations === this.hasCommittedMutations && t.version.isEqual(this.version) && t.key.isEqual(this.key);
  }, n;
}(Ln),
    On =
/** @class */
function (e) {
  function n() {
    return null !== e && e.apply(this, arguments) || this;
  }

  return t.__extends(n, e), n.prototype.toString = function () {
    return "UnknownDocument(" + this.key + ", " + this.version + ")";
  }, Object.defineProperty(n.prototype, "hasPendingWrites", {
    get: function get() {
      return !0;
    },
    enumerable: !1,
    configurable: !0
  }), n.prototype.isEqual = function (t) {
    return t instanceof n && t.version.isEqual(this.version) && t.key.isEqual(this.key);
  }, n;
}(Ln),
    Pn =
/**
     * Initializes a Query with a path and optional additional query constraints.
     * Path must currently be empty if this is a collection group query.
     */
function Pn(t, e, n, r, i, o
/* First */
, s, u) {
  void 0 === e && (e = null), void 0 === n && (n = []), void 0 === r && (r = []), void 0 === i && (i = null), void 0 === o && (o = "F"), void 0 === s && (s = null), void 0 === u && (u = null), this.path = t, this.collectionGroup = e, this.on = n, this.filters = r, this.limit = i, this.an = o, this.startAt = s, this.endAt = u, this.cn = null, // The corresponding `Target` of this `Query` instance.
  this.un = null, this.startAt, this.endAt;
};
/**
 * Represents a document in Firestore with a key, version, data and whether the
 * data has local mutations applied to it.
 */

/** Creates a new Query instance with the options provided. */


function Vn(t, e, n, r, i, o, s, u) {
  return new Pn(t, e, n, r, i, o, s, u);
}
/** Creates a new Query for a query that matches all documents at `path` */


function Un(t) {
  return new Pn(t);
}
/**
 * Helper to convert a collection group query into a collection query at a
 * specific path. This is used when executing collection group queries, since
 * we have to split the query into a set of collection queries at multiple
 * paths.
 */


function Cn(t) {
  return !ut(t.limit) && "F"
  /* First */
  === t.an;
}

function Fn(t) {
  return !ut(t.limit) && "L"
  /* Last */
  === t.an;
}

function Mn(t) {
  return t.on.length > 0 ? t.on[0].field : null;
}

function qn(t) {
  for (var e = 0, n = t.filters; e < n.length; e++) {
    var r = n[e];
    if (r.hn()) return r.field;
  }

  return null;
}
/**
 * Checks if any of the provided Operators are included in the query and
 * returns the first one that is, or null if none are.
 */

/**
 * Returns whether the query matches a collection group rather than a specific
 * collection.
 */


function jn(t) {
  return null !== t.collectionGroup;
}
/**
 * Returns the implicit order by constraint that is used to execute the Query,
 * which can be different from the order by constraints the user provided (e.g.
 * the SDK and backend always orders by `__name__`).
 */


function Gn(t) {
  var e = m(t);

  if (null === e.cn) {
    e.cn = [];
    var n = qn(e),
        r = Mn(e);
    if (null !== n && null === r) // In order to implicitly add key ordering, we must also add the
      // inequality filter field for it to be a valid query.
      // Note that the default inequality field and key ordering is ascending.
      n.p() || e.cn.push(new fr(n)), e.cn.push(new fr(N.v(), "asc"
      /* ASCENDING */
      ));else {
      for (var i = !1, o = 0, s = e.on; o < s.length; o++) {
        var u = s[o];
        e.cn.push(u), u.field.p() && (i = !0);
      }

      if (!i) {
        // The order of the implicit key ordering always matches the last
        // explicit order by
        var a = e.on.length > 0 ? e.on[e.on.length - 1].dir : "asc"
        /* ASCENDING */
        ;
        e.cn.push(new fr(N.v(), a));
      }
    }
  }

  return e.cn;
}
/**
 * Converts this `Query` instance to it's corresponding `Target` representation.
 */


function zn(t) {
  var e = m(t);
  if (!e.un) if ("F"
  /* First */
  === e.an) e.un = ft(e.path, e.collectionGroup, Gn(e), e.filters, e.limit, e.startAt, e.endAt);else {
    for ( // Flip the orderBy directions since we want the last results
    var n = [], r = 0, i = Gn(e); r < i.length; r++) {
      var o = i[r],
          s = "desc"
      /* DESCENDING */
      === o.dir ? "asc"
      /* ASCENDING */
      : "desc"
      /* DESCENDING */
      ;
      n.push(new fr(o.field, s));
    } // We need to swap the cursors to match the now-flipped query ordering.


    var u = e.endAt ? new ur(e.endAt.position, !e.endAt.before) : null,
        a = e.startAt ? new ur(e.startAt.position, !e.startAt.before) : null; // Now return as a LimitType.First query.

    e.un = ft(e.path, e.collectionGroup, n, e.filters, e.limit, u, a);
  }
  return e.un;
}

function Bn(t, e, n) {
  return new Pn(t.path, t.collectionGroup, t.on.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);
}

function Wn(t, e) {
  return new Pn(t.path, t.collectionGroup, t.on.slice(), t.filters.slice(), t.limit, t.an, e, t.endAt);
}

function Kn(t, e) {
  return new Pn(t.path, t.collectionGroup, t.on.slice(), t.filters.slice(), t.limit, t.an, t.startAt, e);
}

function Qn(t, e) {
  return pt(zn(t), zn(e)) && t.an === e.an;
} // TODO(b/29183165): This is used to get a unique string from a query to, for
// example, use as a dictionary key, but the implementation is subject to
// collisions. Make it collision-free.


function Hn(t) {
  return lt(zn(t)) + "|lt:" + t.an;
}

function Yn(t) {
  return "Query(target=" + function (t) {
    var e = t.path.R();
    return null !== t.collectionGroup && (e += " collectionGroup=" + t.collectionGroup), t.filters.length > 0 && (e += ", filters: [" + t.filters.map(function (t) {
      return (e = t).field.R() + " " + e.op + " " + re(e.value);
      /** Returns a debug description for `filter`. */

      var e;
      /** Filter that matches on key fields (i.e. '__name__'). */
    }).join(", ") + "]"), ut(t.limit) || (e += ", limit: " + t.limit), t.orderBy.length > 0 && (e += ", orderBy: [" + t.orderBy.map(function (t) {
      return (e = t).field.R() + " (" + e.dir + ")";
      var e;
    }).join(", ") + "]"), t.startAt && (e += ", startAt: " + ar(t.startAt)), t.endAt && (e += ", endAt: " + ar(t.endAt)), "Target(" + e + ")";
  }(zn(t)) + "; limitType=" + t.an + ")";
}
/** Returns whether `doc` matches the constraints of `query`. */


function $n(t, e) {
  return function (t, e) {
    var n = e.key.path;
    return null !== t.collectionGroup ? e.key.N(t.collectionGroup) && t.path.T(n) : A.F(t.path) ? t.path.isEqual(n) : t.path.I(n);
  }(t, e) && function (t, e) {
    for (var n = 0, r = t.on; n < r.length; n++) {
      var i = r[n]; // order by key always matches

      if (!i.field.p() && null === e.field(i.field)) return !1;
    }

    return !0;
  }(t, e) && function (t, e) {
    for (var n = 0, r = t.filters; n < r.length; n++) {
      if (!r[n].matches(e)) return !1;
    }

    return !0;
  }(t, e) && function (t, e) {
    return !(t.startAt && !cr(t.startAt, Gn(t), e)) && (!t.endAt || !cr(t.endAt, Gn(t), e));
  }(t, e);
}

function Xn(t) {
  return function (e, n) {
    for (var r = !1, i = 0, o = Gn(t); i < o.length; i++) {
      var s = o[i],
          u = lr(s, e, n);
      if (0 !== u) return u;
      r = r || s.field.p();
    }

    return 0;
  };
}

var Jn =
/** @class */
function (e) {
  function n(t, n, r) {
    var i = this;
    return (i = e.call(this) || this).field = t, i.op = n, i.value = r, i;
  }
  /**
   * Creates a filter based on the provided arguments.
   */


  return t.__extends(n, e), n.create = function (t, e, r) {
    if (t.p()) return "in"
    /* IN */
    === e || "not-in"
    /* NOT_IN */
    === e ? this.ln(t, e, r) : new Zn(t, e, r);

    if (fe(r)) {
      if ("=="
      /* EQUAL */
      !== e && "!="
      /* NOT_EQUAL */
      !== e) throw new c(a.INVALID_ARGUMENT, "Invalid query. Null only supports '==' and '!=' comparisons.");
      return new n(t, e, r);
    }

    if (le(r)) {
      if ("=="
      /* EQUAL */
      !== e && "!="
      /* NOT_EQUAL */
      !== e) throw new c(a.INVALID_ARGUMENT, "Invalid query. NaN only supports '==' and '!=' comparisons.");
      return new n(t, e, r);
    }

    return "array-contains"
    /* ARRAY_CONTAINS */
    === e ? new rr(t, r) : "in"
    /* IN */
    === e ? new ir(t, r) : "not-in"
    /* NOT_IN */
    === e ? new or(t, r) : "array-contains-any"
    /* ARRAY_CONTAINS_ANY */
    === e ? new sr(t, r) : new n(t, e, r);
  }, n.ln = function (t, e, n) {
    return "in"
    /* IN */
    === e ? new tr(t, n) : new er(t, n);
  }, n.prototype.matches = function (t) {
    var e = t.field(this.field); // Types do not have to match in NOT_EQUAL filters.

    return "!="
    /* NOT_EQUAL */
    === this.op ? null !== e && this._n(ee(e, this.value)) : null !== e && Jt(this.value) === Jt(e) && this._n(ee(e, this.value)); // Only compare types with matching backend order (such as double and int).
  }, n.prototype._n = function (t) {
    switch (this.op) {
      case "<"
      /* LESS_THAN */
      :
        return t < 0;

      case "<="
      /* LESS_THAN_OR_EQUAL */
      :
        return t <= 0;

      case "=="
      /* EQUAL */
      :
        return 0 === t;

      case "!="
      /* NOT_EQUAL */
      :
        return 0 !== t;

      case ">"
      /* GREATER_THAN */
      :
        return t > 0;

      case ">="
      /* GREATER_THAN_OR_EQUAL */
      :
        return t >= 0;

      default:
        return y();
    }
  }, n.prototype.hn = function () {
    return ["<"
    /* LESS_THAN */
    , "<="
    /* LESS_THAN_OR_EQUAL */
    , ">"
    /* GREATER_THAN */
    , ">="
    /* GREATER_THAN_OR_EQUAL */
    , "!="
    /* NOT_EQUAL */
    , "not-in"
    /* NOT_IN */
    ].indexOf(this.op) >= 0;
  }, n;
}(function () {});

var Zn =
/** @class */
function (e) {
  function n(t, n, r) {
    var i = this;
    return (i = e.call(this, t, n, r) || this).key = A.C(r.referenceValue), i;
  }

  return t.__extends(n, e), n.prototype.matches = function (t) {
    var e = A.i(t.key, this.key);
    return this._n(e);
  }, n;
}(Jn),
    tr =
/** @class */
function (e) {
  function n(t, n) {
    var r = this;
    return (r = e.call(this, t, "in"
    /* IN */
    , n) || this).keys = nr("in"
    /* IN */
    , n), r;
  }

  return t.__extends(n, e), n.prototype.matches = function (t) {
    return this.keys.some(function (e) {
      return e.isEqual(t.key);
    });
  }, n;
}(Jn),
    er =
/** @class */
function (e) {
  function n(t, n) {
    var r = this;
    return (r = e.call(this, t, "not-in"
    /* NOT_IN */
    , n) || this).keys = nr("not-in"
    /* NOT_IN */
    , n), r;
  }

  return t.__extends(n, e), n.prototype.matches = function (t) {
    return !this.keys.some(function (e) {
      return e.isEqual(t.key);
    });
  }, n;
}(Jn);
/** Filter that matches on key fields within an array. */


function nr(t, e) {
  var n;
  return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map(function (t) {
    return A.C(t.referenceValue);
  });
}
/** A Filter that implements the array-contains operator. */


var rr =
/** @class */
function (e) {
  function n(t, n) {
    return e.call(this, t, "array-contains"
    /* ARRAY_CONTAINS */
    , n) || this;
  }

  return t.__extends(n, e), n.prototype.matches = function (t) {
    var e = t.field(this.field);
    return he(e) && te(e.arrayValue, this.value);
  }, n;
}(Jn),
    ir =
/** @class */
function (e) {
  function n(t, n) {
    return e.call(this, t, "in"
    /* IN */
    , n) || this;
  }

  return t.__extends(n, e), n.prototype.matches = function (t) {
    var e = t.field(this.field);
    return null !== e && te(this.value.arrayValue, e);
  }, n;
}(Jn),
    or =
/** @class */
function (e) {
  function n(t, n) {
    return e.call(this, t, "not-in"
    /* NOT_IN */
    , n) || this;
  }

  return t.__extends(n, e), n.prototype.matches = function (t) {
    if (te(this.value.arrayValue, {
      nullValue: "NULL_VALUE"
    })) return !1;
    var e = t.field(this.field);
    return null !== e && !te(this.value.arrayValue, e);
  }, n;
}(Jn),
    sr =
/** @class */
function (e) {
  function n(t, n) {
    return e.call(this, t, "array-contains-any"
    /* ARRAY_CONTAINS_ANY */
    , n) || this;
  }

  return t.__extends(n, e), n.prototype.matches = function (t) {
    var e = this,
        n = t.field(this.field);
    return !(!he(n) || !n.arrayValue.values) && n.arrayValue.values.some(function (t) {
      return te(e.value.arrayValue, t);
    });
  }, n;
}(Jn),
    ur = function ur(t, e) {
  this.position = t, this.before = e;
};
/** A Filter that implements the IN operator. */


function ar(t) {
  // TODO(b/29183165): Make this collision robust.
  return (t.before ? "b" : "a") + ":" + t.position.map(function (t) {
    return re(t);
  }).join(",");
}
/**
 * Returns true if a document sorts before a bound using the provided sort
 * order.
 */


function cr(t, e, n) {
  for (var r = 0, i = 0; i < t.position.length; i++) {
    var o = e[i],
        s = t.position[i];
    if (r = o.field.p() ? A.i(A.C(s.referenceValue), n.key) : ee(s, n.field(o.field)), "desc"
    /* DESCENDING */
    === o.dir && (r *= -1), 0 !== r) break;
  }

  return t.before ? r <= 0 : r < 0;
}

function hr(t, e) {
  if (null === t) return null === e;
  if (null === e) return !1;
  if (t.before !== e.before || t.position.length !== e.position.length) return !1;

  for (var n = 0; n < t.position.length; n++) {
    if (!Zt(t.position[n], e.position[n])) return !1;
  }

  return !0;
}
/**
 * An ordering on a field, in some Direction. Direction defaults to ASCENDING.
 */


var fr = function fr(t, e
/* ASCENDING */
) {
  void 0 === e && (e = "asc"), this.field = t, this.dir = e;
};

function lr(t, e, n) {
  var r = t.field.p() ? A.i(e.key, n.key) : function (t, e, n) {
    var r = e.field(t),
        i = n.field(t);
    return null !== r && null !== i ? ee(r, i) : y();
  }(t.field, e, n);

  switch (t.dir) {
    case "asc"
    /* ASCENDING */
    :
      return r;

    case "desc"
    /* DESCENDING */
    :
      return -1 * r;

    default:
      return y();
  }
}

function pr(t, e) {
  return t.dir === e.dir && t.field.isEqual(e.field);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var dr = function dr() {
  var t = this;
  this.promise = new Promise(function (e, n) {
    t.resolve = e, t.reject = n;
  });
},
    vr =
/** @class */
function () {
  function t(
  /**
   * The AsyncQueue to run backoff operations on.
   */
  t,
  /**
   * The ID to use when scheduling backoff operations on the AsyncQueue.
   */
  e,
  /**
   * The initial delay (used as the base delay on the first retry attempt).
   * Note that jitter will still be applied, so the actual delay could be as
   * little as 0.5*initialDelayMs.
   */
  n
  /**
   * The multiplier to use to determine the extended base delay after each
   * attempt.
   */
  , r
  /**
   * The maximum base delay after which no further backoff is performed.
   * Note that jitter will still be applied, so the actual delay could be as
   * much as 1.5*maxDelayMs.
   */
  , i) {
    void 0 === n && (n = 1e3), void 0 === r && (r = 1.5), void 0 === i && (i = 6e4), this.fn = t, this.dn = e, this.wn = n, this.mn = r, this.Tn = i, this.En = 0, this.In = null,
    /** The last backoff attempt, as epoch milliseconds. */
    this.An = Date.now(), this.reset();
  }
  /**
   * Resets the backoff delay.
   *
   * The very next backoffAndWait() will have no delay. If it is called again
   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and
   * subsequent ones will increase according to the backoffFactor.
   */


  return t.prototype.reset = function () {
    this.En = 0;
  },
  /**
   * Resets the backoff delay to the maximum delay (e.g. for use after a
   * RESOURCE_EXHAUSTED error).
   */
  t.prototype.Rn = function () {
    this.En = this.Tn;
  },
  /**
   * Returns a promise that resolves after currentDelayMs, and increases the
   * delay for any subsequent attempts. If there was a pending backoff operation
   * already, it will be canceled.
   */
  t.prototype.gn = function (t) {
    var e = this; // Cancel any pending backoff operation.

    this.cancel(); // First schedule using the current base (which may be 0 and should be
    // honored as such).

    var n = Math.floor(this.En + this.Pn()),
        r = Math.max(0, Date.now() - this.An),
        i = Math.max(0, n - r); // Guard against lastAttemptTime being in the future due to a clock change.

    i > 0 && l("ExponentialBackoff", "Backing off for " + i + " ms (base delay: " + this.En + " ms, delay with jitter: " + n + " ms, last attempt: " + r + " ms ago)"), this.In = this.fn.yn(this.dn, i, function () {
      return e.An = Date.now(), t();
    }), // Apply backoff factor to determine next delay and ensure it is within
    // bounds.
    this.En *= this.mn, this.En < this.wn && (this.En = this.wn), this.En > this.Tn && (this.En = this.Tn);
  }, t.prototype.Vn = function () {
    null !== this.In && (this.In.pn(), this.In = null);
  }, t.prototype.cancel = function () {
    null !== this.In && (this.In.cancel(), this.In = null);
  },
  /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */
  t.prototype.Pn = function () {
    return (Math.random() - .5) * this.En;
  }, t;
}(),
    yr =
/** @class */
function () {
  function t(t) {
    var e = this; // NOTE: next/catchCallback will always point to our own wrapper functions,
    // not the user's raw next() or catch() callbacks.

    this.bn = null, this.vn = null, // When the operation resolves, we'll set result or error and mark isDone.
    this.result = void 0, this.error = void 0, this.Sn = !1, // Set to true when .then() or .catch() are called and prevents additional
    // chaining.
    this.Dn = !1, t(function (t) {
      e.Sn = !0, e.result = t, e.bn && // value should be defined unless T is Void, but we can't express
      // that in the type system.
      e.bn(t);
    }, function (t) {
      e.Sn = !0, e.error = t, e.vn && e.vn(t);
    });
  }

  return t.prototype.catch = function (t) {
    return this.next(void 0, t);
  }, t.prototype.next = function (e, n) {
    var r = this;
    return this.Dn && y(), this.Dn = !0, this.Sn ? this.error ? this.Cn(n, this.error) : this.Nn(e, this.result) : new t(function (t, i) {
      r.bn = function (n) {
        r.Nn(e, n).next(t, i);
      }, r.vn = function (e) {
        r.Cn(n, e).next(t, i);
      };
    });
  }, t.prototype.Fn = function () {
    var t = this;
    return new Promise(function (e, n) {
      t.next(e, n);
    });
  }, t.prototype.xn = function (e) {
    try {
      var n = e();
      return n instanceof t ? n : t.resolve(n);
    } catch (e) {
      return t.reject(e);
    }
  }, t.prototype.Nn = function (e, n) {
    return e ? this.xn(function () {
      return e(n);
    }) : t.resolve(n);
  }, t.prototype.Cn = function (e, n) {
    return e ? this.xn(function () {
      return e(n);
    }) : t.reject(n);
  }, t.resolve = function (e) {
    return new t(function (t, n) {
      t(e);
    });
  }, t.reject = function (e) {
    return new t(function (t, n) {
      n(e);
    });
  }, t.$n = function ( // Accept all Promise types in waitFor().
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  e) {
    return new t(function (t, n) {
      var r = 0,
          i = 0,
          o = !1;
      e.forEach(function (e) {
        ++r, e.next(function () {
          ++i, o && i === r && t();
        }, function (t) {
          return n(t);
        });
      }), o = !0, i === r && t();
    });
  },
  /**
   * Given an array of predicate functions that asynchronously evaluate to a
   * boolean, implements a short-circuiting `or` between the results. Predicates
   * will be evaluated until one of them returns `true`, then stop. The final
   * result will be whether any of them returned `true`.
   */
  t.kn = function (e) {
    for (var n = t.resolve(!1), r = function r(e) {
      n = n.next(function (n) {
        return n ? t.resolve(n) : e();
      });
    }, i = 0, o = e; i < o.length; i++) {
      r(o[i]);
    }

    return n;
  }, t.forEach = function (t, e) {
    var n = this,
        r = [];
    return t.forEach(function (t, i) {
      r.push(e.call(n, t, i));
    }), this.$n(r);
  }, t;
}(),
    gr =
/** @class */
function () {
  /*
   * Creates a new SimpleDb wrapper for IndexedDb database `name`.
   *
   * Note that `version` must not be a downgrade. IndexedDB does not support
   * downgrading the schema version. We currently do not support any way to do
   * versioning outside of IndexedDB's versioning mechanism, as only
   * version-upgrade transactions are allowed to do things like create
   * objectstores.
   */
  function e(t, n, i) {
    this.name = t, this.version = n, this.Mn = i, // NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the
    // bug we're checking for should exist in iOS >= 12.2 and < 13, but for
    // whatever reason it's much harder to hit after 12.2 so we only proactively
    // log on 12.2.
    12.2 === e.On(r.getUA()) && p("Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.");
  }
  /** Deletes the specified database. */


  return e.delete = function (t) {
    return l("SimpleDb", "Removing database:", t), Er(window.indexedDB.deleteDatabase(t)).Fn();
  },
  /** Returns true if IndexedDB is available in the current environment. */
  e.Ln = function () {
    if ("undefined" == typeof indexedDB) return !1;
    if (e.Bn()) return !0; // We extensively use indexed array values and compound keys,
    // which IE and Edge do not support. However, they still have indexedDB
    // defined on the window, so we need to check for them here and make sure
    // to return that persistence is not enabled for those browsers.
    // For tracking support of this feature, see here:
    // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/
    // Check the UA string to find out the browser.

    var t = r.getUA(),
        n = e.On(t),
        i = 0 < n && n < 10,
        o = e.qn(t),
        s = 0 < o && o < 4.5; // IE 10
    // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';
    // IE 11
    // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';
    // Edge
    // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,
    // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';
    // iOS Safari: Disable for users running iOS version < 10.

    return !(t.indexOf("MSIE ") > 0 || t.indexOf("Trident/") > 0 || t.indexOf("Edge/") > 0 || i || s);
  },
  /**
   * Returns true if the backing IndexedDB store is the Node IndexedDBShim
   * (see https://github.com/axemclion/IndexedDBShim).
   */
  e.Bn = function () {
    var t;
    return "undefined" != typeof process && "YES" === (null === (t = process.env) || void 0 === t ? void 0 : t.Un);
  },
  /** Helper to get a typed SimpleDbStore from a transaction. */
  e.Qn = function (t, e) {
    return t.store(e);
  }, // visible for testing

  /** Parse User Agent to determine iOS version. Returns -1 if not found. */
  e.On = function (t) {
    var e = t.match(/i(?:phone|pad|pod) os ([\d_]+)/i),
        n = e ? e[1].split("_").slice(0, 2).join(".") : "-1";
    return Number(n);
  }, // visible for testing

  /** Parse User Agent to determine Android version. Returns -1 if not found. */
  e.qn = function (t) {
    var e = t.match(/Android ([\d.]+)/i),
        n = e ? e[1].split(".").slice(0, 2).join(".") : "-1";
    return Number(n);
  },
  /**
   * Opens the specified database, creating or upgrading it if necessary.
   */
  e.prototype.Wn = function (e) {
    return t.__awaiter(this, void 0, void 0, function () {
      var n,
          r = this;
      return t.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return this.db ? [3
            /*break*/
            , 2] : (l("SimpleDb", "Opening database:", this.name), n = this, [4
            /*yield*/
            , new Promise(function (t, n) {
              // TODO(mikelehen): Investigate browser compatibility.
              // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB
              // suggests IE9 and older WebKit browsers handle upgrade
              // differently. They expect setVersion, as described here:
              // https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion
              var i = indexedDB.open(r.name, r.version);
              i.onsuccess = function (e) {
                var n = e.target.result;
                t(n);
              }, i.onblocked = function () {
                n(new wr(e, "Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed."));
              }, i.onerror = function (t) {
                var r = t.target.error;
                "VersionError" === r.name ? n(new c(a.FAILED_PRECONDITION, "A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.")) : n(new wr(e, r));
              }, i.onupgradeneeded = function (t) {
                l("SimpleDb", 'Database "' + r.name + '" requires upgrade from version:', t.oldVersion);
                var e = t.target.result;
                r.Mn.createOrUpgrade(e, i.transaction, t.oldVersion, r.version).next(function () {
                  l("SimpleDb", "Database upgrade to version " + r.version + " complete");
                });
              };
            })]);

          case 1:
            n.db = t.sent(), t.label = 2;

          case 2:
            return [2
            /*return*/
            , (this.jn && (this.db.onversionchange = function (t) {
              return r.jn(t);
            }), this.db)];
        }
      });
    });
  }, e.prototype.Kn = function (t) {
    this.jn = t, this.db && (this.db.onversionchange = function (e) {
      return t(e);
    });
  }, e.prototype.runTransaction = function (e, n, r, i) {
    return t.__awaiter(this, void 0, void 0, function () {
      var o, s, u, a, c;
      return t.__generator(this, function (h) {
        switch (h.label) {
          case 0:
            o = "readonly" === n, s = 0, u = function u() {
              var n, u, c, h, f;
              return t.__generator(this, function (t) {
                switch (t.label) {
                  case 0:
                    ++s, t.label = 1;

                  case 1:
                    return t.trys.push([1, 4,, 5]), [4
                    /*yield*/
                    , a.Wn(e)];

                  case 2:
                    // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to
                    // fire), but still return the original transactionFnResult back to the
                    // caller.
                    return a.db = t.sent(), n = br.open(a.db, e, o ? "readonly" : "readwrite", r), u = i(n).catch(function (t) {
                      // Abort the transaction if there was an error.
                      return n.abort(t), yr.reject(t);
                    }).Fn(), c = {}, u.catch(function () {}), [4
                    /*yield*/
                    , n.Gn];

                  case 3:
                    return [2
                    /*return*/
                    , (c.value = ( // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to
                    // fire), but still return the original transactionFnResult back to the
                    // caller.
                    t.sent(), u), c)];

                  case 4:
                    return h = t.sent(), f = "FirebaseError" !== h.name && s < 3, l("SimpleDb", "Transaction failed with error:", h.message, "Retrying:", f), a.close(), f ? [3
                    /*break*/
                    , 5] : [2
                    /*return*/
                    , {
                      value: Promise.reject(h)
                    }];

                  case 5:
                    return [2
                    /*return*/
                    ];
                }
              });
            }, a = this, h.label = 1;

          case 1:
            return [5
            /*yield**/
            , u()];

          case 2:
            if ("object" == typeof (c = h.sent())) return [2
            /*return*/
            , c.value];
            h.label = 3;

          case 3:
            return [3
            /*break*/
            , 1];

          case 4:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, e.prototype.close = function () {
    this.db && this.db.close(), this.db = void 0;
  }, e;
}(),
    mr =
/** @class */
function () {
  function t(t) {
    this.zn = t, this.Hn = !1, this.Yn = null;
  }

  return Object.defineProperty(t.prototype, "Sn", {
    get: function get() {
      return this.Hn;
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(t.prototype, "Jn", {
    get: function get() {
      return this.Yn;
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(t.prototype, "cursor", {
    set: function set(t) {
      this.zn = t;
    },
    enumerable: !1,
    configurable: !0
  }),
  /**
   * This function can be called to stop iteration at any point.
   */
  t.prototype.done = function () {
    this.Hn = !0;
  },
  /**
   * This function can be called to skip to that next key, which could be
   * an index or a primary key.
   */
  t.prototype.Xn = function (t) {
    this.Yn = t;
  },
  /**
   * Delete the current cursor value from the object store.
   *
   * NOTE: You CANNOT do this with a keysOnly query.
   */
  t.prototype.delete = function () {
    return Er(this.zn.delete());
  }, t;
}(),
    wr =
/** @class */
function (e) {
  function n(t, n) {
    var r = this;
    return (r = e.call(this, a.UNAVAILABLE, "IndexedDB transaction '" + t + "' failed: " + n) || this).name = "IndexedDbTransactionError", r;
  }

  return t.__extends(n, e), n;
}(c);
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * A helper for running delayed tasks following an exponential backoff curve
 * between attempts.
 *
 * Each delay is made up of a "base" delay which follows the exponential
 * backoff curve, and a +/- 50% "jitter" that is calculated and added to the
 * base delay. This prevents clients from accidentally synchronizing their
 * delays causing spikes of load to the backend.
 */

/** Verifies whether `e` is an IndexedDbTransactionError. */


function _r(t) {
  // Use name equality, as instanceof checks on errors don't work with errors
  // that wrap other errors.
  return "IndexedDbTransactionError" === t.name;
}
/**
 * Wraps an IDBTransaction and exposes a store() method to get a handle to a
 * specific object store.
 */


var br =
/** @class */
function () {
  function t(t, e) {
    var n = this;
    this.action = t, this.transaction = e, this.aborted = !1,
    /**
         * A promise that resolves with the result of the IndexedDb transaction.
         */
    this.Zn = new dr(), this.transaction.oncomplete = function () {
      n.Zn.resolve();
    }, this.transaction.onabort = function () {
      e.error ? n.Zn.reject(new wr(t, e.error)) : n.Zn.resolve();
    }, this.transaction.onerror = function (e) {
      var r = Nr(e.target.error);
      n.Zn.reject(new wr(t, r));
    };
  }

  return t.open = function (e, n, r, i) {
    try {
      return new t(n, e.transaction(i, r));
    } catch (e) {
      throw new wr(n, e);
    }
  }, Object.defineProperty(t.prototype, "Gn", {
    get: function get() {
      return this.Zn.promise;
    },
    enumerable: !1,
    configurable: !0
  }), t.prototype.abort = function (t) {
    t && this.Zn.reject(t), this.aborted || (l("SimpleDb", "Aborting transaction:", t ? t.message : "Client-initiated abort"), this.aborted = !0, this.transaction.abort());
  },
  /**
   * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All
   * operations performed on the SimpleDbStore happen within the context of this
   * transaction and it cannot be used anymore once the transaction is
   * completed.
   *
   * Note that we can't actually enforce that the KeyType and ValueType are
   * correct, but they allow type safety through the rest of the consuming code.
   */
  t.prototype.store = function (t) {
    var e = this.transaction.objectStore(t);
    return new Ir(e);
  }, t;
}(),
    Ir =
/** @class */
function () {
  function t(t) {
    this.store = t;
  }

  return t.prototype.put = function (t, e) {
    var n;
    return void 0 !== e ? (l("SimpleDb", "PUT", this.store.name, t, e), n = this.store.put(e, t)) : (l("SimpleDb", "PUT", this.store.name, "<auto-key>", t), n = this.store.put(t)), Er(n);
  },
  /**
   * Adds a new value into an Object Store and returns the new key. Similar to
   * IndexedDb's `add()`, this method will fail on primary key collisions.
   *
   * @param value The object to write.
   * @return The key of the value to add.
   */
  t.prototype.add = function (t) {
    return l("SimpleDb", "ADD", this.store.name, t, t), Er(this.store.add(t));
  },
  /**
   * Gets the object with the specified key from the specified store, or null
   * if no object exists with the specified key.
   *
   * @key The key of the object to get.
   * @return The object with the specified key or null if no object exists.
   */
  t.prototype.get = function (t) {
    var e = this; // We're doing an unsafe cast to ValueType.
    // eslint-disable-next-line @typescript-eslint/no-explicit-any

    return Er(this.store.get(t)).next(function (n) {
      // Normalize nonexistence to null.
      return void 0 === n && (n = null), l("SimpleDb", "GET", e.store.name, t, n), n;
    });
  }, t.prototype.delete = function (t) {
    return l("SimpleDb", "DELETE", this.store.name, t), Er(this.store.delete(t));
  },
  /**
   * If we ever need more of the count variants, we can add overloads. For now,
   * all we need is to count everything in a store.
   *
   * Returns the number of rows in the store.
   */
  t.prototype.count = function () {
    return l("SimpleDb", "COUNT", this.store.name), Er(this.store.count());
  }, t.prototype.ts = function (t, e) {
    var n = this.cursor(this.options(t, e)),
        r = [];
    return this.es(n, function (t, e) {
      r.push(e);
    }).next(function () {
      return r;
    });
  }, t.prototype.ns = function (t, e) {
    l("SimpleDb", "DELETE ALL", this.store.name);
    var n = this.options(t, e);
    n.ss = !1;
    var r = this.cursor(n);
    return this.es(r, function (t, e, n) {
      return n.delete();
    });
  }, t.prototype.rs = function (t, e) {
    var n;
    e ? n = t : (n = {}, e = t);
    var r = this.cursor(n);
    return this.es(r, e);
  },
  /**
   * Iterates over a store, but waits for the given callback to complete for
   * each entry before iterating the next entry. This allows the callback to do
   * asynchronous work to determine if this iteration should continue.
   *
   * The provided callback should return `true` to continue iteration, and
   * `false` otherwise.
   */
  t.prototype.os = function (t) {
    var e = this.cursor({});
    return new yr(function (n, r) {
      e.onerror = function (t) {
        var e = Nr(t.target.error);
        r(e);
      }, e.onsuccess = function (e) {
        var r = e.target.result;
        r ? t(r.primaryKey, r.value).next(function (t) {
          t ? r.continue() : n();
        }) : n();
      };
    });
  }, t.prototype.es = function (t, e) {
    var n = [];
    return new yr(function (r, i) {
      t.onerror = function (t) {
        i(t.target.error);
      }, t.onsuccess = function (t) {
        var i = t.target.result;

        if (i) {
          var o = new mr(i),
              s = e(i.primaryKey, i.value, o);

          if (s instanceof yr) {
            var u = s.catch(function (t) {
              return o.done(), yr.reject(t);
            });
            n.push(u);
          }

          o.Sn ? r() : null === o.Jn ? i.continue() : i.continue(o.Jn);
        } else r();
      };
    }).next(function () {
      return yr.$n(n);
    });
  }, t.prototype.options = function (t, e) {
    var n = void 0;
    return void 0 !== t && ("string" == typeof t ? n = t : e = t), {
      index: n,
      range: e
    };
  }, t.prototype.cursor = function (t) {
    var e = "next";

    if (t.reverse && (e = "prev"), t.index) {
      var n = this.store.index(t.index);
      return t.ss ? n.openKeyCursor(t.range, e) : n.openCursor(t.range, e);
    }

    return this.store.openCursor(t.range, e);
  }, t;
}();
/**
 * A wrapper around an IDBObjectStore providing an API that:
 *
 * 1) Has generic KeyType / ValueType parameters to provide strongly-typed
 * methods for acting against the object store.
 * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every
 * method return a PersistencePromise instead.
 * 3) Provides a higher-level API to avoid needing to do excessive wrapping of
 * intermediate IndexedDB types (IDBCursorWithValue, etc.)
 */

/**
 * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror
 * handlers to resolve / reject the PersistencePromise as appropriate.
 */


function Er(t) {
  return new yr(function (e, n) {
    t.onsuccess = function (t) {
      var n = t.target.result;
      e(n);
    }, t.onerror = function (t) {
      var e = Nr(t.target.error);
      n(e);
    };
  });
} // Guard so we only report the error once.


var Tr = !1;

function Nr(t) {
  var e = gr.On(r.getUA());

  if (e >= 12.2 && e < 13) {
    var n = "An internal error was encountered in the Indexed Database server";

    if (t.message.indexOf(n) >= 0) {
      // Wrap error in a more descriptive one.
      var i = new c("internal", "IOS_INDEXEDDB_BUG1: IndexedDb has thrown '" + n + "'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.");
      return Tr || (Tr = !0, // Throw a global exception outside of this promise chain, for the user to
      // potentially catch.
      setTimeout(function () {
        throw i;
      }, 0)), i;
    }
  }

  return t;
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** The Platform's 'window' implementation or null if not available. */


function Ar() {
  // `window` is not always available, e.g. in ReactNative and WebWorkers.
  // eslint-disable-next-line no-restricted-globals
  return "undefined" != typeof window ? window : null;
}
/** The Platform's 'document' implementation or null if not available. */


function Sr() {
  // `document` is not always available, e.g. in ReactNative and WebWorkers.
  // eslint-disable-next-line no-restricted-globals
  return "undefined" != typeof document ? document : null;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Represents an operation scheduled to be run in the future on an AsyncQueue.
 *
 * It is created via DelayedOperation.createAndSchedule().
 *
 * Supports cancellation (via cancel()) and early execution (via skipDelay()).
 *
 * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type
 * in newer versions of TypeScript defines `finally`, which is not available in
 * IE.
 */


var Dr =
/** @class */
function () {
  function t(t, e, n, r, i) {
    this.cs = t, this.dn = e, this.us = n, this.op = r, this.hs = i, this.ls = new dr(), this.then = this.ls.promise.then.bind(this.ls.promise), // It's normal for the deferred promise to be canceled (due to cancellation)
    // and so we attach a dummy catch callback to avoid
    // 'UnhandledPromiseRejectionWarning' log spam.
    this.ls.promise.catch(function (t) {});
  }

  return t._s = function (e, n, r, i, o) {
    var s = new t(e, n, Date.now() + r, i, o);
    return s.start(r), s;
  },
  /**
   * Starts the timer. This is called immediately after construction by
   * createAndSchedule().
   */
  t.prototype.start = function (t) {
    var e = this;
    this.fs = setTimeout(function () {
      return e.ds();
    }, t);
  },
  /**
   * Queues the operation to run immediately (if it hasn't already been run or
   * canceled).
   */
  t.prototype.pn = function () {
    return this.ds();
  },
  /**
   * Cancels the operation if it hasn't already been executed or canceled. The
   * promise will be rejected.
   *
   * As long as the operation has not yet been run, calling cancel() provides a
   * guarantee that the operation will not be run.
   */
  t.prototype.cancel = function (t) {
    null !== this.fs && (this.clearTimeout(), this.ls.reject(new c(a.CANCELLED, "Operation cancelled" + (t ? ": " + t : ""))));
  }, t.prototype.ds = function () {
    var t = this;
    this.cs.ws(function () {
      return null !== t.fs ? (t.clearTimeout(), t.op().then(function (e) {
        return t.ls.resolve(e);
      })) : Promise.resolve();
    });
  }, t.prototype.clearTimeout = function () {
    null !== this.fs && (this.hs(this), clearTimeout(this.fs), this.fs = null);
  }, t;
}(),
    xr =
/** @class */
function () {
  function e() {
    var t = this; // The last promise in the queue.

    this.Ts = Promise.resolve(), // A list of retryable operations. Retryable operations are run in order and
    // retried with backoff.
    this.Es = [], // Is this AsyncQueue being shut down? Once it is set to true, it will not
    // be changed again.
    this.Is = !1, // Operations scheduled to be queued in the future. Operations are
    // automatically removed after they are run or canceled.
    this.As = [], // visible for testing
    this.Rs = null, // Flag set while there's an outstanding AsyncQueue operation, used for
    // assertion sanity-checks.
    this.gs = !1, // List of TimerIds to fast-forward delays for.
    this.Ps = [], // Backoff timer used to schedule retries for retryable operations
    this.ys = new vr(this, "async_queue_retry"
    /* AsyncQueueRetry */
    ), // Visibility handler that triggers an immediate retry of all retryable
    // operations. Meant to speed up recovery when we regain file system access
    // after page comes into foreground.
    this.Vs = function () {
      var e = Sr();
      e && l("AsyncQueue", "Visibility state changed to  ", e.visibilityState), t.ys.Vn();
    };
    var e = Sr();
    e && "function" == typeof e.addEventListener && e.addEventListener("visibilitychange", this.Vs);
  }

  return Object.defineProperty(e.prototype, "ps", {
    // Is this AsyncQueue being shut down? If true, this instance will not enqueue
    // any new operations, Promises from enqueue requests will not resolve.
    get: function get() {
      return this.Is;
    },
    enumerable: !1,
    configurable: !0
  }),
  /**
   * Adds a new operation to the queue without waiting for it to complete (i.e.
   * we ignore the Promise result).
   */
  e.prototype.ws = function (t) {
    // eslint-disable-next-line @typescript-eslint/no-floating-promises
    this.enqueue(t);
  },
  /**
   * Regardless if the queue has initialized shutdown, adds a new operation to the
   * queue without waiting for it to complete (i.e. we ignore the Promise result).
   */
  e.prototype.bs = function (t) {
    this.vs(), // eslint-disable-next-line @typescript-eslint/no-floating-promises
    this.Ss(t);
  },
  /**
   * Initialize the shutdown of this queue. Once this method is called, the
   * only possible way to request running an operation is through
   * `enqueueEvenWhileRestricted()`.
   */
  e.prototype.Ds = function () {
    if (!this.Is) {
      this.Is = !0;
      var t = Sr();
      t && "function" == typeof t.removeEventListener && t.removeEventListener("visibilitychange", this.Vs);
    }
  },
  /**
   * Adds a new operation to the queue. Returns a promise that will be resolved
   * when the promise returned by the new operation is (with its value).
   */
  e.prototype.enqueue = function (t) {
    return this.vs(), this.Is ? new Promise(function (t) {}) : this.Ss(t);
  },
  /**
   * Enqueue a retryable operation.
   *
   * A retryable operation is rescheduled with backoff if it fails with a
   * IndexedDbTransactionError (the error type used by SimpleDb). All
   * retryable operations are executed in order and only run if all prior
   * operations were retried successfully.
   */
  e.prototype.Cs = function (t) {
    var e = this;
    this.ws(function () {
      return e.Es.push(t), e.Ns();
    });
  },
  /**
   * Runs the next operation from the retryable queue. If the operation fails,
   * reschedules with backoff.
   */
  e.prototype.Ns = function () {
    return t.__awaiter(this, void 0, void 0, function () {
      var e,
          n = this;
      return t.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            if (0 === this.Es.length) return [3
            /*break*/
            , 5];
            t.label = 1;

          case 1:
            return t.trys.push([1, 3,, 4]), [4
            /*yield*/
            , this.Es[0]()];

          case 2:
            return t.sent(), this.Es.shift(), this.ys.reset(), [3
            /*break*/
            , 4];

          case 3:
            if (!_r(e = t.sent())) throw e; // Failure will be handled by AsyncQueue

            return l("AsyncQueue", "Operation failed with retryable error: " + e), [3
            /*break*/
            , 4];

          case 4:
            this.Es.length > 0 && // If there are additional operations, we re-schedule `retryNextOp()`.
            // This is necessary to run retryable operations that failed during
            // their initial attempt since we don't know whether they are already
            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`
            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the
            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the
            // call scheduled here.
            // Since `backoffAndRun()` cancels an existing backoff and schedules a
            // new backoff on every call, there is only ever a single additional
            // operation in the queue.
            this.ys.gn(function () {
              return n.Ns();
            }), t.label = 5;

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, e.prototype.Ss = function (t) {
    var e = this,
        n = this.Ts.then(function () {
      return e.gs = !0, t().catch(function (t) {
        // Re-throw the error so that this.tail becomes a rejected Promise and
        // all further attempts to chain (via .then) will just short-circuit
        // and return the rejected Promise.
        throw e.Rs = t, e.gs = !1, p("INTERNAL UNHANDLED ERROR: ",
        /**
        * Chrome includes Error.message in Error.stack. Other browsers do not.
        * This returns expected output of message + stack when available.
        * @param error Error or FirestoreError
        */
        function (t) {
          var e = t.message || "";
          return t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + "\n" + t.stack), e;
        }(t)), t;
      }).then(function (t) {
        return e.gs = !1, t;
      });
    });
    return this.Ts = n, n;
  },
  /**
   * Schedules an operation to be queued on the AsyncQueue once the specified
   * `delayMs` has elapsed. The returned DelayedOperation can be used to cancel
   * or fast-forward the operation prior to its running.
   */
  e.prototype.yn = function (t, e, n) {
    var r = this;
    this.vs(), // Fast-forward delays for timerIds that have been overriden.
    this.Ps.indexOf(t) > -1 && (e = 0);

    var i = Dr._s(this, t, e, n, function (t) {
      return r.Fs(t);
    });

    return this.As.push(i), i;
  }, e.prototype.vs = function () {
    this.Rs && y();
  },
  /**
   * Verifies there's an operation currently in-progress on the AsyncQueue.
   * Unfortunately we can't verify that the running code is in the promise chain
   * of that operation, so this isn't a foolproof check, but it should be enough
   * to catch some bugs.
   */
  e.prototype.xs = function () {},
  /**
   * Waits until all currently queued tasks are finished executing. Delayed
   * operations are not run.
   */
  e.prototype.$s = function () {
    return t.__awaiter(this, void 0, void 0, function () {
      var e;
      return t.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return [4
            /*yield*/
            , e = this.Ts];

          case 1:
            t.sent(), t.label = 2;

          case 2:
            if (e !== this.Ts) return [3
            /*break*/
            , 0];
            t.label = 3;

          case 3:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * For Tests: Determine if a delayed operation with a particular TimerId
   * exists.
   */
  e.prototype.ks = function (t) {
    for (var e = 0, n = this.As; e < n.length; e++) {
      if (n[e].dn === t) return !0;
    }

    return !1;
  },
  /**
   * For Tests: Runs some or all delayed operations early.
   *
   * @param lastTimerId Delayed operations up to and including this TimerId will
   *  be drained. Pass TimerId.All to run all delayed operations.
   * @returns a Promise that resolves once all operations have been run.
   */
  e.prototype.Ms = function (t) {
    var e = this; // Note that draining may generate more delayed ops, so we do that first.

    return this.$s().then(function () {
      // Run ops in the same order they'd run if they ran naturally.
      e.As.sort(function (t, e) {
        return t.us - e.us;
      });

      for (var n = 0, r = e.As; n < r.length; n++) {
        var i = r[n];
        if (i.pn(), "all"
        /* All */
        !== t && i.dn === t) break;
      }

      return e.$s();
    });
  },
  /**
   * For Tests: Skip all subsequent delays for a timer id.
   */
  e.prototype.Os = function (t) {
    this.Ps.push(t);
  },
  /** Called once a DelayedOperation is run or canceled. */
  e.prototype.Fs = function (t) {
    // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.
    var e = this.As.indexOf(t);
    this.As.splice(e, 1);
  }, e;
}();
/**
 * Returns a FirestoreError that can be surfaced to the user if the provided
 * error is an IndexedDbTransactionError. Re-throws the error otherwise.
 */


function Lr(t, e) {
  if (p("AsyncQueue", e + ": " + t), _r(t)) return new c(a.UNAVAILABLE, e + ": " + t);
  throw t;
}

var kr = function kr() {
  this.Ls = void 0, this.listeners = [];
},
    Rr = function Rr() {
  this.Bs = new it(function (t) {
    return Hn(t);
  }, Qn), this.onlineState = "Unknown"
  /* Unknown */
  , this.qs = new Set();
};

function Or(e, n) {
  return t.__awaiter(this, void 0, void 0, function () {
    var r, i, o, s, u, a, c;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          if (r = m(e), i = n.query, o = !1, (s = r.Bs.get(i)) || (o = !0, s = new kr()), !o) return [3
          /*break*/
          , 4];
          t.label = 1;

        case 1:
          return t.trys.push([1, 3,, 4]), u = s, [4
          /*yield*/
          , r.Us(i)];

        case 2:
          return u.Ls = t.sent(), [3
          /*break*/
          , 4];

        case 3:
          return a = t.sent(), c = Lr(a, "Initialization of query '" + Yn(n.query) + "' failed"), [2
          /*return*/
          , void n.onError(c)];

        case 4:
          return r.Bs.set(i, s), s.listeners.push(n), // Run global snapshot listeners if a consistent snapshot has been emitted.
          n.Qs(r.onlineState), s.Ls && n.Ws(s.Ls) && Cr(r), [2
          /*return*/
          ];
      }
    });
  });
}

function Pr(e, n) {
  return t.__awaiter(this, void 0, void 0, function () {
    var r, i, o, s, u;
    return t.__generator(this, function (t) {
      return r = m(e), i = n.query, o = !1, (s = r.Bs.get(i)) && (u = s.listeners.indexOf(n)) >= 0 && (s.listeners.splice(u, 1), o = 0 === s.listeners.length), o ? [2
      /*return*/
      , (r.Bs.delete(i), r.js(i))] : [2
      /*return*/
      ];
    });
  });
}

function Vr(t, e) {
  for (var n = m(t), r = !1, i = 0, o = e; i < o.length; i++) {
    var s = o[i],
        u = s.query,
        a = n.Bs.get(u);

    if (a) {
      for (var c = 0, h = a.listeners; c < h.length; c++) {
        h[c].Ws(s) && (r = !0);
      }

      a.Ls = s;
    }
  }

  r && Cr(n);
}

function Ur(t, e, n) {
  var r = m(t),
      i = r.Bs.get(e);
  if (i) for (var o = 0, s = i.listeners; o < s.length; o++) {
    s[o].onError(n);
  } // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()
  // after an error.

  r.Bs.delete(e);
} // Call all global snapshot listeners that have been set.


function Cr(t) {
  t.qs.forEach(function (t) {
    t.next();
  });
}
/**
 * QueryListener takes a series of internal view snapshots and determines
 * when to raise the event.
 *
 * It uses an Observer to dispatch events.
 */


var Fr =
/** @class */
function () {
  function t(t, e, n) {
    this.query = t, this.Ks = e,
    /**
         * Initial snapshots (e.g. from cache) may not be propagated to the wrapped
         * observer. This flag is set to true once we've actually raised an event.
         */
    this.Gs = !1, this.zs = null, this.onlineState = "Unknown"
    /* Unknown */
    , this.options = n || {};
  }

  return t.prototype.Ws = function (t) {
    if (!this.options.includeMetadataChanges) {
      for ( // Remove the metadata only changes.
      var e = [], n = 0, r = t.docChanges; n < r.length; n++) {
        var i = r[n];
        3
        /* Metadata */
        !== i.type && e.push(i);
      }

      t = new Ft(t.query, t.docs, t.Qt, e, t.Wt, t.fromCache, t.jt,
      /* excludesMetadataChanges= */
      !0);
    }

    var o = !1;
    return this.Gs ? this.Hs(t) && (this.Ks.next(t), o = !0) : this.Ys(t, this.onlineState) && (this.Js(t), o = !0), this.zs = t, o;
  }, t.prototype.onError = function (t) {
    this.Ks.error(t);
  },
  /** Returns whether a snapshot was raised. */
  t.prototype.Qs = function (t) {
    this.onlineState = t;
    var e = !1;
    return this.zs && !this.Gs && this.Ys(this.zs, t) && (this.Js(this.zs), e = !0), e;
  }, t.prototype.Ys = function (t, e) {
    // Always raise the first event when we're synced
    if (!t.fromCache) return !0; // NOTE: We consider OnlineState.Unknown as online (it should become Offline
    // or Online if we wait long enough).

    var n = "Offline"
    /* Offline */
    !== e; // Don't raise the event if we're online, aren't synced yet (checked
    // above) and are waiting for a sync.

    return !(this.options.Xs && n || t.docs.m() && "Offline"
    /* Offline */
    !== e); // Raise data from cache if we have any documents or we are offline
  }, t.prototype.Hs = function (t) {
    // We don't need to handle includeDocumentMetadataChanges here because
    // the Metadata only changes have already been stripped out if needed.
    // At this point the only changes we will see are the ones we should
    // propagate.
    if (t.docChanges.length > 0) return !0;
    var e = this.zs && this.zs.hasPendingWrites !== t.hasPendingWrites;
    return !(!t.jt && !e) && !0 === this.options.includeMetadataChanges; // Generally we should have hit one of the cases above, but it's possible
    // to get here if there were only metadata docChanges and they got
    // stripped out.
  }, t.prototype.Js = function (t) {
    t = Ft.Gt(t.query, t.docs, t.Wt, t.fromCache), this.Gs = !0, this.Ks.next(t);
  }, t;
}(),
    Mr =
/** @class */
function () {
  function t(t) {
    this.uid = t;
  }

  return t.prototype.Zs = function () {
    return null != this.uid;
  },
  /**
   * Returns a key representing this user, suitable for inclusion in a
   * dictionary.
   */
  t.prototype.ti = function () {
    return this.Zs() ? "uid:" + this.uid : "anonymous-user";
  }, t.prototype.isEqual = function (t) {
    return t.uid === this.uid;
  }, t;
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Simple wrapper around a nullable UID. Mostly exists to make code more
 * readable.
 */

/** A user with a null UID. */


Mr.UNAUTHENTICATED = new Mr(null), // TODO(mikelehen): Look into getting a proper uid-equivalent for
// non-FirebaseAuth providers.
Mr.ei = new Mr("google-credentials-uid"), Mr.ni = new Mr("first-party-uid");
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * `ListenSequence` is a monotonic sequence. It is initialized with a minimum value to
 * exceed. All subsequent calls to next will return increasing values. If provided with a
 * `SequenceNumberSyncer`, it will additionally bump its next value when told of a new value, as
 * well as write out sequence numbers that it produces via `next()`.
 */

var qr =
/** @class */
function () {
  function t(t, e) {
    var n = this;
    this.previousValue = t, e && (e.si = function (t) {
      return n.ii(t);
    }, this.ri = function (t) {
      return e.oi(t);
    });
  }

  return t.prototype.ii = function (t) {
    return this.previousValue = Math.max(t, this.previousValue), this.previousValue;
  }, t.prototype.next = function () {
    var t = ++this.previousValue;
    return this.ri && this.ri(t), t;
  }, t;
}();
/** Assembles the key for a client state in WebStorage */


function jr(t, e) {
  return "firestore_clients_" + t + "_" + e;
} // The format of the WebStorage key that stores the mutation state is:
//     firestore_mutations_<persistence_prefix>_<batch_id>
//     (for unauthenticated users)
// or: firestore_mutations_<persistence_prefix>_<batch_id>_<user_uid>
// 'user_uid' is last to avoid needing to escape '_' characters that it might
// contain.

/** Assembles the key for a mutation batch in WebStorage */


function Gr(t, e, n) {
  var r = "firestore_mutations_" + t + "_" + n;
  return e.Zs() && (r += "_" + e.uid), r;
} // The format of the WebStorage key that stores a query target's metadata is:
//     firestore_targets_<persistence_prefix>_<target_id>

/** Assembles the key for a query state in WebStorage */


function zr(t, e) {
  return "firestore_targets_" + t + "_" + e;
} // The WebStorage prefix that stores the primary tab's online state. The
// format of the key is:
//     firestore_online_state_<persistence_prefix>

/**
 * Holds the state of a mutation batch, including its user ID, batch ID and
 * whether the batch is 'pending', 'acknowledged' or 'rejected'.
 */
// Visible for testing


qr.ai = -1;

var Br =
/** @class */
function () {
  function t(t, e, n, r) {
    this.user = t, this.batchId = e, this.state = n, this.error = r;
  }

  return t.ci = function (e, n, r) {
    var i = JSON.parse(r),
        o = "object" == typeof i && -1 !== ["pending", "acknowledged", "rejected"].indexOf(i.state) && (void 0 === i.error || "object" == typeof i.error),
        s = void 0;
    return o && i.error && (o = "string" == typeof i.error.message && "string" == typeof i.error.code) && (s = new c(i.error.code, i.error.message)), o ? new t(e, n, i.state, s) : (p("SharedClientState", "Failed to parse mutation state for ID '" + n + "': " + r), null);
  }, t.prototype.ui = function () {
    var t = {
      state: this.state,
      updateTimeMs: Date.now()
    };
    return this.error && (t.error = {
      code: this.error.code,
      message: this.error.message
    }), JSON.stringify(t);
  }, t;
}(),
    Wr =
/** @class */
function () {
  function t(t, e, n) {
    this.targetId = t, this.state = e, this.error = n;
  }

  return t.ci = function (e, n) {
    var r = JSON.parse(n),
        i = "object" == typeof r && -1 !== ["not-current", "current", "rejected"].indexOf(r.state) && (void 0 === r.error || "object" == typeof r.error),
        o = void 0;
    return i && r.error && (i = "string" == typeof r.error.message && "string" == typeof r.error.code) && (o = new c(r.error.code, r.error.message)), i ? new t(e, r.state, o) : (p("SharedClientState", "Failed to parse target state for ID '" + e + "': " + n), null);
  }, t.prototype.ui = function () {
    var t = {
      state: this.state,
      updateTimeMs: Date.now()
    };
    return this.error && (t.error = {
      code: this.error.code,
      message: this.error.message
    }), JSON.stringify(t);
  }, t;
}(),
    Kr =
/** @class */
function () {
  function t(t, e) {
    this.clientId = t, this.activeTargetIds = e;
  }

  return t.ci = function (e, n) {
    for (var r = JSON.parse(n), i = "object" == typeof r && r.activeTargetIds instanceof Array, o = Vt(), s = 0; i && s < r.activeTargetIds.length; ++s) {
      i = ct(r.activeTargetIds[s]), o = o.add(r.activeTargetIds[s]);
    }

    return i ? new t(e, o) : (p("SharedClientState", "Failed to parse client data for instance '" + e + "': " + n), null);
  }, t;
}(),
    Qr =
/** @class */
function () {
  function t(t, e) {
    this.clientId = t, this.onlineState = e;
  }

  return t.ci = function (e) {
    var n = JSON.parse(e);
    return "object" == typeof n && -1 !== ["Unknown", "Online", "Offline"].indexOf(n.onlineState) && "string" == typeof n.clientId ? new t(n.clientId, n.onlineState) : (p("SharedClientState", "Failed to parse online state: " + e), null);
  }, t;
}(),
    Hr =
/** @class */
function () {
  function t() {
    this.activeTargetIds = Vt();
  }

  return t.prototype.hi = function (t) {
    this.activeTargetIds = this.activeTargetIds.add(t);
  }, t.prototype.li = function (t) {
    this.activeTargetIds = this.activeTargetIds.delete(t);
  },
  /**
   * Converts this entry into a JSON-encoded format we can use for WebStorage.
   * Does not encode `clientId` as it is part of the key in WebStorage.
   */
  t.prototype.ui = function () {
    var t = {
      activeTargetIds: this.activeTargetIds.A(),
      updateTimeMs: Date.now()
    };
    return JSON.stringify(t);
  }, t;
}(),
    Yr =
/** @class */
function () {
  function e(t, e, n, r, i) {
    this.window = t, this.fn = e, this.persistenceKey = n, this._i = r, this.fi = null, this.di = null, this.si = null, this.wi = this.mi.bind(this), this.Ti = new bt(H), this.Ei = !1,
    /**
         * Captures WebStorage events that occur before `start()` is called. These
         * events are replayed once `WebStorageSharedClientState` is started.
         */
    this.Ii = []; // Escape the special characters mentioned here:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions

    var o = n.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    this.storage = this.window.localStorage, this.currentUser = i, this.Ai = jr(this.persistenceKey, this._i), this.Ri =
    /** Assembles the key for the current sequence number. */
    function (t) {
      return "firestore_sequence_number_" + t;
    }(this.persistenceKey), this.Ti = this.Ti.ot(this._i, new Hr()), this.gi = new RegExp("^firestore_clients_" + o + "_([^_]*)$"), this.Pi = new RegExp("^firestore_mutations_" + o + "_(\\d+)(?:_(.*))?$"), this.yi = new RegExp("^firestore_targets_" + o + "_(\\d+)$"), this.Vi =
    /** Assembles the key for the online state of the primary tab. */
    function (t) {
      return "firestore_online_state_" + t;
    }(this.persistenceKey), // Rather than adding the storage observer during start(), we add the
    // storage observer during initialization. This ensures that we collect
    // events before other components populate their initial state (during their
    // respective start() calls). Otherwise, we might for example miss a
    // mutation that is added after LocalStore's start() processed the existing
    // mutations but before we observe WebStorage events.
    this.window.addEventListener("storage", this.wi);
  }
  /** Returns 'true' if WebStorage is available in the current environment. */


  return e.Ln = function (t) {
    return !(!t || !t.localStorage);
  }, e.prototype.start = function () {
    return t.__awaiter(this, void 0, void 0, function () {
      var e,
          n,
          r,
          i,
          o,
          s,
          u,
          a,
          c,
          h,
          f,
          l = this;
      return t.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return [4
            /*yield*/
            , this.fi.pi()];

          case 1:
            for (e = t.sent(), n = 0, r = e; n < r.length; n++) {
              (i = r[n]) !== this._i && (o = this.getItem(jr(this.persistenceKey, i))) && (s = Kr.ci(i, o)) && (this.Ti = this.Ti.ot(s.clientId, s));
            }

            for (this.bi(), (u = this.storage.getItem(this.Vi)) && (a = this.vi(u)) && this.Si(a), c = 0, h = this.Ii; c < h.length; c++) {
              f = h[c], this.mi(f);
            }

            return this.Ii = [], // Register a window unload hook to remove the client metadata entry from
            // WebStorage even if `shutdown()` was not called.
            this.window.addEventListener("unload", function () {
              return l.Di();
            }), this.Ei = !0, [2
            /*return*/
            ];
        }
      });
    });
  }, e.prototype.oi = function (t) {
    this.setItem(this.Ri, JSON.stringify(t));
  }, e.prototype.Ci = function () {
    return this.Ni(this.Ti);
  }, e.prototype.Fi = function (t) {
    var e = !1;
    return this.Ti.forEach(function (n, r) {
      r.activeTargetIds.has(t) && (e = !0);
    }), e;
  }, e.prototype.xi = function (t) {
    this.$i(t, "pending");
  }, e.prototype.ki = function (t, e, n) {
    this.$i(t, e, n), // Once a final mutation result is observed by other clients, they no longer
    // access the mutation's metadata entry. Since WebStorage replays events
    // in order, it is safe to delete the entry right after updating it.
    this.Mi(t);
  }, e.prototype.Oi = function (t) {
    var e = "not-current"; // Lookup an existing query state if the target ID was already registered
    // by another tab

    if (this.Fi(t)) {
      var n = this.storage.getItem(zr(this.persistenceKey, t));

      if (n) {
        var r = Wr.ci(t, n);
        r && (e = r.state);
      }
    }

    return this.Li.hi(t), this.bi(), e;
  }, e.prototype.Bi = function (t) {
    this.Li.li(t), this.bi();
  }, e.prototype.qi = function (t) {
    return this.Li.activeTargetIds.has(t);
  }, e.prototype.Ui = function (t) {
    this.removeItem(zr(this.persistenceKey, t));
  }, e.prototype.Qi = function (t, e, n) {
    this.Wi(t, e, n);
  }, e.prototype.ji = function (t, e, n) {
    var r = this;
    e.forEach(function (t) {
      r.Mi(t);
    }), this.currentUser = t, n.forEach(function (t) {
      r.xi(t);
    });
  }, e.prototype.Ki = function (t) {
    this.Gi(t);
  }, e.prototype.Di = function () {
    this.Ei && (this.window.removeEventListener("storage", this.wi), this.removeItem(this.Ai), this.Ei = !1);
  }, e.prototype.getItem = function (t) {
    var e = this.storage.getItem(t);
    return l("SharedClientState", "READ", t, e), e;
  }, e.prototype.setItem = function (t, e) {
    l("SharedClientState", "SET", t, e), this.storage.setItem(t, e);
  }, e.prototype.removeItem = function (t) {
    l("SharedClientState", "REMOVE", t), this.storage.removeItem(t);
  }, e.prototype.mi = function (e) {
    var n = this,
        r = e; // Note: The function is typed to take Event to be interface-compatible with
    // `Window.addEventListener`.

    if (r.storageArea === this.storage) {
      if (l("SharedClientState", "EVENT", r.key, r.newValue), r.key === this.Ai) return void p("Received WebStorage notification for local change. Another client might have garbage-collected our state");
      this.fn.Cs(function () {
        return t.__awaiter(n, void 0, void 0, function () {
          var e, n, i, o, s, u;
          return t.__generator(this, function (t) {
            if (this.Ei) {
              if (null !== r.key) if (this.gi.test(r.key)) {
                if (null == r.newValue) return e = this.zi(r.key), [2
                /*return*/
                , this.Hi(e, null)];
                if (n = this.Yi(r.key, r.newValue)) return [2
                /*return*/
                , this.Hi(n.clientId, n)];
              } else if (this.Pi.test(r.key)) {
                if (null !== r.newValue && (i = this.Ji(r.key, r.newValue))) return [2
                /*return*/
                , this.Xi(i)];
              } else if (this.yi.test(r.key)) {
                if (null !== r.newValue && (o = this.Zi(r.key, r.newValue))) return [2
                /*return*/
                , this.tr(o)];
              } else if (r.key === this.Vi) {
                if (null !== r.newValue && (s = this.vi(r.newValue))) return [2
                /*return*/
                , this.Si(s)];
              } else r.key === this.Ri && (u = function (t) {
                var e = qr.ai;
                if (null != t) try {
                  var n = JSON.parse(t);
                  g("number" == typeof n), e = n;
                } catch (t) {
                  p("SharedClientState", "Failed to read sequence number from WebStorage", t);
                }
                return e;
              }(r.newValue)) !== qr.ai && this.si(u);
            } else this.Ii.push(r);

            return [2
            /*return*/
            ];
          });
        });
      });
    }
  }, Object.defineProperty(e.prototype, "Li", {
    get: function get() {
      return this.Ti.get(this._i);
    },
    enumerable: !1,
    configurable: !0
  }), e.prototype.bi = function () {
    this.setItem(this.Ai, this.Li.ui());
  }, e.prototype.$i = function (t, e, n) {
    var r = new Br(this.currentUser, t, e, n),
        i = Gr(this.persistenceKey, this.currentUser, t);
    this.setItem(i, r.ui());
  }, e.prototype.Mi = function (t) {
    var e = Gr(this.persistenceKey, this.currentUser, t);
    this.removeItem(e);
  }, e.prototype.Gi = function (t) {
    var e = {
      clientId: this._i,
      onlineState: t
    };
    this.storage.setItem(this.Vi, JSON.stringify(e));
  }, e.prototype.Wi = function (t, e, n) {
    var r = zr(this.persistenceKey, t),
        i = new Wr(t, e, n);
    this.setItem(r, i.ui());
  },
  /**
   * Parses a client state key in WebStorage. Returns null if the key does not
   * match the expected key format.
   */
  e.prototype.zi = function (t) {
    var e = this.gi.exec(t);
    return e ? e[1] : null;
  },
  /**
   * Parses a client state in WebStorage. Returns 'null' if the value could not
   * be parsed.
   */
  e.prototype.Yi = function (t, e) {
    var n = this.zi(t);
    return Kr.ci(n, e);
  },
  /**
   * Parses a mutation batch state in WebStorage. Returns 'null' if the value
   * could not be parsed.
   */
  e.prototype.Ji = function (t, e) {
    var n = this.Pi.exec(t),
        r = Number(n[1]),
        i = void 0 !== n[2] ? n[2] : null;
    return Br.ci(new Mr(i), r, e);
  },
  /**
   * Parses a query target state from WebStorage. Returns 'null' if the value
   * could not be parsed.
   */
  e.prototype.Zi = function (t, e) {
    var n = this.yi.exec(t),
        r = Number(n[1]);
    return Wr.ci(r, e);
  },
  /**
   * Parses an online state from WebStorage. Returns 'null' if the value
   * could not be parsed.
   */
  e.prototype.vi = function (t) {
    return Qr.ci(t);
  }, e.prototype.Xi = function (e) {
    return t.__awaiter(this, void 0, void 0, function () {
      return t.__generator(this, function (t) {
        return e.user.uid === this.currentUser.uid ? [2
        /*return*/
        , this.fi.er(e.batchId, e.state, e.error)] : (l("SharedClientState", "Ignoring mutation for non-active user " + e.user.uid), [2
        /*return*/
        ]);
      });
    });
  }, e.prototype.tr = function (t) {
    return this.fi.nr(t.targetId, t.state, t.error);
  }, e.prototype.Hi = function (t, e) {
    var n = this,
        r = e ? this.Ti.ot(t, e) : this.Ti.remove(t),
        i = this.Ni(this.Ti),
        o = this.Ni(r),
        s = [],
        u = [];
    return o.forEach(function (t) {
      i.has(t) || s.push(t);
    }), i.forEach(function (t) {
      o.has(t) || u.push(t);
    }), this.fi.sr(s, u).then(function () {
      n.Ti = r;
    });
  }, e.prototype.Si = function (t) {
    // We check whether the client that wrote this online state is still active
    // by comparing its client ID to the list of clients kept active in
    // IndexedDb. If a client does not update their IndexedDb client state
    // within 5 seconds, it is considered inactive and we don't emit an online
    // state event.
    this.Ti.get(t.clientId) && this.di(t.onlineState);
  }, e.prototype.Ni = function (t) {
    var e = Vt();
    return t.forEach(function (t, n) {
      e = e.kt(n.activeTargetIds);
    }), e;
  }, e;
}(),
    $r =
/** @class */
function () {
  function t() {
    this.ir = new Hr(), this.rr = {}, this.di = null, this.si = null;
  }

  return t.prototype.xi = function (t) {// No op.
  }, t.prototype.ki = function (t, e, n) {// No op.
  }, t.prototype.Oi = function (t) {
    return this.ir.hi(t), this.rr[t] || "not-current";
  }, t.prototype.Qi = function (t, e, n) {
    this.rr[t] = e;
  }, t.prototype.Bi = function (t) {
    this.ir.li(t);
  }, t.prototype.qi = function (t) {
    return this.ir.activeTargetIds.has(t);
  }, t.prototype.Ui = function (t) {
    delete this.rr[t];
  }, t.prototype.Ci = function () {
    return this.ir.activeTargetIds;
  }, t.prototype.Fi = function (t) {
    return this.ir.activeTargetIds.has(t);
  }, t.prototype.start = function () {
    return this.ir = new Hr(), Promise.resolve();
  }, t.prototype.ji = function (t, e, n) {// No op.
  }, t.prototype.Ki = function (t) {// No op.
  }, t.prototype.Di = function () {}, t.prototype.oi = function (t) {}, t;
}(),
    Xr =
/** @class */
function () {
  /**
   * @param batchId The unique ID of this mutation batch.
   * @param localWriteTime The original write time of this mutation.
   * @param baseMutations Mutations that are used to populate the base
   * values when this mutation is applied locally. This can be used to locally
   * overwrite values that are persisted in the remote document cache. Base
   * mutations are never sent to the backend.
   * @param mutations The user-provided mutations in this mutation batch.
   * User-provided mutations are applied both locally and remotely on the
   * backend.
   */
  function t(t, e, n, r) {
    this.batchId = t, this.ar = e, this.baseMutations = n, this.mutations = r;
  }

  return t.prototype.cr = function (t, e, n) {
    for (var r = n.ur, i = 0; i < this.mutations.length; i++) {
      var o = this.mutations[i];
      o.key.isEqual(t) && (e = dn(o, e, r[i]));
    }

    return e;
  },
  /**
   * Computes the local view of a document given all the mutations in this
   * batch.
   *
   * @param docKey The key of the document to apply mutations to.
   * @param maybeDoc The document to apply mutations to.
   */
  t.prototype.hr = function (t, e) {
    // First, apply the base state. This allows us to apply non-idempotent
    // transform against a consistent set of values.
    for (var n = 0, r = this.baseMutations; n < r.length; n++) {
      var i = r[n];
      i.key.isEqual(t) && (e = vn(i, e, e, this.ar));
    } // Second, apply all user-provided mutations.


    for (var o = e, s = 0, u = this.mutations; s < u.length; s++) {
      var a = u[s];
      a.key.isEqual(t) && (e = vn(a, e, o, this.ar));
    }

    return e;
  },
  /**
   * Computes the local view for all provided documents given the mutations in
   * this batch.
   */
  t.prototype.lr = function (t) {
    var e = this,
        n = t; // TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations
    // directly (as done in `applyToLocalView()`), we can reduce the complexity
    // to O(n).

    return this.mutations.forEach(function (r) {
      var i = e.hr(r.key, t.get(r.key));
      i && (n = n.ot(r.key, i));
    }), n;
  }, t.prototype.keys = function () {
    return this.mutations.reduce(function (t, e) {
      return t.add(e.key);
    }, Ot());
  }, t.prototype.isEqual = function (t) {
    return this.batchId === t.batchId && Y(this.mutations, t.mutations, function (t, e) {
      return gn(t, e);
    }) && Y(this.baseMutations, t.baseMutations, function (t, e) {
      return gn(t, e);
    });
  }, t;
}(),
    Jr =
/** @class */
function () {
  function t(t, e, n,
  /**
   * A pre-computed mapping from each mutated document to the resulting
   * version.
   */
  r) {
    this.batch = t, this._r = e, this.ur = n, this.dr = r;
  }

  return t.from = function (e, n, r) {
    g(e.mutations.length === r.length);

    for (var i = kt, o = e.mutations, s = 0; s < o.length; s++) {
      i = i.ot(o[s].key, r[s].version);
    }

    return new t(e, n, r, i);
  }, t;
}(),
    Zr =
/** @class */
function () {
  function t() {
    // A mapping of document key to the new cache entry that should be written (or null if any
    // existing cache entry should be removed).
    this.wr = new it(function (t) {
      return t.toString();
    }, function (t, e) {
      return t.isEqual(e);
    }), this.mr = !1;
  }

  return Object.defineProperty(t.prototype, "readTime", {
    get: function get() {
      return this.Tr;
    },
    set: function set(t) {
      this.Tr = t;
    },
    enumerable: !1,
    configurable: !0
  }),
  /**
   * Buffers a `RemoteDocumentCache.addEntry()` call.
   *
   * You can only modify documents that have already been retrieved via
   * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).
   */
  t.prototype.Er = function (t, e) {
    this.Ir(), this.readTime = e, this.wr.set(t.key, t);
  },
  /**
   * Buffers a `RemoteDocumentCache.removeEntry()` call.
   *
   * You can only remove documents that have already been retrieved via
   * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).
   */
  t.prototype.Ar = function (t, e) {
    this.Ir(), e && (this.readTime = e), this.wr.set(t, null);
  },
  /**
   * Looks up an entry in the cache. The buffered changes will first be checked,
   * and if no buffered change applies, this will forward to
   * `RemoteDocumentCache.getEntry()`.
   *
   * @param transaction The transaction in which to perform any persistence
   *     operations.
   * @param documentKey The key of the entry to look up.
   * @return The cached Document or NoDocument entry, or null if we have nothing
   * cached.
   */
  t.prototype.Rr = function (t, e) {
    this.Ir();
    var n = this.wr.get(e);
    return void 0 !== n ? yr.resolve(n) : this.gr(t, e);
  },
  /**
   * Looks up several entries in the cache, forwarding to
   * `RemoteDocumentCache.getEntry()`.
   *
   * @param transaction The transaction in which to perform any persistence
   *     operations.
   * @param documentKeys The keys of the entries to look up.
   * @return A map of cached `Document`s or `NoDocument`s, indexed by key. If an
   *     entry cannot be found, the corresponding key will be mapped to a null
   *     value.
   */
  t.prototype.getEntries = function (t, e) {
    return this.Pr(t, e);
  },
  /**
   * Applies buffered changes to the underlying RemoteDocumentCache, using
   * the provided transaction.
   */
  t.prototype.apply = function (t) {
    return this.Ir(), this.mr = !0, this.yr(t);
  },
  /** Helper to assert this.changes is not null  */
  t.prototype.Ir = function () {}, t;
}(),
    ti = "The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.",
    ei =
/** @class */
function () {
  function t() {
    this.Vr = [];
  }

  return t.prototype.pr = function (t) {
    this.Vr.push(t);
  }, t.prototype.br = function () {
    this.Vr.forEach(function (t) {
      return t();
    });
  }, t;
}(),
    ni =
/** @class */
function () {
  function t(t, e, n) {
    this.vr = t, this.Sr = e, this.Dr = n;
  }

  return t.prototype.Cr = function (t, e) {
    var n = this;
    return this.Sr.Nr(t, e).next(function (r) {
      return n.Fr(t, e, r);
    });
  },
  /** Internal version of `getDocument` that allows reusing batches. */
  t.prototype.Fr = function (t, e, n) {
    return this.vr.Rr(t, e).next(function (t) {
      for (var r = 0, i = n; r < i.length; r++) {
        t = i[r].hr(e, t);
      }

      return t;
    });
  }, // Returns the view of the given `docs` as they would appear after applying
  // all mutations in the given `batches`.
  t.prototype.$r = function (t, e, n) {
    var r = Dt();
    return e.forEach(function (t, e) {
      for (var i = 0, o = n; i < o.length; i++) {
        e = o[i].hr(t, e);
      }

      r = r.ot(t, e);
    }), r;
  },
  /**
   * Gets the local view of the documents identified by `keys`.
   *
   * If we don't have cached state for a document in `keys`, a NoDocument will
   * be stored for that key in the resulting set.
   */
  t.prototype.kr = function (t, e) {
    var n = this;
    return this.vr.getEntries(t, e).next(function (e) {
      return n.Mr(t, e);
    });
  },
  /**
   * Similar to `getDocuments`, but creates the local view from the given
   * `baseDocs` without retrieving documents from the local store.
   */
  t.prototype.Mr = function (t, e) {
    var n = this;
    return this.Sr.Or(t, e).next(function (r) {
      var i = n.$r(t, e, r),
          o = St();
      return i.forEach(function (t, e) {
        // TODO(http://b/32275378): Don't conflate missing / deleted.
        e || (e = new Rn(t, st.min())), o = o.ot(t, e);
      }), o;
    });
  },
  /**
   * Performs a query against the local view of all documents.
   *
   * @param transaction The persistence transaction.
   * @param query The query to match documents against.
   * @param sinceReadTime If not set to SnapshotVersion.min(), return only
   *     documents that have been read since this snapshot version (exclusive).
   */
  t.prototype.Lr = function (t, e, n) {
    /**
    * Returns whether the query matches a single document by path (rather than a
    * collection).
    */
    return function (t) {
      return A.F(t.path) && null === t.collectionGroup && 0 === t.filters.length;
    }(e) ? this.Br(t, e.path) : jn(e) ? this.qr(t, e, n) : this.Ur(t, e, n);
  }, t.prototype.Br = function (t, e) {
    // Just do a simple document lookup.
    return this.Cr(t, new A(e)).next(function (t) {
      var e = Lt();
      return t instanceof kn && (e = e.ot(t.key, t)), e;
    });
  }, t.prototype.qr = function (t, e, n) {
    var r = this,
        i = e.collectionGroup,
        o = Lt();
    return this.Dr.Qr(t, i).next(function (s) {
      return yr.forEach(s, function (s) {
        var u = function (t, e) {
          return new Pn(e,
          /*collectionGroup=*/
          null, t.on.slice(), t.filters.slice(), t.limit, t.an, t.startAt, t.endAt);
        }(e, s.child(i));

        return r.Ur(t, u, n).next(function (t) {
          t.forEach(function (t, e) {
            o = o.ot(t, e);
          });
        });
      }).next(function () {
        return o;
      });
    });
  }, t.prototype.Ur = function (t, e, n) {
    var r,
        i,
        o = this; // Query the remote documents and overlay mutations.

    return this.vr.Lr(t, e, n).next(function (n) {
      return r = n, o.Sr.Wr(t, e);
    }).next(function (e) {
      return i = e, o.jr(t, i, r).next(function (t) {
        r = t;

        for (var e = 0, n = i; e < n.length; e++) {
          for (var o = n[e], s = 0, u = o.mutations; s < u.length; s++) {
            var a = u[s],
                c = a.key,
                h = r.get(c),
                f = vn(a, h, h, o.ar);
            r = f instanceof kn ? r.ot(c, f) : r.remove(c);
          }
        }
      });
    }).next(function () {
      // Finally, filter out any documents that don't actually match
      // the query.
      return r.forEach(function (t, n) {
        $n(e, n) || (r = r.remove(t));
      }), r;
    });
  }, t.prototype.jr = function (t, e, n) {
    for (var r = Ot(), i = 0, o = e; i < o.length; i++) {
      for (var s = 0, u = o[i].mutations; s < u.length; s++) {
        var a = u[s];
        a instanceof _n && null === n.get(a.key) && (r = r.add(a.key));
      }
    }

    var c = n;
    return this.vr.getEntries(t, r).next(function (t) {
      return t.forEach(function (t, e) {
        null !== e && e instanceof kn && (c = c.ot(t, e));
      }), c;
    });
  }, t;
}(),
    ri =
/** @class */
function () {
  function t(t, e, n, r) {
    this.targetId = t, this.fromCache = e, this.Kr = n, this.Gr = r;
  }

  return t.zr = function (e, n) {
    for (var r = Ot(), i = Ot(), o = 0, s = n.docChanges; o < s.length; o++) {
      var u = s[o];

      switch (u.type) {
        case 0
        /* Added */
        :
          r = r.add(u.doc.key);
          break;

        case 1
        /* Removed */
        :
          i = i.add(u.doc.key);
        // do nothing
      }
    }

    return new t(e, n.fromCache, r, i);
  }, t;
}();
/**
 * Holds the state of a query target, including its target ID and whether the
 * target is 'not-current', 'current' or 'rejected'.
 */
// Visible for testing

/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function ii(t, e) {
  var n = t[0],
      r = t[1],
      i = e[0],
      o = e[1],
      s = H(n, i);
  return 0 === s ? H(r, o) : s;
}
/**
 * Used to calculate the nth sequence number. Keeps a rolling buffer of the
 * lowest n values passed to `addElement`, and finally reports the largest of
 * them in `maxValue`.
 */


var oi =
/** @class */
function () {
  function t(t) {
    this.Hr = t, this.buffer = new Tt(ii), this.Yr = 0;
  }

  return t.prototype.Jr = function () {
    return ++this.Yr;
  }, t.prototype.Xr = function (t) {
    var e = [t, this.Jr()];
    if (this.buffer.size < this.Hr) this.buffer = this.buffer.add(e);else {
      var n = this.buffer.last();
      ii(e, n) < 0 && (this.buffer = this.buffer.delete(n).add(e));
    }
  }, Object.defineProperty(t.prototype, "maxValue", {
    get: function get() {
      // Guaranteed to be non-empty. If we decide we are not collecting any
      // sequence numbers, nthSequenceNumber below short-circuits. If we have
      // decided that we are collecting n sequence numbers, it's because n is some
      // percentage of the existing sequence numbers. That means we should never
      // be in a situation where we are collecting sequence numbers but don't
      // actually have any.
      return this.buffer.last()[0];
    },
    enumerable: !1,
    configurable: !0
  }), t;
}(),
    si = {
  Zr: !1,
  eo: 0,
  no: 0,
  so: 0
},
    ui =
/** @class */
function () {
  function t( // When we attempt to collect, we will only do so if the cache size is greater than this
  // threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.
  t, // The percentage of sequence numbers that we will attempt to collect
  e, // A cap on the total number of sequence numbers that will be collected. This prevents
  // us from collecting a huge number of sequence numbers if the cache has grown very large.
  n) {
    this.io = t, this.ro = e, this.oo = n;
  }

  return t.ao = function (e) {
    return new t(e, t.co, t.uo);
  }, t;
}();

ui.ho = -1, ui.lo = 1048576, ui._o = 41943040, ui.co = 10, ui.uo = 1e3, ui.fo = new ui(ui._o, ui.co, ui.uo), ui.do = new ui(ui.ho, 0, 0);
/**
 * This class is responsible for the scheduling of LRU garbage collection. It handles checking
 * whether or not GC is enabled, as well as which delay to use before the next run.
 */

var ai =
/** @class */
function () {
  function e(t, e) {
    this.wo = t, this.cs = e, this.mo = !1, this.To = null;
  }

  return e.prototype.start = function (t) {
    this.wo.params.io !== ui.ho && this.Eo(t);
  }, e.prototype.stop = function () {
    this.To && (this.To.cancel(), this.To = null);
  }, Object.defineProperty(e.prototype, "Ei", {
    get: function get() {
      return null !== this.To;
    },
    enumerable: !1,
    configurable: !0
  }), e.prototype.Eo = function (e) {
    var n = this,
        r = this.mo ? 3e5 : 6e4;
    l("LruGarbageCollector", "Garbage collection scheduled in " + r + "ms"), this.To = this.cs.yn("lru_garbage_collection"
    /* LruGarbageCollection */
    , r, function () {
      return t.__awaiter(n, void 0, void 0, function () {
        var n;
        return t.__generator(this, function (t) {
          switch (t.label) {
            case 0:
              this.To = null, this.mo = !0, t.label = 1;

            case 1:
              return t.trys.push([1, 3,, 7]), [4
              /*yield*/
              , e.Io(this.wo)];

            case 2:
              return t.sent(), [3
              /*break*/
              , 7];

            case 3:
              return _r(n = t.sent()) ? (l("LruGarbageCollector", "Ignoring IndexedDB error during garbage collection: ", n), [3
              /*break*/
              , 6]) : [3
              /*break*/
              , 4];

            case 4:
              return [4
              /*yield*/
              , Do(n)];

            case 5:
              t.sent(), t.label = 6;

            case 6:
              return [3
              /*break*/
              , 7];

            case 7:
              return [4
              /*yield*/
              , this.Eo(e)];

            case 8:
              return t.sent(), [2
              /*return*/
              ];
          }
        });
      });
    });
  }, e;
}(),
    ci =
/** @class */
function () {
  function t(t, e) {
    this.Ao = t, this.params = e;
  }

  return t.prototype.Ro = function (t, e) {
    return this.Ao.Po(t).next(function (t) {
      return Math.floor(e / 100 * t);
    });
  },
  /** Returns the nth sequence number, counting in order from the smallest. */
  t.prototype.yo = function (t, e) {
    var n = this;
    if (0 === e) return yr.resolve(qr.ai);
    var r = new oi(e);
    return this.Ao.Ce(t, function (t) {
      return r.Xr(t.sequenceNumber);
    }).next(function () {
      return n.Ao.Vo(t, function (t) {
        return r.Xr(t);
      });
    }).next(function () {
      return r.maxValue;
    });
  },
  /**
   * Removes targets with a sequence number equal to or less than the given upper bound, and removes
   * document associations with those targets.
   */
  t.prototype.po = function (t, e, n) {
    return this.Ao.po(t, e, n);
  },
  /**
   * Removes documents that have a sequence number equal to or less than the upper bound and are not
   * otherwise pinned.
   */
  t.prototype.bo = function (t, e) {
    return this.Ao.bo(t, e);
  }, t.prototype.vo = function (t, e) {
    var n = this;
    return this.params.io === ui.ho ? (l("LruGarbageCollector", "Garbage collection skipped; disabled"), yr.resolve(si)) : this.So(t).next(function (r) {
      return r < n.params.io ? (l("LruGarbageCollector", "Garbage collection skipped; Cache size " + r + " is lower than threshold " + n.params.io), si) : n.Do(t, e);
    });
  }, t.prototype.So = function (t) {
    return this.Ao.So(t);
  }, t.prototype.Do = function (t, e) {
    var r,
        i,
        o,
        s,
        u,
        a,
        c,
        h = this,
        p = Date.now();
    return this.Ro(t, this.params.ro).next(function (e) {
      // Cap at the configured max
      return e > h.params.oo ? (l("LruGarbageCollector", "Capping sequence numbers to collect down to the maximum of " + h.params.oo + " from " + e), i = h.params.oo) : i = e, s = Date.now(), h.yo(t, i);
    }).next(function (n) {
      return r = n, u = Date.now(), h.po(t, r, e);
    }).next(function (e) {
      return o = e, a = Date.now(), h.bo(t, r);
    }).next(function (t) {
      return c = Date.now(), f() <= n.LogLevel.DEBUG && l("LruGarbageCollector", "LRU Garbage Collection\n\tCounted targets in " + (s - p) + "ms\n\tDetermined least recently used " + i + " in " + (u - s) + "ms\n\tRemoved " + o + " targets in " + (a - u) + "ms\n\tRemoved " + t + " documents in " + (c - a) + "ms\nTotal Duration: " + (c - p) + "ms"), yr.resolve({
        Zr: !0,
        eo: i,
        no: o,
        so: t
      });
    });
  }, t;
}();
/** Implements the steps for LRU garbage collection. */

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Encodes a resource path into a IndexedDb-compatible string form.
 */


function hi(t) {
  for (var e = "", n = 0; n < t.length; n++) {
    e.length > 0 && (e = li(e)), e = fi(t.get(n), e);
  }

  return li(e);
}
/** Encodes a single segment of a resource path into the given result */


function fi(t, e) {
  for (var n = e, r = t.length, i = 0; i < r; i++) {
    var o = t.charAt(i);

    switch (o) {
      case "\0":
        n += "";
        break;

      case "":
        n += "";
        break;

      default:
        n += o;
    }
  }

  return n;
}
/** Encodes a path separator into the given result */


function li(t) {
  return t + "";
}
/**
 * Decodes the given IndexedDb-compatible string form of a resource path into
 * a ResourcePath instance. Note that this method is not suitable for use with
 * decoding resource names from the server; those are One Platform format
 * strings.
 */


function pi(t) {
  // Event the empty path must encode as a path of at least length 2. A path
  // with exactly 2 must be the empty path.
  var e = t.length;
  if (g(e >= 2), 2 === e) return g("" === t.charAt(0) && "" === t.charAt(1)), E.P(); // Escape characters cannot exist past the second-to-last position in the
  // source value.

  for (var n = e - 2, r = [], i = "", o = 0; o < e;) {
    // The last two characters of a valid encoded path must be a separator, so
    // there must be an end to this segment.
    var s = t.indexOf("", o);

    switch ((s < 0 || s > n) && y(), t.charAt(s + 1)) {
      case "":
        var u = t.substring(o, s),
            a = void 0;
        0 === i.length ? // Avoid copying for the common case of a segment that excludes \0
        // and \001
        a = u : (a = i += u, i = ""), r.push(a);
        break;

      case "":
        i += t.substring(o, s), i += "\0";
        break;

      case "":
        // The escape character can be used in the output to encode itself.
        i += t.substring(o, s + 1);
        break;

      default:
        y();
    }

    o = s + 2;
  }

  return new E(r);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** Serializer for values stored in the LocalStore. */


var di = function di(t) {
  this.Co = t;
};
/** Decodes a remote document from storage locally to a Document. */


function vi(t, e) {
  if (e.document) return function (t, e, n) {
    var r = Se(t, e.name),
        i = Ee(e.updateTime),
        o = new Sn({
      mapValue: {
        fields: e.fields
      }
    });
    return new kn(r, i, o, {
      hasCommittedMutations: !!n
    });
  }(t.Co, e.document, !!e.hasCommittedMutations);

  if (e.noDocument) {
    var n = A.$(e.noDocument.path),
        r = _i(e.noDocument.readTime);

    return new Rn(n, r, {
      hasCommittedMutations: !!e.hasCommittedMutations
    });
  }

  if (e.unknownDocument) {
    var i = A.$(e.unknownDocument.path),
        o = _i(e.unknownDocument.version);

    return new On(i, o);
  }

  return y();
}
/** Encodes a document for storage locally. */


function yi(t, e, n) {
  var r = gi(n),
      i = e.key.path.h().A();

  if (e instanceof kn) {
    var o = function (t, e) {
      return {
        name: Ae(t, e.key),
        fields: e.rn().mapValue.fields,
        updateTime: _e(t, e.version.Z())
      };
    }(t.Co, e),
        s = e.hasCommittedMutations;

    return new Ki(
    /* unknownDocument= */
    null,
    /* noDocument= */
    null, o, s, r, i);
  }

  if (e instanceof Rn) {
    var u = e.key.path.A(),
        a = wi(e.version),
        c = e.hasCommittedMutations;
    return new Ki(
    /* unknownDocument= */
    null, new Bi(u, a),
    /* document= */
    null, c, r, i);
  }

  if (e instanceof On) {
    var h = e.key.path.A(),
        f = wi(e.version);
    return new Ki(new Wi(h, f),
    /* noDocument= */
    null,
    /* document= */
    null,
    /* hasCommittedMutations= */
    !0, r, i);
  }

  return y();
}

function gi(t) {
  var e = t.Z();
  return [e.seconds, e.nanoseconds];
}

function mi(t) {
  var e = new ot(t[0], t[1]);
  return st.J(e);
}

function wi(t) {
  var e = t.Z();
  return new Mi(e.seconds, e.nanoseconds);
}

function _i(t) {
  var e = new ot(t.seconds, t.nanoseconds);
  return st.J(e);
}
/** Encodes a batch of mutations into a DbMutationBatch for local storage. */

/** Decodes a DbMutationBatch into a MutationBatch */


function bi(t, e) {
  var n = (e.baseMutations || []).map(function (e) {
    return Pe(t.Co, e);
  }),
      r = e.mutations.map(function (e) {
    return Pe(t.Co, e);
  }),
      i = ot.fromMillis(e.localWriteTimeMs);
  return new Xr(e.batchId, i, n, r);
}
/** Decodes a DbTarget into TargetData */


function Ii(t) {
  var e,
      n,
      r = _i(t.readTime),
      i = void 0 !== t.lastLimboFreeSnapshotVersion ? _i(t.lastLimboFreeSnapshotVersion) : st.min();

  return void 0 !== t.query.documents ? (g(1 === (n = t.query).documents.length), e = zn(Un(xe(n.documents[0])))) : e = Ce(t.query), new gt(e, t.targetId, 0
  /* Listen */
  , t.lastListenSequenceNumber, r, i, X.fromBase64String(t.resumeToken));
}

function Ei(t, e) {
  var n,
      r = wi(e.nt),
      i = wi(e.lastLimboFreeSnapshotVersion);
  n = dt(e.target) ? Ve(t.Co, e.target) : Ue(t.Co, e.target); // We can't store the resumeToken as a ByteString in IndexedDb, so we
  // convert it to a base64 string for storage.

  var o = e.resumeToken.toBase64(); // lastListenSequenceNumber is always 0 until we do real GC.

  return new Hi(e.targetId, lt(e.target), r, o, e.sequenceNumber, i, n);
}
/**
 * A helper function for figuring out what kind of query has been stored.
 */

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** A mutation queue for a specific user, backed by IndexedDB. */


var Ti =
/** @class */
function () {
  function t(
  /**
   * The normalized userId (e.g. null UID => "" userId) used to store /
   * retrieve mutations.
   */
  t, e, n, r) {
    this.userId = t, this.serializer = e, this.Dr = n, this.No = r,
    /**
         * Caches the document keys for pending mutation batches. If the mutation
         * has been removed from IndexedDb, the cached value may continue to
         * be used to retrieve the batch's document keys. To remove a cached value
         * locally, `removeCachedMutationKeys()` should be invoked either directly
         * or through `removeMutationBatches()`.
         *
         * With multi-tab, when the primary client acknowledges or rejects a mutation,
         * this cache is used by secondary clients to invalidate the local
         * view of the documents that were previously affected by the mutation.
         */
    // PORTING NOTE: Multi-tab only.
    this.Fo = {};
  }

  return t.xo = function (e, n, r, i) {
    // TODO(mcg): Figure out what constraints there are on userIDs
    // In particular, are there any reserved characters? are empty ids allowed?
    // For the moment store these together in the same mutations table assuming
    // that empty userIDs aren't allowed.
    return g("" !== e.uid), new t(e.Zs() ? e.uid : "", n, r, i);
  }, t.prototype.$o = function (t) {
    var e = !0,
        n = IDBKeyRange.bound([this.userId, Number.NEGATIVE_INFINITY], [this.userId, Number.POSITIVE_INFINITY]);
    return Si(t).rs({
      index: Gi.userMutationsIndex,
      range: n
    }, function (t, n, r) {
      e = !1, r.done();
    }).next(function () {
      return e;
    });
  }, t.prototype.ko = function (t, e, n, r) {
    var i = this,
        o = Di(t),
        s = Si(t); // The IndexedDb implementation in Chrome (and Firefox) does not handle
    // compound indices that include auto-generated keys correctly. To ensure
    // that the index entry is added correctly in all browsers, we perform two
    // writes: The first write is used to retrieve the next auto-generated Batch
    // ID, and the second write populates the index and stores the actual
    // mutation batch.
    // See: https://bugs.chromium.org/p/chromium/issues/detail?id=701972
    // We write an empty object to obtain key
    // eslint-disable-next-line @typescript-eslint/no-explicit-any

    return s.add({}).next(function (u) {
      g("number" == typeof u);

      for (var a = new Xr(u, e, n, r), c = function (t, e, n) {
        var r = n.baseMutations.map(function (e) {
          return Oe(t.Co, e);
        }),
            i = n.mutations.map(function (e) {
          return Oe(t.Co, e);
        });
        return new Gi(e, n.batchId, n.ar.toMillis(), r, i);
      }(i.serializer, i.userId, a), h = [], f = new Tt(function (t, e) {
        return H(t.R(), e.R());
      }), l = 0, p = r; l < p.length; l++) {
        var d = p[l],
            v = zi.key(i.userId, d.key.path, u);
        f = f.add(d.key.path.h()), h.push(s.put(c)), h.push(o.put(v, zi.PLACEHOLDER));
      }

      return f.forEach(function (e) {
        h.push(i.Dr.Mo(t, e));
      }), t.pr(function () {
        i.Fo[u] = a.keys();
      }), yr.$n(h).next(function () {
        return a;
      });
    });
  }, t.prototype.Oo = function (t, e) {
    var n = this;
    return Si(t).get(e).next(function (t) {
      return t ? (g(t.userId === n.userId), bi(n.serializer, t)) : null;
    });
  },
  /**
   * Returns the document keys for the mutation batch with the given batchId.
   * For primary clients, this method returns `null` after
   * `removeMutationBatches()` has been called. Secondary clients return a
   * cached result until `removeCachedMutationKeys()` is invoked.
   */
  // PORTING NOTE: Multi-tab only.
  t.prototype.Lo = function (t, e) {
    var n = this;
    return this.Fo[e] ? yr.resolve(this.Fo[e]) : this.Oo(t, e).next(function (t) {
      if (t) {
        var r = t.keys();
        return n.Fo[e] = r, r;
      }

      return null;
    });
  }, t.prototype.Bo = function (t, e) {
    var n = this,
        r = e + 1,
        i = IDBKeyRange.lowerBound([this.userId, r]),
        o = null;
    return Si(t).rs({
      index: Gi.userMutationsIndex,
      range: i
    }, function (t, e, i) {
      e.userId === n.userId && (g(e.batchId >= r), o = bi(n.serializer, e)), i.done();
    }).next(function () {
      return o;
    });
  }, t.prototype.qo = function (t) {
    var e = IDBKeyRange.upperBound([this.userId, Number.POSITIVE_INFINITY]),
        n = -1;
    return Si(t).rs({
      index: Gi.userMutationsIndex,
      range: e,
      reverse: !0
    }, function (t, e, r) {
      n = e.batchId, r.done();
    }).next(function () {
      return n;
    });
  }, t.prototype.Uo = function (t) {
    var e = this,
        n = IDBKeyRange.bound([this.userId, -1], [this.userId, Number.POSITIVE_INFINITY]);
    return Si(t).ts(Gi.userMutationsIndex, n).next(function (t) {
      return t.map(function (t) {
        return bi(e.serializer, t);
      });
    });
  }, t.prototype.Nr = function (t, e) {
    var n = this,
        r = zi.prefixForPath(this.userId, e.path),
        i = IDBKeyRange.lowerBound(r),
        o = []; // Scan the document-mutation index starting with a prefix starting with
    // the given documentKey.

    return Di(t).rs({
      range: i
    }, function (r, i, s) {
      var u = r[0],
          a = r[1],
          c = r[2],
          h = pi(a); // Only consider rows matching exactly the specific key of
      // interest. Note that because we order by path first, and we
      // order terminators before path separators, we'll encounter all
      // the index rows for documentKey contiguously. In particular, all
      // the rows for documentKey will occur before any rows for
      // documents nested in a subcollection beneath documentKey so we
      // can stop as soon as we hit any such row.

      if (u === n.userId && e.path.isEqual(h)) // Look up the mutation batch in the store.
        return Si(t).get(c).next(function (t) {
          if (!t) throw y();
          g(t.userId === n.userId), o.push(bi(n.serializer, t));
        });
      s.done();
    }).next(function () {
      return o;
    });
  }, t.prototype.Or = function (t, e) {
    var n = this,
        r = new Tt(H),
        i = [];
    return e.forEach(function (e) {
      var o = zi.prefixForPath(n.userId, e.path),
          s = IDBKeyRange.lowerBound(o),
          u = Di(t).rs({
        range: s
      }, function (t, i, o) {
        var s = t[0],
            u = t[1],
            a = t[2],
            c = pi(u); // Only consider rows matching exactly the specific key of
        // interest. Note that because we order by path first, and we
        // order terminators before path separators, we'll encounter all
        // the index rows for documentKey contiguously. In particular, all
        // the rows for documentKey will occur before any rows for
        // documents nested in a subcollection beneath documentKey so we
        // can stop as soon as we hit any such row.

        s === n.userId && e.path.isEqual(c) ? r = r.add(a) : o.done();
      });
      i.push(u);
    }), yr.$n(i).next(function () {
      return n.Qo(t, r);
    });
  }, t.prototype.Wr = function (t, e) {
    var n = this,
        r = e.path,
        i = r.length + 1,
        o = zi.prefixForPath(this.userId, r),
        s = IDBKeyRange.lowerBound(o),
        u = new Tt(H);
    return Di(t).rs({
      range: s
    }, function (t, e, o) {
      var s = t[0],
          a = t[1],
          c = t[2],
          h = pi(a);
      s === n.userId && r.T(h) ? // Rows with document keys more than one segment longer than the
      // query path can't be matches. For example, a query on 'rooms'
      // can't match the document /rooms/abc/messages/xyx.
      // TODO(mcg): we'll need a different scanner when we implement
      // ancestor queries.
      h.length === i && (u = u.add(c)) : o.done();
    }).next(function () {
      return n.Qo(t, u);
    });
  }, t.prototype.Qo = function (t, e) {
    var n = this,
        r = [],
        i = []; // TODO(rockwood): Implement this using iterate.

    return e.forEach(function (e) {
      i.push(Si(t).get(e).next(function (t) {
        if (null === t) throw y();
        g(t.userId === n.userId), r.push(bi(n.serializer, t));
      }));
    }), yr.$n(i).next(function () {
      return r;
    });
  }, t.prototype.Wo = function (t, e) {
    var n = this;
    return Ai(t.jo, this.userId, e).next(function (r) {
      return t.pr(function () {
        n.Ko(e.batchId);
      }), yr.forEach(r, function (e) {
        return n.No.Go(t, e);
      });
    });
  },
  /**
   * Clears the cached keys for a mutation batch. This method should be
   * called by secondary clients after they process mutation updates.
   *
   * Note that this method does not have to be called from primary clients as
   * the corresponding cache entries are cleared when an acknowledged or
   * rejected batch is removed from the mutation queue.
   */
  // PORTING NOTE: Multi-tab only
  t.prototype.Ko = function (t) {
    delete this.Fo[t];
  }, t.prototype.zo = function (t) {
    var e = this;
    return this.$o(t).next(function (n) {
      if (!n) return yr.resolve(); // Verify that there are no entries in the documentMutations index if
      // the queue is empty.

      var r = IDBKeyRange.lowerBound(zi.prefixForUser(e.userId)),
          i = [];
      return Di(t).rs({
        range: r
      }, function (t, n, r) {
        if (t[0] === e.userId) {
          var o = pi(t[1]);
          i.push(o);
        } else r.done();
      }).next(function () {
        g(0 === i.length);
      });
    });
  }, t.prototype.Ho = function (t, e) {
    return Ni(t, this.userId, e);
  }, // PORTING NOTE: Multi-tab only (state is held in memory in other clients).

  /** Returns the mutation queue's metadata from IndexedDb. */
  t.prototype.Yo = function (t) {
    var e = this;
    return xi(t).get(this.userId).next(function (t) {
      return t || new ji(e.userId, -1,
      /*lastStreamToken=*/
      "");
    });
  }, t;
}();
/**
 * @return true if the mutation queue for the given user contains a pending
 *         mutation for the given key.
 */


function Ni(t, e, n) {
  var r = zi.prefixForPath(e, n.path),
      i = r[1],
      o = IDBKeyRange.lowerBound(r),
      s = !1;
  return Di(t).rs({
    range: o,
    ss: !0
  }, function (t, n, r) {
    var o = t[0],
        u = t[1];
    t[2];
    o === e && u === i && (s = !0), r.done();
  }).next(function () {
    return s;
  });
}
/** Returns true if any mutation queue contains the given document. */

/**
 * Delete a mutation batch and the associated document mutations.
 * @return A PersistencePromise of the document mutations that were removed.
 */


function Ai(t, e, n) {
  var r = t.store(Gi.store),
      i = t.store(zi.store),
      o = [],
      s = IDBKeyRange.only(n.batchId),
      u = 0,
      a = r.rs({
    range: s
  }, function (t, e, n) {
    return u++, n.delete();
  });
  o.push(a.next(function () {
    g(1 === u);
  }));

  for (var c = [], h = 0, f = n.mutations; h < f.length; h++) {
    var l = f[h],
        p = zi.key(e, l.key.path, n.batchId);
    o.push(i.delete(p)), c.push(l.key);
  }

  return yr.$n(o).next(function () {
    return c;
  });
}
/**
 * Helper to get a typed SimpleDbStore for the mutations object store.
 */


function Si(t) {
  return ho.Qn(t, Gi.store);
}
/**
 * Helper to get a typed SimpleDbStore for the mutationQueues object store.
 */


function Di(t) {
  return ho.Qn(t, zi.store);
}
/**
 * Helper to get a typed SimpleDbStore for the mutationQueues object store.
 */


function xi(t) {
  return ho.Qn(t, ji.store);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * The RemoteDocumentCache for IndexedDb. To construct, invoke
 * `newIndexedDbRemoteDocumentCache()`.
 */


var Li =
/** @class */
function () {
  /**
   * @param serializer The document serializer.
   * @param indexManager The query indexes that need to be maintained.
   */
  function t(t, e) {
    this.serializer = t, this.Dr = e;
  }

  return t.prototype.Er = function (t, e, n) {
    return Oi(t).put(Pi(e), n);
  },
  /**
   * Removes a document from the cache.
   *
   * All calls of `removeEntry`  are required to go through the RemoteDocumentChangeBuffer
   * returned by `newChangeBuffer()` to ensure proper accounting of metadata.
   */
  t.prototype.Ar = function (t, e) {
    var n = Oi(t),
        r = Pi(e);
    return n.delete(r);
  },
  /**
   * Updates the current cache size.
   *
   * Callers to `addEntry()` and `removeEntry()` *must* call this afterwards to update the
   * cache's metadata.
   */
  t.prototype.updateMetadata = function (t, e) {
    var n = this;
    return this.getMetadata(t).next(function (r) {
      return r.byteSize += e, n.Jo(t, r);
    });
  }, t.prototype.Rr = function (t, e) {
    var n = this;
    return Oi(t).get(Pi(e)).next(function (t) {
      return n.Xo(t);
    });
  },
  /**
   * Looks up an entry in the cache.
   *
   * @param documentKey The key of the entry to look up.
   * @return The cached MaybeDocument entry and its size, or null if we have nothing cached.
   */
  t.prototype.Zo = function (t, e) {
    var n = this;
    return Oi(t).get(Pi(e)).next(function (t) {
      var e = n.Xo(t);
      return e ? {
        ta: e,
        size: Vi(t)
      } : null;
    });
  }, t.prototype.getEntries = function (t, e) {
    var n = this,
        r = Dt();
    return this.ea(t, e, function (t, e) {
      var i = n.Xo(e);
      r = r.ot(t, i);
    }).next(function () {
      return r;
    });
  },
  /**
   * Looks up several entries in the cache.
   *
   * @param documentKeys The set of keys entries to look up.
   * @return A map of MaybeDocuments indexed by key (if a document cannot be
   *     found, the key will be mapped to null) and a map of sizes indexed by
   *     key (zero if the key cannot be found).
   */
  t.prototype.na = function (t, e) {
    var n = this,
        r = Dt(),
        i = new bt(A.i);
    return this.ea(t, e, function (t, e) {
      var o = n.Xo(e);
      o ? (r = r.ot(t, o), i = i.ot(t, Vi(e))) : (r = r.ot(t, null), i = i.ot(t, 0));
    }).next(function () {
      return {
        sa: r,
        ia: i
      };
    });
  }, t.prototype.ea = function (t, e, n) {
    if (e.m()) return yr.resolve();

    var r = IDBKeyRange.bound(e.first().path.A(), e.last().path.A()),
        i = e._t(),
        o = i.It();

    return Oi(t).rs({
      range: r
    }, function (t, e, r) {
      // Go through keys not found in cache.
      for (var s = A.$(t); o && A.i(o, s) < 0;) {
        n(o, null), o = i.It();
      }

      o && o.isEqual(s) && ( // Key found in cache.
      n(o, e), o = i.At() ? i.It() : null), // Skip to the next key (if there is one).
      o ? r.Xn(o.path.A()) : r.done();
    }).next(function () {
      // The rest of the keys are not in the cache. One case where `iterate`
      // above won't go through them is when the cache is empty.
      for (; o;) {
        n(o, null), o = i.At() ? i.It() : null;
      }
    });
  }, t.prototype.Lr = function (t, e, n) {
    var r = this,
        i = Lt(),
        o = e.path.length + 1,
        s = {};

    if (n.isEqual(st.min())) {
      // Documents are ordered by key, so we can use a prefix scan to narrow
      // down the documents we need to match the query against.
      var u = e.path.A();
      s.range = IDBKeyRange.lowerBound(u);
    } else {
      // Execute an index-free query and filter by read time. This is safe
      // since all document changes to queries that have a
      // lastLimboFreeSnapshotVersion (`sinceReadTime`) have a read time set.
      var a = e.path.A(),
          c = gi(n);
      s.range = IDBKeyRange.lowerBound([a, c],
      /* open= */
      !0), s.index = Ki.collectionReadTimeIndex;
    }

    return Oi(t).rs(s, function (t, n, s) {
      // The query is actually returning any path that starts with the query
      // path prefix which may include documents in subcollections. For
      // example, a query on 'rooms' will return rooms/abc/messages/xyx but we
      // shouldn't match it. Fix this by discarding rows with document keys
      // more than one segment longer than the query path.
      if (t.length === o) {
        var u = vi(r.serializer, n);
        e.path.T(u.key.path) ? u instanceof kn && $n(e, u) && (i = i.ot(u.key, u)) : s.done();
      }
    }).next(function () {
      return i;
    });
  }, t.prototype.ra = function (t) {
    return new ki(this, !!t && t.oa);
  }, t.prototype.aa = function (t) {
    return this.getMetadata(t).next(function (t) {
      return t.byteSize;
    });
  }, t.prototype.getMetadata = function (t) {
    return Ri(t).get(Qi.key).next(function (t) {
      return g(!!t), t;
    });
  }, t.prototype.Jo = function (t, e) {
    return Ri(t).put(Qi.key, e);
  },
  /**
   * Decodes `remoteDoc` and returns the document (or null, if the document
   * corresponds to the format used for sentinel deletes).
   */
  t.prototype.Xo = function (t) {
    if (t) {
      var e = vi(this.serializer, t);
      return e instanceof Rn && e.version.isEqual(st.min()) ? null : e;
    }

    return null;
  }, t;
}(),
    ki =
/** @class */
function (e) {
  /**
   * @param documentCache The IndexedDbRemoteDocumentCache to apply the changes to.
   * @param trackRemovals Whether to create sentinel deletes that can be tracked by
   * `getNewDocumentChanges()`.
   */
  function n(t, n) {
    var r = this;
    return (r = e.call(this) || this).ca = t, r.oa = n, // A map of document sizes prior to applying the changes in this buffer.
    r.ua = new it(function (t) {
      return t.toString();
    }, function (t, e) {
      return t.isEqual(e);
    }), r;
  }

  return t.__extends(n, e), n.prototype.yr = function (t) {
    var e = this,
        n = [],
        r = 0,
        i = new Tt(function (t, e) {
      return H(t.R(), e.R());
    });
    return this.wr.forEach(function (o, s) {
      var u = e.ua.get(o);

      if (s) {
        var a = yi(e.ca.serializer, s, e.readTime);
        i = i.add(o.path.h());
        var c = Vi(a);
        r += c - u, n.push(e.ca.Er(t, o, a));
      } else if (r -= u, e.oa) {
        // In order to track removals, we store a "sentinel delete" in the
        // RemoteDocumentCache. This entry is represented by a NoDocument
        // with a version of 0 and ignored by `maybeDecodeDocument()` but
        // preserved in `getNewDocumentChanges()`.
        var h = yi(e.ca.serializer, new Rn(o, st.min()), e.readTime);
        n.push(e.ca.Er(t, o, h));
      } else n.push(e.ca.Ar(t, o));
    }), i.forEach(function (r) {
      n.push(e.ca.Dr.Mo(t, r));
    }), n.push(this.ca.updateMetadata(t, r)), yr.$n(n);
  }, n.prototype.gr = function (t, e) {
    var n = this; // Record the size of everything we load from the cache so we can compute a delta later.

    return this.ca.Zo(t, e).next(function (t) {
      return null === t ? (n.ua.set(e, 0), null) : (n.ua.set(e, t.size), t.ta);
    });
  }, n.prototype.Pr = function (t, e) {
    var n = this; // Record the size of everything we load from the cache so we can compute
    // a delta later.

    return this.ca.na(t, e).next(function (t) {
      var e = t.sa; // Note: `getAllFromCache` returns two maps instead of a single map from
      // keys to `DocumentSizeEntry`s. This is to allow returning the
      // `NullableMaybeDocumentMap` directly, without a conversion.

      return t.ia.forEach(function (t, e) {
        n.ua.set(t, e);
      }), e;
    });
  }, n;
}(Zr);
/**
 * Creates a new IndexedDbRemoteDocumentCache.
 *
 * @param serializer The document serializer.
 * @param indexManager The query indexes that need to be maintained.
 */

/**
 * Handles the details of adding and updating documents in the IndexedDbRemoteDocumentCache.
 *
 * Unlike the MemoryRemoteDocumentChangeBuffer, the IndexedDb implementation computes the size
 * delta for all submitted changes. This avoids having to re-read all documents from IndexedDb
 * when we apply the changes.
 */


function Ri(t) {
  return ho.Qn(t, Qi.store);
}
/**
 * Helper to get a typed SimpleDbStore for the remoteDocuments object store.
 */


function Oi(t) {
  return ho.Qn(t, Ki.store);
}

function Pi(t) {
  return t.path.A();
}
/**
 * Retrusn an approximate size for the given document.
 */


function Vi(t) {
  var e;
  if (t.document) e = t.document;else if (t.unknownDocument) e = t.unknownDocument;else {
    if (!t.noDocument) throw y();
    e = t.noDocument;
  }
  return JSON.stringify(e).length;
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * An in-memory implementation of IndexManager.
 */


var Ui =
/** @class */
function () {
  function t() {
    this.ha = new Ci();
  }

  return t.prototype.Mo = function (t, e) {
    return this.ha.add(e), yr.resolve();
  }, t.prototype.Qr = function (t, e) {
    return yr.resolve(this.ha.getEntries(e));
  }, t;
}(),
    Ci =
/** @class */
function () {
  function t() {
    this.index = {};
  } // Returns false if the entry already existed.


  return t.prototype.add = function (t) {
    var e = t._(),
        n = t.h(),
        r = this.index[e] || new Tt(E.i),
        i = !r.has(n);

    return this.index[e] = r.add(n), i;
  }, t.prototype.has = function (t) {
    var e = t._(),
        n = t.h(),
        r = this.index[e];

    return r && r.has(n);
  }, t.prototype.getEntries = function (t) {
    return (this.index[t] || new Tt(E.i)).A();
  }, t;
}(),
    Fi =
/** @class */
function () {
  function t(t) {
    this.serializer = t;
  }
  /**
   * Performs database creation and schema upgrades.
   *
   * Note that in production, this method is only ever used to upgrade the schema
   * to SCHEMA_VERSION. Different values of toVersion are only used for testing
   * and local feature development.
   */


  return t.prototype.createOrUpgrade = function (t, e, n, r) {
    var i = this;
    g(n < r && n >= 0 && r <= 10);
    var o = new br("createOrUpgrade", e);
    n < 1 && r >= 1 && (function (t) {
      t.createObjectStore(qi.store);
    }(t), function (t) {
      t.createObjectStore(ji.store, {
        keyPath: ji.keyPath
      }), t.createObjectStore(Gi.store, {
        keyPath: Gi.keyPath,
        autoIncrement: !0
      }).createIndex(Gi.userMutationsIndex, Gi.userMutationsKeyPath, {
        unique: !0
      }), t.createObjectStore(zi.store);
    }(t), Ji(t), function (t) {
      t.createObjectStore(Ki.store);
    }(t)); // Migration 2 to populate the targetGlobal object no longer needed since
    // migration 3 unconditionally clears it.

    var s = yr.resolve();
    return n < 3 && r >= 3 && ( // Brand new clients don't need to drop and recreate--only clients that
    // potentially have corrupt data.
    0 !== n && (function (t) {
      t.deleteObjectStore(Yi.store), t.deleteObjectStore(Hi.store), t.deleteObjectStore($i.store);
    }(t), Ji(t)), s = s.next(function () {
      /**
      * Creates the target global singleton row.
      *
      * @param {IDBTransaction} txn The version upgrade transaction for indexeddb
      */
      return function (t) {
        var e = t.store($i.store),
            n = new $i(
        /*highestTargetId=*/
        0,
        /*lastListenSequenceNumber=*/
        0, st.min().Z(),
        /*targetCount=*/
        0);
        return e.put($i.key, n);
      }(o);
    })), n < 4 && r >= 4 && (0 !== n && ( // Schema version 3 uses auto-generated keys to generate globally unique
    // mutation batch IDs (this was previously ensured internally by the
    // client). To migrate to the new schema, we have to read all mutations
    // and write them back out. We preserve the existing batch IDs to guarantee
    // consistency with other object stores. Any further mutation batch IDs will
    // be auto-generated.
    s = s.next(function () {
      return function (t, e) {
        return e.store(Gi.store).ts().next(function (n) {
          t.deleteObjectStore(Gi.store), t.createObjectStore(Gi.store, {
            keyPath: Gi.keyPath,
            autoIncrement: !0
          }).createIndex(Gi.userMutationsIndex, Gi.userMutationsKeyPath, {
            unique: !0
          });
          var r = e.store(Gi.store),
              i = n.map(function (t) {
            return r.put(t);
          });
          return yr.$n(i);
        });
      }(t, o);
    })), s = s.next(function () {
      !function (t) {
        t.createObjectStore(Zi.store, {
          keyPath: Zi.keyPath
        });
      }(t);
    })), n < 5 && r >= 5 && (s = s.next(function () {
      return i.removeAcknowledgedMutations(o);
    })), n < 6 && r >= 6 && (s = s.next(function () {
      return function (t) {
        t.createObjectStore(Qi.store);
      }(t), i.addDocumentGlobal(o);
    })), n < 7 && r >= 7 && (s = s.next(function () {
      return i.ensureSequenceNumbers(o);
    })), n < 8 && r >= 8 && (s = s.next(function () {
      return i.createCollectionParentIndex(t, o);
    })), n < 9 && r >= 9 && (s = s.next(function () {
      // Multi-Tab used to manage its own changelog, but this has been moved
      // to the DbRemoteDocument object store itself. Since the previous change
      // log only contained transient data, we can drop its object store.
      !function (t) {
        t.objectStoreNames.contains("remoteDocumentChanges") && t.deleteObjectStore("remoteDocumentChanges");
      }(t), function (t) {
        var e = t.objectStore(Ki.store);
        e.createIndex(Ki.readTimeIndex, Ki.readTimeIndexPath, {
          unique: !1
        }), e.createIndex(Ki.collectionReadTimeIndex, Ki.collectionReadTimeIndexPath, {
          unique: !1
        });
      }(e);
    })), n < 10 && r >= 10 && (s = s.next(function () {
      return i.rewriteCanonicalIds(o);
    })), s;
  }, t.prototype.addDocumentGlobal = function (t) {
    var e = 0;
    return t.store(Ki.store).rs(function (t, n) {
      e += Vi(n);
    }).next(function () {
      var n = new Qi(e);
      return t.store(Qi.store).put(Qi.key, n);
    });
  }, t.prototype.removeAcknowledgedMutations = function (t) {
    var e = this,
        n = t.store(ji.store),
        r = t.store(Gi.store);
    return n.ts().next(function (n) {
      return yr.forEach(n, function (n) {
        var i = IDBKeyRange.bound([n.userId, -1], [n.userId, n.lastAcknowledgedBatchId]);
        return r.ts(Gi.userMutationsIndex, i).next(function (r) {
          return yr.forEach(r, function (r) {
            g(r.userId === n.userId);
            var i = bi(e.serializer, r);
            return Ai(t, n.userId, i).next(function () {});
          });
        });
      });
    });
  },
  /**
   * Ensures that every document in the remote document cache has a corresponding sentinel row
   * with a sequence number. Missing rows are given the most recently used sequence number.
   */
  t.prototype.ensureSequenceNumbers = function (t) {
    var e = t.store(Yi.store),
        n = t.store(Ki.store);
    return t.store($i.store).get($i.key).next(function (t) {
      var r = [];
      return n.rs(function (n, i) {
        var o = new E(n),
            s = function (t) {
          return [0, hi(t)];
        }(o);

        r.push(e.get(s).next(function (n) {
          return n ? yr.resolve() : function (n) {
            return e.put(new Yi(0, hi(n), t.highestListenSequenceNumber));
          }(o);
        }));
      }).next(function () {
        return yr.$n(r);
      });
    });
  }, t.prototype.createCollectionParentIndex = function (t, e) {
    // Create the index.
    t.createObjectStore(Xi.store, {
      keyPath: Xi.keyPath
    });

    var n = e.store(Xi.store),
        r = new Ci(),
        i = function i(t) {
      if (r.add(t)) {
        var e = t._(),
            i = t.h();

        return n.put({
          collectionId: e,
          parent: hi(i)
        });
      }
    }; // Helper to add an index entry iff we haven't already written it.
    // Index existing remote documents.


    return e.store(Ki.store).rs({
      ss: !0
    }, function (t, e) {
      var n = new E(t);
      return i(n.h());
    }).next(function () {
      return e.store(zi.store).rs({
        ss: !0
      }, function (t, e) {
        t[0];
        var n = t[1],
            r = (t[2], pi(n));
        return i(r.h());
      });
    });
  }, t.prototype.rewriteCanonicalIds = function (t) {
    var e = this,
        n = t.store(Hi.store);
    return n.rs(function (t, r) {
      var i = Ii(r),
          o = Ei(e.serializer, i);
      return n.put(o);
    });
  }, t;
}(),
    Mi = function Mi(t, e) {
  this.seconds = t, this.nanoseconds = e;
},
    qi = function qi(t,
/** Whether to allow shared access from multiple tabs. */
e, n) {
  this.ownerId = t, this.allowTabSynchronization = e, this.leaseTimestampMs = n;
};
/**
 * Internal implementation of the collection-parent index exposed by MemoryIndexManager.
 * Also used for in-memory caching by IndexedDbIndexManager and initial index population
 * in indexeddb_schema.ts
 */

/**
 * Name of the IndexedDb object store.
 *
 * Note that the name 'owner' is chosen to ensure backwards compatibility with
 * older clients that only supported single locked access to the persistence
 * layer.
 */


qi.store = "owner",
/**
     * The key string used for the single object that exists in the
     * DbPrimaryClient store.
     */
qi.key = "owner";

var ji = function ji(
/**
     * The normalized user ID to which this queue belongs.
     */
t,
/**
     * An identifier for the highest numbered batch that has been acknowledged
     * by the server. All MutationBatches in this queue with batchIds less
     * than or equal to this value are considered to have been acknowledged by
     * the server.
     *
     * NOTE: this is deprecated and no longer used by the code.
     */
e,
/**
     * A stream token that was previously sent by the server.
     *
     * See StreamingWriteRequest in datastore.proto for more details about
     * usage.
     *
     * After sending this token, earlier tokens may not be used anymore so
     * only a single stream token is retained.
     *
     * NOTE: this is deprecated and no longer used by the code.
     */
n) {
  this.userId = t, this.lastAcknowledgedBatchId = e, this.lastStreamToken = n;
};
/** Name of the IndexedDb object store.  */


ji.store = "mutationQueues",
/** Keys are automatically assigned via the userId property. */
ji.keyPath = "userId";
/**
 * An object to be stored in the 'mutations' store in IndexedDb.
 *
 * Represents a batch of user-level mutations intended to be sent to the server
 * in a single write. Each user-level batch gets a separate DbMutationBatch
 * with a new batchId.
 */

var Gi = function Gi(
/**
     * The normalized user ID to which this batch belongs.
     */
t,
/**
     * An identifier for this batch, allocated using an auto-generated key.
     */
e,
/**
     * The local write time of the batch, stored as milliseconds since the
     * epoch.
     */
n,
/**
     * A list of "mutations" that represent a partial base state from when this
     * write batch was initially created. During local application of the write
     * batch, these baseMutations are applied prior to the real writes in order
     * to override certain document fields from the remote document cache. This
     * is necessary in the case of non-idempotent writes (e.g. `increment()`
     * transforms) to make sure that the local view of the modified documents
     * doesn't flicker if the remote document cache receives the result of the
     * non-idempotent write before the write is removed from the queue.
     *
     * These mutations are never sent to the backend.
     */
r,
/**
     * A list of mutations to apply. All mutations will be applied atomically.
     *
     * Mutations are serialized via toMutation().
     */
i) {
  this.userId = t, this.batchId = e, this.localWriteTimeMs = n, this.baseMutations = r, this.mutations = i;
};
/** Name of the IndexedDb object store.  */


Gi.store = "mutations",
/** Keys are automatically assigned via the userId, batchId properties. */
Gi.keyPath = "batchId",
/** The index name for lookup of mutations by user. */
Gi.userMutationsIndex = "userMutationsIndex",
/** The user mutations index is keyed by [userId, batchId] pairs. */
Gi.userMutationsKeyPath = ["userId", "batchId"];

var zi =
/** @class */
function () {
  function t() {}
  /**
   * Creates a [userId] key for use in the DbDocumentMutations index to iterate
   * over all of a user's document mutations.
   */


  return t.prefixForUser = function (t) {
    return [t];
  },
  /**
   * Creates a [userId, encodedPath] key for use in the DbDocumentMutations
   * index to iterate over all at document mutations for a given path or lower.
   */
  t.prefixForPath = function (t, e) {
    return [t, hi(e)];
  },
  /**
   * Creates a full index key of [userId, encodedPath, batchId] for inserting
   * and deleting into the DbDocumentMutations index.
   */
  t.key = function (t, e, n) {
    return [t, hi(e), n];
  }, t;
}();

zi.store = "documentMutations",
/**
     * Because we store all the useful information for this store in the key,
     * there is no useful information to store as the value. The raw (unencoded)
     * path cannot be stored because IndexedDb doesn't store prototype
     * information.
     */
zi.PLACEHOLDER = new zi();

var Bi = function Bi(t, e) {
  this.path = t, this.readTime = e;
},
    Wi = function Wi(t, e) {
  this.path = t, this.version = e;
},
    Ki = // TODO: We are currently storing full document keys almost three times
// (once as part of the primary key, once - partly - as `parentPath` and once
// inside the encoded documents). During our next migration, we should
// rewrite the primary key as parentPath + document ID which would allow us
// to drop one value.
function Ki(
/**
     * Set to an instance of DbUnknownDocument if the data for a document is
     * not known, but it is known that a document exists at the specified
     * version (e.g. it had a successful update applied to it)
     */
t,
/**
     * Set to an instance of a DbNoDocument if it is known that no document
     * exists.
     */
e,
/**
     * Set to an instance of a Document if there's a cached version of the
     * document.
     */
n,
/**
     * Documents that were written to the remote document store based on
     * a write acknowledgment are marked with `hasCommittedMutations`. These
     * documents are potentially inconsistent with the backend's copy and use
     * the write's commit version as their document version.
     */
r,
/**
     * When the document was read from the backend. Undefined for data written
     * prior to schema version 9.
     */
i,
/**
     * The path of the collection this document is part of. Undefined for data
     * written prior to schema version 9.
     */
o) {
  this.unknownDocument = t, this.noDocument = e, this.document = n, this.hasCommittedMutations = r, this.readTime = i, this.parentPath = o;
};
/**
 * Represents a document that is known to exist but whose data is unknown.
 * Stored in IndexedDb as part of a DbRemoteDocument object.
 */


Ki.store = "remoteDocuments",
/**
     * An index that provides access to all entries sorted by read time (which
     * corresponds to the last modification time of each row).
     *
     * This index is used to provide a changelog for Multi-Tab.
     */
Ki.readTimeIndex = "readTimeIndex", Ki.readTimeIndexPath = "readTime",
/**
     * An index that provides access to documents in a collection sorted by read
     * time.
     *
     * This index is used to allow the RemoteDocumentCache to fetch newly changed
     * documents in a collection.
     */
Ki.collectionReadTimeIndex = "collectionReadTimeIndex", Ki.collectionReadTimeIndexPath = ["parentPath", "readTime"];
/**
 * Contains a single entry that has metadata about the remote document cache.
 */

var Qi =
/**
     * @param byteSize Approximately the total size in bytes of all the documents in the document
     * cache.
     */
function Qi(t) {
  this.byteSize = t;
};

Qi.store = "remoteDocumentGlobal", Qi.key = "remoteDocumentGlobalKey";

var Hi = function Hi(
/**
     * An auto-generated sequential numeric identifier for the query.
     *
     * Queries are stored using their canonicalId as the key, but these
     * canonicalIds can be quite long so we additionally assign a unique
     * queryId which can be used by referenced data structures (e.g.
     * indexes) to minimize the on-disk cost.
     */
t,
/**
     * The canonical string representing this query. This is not unique.
     */
e,
/**
     * The last readTime received from the Watch Service for this query.
     *
     * This is the same value as TargetChange.read_time in the protos.
     */
n,
/**
     * An opaque, server-assigned token that allows watching a query to be
     * resumed after disconnecting without retransmitting all the data
     * that matches the query. The resume token essentially identifies a
     * point in time from which the server should resume sending results.
     *
     * This is related to the snapshotVersion in that the resumeToken
     * effectively also encodes that value, but the resumeToken is opaque
     * and sometimes encodes additional information.
     *
     * A consequence of this is that the resumeToken should be used when
     * asking the server to reason about where this client is in the watch
     * stream, but the client should use the snapshotVersion for its own
     * purposes.
     *
     * This is the same value as TargetChange.resume_token in the protos.
     */
r,
/**
     * A sequence number representing the last time this query was
     * listened to, used for garbage collection purposes.
     *
     * Conventionally this would be a timestamp value, but device-local
     * clocks are unreliable and they must be able to create new listens
     * even while disconnected. Instead this should be a monotonically
     * increasing number that's incremented on each listen call.
     *
     * This is different from the queryId since the queryId is an
     * immutable identifier assigned to the Query on first use while
     * lastListenSequenceNumber is updated every time the query is
     * listened to.
     */
i,
/**
     * Denotes the maximum snapshot version at which the associated query view
     * contained no limbo documents.  Undefined for data written prior to
     * schema version 9.
     */
o,
/**
     * The query for this target.
     *
     * Because canonical ids are not unique we must store the actual query. We
     * use the proto to have an object we can persist without having to
     * duplicate translation logic to and from a `Query` object.
     */
s) {
  this.targetId = t, this.canonicalId = e, this.readTime = n, this.resumeToken = r, this.lastListenSequenceNumber = i, this.lastLimboFreeSnapshotVersion = o, this.query = s;
};

Hi.store = "targets",
/** Keys are automatically assigned via the targetId property. */
Hi.keyPath = "targetId",
/** The name of the queryTargets index. */
Hi.queryTargetsIndexName = "queryTargetsIndex",
/**
     * The index of all canonicalIds to the targets that they match. This is not
     * a unique mapping because canonicalId does not promise a unique name for all
     * possible queries, so we append the targetId to make the mapping unique.
     */
Hi.queryTargetsKeyPath = ["canonicalId", "targetId"];
/**
 * An object representing an association between a target and a document, or a
 * sentinel row marking the last sequence number at which a document was used.
 * Each document cached must have a corresponding sentinel row before lru
 * garbage collection is enabled.
 *
 * The target associations and sentinel rows are co-located so that orphaned
 * documents and their sequence numbers can be identified efficiently via a scan
 * of this store.
 */

var Yi = function Yi(
/**
     * The targetId identifying a target or 0 for a sentinel row.
     */
t,
/**
     * The path to the document, as encoded in the key.
     */
e,
/**
     * If this is a sentinel row, this should be the sequence number of the last
     * time the document specified by `path` was used. Otherwise, it should be
     * `undefined`.
     */
n) {
  this.targetId = t, this.path = e, this.sequenceNumber = n;
};
/** Name of the IndexedDb object store.  */


Yi.store = "targetDocuments",
/** Keys are automatically assigned via the targetId, path properties. */
Yi.keyPath = ["targetId", "path"],
/** The index name for the reverse index. */
Yi.documentTargetsIndex = "documentTargetsIndex",
/** We also need to create the reverse index for these properties. */
Yi.documentTargetsKeyPath = ["path", "targetId"];
/**
 * A record of global state tracked across all Targets, tracked separately
 * to avoid the need for extra indexes.
 *
 * This should be kept in-sync with the proto used in the iOS client.
 */

var $i = function $i(
/**
     * The highest numbered target id across all targets.
     *
     * See DbTarget.targetId.
     */
t,
/**
     * The highest numbered lastListenSequenceNumber across all targets.
     *
     * See DbTarget.lastListenSequenceNumber.
     */
e,
/**
     * A global snapshot version representing the last consistent snapshot we
     * received from the backend. This is monotonically increasing and any
     * snapshots received from the backend prior to this version (e.g. for
     * targets resumed with a resumeToken) should be suppressed (buffered)
     * until the backend has caught up to this snapshot version again. This
     * prevents our cache from ever going backwards in time.
     */
n,
/**
     * The number of targets persisted.
     */
r) {
  this.highestTargetId = t, this.highestListenSequenceNumber = e, this.lastRemoteSnapshotVersion = n, this.targetCount = r;
};
/**
 * The key string used for the single object that exists in the
 * DbTargetGlobal store.
 */


$i.key = "targetGlobalKey", $i.store = "targetGlobal";
/**
 * An object representing an association between a Collection id (e.g. 'messages')
 * to a parent path (e.g. '/chats/123') that contains it as a (sub)collection.
 * This is used to efficiently find all collections to query when performing
 * a Collection Group query.
 */

var Xi = function Xi(
/**
     * The collectionId (e.g. 'messages')
     */
t,
/**
     * The path to the parent (either a document location or an empty path for
     * a root-level collection).
     */
e) {
  this.collectionId = t, this.parent = e;
};
/** Name of the IndexedDb object store. */


function Ji(t) {
  t.createObjectStore(Yi.store, {
    keyPath: Yi.keyPath
  }).createIndex(Yi.documentTargetsIndex, Yi.documentTargetsKeyPath, {
    unique: !0
  }), // NOTE: This is unique only because the TargetId is the suffix.
  t.createObjectStore(Hi.store, {
    keyPath: Hi.keyPath
  }).createIndex(Hi.queryTargetsIndexName, Hi.queryTargetsKeyPath, {
    unique: !0
  }), t.createObjectStore($i.store);
}

Xi.store = "collectionParents",
/** Keys are automatically assigned via the collectionId, parent properties. */
Xi.keyPath = ["collectionId", "parent"];

var Zi = function Zi( // Note: Previous schema versions included a field
// "lastProcessedDocumentChangeId". Don't use anymore.

/** The auto-generated client id assigned at client startup. */
t,
/** The last time this state was updated. */
e,
/** Whether the client's network connection is enabled. */
n,
/** Whether this client is running in a foreground tab. */
r) {
  this.clientId = t, this.updateTimeMs = e, this.networkEnabled = n, this.inForeground = r;
};
/** Name of the IndexedDb object store. */


Zi.store = "clientMetadata",
/** Keys are automatically assigned via the clientId properties. */
Zi.keyPath = "clientId";

var to = t.__spreadArrays(t.__spreadArrays(t.__spreadArrays([ji.store, Gi.store, zi.store, Ki.store, Hi.store, qi.store, $i.store, Yi.store], [Zi.store]), [Qi.store]), [Xi.store]),
    eo =
/** @class */
function () {
  function t() {
    /**
     * An in-memory copy of the index entries we've already written since the SDK
     * launched. Used to avoid re-writing the same entry repeatedly.
     *
     * This is *NOT* a complete cache of what's in persistence and so can never be used to
     * satisfy reads.
     */
    this.la = new Ci();
  }
  /**
   * Adds a new entry to the collection parent index.
   *
   * Repeated calls for the same collectionPath should be avoided within a
   * transaction as IndexedDbIndexManager only caches writes once a transaction
   * has been committed.
   */


  return t.prototype.Mo = function (t, e) {
    var n = this;

    if (!this.la.has(e)) {
      var r = e._(),
          i = e.h();

      t.pr(function () {
        // Add the collection to the in memory cache only if the transaction was
        // successfully committed.
        n.la.add(e);
      });
      var o = {
        collectionId: r,
        parent: hi(i)
      };
      return no(t).put(o);
    }

    return yr.resolve();
  }, t.prototype.Qr = function (t, e) {
    var n = [],
        r = IDBKeyRange.bound([e, ""], [$(e), ""],
    /*lowerOpen=*/
    !1,
    /*upperOpen=*/
    !0);
    return no(t).ts(r).next(function (t) {
      for (var r = 0, i = t; r < i.length; r++) {
        var o = i[r]; // This collectionId guard shouldn't be necessary (and isn't as long
        // as we're running in a real browser), but there's a bug in
        // indexeddbshim that breaks our range in our tests running in node:
        // https://github.com/axemclion/IndexedDBShim/issues/334

        if (o.collectionId !== e) break;
        n.push(pi(o.parent));
      }

      return n;
    });
  }, t;
}(); // V2 is no longer usable (see comment at top of file)
// Visible for testing

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * A persisted implementation of IndexManager.
 */

/**
 * Helper to get a typed SimpleDbStore for the collectionParents
 * document store.
 */


function no(t) {
  return ho.Qn(t, Xi.store);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** Offset to ensure non-overlapping target ids. */

/**
 * Generates monotonically increasing target IDs for sending targets to the
 * watch stream.
 *
 * The client constructs two generators, one for the target cache, and one for
 * for the sync engine (to generate limbo documents targets). These
 * generators produce non-overlapping IDs (by using even and odd IDs
 * respectively).
 *
 * By separating the target ID space, the query cache can generate target IDs
 * that persist across client restarts, while sync engine can independently
 * generate in-memory target IDs that are transient and can be reused after a
 * restart.
 */


var ro =
/** @class */
function () {
  function t(t) {
    this._a = t;
  }

  return t.prototype.next = function () {
    return this._a += 2, this._a;
  }, t.fa = function () {
    // The target cache generator must return '2' in its first call to `next()`
    // as there is no differentiation in the protocol layer between an unset
    // number and the number '0'. If we were to sent a target with target ID
    // '0', the backend would consider it unset and replace it with its own ID.
    return new t(0);
  }, t.da = function () {
    // Sync engine assigns target IDs for limbo document detection.
    return new t(-1);
  }, t;
}(),
    io =
/** @class */
function () {
  function t(t, e) {
    this.No = t, this.serializer = e;
  } // PORTING NOTE: We don't cache global metadata for the target cache, since
  // some of it (in particular `highestTargetId`) can be modified by secondary
  // tabs. We could perhaps be more granular (and e.g. still cache
  // `lastRemoteSnapshotVersion` in memory) but for simplicity we currently go
  // to IndexedDb whenever we need to read metadata. We can revisit if it turns
  // out to have a meaningful performance impact.


  return t.prototype.wa = function (t) {
    var e = this;
    return this.ma(t).next(function (n) {
      var r = new ro(n.highestTargetId);
      return n.highestTargetId = r.next(), e.Ta(t, n).next(function () {
        return n.highestTargetId;
      });
    });
  }, t.prototype.Ea = function (t) {
    return this.ma(t).next(function (t) {
      return st.J(new ot(t.lastRemoteSnapshotVersion.seconds, t.lastRemoteSnapshotVersion.nanoseconds));
    });
  }, t.prototype.Ia = function (t) {
    return this.ma(t).next(function (t) {
      return t.highestListenSequenceNumber;
    });
  }, t.prototype.Aa = function (t, e, n) {
    var r = this;
    return this.ma(t).next(function (i) {
      return i.highestListenSequenceNumber = e, n && (i.lastRemoteSnapshotVersion = n.Z()), e > i.highestListenSequenceNumber && (i.highestListenSequenceNumber = e), r.Ta(t, i);
    });
  }, t.prototype.Ra = function (t, e) {
    var n = this;
    return this.ga(t, e).next(function () {
      return n.ma(t).next(function (r) {
        return r.targetCount += 1, n.Pa(e, r), n.Ta(t, r);
      });
    });
  }, t.prototype.ya = function (t, e) {
    return this.ga(t, e);
  }, t.prototype.Va = function (t, e) {
    var n = this;
    return this.pa(t, e.targetId).next(function () {
      return oo(t).delete(e.targetId);
    }).next(function () {
      return n.ma(t);
    }).next(function (e) {
      return g(e.targetCount > 0), e.targetCount -= 1, n.Ta(t, e);
    });
  },
  /**
   * Drops any targets with sequence number less than or equal to the upper bound, excepting those
   * present in `activeTargetIds`. Document associations for the removed targets are also removed.
   * Returns the number of targets removed.
   */
  t.prototype.po = function (t, e, n) {
    var r = this,
        i = 0,
        o = [];
    return oo(t).rs(function (s, u) {
      var a = Ii(u);
      a.sequenceNumber <= e && null === n.get(a.targetId) && (i++, o.push(r.Va(t, a)));
    }).next(function () {
      return yr.$n(o);
    }).next(function () {
      return i;
    });
  },
  /**
   * Call provided function with each `TargetData` that we have cached.
   */
  t.prototype.Ce = function (t, e) {
    return oo(t).rs(function (t, n) {
      var r = Ii(n);
      e(r);
    });
  }, t.prototype.ma = function (t) {
    return so(t).get($i.key).next(function (t) {
      return g(null !== t), t;
    });
  }, t.prototype.Ta = function (t, e) {
    return so(t).put($i.key, e);
  }, t.prototype.ga = function (t, e) {
    return oo(t).put(Ei(this.serializer, e));
  },
  /**
   * In-place updates the provided metadata to account for values in the given
   * TargetData. Saving is done separately. Returns true if there were any
   * changes to the metadata.
   */
  t.prototype.Pa = function (t, e) {
    var n = !1;
    return t.targetId > e.highestTargetId && (e.highestTargetId = t.targetId, n = !0), t.sequenceNumber > e.highestListenSequenceNumber && (e.highestListenSequenceNumber = t.sequenceNumber, n = !0), n;
  }, t.prototype.ba = function (t) {
    return this.ma(t).next(function (t) {
      return t.targetCount;
    });
  }, t.prototype.va = function (t, e) {
    // Iterating by the canonicalId may yield more than one result because
    // canonicalId values are not required to be unique per target. This query
    // depends on the queryTargets index to be efficient.
    var n = lt(e),
        r = IDBKeyRange.bound([n, Number.NEGATIVE_INFINITY], [n, Number.POSITIVE_INFINITY]),
        i = null;
    return oo(t).rs({
      range: r,
      index: Hi.queryTargetsIndexName
    }, function (t, n, r) {
      var o = Ii(n); // After finding a potential match, check that the target is
      // actually equal to the requested target.

      pt(e, o.target) && (i = o, r.done());
    }).next(function () {
      return i;
    });
  }, t.prototype.Sa = function (t, e, n) {
    var r = this,
        i = [],
        o = uo(t); // PORTING NOTE: The reverse index (documentsTargets) is maintained by
    // IndexedDb.

    return e.forEach(function (e) {
      var s = hi(e.path);
      i.push(o.put(new Yi(n, s))), i.push(r.No.Da(t, n, e));
    }), yr.$n(i);
  }, t.prototype.Ca = function (t, e, n) {
    var r = this,
        i = uo(t); // PORTING NOTE: The reverse index (documentsTargets) is maintained by
    // IndexedDb.

    return yr.forEach(e, function (e) {
      var o = hi(e.path);
      return yr.$n([i.delete([n, o]), r.No.Na(t, n, e)]);
    });
  }, t.prototype.pa = function (t, e) {
    var n = uo(t),
        r = IDBKeyRange.bound([e], [e + 1],
    /*lowerOpen=*/
    !1,
    /*upperOpen=*/
    !0);
    return n.delete(r);
  }, t.prototype.Fa = function (t, e) {
    var n = IDBKeyRange.bound([e], [e + 1],
    /*lowerOpen=*/
    !1,
    /*upperOpen=*/
    !0),
        r = uo(t),
        i = Ot();
    return r.rs({
      range: n,
      ss: !0
    }, function (t, e, n) {
      var r = pi(t[1]),
          o = new A(r);
      i = i.add(o);
    }).next(function () {
      return i;
    });
  }, t.prototype.Ho = function (t, e) {
    var n = hi(e.path),
        r = IDBKeyRange.bound([n], [$(n)],
    /*lowerOpen=*/
    !1,
    /*upperOpen=*/
    !0),
        i = 0;
    return uo(t).rs({
      index: Yi.documentTargetsIndex,
      ss: !0,
      range: r
    }, function (t, e, n) {
      var r = t[0]; // Having a sentinel row for a document does not count as containing that document;
      // For the target cache, containing the document means the document is part of some
      // target.

      t[1];
      0 !== r && (i++, n.done());
    }).next(function () {
      return i > 0;
    });
  },
  /**
   * Looks up a TargetData entry by target ID.
   *
   * @param targetId The target ID of the TargetData entry to look up.
   * @return The cached TargetData entry, or null if the cache has no entry for
   * the target.
   */
  // PORTING NOTE: Multi-tab only.
  t.prototype.Ue = function (t, e) {
    return oo(t).get(e).next(function (t) {
      return t ? Ii(t) : null;
    });
  }, t;
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Helper to get a typed SimpleDbStore for the queries object store.
 */


function oo(t) {
  return ho.Qn(t, Hi.store);
}
/**
 * Helper to get a typed SimpleDbStore for the target globals object store.
 */


function so(t) {
  return ho.Qn(t, $i.store);
}
/**
 * Helper to get a typed SimpleDbStore for the document target object store.
 */


function uo(t) {
  return ho.Qn(t, Yi.store);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var ao = "Failed to obtain exclusive access to the persistence layer. To allow shared access, make sure to invoke `enablePersistence()` with `synchronizeTabs:true` in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.",
    co =
/** @class */
function (e) {
  function n(t, n) {
    var r = this;
    return (r = e.call(this) || this).jo = t, r.xa = n, r;
  }

  return t.__extends(n, e), n;
}(ei),
    ho =
/** @class */
function () {
  function e(
  /**
   * Whether to synchronize the in-memory state of multiple tabs and share
   * access to local persistence.
   */
  t, n, r, i, o, s, u, h, f,
  /**
   * If set to true, forcefully obtains database access. Existing tabs will
   * no longer be able to access IndexedDB.
   */
  l) {
    if (this.allowTabSynchronization = t, this.persistenceKey = n, this.clientId = r, this.fn = o, this.window = s, this.document = u, this.$a = f, this.ka = l, this.Ma = null, this.Oa = !1, this.isPrimary = !1, this.networkEnabled = !0,
    /** Our window.unload handler, if registered. */
    this.La = null, this.inForeground = !1,
    /** Our 'visibilitychange' listener if registered. */
    this.Ba = null,
    /** The client metadata refresh task. */
    this.qa = null,
    /** The last time we garbage collected the client metadata object store. */
    this.Ua = Number.NEGATIVE_INFINITY,
    /** A listener to notify on primary state changes. */
    this.Qa = function (t) {
      return Promise.resolve();
    }, !e.Ln()) throw new c(a.UNIMPLEMENTED, "This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.");
    this.No = new po(this, i), this.Wa = n + "main", this.serializer = new di(h), this.ja = new gr(this.Wa, 10, new Fi(this.serializer)), this.Ka = new io(this.No, this.serializer), this.Dr = new eo(), this.vr = function (t, e) {
      return new Li(t, e);
    }(this.serializer, this.Dr), this.window && this.window.localStorage ? this.Ga = this.window.localStorage : (this.Ga = null, !1 === l && p("IndexedDbPersistence", "LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page."));
  }

  return e.Qn = function (t, e) {
    if (t instanceof co) return gr.Qn(t.jo, e);
    throw y();
  },
  /**
   * Attempt to start IndexedDb persistence.
   *
   * @return {Promise<void>} Whether persistence was enabled.
   */
  e.prototype.start = function () {
    var t = this; // NOTE: This is expected to fail sometimes (in the case of another tab
    // already having the persistence lock), so it's the first thing we should
    // do.

    return this.za().then(function () {
      if (!t.isPrimary && !t.allowTabSynchronization) // Fail `start()` if `synchronizeTabs` is disabled and we cannot
        // obtain the primary lease.
        throw new c(a.FAILED_PRECONDITION, ao);
      return t.Ha(), t.Ya(), t.Ja(), t.runTransaction("getHighestListenSequenceNumber", "readonly", function (e) {
        return t.Ka.Ia(e);
      });
    }).then(function (e) {
      t.Ma = new qr(e, t.$a);
    }).then(function () {
      t.Oa = !0;
    }).catch(function (e) {
      return t.ja && t.ja.close(), Promise.reject(e);
    });
  },
  /**
   * Registers a listener that gets called when the primary state of the
   * instance changes. Upon registering, this listener is invoked immediately
   * with the current primary state.
   *
   * PORTING NOTE: This is only used for Web multi-tab.
   */
  e.prototype.Xa = function (e) {
    var n = this;
    return this.Qa = function (r) {
      return t.__awaiter(n, void 0, void 0, function () {
        return t.__generator(this, function (t) {
          return this.Ei ? [2
          /*return*/
          , e(r)] : [2
          /*return*/
          ];
        });
      });
    }, e(this.isPrimary);
  },
  /**
   * Registers a listener that gets called when the database receives a
   * version change event indicating that it has deleted.
   *
   * PORTING NOTE: This is only used for Web multi-tab.
   */
  e.prototype.Za = function (e) {
    var n = this;
    this.ja.Kn(function (r) {
      return t.__awaiter(n, void 0, void 0, function () {
        return t.__generator(this, function (t) {
          switch (t.label) {
            case 0:
              return null === r.newVersion ? [4
              /*yield*/
              , e()] : [3
              /*break*/
              , 2];

            case 1:
              t.sent(), t.label = 2;

            case 2:
              return [2
              /*return*/
              ];
          }
        });
      });
    });
  },
  /**
   * Adjusts the current network state in the client's metadata, potentially
   * affecting the primary lease.
   *
   * PORTING NOTE: This is only used for Web multi-tab.
   */
  e.prototype.tc = function (e) {
    var n = this;
    this.networkEnabled !== e && (this.networkEnabled = e, // Schedule a primary lease refresh for immediate execution. The eventual
    // lease update will be propagated via `primaryStateListener`.
    this.fn.ws(function () {
      return t.__awaiter(n, void 0, void 0, function () {
        return t.__generator(this, function (t) {
          switch (t.label) {
            case 0:
              return this.Ei ? [4
              /*yield*/
              , this.za()] : [3
              /*break*/
              , 2];

            case 1:
              t.sent(), t.label = 2;

            case 2:
              return [2
              /*return*/
              ];
          }
        });
      });
    }));
  },
  /**
   * Updates the client metadata in IndexedDb and attempts to either obtain or
   * extend the primary lease for the local client. Asynchronously notifies the
   * primary state listener if the client either newly obtained or released its
   * primary lease.
   */
  e.prototype.za = function () {
    var t = this;
    return this.runTransaction("updateClientMetadataAndTryBecomePrimary", "readwrite", function (e) {
      return lo(e).put(new Zi(t.clientId, Date.now(), t.networkEnabled, t.inForeground)).next(function () {
        if (t.isPrimary) return t.ec(e).next(function (e) {
          e || (t.isPrimary = !1, t.fn.Cs(function () {
            return t.Qa(!1);
          }));
        });
      }).next(function () {
        return t.nc(e);
      }).next(function (n) {
        return t.isPrimary && !n ? t.sc(e).next(function () {
          return !1;
        }) : !!n && t.ic(e).next(function () {
          return !0;
        });
      });
    }).catch(function (e) {
      if (_r(e)) // Proceed with the existing state. Any subsequent access to
        // IndexedDB will verify the lease.
        return l("IndexedDbPersistence", "Failed to extend owner lease: ", e), t.isPrimary;
      if (!t.allowTabSynchronization) throw e;
      return l("IndexedDbPersistence", "Releasing owner lease after error during lease refresh", e),
      /* isPrimary= */
      !1;
    }).then(function (e) {
      t.isPrimary !== e && t.fn.Cs(function () {
        return t.Qa(e);
      }), t.isPrimary = e;
    });
  }, e.prototype.ec = function (t) {
    var e = this;
    return fo(t).get(qi.key).next(function (t) {
      return yr.resolve(e.rc(t));
    });
  }, e.prototype.oc = function (t) {
    return lo(t).delete(this.clientId);
  },
  /**
   * If the garbage collection threshold has passed, prunes the
   * RemoteDocumentChanges and the ClientMetadata store based on the last update
   * time of all clients.
   */
  e.prototype.ac = function () {
    return t.__awaiter(this, void 0, void 0, function () {
      var n,
          r,
          i,
          o,
          s = this;
      return t.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return !this.isPrimary || this.cc(this.Ua, 18e5) ? [3
            /*break*/
            , 2] : (this.Ua = Date.now(), [4
            /*yield*/
            , this.runTransaction("maybeGarbageCollectMultiClientState", "readwrite-primary", function (t) {
              var n = e.Qn(t, Zi.store);
              return n.ts().next(function (t) {
                var e = s.uc(t, 18e5),
                    r = t.filter(function (t) {
                  return -1 === e.indexOf(t);
                }); // Delete metadata for clients that are no longer considered active.

                return yr.forEach(r, function (t) {
                  return n.delete(t.clientId);
                }).next(function () {
                  return r;
                });
              });
            }).catch(function () {
              return [];
            })]);

          case 1:
            // Delete potential leftover entries that may continue to mark the
            // inactive clients as zombied in LocalStorage.
            // Ideally we'd delete the IndexedDb and LocalStorage zombie entries for
            // the client atomically, but we can't. So we opt to delete the IndexedDb
            // entries first to avoid potentially reviving a zombied client.
            if (n = t.sent(), this.Ga) for (r = 0, i = n; r < i.length; r++) {
              o = i[r], this.Ga.removeItem(this.hc(o.clientId));
            }
            t.label = 2;

          case 2:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Schedules a recurring timer to update the client metadata and to either
   * extend or acquire the primary lease if the client is eligible.
   */
  e.prototype.Ja = function () {
    var t = this;
    this.qa = this.fn.yn("client_metadata_refresh"
    /* ClientMetadataRefresh */
    , 4e3, function () {
      return t.za().then(function () {
        return t.ac();
      }).then(function () {
        return t.Ja();
      });
    });
  },
  /** Checks whether `client` is the local client. */
  e.prototype.rc = function (t) {
    return !!t && t.ownerId === this.clientId;
  },
  /**
   * Evaluate the state of all active clients and determine whether the local
   * client is or can act as the holder of the primary lease. Returns whether
   * the client is eligible for the lease, but does not actually acquire it.
   * May return 'false' even if there is no active leaseholder and another
   * (foreground) client should become leaseholder instead.
   */
  e.prototype.nc = function (t) {
    var e = this;
    return this.ka ? yr.resolve(!0) : fo(t).get(qi.key).next(function (n) {
      // A client is eligible for the primary lease if:
      // - its network is enabled and the client's tab is in the foreground.
      // - its network is enabled and no other client's tab is in the
      //   foreground.
      // - every clients network is disabled and the client's tab is in the
      //   foreground.
      // - every clients network is disabled and no other client's tab is in
      //   the foreground.
      // - the `forceOwningTab` setting was passed in.
      if (null !== n && e.cc(n.leaseTimestampMs, 5e3) && !e.lc(n.ownerId)) {
        if (e.rc(n) && e.networkEnabled) return !0;

        if (!e.rc(n)) {
          if (!n.allowTabSynchronization) // Fail the `canActAsPrimary` check if the current leaseholder has
            // not opted into multi-tab synchronization. If this happens at
            // client startup, we reject the Promise returned by
            // `enablePersistence()` and the user can continue to use Firestore
            // with in-memory persistence.
            // If this fails during a lease refresh, we will instead block the
            // AsyncQueue from executing further operations. Note that this is
            // acceptable since mixing & matching different `synchronizeTabs`
            // settings is not supported.
            // TODO(b/114226234): Remove this check when `synchronizeTabs` can
            // no longer be turned off.
            throw new c(a.FAILED_PRECONDITION, ao);
          return !1;
        }
      }

      return !(!e.networkEnabled || !e.inForeground) || lo(t).ts().next(function (t) {
        return void 0 === e.uc(t, 5e3).find(function (t) {
          if (e.clientId !== t.clientId) {
            var n = !e.networkEnabled && t.networkEnabled,
                r = !e.inForeground && t.inForeground,
                i = e.networkEnabled === t.networkEnabled;
            if (n || r && i) return !0;
          }

          return !1;
        });
      });
    }).next(function (t) {
      return e.isPrimary !== t && l("IndexedDbPersistence", "Client " + (t ? "is" : "is not") + " eligible for a primary lease."), t;
    });
  }, e.prototype.Di = function () {
    return t.__awaiter(this, void 0, void 0, function () {
      var e = this;
      return t.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            // Use `SimpleDb.runTransaction` directly to avoid failing if another tab
            // has obtained the primary lease.
            // The shutdown() operations are idempotent and can be called even when
            // start() aborted (e.g. because it couldn't acquire the persistence lease).
            return this.Oa = !1, this._c(), this.qa && (this.qa.cancel(), this.qa = null), this.fc(), this.dc(), [4
            /*yield*/
            , this.ja.runTransaction("shutdown", "readwrite", [qi.store, Zi.store], function (t) {
              var n = new co(t, qr.ai);
              return e.sc(n).next(function () {
                return e.oc(n);
              });
            })];

          case 1:
            // The shutdown() operations are idempotent and can be called even when
            // start() aborted (e.g. because it couldn't acquire the persistence lease).
            // Use `SimpleDb.runTransaction` directly to avoid failing if another tab
            // has obtained the primary lease.
            return t.sent(), this.ja.close(), // Remove the entry marking the client as zombied from LocalStorage since
            // we successfully deleted its metadata from IndexedDb.
            this.wc(), [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Returns clients that are not zombied and have an updateTime within the
   * provided threshold.
   */
  e.prototype.uc = function (t, e) {
    var n = this;
    return t.filter(function (t) {
      return n.cc(t.updateTimeMs, e) && !n.lc(t.clientId);
    });
  },
  /**
   * Returns the IDs of the clients that are currently active. If multi-tab
   * is not supported, returns an array that only contains the local client's
   * ID.
   *
   * PORTING NOTE: This is only used for Web multi-tab.
   */
  e.prototype.pi = function () {
    var t = this;
    return this.runTransaction("getActiveClients", "readonly", function (e) {
      return lo(e).ts().next(function (e) {
        return t.uc(e, 18e5).map(function (t) {
          return t.clientId;
        });
      });
    });
  }, Object.defineProperty(e.prototype, "Ei", {
    get: function get() {
      return this.Oa;
    },
    enumerable: !1,
    configurable: !0
  }), e.prototype.mc = function (t) {
    return Ti.xo(t, this.serializer, this.Dr, this.No);
  }, e.prototype.Tc = function () {
    return this.Ka;
  }, e.prototype.Ec = function () {
    return this.vr;
  }, e.prototype.Ic = function () {
    return this.Dr;
  }, e.prototype.runTransaction = function (t, e, n) {
    var r = this;
    l("IndexedDbPersistence", "Starting transaction:", t);
    var i,
        o = "readonly" === e ? "readonly" : "readwrite"; // Do all transactions as readwrite against all object stores, since we
    // are the only reader/writer.

    return this.ja.runTransaction(t, o, to, function (o) {
      return i = new co(o, r.Ma ? r.Ma.next() : qr.ai), "readwrite-primary" === e ? r.ec(i).next(function (t) {
        return !!t || r.nc(i);
      }).next(function (e) {
        if (!e) throw p("Failed to obtain primary lease for action '" + t + "'."), r.isPrimary = !1, r.fn.Cs(function () {
          return r.Qa(!1);
        }), new c(a.FAILED_PRECONDITION, ti);
        return n(i);
      }).next(function (t) {
        return r.ic(i).next(function () {
          return t;
        });
      }) : r.Ac(i).next(function () {
        return n(i);
      });
    }).then(function (t) {
      return i.br(), t;
    });
  },
  /**
   * Verifies that the current tab is the primary leaseholder or alternatively
   * that the leaseholder has opted into multi-tab synchronization.
   */
  // TODO(b/114226234): Remove this check when `synchronizeTabs` can no longer
  // be turned off.
  e.prototype.Ac = function (t) {
    var e = this;
    return fo(t).get(qi.key).next(function (t) {
      if (null !== t && e.cc(t.leaseTimestampMs, 5e3) && !e.lc(t.ownerId) && !e.rc(t) && !(e.ka || e.allowTabSynchronization && t.allowTabSynchronization)) throw new c(a.FAILED_PRECONDITION, ao);
    });
  },
  /**
   * Obtains or extends the new primary lease for the local client. This
   * method does not verify that the client is eligible for this lease.
   */
  e.prototype.ic = function (t) {
    var e = new qi(this.clientId, this.allowTabSynchronization, Date.now());
    return fo(t).put(qi.key, e);
  }, e.Ln = function () {
    return gr.Ln();
  },
  /** Checks the primary lease and removes it if we are the current primary. */
  e.prototype.sc = function (t) {
    var e = this,
        n = fo(t);
    return n.get(qi.key).next(function (t) {
      return e.rc(t) ? (l("IndexedDbPersistence", "Releasing primary lease."), n.delete(qi.key)) : yr.resolve();
    });
  },
  /** Verifies that `updateTimeMs` is within `maxAgeMs`. */
  e.prototype.cc = function (t, e) {
    var n = Date.now();
    return !(t < n - e || t > n && (p("Detected an update time that is in the future: " + t + " > " + n), 1));
  }, e.prototype.Ha = function () {
    var t = this;
    null !== this.document && "function" == typeof this.document.addEventListener && (this.Ba = function () {
      t.fn.ws(function () {
        return t.inForeground = "visible" === t.document.visibilityState, t.za();
      });
    }, this.document.addEventListener("visibilitychange", this.Ba), this.inForeground = "visible" === this.document.visibilityState);
  }, e.prototype.fc = function () {
    this.Ba && (this.document.removeEventListener("visibilitychange", this.Ba), this.Ba = null);
  },
  /**
   * Attaches a window.unload handler that will synchronously write our
   * clientId to a "zombie client id" location in LocalStorage. This can be used
   * by tabs trying to acquire the primary lease to determine that the lease
   * is no longer valid even if the timestamp is recent. This is particularly
   * important for the refresh case (so the tab correctly re-acquires the
   * primary lease). LocalStorage is used for this rather than IndexedDb because
   * it is a synchronous API and so can be used reliably from  an unload
   * handler.
   */
  e.prototype.Ya = function () {
    var t,
        e = this;
    "function" == typeof (null === (t = this.window) || void 0 === t ? void 0 : t.addEventListener) && (this.La = function () {
      // Note: In theory, this should be scheduled on the AsyncQueue since it
      // accesses internal state. We execute this code directly during shutdown
      // to make sure it gets a chance to run.
      e._c(), e.fn.ws(function () {
        return e.Di();
      });
    }, this.window.addEventListener("unload", this.La));
  }, e.prototype.dc = function () {
    this.La && (this.window.removeEventListener("unload", this.La), this.La = null);
  },
  /**
   * Returns whether a client is "zombied" based on its LocalStorage entry.
   * Clients become zombied when their tab closes without running all of the
   * cleanup logic in `shutdown()`.
   */
  e.prototype.lc = function (t) {
    var e;

    try {
      var n = null !== (null === (e = this.Ga) || void 0 === e ? void 0 : e.getItem(this.hc(t)));
      return l("IndexedDbPersistence", "Client '" + t + "' " + (n ? "is" : "is not") + " zombied in LocalStorage"), n;
    } catch (t) {
      // Gracefully handle if LocalStorage isn't working.
      return p("IndexedDbPersistence", "Failed to get zombied client id.", t), !1;
    }
  },
  /**
   * Record client as zombied (a client that had its tab closed). Zombied
   * clients are ignored during primary tab selection.
   */
  e.prototype._c = function () {
    if (this.Ga) try {
      this.Ga.setItem(this.hc(this.clientId), String(Date.now()));
    } catch (t) {
      // Gracefully handle if LocalStorage isn't available / working.
      p("Failed to set zombie client id.", t);
    }
  },
  /** Removes the zombied client entry if it exists. */
  e.prototype.wc = function () {
    if (this.Ga) try {
      this.Ga.removeItem(this.hc(this.clientId));
    } catch (t) {// Ignore
    }
  }, e.prototype.hc = function (t) {
    return "firestore_zombie_" + this.persistenceKey + "_" + t;
  }, e;
}();
/**
 * Oldest acceptable age in milliseconds for client metadata before the client
 * is considered inactive and its associated data is garbage collected.
 */

/**
 * Helper to get a typed SimpleDbStore for the primary client object store.
 */


function fo(t) {
  return ho.Qn(t, qi.store);
}
/**
 * Helper to get a typed SimpleDbStore for the client metadata object store.
 */


function lo(t) {
  return ho.Qn(t, Zi.store);
}
/** Provides LRU functionality for IndexedDB persistence. */


var po =
/** @class */
function () {
  function t(t, e) {
    this.db = t, this.wo = new ci(this, e);
  }

  return t.prototype.Po = function (t) {
    var e = this.Rc(t);
    return this.db.Tc().ba(t).next(function (t) {
      return e.next(function (e) {
        return t + e;
      });
    });
  }, t.prototype.Rc = function (t) {
    var e = 0;
    return this.Vo(t, function (t) {
      e++;
    }).next(function () {
      return e;
    });
  }, t.prototype.Ce = function (t, e) {
    return this.db.Tc().Ce(t, e);
  }, t.prototype.Vo = function (t, e) {
    return this.gc(t, function (t, n) {
      return e(n);
    });
  }, t.prototype.Da = function (t, e, n) {
    return vo(t, n);
  }, t.prototype.Na = function (t, e, n) {
    return vo(t, n);
  }, t.prototype.po = function (t, e, n) {
    return this.db.Tc().po(t, e, n);
  }, t.prototype.Go = function (t, e) {
    return vo(t, e);
  },
  /**
   * Returns true if anything would prevent this document from being garbage
   * collected, given that the document in question is not present in any
   * targets and has a sequence number less than or equal to the upper bound for
   * the collection run.
   */
  t.prototype.Pc = function (t, e) {
    return function (t, e) {
      var n = !1;
      return xi(t).os(function (r) {
        return Ni(t, r, e).next(function (t) {
          return t && (n = !0), yr.resolve(!t);
        });
      }).next(function () {
        return n;
      });
    }(t, e);
  }, t.prototype.bo = function (t, e) {
    var n = this,
        r = this.db.Ec().ra(),
        i = [],
        o = 0;
    return this.gc(t, function (s, u) {
      if (u <= e) {
        var a = n.Pc(t, s).next(function (e) {
          if (!e) // Our size accounting requires us to read all documents before
            // removing them.
            return o++, r.Rr(t, s).next(function () {
              return r.Ar(s), uo(t).delete([0, hi(s.path)]);
            });
        });
        i.push(a);
      }
    }).next(function () {
      return yr.$n(i);
    }).next(function () {
      return r.apply(t);
    }).next(function () {
      return o;
    });
  }, t.prototype.removeTarget = function (t, e) {
    var n = e.st(t.xa);
    return this.db.Tc().ya(t, n);
  }, t.prototype.yc = function (t, e) {
    return vo(t, e);
  },
  /**
   * Call provided function for each document in the cache that is 'orphaned'. Orphaned
   * means not a part of any target, so the only entry in the target-document index for
   * that document will be the sentinel row (targetId 0), which will also have the sequence
   * number for the last time the document was accessed.
   */
  t.prototype.gc = function (t, e) {
    var n,
        r = uo(t),
        i = qr.ai;
    return r.rs({
      index: Yi.documentTargetsIndex
    }, function (t, r) {
      var o = t[0],
          s = (t[1], r.path),
          u = r.sequenceNumber;
      0 === o ? ( // if nextToReport is valid, report it, this is a new key so the
      // last one must not be a member of any targets.
      i !== qr.ai && e(new A(pi(n)), i), // set nextToReport to be this sequence number. It's the next one we
      // might report, if we don't find any targets for this document.
      // Note that the sequence number must be defined when the targetId
      // is 0.
      i = u, n = s) : // set nextToReport to be invalid, we know we don't need to report
      // this one since we found a target for it.
      i = qr.ai;
    }).next(function () {
      // Since we report sequence numbers after getting to the next key, we
      // need to check if the last key we iterated over was an orphaned
      // document and report it.
      i !== qr.ai && e(new A(pi(n)), i);
    });
  }, t.prototype.So = function (t) {
    return this.db.Ec().aa(t);
  }, t;
}();

function vo(t, e) {
  return uo(t).put(
  /**
  * @return A value suitable for writing a sentinel row in the target-document
  * store.
  */
  function (t, e) {
    return new Yi(0, hi(t.path), e);
  }(e, t.xa));
}
/**
 * Generates a string used as a prefix when storing data in IndexedDB and
 * LocalStorage.
 */


function yo(t, e) {
  // Use two different prefix formats:
  //   * firestore / persistenceKey / projectID . databaseID / ...
  //   * firestore / persistenceKey / projectID / ...
  // projectIDs are DNS-compatible names and cannot contain dots
  // so there's no danger of collisions.
  var n = t.projectId;
  return t.j || (n += "." + t.database), "firestore/" + e + "/" + n + "/";
}

var go =
/** @class */
function () {
  function t(
  /** Manages our in-memory or durable persistence. */
  t, e, n) {
    this.persistence = t, this.Vc = e,
    /**
         * Maps a targetID to data about its target.
         *
         * PORTING NOTE: We are using an immutable data structure on Web to make re-runs
         * of `applyRemoteEvent()` idempotent.
         */
    this.bc = new bt(H),
    /** Maps a target to its targetID. */
    // TODO(wuandy): Evaluate if TargetId can be part of Target.
    this.vc = new it(function (t) {
      return lt(t);
    }, pt),
    /**
         * The read time of the last entry processed by `getNewDocumentChanges()`.
         *
         * PORTING NOTE: This is only used for multi-tab synchronization.
         */
    this.Sc = st.min(), this.Sr = t.mc(n), this.Dc = t.Ec(), this.Ka = t.Tc(), this.Cc = new ni(this.Dc, this.Sr, this.persistence.Ic()), this.Vc.Nc(this.Cc);
  }

  return t.prototype.Io = function (t) {
    var e = this;
    return this.persistence.runTransaction("Collect garbage", "readwrite-primary", function (n) {
      return t.vo(n, e.bc);
    });
  }, t;
}();
/**
 * Acknowledges the given batch.
 *
 * On the happy path when a batch is acknowledged, the local store will
 *
 *  + remove the batch from the mutation queue;
 *  + apply the changes to the remote document cache;
 *  + recalculate the latency compensated view implied by those changes (there
 *    may be mutations in the queue that affect the documents but haven't been
 *    acknowledged yet); and
 *  + give the changed documents back the sync engine
 *
 * @returns The resulting (modified) documents.
 */


function mo(t, e) {
  var n = m(t);
  return n.persistence.runTransaction("Acknowledge batch", "readwrite-primary", function (t) {
    var r = e.batch.keys(),
        i = n.Dc.ra({
      oa: !0
    });
    return function (t, e, n, r) {
      var i = n.batch,
          o = i.keys(),
          s = yr.resolve();
      return o.forEach(function (t) {
        s = s.next(function () {
          return r.Rr(e, t);
        }).next(function (e) {
          var o = e,
              s = n.dr.get(t);
          g(null !== s), (!o || o.version.L(s) < 0) && (o = i.cr(t, o, n)) && // We use the commitVersion as the readTime rather than the
          // document's updateTime since the updateTime is not advanced
          // for updates that do not modify the underlying document.
          r.Er(o, n._r);
        });
      }), s.next(function () {
        return t.Sr.Wo(e, i);
      });
    }(n, t, e, i).next(function () {
      return i.apply(t);
    }).next(function () {
      return n.Sr.zo(t);
    }).next(function () {
      return n.Cc.kr(t, r);
    });
  });
}
/**
 * Removes mutations from the MutationQueue for the specified batch;
 * LocalDocuments will be recalculated.
 *
 * @returns The resulting modified documents.
 */

/**
 * Returns the last consistent snapshot processed (used by the RemoteStore to
 * determine whether to buffer incoming snapshots from the backend).
 */


function wo(t) {
  var e = m(t);
  return e.persistence.runTransaction("Get last remote snapshot version", "readonly", function (t) {
    return e.Ka.Ea(t);
  });
}
/**
 * Updates the "ground-state" (remote) documents. We assume that the remote
 * event reflects any write batches that have been acknowledged or rejected
 * (i.e. we do not re-apply local mutations to updates from this event).
 *
 * LocalDocuments are re-calculated if there are remaining mutations in the
 * queue.
 */


function _o(t, e) {
  var n = m(t),
      r = e.nt,
      i = n.bc;
  return n.persistence.runTransaction("Apply remote event", "readwrite-primary", function (t) {
    var o = n.Dc.ra({
      oa: !0
    }); // Reset newTargetDataByTargetMap in case this transaction gets re-run.

    i = n.bc;
    var s = [];
    e.zt.forEach(function (e, o) {
      var u = i.get(o);

      if (u) {
        // Only update the remote keys if the target is still active. This
        // ensures that we can persist the updated target data along with
        // the updated assignment.
        s.push(n.Ka.Ca(t, e.se, o).next(function () {
          return n.Ka.Sa(t, e.ee, o);
        }));
        var a = e.resumeToken; // Update the resume token if the change includes one.

        if (a.O() > 0) {
          var c = u.it(a, r).st(t.xa);
          i = i.ot(o, c), // Update the target data if there are target changes (or if
          // sufficient time has passed since the last update).

          /**
          * Returns true if the newTargetData should be persisted during an update of
          * an active target. TargetData should always be persisted when a target is
          * being released and should not call this function.
          *
          * While the target is active, TargetData updates can be omitted when nothing
          * about the target has changed except metadata like the resume token or
          * snapshot version. Occasionally it's worth the extra write to prevent these
          * values from getting too stale after a crash, but this doesn't have to be
          * too frequent.
          */
          function (t, e, n) {
            // Always persist target data if we don't already have a resume token.
            return g(e.resumeToken.O() > 0), 0 === t.resumeToken.O() || // Don't allow resume token changes to be buffered indefinitely. This
            // allows us to be reasonably up-to-date after a crash and avoids needing
            // to loop over all active queries on shutdown. Especially in the browser
            // we may not get time to do anything interesting while the current tab is
            // closing.
            e.nt.X() - t.nt.X() >= 3e8 || n.ee.size + n.ne.size + n.se.size > 0;
          }(u, c, e) && s.push(n.Ka.ya(t, c));
        }
      }
    });
    var u = St(),
        a = Ot(); // HACK: The only reason we allow a null snapshot version is so that we
    // can synthesize remote events when we get permission denied errors while
    // trying to resolve the state of a locally cached document that is in
    // limbo.

    if (e.Yt.forEach(function (t, e) {
      a = a.add(t);
    }), // Each loop iteration only affects its "own" doc, so it's safe to get all the remote
    // documents in advance in a single call.
    s.push(o.getEntries(t, a).next(function (i) {
      e.Yt.forEach(function (a, c) {
        var h = i.get(a); // Note: The order of the steps below is important, since we want
        // to ensure that rejected limbo resolutions (which fabricate
        // NoDocuments with SnapshotVersion.min()) never add documents to
        // cache.

        c instanceof Rn && c.version.isEqual(st.min()) ? ( // NoDocuments with SnapshotVersion.min() are used in manufactured
        // events. We remove these documents from cache since we lost
        // access.
        o.Ar(a, r), u = u.ot(a, c)) : null == h || c.version.L(h.version) > 0 || 0 === c.version.L(h.version) && h.hasPendingWrites ? (o.Er(c, r), u = u.ot(a, c)) : l("LocalStore", "Ignoring outdated watch update for ", a, ". Current version:", h.version, " Watch version:", c.version), e.Jt.has(a) && s.push(n.persistence.No.yc(t, a));
      });
    })), !r.isEqual(st.min())) {
      var c = n.Ka.Ea(t).next(function (e) {
        return n.Ka.Aa(t, t.xa, r);
      });
      s.push(c);
    }

    return yr.$n(s).next(function () {
      return o.apply(t);
    }).next(function () {
      return n.Cc.Mr(t, u);
    });
  }).then(function (t) {
    return n.bc = i, t;
  });
}
/**
 * Gets the mutation batch after the passed in batchId in the mutation queue
 * or null if empty.
 * @param afterBatchId If provided, the batch to search after.
 * @returns The next mutation or null if there wasn't one.
 */


function bo(t, e) {
  var n = m(t);
  return n.persistence.runTransaction("Get next mutation batch", "readonly", function (t) {
    return void 0 === e && (e = -1), n.Sr.Bo(t, e);
  });
}
/**
 * Reads the current value of a Document with a given key or null if not
 * found - used for testing.
 */

/**
 * Assigns the given target an internal ID so that its results can be pinned so
 * they don't get GC'd. A target must be allocated in the local store before
 * the store can be used to manage its view.
 *
 * Allocating an already allocated `Target` will return the existing `TargetData`
 * for that `Target`.
 */


function Io(t, e) {
  var n = m(t);
  return n.persistence.runTransaction("Allocate target", "readwrite", function (t) {
    var r;
    return n.Ka.va(t, e).next(function (i) {
      return i ? ( // This target has been listened to previously, so reuse the
      // previous targetID.
      // TODO(mcg): freshen last accessed date?
      r = i, yr.resolve(r)) : n.Ka.wa(t).next(function (i) {
        return r = new gt(e, i, 0
        /* Listen */
        , t.xa), n.Ka.Ra(t, r).next(function () {
          return r;
        });
      });
    });
  }).then(function (t) {
    // If Multi-Tab is enabled, the existing target data may be newer than
    // the in-memory data
    var r = n.bc.get(t.targetId);
    return (null === r || t.nt.L(r.nt) > 0) && (n.bc = n.bc.ot(t.targetId, t), n.vc.set(e, t.targetId)), t;
  });
}
/**
 * Returns the TargetData as seen by the LocalStore, including updates that may
 * have not yet been persisted to the TargetCache.
 */
// Visible for testing.

/**
 * Unpins all the documents associated with the given target. If
 * `keepPersistedTargetData` is set to false and Eager GC enabled, the method
 * directly removes the associated target data from the target cache.
 *
 * Releasing a non-existing `Target` is a no-op.
 */
// PORTING NOTE: `keepPersistedTargetData` is multi-tab only.


function Eo(e, n, r) {
  return t.__awaiter(this, void 0, void 0, function () {
    var i, o, s, u;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          i = m(e), o = i.bc.get(n), s = r ? "readwrite" : "readwrite-primary", t.label = 1;

        case 1:
          return t.trys.push([1, 4,, 5]), r ? [3
          /*break*/
          , 3] : [4
          /*yield*/
          , i.persistence.runTransaction("Release target", s, function (t) {
            return i.persistence.No.removeTarget(t, o);
          })];

        case 2:
          t.sent(), t.label = 3;

        case 3:
          return [3
          /*break*/
          , 5];

        case 4:
          if (!_r(u = t.sent())) throw u; // All `releaseTarget` does is record the final metadata state for the
          // target, but we've been recording this periodically during target
          // activity. If we lose this write this could cause a very slight
          // difference in the order of target deletion during GC, but we
          // don't define exact LRU semantics so this is acceptable.

          return l("LocalStore", "Failed to update sequence numbers for target " + n + ": " + u), [3
          /*break*/
          , 5];

        case 5:
          return i.bc = i.bc.remove(n), i.vc.delete(o.target), [2
          /*return*/
          ];
      }
    });
  });
}
/**
 * Runs the specified query against the local store and returns the results,
 * potentially taking advantage of query data from previous executions (such
 * as the set of remote keys).
 *
 * @param usePreviousResults Whether results from previous executions can
 * be used to optimize this query execution.
 */


function To(t, e, n) {
  var r = m(t),
      i = st.min(),
      o = Ot();
  return r.persistence.runTransaction("Execute query", "readonly", function (t) {
    return function (t, e, n) {
      var r = m(t),
          i = r.vc.get(n);
      return void 0 !== i ? yr.resolve(r.bc.get(i)) : r.Ka.va(e, n);
    }(r, t, zn(e)).next(function (e) {
      if (e) return i = e.lastLimboFreeSnapshotVersion, r.Ka.Fa(t, e.targetId).next(function (t) {
        o = t;
      });
    }).next(function () {
      return r.Vc.Lr(t, e, n ? i : st.min(), n ? o : Ot());
    }).next(function (t) {
      return {
        documents: t,
        Fc: o
      };
    });
  });
} // PORTING NOTE: Multi-Tab only.


function No(t, e) {
  var n = m(t),
      r = m(n.Ka),
      i = n.bc.get(e);
  return i ? Promise.resolve(i.target) : n.persistence.runTransaction("Get target data", "readonly", function (t) {
    return r.Ue(t, e).next(function (t) {
      return t ? t.target : null;
    });
  });
}
/**
 * Returns the set of documents that have been updated since the last call.
 * If this is the first call, returns the set of changes since client
 * initialization. Further invocations will return document that have changed
 * since the prior call.
 */
// PORTING NOTE: Multi-Tab only.


function Ao(t) {
  var e = m(t);
  return e.persistence.runTransaction("Get new document changes", "readonly", function (t) {
    return function (t, e, n) {
      var r = m(t),
          i = St(),
          o = gi(n),
          s = Oi(e),
          u = IDBKeyRange.lowerBound(o, !0);
      return s.rs({
        index: Ki.readTimeIndex,
        range: u
      }, function (t, e) {
        // Unlike `getEntry()` and others, `getNewDocumentChanges()` parses
        // the documents directly since we want to keep sentinel deletes.
        var n = vi(r.serializer, e);
        i = i.ot(n.key, n), o = e.readTime;
      }).next(function () {
        return {
          xc: i,
          readTime: mi(o)
        };
      });
    }(e.Dc, t, e.Sc);
  }).then(function (t) {
    var n = t.xc,
        r = t.readTime;
    return e.Sc = r, n;
  });
}
/**
 * Reads the newest document change from persistence and moves the internal
 * synchronization marker forward so that calls to `getNewDocumentChanges()`
 * only return changes that happened after client initialization.
 */
// PORTING NOTE: Multi-Tab only.


function So(e) {
  return t.__awaiter(this, void 0, void 0, function () {
    var n;
    return t.__generator(this, function (t) {
      return [2
      /*return*/
      , (n = m(e)).persistence.runTransaction("Synchronize last document change read time", "readonly", function (t) {
        return function (t) {
          var e = Oi(t),
              n = st.min(); // If there are no existing entries, we return SnapshotVersion.min().

          return e.rs({
            index: Ki.readTimeIndex,
            reverse: !0
          }, function (t, e, r) {
            e.readTime && (n = mi(e.readTime)), r.done();
          }).next(function () {
            return n;
          });
        }(t);
      }).then(function (t) {
        n.Sc = t;
      })];
    });
  });
}
/**
 * Verifies the error thrown by a LocalStore operation. If a LocalStore
 * operation fails because the primary lease has been taken by another client,
 * we ignore the error (the persistence layer will immediately call
 * `applyPrimaryLease` to propagate the primary state change). All other errors
 * are re-thrown.
 *
 * @param err An error returned by a LocalStore operation.
 * @return A Promise that resolves after we recovered, or the original error.
 */


function Do(e) {
  return t.__awaiter(this, void 0, void 0, function () {
    return t.__generator(this, function (t) {
      if (e.code !== a.FAILED_PRECONDITION || e.message !== ti) throw e;
      return l("LocalStore", "Unexpectedly lost primary lease"), [2
      /*return*/
      ];
    });
  });
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * A collection of references to a document from some kind of numbered entity
 * (either a target ID or batch ID). As references are added to or removed from
 * the set corresponding events are emitted to a registered garbage collector.
 *
 * Each reference is represented by a DocumentReference object. Each of them
 * contains enough information to uniquely identify the reference. They are all
 * stored primarily in a set sorted by key. A document is considered garbage if
 * there's no references in that set (this can be efficiently checked thanks to
 * sorting by key).
 *
 * ReferenceSet also keeps a secondary set that contains references sorted by
 * IDs. This one is used to efficiently implement removal of all references by
 * some target ID.
 */


var xo =
/** @class */
function () {
  function t() {
    // A set of outstanding references to a document sorted by key.
    this.$c = new Tt(Lo.kc), // A set of outstanding references to a document sorted by target id.
    this.Mc = new Tt(Lo.Oc);
  }

  return t.prototype.m = function () {
    return this.$c.m();
  },
  /** Adds a reference to the given document key for the given ID. */
  t.prototype.Da = function (t, e) {
    var n = new Lo(t, e);
    this.$c = this.$c.add(n), this.Mc = this.Mc.add(n);
  },
  /** Add references to the given document keys for the given ID. */
  t.prototype.Lc = function (t, e) {
    var n = this;
    t.forEach(function (t) {
      return n.Da(t, e);
    });
  },
  /**
   * Removes a reference to the given document key for the given
   * ID.
   */
  t.prototype.Na = function (t, e) {
    this.Bc(new Lo(t, e));
  }, t.prototype.qc = function (t, e) {
    var n = this;
    t.forEach(function (t) {
      return n.Na(t, e);
    });
  },
  /**
   * Clears all references with a given ID. Calls removeRef() for each key
   * removed.
   */
  t.prototype.Uc = function (t) {
    var e = this,
        n = new A(new E([])),
        r = new Lo(n, t),
        i = new Lo(n, t + 1),
        o = [];
    return this.Mc.Ft([r, i], function (t) {
      e.Bc(t), o.push(t.key);
    }), o;
  }, t.prototype.Qc = function () {
    var t = this;
    this.$c.forEach(function (e) {
      return t.Bc(e);
    });
  }, t.prototype.Bc = function (t) {
    this.$c = this.$c.delete(t), this.Mc = this.Mc.delete(t);
  }, t.prototype.Wc = function (t) {
    var e = new A(new E([])),
        n = new Lo(e, t),
        r = new Lo(e, t + 1),
        i = Ot();
    return this.Mc.Ft([n, r], function (t) {
      i = i.add(t.key);
    }), i;
  }, t.prototype.Ho = function (t) {
    var e = new Lo(t, 0),
        n = this.$c.$t(e);
    return null !== n && t.isEqual(n.key);
  }, t;
}(),
    Lo =
/** @class */
function () {
  function t(t, e) {
    this.key = t, this.jc = e;
  }

  return t.kc = function (t, e) {
    return A.i(t.key, e.key) || H(t.jc, e.jc);
  },
  /** Compare by ID then by key */
  t.Oc = function (t, e) {
    return H(t.jc, e.jc) || A.i(t.key, e.key);
  }, t;
}(),
    ko = function ko(t, e) {
  this.user = e, this.type = "OAuth", this.Kc = {}, // Set the headers using Object Literal notation to avoid minification
  this.Kc.Authorization = "Bearer " + t;
},
    Ro =
/** @class */
function () {
  function t() {
    /**
     * Stores the listener registered with setChangeListener()
     * This isn't actually necessary since the UID never changes, but we use this
     * to verify the listen contract is adhered to in tests.
     */
    this.Gc = null;
  }

  return t.prototype.getToken = function () {
    return Promise.resolve(null);
  }, t.prototype.zc = function () {}, t.prototype.Hc = function (t) {
    this.Gc = t, // Fire with initial user.
    t(Mr.UNAUTHENTICATED);
  }, t.prototype.Yc = function () {
    this.Gc = null;
  }, t;
}(),
    Oo =
/** @class */
function () {
  function t(t) {
    var e = this;
    /**
     * The auth token listener registered with FirebaseApp, retained here so we
     * can unregister it.
     */

    this.Jc = null,
    /** Tracks the current User. */
    this.currentUser = Mr.UNAUTHENTICATED, this.Xc = !1,
    /**
         * Counter used to detect if the token changed while a getToken request was
         * outstanding.
         */
    this.Zc = 0,
    /** The listener registered with setChangeListener(). */
    this.Gc = null, this.forceRefresh = !1, this.Jc = function () {
      e.Zc++, e.currentUser = e.tu(), e.Xc = !0, e.Gc && e.Gc(e.currentUser);
    }, this.Zc = 0, this.auth = t.getImmediate({
      optional: !0
    }), this.auth ? this.auth.addAuthTokenListener(this.Jc) : ( // if auth is not available, invoke tokenListener once with null token
    this.Jc(null), t.get().then(function (t) {
      e.auth = t, e.Jc && // tokenListener can be removed by removeChangeListener()
      e.auth.addAuthTokenListener(e.Jc);
    }, function () {}));
  }

  return t.prototype.getToken = function () {
    var t = this,
        e = this.Zc,
        n = this.forceRefresh; // Take note of the current value of the tokenCounter so that this method
    // can fail (with an ABORTED error) if there is a token change while the
    // request is outstanding.

    return this.forceRefresh = !1, this.auth ? this.auth.getToken(n).then(function (n) {
      // Cancel the request since the token changed while the request was
      // outstanding so the response is potentially for a previous user (which
      // user, we can't be sure).
      return t.Zc !== e ? (l("FirebaseCredentialsProvider", "getToken aborted due to token change."), t.getToken()) : n ? (g("string" == typeof n.accessToken), new ko(n.accessToken, t.currentUser)) : null;
    }) : Promise.resolve(null);
  }, t.prototype.zc = function () {
    this.forceRefresh = !0;
  }, t.prototype.Hc = function (t) {
    this.Gc = t, // Fire the initial event
    this.Xc && t(this.currentUser);
  }, t.prototype.Yc = function () {
    this.auth && this.auth.removeAuthTokenListener(this.Jc), this.Jc = null, this.Gc = null;
  }, // Auth.getUid() can return null even with a user logged in. It is because
  // getUid() is synchronous, but the auth code populating Uid is asynchronous.
  // This method should only be called in the AuthTokenListener callback
  // to guarantee to get the actual user.
  t.prototype.tu = function () {
    var t = this.auth && this.auth.getUid();
    return g(null === t || "string" == typeof t), new Mr(t);
  }, t;
}(),
    Po =
/** @class */
function () {
  function t(t, e) {
    this.eu = t, this.nu = e, this.type = "FirstParty", this.user = Mr.ni;
  }

  return Object.defineProperty(t.prototype, "Kc", {
    get: function get() {
      var t = {
        "X-Goog-AuthUser": this.nu
      },
          e = this.eu.auth.getAuthHeaderValueForFirstParty([]); // Use array notation to prevent minification

      return e && (t.Authorization = e), t;
    },
    enumerable: !1,
    configurable: !0
  }), t;
}(),
    Vo =
/** @class */
function () {
  function t(t, e) {
    this.eu = t, this.nu = e;
  }

  return t.prototype.getToken = function () {
    return Promise.resolve(new Po(this.eu, this.nu));
  }, t.prototype.Hc = function (t) {
    // Fire with initial uid.
    t(Mr.ni);
  }, t.prototype.Yc = function () {}, t.prototype.zc = function () {}, t;
}(),
    Uo =
/** @class */
function () {
  function e(t, e, n, r, i, o) {
    this.fn = t, this.su = n, this.iu = r, this.ru = i, this.listener = o, this.state = 0
    /* Initial */
    ,
    /**
         * A close count that's incremented every time the stream is closed; used by
         * getCloseGuardedDispatcher() to invalidate callbacks that happen after
         * close.
         */
    this.ou = 0, this.au = null, this.stream = null, this.ys = new vr(t, e);
  }

  return e.prototype.cu = function () {
    return 1
    /* Starting */
    === this.state || 2
    /* Open */
    === this.state || 4
    /* Backoff */
    === this.state;
  },
  /**
   * Returns true if the underlying RPC is open (the onOpen() listener has been
   * called) and the stream is ready for outbound requests.
   */
  e.prototype.uu = function () {
    return 2
    /* Open */
    === this.state;
  },
  /**
   * Starts the RPC. Only allowed if isStarted() returns false. The stream is
   * not immediately ready for use: onOpen() will be invoked when the RPC is
   * ready for outbound requests, at which point isOpen() will return true.
   *
   * When start returns, isStarted() will return true.
   */
  e.prototype.start = function () {
    3
    /* Error */
    !== this.state ? this.auth() : this.hu();
  },
  /**
   * Stops the RPC. This call is idempotent and allowed regardless of the
   * current isStarted() state.
   *
   * When stop returns, isStarted() and isOpen() will both return false.
   */
  e.prototype.stop = function () {
    return t.__awaiter(this, void 0, void 0, function () {
      return t.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return this.cu() ? [4
            /*yield*/
            , this.close(0
            /* Initial */
            )] : [3
            /*break*/
            , 2];

          case 1:
            t.sent(), t.label = 2;

          case 2:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * After an error the stream will usually back off on the next attempt to
   * start it. If the error warrants an immediate restart of the stream, the
   * sender can use this to indicate that the receiver should not back off.
   *
   * Each error will call the onClose() listener. That function can decide to
   * inhibit backoff if required.
   */
  e.prototype.lu = function () {
    this.state = 0
    /* Initial */
    , this.ys.reset();
  },
  /**
   * Marks this stream as idle. If no further actions are performed on the
   * stream for one minute, the stream will automatically close itself and
   * notify the stream's onClose() handler with Status.OK. The stream will then
   * be in a !isStarted() state, requiring the caller to start the stream again
   * before further use.
   *
   * Only streams that are in state 'Open' can be marked idle, as all other
   * states imply pending network operations.
   */
  e.prototype._u = function () {
    var t = this; // Starts the idle time if we are in state 'Open' and are not yet already
    // running a timer (in which case the previous idle timeout still applies).

    this.uu() && null === this.au && (this.au = this.fn.yn(this.su, 6e4, function () {
      return t.fu();
    }));
  },
  /** Sends a message to the underlying stream. */
  e.prototype.du = function (t) {
    this.wu(), this.stream.send(t);
  },
  /** Called by the idle timer when the stream should close due to inactivity. */
  e.prototype.fu = function () {
    return t.__awaiter(this, void 0, void 0, function () {
      return t.__generator(this, function (t) {
        return this.uu() ? [2
        /*return*/
        , this.close(0
        /* Initial */
        )] : [2
        /*return*/
        ];
      });
    });
  },
  /** Marks the stream as active again. */
  e.prototype.wu = function () {
    this.au && (this.au.cancel(), this.au = null);
  },
  /**
   * Closes the stream and cleans up as necessary:
   *
   * * closes the underlying GRPC stream;
   * * calls the onClose handler with the given 'error';
   * * sets internal stream state to 'finalState';
   * * adjusts the backoff timer based on the error
   *
   * A new stream can be opened by calling start().
   *
   * @param finalState the intended state of the stream after closing.
   * @param error the error the connection was closed with.
   */
  e.prototype.close = function (e, n) {
    return t.__awaiter(this, void 0, void 0, function () {
      return t.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            // Notify the listener that the stream closed.
            // Cancel any outstanding timers (they're guaranteed not to execute).
            return this.wu(), this.ys.cancel(), // Invalidates any stream-related callbacks (e.g. from auth or the
            // underlying stream), guaranteeing they won't execute.
            this.ou++, 3
            /* Error */
            !== e ? // If this is an intentional close ensure we don't delay our next connection attempt.
            this.ys.reset() : n && n.code === a.RESOURCE_EXHAUSTED ? ( // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)
            p(n.toString()), p("Using maximum backoff delay to prevent overloading the backend."), this.ys.Rn()) : n && n.code === a.UNAUTHENTICATED && // "unauthenticated" error means the token was rejected. Try force refreshing it in case it
            // just expired.
            this.ru.zc(), // Clean up the underlying stream because we are no longer interested in events.
            null !== this.stream && (this.mu(), this.stream.close(), this.stream = null), // This state must be assigned before calling onClose() to allow the callback to
            // inhibit backoff or otherwise manipulate the state in its non-started state.
            this.state = e, [4
            /*yield*/
            , this.listener.Tu(n)];

          case 1:
            // Cancel any outstanding timers (they're guaranteed not to execute).
            // Notify the listener that the stream closed.
            return t.sent(), [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Can be overridden to perform additional cleanup before the stream is closed.
   * Calling super.tearDown() is not required.
   */
  e.prototype.mu = function () {}, e.prototype.auth = function () {
    var t = this;
    this.state = 1
    /* Starting */
    ;
    var e = this.Eu(this.ou),
        n = this.ou; // TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.

    this.ru.getToken().then(function (e) {
      // Stream can be stopped while waiting for authentication.
      // TODO(mikelehen): We really should just use dispatchIfNotClosed
      // and let this dispatch onto the queue, but that opened a spec test can
      // of worms that I don't want to deal with in this PR.
      t.ou === n && // Normally we'd have to schedule the callback on the AsyncQueue.
      // However, the following calls are safe to be called outside the
      // AsyncQueue since they don't chain asynchronous calls
      t.Iu(e);
    }, function (n) {
      e(function () {
        var e = new c(a.UNKNOWN, "Fetching auth token failed: " + n.message);
        return t.Au(e);
      });
    });
  }, e.prototype.Iu = function (t) {
    var e = this,
        n = this.Eu(this.ou);
    this.stream = this.Ru(t), this.stream.gu(function () {
      n(function () {
        return e.state = 2
        /* Open */
        , e.listener.gu();
      });
    }), this.stream.Tu(function (t) {
      n(function () {
        return e.Au(t);
      });
    }), this.stream.onMessage(function (t) {
      n(function () {
        return e.onMessage(t);
      });
    });
  }, e.prototype.hu = function () {
    var e = this;
    this.state = 4
    /* Backoff */
    , this.ys.gn(function () {
      return t.__awaiter(e, void 0, void 0, function () {
        return t.__generator(this, function (t) {
          return this.state = 0
          /* Initial */
          , this.start(), [2
          /*return*/
          ];
        });
      });
    });
  }, // Visible for tests
  e.prototype.Au = function (t) {
    // In theory the stream could close cleanly, however, in our current model
    // we never expect this to happen because if we stop a stream ourselves,
    // this callback will never be called. To prevent cases where we retry
    // without a backoff accidentally, we set the stream to error in all cases.
    return l("PersistentStream", "close with error: " + t), this.stream = null, this.close(3
    /* Error */
    , t);
  },
  /**
   * Returns a "dispatcher" function that dispatches operations onto the
   * AsyncQueue but only runs them if closeCount remains unchanged. This allows
   * us to turn auth / stream callbacks into no-ops if the stream is closed /
   * re-opened, etc.
   */
  e.prototype.Eu = function (t) {
    var e = this;
    return function (n) {
      e.fn.ws(function () {
        return e.ou === t ? n() : (l("PersistentStream", "stream callback skipped by getCloseGuardedDispatcher."), Promise.resolve());
      });
    };
  }, e;
}(),
    Co =
/** @class */
function (e) {
  function n(t, n, r, i, o) {
    var s = this;
    return (s = e.call(this, t, "listen_stream_connection_backoff"
    /* ListenStreamConnectionBackoff */
    , "listen_stream_idle"
    /* ListenStreamIdle */
    , n, r, o) || this).serializer = i, s;
  }

  return t.__extends(n, e), n.prototype.Ru = function (t) {
    return this.iu.Pu("Listen", t);
  }, n.prototype.onMessage = function (t) {
    // A successful response means the stream is healthy
    this.ys.reset();

    var e = function (t, e) {
      var n;

      if ("targetChange" in e) {
        e.targetChange; // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'
        // if unset

        var r = function (t) {
          return "NO_CHANGE" === t ? 0
          /* NoChange */
          : "ADD" === t ? 1
          /* Added */
          : "REMOVE" === t ? 2
          /* Removed */
          : "CURRENT" === t ? 3
          /* Current */
          : "RESET" === t ? 4
          /* Reset */
          : y();
        }(e.targetChange.targetChangeType || "NO_CHANGE"),
            i = e.targetChange.targetIds || [],
            o = function (t, e) {
          return t.Qe ? (g(void 0 === e || "string" == typeof e), X.fromBase64String(e || "")) : (g(void 0 === e || e instanceof Uint8Array), X.fromUint8Array(e || new Uint8Array()));
        }(t, e.targetChange.resumeToken),
            s = e.targetChange.cause,
            u = s && function (t) {
          var e = void 0 === t.code ? a.UNKNOWN : _t(t.code);
          return new c(e, t.message || "");
        }(s);

        n = new zt(r, i, o, u || null);
      } else if ("documentChange" in e) {
        e.documentChange;
        var h = e.documentChange;
        h.document, h.document.name, h.document.updateTime;
        var f = Se(t, h.document.name),
            l = Ee(h.document.updateTime),
            p = new Sn({
          mapValue: {
            fields: h.document.fields
          }
        }),
            d = new kn(f, l, p, {}),
            v = h.targetIds || [],
            m = h.removedTargetIds || [];
        n = new jt(v, m, d.key, d);
      } else if ("documentDelete" in e) {
        e.documentDelete;
        var w = e.documentDelete;
        w.document;

        var _ = Se(t, w.document),
            b = w.readTime ? Ee(w.readTime) : st.min(),
            I = new Rn(_, b),
            E = w.removedTargetIds || [];

        n = new jt([], E, I.key, I);
      } else if ("documentRemove" in e) {
        e.documentRemove;
        var T = e.documentRemove;
        T.document;
        var N = Se(t, T.document),
            A = T.removedTargetIds || [];
        n = new jt([], A, N, null);
      } else {
        if (!("filter" in e)) return y();
        e.filter;
        var S = e.filter;
        S.targetId;
        var D = S.count || 0,
            x = new mt(D),
            L = S.targetId;
        n = new Gt(L, x);
      }

      return n;
    }(this.serializer, t),
        n = function (t) {
      // We have only reached a consistent snapshot for the entire stream if there
      // is a read_time set and it applies to all targets (i.e. the list of
      // targets is empty). The backend is guaranteed to send such responses.
      if (!("targetChange" in t)) return st.min();
      var e = t.targetChange;
      return e.targetIds && e.targetIds.length ? st.min() : e.readTime ? Ee(e.readTime) : st.min();
    }(t);

    return this.listener.yu(e, n);
  },
  /**
   * Registers interest in the results of the given target. If the target
   * includes a resumeToken it will be included in the request. Results that
   * affect the target will be streamed back as WatchChange messages that
   * reference the targetId.
   */
  n.prototype.Vu = function (t) {
    var e = {};
    e.database = Le(this.serializer), e.addTarget = function (t, e) {
      var n,
          r = e.target;
      return (n = dt(r) ? {
        documents: Ve(t, r)
      } : {
        query: Ue(t, r)
      }).targetId = e.targetId, e.resumeToken.O() > 0 && (n.resumeToken = be(t, e.resumeToken)), n;
    }(this.serializer, t);

    var n = function (t, e) {
      var n = function (t, e) {
        switch (e) {
          case 0
          /* Listen */
          :
            return null;

          case 1
          /* ExistenceFilterMismatch */
          :
            return "existence-filter-mismatch";

          case 2
          /* LimboResolution */
          :
            return "limbo-document";

          default:
            return y();
        }
      }(0, e.et);

      return null == n ? null : {
        "goog-listen-tags": n
      };
    }(this.serializer, t);

    n && (e.labels = n), this.du(e);
  },
  /**
   * Unregisters interest in the results of the target associated with the
   * given targetId.
   */
  n.prototype.pu = function (t) {
    var e = {};
    e.database = Le(this.serializer), e.removeTarget = t, this.du(e);
  }, n;
}(Uo),
    Fo =
/** @class */
function (e) {
  function n(t, n, r, i, o) {
    var s = this;
    return (s = e.call(this, t, "write_stream_connection_backoff"
    /* WriteStreamConnectionBackoff */
    , "write_stream_idle"
    /* WriteStreamIdle */
    , n, r, o) || this).serializer = i, s.bu = !1, s;
  }

  return t.__extends(n, e), Object.defineProperty(n.prototype, "vu", {
    /**
     * Tracks whether or not a handshake has been successfully exchanged and
     * the stream is ready to accept mutations.
     */
    get: function get() {
      return this.bu;
    },
    enumerable: !1,
    configurable: !0
  }), // Override of PersistentStream.start
  n.prototype.start = function () {
    this.bu = !1, this.lastStreamToken = void 0, e.prototype.start.call(this);
  }, n.prototype.mu = function () {
    this.bu && this.Su([]);
  }, n.prototype.Ru = function (t) {
    return this.iu.Pu("Write", t);
  }, n.prototype.onMessage = function (t) {
    if ( // Always capture the last stream token.
    g(!!t.streamToken), this.lastStreamToken = t.streamToken, this.bu) {
      // A successful first write response means the stream is healthy,
      // Note, that we could consider a successful handshake healthy, however,
      // the write itself might be causing an error we want to back off from.
      this.ys.reset();

      var e = function (t, e) {
        return t && t.length > 0 ? (g(void 0 !== e), t.map(function (t) {
          return function (t, e) {
            // NOTE: Deletes don't have an updateTime.
            var n = t.updateTime ? Ee(t.updateTime) : Ee(e);
            n.isEqual(st.min()) && ( // The Firestore Emulator currently returns an update time of 0 for
            // deletes of non-existing documents (rather than null). This breaks the
            // test "get deleted doc while offline with source=cache" as NoDocuments
            // with version 0 are filtered by IndexedDb's RemoteDocumentCache.
            // TODO(#2149): Remove this when Emulator is fixed
            n = Ee(e));
            var r = null;
            return t.transformResults && t.transformResults.length > 0 && (r = t.transformResults), new hn(n, r);
          }(t, e);
        })) : [];
      }(t.writeResults, t.commitTime),
          n = Ee(t.commitTime);

      return this.listener.Du(n, e);
    } // The first response is always the handshake response


    return g(!t.writeResults || 0 === t.writeResults.length), this.bu = !0, this.listener.Cu();
  },
  /**
   * Sends an initial streamToken to the server, performing the handshake
   * required to make the StreamingWrite RPC work. Subsequent
   * calls should wait until onHandshakeComplete was called.
   */
  n.prototype.Nu = function () {
    // TODO(dimond): Support stream resumption. We intentionally do not set the
    // stream token on the handshake, ignoring any stream token we might have.
    var t = {};
    t.database = Le(this.serializer), this.du(t);
  },
  /** Sends a group of mutations to the Firestore backend to apply. */
  n.prototype.Su = function (t) {
    var e = this,
        n = {
      streamToken: this.lastStreamToken,
      writes: t.map(function (t) {
        return Oe(e.serializer, t);
      })
    };
    this.du(n);
  }, n;
}(Uo),
    Mo =
/** @class */
function (e) {
  function n(t, n, r) {
    var i = this;
    return (i = e.call(this) || this).credentials = t, i.iu = n, i.serializer = r, i.Fu = !1, i;
  }

  return t.__extends(n, e), n.prototype.xu = function () {
    if (this.Fu) throw new c(a.FAILED_PRECONDITION, "The client has already been terminated.");
  },
  /** Gets an auth token and invokes the provided RPC. */
  n.prototype.$u = function (t, e, n) {
    var r = this;
    return this.xu(), this.credentials.getToken().then(function (i) {
      return r.iu.$u(t, e, n, i);
    }).catch(function (t) {
      throw t.code === a.UNAUTHENTICATED && r.credentials.zc(), t;
    });
  },
  /** Gets an auth token and invokes the provided RPC with streamed results. */
  n.prototype.ku = function (t, e, n) {
    var r = this;
    return this.xu(), this.credentials.getToken().then(function (i) {
      return r.iu.ku(t, e, n, i);
    }).catch(function (t) {
      throw t.code === a.UNAUTHENTICATED && r.credentials.zc(), t;
    });
  }, n.prototype.terminate = function () {
    this.Fu = !1;
  }, n;
}(function () {}),
    qo =
/** @class */
function () {
  function t(t, e) {
    this.cs = t, this.di = e,
    /** The current OnlineState. */
    this.state = "Unknown"
    /* Unknown */
    ,
    /**
         * A count of consecutive failures to open the stream. If it reaches the
         * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to
         * Offline.
         */
    this.Mu = 0,
    /**
         * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we
         * transition from OnlineState.Unknown to OnlineState.Offline without waiting
         * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).
         */
    this.Ou = null,
    /**
         * Whether the client should log a warning message if it fails to connect to
         * the backend (initially true, cleared after a successful stream, or if we've
         * logged the message already).
         */
    this.Lu = !0;
  }

  return t.prototype.Bu = function () {
    var t = this;
    0 === this.Mu && (this.qu("Unknown"
    /* Unknown */
    ), this.Ou = this.cs.yn("online_state_timeout"
    /* OnlineStateTimeout */
    , 1e4, function () {
      return t.Ou = null, t.Uu("Backend didn't respond within 10 seconds."), t.qu("Offline"
      /* Offline */
      ), Promise.resolve();
    }));
  },
  /**
   * Updates our OnlineState as appropriate after the watch stream reports a
   * failure. The first failure moves us to the 'Unknown' state. We then may
   * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we
   * actually transition to the 'Offline' state.
   */
  t.prototype.Qu = function (t) {
    "Online"
    /* Online */
    === this.state ? this.qu("Unknown"
    /* Unknown */
    ) : (this.Mu++, this.Mu >= 1 && (this.Wu(), this.Uu("Connection failed 1 times. Most recent error: " + t.toString()), this.qu("Offline"
    /* Offline */
    )));
  },
  /**
   * Explicitly sets the OnlineState to the specified state.
   *
   * Note that this resets our timers / failure counters, etc. used by our
   * Offline heuristics, so must not be used in place of
   * handleWatchStreamStart() and handleWatchStreamFailure().
   */
  t.prototype.set = function (t) {
    this.Wu(), this.Mu = 0, "Online"
    /* Online */
    === t && ( // We've connected to watch at least once. Don't warn the developer
    // about being offline going forward.
    this.Lu = !1), this.qu(t);
  }, t.prototype.qu = function (t) {
    t !== this.state && (this.state = t, this.di(t));
  }, t.prototype.Uu = function (t) {
    var e = "Could not reach Cloud Firestore backend. " + t + "\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.";
    this.Lu ? (p(e), this.Lu = !1) : l("OnlineStateTracker", e);
  }, t.prototype.Wu = function () {
    null !== this.Ou && (this.Ou.cancel(), this.Ou = null);
  }, t;
}(),
    jo = function jo(
/**
     * The local store, used to fill the write pipeline with outbound mutations.
     */
e,
/** The client-side proxy for interacting with the backend. */
n, r, i, o) {
  var s = this;
  this.ju = e, this.Ku = n, this.cs = r, this.Gu = {},
  /**
           * A list of up to MAX_PENDING_WRITES writes that we have fetched from the
           * LocalStore via fillWritePipeline() and have or will send to the write
           * stream.
           *
           * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or
           * restart the write stream. When the stream is established the writes in the
           * pipeline will be sent in order.
           *
           * Writes remain in writePipeline until they are acknowledged by the backend
           * and thus will automatically be re-sent if the stream is interrupted /
           * restarted before they're acknowledged.
           *
           * Write responses from the backend are linked to their originating request
           * purely based on order, and so we can just shift() writes from the front of
           * the writePipeline as we receive responses.
           */
  this.zu = [],
  /**
           * A mapping of watched targets that the client cares about tracking and the
           * user has explicitly called a 'listen' for this target.
           *
           * These targets may or may not have been sent to or acknowledged by the
           * server. On re-establishing the listen stream, these targets should be sent
           * to the server. The targets removed with unlistens are removed eagerly
           * without waiting for confirmation from the listen stream.
           */
  this.Hu = new Map(),
  /**
           * A set of reasons for why the RemoteStore may be offline. If empty, the
           * RemoteStore may start its network connections.
           */
  this.Yu = new Set(),
  /**
           * Event handlers that get called when the network is disabled or enabled.
           *
           * PORTING NOTE: These functions are used on the Web client to create the
           * underlying streams (to support tree-shakeable streams). On Android and iOS,
           * the streams are created during construction of RemoteStore.
           */
  this.Ju = [], this.Xu = o, this.Xu.Zu(function (e) {
    r.ws(function () {
      return t.__awaiter(s, void 0, void 0, function () {
        return t.__generator(this, function (e) {
          switch (e.label) {
            case 0:
              return Xo(this) ? (l("RemoteStore", "Restarting streams for network reachability change."), [4
              /*yield*/
              , function (e) {
                return t.__awaiter(this, void 0, void 0, function () {
                  var n;
                  return t.__generator(this, function (t) {
                    switch (t.label) {
                      case 0:
                        return (n = m(e)).Yu.add(4
                        /* ConnectivityChange */
                        ), [4
                        /*yield*/
                        , zo(n)];

                      case 1:
                        return t.sent(), n.th.set("Unknown"
                        /* Unknown */
                        ), n.Yu.delete(4
                        /* ConnectivityChange */
                        ), [4
                        /*yield*/
                        , Go(n)];

                      case 2:
                        return t.sent(), [2
                        /*return*/
                        ];
                    }
                  });
                });
              }(this)]) : [3
              /*break*/
              , 2];

            case 1:
              e.sent(), e.label = 2;

            case 2:
              return [2
              /*return*/
              ];
          }
        });
      });
    });
  }), this.th = new qo(r, i);
};

function Go(e) {
  return t.__awaiter(this, void 0, void 0, function () {
    var n, r;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          if (!Xo(e)) return [3
          /*break*/
          , 4];
          n = 0, r = e.Ju, t.label = 1;

        case 1:
          return n < r.length ? [4
          /*yield*/
          , (0, r[n])(
          /* enabled= */
          !0)] : [3
          /*break*/
          , 4];

        case 2:
          t.sent(), t.label = 3;

        case 3:
          return n++, [3
          /*break*/
          , 1];

        case 4:
          return [2
          /*return*/
          ];
      }
    });
  });
}
/**
 * Temporarily disables the network. The network can be re-enabled using
 * enableNetwork().
 */


function zo(e) {
  return t.__awaiter(this, void 0, void 0, function () {
    var n, r;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          n = 0, r = e.Ju, t.label = 1;

        case 1:
          return n < r.length ? [4
          /*yield*/
          , (0, r[n])(
          /* enabled= */
          !1)] : [3
          /*break*/
          , 4];

        case 2:
          t.sent(), t.label = 3;

        case 3:
          return n++, [3
          /*break*/
          , 1];

        case 4:
          return [2
          /*return*/
          ];
      }
    });
  });
}

function Bo(e) {
  return t.__awaiter(this, void 0, void 0, function () {
    var n;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          return n = m(e), l("RemoteStore", "RemoteStore shutting down."), n.Yu.add(5
          /* Shutdown */
          ), [4
          /*yield*/
          , zo(n)];

        case 1:
          return t.sent(), n.Xu.Di(), // Set the OnlineState to Unknown (rather than Offline) to avoid potentially
          // triggering spurious listener events with cached data, etc.
          n.th.set("Unknown"
          /* Unknown */
          ), [2
          /*return*/
          ];
      }
    });
  });
}
/**
 * Starts new listen for the given target. Uses resume token if provided. It
 * is a no-op if the target of given `TargetData` is already being listened to.
 */


function Wo(t, e) {
  var n = m(t);
  n.Hu.has(e.targetId) || ( // Mark this as something the client is currently listening for.
  n.Hu.set(e.targetId, e), $o(n) ? // The listen will be sent in onWatchStreamOpen
  Yo(n) : ls(n).uu() && Qo(n, e));
}
/**
 * Removes the listen from server. It is a no-op if the given target id is
 * not being listened to.
 */


function Ko(t, e) {
  var n = m(t),
      r = ls(n);
  n.Hu.delete(e), r.uu() && Ho(n, e), 0 === n.Hu.size && (r.uu() ? r._u() : Xo(n) && // Revert to OnlineState.Unknown if the watch stream is not open and we
  // have no listeners, since without any listens to send we cannot
  // confirm if the stream is healthy and upgrade to OnlineState.Online.
  n.th.set("Unknown"
  /* Unknown */
  ));
}
/**
 * We need to increment the the expected number of pending responses we're due
 * from watch so we wait for the ack to process any messages from this target.
 */


function Qo(t, e) {
  t.eh.Ie(e.targetId), ls(t).Vu(e);
}

function Ho(t, e) {
  t.eh.Ie(e), ls(t).pu(e);
}

function Yo(t) {
  t.eh = new Wt({
    qe: function qe(e) {
      return t.Gu.qe(e);
    },
    Ue: function Ue(e) {
      return t.Hu.get(e) || null;
    }
  }), ls(t).start(), t.th.Bu();
}

function $o(t) {
  return Xo(t) && !ls(t).cu() && t.Hu.size > 0;
}

function Xo(t) {
  return 0 === m(t).Yu.size;
}

function Jo(t) {
  t.eh = void 0;
}

function Zo(e) {
  return t.__awaiter(this, void 0, void 0, function () {
    return t.__generator(this, function (t) {
      return e.Hu.forEach(function (t, n) {
        Qo(e, t);
      }), [2
      /*return*/
      ];
    });
  });
}

function ts(e, n) {
  return t.__awaiter(this, void 0, void 0, function () {
    return t.__generator(this, function (t) {
      return Jo(e), // If we still need the watch stream, retry the connection.
      $o(e) ? (e.th.Qu(n), Yo(e)) : // No need to restart watch stream because there are no active targets.
      // The online state is set to unknown because there is no active attempt
      // at establishing a connection
      e.th.set("Unknown"
      /* Unknown */
      ), [2
      /*return*/
      ];
    });
  });
}

function es(e, n, r) {
  return t.__awaiter(this, void 0, void 0, function () {
    var i, o, s;
    return t.__generator(this, function (u) {
      switch (u.label) {
        case 0:
          if (e.th.set("Online"
          /* Online */
          ), !(n instanceof zt && 2
          /* Removed */
          === n.state && n.cause)) // Mark the client as online since we got a message from the server
            return [3
            /*break*/
            , 6];
          u.label = 1;

        case 1:
          return u.trys.push([1, 3,, 5]), [4
          /*yield*/
          ,
          /** Handles an error on a target */
          function (e, n) {
            return t.__awaiter(this, void 0, void 0, function () {
              var r, i, o, s;
              return t.__generator(this, function (t) {
                switch (t.label) {
                  case 0:
                    r = n.cause, i = 0, o = n.targetIds, t.label = 1;

                  case 1:
                    return i < o.length ? (s = o[i], e.Hu.has(s) ? [4
                    /*yield*/
                    , e.Gu.nh(s, r)] : [3
                    /*break*/
                    , 3]) : [3
                    /*break*/
                    , 5];

                  case 2:
                    t.sent(), e.Hu.delete(s), e.eh.removeTarget(s), t.label = 3;

                  case 3:
                    t.label = 4;

                  case 4:
                    return i++, [3
                    /*break*/
                    , 1];

                  case 5:
                    return [2
                    /*return*/
                    ];
                }
              });
            });
          }(e, n)];

        case 2:
          return u.sent(), [3
          /*break*/
          , 5];

        case 3:
          return i = u.sent(), l("RemoteStore", "Failed to remove targets %s: %s ", n.targetIds.join(","), i), [4
          /*yield*/
          , ns(e, i)];

        case 4:
          return u.sent(), [3
          /*break*/
          , 5];

        case 5:
          return [3
          /*break*/
          , 13];

        case 6:
          if (n instanceof jt ? e.eh.be(n) : n instanceof Gt ? e.eh.$e(n) : e.eh.De(n), r.isEqual(st.min())) return [3
          /*break*/
          , 13];
          u.label = 7;

        case 7:
          return u.trys.push([7, 11,, 13]), [4
          /*yield*/
          , wo(e.ju)];

        case 8:
          return o = u.sent(), r.L(o) >= 0 ? [4
          /*yield*/
          ,
          /**
           * Takes a batch of changes from the Datastore, repackages them as a
           * RemoteEvent, and passes that on to the listener, which is typically the
           * SyncEngine.
           */
          function (t, e) {
            var n = t.eh.Oe(e); // Update in-memory resume tokens. LocalStore will update the
            // persistent view of these when applying the completed RemoteEvent.

            return n.zt.forEach(function (n, r) {
              if (n.resumeToken.O() > 0) {
                var i = t.Hu.get(r); // A watched target might have been removed already.

                i && t.Hu.set(r, i.it(n.resumeToken, e));
              }
            }), // Re-establish listens for the targets that have been invalidated by
            // existence filter mismatches.
            n.Ht.forEach(function (e) {
              var n = t.Hu.get(e);

              if (n) {
                // Clear the resume token for the target, since we're in a known mismatch
                // state.
                t.Hu.set(e, n.it(X.B, n.nt)), // Cause a hard reset by unwatching and rewatching immediately, but
                // deliberately don't send a resume token so that we get a full update.
                Ho(t, e); // Mark the target we send as being on behalf of an existence filter
                // mismatch, but don't actually retain that in listenTargets. This ensures
                // that we flag the first re-listen this way without impacting future
                // listens of this target (that might happen e.g. on reconnect).

                var r = new gt(n.target, e, 1
                /* ExistenceFilterMismatch */
                , n.sequenceNumber);
                Qo(t, r);
              }
            }), t.Gu.sh(n);
          }(e, r)] : [3
          /*break*/
          , 10];
        // We have received a target change with a global snapshot if the snapshot
        // version is not equal to SnapshotVersion.min().

        case 9:
          // We have received a target change with a global snapshot if the snapshot
          // version is not equal to SnapshotVersion.min().
          u.sent(), u.label = 10;

        case 10:
          return [3
          /*break*/
          , 13];

        case 11:
          return l("RemoteStore", "Failed to raise snapshot:", s = u.sent()), [4
          /*yield*/
          , ns(e, s)];

        case 12:
          return u.sent(), [3
          /*break*/
          , 13];

        case 13:
          return [2
          /*return*/
          ];
      }
    });
  });
}
/**
 * Recovery logic for IndexedDB errors that takes the network offline until
 * `op` succeeds. Retries are scheduled with backoff using
 * `enqueueRetryable()`. If `op()` is not provided, IndexedDB access is
 * validated via a generic operation.
 *
 * The returned Promise is resolved once the network is disabled and before
 * any retry attempt.
 */


function ns(e, n, r) {
  return t.__awaiter(this, void 0, void 0, function () {
    var i = this;
    return t.__generator(this, function (o) {
      switch (o.label) {
        case 0:
          if (!_r(n)) throw n; // Disable network and raise offline snapshots

          return e.Yu.add(1
          /* IndexedDbFailed */
          ), [4
          /*yield*/
          , zo(e)];

        case 1:
          // Disable network and raise offline snapshots
          return o.sent(), e.th.set("Offline"
          /* Offline */
          ), r || ( // Use a simple read operation to determine if IndexedDB recovered.
          // Ideally, we would expose a health check directly on SimpleDb, but
          // RemoteStore only has access to persistence through LocalStore.
          r = function r() {
            return wo(e.ju);
          }), // Probe IndexedDB periodically and re-enable network
          e.cs.Cs(function () {
            return t.__awaiter(i, void 0, void 0, function () {
              return t.__generator(this, function (t) {
                switch (t.label) {
                  case 0:
                    return l("RemoteStore", "Retrying IndexedDB access"), [4
                    /*yield*/
                    , r()];

                  case 1:
                    return t.sent(), e.Yu.delete(1
                    /* IndexedDbFailed */
                    ), [4
                    /*yield*/
                    , Go(e)];

                  case 2:
                    return t.sent(), [2
                    /*return*/
                    ];
                }
              });
            });
          }), [2
          /*return*/
          ];
      }
    });
  });
}
/**
 * Executes `op`. If `op` fails, takes the network offline until `op`
 * succeeds. Returns after the first attempt.
 */


function rs(t, e) {
  return e().catch(function (n) {
    return ns(t, n, e);
  });
}

function is(e) {
  return t.__awaiter(this, void 0, void 0, function () {
    var n, r, i, o, s;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          n = m(e), r = ps(n), i = n.zu.length > 0 ? n.zu[n.zu.length - 1].batchId : -1, t.label = 1;

        case 1:
          if (!
          /**
          * Returns true if we can add to the write pipeline (i.e. the network is
          * enabled and the write pipeline is not full).
          */
          function (t) {
            return Xo(t) && t.zu.length < 10;
          }(n)) return [3
          /*break*/
          , 7];
          t.label = 2;

        case 2:
          return t.trys.push([2, 4,, 6]), [4
          /*yield*/
          , bo(n.ju, i)];

        case 3:
          return null === (o = t.sent()) ? (0 === n.zu.length && r._u(), [3
          /*break*/
          , 7]) : (i = o.batchId, function (t, e) {
            t.zu.push(e);
            var n = ps(t);
            n.uu() && n.vu && n.Su(e.mutations);
          }(n, o), [3
          /*break*/
          , 6]);

        case 4:
          return s = t.sent(), [4
          /*yield*/
          , ns(n, s)];

        case 5:
          return t.sent(), [3
          /*break*/
          , 6];

        case 6:
          return [3
          /*break*/
          , 1];

        case 7:
          return os(n) && ss(n), [2
          /*return*/
          ];
      }
    });
  });
}

function os(t) {
  return Xo(t) && !ps(t).cu() && t.zu.length > 0;
}

function ss(t) {
  ps(t).start();
}

function us(e) {
  return t.__awaiter(this, void 0, void 0, function () {
    return t.__generator(this, function (t) {
      return ps(e).Nu(), [2
      /*return*/
      ];
    });
  });
}

function as(e) {
  return t.__awaiter(this, void 0, void 0, function () {
    var n, r, i, o;
    return t.__generator(this, function (t) {
      // Send the write pipeline now that the stream is established.
      for (n = ps(e), r = 0, i = e.zu; r < i.length; r++) {
        o = i[r], n.Su(o.mutations);
      }

      return [2
      /*return*/
      ];
    });
  });
}

function cs(e, n, r) {
  return t.__awaiter(this, void 0, void 0, function () {
    var i, o;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          return i = e.zu.shift(), o = Jr.from(i, n, r), [4
          /*yield*/
          , rs(e, function () {
            return e.Gu.ih(o);
          })];

        case 1:
          // It's possible that with the completion of this mutation another
          // slot has freed up.
          return t.sent(), [4
          /*yield*/
          , is(e)];

        case 2:
          // It's possible that with the completion of this mutation another
          // slot has freed up.
          return t.sent(), [2
          /*return*/
          ];
      }
    });
  });
}

function hs(e, n) {
  return t.__awaiter(this, void 0, void 0, function () {
    return t.__generator(this, function (r) {
      switch (r.label) {
        case 0:
          return n && ps(e).vu ? [4
          /*yield*/
          , function (e, n) {
            return t.__awaiter(this, void 0, void 0, function () {
              var r, i;
              return t.__generator(this, function (t) {
                switch (t.label) {
                  case 0:
                    return wt(i = n.code) && i !== a.ABORTED ? (r = e.zu.shift(), // In this case it's also unlikely that the server itself is melting
                    // down -- this was just a bad request so inhibit backoff on the next
                    // restart.
                    ps(e).lu(), [4
                    /*yield*/
                    , rs(e, function () {
                      return e.Gu.rh(r.batchId, n);
                    })]) : [3
                    /*break*/
                    , 3];

                  case 1:
                    // It's possible that with the completion of this mutation
                    // another slot has freed up.
                    return t.sent(), [4
                    /*yield*/
                    , is(e)];

                  case 2:
                    // In this case it's also unlikely that the server itself is melting
                    // down -- this was just a bad request so inhibit backoff on the next
                    // restart.
                    // It's possible that with the completion of this mutation
                    // another slot has freed up.
                    t.sent(), t.label = 3;

                  case 3:
                    return [2
                    /*return*/
                    ];
                }
              });
            });
          }(e, n)] : [3
          /*break*/
          , 2];
        // This error affects the actual write.

        case 1:
          // This error affects the actual write.
          r.sent(), r.label = 2;

        case 2:
          // If the write stream closed after the write handshake completes, a write
          // operation failed and we fail the pending operation.
          // The write stream might have been started by refilling the write
          // pipeline for failed writes
          return os(e) && ss(e), [2
          /*return*/
          ];
      }
    });
  });
}
/**
 * Toggles the network state when the client gains or loses its primary lease.
 */


function fs(e, n) {
  return t.__awaiter(this, void 0, void 0, function () {
    var r, i;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          return r = m(e), n ? (r.Yu.delete(2
          /* IsSecondary */
          ), [4
          /*yield*/
          , Go(r)]) : [3
          /*break*/
          , 2];

        case 1:
          return t.sent(), [3
          /*break*/
          , 5];

        case 2:
          return (i = n) ? [3
          /*break*/
          , 4] : (r.Yu.add(2
          /* IsSecondary */
          ), [4
          /*yield*/
          , zo(r)]);

        case 3:
          t.sent(), i = r.th.set("Unknown"
          /* Unknown */
          ), t.label = 4;

        case 4:
          i, t.label = 5;

        case 5:
          return [2
          /*return*/
          ];
      }
    });
  });
}
/**
 * If not yet initialized, registers the WatchStream and its network state
 * callback with `remoteStoreImpl`. Returns the existing stream if one is
 * already available.
 *
 * PORTING NOTE: On iOS and Android, the WatchStream gets registered on startup.
 * This is not done on Web to allow it to be tree-shaken.
 */


function ls(e) {
  var n = this;
  return e.oh || ( // Create stream (but note that it is not started yet).
  e.oh = function (t, e, n) {
    var r = m(t);
    return r.xu(), new Co(e, r.iu, r.credentials, r.serializer, n);
  }(e.Ku, e.cs, {
    gu: Zo.bind(null, e),
    Tu: ts.bind(null, e),
    yu: es.bind(null, e)
  }), e.Ju.push(function (r) {
    return t.__awaiter(n, void 0, void 0, function () {
      return t.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return r ? (e.oh.lu(), $o(e) ? Yo(e) : e.th.set("Unknown"
            /* Unknown */
            ), [3
            /*break*/
            , 3]) : [3
            /*break*/
            , 1];

          case 1:
            return [4
            /*yield*/
            , e.oh.stop()];

          case 2:
            t.sent(), Jo(e), t.label = 3;

          case 3:
            return [2
            /*return*/
            ];
        }
      });
    });
  })), e.oh;
}

function ps(e) {
  var n = this;
  return e.ah || ( // Create stream (but note that it is not started yet).
  e.ah = function (t, e, n) {
    var r = m(t);
    return r.xu(), new Fo(e, r.iu, r.credentials, r.serializer, n);
  }(e.Ku, e.cs, {
    gu: us.bind(null, e),
    Tu: hs.bind(null, e),
    Cu: as.bind(null, e),
    Du: cs.bind(null, e)
  }), e.Ju.push(function (r) {
    return t.__awaiter(n, void 0, void 0, function () {
      return t.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return r ? (e.ah.lu(), [4
            /*yield*/
            , is(e)]) : [3
            /*break*/
            , 2];

          case 1:
            // This will start the write stream if necessary.
            return t.sent(), [3
            /*break*/
            , 4];

          case 2:
            return [4
            /*yield*/
            , e.ah.stop()];

          case 3:
            t.sent(), e.zu.length > 0 && (l("RemoteStore", "Stopping write stream with " + e.zu.length + " pending writes"), e.zu = []), t.label = 4;

          case 4:
            return [2
            /*return*/
            ];
        }
      });
    });
  })), e.ah;
}

var ds = function ds(t) {
  this.key = t;
},
    vs = function vs(t) {
  this.key = t;
},
    ys =
/** @class */
function () {
  function t(t,
  /** Documents included in the remote target */
  e) {
    this.query = t, this.uh = e, this.hh = null,
    /**
         * A flag whether the view is current with the backend. A view is considered
         * current after it has seen the current flag from the backend and did not
         * lose consistency within the watch stream (e.g. because of an existence
         * filter mismatch).
         */
    this.te = !1,
    /** Documents in the view but not in the remote target */
    this.lh = Ot(),
    /** Document Keys that have local changes */
    this.Wt = Ot(), this._h = Xn(t), this.fh = new Ut(this._h);
  }

  return Object.defineProperty(t.prototype, "dh", {
    /**
     * The set of remote documents that the server has told us belongs to the target associated with
     * this view.
     */
    get: function get() {
      return this.uh;
    },
    enumerable: !1,
    configurable: !0
  }),
  /**
   * Iterates over a set of doc changes, applies the query limit, and computes
   * what the new results should be, what the changes were, and whether we may
   * need to go back to the local cache for more results. Does not make any
   * changes to the view.
   * @param docChanges The doc changes to apply to this view.
   * @param previousChanges If this is being called with a refill, then start
   *        with this set of docs and changes instead of the current view.
   * @return a new set of docs, changes, and refill flag.
   */
  t.prototype.wh = function (t, e) {
    var n = this,
        r = e ? e.mh : new Ct(),
        i = e ? e.fh : this.fh,
        o = e ? e.Wt : this.Wt,
        s = i,
        u = !1,
        a = Cn(this.query) && i.size === this.query.limit ? i.last() : null,
        c = Fn(this.query) && i.size === this.query.limit ? i.first() : null; // Drop documents out to meet limit/limitToLast requirement.

    if (t.ht(function (t, e) {
      var h = i.get(t),
          f = e instanceof kn ? e : null;
      f && (f = $n(n.query, f) ? f : null);
      var l = !!h && n.Wt.has(h.key),
          p = !!f && (f.Je || // We only consider committed mutations for documents that were
      // mutated during the lifetime of the view.
      n.Wt.has(f.key) && f.hasCommittedMutations),
          d = !1; // Calculate change

      h && f ? h.data().isEqual(f.data()) ? l !== p && (r.track({
        type: 3
        /* Metadata */
        ,
        doc: f
      }), d = !0) : n.Th(h, f) || (r.track({
        type: 2
        /* Modified */
        ,
        doc: f
      }), d = !0, (a && n._h(f, a) > 0 || c && n._h(f, c) < 0) && ( // This doc moved from inside the limit to outside the limit.
      // That means there may be some other doc in the local cache
      // that should be included instead.
      u = !0)) : !h && f ? (r.track({
        type: 0
        /* Added */
        ,
        doc: f
      }), d = !0) : h && !f && (r.track({
        type: 1
        /* Removed */
        ,
        doc: h
      }), d = !0, (a || c) && ( // A doc was removed from a full limit query. We'll need to
      // requery from the local cache to see if we know about some other
      // doc that should be in the results.
      u = !0)), d && (f ? (s = s.add(f), o = p ? o.add(t) : o.delete(t)) : (s = s.delete(t), o = o.delete(t)));
    }), Cn(this.query) || Fn(this.query)) for (; s.size > this.query.limit;) {
      var h = Cn(this.query) ? s.last() : s.first();
      s = s.delete(h.key), o = o.delete(h.key), r.track({
        type: 1
        /* Removed */
        ,
        doc: h
      });
    }
    return {
      fh: s,
      mh: r,
      Eh: u,
      Wt: o
    };
  }, t.prototype.Th = function (t, e) {
    // We suppress the initial change event for documents that were modified as
    // part of a write acknowledgment (e.g. when the value of a server transform
    // is applied) as Watch will send us the same document again.
    // By suppressing the event, we only raise two user visible events (one with
    // `hasPendingWrites` and the final state of the document) instead of three
    // (one with `hasPendingWrites`, the modified document with
    // `hasPendingWrites` and the final state of the document).
    return t.Je && e.hasCommittedMutations && !e.Je;
  },
  /**
   * Updates the view with the given ViewDocumentChanges and optionally updates
   * limbo docs and sync state from the provided target change.
   * @param docChanges The set of changes to make to the view's docs.
   * @param updateLimboDocuments Whether to update limbo documents based on this
   *        change.
   * @param targetChange A target change to apply for computing limbo docs and
   *        sync state.
   * @return A new ViewChange with the given docs, changes, and sync state.
   */
  // PORTING NOTE: The iOS/Android clients always compute limbo document changes.
  t.prototype.yr = function (t, e, n) {
    var r = this,
        i = this.fh;
    this.fh = t.fh, this.Wt = t.Wt; // Sort changes based on type and query comparator

    var o = t.mh.Ut();
    o.sort(function (t, e) {
      return function (t, e) {
        var n = function n(t) {
          switch (t) {
            case 0
            /* Added */
            :
              return 1;

            case 2
            /* Modified */
            :
            case 3
            /* Metadata */
            :
              // A metadata change is converted to a modified change at the public
              // api layer.  Since we sort by document key and then change type,
              // metadata and modified changes must be sorted equivalently.
              return 2;

            case 1
            /* Removed */
            :
              return 0;

            default:
              return y();
          }
        };

        return n(t) - n(e);
      }(t.type, e.type) || r._h(t.doc, e.doc);
    }), this.Ih(n);
    var s = e ? this.Ah() : [],
        u = 0 === this.lh.size && this.te ? 1
    /* Synced */
    : 0
    /* Local */
    ,
        a = u !== this.hh;
    return this.hh = u, 0 !== o.length || a ? {
      snapshot: new Ft(this.query, t.fh, i, o, t.Wt, 0
      /* Local */
      === u, a,
      /* excludesMetadataChanges= */
      !1),
      Rh: s
    } : {
      Rh: s
    }; // no changes
  },
  /**
   * Applies an OnlineState change to the view, potentially generating a
   * ViewChange if the view's syncState changes as a result.
   */
  t.prototype.Qs = function (t) {
    return this.te && "Offline"
    /* Offline */
    === t ? ( // If we're offline, set `current` to false and then call applyChanges()
    // to refresh our syncState and generate a ViewChange as appropriate. We
    // are guaranteed to get a new TargetChange that sets `current` back to
    // true once the client is back online.
    this.te = !1, this.yr({
      fh: this.fh,
      mh: new Ct(),
      Wt: this.Wt,
      Eh: !1
    },
    /* updateLimboDocuments= */
    !1)) : {
      Rh: []
    };
  },
  /**
   * Returns whether the doc for the given key should be in limbo.
   */
  t.prototype.gh = function (t) {
    // If the remote end says it's part of this query, it's not in limbo.
    return !this.uh.has(t) && // The local store doesn't think it's a result, so it shouldn't be in limbo.
    !!this.fh.has(t) && !this.fh.get(t).Je;
  },
  /**
   * Updates syncedDocuments, current, and limbo docs based on the given change.
   * Returns the list of changes to which docs are in limbo.
   */
  t.prototype.Ih = function (t) {
    var e = this;
    t && (t.ee.forEach(function (t) {
      return e.uh = e.uh.add(t);
    }), t.ne.forEach(function (t) {}), t.se.forEach(function (t) {
      return e.uh = e.uh.delete(t);
    }), this.te = t.te);
  }, t.prototype.Ah = function () {
    var t = this; // We can only determine limbo documents when we're in-sync with the server.

    if (!this.te) return []; // TODO(klimt): Do this incrementally so that it's not quadratic when
    // updating many documents.

    var e = this.lh;
    this.lh = Ot(), this.fh.forEach(function (e) {
      t.gh(e.key) && (t.lh = t.lh.add(e.key));
    }); // Diff the new limbo docs with the old limbo docs.

    var n = [];
    return e.forEach(function (e) {
      t.lh.has(e) || n.push(new vs(e));
    }), this.lh.forEach(function (t) {
      e.has(t) || n.push(new ds(t));
    }), n;
  },
  /**
   * Update the in-memory state of the current view with the state read from
   * persistence.
   *
   * We update the query view whenever a client's primary status changes:
   * - When a client transitions from primary to secondary, it can miss
   *   LocalStorage updates and its query views may temporarily not be
   *   synchronized with the state on disk.
   * - For secondary to primary transitions, the client needs to update the list
   *   of `syncedDocuments` since secondary clients update their query views
   *   based purely on synthesized RemoteEvents.
   *
   * @param queryResult.documents - The documents that match the query according
   * to the LocalStore.
   * @param queryResult.remoteKeys - The keys of the documents that match the
   * query according to the backend.
   *
   * @return The ViewChange that resulted from this synchronization.
   */
  // PORTING NOTE: Multi-tab only.
  t.prototype.Ph = function (t) {
    this.uh = t.Fc, this.lh = Ot();
    var e = this.wh(t.documents);
    return this.yr(e,
    /*updateLimboDocuments=*/
    !0);
  },
  /**
   * Returns a view snapshot as if this query was just listened to. Contains
   * a document add for every existing document and the `fromCache` and
   * `hasPendingWrites` status of the already established view.
   */
  // PORTING NOTE: Multi-tab only.
  t.prototype.yh = function () {
    return Ft.Gt(this.query, this.fh, this.Wt, 0
    /* Local */
    === this.hh);
  }, t;
}(),
    gs = function gs(
/**
     * The query itself.
     */
t,
/**
     * The target number created by the client that is used in the watch
     * stream to identify this query.
     */
e,
/**
     * The view is responsible for computing the final merged truth of what
     * docs are in the query. It gets notified of local and remote changes,
     * and applies the query filters and limits to determine the most correct
     * possible results.
     */
n) {
  this.query = t, this.targetId = e, this.view = n;
},
    ms = function ms(t) {
  this.key = t,
  /**
           * Set to true once we've received a document. This is used in
           * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to
           * decide whether it needs to manufacture a delete event for the target once
           * the target is CURRENT.
           */
  this.Vh = !1;
},
    ws =
/** @class */
function () {
  function t(t, e, n, // PORTING NOTE: Manages state synchronization in multi-tab environments.
  r, i, o) {
    this.ju = t, this.ph = e, this.bh = n, this.Sh = r, this.currentUser = i, this.Dh = o, this.Ch = {}, this.Nh = new it(function (t) {
      return Hn(t);
    }, Qn), this.Fh = new Map(),
    /**
         * The keys of documents that are in limbo for which we haven't yet started a
         * limbo resolution query.
         */
    this.xh = [],
    /**
         * Keeps track of the target ID for each document that is in limbo with an
         * active target.
         */
    this.$h = new bt(A.i),
    /**
         * Keeps track of the information about an active limbo resolution for each
         * active target ID that was started for the purpose of limbo resolution.
         */
    this.kh = new Map(), this.Mh = new xo(),
    /** Stores user completion handlers, indexed by User and BatchId. */
    this.Oh = {},
    /** Stores user callbacks waiting for all pending writes to be acknowledged. */
    this.Lh = new Map(), this.Bh = ro.da(), this.onlineState = "Unknown"
    /* Unknown */
    , // The primary state is set to `true` or `false` immediately after Firestore
    // startup. In the interim, a client should only be considered primary if
    // `isPrimary` is true.
    this.qh = void 0;
  }

  return Object.defineProperty(t.prototype, "Uh", {
    get: function get() {
      return !0 === this.qh;
    },
    enumerable: !1,
    configurable: !0
  }), t;
}();
/**
 * Initiates the new listen, resolves promise when listen enqueued to the
 * server. All the subsequent view snapshots or errors are sent to the
 * subscribed handlers. Returns the initial snapshot.
 */


function _s(e, n) {
  return t.__awaiter(this, void 0, void 0, function () {
    var r, i, o, s, u, a;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          return r = Ks(e), (s = r.Nh.get(n)) ? ( // PORTING NOTE: With Multi-Tab Web, it is possible that a query view
          // already exists when EventManager calls us for the first time. This
          // happens when the primary tab is already listening to this query on
          // behalf of another tab and the user of the primary also starts listening
          // to the query. EventManager will not have an assigned target ID in this
          // case and calls `listen` to obtain this ID.
          i = s.targetId, r.Sh.Oi(i), o = s.view.yh(), [3
          /*break*/
          , 4]) : [3
          /*break*/
          , 1];

        case 1:
          return [4
          /*yield*/
          , Io(r.ju, zn(n))];

        case 2:
          return u = t.sent(), a = r.Sh.Oi(u.targetId), i = u.targetId, [4
          /*yield*/
          , bs(r, n, i, "current" === a)];

        case 3:
          o = t.sent(), r.Uh && Wo(r.ph, u), t.label = 4;

        case 4:
          return [2
          /*return*/
          , o];
      }
    });
  });
}
/**
 * Registers a view for a previously unknown query and computes its initial
 * snapshot.
 */


function bs(e, n, r, i) {
  return t.__awaiter(this, void 0, void 0, function () {
    var o, s, u, a, c, h;
    return t.__generator(this, function (f) {
      switch (f.label) {
        case 0:
          // PORTING NOTE: On Web only, we inject the code that registers new Limbo
          // targets based on view changes. This allows us to only depend on Limbo
          // changes when user code includes queries.
          return e.Qh = function (n, r, i) {
            return function (e, n, r, i) {
              return t.__awaiter(this, void 0, void 0, function () {
                var o, s, u;
                return t.__generator(this, function (t) {
                  switch (t.label) {
                    case 0:
                      return o = n.view.wh(r), o.Eh ? [4
                      /*yield*/
                      , To(e.ju, n.query,
                      /* usePreviousResults= */
                      !1).then(function (t) {
                        var e = t.documents;
                        return n.view.wh(e, o);
                      })] : [3
                      /*break*/
                      , 2];

                    case 1:
                      // The query has a limit and some docs were removed, so we need
                      // to re-run the query against the local store to make sure we
                      // didn't lose any good docs that had been past the limit.
                      o = t.sent(), t.label = 2;

                    case 2:
                      return s = i && i.zt.get(n.targetId), u = n.view.yr(o,
                      /* updateLimboDocuments= */
                      e.Uh, s), [2
                      /*return*/
                      , (Rs(e, n.targetId, u.Rh), u.snapshot)];
                  }
                });
              });
            }(e, n, r, i);
          }, [4
          /*yield*/
          , To(e.ju, n,
          /* usePreviousResults= */
          !0)];

        case 1:
          return o = f.sent(), s = new ys(n, o.Fc), u = s.wh(o.documents), a = qt.Zt(r, i && "Offline"
          /* Offline */
          !== e.onlineState), c = s.yr(u,
          /* updateLimboDocuments= */
          e.Uh, a), Rs(e, r, c.Rh), h = new gs(n, r, s), [2
          /*return*/
          , (e.Nh.set(n, h), e.Fh.has(r) ? e.Fh.get(r).push(n) : e.Fh.set(r, [n]), c.snapshot)];
      }
    });
  });
}
/** Stops listening to the query. */


function Is(e, n) {
  return t.__awaiter(this, void 0, void 0, function () {
    var r, i, o;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          return r = m(e), i = r.Nh.get(n), (o = r.Fh.get(i.targetId)).length > 1 ? [2
          /*return*/
          , (r.Fh.set(i.targetId, o.filter(function (t) {
            return !Qn(t, n);
          })), void r.Nh.delete(n))] : r.Uh ? ( // We need to remove the local query target first to allow us to verify
          // whether any other client is still interested in this target.
          r.Sh.Bi(i.targetId), r.Sh.Fi(i.targetId) ? [3
          /*break*/
          , 2] : [4
          /*yield*/
          , Eo(r.ju, i.targetId,
          /*keepPersistedTargetData=*/
          !1).then(function () {
            r.Sh.Ui(i.targetId), Ko(r.ph, i.targetId), Ls(r, i.targetId);
          }).catch(Do)]) : [3
          /*break*/
          , 3];

        case 1:
          t.sent(), t.label = 2;

        case 2:
          return [3
          /*break*/
          , 5];

        case 3:
          return Ls(r, i.targetId), [4
          /*yield*/
          , Eo(r.ju, i.targetId,
          /*keepPersistedTargetData=*/
          !0)];

        case 4:
          t.sent(), t.label = 5;

        case 5:
          return [2
          /*return*/
          ];
      }
    });
  });
}
/**
 * Initiates the write of local mutation batch which involves adding the
 * writes to the mutation queue, notifying the remote store about new
 * mutations and raising events for any changes this write caused.
 *
 * The promise returned by this call is resolved when the above steps
 * have completed, *not* when the write was acked by the backend. The
 * userCallback is resolved once the write was acked/rejected by the
 * backend (or failed locally for any other reason).
 */

/**
 * Applies one remote event to the sync engine, notifying any views of the
 * changes, and releasing any pending mutation batches that would become
 * visible because of the snapshot version the remote event contains.
 */


function Es(e, n) {
  return t.__awaiter(this, void 0, void 0, function () {
    var r, i;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          r = m(e), t.label = 1;

        case 1:
          return t.trys.push([1, 4,, 6]), [4
          /*yield*/
          , _o(r.ju, n)];

        case 2:
          return i = t.sent(), // Update `receivedDocument` as appropriate for any limbo targets.
          n.zt.forEach(function (t, e) {
            var n = r.kh.get(e);
            n && ( // Since this is a limbo resolution lookup, it's for a single document
            // and it could be added, modified, or removed, but not a combination.
            g(t.ee.size + t.ne.size + t.se.size <= 1), t.ee.size > 0 ? n.Vh = !0 : t.ne.size > 0 ? g(n.Vh) : t.se.size > 0 && (g(n.Vh), n.Vh = !1));
          }), [4
          /*yield*/
          , Vs(r, i, n)];

        case 3:
          // Update `receivedDocument` as appropriate for any limbo targets.
          return t.sent(), [3
          /*break*/
          , 6];

        case 4:
          return [4
          /*yield*/
          , Do(t.sent())];

        case 5:
          return t.sent(), [3
          /*break*/
          , 6];

        case 6:
          return [2
          /*return*/
          ];
      }
    });
  });
}
/**
 * Applies an OnlineState change to the sync engine and notifies any views of
 * the change.
 */


function Ts(t, e, n) {
  var r = m(t); // If we are the secondary client, we explicitly ignore the remote store's
  // online state (the local client may go offline, even though the primary
  // tab remains online) and only apply the primary tab's online state from
  // SharedClientState.

  if (r.Uh && 0
  /* RemoteStore */
  === n || !r.Uh && 1
  /* SharedClientState */
  === n) {
    var i = [];
    r.Nh.forEach(function (t, n) {
      var r = n.view.Qs(e);
      r.snapshot && i.push(r.snapshot);
    }), function (t, e) {
      var n = m(t);
      n.onlineState = e;
      var r = !1;
      n.Bs.forEach(function (t, n) {
        for (var i = 0, o = n.listeners; i < o.length; i++) {
          // Run global snapshot listeners if a consistent snapshot has been emitted.
          o[i].Qs(e) && (r = !0);
        }
      }), r && Cr(n);
    }(r.bh, e), i.length && r.Ch.yu(i), r.onlineState = e, r.Uh && r.Sh.Ki(e);
  }
}
/**
 * Rejects the listen for the given targetID. This can be triggered by the
 * backend for any active target.
 *
 * @param syncEngine The sync engine implementation.
 * @param targetId The targetID corresponds to one previously initiated by the
 * user as part of TargetData passed to listen() on RemoteStore.
 * @param err A description of the condition that has forced the rejection.
 * Nearly always this will be an indication that the user is no longer
 * authorized to see the data matching the target.
 */


function Ns(e, n, r) {
  return t.__awaiter(this, void 0, void 0, function () {
    var i, o, s, u, a, c;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          // PORTING NOTE: Multi-tab only.
          return (i = m(e)).Sh.Qi(n, "rejected", r), o = i.kh.get(n), (s = o && o.key) ? (u = (u = new bt(A.i)).ot(s, new Rn(s, st.min())), a = Ot().add(s), c = new Mt(st.min(),
          /* targetChanges= */
          new Map(),
          /* targetMismatches= */
          new Tt(H), u, a), [4
          /*yield*/
          , Es(i, c)]) : [3
          /*break*/
          , 2];

        case 1:
          return t.sent(), // Since this query failed, we won't want to manually unlisten to it.
          // We only remove it from bookkeeping after we successfully applied the
          // RemoteEvent. If `applyRemoteEvent()` throws, we want to re-listen to
          // this query when the RemoteStore restarts the Watch stream, which should
          // re-trigger the target failure.
          i.$h = i.$h.remove(s), i.kh.delete(n), Ps(i), [3
          /*break*/
          , 4];

        case 2:
          return [4
          /*yield*/
          , Eo(i.ju, n,
          /* keepPersistedTargetData */
          !1).then(function () {
            return Ls(i, n, r);
          }).catch(Do)];

        case 3:
          t.sent(), t.label = 4;

        case 4:
          return [2
          /*return*/
          ];
      }
    });
  });
}

function As(e, n) {
  return t.__awaiter(this, void 0, void 0, function () {
    var r, i, o;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          r = m(e), i = n.batch.batchId, t.label = 1;

        case 1:
          return t.trys.push([1, 4,, 6]), [4
          /*yield*/
          , mo(r.ju, n)];

        case 2:
          return o = t.sent(), // The local store may or may not be able to apply the write result and
          // raise events immediately (depending on whether the watcher is caught
          // up), so we raise user callbacks first so that they consistently happen
          // before listen events.
          xs(r, i,
          /*error=*/
          null), Ds(r, i), r.Sh.ki(i, "acknowledged"), [4
          /*yield*/
          , Vs(r, o)];

        case 3:
          // The local store may or may not be able to apply the write result and
          // raise events immediately (depending on whether the watcher is caught
          // up), so we raise user callbacks first so that they consistently happen
          // before listen events.
          return t.sent(), [3
          /*break*/
          , 6];

        case 4:
          return [4
          /*yield*/
          , Do(t.sent())];

        case 5:
          return t.sent(), [3
          /*break*/
          , 6];

        case 6:
          return [2
          /*return*/
          ];
      }
    });
  });
}

function Ss(e, n, r) {
  return t.__awaiter(this, void 0, void 0, function () {
    var i, o;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          i = m(e), t.label = 1;

        case 1:
          return t.trys.push([1, 4,, 6]), [4
          /*yield*/
          , function (t, e) {
            var n = m(t);
            return n.persistence.runTransaction("Reject batch", "readwrite-primary", function (t) {
              var r;
              return n.Sr.Oo(t, e).next(function (e) {
                return g(null !== e), r = e.keys(), n.Sr.Wo(t, e);
              }).next(function () {
                return n.Sr.zo(t);
              }).next(function () {
                return n.Cc.kr(t, r);
              });
            });
          }(i.ju, n)];

        case 2:
          return o = t.sent(), // The local store may or may not be able to apply the write result and
          // raise events immediately (depending on whether the watcher is caught up),
          // so we raise user callbacks first so that they consistently happen before
          // listen events.
          xs(i, n, r), Ds(i, n), i.Sh.ki(n, "rejected", r), [4
          /*yield*/
          , Vs(i, o)];

        case 3:
          // The local store may or may not be able to apply the write result and
          // raise events immediately (depending on whether the watcher is caught up),
          // so we raise user callbacks first so that they consistently happen before
          // listen events.
          return t.sent(), [3
          /*break*/
          , 6];

        case 4:
          return [4
          /*yield*/
          , Do(t.sent())];

        case 5:
          return t.sent(), [3
          /*break*/
          , 6];

        case 6:
          return [2
          /*return*/
          ];
      }
    });
  });
}
/**
 * Registers a user callback that resolves when all pending mutations at the moment of calling
 * are acknowledged .
 */

/**
 * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,
 * if there are any.
 */


function Ds(t, e) {
  (t.Lh.get(e) || []).forEach(function (t) {
    t.resolve();
  }), t.Lh.delete(e);
}

function xs(t, e, n) {
  var r = m(t),
      i = r.Oh[r.currentUser.ti()]; // NOTE: Mutations restored from persistence won't have callbacks, so it's
  // okay for there to be no callback for this ID.

  if (i) {
    var o = i.get(e);
    o && (n ? o.reject(n) : o.resolve(), i = i.remove(e)), r.Oh[r.currentUser.ti()] = i;
  }
}

function Ls(t, e, n) {
  void 0 === n && (n = null), t.Sh.Bi(e);

  for (var r = 0, i = t.Fh.get(e); r < i.length; r++) {
    var o = i[r];
    t.Nh.delete(o), n && t.Ch.Wh(o, n);
  }

  t.Fh.delete(e), t.Uh && t.Mh.Uc(e).forEach(function (e) {
    t.Mh.Ho(e) || // We removed the last reference for this key
    ks(t, e);
  });
}

function ks(t, e) {
  // It's possible that the target already got removed because the query failed. In that case,
  // the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.
  var n = t.$h.get(e);
  null !== n && (Ko(t.ph, n), t.$h = t.$h.remove(e), t.kh.delete(n), Ps(t));
}

function Rs(t, e, n) {
  for (var r = 0, i = n; r < i.length; r++) {
    var o = i[r];
    o instanceof ds ? (t.Mh.Da(o.key, e), Os(t, o)) : o instanceof vs ? (l("SyncEngine", "Document no longer in limbo: " + o.key), t.Mh.Na(o.key, e), t.Mh.Ho(o.key) || // We removed the last reference for this key
    ks(t, o.key)) : y();
  }
}

function Os(t, e) {
  var n = e.key;
  t.$h.get(n) || (l("SyncEngine", "New document in limbo: " + n), t.xh.push(n), Ps(t));
}
/**
 * Starts listens for documents in limbo that are enqueued for resolution,
 * subject to a maximum number of concurrent resolutions.
 *
 * Without bounding the number of concurrent resolutions, the server can fail
 * with "resource exhausted" errors which can lead to pathological client
 * behavior as seen in https://github.com/firebase/firebase-js-sdk/issues/2683.
 */


function Ps(t) {
  for (; t.xh.length > 0 && t.$h.size < t.Dh;) {
    var e = t.xh.shift(),
        n = t.Bh.next();
    t.kh.set(n, new ms(e)), t.$h = t.$h.ot(e, n), Wo(t.ph, new gt(zn(Un(e.path)), n, 2
    /* LimboResolution */
    , qr.ai));
  }
}

function Vs(e, n, r) {
  return t.__awaiter(this, void 0, void 0, function () {
    var i, o, s, u;
    return t.__generator(this, function (a) {
      switch (a.label) {
        case 0:
          return i = m(e), o = [], s = [], u = [], i.Nh.m() ? [3
          /*break*/
          , 3] : (i.Nh.forEach(function (t, e) {
            u.push(i.Qh(e, n, r).then(function (t) {
              if (t) {
                i.Uh && i.Sh.Qi(e.targetId, t.fromCache ? "not-current" : "current"), o.push(t);
                var n = ri.zr(e.targetId, t);
                s.push(n);
              }
            }));
          }), [4
          /*yield*/
          , Promise.all(u)]);

        case 1:
          return a.sent(), i.Ch.yu(o), [4
          /*yield*/
          , function (e, n) {
            return t.__awaiter(this, void 0, void 0, function () {
              var r, i, o, s, u, a, c, h, f;
              return t.__generator(this, function (t) {
                switch (t.label) {
                  case 0:
                    r = m(e), t.label = 1;

                  case 1:
                    return t.trys.push([1, 3,, 4]), [4
                    /*yield*/
                    , r.persistence.runTransaction("notifyLocalViewChanges", "readwrite", function (t) {
                      return yr.forEach(n, function (e) {
                        return yr.forEach(e.Kr, function (n) {
                          return r.persistence.No.Da(t, e.targetId, n);
                        }).next(function () {
                          return yr.forEach(e.Gr, function (n) {
                            return r.persistence.No.Na(t, e.targetId, n);
                          });
                        });
                      });
                    })];

                  case 2:
                    return t.sent(), [3
                    /*break*/
                    , 4];

                  case 3:
                    if (!_r(i = t.sent())) throw i; // If `notifyLocalViewChanges` fails, we did not advance the sequence
                    // number for the documents that were included in this transaction.
                    // This might trigger them to be deleted earlier than they otherwise
                    // would have, but it should not invalidate the integrity of the data.

                    return l("LocalStore", "Failed to update sequence numbers: " + i), [3
                    /*break*/
                    , 4];

                  case 4:
                    for (o = 0, s = n; o < s.length; o++) {
                      u = s[o], a = u.targetId, u.fromCache || (c = r.bc.get(a), h = c.nt, f = c.rt(h), // Advance the last limbo free snapshot version
                      r.bc = r.bc.ot(a, f));
                    }

                    return [2
                    /*return*/
                    ];
                }
              });
            });
          }(i.ju, s)];

        case 2:
          a.sent(), a.label = 3;

        case 3:
          return [2
          /*return*/
          ];
      }
    });
  });
}

function Us(e, n) {
  return t.__awaiter(this, void 0, void 0, function () {
    var r, i;
    return t.__generator(this, function (o) {
      switch (o.label) {
        case 0:
          return (r = m(e)).currentUser.isEqual(n) ? [3
          /*break*/
          , 3] : (l("SyncEngine", "User change. New user:", n.ti()), [4
          /*yield*/
          ,
          /**
           * Tells the LocalStore that the currently authenticated user has changed.
           *
           * In response the local store switches the mutation queue to the new user and
           * returns any resulting document changes.
           */
          // PORTING NOTE: Android and iOS only return the documents affected by the
          // change.
          function (e, n) {
            return t.__awaiter(this, void 0, void 0, function () {
              var r, i, o, s;
              return t.__generator(this, function (t) {
                switch (t.label) {
                  case 0:
                    return r = m(e), i = r.Sr, o = r.Cc, [4
                    /*yield*/
                    , r.persistence.runTransaction("Handle user change", "readonly", function (t) {
                      // Swap out the mutation queue, grabbing the pending mutation batches
                      // before and after.
                      var e;
                      return r.Sr.Uo(t).next(function (s) {
                        return e = s, i = r.persistence.mc(n), // Recreate our LocalDocumentsView using the new
                        // MutationQueue.
                        o = new ni(r.Dc, i, r.persistence.Ic()), i.Uo(t);
                      }).next(function (n) {
                        for (var r = [], i = [], s = Ot(), u = 0, a = e // Union the old/new changed keys.
                        ; u < a.length; u++) {
                          var c = a[u];
                          r.push(c.batchId);

                          for (var h = 0, f = c.mutations; h < f.length; h++) {
                            var l = f[h];
                            s = s.add(l.key);
                          }
                        }

                        for (var p = 0, d = n; p < d.length; p++) {
                          var v = d[p];
                          i.push(v.batchId);

                          for (var y = 0, g = v.mutations; y < g.length; y++) {
                            var m = g[y];
                            s = s.add(m.key);
                          }
                        } // Return the set of all (potentially) changed documents and the list
                        // of mutation batch IDs that were affected by change.


                        return o.kr(t, s).next(function (t) {
                          return {
                            jh: t,
                            Kh: r,
                            Gh: i
                          };
                        });
                      });
                    })];

                  case 1:
                    return s = t.sent(), [2
                    /*return*/
                    , (r.Sr = i, r.Cc = o, r.Vc.Nc(r.Cc), s)];
                }
              });
            });
          }(r.ju, n)]);

        case 1:
          return i = o.sent(), r.currentUser = n, // Fails tasks waiting for pending writes requested by previous user.
          function (t, e) {
            t.Lh.forEach(function (t) {
              t.forEach(function (t) {
                t.reject(new c(a.CANCELLED, "'waitForPendingWrites' promise is rejected due to a user change."));
              });
            }), t.Lh.clear();
          }(r), // TODO(b/114226417): Consider calling this only in the primary tab.
          r.Sh.ji(n, i.Kh, i.Gh), [4
          /*yield*/
          , Vs(r, i.jh)];

        case 2:
          o.sent(), o.label = 3;

        case 3:
          return [2
          /*return*/
          ];
      }
    });
  });
}

function Cs(t, e) {
  var n = m(t),
      r = n.kh.get(e);
  if (r && r.Vh) return Ot().add(r.key);
  var i = Ot(),
      o = n.Fh.get(e);
  if (!o) return i;

  for (var s = 0, u = o; s < u.length; s++) {
    var a = u[s],
        c = n.Nh.get(a);
    i = i.kt(c.view.dh);
  }

  return i;
}
/**
 * Reconcile the list of synced documents in an existing view with those
 * from persistence.
 */


function Fs(e, n) {
  return t.__awaiter(this, void 0, void 0, function () {
    var r, i, o;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          return [4
          /*yield*/
          , To((r = m(e)).ju, n.query,
          /* usePreviousResults= */
          !0)];

        case 1:
          return i = t.sent(), o = n.view.Ph(i), [2
          /*return*/
          , (r.Uh && Rs(r, n.targetId, o.Rh), o)];
      }
    });
  });
}
/** Applies a mutation state to an existing batch.  */
// PORTING NOTE: Multi-Tab only.


function Ms(e, n, r, i) {
  return t.__awaiter(this, void 0, void 0, function () {
    var o, s;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          return [4
          /*yield*/
          , function (t, e) {
            var n = m(t),
                r = m(n.Sr);
            return n.persistence.runTransaction("Lookup mutation documents", "readonly", function (t) {
              return r.Lo(t, e).next(function (e) {
                return e ? n.Cc.kr(t, e) : yr.resolve(null);
              });
            });
          }((o = m(e)).ju, n)];

        case 1:
          return null === (s = t.sent()) ? [3
          /*break*/
          , 6] : "pending" !== r ? [3
          /*break*/
          , 3] : [4
          /*yield*/
          , is(o.ph)];

        case 2:
          // If we are the primary client, we need to send this write to the
          // backend. Secondary clients will ignore these writes since their remote
          // connection is disabled.
          return t.sent(), [3
          /*break*/
          , 4];

        case 3:
          "acknowledged" === r || "rejected" === r ? ( // NOTE: Both these methods are no-ops for batches that originated from
          // other clients.
          xs(o, n, i || null), Ds(o, n), function (t, e) {
            m(m(t).Sr).Ko(e);
          }(o.ju, n)) : y(), t.label = 4;

        case 4:
          return [4
          /*yield*/
          , Vs(o, s)];

        case 5:
          return t.sent(), [3
          /*break*/
          , 7];

        case 6:
          // A throttled tab may not have seen the mutation before it was completed
          // and removed from the mutation queue, in which case we won't have cached
          // the affected documents. In this case we can safely ignore the update
          // since that means we didn't apply the mutation locally at all (if we
          // had, we would have cached the affected documents), and so we will just
          // see any resulting document changes via normal remote document updates
          // as applicable.
          l("SyncEngine", "Cannot apply mutation batch with id: " + n), t.label = 7;

        case 7:
          return [2
          /*return*/
          ];
      }
    });
  });
}
/** Applies a query target change from a different tab. */
// PORTING NOTE: Multi-Tab only.


function qs(e, n) {
  return t.__awaiter(this, void 0, void 0, function () {
    var r, i, o, s, u, a, c, h;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          return Ks(r = m(e)), Qs(r), !0 !== n || !0 === r.qh ? [3
          /*break*/
          , 3] : (i = r.Sh.Ci(), [4
          /*yield*/
          , js(r, i.A())]);

        case 1:
          return o = t.sent(), r.qh = !0, [4
          /*yield*/
          , fs(r.ph, !0)];

        case 2:
          for (t.sent(), s = 0, u = o; s < u.length; s++) {
            a = u[s], Wo(r.ph, a);
          }

          return [3
          /*break*/
          , 7];

        case 3:
          return !1 !== n || !1 === r.qh ? [3
          /*break*/
          , 7] : (c = [], h = Promise.resolve(), r.Fh.forEach(function (t, e) {
            r.Sh.qi(e) ? c.push(e) : h = h.then(function () {
              return Ls(r, e), Eo(r.ju, e,
              /*keepPersistedTargetData=*/
              !0);
            }), Ko(r.ph, e);
          }), [4
          /*yield*/
          , h]);

        case 4:
          return t.sent(), [4
          /*yield*/
          , js(r, c)];

        case 5:
          return t.sent(), // PORTING NOTE: Multi-Tab only.
          function (t) {
            var e = m(t);
            e.kh.forEach(function (t, n) {
              Ko(e.ph, n);
            }), e.Mh.Qc(), e.kh = new Map(), e.$h = new bt(A.i);
          }(r), r.qh = !1, [4
          /*yield*/
          , fs(r.ph, !1)];

        case 6:
          t.sent(), t.label = 7;

        case 7:
          return [2
          /*return*/
          ];
      }
    });
  });
}

function js(e, n, r) {
  return t.__awaiter(this, void 0, void 0, function () {
    var r, i, o, s, u, a, c, h, f, l, p, d, v, y;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          r = m(e), i = [], o = [], s = 0, u = n, t.label = 1;

        case 1:
          return s < u.length ? (a = u[s], c = void 0, (h = r.Fh.get(a)) && 0 !== h.length ? [4
          /*yield*/
          , Io(r.ju, zn(h[0]))] : [3
          /*break*/
          , 7]) : [3
          /*break*/
          , 13];

        case 2:
          // For queries that have a local View, we fetch their current state
          // from LocalStore (as the resume token and the snapshot version
          // might have changed) and reconcile their views with the persisted
          // state (the list of syncedDocuments may have gotten out of sync).
          c = t.sent(), f = 0, l = h, t.label = 3;

        case 3:
          return f < l.length ? (p = l[f], d = r.Nh.get(p), [4
          /*yield*/
          , Fs(r, d)]) : [3
          /*break*/
          , 6];

        case 4:
          (v = t.sent()).snapshot && o.push(v.snapshot), t.label = 5;

        case 5:
          return f++, [3
          /*break*/
          , 3];

        case 6:
          return [3
          /*break*/
          , 11];

        case 7:
          return [4
          /*yield*/
          , No(r.ju, a)];

        case 8:
          return y = t.sent(), [4
          /*yield*/
          , Io(r.ju, y)];

        case 9:
          return c = t.sent(), [4
          /*yield*/
          , bs(r, Gs(y), a,
          /*current=*/
          !1)];

        case 10:
          t.sent(), t.label = 11;

        case 11:
          i.push(c), t.label = 12;

        case 12:
          return s++, [3
          /*break*/
          , 1];

        case 13:
          return [2
          /*return*/
          , (r.Ch.yu(o), i)];
      }
    });
  });
}
/**
 * Creates a `Query` object from the specified `Target`. There is no way to
 * obtain the original `Query`, so we synthesize a `Query` from the `Target`
 * object.
 *
 * The synthesized result might be different from the original `Query`, but
 * since the synthesized `Query` should return the same results as the
 * original one (only the presentation of results might differ), the potential
 * difference will not cause issues.
 */
// PORTING NOTE: Multi-Tab only.


function Gs(t) {
  return Vn(t.path, t.collectionGroup, t.orderBy, t.filters, t.limit, "F"
  /* First */
  , t.startAt, t.endAt);
}
/** Returns the IDs of the clients that are currently active. */
// PORTING NOTE: Multi-Tab only.


function zs(t) {
  var e = m(t);
  return m(m(e.ju).persistence).pi();
}
/** Applies a query target change from a different tab. */
// PORTING NOTE: Multi-Tab only.


function Bs(e, n, r, i) {
  return t.__awaiter(this, void 0, void 0, function () {
    var o, s, u;
    return t.__generator(this, function (t) {
      switch (t.label) {
        case 0:
          return (o = m(e)).qh ? ( // If we receive a target state notification via WebStorage, we are
          // either already secondary or another tab has taken the primary lease.
          l("SyncEngine", "Ignoring unexpected query state notification."), [3
          /*break*/
          , 8]) : [3
          /*break*/
          , 1];

        case 1:
          if (!o.Fh.has(n)) return [3
          /*break*/
          , 8];

          switch (r) {
            case "current":
            case "not-current":
              return [3
              /*break*/
              , 2];

            case "rejected":
              return [3
              /*break*/
              , 5];
          }

          return [3
          /*break*/
          , 7];

        case 2:
          return [4
          /*yield*/
          , Ao(o.ju)];

        case 3:
          return s = t.sent(), u = Mt.Xt(n, "current" === r), [4
          /*yield*/
          , Vs(o, s, u)];

        case 4:
          return t.sent(), [3
          /*break*/
          , 8];

        case 5:
          return [4
          /*yield*/
          , Eo(o.ju, n,
          /* keepPersistedTargetData */
          !0)];

        case 6:
          return t.sent(), Ls(o, n, i), [3
          /*break*/
          , 8];

        case 7:
          y(), t.label = 8;

        case 8:
          return [2
          /*return*/
          ];
      }
    });
  });
}
/** Adds or removes Watch targets for queries from different tabs. */


function Ws(e, n, r) {
  return t.__awaiter(this, void 0, void 0, function () {
    var i, o, s, u, a, c, h, f, p, d;
    return t.__generator(this, function (v) {
      switch (v.label) {
        case 0:
          if (!(i = Ks(e)).qh) return [3
          /*break*/
          , 10];
          o = 0, s = n, v.label = 1;

        case 1:
          return o < s.length ? (u = s[o], i.Fh.has(u) ? ( // A target might have been added in a previous attempt
          l("SyncEngine", "Adding an already active target " + u), [3
          /*break*/
          , 5]) : [4
          /*yield*/
          , No(i.ju, u)]) : [3
          /*break*/
          , 6];

        case 2:
          return a = v.sent(), [4
          /*yield*/
          , Io(i.ju, a)];

        case 3:
          return c = v.sent(), [4
          /*yield*/
          , bs(i, Gs(a), c.targetId,
          /*current=*/
          !1)];

        case 4:
          v.sent(), Wo(i.ph, c), v.label = 5;

        case 5:
          return o++, [3
          /*break*/
          , 1];

        case 6:
          h = function h(e) {
            return t.__generator(this, function (t) {
              switch (t.label) {
                case 0:
                  return i.Fh.has(e) ? [4
                  /*yield*/
                  , Eo(i.ju, e,
                  /* keepPersistedTargetData */
                  !1).then(function () {
                    Ko(i.ph, e), Ls(i, e);
                  }).catch(Do)] : [3
                  /*break*/
                  , 2];
                // Release queries that are still active.

                case 1:
                  // Release queries that are still active.
                  t.sent(), t.label = 2;

                case 2:
                  return [2
                  /*return*/
                  ];
              }
            });
          }, f = 0, p = r, v.label = 7;

        case 7:
          return f < p.length ? (d = p[f], [5
          /*yield**/
          , h(d)]) : [3
          /*break*/
          , 10];

        case 8:
          v.sent(), v.label = 9;

        case 9:
          return f++, [3
          /*break*/
          , 7];

        case 10:
          return [2
          /*return*/
          ];
      }
    });
  });
}

function Ks(t) {
  var e = m(t);
  return e.ph.Gu.sh = Es.bind(null, e), e.ph.Gu.qe = Cs.bind(null, e), e.ph.Gu.nh = Ns.bind(null, e), e.Ch.yu = Vr.bind(null, e.bh), e.Ch.Wh = Ur.bind(null, e.bh), e;
}

function Qs(t) {
  var e = m(t);
  return e.ph.Gu.ih = As.bind(null, e), e.ph.Gu.rh = Ss.bind(null, e), e;
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// TOOD(b/140938512): Drop SimpleQueryEngine and rename IndexFreeQueryEngine.

/**
 * A query engine that takes advantage of the target document mapping in the
 * QueryCache. The IndexFreeQueryEngine optimizes query execution by only
 * reading the documents that previously matched a query plus any documents that were
 * edited after the query was last listened to.
 *
 * There are some cases where Index-Free queries are not guaranteed to produce
 * the same results as full collection scans. In these cases, the
 * IndexFreeQueryEngine falls back to full query processing. These cases are:
 *
 * - Limit queries where a document that matched the query previously no longer
 *   matches the query.
 *
 * - Limit queries where a document edit may cause the document to sort below
 *   another document that is in the local cache.
 *
 * - Queries that have never been CURRENT or free of Limbo documents.
 */


var Hs =
/** @class */
function () {
  function t() {}

  return t.prototype.Nc = function (t) {
    this.zh = t;
  }, t.prototype.Lr = function (t, e, r, i) {
    var o = this; // Queries that match all documents don't benefit from using
    // IndexFreeQueries. It is more efficient to scan all documents in a
    // collection, rather than to perform individual lookups.

    return function (t) {
      return 0 === t.filters.length && null === t.limit && null == t.startAt && null == t.endAt && (0 === t.on.length || 1 === t.on.length && t.on[0].field.p());
    }(e) || r.isEqual(st.min()) ? this.Hh(t, e) : this.zh.kr(t, i).next(function (s) {
      var u = o.Yh(e, s);
      return (Cn(e) || Fn(e)) && o.Eh(e.an, u, i, r) ? o.Hh(t, e) : (f() <= n.LogLevel.DEBUG && l("IndexFreeQueryEngine", "Re-using previous result from %s to execute query: %s", r.toString(), Yn(e)), o.zh.Lr(t, e, r).next(function (t) {
        // We merge `previousResults` into `updateResults`, since
        // `updateResults` is already a DocumentMap. If a document is
        // contained in both lists, then its contents are the same.
        return u.forEach(function (e) {
          t = t.ot(e.key, e);
        }), t;
      }));
    }); // Queries that have never seen a snapshot without limbo free documents
    // should also be run as a full collection scan.
  },
  /** Applies the query filter and sorting to the provided documents.  */
  t.prototype.Yh = function (t, e) {
    // Sort the documents and re-apply the query filter since previously
    // matching documents do not necessarily still match the query.
    var n = new Tt(Xn(t));
    return e.forEach(function (e, r) {
      r instanceof kn && $n(t, r) && (n = n.add(r));
    }), n;
  },
  /**
   * Determines if a limit query needs to be refilled from cache, making it
   * ineligible for index-free execution.
   *
   * @param sortedPreviousResults The documents that matched the query when it
   * was last synchronized, sorted by the query's comparator.
   * @param remoteKeys The document keys that matched the query at the last
   * snapshot.
   * @param limboFreeSnapshotVersion The version of the snapshot when the query
   * was last synchronized.
   */
  t.prototype.Eh = function (t, e, n, r) {
    // The query needs to be refilled if a previously matching document no
    // longer matches.
    if (n.size !== e.size) return !0; // Limit queries are not eligible for index-free query execution if there is
    // a potential that an older document from cache now sorts before a document
    // that was previously part of the limit. This, however, can only happen if
    // the document at the edge of the limit goes out of limit.
    // If a document that is not the limit boundary sorts differently,
    // the boundary of the limit itself did not change and documents from cache
    // will continue to be "rejected" by this boundary. Therefore, we can ignore
    // any modifications that don't affect the last document.

    var i = "F"
    /* First */
    === t ? e.last() : e.first();
    return !!i && (i.hasPendingWrites || i.version.L(r) > 0);
  }, t.prototype.Hh = function (t, e) {
    return f() <= n.LogLevel.DEBUG && l("IndexFreeQueryEngine", "Using full collection scan to execute query:", Yn(e)), this.zh.Lr(t, e, st.min());
  }, t;
}(),
    Ys =
/** @class */
function () {
  function t(t, e) {
    this.Dr = t, this.No = e,
    /**
         * The set of all mutations that have been sent but not yet been applied to
         * the backend.
         */
    this.Sr = [],
    /** Next value to use when assigning sequential IDs to each mutation batch. */
    this.Jh = 1,
    /** An ordered mapping between documents and the mutations batch IDs. */
    this.Xh = new Tt(Lo.kc);
  }

  return t.prototype.$o = function (t) {
    return yr.resolve(0 === this.Sr.length);
  }, t.prototype.ko = function (t, e, n, r) {
    var i = this.Jh;
    this.Jh++, this.Sr.length > 0 && this.Sr[this.Sr.length - 1];
    var o = new Xr(i, e, n, r);
    this.Sr.push(o); // Track references by document key and index collection parents.

    for (var s = 0, u = r; s < u.length; s++) {
      var a = u[s];
      this.Xh = this.Xh.add(new Lo(a.key, i)), this.Dr.Mo(t, a.key.path.h());
    }

    return yr.resolve(o);
  }, t.prototype.Oo = function (t, e) {
    return yr.resolve(this.Zh(e));
  }, t.prototype.Bo = function (t, e) {
    var n = e + 1,
        r = this.tl(n),
        i = r < 0 ? 0 : r; // The requested batchId may still be out of range so normalize it to the
    // start of the queue.

    return yr.resolve(this.Sr.length > i ? this.Sr[i] : null);
  }, t.prototype.qo = function () {
    return yr.resolve(0 === this.Sr.length ? -1 : this.Jh - 1);
  }, t.prototype.Uo = function (t) {
    return yr.resolve(this.Sr.slice());
  }, t.prototype.Nr = function (t, e) {
    var n = this,
        r = new Lo(e, 0),
        i = new Lo(e, Number.POSITIVE_INFINITY),
        o = [];
    return this.Xh.Ft([r, i], function (t) {
      var e = n.Zh(t.jc);
      o.push(e);
    }), yr.resolve(o);
  }, t.prototype.Or = function (t, e) {
    var n = this,
        r = new Tt(H);
    return e.forEach(function (t) {
      var e = new Lo(t, 0),
          i = new Lo(t, Number.POSITIVE_INFINITY);
      n.Xh.Ft([e, i], function (t) {
        r = r.add(t.jc);
      });
    }), yr.resolve(this.el(r));
  }, t.prototype.Wr = function (t, e) {
    // Use the query path as a prefix for testing if a document matches the
    // query.
    var n = e.path,
        r = n.length + 1,
        i = n; // Construct a document reference for actually scanning the index. Unlike
    // the prefix the document key in this reference must have an even number of
    // segments. The empty segment can be used a suffix of the query path
    // because it precedes all other segments in an ordered traversal.

    A.F(i) || (i = i.child(""));
    var o = new Lo(new A(i), 0),
        s = new Tt(H); // Find unique batchIDs referenced by all documents potentially matching the
    // query.

    return this.Xh.xt(function (t) {
      var e = t.key.path;
      return !!n.T(e) && ( // Rows with document keys more than one segment longer than the query
      // path can't be matches. For example, a query on 'rooms' can't match
      // the document /rooms/abc/messages/xyx.
      // TODO(mcg): we'll need a different scanner when we implement
      // ancestor queries.
      e.length === r && (s = s.add(t.jc)), !0);
    }, o), yr.resolve(this.el(s));
  }, t.prototype.el = function (t) {
    var e = this,
        n = []; // Construct an array of matching batches, sorted by batchID to ensure that
    // multiple mutations affecting the same document key are applied in order.

    return t.forEach(function (t) {
      var r = e.Zh(t);
      null !== r && n.push(r);
    }), n;
  }, t.prototype.Wo = function (t, e) {
    var n = this;
    g(0 === this.nl(e.batchId, "removed")), this.Sr.shift();
    var r = this.Xh;
    return yr.forEach(e.mutations, function (i) {
      var o = new Lo(i.key, e.batchId);
      return r = r.delete(o), n.No.Go(t, i.key);
    }).next(function () {
      n.Xh = r;
    });
  }, t.prototype.Ko = function (t) {// No-op since the memory mutation queue does not maintain a separate cache.
  }, t.prototype.Ho = function (t, e) {
    var n = new Lo(e, 0),
        r = this.Xh.$t(n);
    return yr.resolve(e.isEqual(r && r.key));
  }, t.prototype.zo = function (t) {
    return this.Sr.length, yr.resolve();
  },
  /**
   * Finds the index of the given batchId in the mutation queue and asserts that
   * the resulting index is within the bounds of the queue.
   *
   * @param batchId The batchId to search for
   * @param action A description of what the caller is doing, phrased in passive
   * form (e.g. "acknowledged" in a routine that acknowledges batches).
   */
  t.prototype.nl = function (t, e) {
    return this.tl(t);
  },
  /**
   * Finds the index of the given batchId in the mutation queue. This operation
   * is O(1).
   *
   * @return The computed index of the batch with the given batchId, based on
   * the state of the queue. Note this index can be negative if the requested
   * batchId has already been remvoed from the queue or past the end of the
   * queue if the batchId is larger than the last added batch.
   */
  t.prototype.tl = function (t) {
    return 0 === this.Sr.length ? 0 : t - this.Sr[0].batchId; // Examine the front of the queue to figure out the difference between the
    // batchId and indexes in the array. Note that since the queue is ordered
    // by batchId, if the first batch has a larger batchId then the requested
    // batchId doesn't exist in the queue.
  },
  /**
   * A version of lookupMutationBatch that doesn't return a promise, this makes
   * other functions that uses this code easier to read and more efficent.
   */
  t.prototype.Zh = function (t) {
    var e = this.tl(t);
    return e < 0 || e >= this.Sr.length ? null : this.Sr[e];
  }, t;
}(),
    $s =
/** @class */
function () {
  /**
   * @param sizer Used to assess the size of a document. For eager GC, this is expected to just
   * return 0 to avoid unnecessarily doing the work of calculating the size.
   */
  function t(t, e) {
    this.Dr = t, this.sl = e,
    /** Underlying cache of documents and their read times. */
    this.docs = new bt(A.i),
    /** Size of all cached documents. */
    this.size = 0;
  }

  return t.prototype.Er = function (t, e, n) {
    var r = e.key,
        i = this.docs.get(r),
        o = i ? i.size : 0,
        s = this.sl(e);
    return this.docs = this.docs.ot(r, {
      ta: e,
      size: s,
      readTime: n
    }), this.size += s - o, this.Dr.Mo(t, r.path.h());
  },
  /**
   * Removes the specified entry from the cache and updates the cache size as appropriate.
   *
   * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer
   * returned by `newChangeBuffer()`.
   */
  t.prototype.Ar = function (t) {
    var e = this.docs.get(t);
    e && (this.docs = this.docs.remove(t), this.size -= e.size);
  }, t.prototype.Rr = function (t, e) {
    var n = this.docs.get(e);
    return yr.resolve(n ? n.ta : null);
  }, t.prototype.getEntries = function (t, e) {
    var n = this,
        r = Dt();
    return e.forEach(function (t) {
      var e = n.docs.get(t);
      r = r.ot(t, e ? e.ta : null);
    }), yr.resolve(r);
  }, t.prototype.Lr = function (t, e, n) {
    for (var r = Lt(), i = new A(e.path.child("")), o = this.docs.ft(i) // Documents are ordered by key, so we can use a prefix scan to narrow down
    // the documents we need to match the query against.
    ; o.At();) {
      var s = o.It(),
          u = s.key,
          a = s.value,
          c = a.ta,
          h = a.readTime;
      if (!e.path.T(u.path)) break;
      h.L(n) <= 0 || c instanceof kn && $n(e, c) && (r = r.ot(c.key, c));
    }

    return yr.resolve(r);
  }, t.prototype.il = function (t, e) {
    return yr.forEach(this.docs, function (t) {
      return e(t);
    });
  }, t.prototype.ra = function (t) {
    // `trackRemovals` is ignores since the MemoryRemoteDocumentCache keeps
    // a separate changelog and does not need special handling for removals.
    return new Xs(this);
  }, t.prototype.aa = function (t) {
    return yr.resolve(this.size);
  }, t;
}(),
    Xs =
/** @class */
function (e) {
  function n(t) {
    var n = this;
    return (n = e.call(this) || this).ca = t, n;
  }

  return t.__extends(n, e), n.prototype.yr = function (t) {
    var e = this,
        n = [];
    return this.wr.forEach(function (r, i) {
      i ? n.push(e.ca.Er(t, i, e.readTime)) : e.ca.Ar(r);
    }), yr.$n(n);
  }, n.prototype.gr = function (t, e) {
    return this.ca.Rr(t, e);
  }, n.prototype.Pr = function (t, e) {
    return this.ca.getEntries(t, e);
  }, n;
}(Zr),
    Js =
/** @class */
function () {
  function t(t) {
    this.persistence = t,
    /**
         * Maps a target to the data about that target
         */
    this.rl = new it(function (t) {
      return lt(t);
    }, pt),
    /** The last received snapshot version. */
    this.lastRemoteSnapshotVersion = st.min(),
    /** The highest numbered target ID encountered. */
    this.highestTargetId = 0,
    /** The highest sequence number encountered. */
    this.ol = 0,
    /**
         * A ordered bidirectional mapping between documents and the remote target
         * IDs.
         */
    this.al = new xo(), this.targetCount = 0, this.cl = ro.fa();
  }

  return t.prototype.Ce = function (t, e) {
    return this.rl.forEach(function (t, n) {
      return e(n);
    }), yr.resolve();
  }, t.prototype.Ea = function (t) {
    return yr.resolve(this.lastRemoteSnapshotVersion);
  }, t.prototype.Ia = function (t) {
    return yr.resolve(this.ol);
  }, t.prototype.wa = function (t) {
    return this.highestTargetId = this.cl.next(), yr.resolve(this.highestTargetId);
  }, t.prototype.Aa = function (t, e, n) {
    return n && (this.lastRemoteSnapshotVersion = n), e > this.ol && (this.ol = e), yr.resolve();
  }, t.prototype.ga = function (t) {
    this.rl.set(t.target, t);
    var e = t.targetId;
    e > this.highestTargetId && (this.cl = new ro(e), this.highestTargetId = e), t.sequenceNumber > this.ol && (this.ol = t.sequenceNumber);
  }, t.prototype.Ra = function (t, e) {
    return this.ga(e), this.targetCount += 1, yr.resolve();
  }, t.prototype.ya = function (t, e) {
    return this.ga(e), yr.resolve();
  }, t.prototype.Va = function (t, e) {
    return this.rl.delete(e.target), this.al.Uc(e.targetId), this.targetCount -= 1, yr.resolve();
  }, t.prototype.po = function (t, e, n) {
    var r = this,
        i = 0,
        o = [];
    return this.rl.forEach(function (s, u) {
      u.sequenceNumber <= e && null === n.get(u.targetId) && (r.rl.delete(s), o.push(r.pa(t, u.targetId)), i++);
    }), yr.$n(o).next(function () {
      return i;
    });
  }, t.prototype.ba = function (t) {
    return yr.resolve(this.targetCount);
  }, t.prototype.va = function (t, e) {
    var n = this.rl.get(e) || null;
    return yr.resolve(n);
  }, t.prototype.Sa = function (t, e, n) {
    return this.al.Lc(e, n), yr.resolve();
  }, t.prototype.Ca = function (t, e, n) {
    this.al.qc(e, n);
    var r = this.persistence.No,
        i = [];
    return r && e.forEach(function (e) {
      i.push(r.Go(t, e));
    }), yr.$n(i);
  }, t.prototype.pa = function (t, e) {
    return this.al.Uc(e), yr.resolve();
  }, t.prototype.Fa = function (t, e) {
    var n = this.al.Wc(e);
    return yr.resolve(n);
  }, t.prototype.Ho = function (t, e) {
    return yr.resolve(this.al.Ho(e));
  }, t;
}(),
    Zs =
/** @class */
function () {
  /**
   * The constructor accepts a factory for creating a reference delegate. This
   * allows both the delegate and this instance to have strong references to
   * each other without having nullable fields that would then need to be
   * checked or asserted on every access.
   */
  function t(t) {
    var e = this;
    this.ul = {}, this.Ma = new qr(0), this.Oa = !1, this.Oa = !0, this.No = t(this), this.Ka = new Js(this), this.Dr = new Ui(), this.vr = function (t, n) {
      return new $s(t, function (t) {
        return e.No.hl(t);
      });
    }(this.Dr);
  }

  return t.prototype.start = function () {
    return Promise.resolve();
  }, t.prototype.Di = function () {
    // No durable state to ensure is closed on shutdown.
    return this.Oa = !1, Promise.resolve();
  }, Object.defineProperty(t.prototype, "Ei", {
    get: function get() {
      return this.Oa;
    },
    enumerable: !1,
    configurable: !0
  }), t.prototype.Za = function () {// No op.
  }, t.prototype.tc = function () {// No op.
  }, t.prototype.Ic = function () {
    return this.Dr;
  }, t.prototype.mc = function (t) {
    var e = this.ul[t.ti()];
    return e || (e = new Ys(this.Dr, this.No), this.ul[t.ti()] = e), e;
  }, t.prototype.Tc = function () {
    return this.Ka;
  }, t.prototype.Ec = function () {
    return this.vr;
  }, t.prototype.runTransaction = function (t, e, n) {
    var r = this;
    l("MemoryPersistence", "Starting transaction:", t);
    var i = new tu(this.Ma.next());
    return this.No.ll(), n(i).next(function (t) {
      return r.No._l(i).next(function () {
        return t;
      });
    }).Fn().then(function (t) {
      return i.br(), t;
    });
  }, t.prototype.fl = function (t, e) {
    return yr.kn(Object.values(this.ul).map(function (n) {
      return function () {
        return n.Ho(t, e);
      };
    }));
  }, t;
}(),
    tu =
/** @class */
function (e) {
  function n(t) {
    var n = this;
    return (n = e.call(this) || this).xa = t, n;
  }

  return t.__extends(n, e), n;
}(ei),
    eu =
/** @class */
function () {
  function t(t) {
    this.persistence = t,
    /** Tracks all documents that are active in Query views. */
    this.dl = new xo(),
    /** The list of documents that are potentially GCed after each transaction. */
    this.wl = null;
  }

  return t.ml = function (e) {
    return new t(e);
  }, Object.defineProperty(t.prototype, "Tl", {
    get: function get() {
      if (this.wl) return this.wl;
      throw y();
    },
    enumerable: !1,
    configurable: !0
  }), t.prototype.Da = function (t, e, n) {
    return this.dl.Da(n, e), this.Tl.delete(n.toString()), yr.resolve();
  }, t.prototype.Na = function (t, e, n) {
    return this.dl.Na(n, e), this.Tl.add(n.toString()), yr.resolve();
  }, t.prototype.Go = function (t, e) {
    return this.Tl.add(e.toString()), yr.resolve();
  }, t.prototype.removeTarget = function (t, e) {
    var n = this;
    this.dl.Uc(e.targetId).forEach(function (t) {
      return n.Tl.add(t.toString());
    });
    var r = this.persistence.Tc();
    return r.Fa(t, e.targetId).next(function (t) {
      t.forEach(function (t) {
        return n.Tl.add(t.toString());
      });
    }).next(function () {
      return r.Va(t, e);
    });
  }, t.prototype.ll = function () {
    this.wl = new Set();
  }, t.prototype._l = function (t) {
    var e = this,
        n = this.persistence.Ec().ra(); // Remove newly orphaned documents.

    return yr.forEach(this.Tl, function (r) {
      var i = A.D(r);
      return e.El(t, i).next(function (t) {
        t || n.Ar(i);
      });
    }).next(function () {
      return e.wl = null, n.apply(t);
    });
  }, t.prototype.yc = function (t, e) {
    var n = this;
    return this.El(t, e).next(function (t) {
      t ? n.Tl.delete(e.toString()) : n.Tl.add(e.toString());
    });
  }, t.prototype.hl = function (t) {
    // For eager GC, we don't care about the document size, there are no size thresholds.
    return 0;
  }, t.prototype.El = function (t, e) {
    var n = this;
    return yr.kn([function () {
      return yr.resolve(n.dl.Ho(e));
    }, function () {
      return n.persistence.Tc().Ho(t, e);
    }, function () {
      return n.persistence.fl(t, e);
    }]);
  }, t;
}(),
    nu =
/** @class */
function () {
  function t(t) {
    this.Il = t.Il, this.Al = t.Al;
  }

  return t.prototype.gu = function (t) {
    this.Rl = t;
  }, t.prototype.Tu = function (t) {
    this.gl = t;
  }, t.prototype.onMessage = function (t) {
    this.Pl = t;
  }, t.prototype.close = function () {
    this.Al();
  }, t.prototype.send = function (t) {
    this.Il(t);
  }, t.prototype.yl = function () {
    this.Rl();
  }, t.prototype.Vl = function (t) {
    this.gl(t);
  }, t.prototype.pl = function (t) {
    this.Pl(t);
  }, t;
}(),
    ru = {
  BatchGetDocuments: "batchGet",
  Commit: "commit",
  RunQuery: "runQuery"
},
    iu =
/** @class */
function (e) {
  function n(t) {
    var n = this;
    return (n = e.call(this, t) || this).forceLongPolling = t.forceLongPolling, n.W = t.W, n;
  }
  /**
   * Base class for all Rest-based connections to the backend (WebChannel and
   * HTTP).
   */


  return t.__extends(n, e), n.prototype.Nl = function (t, e, n, r) {
    return new Promise(function (o, s) {
      var u = new i.XhrIo();
      u.listenOnce(i.EventType.COMPLETE, function () {
        try {
          switch (u.getLastErrorCode()) {
            case i.ErrorCode.NO_ERROR:
              var e = u.getResponseJson();
              l("Connection", "XHR received:", JSON.stringify(e)), o(e);
              break;

            case i.ErrorCode.TIMEOUT:
              l("Connection", 'RPC "' + t + '" timed out'), s(new c(a.DEADLINE_EXCEEDED, "Request time out"));
              break;

            case i.ErrorCode.HTTP_ERROR:
              var n = u.getStatus();

              if (l("Connection", 'RPC "' + t + '" failed with status:', n, "response text:", u.getResponseText()), n > 0) {
                var r = u.getResponseJson().error;

                if (r && r.status && r.message) {
                  var h = function (t) {
                    var e = t.toLowerCase().replace("_", "-");
                    return Object.values(a).indexOf(e) >= 0 ? e : a.UNKNOWN;
                  }(r.status);

                  s(new c(h, r.message));
                } else s(new c(a.UNKNOWN, "Server responded with status " + u.getStatus()));
              } else // If we received an HTTP_ERROR but there's no status code,
                // it's most probably a connection issue
                s(new c(a.UNAVAILABLE, "Connection failed."));

              break;

            default:
              y();
          }
        } finally {
          l("Connection", 'RPC "' + t + '" completed.');
        }
      });
      var h = JSON.stringify(r);
      u.send(e, "POST", h, n, 15);
    });
  }, n.prototype.Pu = function (t, e) {
    var n = [this.vl, "/", "google.firestore.v1.Firestore", "/", t, "/channel"],
        o = i.createWebChannelTransport(),
        s = {
      // Required for backend stickiness, routing behavior is based on this
      // parameter.
      httpSessionIdParam: "gsessionid",
      initMessageHeaders: {},
      messageUrlParams: {
        // This param is used to improve routing and project isolation by the
        // backend and must be included in every request.
        database: "projects/" + this.U.projectId + "/databases/" + this.U.database
      },
      sendRawJson: !0,
      supportsCrossDomainXhr: !0,
      internalChannelParams: {
        // Override the default timeout (randomized between 10-20 seconds) since
        // a large write batch on a slow internet connection may take a long
        // time to send to the backend. Rather than have WebChannel impose a
        // tight timeout which could lead to infinite timeouts and retries, we
        // set it very large (5-10 minutes) and rely on the browser's builtin
        // timeouts to kick in if the request isn't working.
        forwardChannelRequestTimeoutMs: 6e5
      },
      forceLongPolling: this.forceLongPolling,
      detectBufferingProxy: this.W
    };
    this.Cl(s.initMessageHeaders, e), // Sending the custom headers we just added to request.initMessageHeaders
    // (Authorization, etc.) will trigger the browser to make a CORS preflight
    // request because the XHR will no longer meet the criteria for a "simple"
    // CORS request:
    // https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests
    // Therefore to avoid the CORS preflight request (an extra network
    // roundtrip), we use the httpHeadersOverwriteParam option to specify that
    // the headers should instead be encoded into a special "$httpHeaders" query
    // parameter, which is recognized by the webchannel backend. This is
    // formally defined here:
    // https://github.com/google/closure-library/blob/b0e1815b13fb92a46d7c9b3c30de5d6a396a3245/closure/goog/net/rpc/httpcors.js#L32
    // TODO(b/145624756): There is a backend bug where $httpHeaders isn't respected if the request
    // doesn't have an Origin header. So we have to exclude a few browser environments that are
    // known to (sometimes) not include an Origin. See
    // https://github.com/firebase/firebase-js-sdk/issues/1491.
    r.isMobileCordova() || r.isReactNative() || r.isElectron() || r.isIE() || r.isUWP() || r.isBrowserExtension() || (s.httpHeadersOverwriteParam = "$httpHeaders");
    var u = n.join("");
    l("Connection", "Creating WebChannel: " + u, s);

    var h = o.createWebChannel(u, s),
        f = !1,
        p = !1,
        v = new nu({
      Il: function Il(t) {
        p ? l("Connection", "Not sending because WebChannel is closed:", t) : (f || (l("Connection", "Opening WebChannel transport."), h.open(), f = !0), l("Connection", "WebChannel sending:", t), h.send(t));
      },
      Al: function Al() {
        return h.close();
      }
    }),
        y = function y(t, e) {
      // TODO(dimond): closure typing seems broken because WebChannel does
      // not implement goog.events.Listenable
      h.listen(t, function (t) {
        try {
          e(t);
        } catch (t) {
          setTimeout(function () {
            throw t;
          }, 0);
        }
      });
    }; // WebChannel supports sending the first message with the handshake - saving
    // a network round trip. However, it will have to call send in the same
    // JS event loop as open. In order to enforce this, we delay actually
    // opening the WebChannel until send is called. Whether we have called
    // open is tracked with this variable.
    // Closure events are guarded and exceptions are swallowed, so catch any
    // exception and rethrow using a setTimeout so they become visible again.
    // Note that eventually this function could go away if we are confident
    // enough the code is exception free.


    return y(i.WebChannel.EventType.OPEN, function () {
      p || l("Connection", "WebChannel transport opened.");
    }), y(i.WebChannel.EventType.CLOSE, function () {
      p || (p = !0, l("Connection", "WebChannel transport closed"), v.Vl());
    }), y(i.WebChannel.EventType.ERROR, function (t) {
      p || (p = !0, d("Connection", "WebChannel transport errored:", t), v.Vl(new c(a.UNAVAILABLE, "The operation could not be completed")));
    }), y(i.WebChannel.EventType.MESSAGE, function (t) {
      var e;

      if (!p) {
        var n = t.data[0];
        g(!!n); // TODO(b/35143891): There is a bug in One Platform that caused errors
        // (and only errors) to be wrapped in an extra array. To be forward
        // compatible with the bug we need to check either condition. The latter
        // can be removed once the fix has been rolled out.
        // Use any because msgData.error is not typed.

        var r = n,
            i = r.error || (null === (e = r[0]) || void 0 === e ? void 0 : e.error);

        if (i) {
          l("Connection", "WebChannel received error:", i); // error.status will be a string like 'OK' or 'NOT_FOUND'.

          var o = i.status,
              s = function (t) {
            // lookup by string
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            var e = vt[t];
            if (void 0 !== e) return _t(e);
          }(o),
              u = i.message;

          void 0 === s && (s = a.INTERNAL, u = "Unknown error status: " + o + " with message " + i.message), // Mark closed so no further events are propagated
          p = !0, v.Vl(new c(s, u)), h.close();
        } else l("Connection", "WebChannel received:", n), v.pl(n);
      }
    }), setTimeout(function () {
      // Technically we could/should wait for the WebChannel opened event,
      // but because we want to send the first message with the WebChannel
      // handshake we pretend the channel opened here (asynchronously), and
      // then delay the actual open until the first message is sent.
      v.yl();
    }, 0), v;
  }, n;
}(
/** @class */
function () {
  function t(t) {
    this.bl = t, this.U = t.U;
    var e = t.ssl ? "https" : "http";
    this.vl = e + "://" + t.host, this.Sl = "projects/" + this.U.projectId + "/databases/" + this.U.database + "/documents";
  }

  return t.prototype.$u = function (t, e, n, r) {
    var i = this.Dl(t, e);
    l("RestConnection", "Sending: ", i, n);
    var o = {};
    return this.Cl(o, r), this.Nl(t, i, o, n).then(function (t) {
      return l("RestConnection", "Received: ", t), t;
    }, function (e) {
      throw d("RestConnection", t + " failed with error: ", e, "url: ", i, "request:", n), e;
    });
  }, t.prototype.ku = function (t, e, n, r) {
    // The REST API automatically aggregates all of the streamed results, so we
    // can just use the normal invoke() method.
    return this.$u(t, e, n, r);
  },
  /**
   * Modifies the headers for a request, adding any authorization token if
   * present and any additional headers for the request.
   */
  t.prototype.Cl = function (t, e) {
    if (t["X-Goog-Api-Client"] = "gl-js/ fire/7.24.0", // Content-Type: text/plain will avoid preflight requests which might
    // mess with CORS and redirects by proxies. If we add custom headers
    // we will need to change this code to potentially use the $httpOverwrite
    // parameter supported by ESF to avoid triggering preflight requests.
    t["Content-Type"] = "text/plain", e) for (var n in e.Kc) {
      e.Kc.hasOwnProperty(n) && (t[n] = e.Kc[n]);
    }
  }, t.prototype.Dl = function (t, e) {
    var n = ru[t];
    return this.vl + "/v1/" + e + ":" + n;
  }, t;
}()),
    ou =
/** @class */
function () {
  function t() {
    var t = this;
    this.Fl = function () {
      return t.xl();
    }, this.$l = function () {
      return t.kl();
    }, this.Ml = [], this.Ol();
  }

  return t.prototype.Zu = function (t) {
    this.Ml.push(t);
  }, t.prototype.Di = function () {
    window.removeEventListener("online", this.Fl), window.removeEventListener("offline", this.$l);
  }, t.prototype.Ol = function () {
    window.addEventListener("online", this.Fl), window.addEventListener("offline", this.$l);
  }, t.prototype.xl = function () {
    l("ConnectivityMonitor", "Network connectivity changed: AVAILABLE");

    for (var t = 0, e = this.Ml; t < e.length; t++) {
      (0, e[t])(0
      /* AVAILABLE */
      );
    }
  }, t.prototype.kl = function () {
    l("ConnectivityMonitor", "Network connectivity changed: UNAVAILABLE");

    for (var t = 0, e = this.Ml; t < e.length; t++) {
      (0, e[t])(1
      /* UNAVAILABLE */
      );
    }
  }, // TODO(chenbrian): Consider passing in window either into this component or
  // here for testing via FakeWindow.

  /** Checks that all used attributes of window are available. */
  t.Ln = function () {
    return "undefined" != typeof window && void 0 !== window.addEventListener && void 0 !== window.removeEventListener;
  }, t;
}(),
    su =
/** @class */
function () {
  function t() {}

  return t.prototype.Zu = function (t) {// No-op.
  }, t.prototype.Di = function () {// No-op.
  }, t;
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** Initializes the WebChannelConnection for the browser. */

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function uu(t) {
  return new ye(t,
  /* useProto3Json= */
  !0);
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var au = "You are using the memory-only build of Firestore. Persistence support is only available via the @firebase/firestore bundle or the firebase-firestore.js build.",
    cu =
/** @class */
function () {
  function e() {}

  return e.prototype.initialize = function (e) {
    return t.__awaiter(this, void 0, void 0, function () {
      return t.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return this.Sh = this.Ll(e), this.persistence = this.Bl(e), [4
            /*yield*/
            , this.persistence.start()];

          case 1:
            return t.sent(), this.ql = this.Ul(e), this.ju = this.Ql(e), [2
            /*return*/
            ];
        }
      });
    });
  }, e.prototype.Ul = function (t) {
    return null;
  }, e.prototype.Ql = function (t) {
    /** Manages our in-memory or durable persistence. */
    return e = this.persistence, n = new Hs(), r = t.Wl, new go(e, n, r);
    var e, n, r;
  }, e.prototype.Bl = function (t) {
    if (t.persistenceSettings.jl) throw new c(a.FAILED_PRECONDITION, au);
    return new Zs(eu.ml);
  }, e.prototype.Ll = function (t) {
    return new $r();
  }, e.prototype.terminate = function () {
    return t.__awaiter(this, void 0, void 0, function () {
      return t.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return this.ql && this.ql.stop(), [4
            /*yield*/
            , this.Sh.Di()];

          case 1:
            return t.sent(), [4
            /*yield*/
            , this.persistence.Di()];

          case 2:
            return t.sent(), [2
            /*return*/
            ];
        }
      });
    });
  }, e.prototype.clearPersistence = function (t, e) {
    throw new c(a.FAILED_PRECONDITION, au);
  }, e;
}(),
    hu =
/** @class */
function (e) {
  function n() {
    return null !== e && e.apply(this, arguments) || this;
  }

  return t.__extends(n, e), n.prototype.initialize = function (n) {
    return t.__awaiter(this, void 0, void 0, function () {
      var r,
          i = this;
      return t.__generator(this, function (o) {
        switch (o.label) {
          case 0:
            return [4
            /*yield*/
            , e.prototype.initialize.call(this, n)];

          case 1:
            return o.sent(), r = this.Kl.fi, this.Sh instanceof Yr ? (this.Sh.fi = {
              er: Ms.bind(null, r),
              nr: Bs.bind(null, r),
              sr: Ws.bind(null, r),
              pi: zs.bind(null, r)
            }, [4
            /*yield*/
            , this.Sh.start()]) : [3
            /*break*/
            , 3];

          case 2:
            o.sent(), o.label = 3;

          case 3:
            // NOTE: This will immediately call the listener, so we make sure to
            // set it after localStore / remoteStore are started.
            return [4
            /*yield*/
            , this.persistence.Xa(function (e) {
              return t.__awaiter(i, void 0, void 0, function () {
                return t.__generator(this, function (t) {
                  switch (t.label) {
                    case 0:
                      return [4
                      /*yield*/
                      , qs(this.Kl.fi, e)];

                    case 1:
                      return t.sent(), this.ql && (e && !this.ql.Ei ? this.ql.start(this.ju) : e || this.ql.stop()), [2
                      /*return*/
                      ];
                  }
                });
              });
            })];

          case 4:
            // NOTE: This will immediately call the listener, so we make sure to
            // set it after localStore / remoteStore are started.
            return o.sent(), [2
            /*return*/
            ];
        }
      });
    });
  }, n.prototype.Ll = function (t) {
    if (t.persistenceSettings.jl && t.persistenceSettings.synchronizeTabs) {
      var e = Ar();
      if (!Yr.Ln(e)) throw new c(a.UNIMPLEMENTED, "IndexedDB persistence is only available on platforms that support LocalStorage.");
      var n = yo(t.bl.U, t.bl.persistenceKey);
      return new Yr(e, t.cs, n, t.clientId, t.Wl);
    }

    return new $r();
  }, n;
}(
/** @class */
function (e) {
  function n(t) {
    var n = this;
    return (n = e.call(this) || this).Kl = t, n;
  }

  return t.__extends(n, e), n.prototype.initialize = function (n) {
    return t.__awaiter(this, void 0, void 0, function () {
      return t.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return [4
            /*yield*/
            , e.prototype.initialize.call(this, n)];

          case 1:
            return t.sent(), [4
            /*yield*/
            , So(this.ju)];

          case 2:
            return t.sent(), [4
            /*yield*/
            , this.Kl.initialize(this, n)];

          case 3:
            // Enqueue writes from a previous session
            return t.sent(), [4
            /*yield*/
            , Qs(this.Kl.fi)];

          case 4:
            // Enqueue writes from a previous session
            return t.sent(), [4
            /*yield*/
            , is(this.Kl.ph)];

          case 5:
            return t.sent(), [2
            /*return*/
            ];
        }
      });
    });
  }, n.prototype.Ul = function (t) {
    var e = this.persistence.No.wo;
    return new ai(e, t.cs);
  }, n.prototype.Bl = function (t) {
    var e = yo(t.bl.U, t.bl.persistenceKey),
        n = uu(t.bl.U);
    return new ho(t.persistenceSettings.synchronizeTabs, e, t.clientId, ui.ao(t.persistenceSettings.cacheSizeBytes), t.cs, Ar(), Sr(), n, this.Sh, t.persistenceSettings.ka);
  }, n.prototype.Ll = function (t) {
    return new $r();
  }, n.prototype.clearPersistence = function (e, n) {
    return function (e) {
      return t.__awaiter(this, void 0, void 0, function () {
        var n;
        return t.__generator(this, function (t) {
          switch (t.label) {
            case 0:
              return gr.Ln() ? (n = e + "main", [4
              /*yield*/
              , gr.delete(n)]) : [2
              /*return*/
              , Promise.resolve()];

            case 1:
              return t.sent(), [2
              /*return*/
              ];
          }
        });
      });
    }(yo(e, n));
  }, n;
}(cu)),
    fu =
/** @class */
function () {
  function e() {}

  return e.prototype.initialize = function (e, n) {
    return t.__awaiter(this, void 0, void 0, function () {
      var r = this;
      return t.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return this.ju ? [3
            /*break*/
            , 2] : (this.ju = e.ju, this.Sh = e.Sh, this.Ku = this.Gl(n), this.ph = this.zl(n), this.bh = this.Hl(n), this.fi = this.Yl(n), this.Sh.di = function (t) {
              return Ts(r.fi, t, 1
              /* SharedClientState */
              );
            }, this.ph.Gu.Jl = Us.bind(null, this.fi), [4
            /*yield*/
            , fs(this.ph, this.fi.Uh)]);

          case 1:
            t.sent(), t.label = 2;

          case 2:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, e.prototype.Hl = function (t) {
    return new Rr();
  }, e.prototype.Gl = function (t) {
    var e,
        n = uu(t.bl.U),
        r = (e = t.bl, new iu(e));
    /** Return the Platform-specific connectivity monitor. */

    return function (t, e, n) {
      return new Mo(t, e, n);
    }(t.credentials, r, n);
  }, e.prototype.zl = function (t) {
    var e,
        n,
        r,
        i,
        o,
        s = this;
    return e = this.ju, n = this.Ku, r = t.cs, i = function i(t) {
      return Ts(s.fi, t, 0
      /* RemoteStore */
      );
    }, o = ou.Ln() ? new ou() : new su(), new jo(e, n, r, i, o);
  }, e.prototype.Yl = function (t) {
    return function (t, e, n, // PORTING NOTE: Manages state synchronization in multi-tab environments.
    r, i, o, s) {
      var u = new ws(t, e, n, r, i, o);
      return s && (u.qh = !0), u;
    }(this.ju, this.ph, this.bh, this.Sh, t.Wl, t.Dh, !t.persistenceSettings.jl || !t.persistenceSettings.synchronizeTabs);
  }, e.prototype.terminate = function () {
    return Bo(this.ph);
  }, e;
}(),
    lu =
/** @class */
function () {
  function t(t) {
    this.observer = t,
    /**
         * When set to true, will not raise future events. Necessary to deal with
         * async detachment of listener.
         */
    this.muted = !1;
  }

  return t.prototype.next = function (t) {
    this.observer.next && this.Xl(this.observer.next, t);
  }, t.prototype.error = function (t) {
    this.observer.error ? this.Xl(this.observer.error, t) : console.error("Uncaught Error in snapshot listener:", t);
  }, t.prototype.Zl = function () {
    this.muted = !0;
  }, t.prototype.Xl = function (t, e) {
    var n = this;
    this.muted || setTimeout(function () {
      n.muted || t(e);
    }, 0);
  }, t;
}(),
    pu = function pu(t) {
  !function (t, e, n, r) {
    if (!(e instanceof Array) || e.length < 1) throw new c(a.INVALID_ARGUMENT, "Function FieldPath() requires its fieldNames argument to be an array with at least " + W(1, "element") + ".");
  }(0, t);

  for (var e = 0; e < t.length; ++e) {
    if (k("FieldPath", "string", e, t[e]), 0 === t[e].length) throw new c(a.INVALID_ARGUMENT, "Invalid field name at argument $(i + 1). Field names must not be empty.");
  }

  this.t_ = new N(t);
},
    du =
/** @class */
function (e) {
  /**
   * Creates a FieldPath from the provided field names. If more than one field
   * name is provided, the path will point to a nested field in a document.
   *
   * @param fieldNames A list of field names.
   */
  function n() {
    for (var t = [], n = 0; n < arguments.length; n++) {
      t[n] = arguments[n];
    }

    return e.call(this, t) || this;
  }

  return t.__extends(n, e), n.documentId = function () {
    /**
     * Internal Note: The backend doesn't technically support querying by
     * document ID. Instead it queries by the entire document name (full path
     * included), but in the cases we currently support documentId(), the net
     * effect is the same.
     */
    return new n(N.v().R());
  }, n.prototype.isEqual = function (t) {
    if (!(t instanceof n)) throw G("isEqual", "FieldPath", 1, t);
    return this.t_.isEqual(t.t_);
  }, n;
}(pu),
    vu = new RegExp("[~\\*/\\[\\]]"),
    yu =
/**
     * @param _methodName The public API endpoint that returns this class.
     */
function yu(t) {
  this.e_ = t;
},
    gu =
/** @class */
function (e) {
  function n() {
    return null !== e && e.apply(this, arguments) || this;
  }

  return t.__extends(n, e), n.prototype.n_ = function (t) {
    if (2
    /* MergeSet */
    !== t.s_) throw 1
    /* Update */
    === t.s_ ? t.i_(this.e_ + "() can only appear at the top level of your update data") : t.i_(this.e_ + "() cannot be used with set() unless you pass {merge:true}"); // No transform to add for a delete, but we need to add it to our
    // fieldMask so it gets deleted.

    return t.We.push(t.path), null;
  }, n.prototype.isEqual = function (t) {
    return t instanceof n;
  }, n;
}(yu);
/**
 * Provides all components needed for Firestore with in-memory persistence.
 * Uses EagerGC garbage collection.
 */

/**
 * Creates a child context for parsing SerializableFieldValues.
 *
 * This is different than calling `ParseContext.contextWith` because it keeps
 * the fieldTransforms and fieldMask separate.
 *
 * The created context has its `dataSource` set to `UserDataSource.Argument`.
 * Although these values are used with writes, any elements in these FieldValues
 * are not considered writes since they cannot contain any FieldValue sentinels,
 * etc.
 *
 * @param fieldValue The sentinel FieldValue for which to create a child
 *     context.
 * @param context The parent context.
 * @param arrayElement Whether or not the FieldValue has an array.
 */


function mu(t, e, n) {
  return new Lu({
    s_: 3
    /* Argument */
    ,
    r_: e.settings.r_,
    methodName: t.e_,
    o_: n
  }, e.U, e.serializer, e.ignoreUndefinedProperties);
}

var wu =
/** @class */
function (e) {
  function n() {
    return null !== e && e.apply(this, arguments) || this;
  }

  return t.__extends(n, e), n.prototype.n_ = function (t) {
    return new cn(t.path, new Ze());
  }, n.prototype.isEqual = function (t) {
    return t instanceof n;
  }, n;
}(yu),
    _u =
/** @class */
function (e) {
  function n(t, n) {
    var r = this;
    return (r = e.call(this, t) || this).a_ = n, r;
  }

  return t.__extends(n, e), n.prototype.n_ = function (t) {
    var e = mu(this, t,
    /*array=*/
    !0),
        n = this.a_.map(function (t) {
      return Uu(t, e);
    }),
        r = new tn(n);
    return new cn(t.path, r);
  }, n.prototype.isEqual = function (t) {
    // TODO(mrschmidt): Implement isEquals
    return this === t;
  }, n;
}(yu),
    bu =
/** @class */
function (e) {
  function n(t, n) {
    var r = this;
    return (r = e.call(this, t) || this).a_ = n, r;
  }

  return t.__extends(n, e), n.prototype.n_ = function (t) {
    var e = mu(this, t,
    /*array=*/
    !0),
        n = this.a_.map(function (t) {
      return Uu(t, e);
    }),
        r = new nn(n);
    return new cn(t.path, r);
  }, n.prototype.isEqual = function (t) {
    // TODO(mrschmidt): Implement isEquals
    return this === t;
  }, n;
}(yu),
    Iu =
/** @class */
function (e) {
  function n(t, n) {
    var r = this;
    return (r = e.call(this, t) || this).c_ = n, r;
  }

  return t.__extends(n, e), n.prototype.n_ = function (t) {
    var e = new on(t.serializer, we(t.serializer, this.c_));
    return new cn(t.path, e);
  }, n.prototype.isEqual = function (t) {
    // TODO(mrschmidt): Implement isEquals
    return this === t;
  }, n;
}(yu),
    Eu =
/** @class */
function () {
  /**
   * Creates a new immutable `GeoPoint` object with the provided latitude and
   * longitude values.
   * @param latitude The latitude as number between -90 and 90.
   * @param longitude The longitude as number between -180 and 180.
   */
  function t(t, e) {
    if (D("GeoPoint", arguments, 2), k("GeoPoint", "number", 1, t), k("GeoPoint", "number", 2, e), !isFinite(t) || t < -90 || t > 90) throw new c(a.INVALID_ARGUMENT, "Latitude must be a number between -90 and 90, but was: " + t);
    if (!isFinite(e) || e < -180 || e > 180) throw new c(a.INVALID_ARGUMENT, "Longitude must be a number between -180 and 180, but was: " + e);
    this.u_ = t, this.h_ = e;
  }

  return Object.defineProperty(t.prototype, "latitude", {
    /**
     * The latitude of this `GeoPoint` instance.
     */
    get: function get() {
      return this.u_;
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(t.prototype, "longitude", {
    /**
     * The longitude of this `GeoPoint` instance.
     */
    get: function get() {
      return this.h_;
    },
    enumerable: !1,
    configurable: !0
  }),
  /**
   * Returns true if this `GeoPoint` is equal to the provided one.
   *
   * @param other The `GeoPoint` to compare against.
   * @return true if this `GeoPoint` is equal to the provided one.
   */
  t.prototype.isEqual = function (t) {
    return this.u_ === t.u_ && this.h_ === t.h_;
  }, t.prototype.toJSON = function () {
    return {
      latitude: this.u_,
      longitude: this.h_
    };
  },
  /**
   * Actually private to JS consumers of our API, so this function is prefixed
   * with an underscore.
   */
  t.prototype.Y = function (t) {
    return H(this.u_, t.u_) || H(this.h_, t.h_);
  }, t;
}(),
    Tu = function Tu(t) {
  this.l_ = t;
},
    Nu = /^__.*__$/,
    Au = function Au(t, e, n) {
  this.__ = t, this.f_ = e, this.d_ = n;
},
    Su =
/** @class */
function () {
  function t(t, e, n) {
    this.data = t, this.We = e, this.fieldTransforms = n;
  }

  return t.prototype.w_ = function (t, e) {
    var n = [];
    return null !== this.We ? n.push(new _n(t, this.data, this.We, e)) : n.push(new wn(t, this.data, e)), this.fieldTransforms.length > 0 && n.push(new In(t, this.fieldTransforms)), n;
  }, t;
}(),
    Du =
/** @class */
function () {
  function t(t, e, n) {
    this.data = t, this.We = e, this.fieldTransforms = n;
  }

  return t.prototype.w_ = function (t, e) {
    var n = [new _n(t, this.data, this.We, e)];
    return this.fieldTransforms.length > 0 && n.push(new In(t, this.fieldTransforms)), n;
  }, t;
}();

function xu(t) {
  switch (t) {
    case 0
    /* Set */
    : // fall through

    case 2
    /* MergeSet */
    : // fall through

    case 1
    /* Update */
    :
      return !0;

    case 3
    /* Argument */
    :
    case 4
    /* ArrayArgument */
    :
      return !1;

    default:
      throw y();
  }
}
/** A "context" object passed around while parsing user data. */


var Lu =
/** @class */
function () {
  /**
   * Initializes a ParseContext with the given source and path.
   *
   * @param settings The settings for the parser.
   * @param databaseId The database ID of the Firestore instance.
   * @param serializer The serializer to use to generate the Value proto.
   * @param ignoreUndefinedProperties Whether to ignore undefined properties
   * rather than throw.
   * @param fieldTransforms A mutable list of field transforms encountered while
   *     parsing the data.
   * @param fieldMask A mutable list of field paths encountered while parsing
   *     the data.
   *
   * TODO(b/34871131): We don't support array paths right now, so path can be
   * null to indicate the context represents any location within an array (in
   * which case certain features will not work and errors will be somewhat
   * compromised).
   */
  function t(t, e, n, r, i, o) {
    this.settings = t, this.U = e, this.serializer = n, this.ignoreUndefinedProperties = r, // Minor hack: If fieldTransforms is undefined, we assume this is an
    // external call and we need to validate the entire path.
    void 0 === i && this.m_(), this.fieldTransforms = i || [], this.We = o || [];
  }

  return Object.defineProperty(t.prototype, "path", {
    get: function get() {
      return this.settings.path;
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(t.prototype, "s_", {
    get: function get() {
      return this.settings.s_;
    },
    enumerable: !1,
    configurable: !0
  }),
  /** Returns a new context with the specified settings overwritten. */
  t.prototype.T_ = function (e) {
    return new t(Object.assign(Object.assign({}, this.settings), e), this.U, this.serializer, this.ignoreUndefinedProperties, this.fieldTransforms, this.We);
  }, t.prototype.E_ = function (t) {
    var e,
        n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),
        r = this.T_({
      path: n,
      o_: !1
    });
    return r.I_(t), r;
  }, t.prototype.A_ = function (t) {
    var e,
        n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),
        r = this.T_({
      path: n,
      o_: !1
    });
    return r.m_(), r;
  }, t.prototype.R_ = function (t) {
    // TODO(b/34871131): We don't support array paths right now; so make path
    // undefined.
    return this.T_({
      path: void 0,
      o_: !0
    });
  }, t.prototype.i_ = function (t) {
    return Gu(t, this.settings.methodName, this.settings.g_ || !1, this.path, this.settings.r_);
  },
  /** Returns 'true' if 'fieldPath' was traversed when creating this context. */
  t.prototype.contains = function (t) {
    return void 0 !== this.We.find(function (e) {
      return t.T(e);
    }) || void 0 !== this.fieldTransforms.find(function (e) {
      return t.T(e.field);
    });
  }, t.prototype.m_ = function () {
    // TODO(b/34871131): Remove null check once we have proper paths for fields
    // within arrays.
    if (this.path) for (var t = 0; t < this.path.length; t++) {
      this.I_(this.path.get(t));
    }
  }, t.prototype.I_ = function (t) {
    if (0 === t.length) throw this.i_("Document fields must not be empty");
    if (xu(this.s_) && Nu.test(t)) throw this.i_('Document fields cannot begin and end with "__"');
  }, t;
}(),
    ku =
/** @class */
function () {
  function t(t, e, n) {
    this.U = t, this.ignoreUndefinedProperties = e, this.serializer = n || uu(t);
  }

  return t.prototype.P_ = function (t, e, n, r) {
    return void 0 === r && (r = !1), new Lu({
      s_: t,
      methodName: e,
      r_: n,
      path: N.P(),
      o_: !1,
      g_: r
    }, this.U, this.serializer, this.ignoreUndefinedProperties);
  }, t;
}();
/**
 * Helper for parsing raw user input (provided via the API) into internal model
 * classes.
 */

/** Parse document data from a set() call. */


function Ru(t, e, n, r, i, o) {
  void 0 === o && (o = {});
  var s = t.P_(o.merge || o.mergeFields ? 2
  /* MergeSet */
  : 0
  /* Set */
  , e, n, i);
  Mu("Data must be an object, but it was:", s, r);
  var u,
      h,
      f = Cu(r, s);
  if (o.merge) u = new an(s.We), h = s.fieldTransforms;else if (o.mergeFields) {
    for (var l = [], p = 0, d = o.mergeFields; p < d.length; p++) {
      var v = d[p],
          g = void 0;
      if (v instanceof pu) g = v.t_;else {
        if ("string" != typeof v) throw y();
        g = ju(e, v, n);
      }
      if (!s.contains(g)) throw new c(a.INVALID_ARGUMENT, "Field '" + g + "' is specified in your field mask but missing from your input data.");
      zu(l, g) || l.push(g);
    }

    u = new an(l), h = s.fieldTransforms.filter(function (t) {
      return u.Ye(t.field);
    });
  } else u = null, h = s.fieldTransforms;
  return new Su(new Sn(f), u, h);
}
/** Parse update data from an update() call. */


function Ou(t, e, n, r) {
  var i = t.P_(1
  /* Update */
  , e, n);
  Mu("Data must be an object, but it was:", i, r);
  var o = [],
      s = new Dn();

  _(r, function (t, r) {
    var u = ju(e, t, n),
        a = i.A_(u);
    if (r instanceof gu || r instanceof Tu && r.l_ instanceof gu) // Add it to the field mask, but don't add anything to updateData.
      o.push(u);else {
      var c = Uu(r, a);
      null != c && (o.push(u), s.set(u, c));
    }
  });

  var u = new an(o);
  return new Du(s.Xe(), u, i.fieldTransforms);
}
/** Parse update data from a list of field/value arguments. */


function Pu(t, e, n, r, i, o) {
  var s = t.P_(1
  /* Update */
  , e, n),
      u = [qu(e, r, n)],
      h = [i];
  if (o.length % 2 != 0) throw new c(a.INVALID_ARGUMENT, "Function " + e + "() needs to be called with an even number of arguments that alternate between field names and values.");

  for (var f = 0; f < o.length; f += 2) {
    u.push(qu(e, o[f])), h.push(o[f + 1]);
  } // We iterate in reverse order to pick the last value for a field if the
  // user specified the field multiple times.


  for (var l = [], p = new Dn(), d = u.length - 1; d >= 0; --d) {
    if (!zu(l, u[d])) {
      var v = u[d],
          y = h[d],
          g = s.A_(v);
      if (y instanceof gu || y instanceof Tu && y.l_ instanceof gu) // Add it to the field mask, but don't add anything to updateData.
        l.push(v);else {
        var m = Uu(y, g);
        null != m && (l.push(v), p.set(v, m));
      }
    }
  }

  var w = new an(l);
  return new Du(p.Xe(), w, s.fieldTransforms);
}
/**
 * Parse a "query value" (e.g. value in a where filter or a value in a cursor
 * bound).
 *
 * @param allowArrays Whether the query value is an array that may directly
 * contain additional arrays (e.g. the operand of an `in` query).
 */


function Vu(t, e, n, r) {
  return void 0 === r && (r = !1), Uu(n, t.P_(r ? 4
  /* ArrayArgument */
  : 3
  /* Argument */
  , e));
}
/**
 * Parses user data to Protobuf Values.
 *
 * @param input Data to be parsed.
 * @param context A context object representing the current path being parsed,
 * the source of the data being parsed, etc.
 * @return The parsed value, or null if the value was a FieldValue sentinel
 * that should not be included in the resulting parsed data.
 */


function Uu(t, e) {
  if ( // Unwrap the API type from the Compat SDK. This will return the API type
  // from firestore-exp.
  t instanceof Tu && (t = t.l_), Fu(t)) return Mu("Unsupported field value:", e, t), Cu(t, e);
  if (t instanceof yu) // FieldValues usually parse into transforms (except FieldValue.delete())
    // in which case we do not want to include this field in our parsed data
    // (as doing so will overwrite the field directly prior to the transform
    // trying to transform it). So we don't add this location to
    // context.fieldMask and we return null as our parsing result.

    /**
     * "Parses" the provided FieldValueImpl, adding any necessary transforms to
     * context.fieldTransforms.
     */
    return function (t, e) {
      // Sentinels are only supported with writes, and not within arrays.
      if (!xu(e.s_)) throw e.i_(t.e_ + "() can only be used with update() and set()");
      if (!e.path) throw e.i_(t.e_ + "() is not currently supported inside arrays");
      var n = t.n_(e);
      n && e.fieldTransforms.push(n);
    }(t, e), null;

  if ( // If context.path is null we are inside an array and we don't support
  // field mask paths more granular than the top-level array.
  e.path && e.We.push(e.path), t instanceof Array) {
    // TODO(b/34871131): Include the path containing the array in the error
    // message.
    // In the case of IN queries, the parsed data is an array (representing
    // the set of values to be included for the IN query) that may directly
    // contain additional arrays (each representing an individual field
    // value), so we disable this validation.
    if (e.settings.o_ && 4
    /* ArrayArgument */
    !== e.s_) throw e.i_("Nested arrays are not supported");
    return function (t, e) {
      for (var n = [], r = 0, i = 0, o = t; i < o.length; i++) {
        var s = Uu(o[i], e.R_(r));
        null == s && ( // Just include nulls in the array for fields being replaced with a
        // sentinel.
        s = {
          nullValue: "NULL_VALUE"
        }), n.push(s), r++;
      }

      return {
        arrayValue: {
          values: n
        }
      };
    }(t, e);
  }

  return function (t, e) {
    if (null === t) return {
      nullValue: "NULL_VALUE"
    };
    if ("number" == typeof t) return we(e.serializer, t);
    if ("boolean" == typeof t) return {
      booleanValue: t
    };
    if ("string" == typeof t) return {
      stringValue: t
    };

    if (t instanceof Date) {
      var n = ot.fromDate(t);
      return {
        timestampValue: _e(e.serializer, n)
      };
    }

    if (t instanceof ot) {
      // Firestore backend truncates precision down to microseconds. To ensure
      // offline mode works the same with regards to truncation, perform the
      // truncation immediately without waiting for the backend to do that.
      var r = new ot(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));
      return {
        timestampValue: _e(e.serializer, r)
      };
    }

    if (t instanceof Eu) return {
      geoPointValue: {
        latitude: t.latitude,
        longitude: t.longitude
      }
    };
    if (t instanceof J) return {
      bytesValue: be(e.serializer, t.q)
    };

    if (t instanceof Au) {
      var i = e.U,
          o = t.__;
      if (!o.isEqual(i)) throw e.i_("Document reference is for database " + o.projectId + "/" + o.database + " but should be for database " + i.projectId + "/" + i.database);
      return {
        referenceValue: Te(t.__ || e.U, t.f_.path)
      };
    }

    if (void 0 === t && e.ignoreUndefinedProperties) return null;
    throw e.i_("Unsupported field value: " + M(t));
  }(t, e);
}

function Cu(t, e) {
  var n = {};
  return b(t) ? // If we encounter an empty object, we explicitly add it to the update
  // mask to ensure that the server creates a map entry.
  e.path && e.path.length > 0 && e.We.push(e.path) : _(t, function (t, r) {
    var i = Uu(r, e.E_(t));
    null != i && (n[t] = i);
  }), {
    mapValue: {
      fields: n
    }
  };
}

function Fu(t) {
  return !("object" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof ot || t instanceof Eu || t instanceof J || t instanceof Au || t instanceof yu);
}

function Mu(t, e, n) {
  if (!Fu(n) || !F(n)) {
    var r = M(n);
    throw "an object" === r ? e.i_(t + " a custom object") : e.i_(t + " " + r);
  }
}
/**
 * Helper that calls fromDotSeparatedString() but wraps any error thrown.
 */


function qu(t, e, n) {
  if (e instanceof pu) return e.t_;
  if ("string" == typeof e) return ju(t, e);
  throw Gu("Field path arguments must be of type string or FieldPath.", t,
  /* hasConverter= */
  !1,
  /* path= */
  void 0, n);
}
/**
 * Wraps fromDotSeparatedString with an error message about the method that
 * was thrown.
 * @param methodName The publicly visible method name
 * @param path The dot-separated string form of a field path which will be split
 * on dots.
 * @param targetDoc The document against which the field path will be evaluated.
 */


function ju(e, n, r) {
  try {
    return function (e) {
      if (e.search(vu) >= 0) throw new c(a.INVALID_ARGUMENT, "Invalid field path (" + e + "). Paths must not contain '~', '*', '/', '[', or ']'");

      try {
        return new (du.bind.apply(du, t.__spreadArrays([void 0], e.split("."))))();
      } catch (t) {
        throw new c(a.INVALID_ARGUMENT, "Invalid field path (" + e + "). Paths must not be empty, begin with '.', end with '.', or contain '..'");
      }
    }(n).t_;
  } catch (n) {
    throw Gu((i = n) instanceof Error ? i.message : i.toString(), e,
    /* hasConverter= */
    !1,
    /* path= */
    void 0, r);
  }
  /**
  * Extracts the message from a caught exception, which should be an Error object
  * though JS doesn't guarantee that.
  */


  var i;
  /** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */
}

function Gu(t, e, n, r, i) {
  var o = r && !r.m(),
      s = void 0 !== i,
      u = "Function " + e + "() called with invalid data";
  n && (u += " (via `toFirestore()`)");
  var h = "";
  return (o || s) && (h += " (found", o && (h += " in field " + r), s && (h += " in document " + i), h += ")"), new c(a.INVALID_ARGUMENT, (u += ". ") + t + h);
}

function zu(t, e) {
  return t.some(function (t) {
    return t.isEqual(e);
  });
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Internal transaction object responsible for accumulating the mutations to
 * perform and the base versions for any documents read.
 */


var Bu =
/** @class */
function () {
  function e(t) {
    this.Ku = t, // The version of each document that was read during this transaction.
    this.y_ = new Map(), this.mutations = [], this.V_ = !1,
    /**
         * A deferred usage error that occurred previously in this transaction that
         * will cause the transaction to fail once it actually commits.
         */
    this.p_ = null,
    /**
         * Set of documents that have been written in the transaction.
         *
         * When there's more than one write to the same key in a transaction, any
         * writes after the first are handled differently.
         */
    this.b_ = new Set();
  }

  return e.prototype.v_ = function (e) {
    return t.__awaiter(this, void 0, void 0, function () {
      var n,
          r = this;
      return t.__generator(this, function (i) {
        switch (i.label) {
          case 0:
            if (this.S_(), this.mutations.length > 0) throw new c(a.INVALID_ARGUMENT, "Firestore transactions require all reads to be executed before all writes.");
            return [4
            /*yield*/
            , function (e, n) {
              return t.__awaiter(this, void 0, void 0, function () {
                var r, i, o, s, u, a;
                return t.__generator(this, function (t) {
                  switch (t.label) {
                    case 0:
                      return r = m(e), i = Le(r.serializer) + "/documents", o = {
                        documents: n.map(function (t) {
                          return Ae(r.serializer, t);
                        })
                      }, [4
                      /*yield*/
                      , r.ku("BatchGetDocuments", i, o)];

                    case 1:
                      return s = t.sent(), u = new Map(), s.forEach(function (t) {
                        var e = function (t, e) {
                          return "found" in e ? function (t, e) {
                            g(!!e.found), e.found.name, e.found.updateTime;
                            var n = Se(t, e.found.name),
                                r = Ee(e.found.updateTime),
                                i = new Sn({
                              mapValue: {
                                fields: e.found.fields
                              }
                            });
                            return new kn(n, r, i, {});
                          }(t, e) : "missing" in e ? function (t, e) {
                            g(!!e.missing), g(!!e.readTime);
                            var n = Se(t, e.missing),
                                r = Ee(e.readTime);
                            return new Rn(n, r);
                          }(t, e) : y();
                        }(r.serializer, t);

                        u.set(e.key.toString(), e);
                      }), a = [], [2
                      /*return*/
                      , (n.forEach(function (t) {
                        var e = u.get(t.toString());
                        g(!!e), a.push(e);
                      }), a)];
                  }
                });
              });
            }(this.Ku, e)];

          case 1:
            return [2
            /*return*/
            , ((n = i.sent()).forEach(function (t) {
              t instanceof Rn || t instanceof kn ? r.D_(t) : y();
            }), n)];
        }
      });
    });
  }, e.prototype.set = function (t, e) {
    this.write(e.w_(t, this.Ge(t))), this.b_.add(t.toString());
  }, e.prototype.update = function (t, e) {
    try {
      this.write(e.w_(t, this.C_(t)));
    } catch (t) {
      this.p_ = t;
    }

    this.b_.add(t.toString());
  }, e.prototype.delete = function (t) {
    this.write([new Nn(t, this.Ge(t))]), this.b_.add(t.toString());
  }, e.prototype.commit = function () {
    return t.__awaiter(this, void 0, void 0, function () {
      var e,
          n = this;
      return t.__generator(this, function (r) {
        switch (r.label) {
          case 0:
            if (this.S_(), this.p_) throw this.p_;
            return e = this.y_, // For each mutation, note that the doc was written.
            this.mutations.forEach(function (t) {
              e.delete(t.key.toString());
            }), // For each document that was read but not written to, we want to perform
            // a `verify` operation.
            e.forEach(function (t, e) {
              var r = A.D(e);
              n.mutations.push(new An(r, n.Ge(r)));
            }), [4
            /*yield*/
            , function (e, n) {
              return t.__awaiter(this, void 0, void 0, function () {
                var r, i, o;
                return t.__generator(this, function (t) {
                  switch (t.label) {
                    case 0:
                      return r = m(e), i = Le(r.serializer) + "/documents", o = {
                        writes: n.map(function (t) {
                          return Oe(r.serializer, t);
                        })
                      }, [4
                      /*yield*/
                      , r.$u("Commit", i, o)];

                    case 1:
                      return t.sent(), [2
                      /*return*/
                      ];
                  }
                });
              });
            }(this.Ku, this.mutations)];

          case 1:
            // For each mutation, note that the doc was written.
            return r.sent(), this.V_ = !0, [2
            /*return*/
            ];
        }
      });
    });
  }, e.prototype.D_ = function (t) {
    var e;
    if (t instanceof kn) e = t.version;else {
      if (!(t instanceof Rn)) throw y(); // For deleted docs, we must use baseVersion 0 when we overwrite them.

      e = st.min();
    }
    var n = this.y_.get(t.key.toString());

    if (n) {
      if (!e.isEqual(n)) // This transaction will fail no matter what.
        throw new c(a.ABORTED, "Document version changed between two reads.");
    } else this.y_.set(t.key.toString(), e);
  },
  /**
   * Returns the version of this document when it was read in this transaction,
   * as a precondition, or no precondition if it was not read.
   */
  e.prototype.Ge = function (t) {
    var e = this.y_.get(t.toString());
    return !this.b_.has(t.toString()) && e ? fn.updateTime(e) : fn.ze();
  },
  /**
   * Returns the precondition for a document if the operation is an update.
   */
  e.prototype.C_ = function (t) {
    var e = this.y_.get(t.toString()); // The first time a document is written, we want to take into account the
    // read time and existence

    if (!this.b_.has(t.toString()) && e) {
      if (e.isEqual(st.min())) // The document doesn't exist, so fail the transaction.
        // This has to be validated locally because you can't send a
        // precondition that a document does not exist without changing the
        // semantics of the backend write to be an insert. This is the reverse
        // of what we want, since we want to assert that the document doesn't
        // exist but then send the update and have it fail. Since we can't
        // express that to the backend, we have to validate locally.
        // Note: this can change once we can send separate verify writes in the
        // transaction.
        throw new c(a.INVALID_ARGUMENT, "Can't update a document that doesn't exist."); // Document exists, base precondition on document update time.

      return fn.updateTime(e);
    } // Document was not read, so we just use the preconditions for a blind
    // update.


    return fn.exists(!0);
  }, e.prototype.write = function (t) {
    this.S_(), this.mutations = this.mutations.concat(t);
  }, e.prototype.S_ = function () {}, e;
}(),
    Wu =
/** @class */
function () {
  function e(t, e, n, r) {
    this.cs = t, this.Ku = e, this.updateFunction = n, this.ls = r, this.N_ = 5, this.ys = new vr(this.cs, "transaction_retry"
    /* TransactionRetry */
    );
  }

  return e.prototype.run = function () {
    this.F_();
  }, e.prototype.F_ = function () {
    var e = this;
    this.ys.gn(function () {
      return t.__awaiter(e, void 0, void 0, function () {
        var e,
            n,
            r = this;
        return t.__generator(this, function (t) {
          return e = new Bu(this.Ku), (n = this.x_(e)) && n.then(function (t) {
            r.cs.ws(function () {
              return e.commit().then(function () {
                r.ls.resolve(t);
              }).catch(function (t) {
                r.k_(t);
              });
            });
          }).catch(function (t) {
            r.k_(t);
          }), [2
          /*return*/
          ];
        });
      });
    });
  }, e.prototype.x_ = function (t) {
    try {
      var e = this.updateFunction(t);
      return !ut(e) && e.catch && e.then ? e : (this.ls.reject(Error("Transaction callback must return a Promise")), null);
    } catch (t) {
      // Do not retry errors thrown by user provided updateFunction.
      return this.ls.reject(t), null;
    }
  }, e.prototype.k_ = function (t) {
    var e = this;
    this.N_ > 0 && this.M_(t) ? (this.N_ -= 1, this.cs.ws(function () {
      return e.F_(), Promise.resolve();
    })) : this.ls.reject(t);
  }, e.prototype.M_ = function (t) {
    if ("FirebaseError" === t.name) {
      // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and
      // non-matching document versions with ABORTED. These errors should be retried.
      var e = t.code;
      return "aborted" === e || "failed-precondition" === e || !wt(e);
    }

    return !1;
  }, e;
}(),
    Ku =
/** @class */
function () {
  function e(t,
  /**
   * Asynchronous queue responsible for all of our internal processing. When
   * we get incoming work from the user (via public API) or the network
   * (incoming GRPC messages), we should always schedule onto this queue.
   * This ensures all of our work is properly serialized (e.g. we don't
   * start processing a new operation while the previous one is waiting for
   * an async I/O to complete).
   */
  e) {
    this.credentials = t, this.cs = e, this.clientId = Q.k(), // We defer our initialization until we get the current user from
    // setChangeListener(). We block the async queue until we got the initial
    // user and the initialization is completed. This will prevent any scheduled
    // work from happening before initialization is completed.
    // If initializationDone resolved then the FirestoreClient is in a usable
    // state.
    this.O_ = new dr();
  }

  return e.prototype.start = function (e, n, r, i) {
    var o = this;
    this.L_(), this.bl = e; // If usePersistence is true, certain classes of errors while starting are
    // recoverable but only by falling back to persistence disabled.
    // If there's an error in the first case but not in recovery we cannot
    // reject the promise blocking the async queue because this will cause the
    // async queue to panic.

    var s = new dr(),
        u = !1; // Return only the result of enabling persistence. Note that this does not
    // need to await the completion of initializationDone because the result of
    // this method should not reflect any other kind of failure to start.

    return this.credentials.Hc(function (e) {
      if (!u) return u = !0, l("FirestoreClient", "Initializing. user=", e.uid), o.B_(n, r, i, e, s).then(o.O_.resolve, o.O_.reject);
      o.cs.Cs(function () {
        return function (e, n) {
          return t.__awaiter(this, void 0, void 0, function () {
            var r, i;
            return t.__generator(this, function (t) {
              switch (t.label) {
                case 0:
                  return (r = m(e)).cs.xs(), l("RemoteStore", "RemoteStore received new credentials"), i = Xo(r), // Tear down and re-create our network streams. This will ensure we get a
                  // fresh auth token for the new user and re-fill the write pipeline with
                  // new mutations from the LocalStore (since mutations are per-user).
                  r.Yu.add(3
                  /* CredentialChange */
                  ), [4
                  /*yield*/
                  , zo(r)];

                case 1:
                  return t.sent(), i && // Don't set the network status to Unknown if we are offline.
                  r.th.set("Unknown"
                  /* Unknown */
                  ), [4
                  /*yield*/
                  , r.Gu.Jl(n)];

                case 2:
                  return t.sent(), r.Yu.delete(3
                  /* CredentialChange */
                  ), [4
                  /*yield*/
                  , Go(r)];

                case 3:
                  // Tear down and re-create our network streams. This will ensure we get a
                  // fresh auth token for the new user and re-fill the write pipeline with
                  // new mutations from the LocalStore (since mutations are per-user).
                  return t.sent(), [2
                  /*return*/
                  ];
              }
            });
          });
        }(o.ph, e);
      });
    }), // Block the async queue until initialization is done
    this.cs.ws(function () {
      return o.O_.promise;
    }), s.promise;
  },
  /** Enables the network connection and requeues all pending operations. */
  e.prototype.enableNetwork = function () {
    var t = this;
    return this.L_(), this.cs.enqueue(function () {
      return t.persistence.tc(!0), function (t) {
        var e = m(t);
        return e.Yu.delete(0
        /* UserDisabled */
        ), Go(e);
      }(t.ph);
    });
  },
  /**
   * Initializes persistent storage, attempting to use IndexedDB if
   * usePersistence is true or memory-only if false.
   *
   * If IndexedDB fails because it's already open in another tab or because the
   * platform can't possibly support our implementation then this method rejects
   * the persistenceResult and falls back on memory-only persistence.
   *
   * @param offlineComponentProvider Provider that returns all components
   * required for memory-only or IndexedDB persistence.
   * @param onlineComponentProvider Provider that returns all components
   * required for online support.
   * @param persistenceSettings Settings object to configure offline persistence
   * @param user The initial user
   * @param persistenceResult A deferred result indicating the user-visible
   *     result of enabling offline persistence. This method will reject this if
   *     IndexedDB fails to start for any reason. If usePersistence is false
   *     this is unconditionally resolved.
   * @returns a Promise indicating whether or not initialization should
   *     continue, i.e. that one of the persistence implementations actually
   *     succeeded.
   */
  e.prototype.B_ = function (e, n, r, i, o) {
    return t.__awaiter(this, void 0, void 0, function () {
      var s,
          u,
          a = this;
      return t.__generator(this, function (c) {
        switch (c.label) {
          case 0:
            return c.trys.push([0, 3,, 4]), s = {
              cs: this.cs,
              bl: this.bl,
              clientId: this.clientId,
              credentials: this.credentials,
              Wl: i,
              Dh: 100,
              persistenceSettings: r
            }, [4
            /*yield*/
            , e.initialize(s)];

          case 1:
            return c.sent(), [4
            /*yield*/
            , n.initialize(e, s)];

          case 2:
            return c.sent(), this.persistence = e.persistence, this.Sh = e.Sh, this.ju = e.ju, this.ql = e.ql, this.Ku = n.Ku, this.ph = n.ph, this.fi = n.fi, this.q_ = n.bh, this.q_.Us = _s.bind(null, this.fi), this.q_.js = Is.bind(null, this.fi), // When a user calls clearPersistence() in one client, all other clients
            // need to be terminated to allow the delete to succeed.
            this.persistence.Za(function () {
              return t.__awaiter(a, void 0, void 0, function () {
                return t.__generator(this, function (t) {
                  switch (t.label) {
                    case 0:
                      return [4
                      /*yield*/
                      , this.terminate()];

                    case 1:
                      return t.sent(), [2
                      /*return*/
                      ];
                  }
                });
              });
            }), o.resolve(), [3
            /*break*/
            , 4];

          case 3:
            // An unknown failure on the first stage shuts everything down.
            if (u = c.sent(), // Regardless of whether or not the retry succeeds, from an user
            // perspective, offline persistence has failed.
            o.reject(u), !this.U_(u)) throw u;
            return [2
            /*return*/
            , (console.warn("Error enabling offline persistence. Falling back to persistence disabled: " + u), this.B_(new cu(), new fu(), {
              jl: !1
            }, i, o))];

          case 4:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Decides whether the provided error allows us to gracefully disable
   * persistence (as opposed to crashing the client).
   */
  e.prototype.U_ = function (t) {
    return "FirebaseError" === t.name ? t.code === a.FAILED_PRECONDITION || t.code === a.UNIMPLEMENTED : !("undefined" != typeof DOMException && t instanceof DOMException) || // When the browser is out of quota we could get either quota exceeded
    // or an aborted error depending on whether the error happened during
    // schema migration.
    22 === t.code || 20 === t.code || // Firefox Private Browsing mode disables IndexedDb and returns
    // INVALID_STATE for any usage.
    11 === t.code;
  },
  /**
   * Checks that the client has not been terminated. Ensures that other methods on
   * this class cannot be called after the client is terminated.
   */
  e.prototype.L_ = function () {
    if (this.cs.ps) throw new c(a.FAILED_PRECONDITION, "The client has already been terminated.");
  },
  /** Disables the network connection. Pending operations will not complete. */
  e.prototype.disableNetwork = function () {
    var e = this;
    return this.L_(), this.cs.enqueue(function () {
      return e.persistence.tc(!1), function (e) {
        return t.__awaiter(this, void 0, void 0, function () {
          var n;
          return t.__generator(this, function (t) {
            switch (t.label) {
              case 0:
                return (n = m(e)).Yu.add(0
                /* UserDisabled */
                ), [4
                /*yield*/
                , zo(n)];

              case 1:
                return t.sent(), // Set the OnlineState to Offline so get()s return from cache, etc.
                n.th.set("Offline"
                /* Offline */
                ), [2
                /*return*/
                ];
            }
          });
        });
      }(e.ph);
    });
  }, e.prototype.terminate = function () {
    var e = this;
    this.cs.Ds();
    var n = new dr();
    return this.cs.bs(function () {
      return t.__awaiter(e, void 0, void 0, function () {
        var e, r;
        return t.__generator(this, function (t) {
          switch (t.label) {
            case 0:
              return t.trys.push([0, 4,, 5]), // PORTING NOTE: LocalStore does not need an explicit shutdown on web.
              this.ql && this.ql.stop(), [4
              /*yield*/
              , Bo(this.ph)];

            case 1:
              return t.sent(), [4
              /*yield*/
              , this.Sh.Di()];

            case 2:
              return t.sent(), [4
              /*yield*/
              , this.persistence.Di()];

            case 3:
              // PORTING NOTE: LocalStore does not need an explicit shutdown on web.
              return t.sent(), // `removeChangeListener` must be called after shutting down the
              // RemoteStore as it will prevent the RemoteStore from retrieving
              // auth tokens.
              this.credentials.Yc(), n.resolve(), [3
              /*break*/
              , 5];

            case 4:
              return e = t.sent(), r = Lr(e, "Failed to shutdown persistence"), n.reject(r), [3
              /*break*/
              , 5];

            case 5:
              return [2
              /*return*/
              ];
          }
        });
      });
    }), n.promise;
  },
  /**
   * Returns a Promise that resolves when all writes that were pending at the time this
   * method was called received server acknowledgement. An acknowledgement can be either acceptance
   * or rejection.
   */
  e.prototype.waitForPendingWrites = function () {
    var e = this;
    this.L_();
    var n = new dr();
    return this.cs.ws(function () {
      return function (e, n) {
        return t.__awaiter(this, void 0, void 0, function () {
          var r, i, o, s, u;
          return t.__generator(this, function (t) {
            switch (t.label) {
              case 0:
                Xo((r = m(e)).ph) || l("SyncEngine", "The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled."), t.label = 1;

              case 1:
                return t.trys.push([1, 3,, 4]), [4
                /*yield*/
                , function (t) {
                  var e = m(t);
                  return e.persistence.runTransaction("Get highest unacknowledged batch id", "readonly", function (t) {
                    return e.Sr.qo(t);
                  });
                }(r.ju)];

              case 2:
                return -1 === (i = t.sent()) ? [2
                /*return*/
                , void n.resolve()] : ((o = r.Lh.get(i) || []).push(n), r.Lh.set(i, o), [3
                /*break*/
                , 4]);

              case 3:
                return s = t.sent(), u = Lr(s, "Initialization of waitForPendingWrites() operation failed"), n.reject(u), [3
                /*break*/
                , 4];

              case 4:
                return [2
                /*return*/
                ];
            }
          });
        });
      }(e.fi, n);
    }), n.promise;
  }, e.prototype.listen = function (t, e, n) {
    var r = this;
    this.L_();
    var i = new lu(n),
        o = new Fr(t, i, e);
    return this.cs.ws(function () {
      return Or(r.q_, o);
    }), function () {
      i.Zl(), r.cs.ws(function () {
        return Pr(r.q_, o);
      });
    };
  }, e.prototype.Q_ = function (e) {
    return t.__awaiter(this, void 0, void 0, function () {
      var n,
          r = this;
      return t.__generator(this, function (i) {
        switch (i.label) {
          case 0:
            return this.L_(), [4
            /*yield*/
            , this.O_.promise];

          case 1:
            return i.sent(), n = new dr(), [2
            /*return*/
            , (this.cs.ws(function () {
              return function (e, n, r) {
                return t.__awaiter(this, void 0, void 0, function () {
                  var i, o, s;
                  return t.__generator(this, function (t) {
                    switch (t.label) {
                      case 0:
                        return t.trys.push([0, 2,, 3]), [4
                        /*yield*/
                        , function (t, e) {
                          var n = m(t);
                          return n.persistence.runTransaction("read document", "readonly", function (t) {
                            return n.Cc.Cr(t, e);
                          });
                        }(e, n)];

                      case 1:
                        return (i = t.sent()) instanceof kn ? r.resolve(i) : i instanceof Rn ? r.resolve(null) : r.reject(new c(a.UNAVAILABLE, "Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)")), [3
                        /*break*/
                        , 3];

                      case 2:
                        return o = t.sent(), s = Lr(o, "Failed to get document '" + n + " from cache"), r.reject(s), [3
                        /*break*/
                        , 3];

                      case 3:
                        return [2
                        /*return*/
                        ];
                    }
                  });
                });
              }(r.ju, e, n);
            }), n.promise)];
        }
      });
    });
  }, e.prototype.W_ = function (e, n) {
    return void 0 === n && (n = {}), t.__awaiter(this, void 0, void 0, function () {
      var r,
          i = this;
      return t.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return this.L_(), [4
            /*yield*/
            , this.O_.promise];

          case 1:
            return t.sent(), r = new dr(), [2
            /*return*/
            , (this.cs.ws(function () {
              return function (t, e, n, r, i) {
                var o = new lu({
                  next: function next(o) {
                    // Remove query first before passing event to user to avoid
                    // user actions affecting the now stale query.
                    e.ws(function () {
                      return Pr(t, s);
                    });
                    var u = o.docs.has(n);
                    !u && o.fromCache ? // TODO(dimond): If we're online and the document doesn't
                    // exist then we resolve with a doc.exists set to false. If
                    // we're offline however, we reject the Promise in this
                    // case. Two options: 1) Cache the negative response from
                    // the server so we can deliver that even when you're
                    // offline 2) Actually reject the Promise in the online case
                    // if the document doesn't exist.
                    i.reject(new c(a.UNAVAILABLE, "Failed to get document because the client is offline.")) : u && o.fromCache && r && "server" === r.source ? i.reject(new c(a.UNAVAILABLE, 'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to "server" to retrieve the cached document.)')) : i.resolve(o);
                  },
                  error: function error(t) {
                    return i.reject(t);
                  }
                }),
                    s = new Fr(Un(n.path), o, {
                  includeMetadataChanges: !0,
                  Xs: !0
                });
                return Or(t, s);
              }(i.q_, i.cs, e, n, r);
            }), r.promise)];
        }
      });
    });
  }, e.prototype.j_ = function (e) {
    return t.__awaiter(this, void 0, void 0, function () {
      var n,
          r = this;
      return t.__generator(this, function (i) {
        switch (i.label) {
          case 0:
            return this.L_(), [4
            /*yield*/
            , this.O_.promise];

          case 1:
            return i.sent(), n = new dr(), [2
            /*return*/
            , (this.cs.ws(function () {
              return function (e, n, r) {
                return t.__awaiter(this, void 0, void 0, function () {
                  var i, o, s, u, a, c;
                  return t.__generator(this, function (t) {
                    switch (t.label) {
                      case 0:
                        return t.trys.push([0, 2,, 3]), [4
                        /*yield*/
                        , To(e, n,
                        /* usePreviousResults= */
                        !0)];

                      case 1:
                        return i = t.sent(), o = new ys(n, i.Fc), s = o.wh(i.documents), u = o.yr(s,
                        /* updateLimboDocuments= */
                        !1), r.resolve(u.snapshot), [3
                        /*break*/
                        , 3];

                      case 2:
                        return a = t.sent(), c = Lr(a, "Failed to execute query '" + n + " against cache"), r.reject(c), [3
                        /*break*/
                        , 3];

                      case 3:
                        return [2
                        /*return*/
                        ];
                    }
                  });
                });
              }(r.ju, e, n);
            }), n.promise)];
        }
      });
    });
  }, e.prototype.K_ = function (e, n) {
    return void 0 === n && (n = {}), t.__awaiter(this, void 0, void 0, function () {
      var r,
          i = this;
      return t.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return this.L_(), [4
            /*yield*/
            , this.O_.promise];

          case 1:
            return t.sent(), r = new dr(), [2
            /*return*/
            , (this.cs.ws(function () {
              return function (t, e, n, r, i) {
                var o = new lu({
                  next: function next(n) {
                    // Remove query first before passing event to user to avoid
                    // user actions affecting the now stale query.
                    e.ws(function () {
                      return Pr(t, s);
                    }), n.fromCache && "server" === r.source ? i.reject(new c(a.UNAVAILABLE, 'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to "server" to retrieve the cached documents.)')) : i.resolve(n);
                  },
                  error: function error(t) {
                    return i.reject(t);
                  }
                }),
                    s = new Fr(n, o, {
                  includeMetadataChanges: !0,
                  Xs: !0
                });
                return Or(t, s);
              }(i.q_, i.cs, e, n, r);
            }), r.promise)];
        }
      });
    });
  }, e.prototype.write = function (e) {
    var n = this;
    this.L_();
    var r = new dr();
    return this.cs.ws(function () {
      return function (e, n, r) {
        return t.__awaiter(this, void 0, void 0, function () {
          var i, o, s, u;
          return t.__generator(this, function (t) {
            switch (t.label) {
              case 0:
                i = Qs(e), t.label = 1;

              case 1:
                return t.trys.push([1, 5,, 6]), [4
                /*yield*/
                ,
                /* Accepts locally generated Mutations and commit them to storage. */
                function (t, e) {
                  var n,
                      r = m(t),
                      i = ot.now(),
                      o = e.reduce(function (t, e) {
                    return t.add(e.key);
                  }, Ot());
                  return r.persistence.runTransaction("Locally write mutations", "readwrite", function (t) {
                    return r.Cc.kr(t, o).next(function (o) {
                      n = o;

                      for ( // For non-idempotent mutations (such as `FieldValue.increment()`),
                      // we record the base state in a separate patch mutation. This is
                      // later used to guarantee consistent values and prevents flicker
                      // even if the backend sends us an update that already includes our
                      // transform.
                      var s = [], u = 0, a = e; u < a.length; u++) {
                        var c = a[u],
                            h = yn(c, n.get(c.key));
                        null != h && // NOTE: The base state should only be applied if there's some
                        // existing document to override, so use a Precondition of
                        // exists=true
                        s.push(new _n(c.key, h, xn(h.proto.mapValue), fn.exists(!0)));
                      }

                      return r.Sr.ko(t, i, s, e);
                    });
                  }).then(function (t) {
                    var e = t.lr(n);
                    return {
                      batchId: t.batchId,
                      wr: e
                    };
                  });
                }(i.ju, n)];

              case 2:
                return o = t.sent(), i.Sh.xi(o.batchId), function (t, e, n) {
                  var r = t.Oh[t.currentUser.ti()];
                  r || (r = new bt(H)), r = r.ot(e, n), t.Oh[t.currentUser.ti()] = r;
                }(i, o.batchId, r), [4
                /*yield*/
                , Vs(i, o.wr)];

              case 3:
                return t.sent(), [4
                /*yield*/
                , is(i.ph)];

              case 4:
                return t.sent(), [3
                /*break*/
                , 6];

              case 5:
                return s = t.sent(), u = Lr(s, "Failed to persist write"), r.reject(u), [3
                /*break*/
                , 6];

              case 6:
                return [2
                /*return*/
                ];
            }
          });
        });
      }(n.fi, e, r);
    }), r.promise;
  }, e.prototype.U = function () {
    return this.bl.U;
  }, e.prototype.G_ = function (e) {
    var n = this;
    this.L_();
    var r = new lu(e);
    return this.cs.ws(function () {
      return t.__awaiter(n, void 0, void 0, function () {
        return t.__generator(this, function (t) {
          return [2
          /*return*/
          , function (t, e) {
            m(t).qs.add(e), // Immediately fire an initial event, indicating all existing listeners
            // are in-sync.
            e.next();
          }(this.q_, r)];
        });
      });
    }), function () {
      r.Zl(), n.cs.ws(function () {
        return t.__awaiter(n, void 0, void 0, function () {
          return t.__generator(this, function (t) {
            return [2
            /*return*/
            , function (t, e) {
              m(t).qs.delete(e);
            }(this.q_, r)];
          });
        });
      });
    };
  }, Object.defineProperty(e.prototype, "z_", {
    get: function get() {
      // Technically, the asyncQueue is still running, but only accepting operations
      // related to termination or supposed to be run after termination. It is effectively
      // terminated to the eyes of users.
      return this.cs.ps;
    },
    enumerable: !1,
    configurable: !0
  }),
  /**
   * Takes an updateFunction in which a set of reads and writes can be performed
   * atomically. In the updateFunction, the client can read and write values
   * using the supplied transaction object. After the updateFunction, all
   * changes will be committed. If a retryable error occurs (ex: some other
   * client has changed any of the data referenced), then the updateFunction
   * will be called again after a backoff. If the updateFunction still fails
   * after all retries, then the transaction will be rejected.
   *
   * The transaction object passed to the updateFunction contains methods for
   * accessing documents and collections. Unlike other datastore access, data
   * accessed with the transaction will not reflect local changes that have not
   * been committed. For this reason, it is required that all reads are
   * performed before any writes. Transactions must be performed while online.
   */
  e.prototype.transaction = function (t) {
    var e = this;
    this.L_();
    var n = new dr();
    return this.cs.ws(function () {
      return new Wu(e.cs, e.Ku, t, n).run(), Promise.resolve();
    }), n.promise;
  }, e;
}();
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * TransactionRunner encapsulates the logic needed to run and retry transactions
 * with backoff.
 */


function Qu(t) {
  /**
  * Returns true if obj is an object and contains at least one of the specified
  * methods.
  */
  return function (t, e) {
    if ("object" != typeof t || null === t) return !1;

    for (var n = t, r = 0, i = ["next", "error", "complete"]; r < i.length; r++) {
      var o = i[r];
      if (o in n && "function" == typeof n[o]) return !0;
    }

    return !1;
  }(t);
}

var Hu =
/** @class */
function () {
  function t(t, e, n, r, i) {
    this.U = t, this.timestampsInSnapshots = e, this.H_ = n, this.Y_ = r, this.J_ = i;
  }

  return t.prototype.X_ = function (t) {
    switch (Jt(t)) {
      case 0
      /* NullValue */
      :
        return null;

      case 1
      /* BooleanValue */
      :
        return t.booleanValue;

      case 2
      /* NumberValue */
      :
        return se(t.integerValue || t.doubleValue);

      case 3
      /* TimestampValue */
      :
        return this.Z_(t.timestampValue);

      case 4
      /* ServerTimestampValue */
      :
        return this.tf(t);

      case 5
      /* StringValue */
      :
        return t.stringValue;

      case 6
      /* BlobValue */
      :
        return this.J_(ue(t.bytesValue));

      case 7
      /* RefValue */
      :
        return this.ef(t.referenceValue);

      case 8
      /* GeoPointValue */
      :
        return this.nf(t.geoPointValue);

      case 9
      /* ArrayValue */
      :
        return this.sf(t.arrayValue);

      case 10
      /* ObjectValue */
      :
        return this.if(t.mapValue);

      default:
        throw y();
    }
  }, t.prototype.if = function (t) {
    var e = this,
        n = {};
    return _(t.fields || {}, function (t, r) {
      n[t] = e.X_(r);
    }), n;
  }, t.prototype.nf = function (t) {
    return new Eu(se(t.latitude), se(t.longitude));
  }, t.prototype.sf = function (t) {
    var e = this;
    return (t.values || []).map(function (t) {
      return e.X_(t);
    });
  }, t.prototype.tf = function (t) {
    switch (this.H_) {
      case "previous":
        var e = Yt(t);
        return null == e ? null : this.X_(e);

      case "estimate":
        return this.Z_($t(t));

      default:
        return null;
    }
  }, t.prototype.Z_ = function (t) {
    var e = oe(t),
        n = new ot(e.seconds, e.nanos);
    return this.timestampsInSnapshots ? n : n.toDate();
  }, t.prototype.ef = function (t) {
    var e = E.g(t);
    g(He(e));
    var n = new rt(e.get(1), e.get(3)),
        r = new A(e.u(5));
    return n.isEqual(this.U) || // TODO(b/64130202): Somehow support foreign references.
    p("Document " + r + " contains a document reference within a different database (" + n.projectId + "/" + n.database + ") which is not supported. It will be treated as a reference in the current database (" + this.U.projectId + "/" + this.U.database + ") instead."), this.Y_(r);
  }, t;
}(),
    Yu = ui.ho,
    $u =
/** @class */
function () {
  function t(t) {
    var e, n, r, i, o;

    if (void 0 === t.host) {
      if (void 0 !== t.ssl) throw new c(a.INVALID_ARGUMENT, "Can't provide ssl option if host option is not set");
      this.host = "firestore.googleapis.com", this.ssl = !0;
    } else O("settings", "non-empty string", "host", t.host), this.host = t.host, P("settings", "boolean", "ssl", t.ssl), this.ssl = null === (e = t.ssl) || void 0 === e || e;

    if (j("settings", t, ["host", "ssl", "credentials", "timestampsInSnapshots", "cacheSizeBytes", "experimentalForceLongPolling", "experimentalAutoDetectLongPolling", "ignoreUndefinedProperties"]), P("settings", "object", "credentials", t.credentials), this.credentials = t.credentials, P("settings", "boolean", "timestampsInSnapshots", t.timestampsInSnapshots), P("settings", "boolean", "ignoreUndefinedProperties", t.ignoreUndefinedProperties), // Nobody should set timestampsInSnapshots anymore, but the error depends on
    // whether they set it to true or false...
    !0 === t.timestampsInSnapshots ? p("The setting 'timestampsInSnapshots: true' is no longer required and should be removed.") : !1 === t.timestampsInSnapshots && p("Support for 'timestampsInSnapshots: false' will be removed soon. You must update your code to handle Timestamp objects."), this.timestampsInSnapshots = null === (n = t.timestampsInSnapshots) || void 0 === n || n, this.ignoreUndefinedProperties = null !== (r = t.ignoreUndefinedProperties) && void 0 !== r && r, P("settings", "number", "cacheSizeBytes", t.cacheSizeBytes), void 0 === t.cacheSizeBytes) this.cacheSizeBytes = ui._o;else {
      if (t.cacheSizeBytes !== Yu && t.cacheSizeBytes < ui.lo) throw new c(a.INVALID_ARGUMENT, "cacheSizeBytes must be at least " + ui.lo);
      this.cacheSizeBytes = t.cacheSizeBytes;
    }
    P("settings", "boolean", "experimentalForceLongPolling", t.experimentalForceLongPolling), this.experimentalForceLongPolling = null !== (i = t.experimentalForceLongPolling) && void 0 !== i && i, P("settings", "boolean", "experimentalAutoDetectLongPolling", t.experimentalAutoDetectLongPolling), this.experimentalAutoDetectLongPolling = null !== (o = t.experimentalAutoDetectLongPolling) && void 0 !== o && o, function (t, e, n, r) {
      if (!0 === e && !0 === r) throw new c(a.INVALID_ARGUMENT, "experimentalForceLongPolling and experimentalAutoDetectLongPolling cannot be used together.");
    }(0, t.experimentalForceLongPolling, 0, t.experimentalAutoDetectLongPolling);
  }

  return t.prototype.isEqual = function (t) {
    return this.host === t.host && this.ssl === t.ssl && this.timestampsInSnapshots === t.timestampsInSnapshots && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties;
  }, t;
}(),
    Xu =
/** @class */
function () {
  // Note: We are using `MemoryComponentProvider` as a default
  // ComponentProvider to ensure backwards compatibility with the format
  // expected by the console build.
  function e(n, r, i, o) {
    var s = this;

    if (void 0 === i && (i = new cu()), void 0 === o && (o = new fu()), this.rf = i, this.af = o, this.cf = null, // Public for use in tests.
    // TODO(mikelehen): Use modularized initialization instead.
    this.uf = new xr(), this.INTERNAL = {
      delete: function _delete() {
        return t.__awaiter(s, void 0, void 0, function () {
          return t.__generator(this, function (t) {
            switch (t.label) {
              case 0:
                // The client must be initalized to ensure that all subsequent API usage
                // throws an exception.
                return this.hf(), [4
                /*yield*/
                , this.lf.terminate()];

              case 1:
                // The client must be initalized to ensure that all subsequent API usage
                // throws an exception.
                return t.sent(), [2
                /*return*/
                ];
            }
          });
        });
      }
    }, "object" == typeof n.options) {
      // This is very likely a Firebase app object
      // TODO(b/34177605): Can we somehow use instanceof?
      var u = n;
      this.cf = u, this.__ = e._f(u), this.ff = u.name, this.df = new Oo(r);
    } else {
      var h = n;
      if (!h.projectId) throw new c(a.INVALID_ARGUMENT, "Must provide projectId");
      this.__ = new rt(h.projectId, h.database), // Use a default persistenceKey that lines up with FirebaseApp.
      this.ff = "[DEFAULT]", this.df = new Ro();
    }

    this.wf = new $u({});
  }

  return Object.defineProperty(e.prototype, "mf", {
    get: function get() {
      return this.Tf || ( // Lazy initialize UserDataReader once the settings are frozen
      this.Tf = new ku(this.__, this.wf.ignoreUndefinedProperties)), this.Tf;
    },
    enumerable: !1,
    configurable: !0
  }), e.prototype.settings = function (t) {
    D("Firestore.settings", arguments, 1), k("Firestore.settings", "object", 1, t), t.merge && // Remove the property from the settings once the merge is completed
    delete (t = Object.assign(Object.assign({}, this.wf), t)).merge;
    var e = new $u(t);
    if (this.lf && !this.wf.isEqual(e)) throw new c(a.FAILED_PRECONDITION, "Firestore has already been started and its settings can no longer be changed. You can only call settings() before calling any other methods on a Firestore object.");
    this.wf = e, void 0 !== e.credentials && (this.df = function (t) {
      if (!t) return new Ro();

      switch (t.type) {
        case "gapi":
          var e = t.client; // Make sure this really is a Gapi client.

          return g(!("object" != typeof e || null === e || !e.auth || !e.auth.getAuthHeaderValueForFirstParty)), new Vo(e, t.sessionIndex || "0");

        case "provider":
          return t.client;

        default:
          throw new c(a.INVALID_ARGUMENT, "makeCredentialsProvider failed due to invalid credential type");
      }
    }(e.credentials));
  }, e.prototype.enableNetwork = function () {
    return this.hf(), this.lf.enableNetwork();
  }, e.prototype.disableNetwork = function () {
    return this.hf(), this.lf.disableNetwork();
  }, e.prototype.enablePersistence = function (t) {
    var e, n;
    if (this.lf) throw new c(a.FAILED_PRECONDITION, "Firestore has already been started and persistence can no longer be enabled. You can only call enablePersistence() before calling any other methods on a Firestore object.");
    var r = !1,
        i = !1;
    if (t && (void 0 !== t.experimentalTabSynchronization && p("The 'experimentalTabSynchronization' setting will be removed. Use 'synchronizeTabs' instead."), r = null !== (n = null !== (e = t.synchronizeTabs) && void 0 !== e ? e : t.experimentalTabSynchronization) && void 0 !== n && n, i = !!t.experimentalForceOwningTab && t.experimentalForceOwningTab, r && i)) throw new c(a.INVALID_ARGUMENT, "The 'experimentalForceOwningTab' setting cannot be used with 'synchronizeTabs'.");
    return this.Ef(this.rf, this.af, {
      jl: !0,
      cacheSizeBytes: this.wf.cacheSizeBytes,
      synchronizeTabs: r,
      ka: i
    });
  }, e.prototype.clearPersistence = function () {
    return t.__awaiter(this, void 0, void 0, function () {
      var e,
          n = this;
      return t.__generator(this, function (r) {
        if (void 0 !== this.lf && !this.lf.z_) throw new c(a.FAILED_PRECONDITION, "Persistence can only be cleared before a Firestore instance is initialized or after it is terminated.");
        return e = new dr(), [2
        /*return*/
        , (this.uf.bs(function () {
          return t.__awaiter(n, void 0, void 0, function () {
            var n;
            return t.__generator(this, function (t) {
              switch (t.label) {
                case 0:
                  return t.trys.push([0, 2,, 3]), [4
                  /*yield*/
                  , this.rf.clearPersistence(this.__, this.ff)];

                case 1:
                  return t.sent(), e.resolve(), [3
                  /*break*/
                  , 3];

                case 2:
                  return n = t.sent(), e.reject(n), [3
                  /*break*/
                  , 3];

                case 3:
                  return [2
                  /*return*/
                  ];
              }
            });
          });
        }), e.promise)];
      });
    });
  }, e.prototype.terminate = function () {
    return this.app._removeServiceInstance("firestore"), this.INTERNAL.delete();
  }, Object.defineProperty(e.prototype, "If", {
    get: function get() {
      return this.hf(), this.lf.z_;
    },
    enumerable: !1,
    configurable: !0
  }), e.prototype.waitForPendingWrites = function () {
    return this.hf(), this.lf.waitForPendingWrites();
  }, e.prototype.onSnapshotsInSync = function (t) {
    if (this.hf(), Qu(t)) return this.lf.G_(t);
    k("Firestore.onSnapshotsInSync", "function", 1, t);
    var e = {
      next: t
    };
    return this.lf.G_(e);
  }, e.prototype.hf = function () {
    return this.lf || // Kick off starting the client but don't actually wait for it.
    // eslint-disable-next-line @typescript-eslint/no-floating-promises
    this.Ef(new cu(), new fu(), {
      jl: !1
    }), this.lf;
  }, e.prototype.Af = function () {
    return new nt(this.__, this.ff, this.wf.host, this.wf.ssl, this.wf.experimentalForceLongPolling, this.wf.experimentalAutoDetectLongPolling);
  }, e.prototype.Ef = function (t, e, n) {
    var r = this.Af();
    return this.lf = new Ku(this.df, this.uf), this.lf.start(r, t, e, n);
  }, e._f = function (t) {
    if (e = t.options, "projectId", !Object.prototype.hasOwnProperty.call(e, "projectId")) throw new c(a.INVALID_ARGUMENT, '"projectId" not provided in firebase.initializeApp.');
    var e,
        n = t.options.projectId;
    if (!n || "string" != typeof n) throw new c(a.INVALID_ARGUMENT, "projectId must be a string in FirebaseApp.options");
    return new rt(n);
  }, Object.defineProperty(e.prototype, "app", {
    get: function get() {
      if (!this.cf) throw new c(a.FAILED_PRECONDITION, "Firestore was not initialized using the Firebase SDK. 'app' is not available");
      return this.cf;
    },
    enumerable: !1,
    configurable: !0
  }), e.prototype.collection = function (t) {
    return D("Firestore.collection", arguments, 1), k("Firestore.collection", "non-empty string", 1, t), this.hf(), new la(E.g(t), this,
    /* converter= */
    null);
  }, e.prototype.doc = function (t) {
    return D("Firestore.doc", arguments, 1), k("Firestore.doc", "non-empty string", 1, t), this.hf(), ta.Rf(E.g(t), this,
    /* converter= */
    null);
  }, e.prototype.collectionGroup = function (t) {
    if (D("Firestore.collectionGroup", arguments, 1), k("Firestore.collectionGroup", "non-empty string", 1, t), t.indexOf("/") >= 0) throw new c(a.INVALID_ARGUMENT, "Invalid collection ID '" + t + "' passed to function Firestore.collectionGroup(). Collection IDs must not contain '/'.");
    return this.hf(), new ha(
    /**
    * Creates a new Query for a collection group query that matches all documents
    * within the provided collection group.
    */
    function (t) {
      return new Pn(E.P(), t);
    }(t), this,
    /* converter= */
    null);
  }, e.prototype.runTransaction = function (t) {
    var e = this;
    return D("Firestore.runTransaction", arguments, 1), k("Firestore.runTransaction", "function", 1, t), this.hf().transaction(function (n) {
      return t(new Ju(e, n));
    });
  }, e.prototype.batch = function () {
    return this.hf(), new Zu(this);
  }, Object.defineProperty(e, "logLevel", {
    get: function get() {
      switch (f()) {
        case n.LogLevel.DEBUG:
          return "debug";

        case n.LogLevel.ERROR:
          return "error";

        case n.LogLevel.SILENT:
          return "silent";

        case n.LogLevel.WARN:
          return "warn";

        case n.LogLevel.INFO:
          return "info";

        case n.LogLevel.VERBOSE:
          return "verbose";

        default:
          // The default log level is error
          return "error";
      }
    },
    enumerable: !1,
    configurable: !0
  }), e.setLogLevel = function (t) {
    var e;
    D("Firestore.setLogLevel", arguments, 1), U("setLogLevel", ["debug", "error", "silent", "warn", "info", "verbose"], 1, t), e = t, h.setLogLevel(e);
  }, // Note: this is not a property because the minifier can't work correctly with
  // the way TypeScript compiler outputs properties.
  e.prototype.gf = function () {
    return this.wf.timestampsInSnapshots;
  }, // Visible for testing.
  e.prototype.Pf = function () {
    return this.wf;
  }, e;
}(),
    Ju =
/** @class */
function () {
  function t(t, e) {
    this.yf = t, this.Vf = e;
  }

  return t.prototype.get = function (t) {
    var e = this;
    D("Transaction.get", arguments, 1);
    var n = ya("Transaction.get", t, this.yf);
    return this.Vf.v_([n.f_]).then(function (t) {
      if (!t || 1 !== t.length) return y();
      var r = t[0];
      if (r instanceof Rn) return new na(e.yf, n.f_, null,
      /* fromCache= */
      !1,
      /* hasPendingWrites= */
      !1, n.d_);
      if (r instanceof kn) return new na(e.yf, n.f_, r,
      /* fromCache= */
      !1,
      /* hasPendingWrites= */
      !1, n.d_);
      throw y();
    });
  }, t.prototype.set = function (t, e, n) {
    L("Transaction.set", arguments, 2, 3);
    var r = ya("Transaction.set", t, this.yf);
    n = pa("Transaction.set", n);
    var i = ma(r.d_, e, n),
        o = Ru(this.yf.mf, "Transaction.set", r.f_, i, null !== r.d_, n);
    return this.Vf.set(r.f_, o), this;
  }, t.prototype.update = function (t, e, n) {
    for (var r, i, o = [], s = 3; s < arguments.length; s++) {
      o[s - 3] = arguments[s];
    }

    return "string" == typeof e || e instanceof du ? (x("Transaction.update", arguments, 3), r = ya("Transaction.update", t, this.yf), i = Pu(this.yf.mf, "Transaction.update", r.f_, e, n, o)) : (D("Transaction.update", arguments, 2), r = ya("Transaction.update", t, this.yf), i = Ou(this.yf.mf, "Transaction.update", r.f_, e)), this.Vf.update(r.f_, i), this;
  }, t.prototype.delete = function (t) {
    D("Transaction.delete", arguments, 1);
    var e = ya("Transaction.delete", t, this.yf);
    return this.Vf.delete(e.f_), this;
  }, t;
}(),
    Zu =
/** @class */
function () {
  function t(t) {
    this.yf = t, this.pf = [], this.bf = !1;
  }

  return t.prototype.set = function (t, e, n) {
    L("WriteBatch.set", arguments, 2, 3), this.vf();
    var r = ya("WriteBatch.set", t, this.yf);
    n = pa("WriteBatch.set", n);
    var i = ma(r.d_, e, n),
        o = Ru(this.yf.mf, "WriteBatch.set", r.f_, i, null !== r.d_, n);
    return this.pf = this.pf.concat(o.w_(r.f_, fn.ze())), this;
  }, t.prototype.update = function (t, e, n) {
    for (var r, i, o = [], s = 3; s < arguments.length; s++) {
      o[s - 3] = arguments[s];
    }

    return this.vf(), "string" == typeof e || e instanceof du ? (x("WriteBatch.update", arguments, 3), r = ya("WriteBatch.update", t, this.yf), i = Pu(this.yf.mf, "WriteBatch.update", r.f_, e, n, o)) : (D("WriteBatch.update", arguments, 2), r = ya("WriteBatch.update", t, this.yf), i = Ou(this.yf.mf, "WriteBatch.update", r.f_, e)), this.pf = this.pf.concat(i.w_(r.f_, fn.exists(!0))), this;
  }, t.prototype.delete = function (t) {
    D("WriteBatch.delete", arguments, 1), this.vf();
    var e = ya("WriteBatch.delete", t, this.yf);
    return this.pf = this.pf.concat(new Nn(e.f_, fn.ze())), this;
  }, t.prototype.commit = function () {
    return this.vf(), this.bf = !0, this.pf.length > 0 ? this.yf.hf().write(this.pf) : Promise.resolve();
  }, t.prototype.vf = function () {
    if (this.bf) throw new c(a.FAILED_PRECONDITION, "A write batch can no longer be used after commit() has been called.");
  }, t;
}(),
    ta =
/** @class */
function (e) {
  function n(t, n, r) {
    var i = this;
    return (i = e.call(this, n.__, t, r) || this).f_ = t, i.firestore = n, i.d_ = r, i.lf = i.firestore.hf(), i;
  }

  return t.__extends(n, e), n.Rf = function (t, e, r) {
    if (t.length % 2 != 0) throw new c(a.INVALID_ARGUMENT, "Invalid document reference. Document references must have an even number of segments, but " + t.R() + " has " + t.length);
    return new n(new A(t), e, r);
  }, Object.defineProperty(n.prototype, "id", {
    get: function get() {
      return this.f_.path._();
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(n.prototype, "parent", {
    get: function get() {
      return new la(this.f_.path.h(), this.firestore, this.d_);
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(n.prototype, "path", {
    get: function get() {
      return this.f_.path.R();
    },
    enumerable: !1,
    configurable: !0
  }), n.prototype.collection = function (t) {
    if (D("DocumentReference.collection", arguments, 1), k("DocumentReference.collection", "non-empty string", 1, t), !t) throw new c(a.INVALID_ARGUMENT, "Must provide a non-empty collection name to collection()");
    var e = E.g(t);
    return new la(this.f_.path.child(e), this.firestore,
    /* converter= */
    null);
  }, n.prototype.isEqual = function (t) {
    if (!(t instanceof n)) throw G("isEqual", "DocumentReference", 1, t);
    return this.firestore === t.firestore && this.f_.isEqual(t.f_) && this.d_ === t.d_;
  }, n.prototype.set = function (t, e) {
    L("DocumentReference.set", arguments, 1, 2), e = pa("DocumentReference.set", e);
    var n = ma(this.d_, t, e),
        r = Ru(this.firestore.mf, "DocumentReference.set", this.f_, n, null !== this.d_, e);
    return this.lf.write(r.w_(this.f_, fn.ze()));
  }, n.prototype.update = function (t, e) {
    for (var n, r = [], i = 2; i < arguments.length; i++) {
      r[i - 2] = arguments[i];
    }

    return "string" == typeof t || t instanceof du ? (x("DocumentReference.update", arguments, 2), n = Pu(this.firestore.mf, "DocumentReference.update", this.f_, t, e, r)) : (D("DocumentReference.update", arguments, 1), n = Ou(this.firestore.mf, "DocumentReference.update", this.f_, t)), this.lf.write(n.w_(this.f_, fn.exists(!0)));
  }, n.prototype.delete = function () {
    return D("DocumentReference.delete", arguments, 0), this.lf.write([new Nn(this.f_, fn.ze())]);
  }, n.prototype.onSnapshot = function () {
    for (var t, e, n, r = this, i = [], o = 0; o < arguments.length; o++) {
      i[o] = arguments[o];
    }

    L("DocumentReference.onSnapshot", arguments, 1, 4);
    var s = {
      includeMetadataChanges: !1
    },
        u = 0;
    "object" != typeof i[u] || Qu(i[u]) || (j("DocumentReference.onSnapshot", s = i[u], ["includeMetadataChanges"]), P("DocumentReference.onSnapshot", "boolean", "includeMetadataChanges", s.includeMetadataChanges), u++);
    var a = {
      includeMetadataChanges: s.includeMetadataChanges
    };

    if (Qu(i[u])) {
      var c = i[u];
      i[u] = null === (t = c.next) || void 0 === t ? void 0 : t.bind(c), i[u + 1] = null === (e = c.error) || void 0 === e ? void 0 : e.bind(c), i[u + 2] = null === (n = c.complete) || void 0 === n ? void 0 : n.bind(c);
    } else k("DocumentReference.onSnapshot", "function", u, i[u]), R("DocumentReference.onSnapshot", "function", u + 1, i[u + 1]), R("DocumentReference.onSnapshot", "function", u + 2, i[u + 2]);

    var h = {
      next: function next(t) {
        i[u] && i[u](r.Sf(t));
      },
      error: i[u + 1],
      complete: i[u + 2]
    };
    return this.lf.listen(Un(this.f_.path), a, h);
  }, n.prototype.get = function (t) {
    var e = this;
    L("DocumentReference.get", arguments, 0, 1), va("DocumentReference.get", t);
    var n = this.firestore.hf();
    return t && "cache" === t.source ? n.Q_(this.f_).then(function (t) {
      return new na(e.firestore, e.f_, t,
      /*fromCache=*/
      !0, t instanceof kn && t.Je, e.d_);
    }) : n.W_(this.f_, t).then(function (t) {
      return e.Sf(t);
    });
  }, n.prototype.withConverter = function (t) {
    return new n(this.f_, this.firestore, t);
  },
  /**
   * Converts a ViewSnapshot that contains the current document to a
   * DocumentSnapshot.
   */
  n.prototype.Sf = function (t) {
    var e = t.docs.get(this.f_);
    return new na(this.firestore, this.f_, e, t.fromCache, t.hasPendingWrites, this.d_);
  }, n;
}(Au),
    ea =
/** @class */
function () {
  function t(t, e) {
    this.hasPendingWrites = t, this.fromCache = e;
  }

  return t.prototype.isEqual = function (t) {
    return this.hasPendingWrites === t.hasPendingWrites && this.fromCache === t.fromCache;
  }, t;
}(),
    na =
/** @class */
function () {
  function t(t, e, n, r, i, o) {
    this.yf = t, this.f_ = e, this.Df = n, this.Cf = r, this.Nf = i, this.d_ = o;
  }

  return t.prototype.data = function (t) {
    var e = this;

    if (L("DocumentSnapshot.data", arguments, 0, 1), t = da("DocumentSnapshot.data", t), this.Df) {
      // We only want to use the converter and create a new DocumentSnapshot
      // if a converter has been provided.
      if (this.d_) {
        var n = new ra(this.yf, this.f_, this.Df, this.Cf, this.Nf,
        /* converter= */
        null);
        return this.d_.fromFirestore(n, t);
      }

      return new Hu(this.yf.__, this.yf.gf(), t.serverTimestamps || "none", function (t) {
        return new ta(t, e.yf,
        /* converter= */
        null);
      }, function (t) {
        return new et(t);
      }).X_(this.Df.rn());
    }
  }, t.prototype.get = function (t, e) {
    var n = this;

    if (L("DocumentSnapshot.get", arguments, 1, 2), e = da("DocumentSnapshot.get", e), this.Df) {
      var r = this.Df.data().field(qu("DocumentSnapshot.get", t, this.f_));
      if (null !== r) return new Hu(this.yf.__, this.yf.gf(), e.serverTimestamps || "none", function (t) {
        return new ta(t, n.yf, n.d_);
      }, function (t) {
        return new et(t);
      }).X_(r);
    }
  }, Object.defineProperty(t.prototype, "id", {
    get: function get() {
      return this.f_.path._();
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(t.prototype, "ref", {
    get: function get() {
      return new ta(this.f_, this.yf, this.d_);
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(t.prototype, "exists", {
    get: function get() {
      return null !== this.Df;
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(t.prototype, "metadata", {
    get: function get() {
      return new ea(this.Nf, this.Cf);
    },
    enumerable: !1,
    configurable: !0
  }), t.prototype.isEqual = function (e) {
    if (!(e instanceof t)) throw G("isEqual", "DocumentSnapshot", 1, e);
    return this.yf === e.yf && this.Cf === e.Cf && this.f_.isEqual(e.f_) && (null === this.Df ? null === e.Df : this.Df.isEqual(e.Df)) && this.d_ === e.d_;
  }, t;
}(),
    ra =
/** @class */
function (e) {
  function n() {
    return null !== e && e.apply(this, arguments) || this;
  }

  return t.__extends(n, e), n.prototype.data = function (t) {
    return e.prototype.data.call(this, t);
  }, n;
}(na);
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// settings() defaults:


function ia(t, e, n, r, i, o, s) {
  var u;

  if (i.p()) {
    if ("array-contains"
    /* ARRAY_CONTAINS */
    === o || "array-contains-any"
    /* ARRAY_CONTAINS_ANY */
    === o) throw new c(a.INVALID_ARGUMENT, "Invalid Query. You can't perform '" + o + "' queries on FieldPath.documentId().");

    if ("in"
    /* IN */
    === o || "not-in"
    /* NOT_IN */
    === o) {
      ua(s, o);

      for (var h = [], f = 0, l = s; f < l.length; f++) {
        var p = l[f];
        h.push(sa(r, t, p));
      }

      u = {
        arrayValue: {
          values: h
        }
      };
    } else u = sa(r, t, s);
  } else "in"
  /* IN */
  !== o && "not-in"
  /* NOT_IN */
  !== o && "array-contains-any"
  /* ARRAY_CONTAINS_ANY */
  !== o || ua(s, o), u = Vu(n, e, s,
  /* allowArrays= */
  "in"
  /* IN */
  === o || "not-in"
  /* NOT_IN */
  === o);

  var d = Jn.create(i, o, u);
  return function (t, e) {
    if (e.hn()) {
      var n = qn(t);
      if (null !== n && !n.isEqual(e.field)) throw new c(a.INVALID_ARGUMENT, "Invalid query. All where filters with an inequality (<, <=, >, or >=) must be on the same field. But you have inequality filters on '" + n.toString() + "' and '" + e.field.toString() + "'");
      var r = Mn(t);
      null !== r && aa(t, e.field, r);
    }

    var i = function (t, e) {
      for (var n = 0, r = t.filters; n < r.length; n++) {
        var i = r[n];
        if (e.indexOf(i.op) >= 0) return i.op;
      }

      return null;
    }(t,
    /**
    * Given an operator, returns the set of operators that cannot be used with it.
    *
    * Operators in a query must adhere to the following set of rules:
    * 1. Only one array operator is allowed.
    * 2. Only one disjunctive operator is allowed.
    * 3. NOT_EQUAL cannot be used with another NOT_EQUAL operator.
    * 4. NOT_IN cannot be used with array, disjunctive, or NOT_EQUAL operators.
    *
    * Array operators: ARRAY_CONTAINS, ARRAY_CONTAINS_ANY
    * Disjunctive operators: IN, ARRAY_CONTAINS_ANY, NOT_IN
    */
    function (t) {
      switch (t) {
        case "!="
        /* NOT_EQUAL */
        :
          return ["!="
          /* NOT_EQUAL */
          , "not-in"
          /* NOT_IN */
          ];

        case "array-contains"
        /* ARRAY_CONTAINS */
        :
          return ["array-contains"
          /* ARRAY_CONTAINS */
          , "array-contains-any"
          /* ARRAY_CONTAINS_ANY */
          , "not-in"
          /* NOT_IN */
          ];

        case "in"
        /* IN */
        :
          return ["array-contains-any"
          /* ARRAY_CONTAINS_ANY */
          , "in"
          /* IN */
          , "not-in"
          /* NOT_IN */
          ];

        case "array-contains-any"
        /* ARRAY_CONTAINS_ANY */
        :
          return ["array-contains"
          /* ARRAY_CONTAINS */
          , "array-contains-any"
          /* ARRAY_CONTAINS_ANY */
          , "in"
          /* IN */
          , "not-in"
          /* NOT_IN */
          ];

        case "not-in"
        /* NOT_IN */
        :
          return ["array-contains"
          /* ARRAY_CONTAINS */
          , "array-contains-any"
          /* ARRAY_CONTAINS_ANY */
          , "in"
          /* IN */
          , "not-in"
          /* NOT_IN */
          , "!="
          /* NOT_EQUAL */
          ];

        default:
          return [];
      }
    }(e.op));

    if (null !== i) // Special case when it's a duplicate op to give a slightly clearer error message.
      throw i === e.op ? new c(a.INVALID_ARGUMENT, "Invalid query. You cannot use more than one '" + e.op.toString() + "' filter.") : new c(a.INVALID_ARGUMENT, "Invalid query. You cannot use '" + e.op.toString() + "' filters with '" + i.toString() + "' filters.");
  }(t, d), d;
}

function oa(t, e, n) {
  if (null !== t.startAt) throw new c(a.INVALID_ARGUMENT, "Invalid query. You must not call startAt() or startAfter() before calling orderBy().");
  if (null !== t.endAt) throw new c(a.INVALID_ARGUMENT, "Invalid query. You must not call endAt() or endBefore() before calling orderBy().");
  var r = new fr(e, n);
  return function (t, e) {
    if (null === Mn(t)) {
      // This is the first order by. It must match any inequality.
      var n = qn(t);
      null !== n && aa(t, n, e.field);
    }
  }(t, r), r;
}

function sa(t, e, n) {
  if ("string" == typeof n) {
    if ("" === n) throw new c(a.INVALID_ARGUMENT, "Invalid query. When querying with FieldPath.documentId(), you must provide a valid document ID, but it was an empty string.");
    if (!jn(e) && -1 !== n.indexOf("/")) throw new c(a.INVALID_ARGUMENT, "Invalid query. When querying a collection by FieldPath.documentId(), you must provide a plain document ID, but '" + n + "' contains a '/' character.");
    var r = e.path.child(E.g(n));
    if (!A.F(r)) throw new c(a.INVALID_ARGUMENT, "Invalid query. When querying a collection group by FieldPath.documentId(), the value provided must result in a valid document path, but '" + r + "' is not because it has an odd number of segments (" + r.length + ").");
    return ae(t, new A(r));
  }

  if (n instanceof Au) return ae(t, n.f_);
  throw new c(a.INVALID_ARGUMENT, "Invalid query. When querying with FieldPath.documentId(), you must provide a valid string or a DocumentReference, but it was: " + M(n) + ".");
}
/**
 * Validates that the value passed into a disjunctive filter satisfies all
 * array requirements.
 */


function ua(t, e) {
  if (!Array.isArray(t) || 0 === t.length) throw new c(a.INVALID_ARGUMENT, "Invalid Query. A non-empty array is required for '" + e.toString() + "' filters.");
  if (t.length > 10) throw new c(a.INVALID_ARGUMENT, "Invalid Query. '" + e.toString() + "' filters support a maximum of 10 elements in the value array.");

  if ("in"
  /* IN */
  === e || "array-contains-any"
  /* ARRAY_CONTAINS_ANY */
  === e) {
    if (t.indexOf(null) >= 0) throw new c(a.INVALID_ARGUMENT, "Invalid Query. '" + e.toString() + "' filters cannot contain 'null' in the value array.");
    if (t.filter(function (t) {
      return Number.isNaN(t);
    }).length > 0) throw new c(a.INVALID_ARGUMENT, "Invalid Query. '" + e.toString() + "' filters cannot contain 'NaN' in the value array.");
  }
}

function aa(t, e, n) {
  if (!n.isEqual(e)) throw new c(a.INVALID_ARGUMENT, "Invalid query. You have a where filter with an inequality (<, <=, >, or >=) on field '" + e.toString() + "' and so you must also use '" + e.toString() + "' as your first orderBy(), but your first orderBy() is on field '" + n.toString() + "' instead.");
}

function ca(t) {
  if (Fn(t) && 0 === t.on.length) throw new c(a.UNIMPLEMENTED, "limitToLast() queries require specifying at least one orderBy() clause");
}

var ha =
/** @class */
function () {
  function e(t, e, n) {
    this.Ff = t, this.firestore = e, this.d_ = n;
  }

  return e.prototype.where = function (t, n, r) {
    D("Query.where", arguments, 3), q("Query.where", 3, r); // Enumerated from the WhereFilterOp type in index.d.ts.

    var i = U("Query.where", ["<"
    /* LESS_THAN */
    , "<="
    /* LESS_THAN_OR_EQUAL */
    , "=="
    /* EQUAL */
    , "!="
    /* NOT_EQUAL */
    , ">="
    /* GREATER_THAN_OR_EQUAL */
    , ">"
    /* GREATER_THAN */
    , "array-contains"
    /* ARRAY_CONTAINS */
    , "in"
    /* IN */
    , "array-contains-any"
    /* ARRAY_CONTAINS_ANY */
    , "not-in"
    /* NOT_IN */
    ], 2, n),
        o = qu("Query.where", t),
        s = ia(this.Ff, "Query.where", this.firestore.mf, this.firestore.__, o, i, r);
    return new e(function (t, e) {
      var n = t.filters.concat([e]);
      return new Pn(t.path, t.collectionGroup, t.on.slice(), n, t.limit, t.an, t.startAt, t.endAt);
    }(this.Ff, s), this.firestore, this.d_);
  }, e.prototype.orderBy = function (t, n) {
    var r;
    if (L("Query.orderBy", arguments, 1, 2), R("Query.orderBy", "non-empty string", 2, n), void 0 === n || "asc" === n) r = "asc"
    /* ASCENDING */
    ;else {
      if ("desc" !== n) throw new c(a.INVALID_ARGUMENT, "Function Query.orderBy() has unknown direction '" + n + "', expected 'asc' or 'desc'.");
      r = "desc"
      /* DESCENDING */
      ;
    }
    var i = qu("Query.orderBy", t),
        o = oa(this.Ff, i, r);
    return new e(function (t, e) {
      // TODO(dimond): validate that orderBy does not list the same key twice.
      var n = t.on.concat([e]);
      return new Pn(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.an, t.startAt, t.endAt);
    }(this.Ff, o), this.firestore, this.d_);
  }, e.prototype.limit = function (t) {
    return D("Query.limit", arguments, 1), k("Query.limit", "number", 1, t), z("Query.limit", 1, t), new e(Bn(this.Ff, t, "F"
    /* First */
    ), this.firestore, this.d_);
  }, e.prototype.limitToLast = function (t) {
    return D("Query.limitToLast", arguments, 1), k("Query.limitToLast", "number", 1, t), z("Query.limitToLast", 1, t), new e(Bn(this.Ff, t, "L"
    /* Last */
    ), this.firestore, this.d_);
  }, e.prototype.startAt = function (t) {
    for (var n = [], r = 1; r < arguments.length; r++) {
      n[r - 1] = arguments[r];
    }

    x("Query.startAt", arguments, 1);
    var i = this.xf("Query.startAt", t, n,
    /*before=*/
    !0);
    return new e(Wn(this.Ff, i), this.firestore, this.d_);
  }, e.prototype.startAfter = function (t) {
    for (var n = [], r = 1; r < arguments.length; r++) {
      n[r - 1] = arguments[r];
    }

    x("Query.startAfter", arguments, 1);
    var i = this.xf("Query.startAfter", t, n,
    /*before=*/
    !1);
    return new e(Wn(this.Ff, i), this.firestore, this.d_);
  }, e.prototype.endBefore = function (t) {
    for (var n = [], r = 1; r < arguments.length; r++) {
      n[r - 1] = arguments[r];
    }

    x("Query.endBefore", arguments, 1);
    var i = this.xf("Query.endBefore", t, n,
    /*before=*/
    !0);
    return new e(Kn(this.Ff, i), this.firestore, this.d_);
  }, e.prototype.endAt = function (t) {
    for (var n = [], r = 1; r < arguments.length; r++) {
      n[r - 1] = arguments[r];
    }

    x("Query.endAt", arguments, 1);
    var i = this.xf("Query.endAt", t, n,
    /*before=*/
    !1);
    return new e(Kn(this.Ff, i), this.firestore, this.d_);
  }, e.prototype.isEqual = function (t) {
    if (!(t instanceof e)) throw G("isEqual", "Query", 1, t);
    return this.firestore === t.firestore && Qn(this.Ff, t.Ff) && this.d_ === t.d_;
  }, e.prototype.withConverter = function (t) {
    return new e(this.Ff, this.firestore, t);
  },
  /** Helper function to create a bound from a document or fields */
  e.prototype.xf = function (e, n, r, i) {
    if (q(e, 1, n), n instanceof na) return D(e, t.__spreadArrays([n], r), 1), function (t, e, n, r, i) {
      if (!r) throw new c(a.NOT_FOUND, "Can't use a DocumentSnapshot that doesn't exist for " + n + "()."); // Because people expect to continue/end a query at the exact document
      // provided, we need to use the implicit sort order rather than the explicit
      // sort order, because it's guaranteed to contain the document key. That way
      // the position becomes unambiguous and the query continues/ends exactly at
      // the provided document. Without the key (by using the explicit sort
      // orders), multiple documents could match the position, yielding duplicate
      // results.

      for (var o = [], s = 0, u = Gn(t); s < u.length; s++) {
        var h = u[s];
        if (h.field.p()) o.push(ae(e, r.key));else {
          var f = r.field(h.field);
          if (Ht(f)) throw new c(a.INVALID_ARGUMENT, 'Invalid query. You are trying to start or end a query using a document for which the field "' + h.field + '" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');

          if (null === f) {
            var l = h.field.R();
            throw new c(a.INVALID_ARGUMENT, "Invalid query. You are trying to start or end a query using a document for which the field '" + l + "' (used as the orderBy) does not exist.");
          }

          o.push(f);
        }
      }

      return new ur(o, i);
    }(this.Ff, this.firestore.__, e, n.Df, i);
    var o = [n].concat(r);
    return function (t, e, n, r, i, o) {
      // Use explicit order by's because it has to match the query the user made
      var s = t.on;
      if (i.length > s.length) throw new c(a.INVALID_ARGUMENT, "Too many arguments provided to " + r + "(). The number of arguments must be less than or equal to the number of orderBy() clauses");

      for (var u = [], h = 0; h < i.length; h++) {
        var f = i[h];

        if (s[h].field.p()) {
          if ("string" != typeof f) throw new c(a.INVALID_ARGUMENT, "Invalid query. Expected a string for document ID in " + r + "(), but got a " + typeof f);
          if (!jn(t) && -1 !== f.indexOf("/")) throw new c(a.INVALID_ARGUMENT, "Invalid query. When querying a collection and ordering by FieldPath.documentId(), the value passed to " + r + "() must be a plain document ID, but '" + f + "' contains a slash.");
          var l = t.path.child(E.g(f));
          if (!A.F(l)) throw new c(a.INVALID_ARGUMENT, "Invalid query. When querying a collection group and ordering by FieldPath.documentId(), the value passed to " + r + "() must result in a valid document path, but '" + l + "' is not because it contains an odd number of segments.");
          var p = new A(l);
          u.push(ae(e, p));
        } else {
          var d = Vu(n, r, f);
          u.push(d);
        }
      }

      return new ur(u, o);
    }(this.Ff, this.firestore.__, this.firestore.mf, e, o, i);
  }, e.prototype.onSnapshot = function () {
    for (var t, e, n, r = this, i = [], o = 0; o < arguments.length; o++) {
      i[o] = arguments[o];
    }

    L("Query.onSnapshot", arguments, 1, 4);
    var s = {},
        u = 0;

    if ("object" != typeof i[u] || Qu(i[u]) || (j("Query.onSnapshot", s = i[u], ["includeMetadataChanges"]), P("Query.onSnapshot", "boolean", "includeMetadataChanges", s.includeMetadataChanges), u++), Qu(i[u])) {
      var a = i[u];
      i[u] = null === (t = a.next) || void 0 === t ? void 0 : t.bind(a), i[u + 1] = null === (e = a.error) || void 0 === e ? void 0 : e.bind(a), i[u + 2] = null === (n = a.complete) || void 0 === n ? void 0 : n.bind(a);
    } else k("Query.onSnapshot", "function", u, i[u]), R("Query.onSnapshot", "function", u + 1, i[u + 1]), R("Query.onSnapshot", "function", u + 2, i[u + 2]);

    var c = {
      next: function next(t) {
        i[u] && i[u](new fa(r.firestore, r.Ff, t, r.d_));
      },
      error: i[u + 1],
      complete: i[u + 2]
    };
    return ca(this.Ff), this.firestore.hf().listen(this.Ff, s, c);
  }, e.prototype.get = function (t) {
    var e = this;
    L("Query.get", arguments, 0, 1), va("Query.get", t), ca(this.Ff);
    var n = this.firestore.hf();
    return (t && "cache" === t.source ? n.j_(this.Ff) : n.K_(this.Ff, t)).then(function (t) {
      return new fa(e.firestore, e.Ff, t, e.d_);
    });
  }, e;
}(),
    fa =
/** @class */
function () {
  function t(t, e, n, r) {
    this.yf = t, this.$f = e, this.kf = n, this.d_ = r, this.Mf = null, this.Of = null, this.metadata = new ea(n.hasPendingWrites, n.fromCache);
  }

  return Object.defineProperty(t.prototype, "docs", {
    get: function get() {
      var t = [];
      return this.forEach(function (e) {
        return t.push(e);
      }), t;
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(t.prototype, "empty", {
    get: function get() {
      return this.kf.docs.m();
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(t.prototype, "size", {
    get: function get() {
      return this.kf.docs.size;
    },
    enumerable: !1,
    configurable: !0
  }), t.prototype.forEach = function (t, e) {
    var n = this;
    L("QuerySnapshot.forEach", arguments, 1, 2), k("QuerySnapshot.forEach", "function", 1, t), this.kf.docs.forEach(function (r) {
      t.call(e, n.Lf(r, n.metadata.fromCache, n.kf.Wt.has(r.key)));
    });
  }, Object.defineProperty(t.prototype, "query", {
    get: function get() {
      return new ha(this.$f, this.yf, this.d_);
    },
    enumerable: !1,
    configurable: !0
  }), t.prototype.docChanges = function (t) {
    t && (j("QuerySnapshot.docChanges", t, ["includeMetadataChanges"]), P("QuerySnapshot.docChanges", "boolean", "includeMetadataChanges", t.includeMetadataChanges));
    var e = !(!t || !t.includeMetadataChanges);
    if (e && this.kf.Kt) throw new c(a.INVALID_ARGUMENT, "To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().");
    return this.Mf && this.Of === e || (this.Mf =
    /**
    * Calculates the array of DocumentChanges for a given ViewSnapshot.
    *
    * Exported for testing.
    *
    * @param snapshot The ViewSnapshot that represents the expected state.
    * @param includeMetadataChanges Whether to include metadata changes.
    * @param converter A factory function that returns a QueryDocumentSnapshot.
    * @return An object that matches the DocumentChange API.
    */
    function (t, e, n) {
      if (t.Qt.m()) {
        // Special case the first snapshot because index calculation is easy and
        // fast
        var r = 0;
        return t.docChanges.map(function (e) {
          var i = n(e.doc, t.fromCache, t.Wt.has(e.doc.key));
          return e.doc, {
            type: "added",
            doc: i,
            oldIndex: -1,
            newIndex: r++
          };
        });
      } // A DocumentSet that is updated incrementally as changes are applied to use
      // to lookup the index of a document.


      var i = t.Qt;
      return t.docChanges.filter(function (t) {
        return e || 3
        /* Metadata */
        !== t.type;
      }).map(function (e) {
        var r = n(e.doc, t.fromCache, t.Wt.has(e.doc.key)),
            o = -1,
            s = -1;
        return 0
        /* Added */
        !== e.type && (o = i.indexOf(e.doc.key), i = i.delete(e.doc.key)), 1
        /* Removed */
        !== e.type && (s = (i = i.add(e.doc)).indexOf(e.doc.key)), {
          type: ga(e.type),
          doc: r,
          oldIndex: o,
          newIndex: s
        };
      });
    }(this.kf, e, this.Lf.bind(this)), this.Of = e), this.Mf;
  },
  /** Check the equality. The call can be very expensive. */
  t.prototype.isEqual = function (e) {
    if (!(e instanceof t)) throw G("isEqual", "QuerySnapshot", 1, e);
    return this.yf === e.yf && Qn(this.$f, e.$f) && this.kf.isEqual(e.kf) && this.d_ === e.d_;
  }, t.prototype.Lf = function (t, e, n) {
    return new ra(this.yf, t.key, t, e, n, this.d_);
  }, t;
}(),
    la =
/** @class */
function (e) {
  function n(t, n, r) {
    var i = this;
    if ((i = e.call(this, Un(t), n, r) || this).Bf = t, t.length % 2 != 1) throw new c(a.INVALID_ARGUMENT, "Invalid collection reference. Collection references must have an odd number of segments, but " + t.R() + " has " + t.length);
    return i;
  }

  return t.__extends(n, e), Object.defineProperty(n.prototype, "id", {
    get: function get() {
      return this.Ff.path._();
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(n.prototype, "parent", {
    get: function get() {
      var t = this.Ff.path.h();
      return t.m() ? null : new ta(new A(t), this.firestore,
      /* converter= */
      null);
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(n.prototype, "path", {
    get: function get() {
      return this.Ff.path.R();
    },
    enumerable: !1,
    configurable: !0
  }), n.prototype.doc = function (t) {
    L("CollectionReference.doc", arguments, 0, 1), // We allow omission of 'pathString' but explicitly prohibit passing in both
    // 'undefined' and 'null'.
    0 === arguments.length && (t = Q.k()), k("CollectionReference.doc", "non-empty string", 1, t);
    var e = E.g(t);
    return ta.Rf(this.Ff.path.child(e), this.firestore, this.d_);
  }, n.prototype.add = function (t) {
    D("CollectionReference.add", arguments, 1);
    var e = this.d_ ? this.d_.toFirestore(t) : t;
    k("CollectionReference.add", "object", 1, e);
    var n = this.doc(); // Call set() with the converted value directly to avoid calling toFirestore() a second time.

    return new ta(n.f_, this.firestore, null).set(e).then(function () {
      return n;
    });
  }, n.prototype.withConverter = function (t) {
    return new n(this.Bf, this.firestore, t);
  }, n;
}(ha);

function pa(t, e) {
  if (void 0 === e) return {
    merge: !1
  };
  if (j(t, e, ["merge", "mergeFields"]), P(t, "boolean", "merge", e.merge), function (t, e, n, r, i) {
    void 0 !== r && function (t, e, n, r, i) {
      if (!(r instanceof Array)) throw new c(a.INVALID_ARGUMENT, "Function " + t + "() requires its " + e + " option to be an array, but it was: " + M(r));

      for (var o = 0; o < r.length; ++o) {
        if (!i(r[o])) throw new c(a.INVALID_ARGUMENT, "Function " + t + "() requires all " + e + " elements to be " + n + ", but the value at index " + o + " was: " + M(r[o]));
      }
    }(t, e, n, r, i);
  }(t, "mergeFields", "a string or a FieldPath", e.mergeFields, function (t) {
    return "string" == typeof t || t instanceof du;
  }), void 0 !== e.mergeFields && void 0 !== e.merge) throw new c(a.INVALID_ARGUMENT, "Invalid options passed to function " + t + '(): You cannot specify both "merge" and "mergeFields".');
  return e;
}

function da(t, e) {
  return void 0 === e ? {} : (j(t, e, ["serverTimestamps"]), V(t, 0, "serverTimestamps", e.serverTimestamps, ["estimate", "previous", "none"]), e);
}

function va(t, e) {
  R(t, "object", 1, e), e && (j(t, e, ["source"]), V(t, 0, "source", e.source, ["default", "server", "cache"]));
}

function ya(t, e, n) {
  if (e instanceof Au) {
    if (e.firestore !== n) throw new c(a.INVALID_ARGUMENT, "Provided document reference is from a different Firestore instance.");
    return e;
  }

  throw G(t, "DocumentReference", 1, e);
}

function ga(t) {
  switch (t) {
    case 0
    /* Added */
    :
      return "added";

    case 2
    /* Modified */
    :
    case 3
    /* Metadata */
    :
      return "modified";

    case 1
    /* Removed */
    :
      return "removed";

    default:
      return y();
  }
}
/**
 * Converts custom model object of type T into DocumentData by applying the
 * converter if it exists.
 *
 * This function is used when converting user objects to DocumentData
 * because we want to provide the user with a more specific error message if
 * their set() or fails due to invalid data originating from a toFirestore()
 * call.
 */


function ma(t, e, n) {
  // Cast to `any` in order to satisfy the union type constraint on
  // toFirestore().
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  return t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e;
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var wa =
/** @class */
function (e) {
  function n() {
    return null !== e && e.apply(this, arguments) || this;
  }

  return t.__extends(n, e), n.serverTimestamp = function () {
    S("FieldValue.serverTimestamp", arguments);
    var t = new wu("serverTimestamp");
    return t.e_ = "FieldValue.serverTimestamp", new n(t);
  }, n.delete = function () {
    S("FieldValue.delete", arguments);
    var t = new gu("deleteField");
    return t.e_ = "FieldValue.delete", new n(t);
  }, n.arrayUnion = function () {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    }

    x("FieldValue.arrayUnion", arguments, 1);

    var r =
    /**
    * Returns a special value that can be used with {@link setDoc()} or {@link
    * updateDoc()} that tells the server to union the given elements with any array
    * value that already exists on the server. Each specified element that doesn't
    * already exist in the array will be added to the end. If the field being
    * modified is not already an array it will be overwritten with an array
    * containing exactly the specified elements.
    *
    * @param elements The elements to union into the array.
    * @return The `FieldValue` sentinel for use in a call to `setDoc()` or
    * `updateDoc()`.
    */
    function () {
      for (var t = [], e = 0; e < arguments.length; e++) {
        t[e] = arguments[e];
      } // NOTE: We don't actually parse the data until it's used in set() or
      // update() since we'd need the Firestore instance to do this.


      return x("arrayUnion()", arguments, 1), new _u("arrayUnion", t);
    }.apply(void 0, t);

    return r.e_ = "FieldValue.arrayUnion", new n(r);
  }, n.arrayRemove = function () {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    }

    x("FieldValue.arrayRemove", arguments, 1);

    var r = function () {
      for (var t = [], e = 0; e < arguments.length; e++) {
        t[e] = arguments[e];
      } // NOTE: We don't actually parse the data until it's used in set() or
      // update() since we'd need the Firestore instance to do this.


      return x("arrayRemove()", arguments, 1), new bu("arrayRemove", t);
    }.apply(void 0, t);

    return r.e_ = "FieldValue.arrayRemove", new n(r);
  }, n.increment = function (t) {
    k("FieldValue.increment", "number", 1, t), D("FieldValue.increment", arguments, 1);

    var e = function (t) {
      return new Iu("increment", t);
    }(t);

    return e.e_ = "FieldValue.increment", new n(e);
  }, n.prototype.isEqual = function (t) {
    return this.l_.isEqual(t.l_);
  }, n;
}(Tu),
    _a = {
  Firestore: Xu,
  GeoPoint: Eu,
  Timestamp: ot,
  Blob: et,
  Transaction: Ju,
  WriteBatch: Zu,
  DocumentReference: ta,
  DocumentSnapshot: na,
  Query: ha,
  QueryDocumentSnapshot: ra,
  QuerySnapshot: fa,
  CollectionReference: la,
  FieldPath: du,
  FieldValue: wa,
  setLogLevel: Xu.setLogLevel,
  CACHE_SIZE_UNLIMITED: Yu
};
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Configures Firestore as part of the Firebase SDK by calling registerService.
 *
 * @param firebase The FirebaseNamespace to register Firestore with
 * @param firestoreFactory A factory function that returns a new Firestore
 *    instance.
 */

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Registers the main Firestore build with the components framework.
 * Persistence can be enabled via `firebase.firestore().enablePersistence()`.
 */


function ba(t) {
  !function (t, e) {
    t.INTERNAL.registerComponent(new o.Component("firestore", function (t) {
      return function (t, e) {
        var n = new fu(),
            r = new hu(n);
        return new Xu(t, e, r, n);
      }(t.getProvider("app").getImmediate(), t.getProvider("auth-internal"));
    }, "PUBLIC"
    /* PUBLIC */
    ).setServiceProps(Object.assign({}, _a)));
  }(t), t.registerVersion("@firebase/firestore", "1.18.0");
}

ba(u.default), exports.__PRIVATE_registerFirestore = ba;

/***/ }),

/***/ "6eBy":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/debounce.js ***!
  \*******************************************************************/
/*! exports provided: debounce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return debounce; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");







function debounce(durationSelector) {
  return function (source) {
    return source.lift(new DebounceOperator(durationSelector));
  };
}

var DebounceOperator = /*#__PURE__*/function () {
  function DebounceOperator(durationSelector) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, DebounceOperator);

    this.durationSelector = durationSelector;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(DebounceOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));
    }
  }]);

  return DebounceOperator;
}();

var DebounceSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(DebounceSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(DebounceSubscriber);

  function DebounceSubscriber(destination, durationSelector) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, DebounceSubscriber);

    _this = _super.call(this, destination);
    _this.durationSelector = durationSelector;
    _this.hasValue = false;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(DebounceSubscriber, [{
    key: "_next",
    value: function _next(value) {
      try {
        var result = this.durationSelector.call(this, value);

        if (result) {
          this._tryNext(value, result);
        }
      } catch (err) {
        this.destination.error(err);
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.emitValue();
      this.destination.complete();
    }
  }, {
    key: "_tryNext",
    value: function _tryNext(value, duration) {
      var subscription = this.durationSubscription;
      this.value = value;
      this.hasValue = true;

      if (subscription) {
        subscription.unsubscribe();
        this.remove(subscription);
      }

      subscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_6__["innerSubscribe"])(duration, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_6__["SimpleInnerSubscriber"](this));

      if (subscription && !subscription.closed) {
        this.add(this.durationSubscription = subscription);
      }
    }
  }, {
    key: "notifyNext",
    value: function notifyNext() {
      this.emitValue();
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {
      this.emitValue();
    }
  }, {
    key: "emitValue",
    value: function emitValue() {
      if (this.hasValue) {
        var value = this.value;
        var subscription = this.durationSubscription;

        if (subscription) {
          this.durationSubscription = undefined;
          subscription.unsubscribe();
          this.remove(subscription);
        }

        this.value = undefined;
        this.hasValue = false;

        Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(DebounceSubscriber.prototype), "_next", this).call(this, value);
      }
    }
  }]);

  return DebounceSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_6__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "6epW":
/*!*********************************************!*\
  !*** ./src/app/auth/auth-routing.module.ts ***!
  \*********************************************/
/*! exports provided: AuthRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthRoutingModule", function() { return AuthRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./login/login.component */ "bsvf");





var routes = [
    { path: '', component: _login_login_component__WEBPACK_IMPORTED_MODULE_2__["LoginComponent"] },
    { path: 'login', component: _login_login_component__WEBPACK_IMPORTED_MODULE_2__["LoginComponent"] }
];
var AuthRoutingModule = /** @class */ /*@__PURE__*/ (function () {
    function AuthRoutingModule() {
    }
    AuthRoutingModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: AuthRoutingModule });
    AuthRoutingModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function AuthRoutingModule_Factory(t) { return new (t || AuthRoutingModule)(); }, imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)], _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]] });
    return AuthRoutingModule;
}());

(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](AuthRoutingModule, { imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]], exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]] }); })();



/***/ }),

/***/ "6nsN":
/*!******************************************************!*\
  !*** ./node_modules/firebase/auth/dist/index.esm.js ***!
  \******************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _firebase_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/auth */ "LOEa");
/* harmony import */ var _firebase_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_firebase_auth__WEBPACK_IMPORTED_MODULE_0__);


/***/ }),

/***/ "7+OI":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/isObservable.js ***!
  \******************************************************************/
/*! exports provided: isObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObservable", function() { return isObservable; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");

function isObservable(obj) {
  return !!obj && (obj instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"] || typeof obj.lift === 'function' && typeof obj.subscribe === 'function');
}

/***/ }),

/***/ "7HRe":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduled/scheduled.js ***!
  \********************************************************************/
/*! exports provided: scheduled */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduled", function() { return scheduled; });
/* harmony import */ var _scheduleObservable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scheduleObservable */ "5B2Y");
/* harmony import */ var _schedulePromise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schedulePromise */ "4yVj");
/* harmony import */ var _scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scheduleArray */ "jZKg");
/* harmony import */ var _scheduleIterable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scheduleIterable */ "MBAA");
/* harmony import */ var _util_isInteropObservable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isInteropObservable */ "QIAL");
/* harmony import */ var _util_isPromise__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isPromise */ "c2HN");
/* harmony import */ var _util_isArrayLike__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/isArrayLike */ "I55L");
/* harmony import */ var _util_isIterable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/isIterable */ "CMyj");








function scheduled(input, scheduler) {
  if (input != null) {
    if (Object(_util_isInteropObservable__WEBPACK_IMPORTED_MODULE_4__["isInteropObservable"])(input)) {
      return Object(_scheduleObservable__WEBPACK_IMPORTED_MODULE_0__["scheduleObservable"])(input, scheduler);
    } else if (Object(_util_isPromise__WEBPACK_IMPORTED_MODULE_5__["isPromise"])(input)) {
      return Object(_schedulePromise__WEBPACK_IMPORTED_MODULE_1__["schedulePromise"])(input, scheduler);
    } else if (Object(_util_isArrayLike__WEBPACK_IMPORTED_MODULE_6__["isArrayLike"])(input)) {
      return Object(_scheduleArray__WEBPACK_IMPORTED_MODULE_2__["scheduleArray"])(input, scheduler);
    } else if (Object(_util_isIterable__WEBPACK_IMPORTED_MODULE_7__["isIterable"])(input) || typeof input === 'string') {
      return Object(_scheduleIterable__WEBPACK_IMPORTED_MODULE_3__["scheduleIterable"])(input, scheduler);
    }
  }

  throw new TypeError((input !== null && typeof input || input) + ' is not observable');
}

/***/ }),

/***/ "7Hc7":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduler/asap.js ***!
  \***************************************************************/
/*! exports provided: asapScheduler, asap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asapScheduler", function() { return asapScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asap", function() { return asap; });
/* harmony import */ var _AsapAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AsapAction */ "Pz8W");
/* harmony import */ var _AsapScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsapScheduler */ "RUbi");


var asapScheduler = /*@__PURE__*/new _AsapScheduler__WEBPACK_IMPORTED_MODULE_1__["AsapScheduler"](_AsapAction__WEBPACK_IMPORTED_MODULE_0__["AsapAction"]);
var asap = asapScheduler;

/***/ }),

/***/ "7o/Q":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/Subscriber.js ***!
  \***********************************************************/
/*! exports provided: Subscriber, SafeSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subscriber", function() { return Subscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SafeSubscriber", function() { return SafeSubscriber; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util/isFunction */ "n6bG");
/* harmony import */ var _Observer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Observer */ "gRHU");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Subscription */ "quSY");
/* harmony import */ var _internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../internal/symbol/rxSubscriber */ "2QA8");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./config */ "2fFW");
/* harmony import */ var _util_hostReportError__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./util/hostReportError */ "NJ4a");













var Subscriber = /*#__PURE__*/function (_Subscription) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(Subscriber, _Subscription);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(Subscriber);

  function Subscriber(destinationOrNext, error, complete) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Subscriber);

    _this = _super.call(this);
    _this.syncErrorValue = null;
    _this.syncErrorThrown = false;
    _this.syncErrorThrowable = false;
    _this.isStopped = false;

    switch (arguments.length) {
      case 0:
        _this.destination = _Observer__WEBPACK_IMPORTED_MODULE_8__["empty"];
        break;

      case 1:
        if (!destinationOrNext) {
          _this.destination = _Observer__WEBPACK_IMPORTED_MODULE_8__["empty"];
          break;
        }

        if (typeof destinationOrNext === 'object') {
          if (destinationOrNext instanceof Subscriber) {
            _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;
            _this.destination = destinationOrNext;
            destinationOrNext.add(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this));
          } else {
            _this.syncErrorThrowable = true;
            _this.destination = new SafeSubscriber(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this), destinationOrNext);
          }

          break;
        }

      default:
        _this.syncErrorThrowable = true;
        _this.destination = new SafeSubscriber(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this), destinationOrNext, error, complete);
        break;
    }

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Subscriber, [{
    key: _internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_10__["rxSubscriber"],
    value: function value() {
      return this;
    }
  }, {
    key: "next",
    value: function next(value) {
      if (!this.isStopped) {
        this._next(value);
      }
    }
  }, {
    key: "error",
    value: function error(err) {
      if (!this.isStopped) {
        this.isStopped = true;

        this._error(err);
      }
    }
  }, {
    key: "complete",
    value: function complete() {
      if (!this.isStopped) {
        this.isStopped = true;

        this._complete();
      }
    }
  }, {
    key: "unsubscribe",
    value: function unsubscribe() {
      if (this.closed) {
        return;
      }

      this.isStopped = true;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_3__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__["default"])(Subscriber.prototype), "unsubscribe", this).call(this);
    }
  }, {
    key: "_next",
    value: function _next(value) {
      this.destination.next(value);
    }
  }, {
    key: "_error",
    value: function _error(err) {
      this.destination.error(err);
      this.unsubscribe();
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.destination.complete();
      this.unsubscribe();
    }
  }, {
    key: "_unsubscribeAndRecycle",
    value: function _unsubscribeAndRecycle() {
      var _parentOrParents = this._parentOrParents;
      this._parentOrParents = null;
      this.unsubscribe();
      this.closed = false;
      this.isStopped = false;
      this._parentOrParents = _parentOrParents;
      return this;
    }
  }], [{
    key: "create",
    value: function create(next, error, complete) {
      var subscriber = new Subscriber(next, error, complete);
      subscriber.syncErrorThrowable = false;
      return subscriber;
    }
  }]);

  return Subscriber;
}(_Subscription__WEBPACK_IMPORTED_MODULE_9__["Subscription"]);
var SafeSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(SafeSubscriber, _Subscriber);

  var _super2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(SafeSubscriber);

  function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
    var _this2;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, SafeSubscriber);

    _this2 = _super2.call(this);
    _this2._parentSubscriber = _parentSubscriber;
    var next;

    var context = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this2);

    if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_7__["isFunction"])(observerOrNext)) {
      next = observerOrNext;
    } else if (observerOrNext) {
      next = observerOrNext.next;
      error = observerOrNext.error;
      complete = observerOrNext.complete;

      if (observerOrNext !== _Observer__WEBPACK_IMPORTED_MODULE_8__["empty"]) {
        context = Object.create(observerOrNext);

        if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_7__["isFunction"])(context.unsubscribe)) {
          _this2.add(context.unsubscribe.bind(context));
        }

        context.unsubscribe = _this2.unsubscribe.bind(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this2));
      }
    }

    _this2._context = context;
    _this2._next = next;
    _this2._error = error;
    _this2._complete = complete;
    return _this2;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(SafeSubscriber, [{
    key: "next",
    value: function next(value) {
      if (!this.isStopped && this._next) {
        var _parentSubscriber = this._parentSubscriber;

        if (!_config__WEBPACK_IMPORTED_MODULE_11__["config"].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
          this.__tryOrUnsub(this._next, value);
        } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
          this.unsubscribe();
        }
      }
    }
  }, {
    key: "error",
    value: function error(err) {
      if (!this.isStopped) {
        var _parentSubscriber = this._parentSubscriber;
        var useDeprecatedSynchronousErrorHandling = _config__WEBPACK_IMPORTED_MODULE_11__["config"].useDeprecatedSynchronousErrorHandling;

        if (this._error) {
          if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
            this.__tryOrUnsub(this._error, err);

            this.unsubscribe();
          } else {
            this.__tryOrSetError(_parentSubscriber, this._error, err);

            this.unsubscribe();
          }
        } else if (!_parentSubscriber.syncErrorThrowable) {
          this.unsubscribe();

          if (useDeprecatedSynchronousErrorHandling) {
            throw err;
          }

          Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_12__["hostReportError"])(err);
        } else {
          if (useDeprecatedSynchronousErrorHandling) {
            _parentSubscriber.syncErrorValue = err;
            _parentSubscriber.syncErrorThrown = true;
          } else {
            Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_12__["hostReportError"])(err);
          }

          this.unsubscribe();
        }
      }
    }
  }, {
    key: "complete",
    value: function complete() {
      var _this3 = this;

      if (!this.isStopped) {
        var _parentSubscriber = this._parentSubscriber;

        if (this._complete) {
          var wrappedComplete = function wrappedComplete() {
            return _this3._complete.call(_this3._context);
          };

          if (!_config__WEBPACK_IMPORTED_MODULE_11__["config"].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
            this.__tryOrUnsub(wrappedComplete);

            this.unsubscribe();
          } else {
            this.__tryOrSetError(_parentSubscriber, wrappedComplete);

            this.unsubscribe();
          }
        } else {
          this.unsubscribe();
        }
      }
    }
  }, {
    key: "__tryOrUnsub",
    value: function __tryOrUnsub(fn, value) {
      try {
        fn.call(this._context, value);
      } catch (err) {
        this.unsubscribe();

        if (_config__WEBPACK_IMPORTED_MODULE_11__["config"].useDeprecatedSynchronousErrorHandling) {
          throw err;
        } else {
          Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_12__["hostReportError"])(err);
        }
      }
    }
  }, {
    key: "__tryOrSetError",
    value: function __tryOrSetError(parent, fn, value) {
      if (!_config__WEBPACK_IMPORTED_MODULE_11__["config"].useDeprecatedSynchronousErrorHandling) {
        throw new Error('bad call');
      }

      try {
        fn.call(this._context, value);
      } catch (err) {
        if (_config__WEBPACK_IMPORTED_MODULE_11__["config"].useDeprecatedSynchronousErrorHandling) {
          parent.syncErrorValue = err;
          parent.syncErrorThrown = true;
          return true;
        } else {
          Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_12__["hostReportError"])(err);
          return true;
        }
      }

      return false;
    }
  }, {
    key: "_unsubscribe",
    value: function _unsubscribe() {
      var _parentSubscriber = this._parentSubscriber;
      this._context = null;
      this._parentSubscriber = null;

      _parentSubscriber.unsubscribe();
    }
  }]);

  return SafeSubscriber;
}(Subscriber);

/***/ }),

/***/ "7ve7":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduler/Action.js ***!
  \*****************************************************************/
/*! exports provided: Action */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Action", function() { return Action; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscription */ "quSY");





var Action = /*#__PURE__*/function (_Subscription) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(Action, _Subscription);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(Action);

  function Action(scheduler, work) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Action);

    return _super.call(this);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Action, [{
    key: "schedule",
    value: function schedule(state) {
      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      return this;
    }
  }]);

  return Action;
}(_Subscription__WEBPACK_IMPORTED_MODULE_4__["Subscription"]);

/***/ }),

/***/ "7wxJ":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/combineAll.js ***!
  \*********************************************************************/
/*! exports provided: combineAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineAll", function() { return combineAll; });
/* harmony import */ var _observable_combineLatest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/combineLatest */ "itXk");

function combineAll(project) {
  return function (source) {
    return source.lift(new _observable_combineLatest__WEBPACK_IMPORTED_MODULE_0__["CombineLatestOperator"](project));
  };
}

/***/ }),

/***/ "8Qeq":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/canReportError.js ***!
  \********************************************************************/
/*! exports provided: canReportError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canReportError", function() { return canReportError; });
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");

function canReportError(observer) {
  while (observer) {
    var _observer = observer,
        closed = _observer.closed,
        destination = _observer.destination,
        isStopped = _observer.isStopped;

    if (closed || isStopped) {
      return false;
    } else if (destination && destination instanceof _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"]) {
      observer = destination;
    } else {
      observer = null;
    }
  }

  return true;
}

/***/ }),

/***/ "9M8c":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/bufferCount.js ***!
  \**********************************************************************/
/*! exports provided: bufferCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bufferCount", function() { return bufferCount; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");







function bufferCount(bufferSize) {
  var startBufferEvery = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  return function bufferCountOperatorFunction(source) {
    return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));
  };
}

var BufferCountOperator = /*#__PURE__*/function () {
  function BufferCountOperator(bufferSize, startBufferEvery) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, BufferCountOperator);

    this.bufferSize = bufferSize;
    this.startBufferEvery = startBufferEvery;

    if (!startBufferEvery || bufferSize === startBufferEvery) {
      this.subscriberClass = BufferCountSubscriber;
    } else {
      this.subscriberClass = BufferSkipCountSubscriber;
    }
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(BufferCountOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));
    }
  }]);

  return BufferCountOperator;
}();

var BufferCountSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(BufferCountSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(BufferCountSubscriber);

  function BufferCountSubscriber(destination, bufferSize) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, BufferCountSubscriber);

    _this = _super.call(this, destination);
    _this.bufferSize = bufferSize;
    _this.buffer = [];
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(BufferCountSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var buffer = this.buffer;
      buffer.push(value);

      if (buffer.length == this.bufferSize) {
        this.destination.next(buffer);
        this.buffer = [];
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      var buffer = this.buffer;

      if (buffer.length > 0) {
        this.destination.next(buffer);
      }

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(BufferCountSubscriber.prototype), "_complete", this).call(this);
    }
  }]);

  return BufferCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_6__["Subscriber"]);

var BufferSkipCountSubscriber = /*#__PURE__*/function (_Subscriber2) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(BufferSkipCountSubscriber, _Subscriber2);

  var _super2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(BufferSkipCountSubscriber);

  function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {
    var _this2;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, BufferSkipCountSubscriber);

    _this2 = _super2.call(this, destination);
    _this2.bufferSize = bufferSize;
    _this2.startBufferEvery = startBufferEvery;
    _this2.buffers = [];
    _this2.count = 0;
    return _this2;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(BufferSkipCountSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var bufferSize = this.bufferSize,
          startBufferEvery = this.startBufferEvery,
          buffers = this.buffers,
          count = this.count;
      this.count++;

      if (count % startBufferEvery === 0) {
        buffers.push([]);
      }

      for (var i = buffers.length; i--;) {
        var buffer = buffers[i];
        buffer.push(value);

        if (buffer.length === bufferSize) {
          buffers.splice(i, 1);
          this.destination.next(buffer);
        }
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      var buffers = this.buffers,
          destination = this.destination;

      while (buffers.length > 0) {
        var buffer = buffers.shift();

        if (buffer.length > 0) {
          destination.next(buffer);
        }
      }

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(BufferSkipCountSubscriber.prototype), "_complete", this).call(this);
    }
  }]);

  return BufferSkipCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_6__["Subscriber"]);

/***/ }),

/***/ "9ihq":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/elementAt.js ***!
  \********************************************************************/
/*! exports provided: elementAt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elementAt", function() { return elementAt; });
/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ "4I5i");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ "pLZG");
/* harmony import */ var _throwIfEmpty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./throwIfEmpty */ "XDbj");
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaultIfEmpty */ "xbPD");
/* harmony import */ var _take__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./take */ "IzEk");





function elementAt(index, defaultValue) {
  if (index < 0) {
    throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_0__["ArgumentOutOfRangeError"]();
  }

  var hasDefaultValue = arguments.length >= 2;
  return function (source) {
    return source.pipe(Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(function (v, i) {
      return i === index;
    }), Object(_take__WEBPACK_IMPORTED_MODULE_4__["take"])(1), hasDefaultValue ? Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__["defaultIfEmpty"])(defaultValue) : Object(_throwIfEmpty__WEBPACK_IMPORTED_MODULE_2__["throwIfEmpty"])(function () {
      return new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_0__["ArgumentOutOfRangeError"]();
    }));
  };
}

/***/ }),

/***/ "9ppp":
/*!*****************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/ObjectUnsubscribedError.js ***!
  \*****************************************************************************/
/*! exports provided: ObjectUnsubscribedError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObjectUnsubscribedError", function() { return ObjectUnsubscribedError; });
var ObjectUnsubscribedErrorImpl = /*@__PURE__*/function () {
  function ObjectUnsubscribedErrorImpl() {
    Error.call(this);
    this.message = 'object unsubscribed';
    this.name = 'ObjectUnsubscribedError';
    return this;
  }

  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);
  return ObjectUnsubscribedErrorImpl;
}();

var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;

/***/ }),

/***/ "A3iJ":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/partition.js ***!
  \********************************************************************/
/*! exports provided: partition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return partition; });
/* harmony import */ var _util_not__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/not */ "F97/");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ "pLZG");


function partition(predicate, thisArg) {
  return function (source) {
    return [Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(predicate, thisArg)(source), Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(Object(_util_not__WEBPACK_IMPORTED_MODULE_0__["not"])(predicate, thisArg))(source)];
  };
}

/***/ }),

/***/ "AytR":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
var environment = {
    production: true,
    firebaseConfig: {
        apiKey: "AIzaSyB4IPjXueOGVW4Nx7FSBqAxQjMEjOJQ8rE",
        authDomain: "test-project-cd799.firebaseapp.com",
        databaseURL: "https://test-project-cd799.firebaseio.com",
        projectId: "test-project-cd799",
        storageBucket: "test-project-cd799.appspot.com",
        messagingSenderId: "357081184979",
        appId: "1:357081184979:web:f7d66ea94167b5e1e9f226",
        measurementId: "G-GEPRXWRSGN"
    }
};



/***/ }),

/***/ "BFxc":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/takeLast.js ***!
  \*******************************************************************/
/*! exports provided: takeLast */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "takeLast", function() { return takeLast; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ "4I5i");
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../observable/empty */ "EY2u");







function takeLast(count) {
  return function takeLastOperatorFunction(source) {
    if (count === 0) {
      return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_6__["empty"])();
    } else {
      return source.lift(new TakeLastOperator(count));
    }
  };
}

var TakeLastOperator = /*#__PURE__*/function () {
  function TakeLastOperator(total) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, TakeLastOperator);

    this.total = total;

    if (this.total < 0) {
      throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_5__["ArgumentOutOfRangeError"]();
    }
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(TakeLastOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new TakeLastSubscriber(subscriber, this.total));
    }
  }]);

  return TakeLastOperator;
}();

var TakeLastSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(TakeLastSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(TakeLastSubscriber);

  function TakeLastSubscriber(destination, total) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, TakeLastSubscriber);

    _this = _super.call(this, destination);
    _this.total = total;
    _this.ring = new Array();
    _this.count = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(TakeLastSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var ring = this.ring;
      var total = this.total;
      var count = this.count++;

      if (ring.length < total) {
        ring.push(value);
      } else {
        var index = count % total;
        ring[index] = value;
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      var destination = this.destination;
      var count = this.count;

      if (count > 0) {
        var total = this.count >= this.total ? this.total : this.count;
        var ring = this.ring;

        for (var i = 0; i < total; i++) {
          var idx = count++ % total;
          destination.next(ring[idx]);
        }
      }

      destination.complete();
    }
  }]);

  return TakeLastSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "BsWD":
/*!*******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _unsupportedIterableToArray; });
/* harmony import */ var _babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/arrayLikeToArray */ "a3WO");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return Object(_babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Object(_babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(o, minLen);
}

/***/ }),

/***/ "CMyj":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/isIterable.js ***!
  \****************************************************************/
/*! exports provided: isIterable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIterable", function() { return isIterable; });
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/iterator */ "Lhse");

function isIterable(input) {
  return input && typeof input[_symbol_iterator__WEBPACK_IMPORTED_MODULE_0__["iterator"]] === 'function';
}

/***/ }),

/***/ "CRDf":
/*!***************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/subscribeToObservable.js ***!
  \***************************************************************************/
/*! exports provided: subscribeToObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToObservable", function() { return subscribeToObservable; });
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/observable */ "kJWO");

var subscribeToObservable = function subscribeToObservable(obj) {
  return function (subscriber) {
    var obs = obj[_symbol_observable__WEBPACK_IMPORTED_MODULE_0__["observable"]]();

    if (typeof obs.subscribe !== 'function') {
      throw new TypeError('Provided object does not correctly implement Symbol.observable');
    } else {
      return obs.subscribe(subscriber);
    }
  };
};

/***/ }),

/***/ "CfBk":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _iterableToArrayLimit; });
function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

/***/ }),

/***/ "Cfvw":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/from.js ***!
  \****************************************************************/
/*! exports provided: from */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "from", function() { return from; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeTo */ "SeVD");
/* harmony import */ var _scheduled_scheduled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduled/scheduled */ "7HRe");



function from(input, scheduler) {
  if (!scheduler) {
    if (input instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"]) {
      return input;
    }

    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__["subscribeTo"])(input));
  } else {
    return Object(_scheduled_scheduled__WEBPACK_IMPORTED_MODULE_2__["scheduled"])(input, scheduler);
  }
}

/***/ }),

/***/ "CqXF":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/mapTo.js ***!
  \****************************************************************/
/*! exports provided: mapTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapTo", function() { return mapTo; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");





function mapTo(value) {
  return function (source) {
    return source.lift(new MapToOperator(value));
  };
}

var MapToOperator = /*#__PURE__*/function () {
  function MapToOperator(value) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, MapToOperator);

    this.value = value;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(MapToOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new MapToSubscriber(subscriber, this.value));
    }
  }]);

  return MapToOperator;
}();

var MapToSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(MapToSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(MapToSubscriber);

  function MapToSubscriber(destination, value) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, MapToSubscriber);

    _this = _super.call(this, destination);
    _this.value = value;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(MapToSubscriber, [{
    key: "_next",
    value: function _next(x) {
      this.destination.next(this.value);
    }
  }]);

  return MapToSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "Czum":
/*!*******************************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/es2015/firebase.app.module.js ***!
  \*******************************************************************************/
/*! exports provided: FirebaseOptionsToken, FirebaseNameOrConfigToken, FIREBASE_OPTIONS, FIREBASE_APP_NAME, FirebaseApp, VERSION, _firebaseAppFactory, AngularFireModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FirebaseOptionsToken", function() { return FirebaseOptionsToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FirebaseNameOrConfigToken", function() { return FirebaseNameOrConfigToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FIREBASE_OPTIONS", function() { return FIREBASE_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FIREBASE_APP_NAME", function() { return FIREBASE_APP_NAME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FirebaseApp", function() { return FirebaseApp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_firebaseAppFactory", function() { return _firebaseAppFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AngularFireModule", function() { return AngularFireModule; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/app */ "Wcq6");
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(firebase_app__WEBPACK_IMPORTED_MODULE_3__);




var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var __metadata = undefined && undefined.__metadata || function (k, v) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var __param = undefined && undefined.__param || function (paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
};

var AngularFireModule_1;


var FirebaseOptionsToken = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["InjectionToken"]('angularfire2.app.options');
var FirebaseNameOrConfigToken = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["InjectionToken"]('angularfire2.app.nameOrConfig');
var FIREBASE_OPTIONS = FirebaseOptionsToken;
var FIREBASE_APP_NAME = FirebaseNameOrConfigToken;
var FirebaseApp = function FirebaseApp() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, FirebaseApp);
};
var VERSION = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["Version"]('5.4.2');
function _firebaseAppFactory(options, zone, nameOrConfig) {
  var name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';
  var config = typeof nameOrConfig === 'object' && nameOrConfig || {};
  config.name = config.name || name;
  var existingApp = firebase_app__WEBPACK_IMPORTED_MODULE_3___default.a.apps.filter(function (app) {
    return app && app.name === config.name;
  })[0];
  return existingApp || zone.runOutsideAngular(function () {
    return firebase_app__WEBPACK_IMPORTED_MODULE_3___default.a.initializeApp(options, config);
  });
}
var FirebaseAppProvider = {
  provide: FirebaseApp,
  useFactory: _firebaseAppFactory,
  deps: [FIREBASE_OPTIONS, _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"], [new _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"](), FIREBASE_APP_NAME]]
};

var AngularFireModule = /*@__PURE__*/function () {
  var AngularFireModule = AngularFireModule_1 = /*#__PURE__*/function () {
    function AngularFireModule(platformId) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, AngularFireModule);

      if (firebase_app__WEBPACK_IMPORTED_MODULE_3___default.a.registerVersion) {
        firebase_app__WEBPACK_IMPORTED_MODULE_3___default.a.registerVersion('angularfire', VERSION.full, platformId.toString());
        firebase_app__WEBPACK_IMPORTED_MODULE_3___default.a.registerVersion('angular', _angular_core__WEBPACK_IMPORTED_MODULE_2__["VERSION"].full);
      }
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(AngularFireModule, null, [{
      key: "initializeApp",
      value: function initializeApp(options, nameOrConfig) {
        return {
          ngModule: AngularFireModule_1,
          providers: [{
            provide: FIREBASE_OPTIONS,
            useValue: options
          }, {
            provide: FIREBASE_APP_NAME,
            useValue: nameOrConfig
          }]
        };
      }
    }]);

    return AngularFireModule;
  }();

  AngularFireModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
    type: AngularFireModule
  });
  AngularFireModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
    factory: function AngularFireModule_Factory(t) {
      return new (t || AngularFireModule)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__["PLATFORM_ID"]));
    },
    providers: [FirebaseAppProvider]
  });
  AngularFireModule = AngularFireModule_1 = __decorate([__param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_2__["PLATFORM_ID"])), __metadata("design:paramtypes", [Object])], AngularFireModule);
  return AngularFireModule;
}();



/***/ }),

/***/ "D0XW":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduler/async.js ***!
  \****************************************************************/
/*! exports provided: asyncScheduler, async */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asyncScheduler", function() { return asyncScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "async", function() { return async; });
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AsyncAction */ "3N8a");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ "IjjT");


var asyncScheduler = /*@__PURE__*/new _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__["AsyncScheduler"](_AsyncAction__WEBPACK_IMPORTED_MODULE_0__["AsyncAction"]);
var async = asyncScheduler;

/***/ }),

/***/ "DH7j":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/isArray.js ***!
  \*************************************************************/
/*! exports provided: isArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return isArray; });
var isArray = /*@__PURE__*/function () {
  return Array.isArray || function (x) {
    return x && typeof x.length === 'number';
  };
}();

/***/ }),

/***/ "DSFK":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _arrayWithHoles; });
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

/***/ }),

/***/ "EQ5u":
/*!*********************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/ConnectableObservable.js ***!
  \*********************************************************************************/
/*! exports provided: ConnectableObservable, connectableObservableDescriptor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectableObservable", function() { return ConnectableObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "connectableObservableDescriptor", function() { return connectableObservableDescriptor; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Subject */ "XNiG");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Subscription */ "quSY");
/* harmony import */ var _operators_refCount__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../operators/refCount */ "x+ZX");











var ConnectableObservable = /*#__PURE__*/function (_Observable) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(ConnectableObservable, _Observable);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(ConnectableObservable);

  function ConnectableObservable(source, subjectFactory) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ConnectableObservable);

    _this = _super.call(this);
    _this.source = source;
    _this.subjectFactory = subjectFactory;
    _this._refCount = 0;
    _this._isComplete = false;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ConnectableObservable, [{
    key: "_subscribe",
    value: function _subscribe(subscriber) {
      return this.getSubject().subscribe(subscriber);
    }
  }, {
    key: "getSubject",
    value: function getSubject() {
      var subject = this._subject;

      if (!subject || subject.isStopped) {
        this._subject = this.subjectFactory();
      }

      return this._subject;
    }
  }, {
    key: "connect",
    value: function connect() {
      var connection = this._connection;

      if (!connection) {
        this._isComplete = false;
        connection = this._connection = new _Subscription__WEBPACK_IMPORTED_MODULE_9__["Subscription"]();
        connection.add(this.source.subscribe(new ConnectableSubscriber(this.getSubject(), this)));

        if (connection.closed) {
          this._connection = null;
          connection = _Subscription__WEBPACK_IMPORTED_MODULE_9__["Subscription"].EMPTY;
        }
      }

      return connection;
    }
  }, {
    key: "refCount",
    value: function refCount() {
      return Object(_operators_refCount__WEBPACK_IMPORTED_MODULE_10__["refCount"])()(this);
    }
  }]);

  return ConnectableObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_7__["Observable"]);
var connectableObservableDescriptor = /*@__PURE__*/function () {
  var connectableProto = ConnectableObservable.prototype;
  return {
    operator: {
      value: null
    },
    _refCount: {
      value: 0,
      writable: true
    },
    _subject: {
      value: null,
      writable: true
    },
    _connection: {
      value: null,
      writable: true
    },
    _subscribe: {
      value: connectableProto._subscribe
    },
    _isComplete: {
      value: connectableProto._isComplete,
      writable: true
    },
    getSubject: {
      value: connectableProto.getSubject
    },
    connect: {
      value: connectableProto.connect
    },
    refCount: {
      value: connectableProto.refCount
    }
  };
}();

var ConnectableSubscriber = /*#__PURE__*/function (_SubjectSubscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(ConnectableSubscriber, _SubjectSubscriber);

  var _super2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(ConnectableSubscriber);

  function ConnectableSubscriber(destination, connectable) {
    var _this2;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ConnectableSubscriber);

    _this2 = _super2.call(this, destination);
    _this2.connectable = connectable;
    return _this2;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ConnectableSubscriber, [{
    key: "_error",
    value: function _error(err) {
      this._unsubscribe();

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(ConnectableSubscriber.prototype), "_error", this).call(this, err);
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.connectable._isComplete = true;

      this._unsubscribe();

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(ConnectableSubscriber.prototype), "_complete", this).call(this);
    }
  }, {
    key: "_unsubscribe",
    value: function _unsubscribe() {
      var connectable = this.connectable;

      if (connectable) {
        this.connectable = null;
        var connection = connectable._connection;
        connectable._refCount = 0;
        connectable._subject = null;
        connectable._connection = null;

        if (connection) {
          connection.unsubscribe();
        }
      }
    }
  }]);

  return ConnectableSubscriber;
}(_Subject__WEBPACK_IMPORTED_MODULE_6__["SubjectSubscriber"]);

var RefCountOperator = /*#__PURE__*/function () {
  function RefCountOperator(connectable) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, RefCountOperator);

    this.connectable = connectable;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(RefCountOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      var connectable = this.connectable;
      connectable._refCount++;
      var refCounter = new RefCountSubscriber(subscriber, connectable);
      var subscription = source.subscribe(refCounter);

      if (!refCounter.closed) {
        refCounter.connection = connectable.connect();
      }

      return subscription;
    }
  }]);

  return RefCountOperator;
}();

var RefCountSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(RefCountSubscriber, _Subscriber);

  var _super3 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(RefCountSubscriber);

  function RefCountSubscriber(destination, connectable) {
    var _this3;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, RefCountSubscriber);

    _this3 = _super3.call(this, destination);
    _this3.connectable = connectable;
    return _this3;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(RefCountSubscriber, [{
    key: "_unsubscribe",
    value: function _unsubscribe() {
      var connectable = this.connectable;

      if (!connectable) {
        this.connection = null;
        return;
      }

      this.connectable = null;
      var refCount = connectable._refCount;

      if (refCount <= 0) {
        this.connection = null;
        return;
      }

      connectable._refCount = refCount - 1;

      if (refCount > 1) {
        this.connection = null;
        return;
      }

      var connection = this.connection;
      var sharedConnection = connectable._connection;
      this.connection = null;

      if (sharedConnection && (!connection || sharedConnection === connection)) {
        sharedConnection.unsubscribe();
      }
    }
  }]);

  return RefCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_8__["Subscriber"]);

/***/ }),

/***/ "EY2u":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/empty.js ***!
  \*****************************************************************/
/*! exports provided: EMPTY, empty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EMPTY", function() { return EMPTY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return empty; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");

var EMPTY = /*@__PURE__*/new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
  return subscriber.complete();
});
function empty(scheduler) {
  return scheduler ? emptyScheduled(scheduler) : EMPTY;
}

function emptyScheduled(scheduler) {
  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    return scheduler.schedule(function () {
      return subscriber.complete();
    });
  });
}

/***/ }),

/***/ "F97/":
/*!*********************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/not.js ***!
  \*********************************************************/
/*! exports provided: not */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "not", function() { return not; });
function not(pred, thisArg) {
  function notPred() {
    return !notPred.pred.apply(notPred.thisArg, arguments);
  }

  notPred.pred = pred;
  notPred.thisArg = thisArg;
  return notPred;
}

/***/ }),

/***/ "FD9M":
/*!***********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/bufferToggle.js ***!
  \***********************************************************************/
/*! exports provided: bufferToggle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bufferToggle", function() { return bufferToggle; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Subscription */ "quSY");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/subscribeToResult */ "ZUHj");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../OuterSubscriber */ "l7GE");










function bufferToggle(openings, closingSelector) {
  return function bufferToggleOperatorFunction(source) {
    return source.lift(new BufferToggleOperator(openings, closingSelector));
  };
}

var BufferToggleOperator = /*#__PURE__*/function () {
  function BufferToggleOperator(openings, closingSelector) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, BufferToggleOperator);

    this.openings = openings;
    this.closingSelector = closingSelector;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(BufferToggleOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));
    }
  }]);

  return BufferToggleOperator;
}();

var BufferToggleSubscriber = /*#__PURE__*/function (_OuterSubscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(BufferToggleSubscriber, _OuterSubscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(BufferToggleSubscriber);

  function BufferToggleSubscriber(destination, openings, closingSelector) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, BufferToggleSubscriber);

    _this = _super.call(this, destination);
    _this.closingSelector = closingSelector;
    _this.contexts = [];

    _this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_8__["subscribeToResult"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this), openings));

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(BufferToggleSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var contexts = this.contexts;
      var len = contexts.length;

      for (var i = 0; i < len; i++) {
        contexts[i].buffer.push(value);
      }
    }
  }, {
    key: "_error",
    value: function _error(err) {
      var contexts = this.contexts;

      while (contexts.length > 0) {
        var context = contexts.shift();
        context.subscription.unsubscribe();
        context.buffer = null;
        context.subscription = null;
      }

      this.contexts = null;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(BufferToggleSubscriber.prototype), "_error", this).call(this, err);
    }
  }, {
    key: "_complete",
    value: function _complete() {
      var contexts = this.contexts;

      while (contexts.length > 0) {
        var context = contexts.shift();
        this.destination.next(context.buffer);
        context.subscription.unsubscribe();
        context.buffer = null;
        context.subscription = null;
      }

      this.contexts = null;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(BufferToggleSubscriber.prototype), "_complete", this).call(this);
    }
  }, {
    key: "notifyNext",
    value: function notifyNext(outerValue, innerValue) {
      outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete(innerSub) {
      this.closeBuffer(innerSub.context);
    }
  }, {
    key: "openBuffer",
    value: function openBuffer(value) {
      try {
        var closingSelector = this.closingSelector;
        var closingNotifier = closingSelector.call(this, value);

        if (closingNotifier) {
          this.trySubscribe(closingNotifier);
        }
      } catch (err) {
        this._error(err);
      }
    }
  }, {
    key: "closeBuffer",
    value: function closeBuffer(context) {
      var contexts = this.contexts;

      if (contexts && context) {
        var buffer = context.buffer,
            subscription = context.subscription;
        this.destination.next(buffer);
        contexts.splice(contexts.indexOf(context), 1);
        this.remove(subscription);
        subscription.unsubscribe();
      }
    }
  }, {
    key: "trySubscribe",
    value: function trySubscribe(closingNotifier) {
      var contexts = this.contexts;
      var buffer = [];
      var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_7__["Subscription"]();
      var context = {
        buffer: buffer,
        subscription: subscription
      };
      contexts.push(context);
      var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_8__["subscribeToResult"])(this, closingNotifier, context);

      if (!innerSubscription || innerSubscription.closed) {
        this.closeBuffer(context);
      } else {
        innerSubscription.context = context;
        this.add(innerSubscription);
        subscription.add(innerSubscription);
      }
    }
  }]);

  return BufferToggleSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_9__["OuterSubscriber"]);

/***/ }),

/***/ "FQpF":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/expand.js ***!
  \*****************************************************************/
/*! exports provided: expand, ExpandOperator, ExpandSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expand", function() { return expand; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpandOperator", function() { return ExpandOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpandSubscriber", function() { return ExpandSubscriber; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");





function expand(project) {
  var concurrent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.POSITIVE_INFINITY;
  var scheduler = arguments.length > 2 ? arguments[2] : undefined;
  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;
  return function (source) {
    return source.lift(new ExpandOperator(project, concurrent, scheduler));
  };
}
var ExpandOperator = /*#__PURE__*/function () {
  function ExpandOperator(project, concurrent, scheduler) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ExpandOperator);

    this.project = project;
    this.concurrent = concurrent;
    this.scheduler = scheduler;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ExpandOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));
    }
  }]);

  return ExpandOperator;
}();
var ExpandSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(ExpandSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(ExpandSubscriber);

  function ExpandSubscriber(destination, project, concurrent, scheduler) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ExpandSubscriber);

    _this = _super.call(this, destination);
    _this.project = project;
    _this.concurrent = concurrent;
    _this.scheduler = scheduler;
    _this.index = 0;
    _this.active = 0;
    _this.hasCompleted = false;

    if (concurrent < Number.POSITIVE_INFINITY) {
      _this.buffer = [];
    }

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ExpandSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var destination = this.destination;

      if (destination.closed) {
        this._complete();

        return;
      }

      var index = this.index++;

      if (this.active < this.concurrent) {
        destination.next(value);

        try {
          var project = this.project;
          var result = project(value, index);

          if (!this.scheduler) {
            this.subscribeToProjection(result, value, index);
          } else {
            var state = {
              subscriber: this,
              result: result,
              value: value,
              index: index
            };
            var _destination = this.destination;

            _destination.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));
          }
        } catch (e) {
          destination.error(e);
        }
      } else {
        this.buffer.push(value);
      }
    }
  }, {
    key: "subscribeToProjection",
    value: function subscribeToProjection(result, value, index) {
      this.active++;
      var destination = this.destination;
      destination.add(Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["innerSubscribe"])(result, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["SimpleInnerSubscriber"](this)));
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.hasCompleted = true;

      if (this.hasCompleted && this.active === 0) {
        this.destination.complete();
      }

      this.unsubscribe();
    }
  }, {
    key: "notifyNext",
    value: function notifyNext(innerValue) {
      this._next(innerValue);
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {
      var buffer = this.buffer;
      this.active--;

      if (buffer && buffer.length > 0) {
        this._next(buffer.shift());
      }

      if (this.hasCompleted && this.active === 0) {
        this.destination.complete();
      }
    }
  }], [{
    key: "dispatch",
    value: function dispatch(arg) {
      var subscriber = arg.subscriber,
          result = arg.result,
          value = arg.value,
          index = arg.index;
      subscriber.subscribeToProjection(result, value, index);
    }
  }]);

  return ExpandSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "FZB8":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/min.js ***!
  \**************************************************************/
/*! exports provided: min */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reduce */ "128B");

function min(comparer) {
  var min = typeof comparer === 'function' ? function (x, y) {
    return comparer(x, y) < 0 ? x : y;
  } : function (x, y) {
    return x < y ? x : y;
  };
  return Object(_reduce__WEBPACK_IMPORTED_MODULE_0__["reduce"])(min);
}

/***/ }),

/***/ "GJmQ":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/takeWhile.js ***!
  \********************************************************************/
/*! exports provided: takeWhile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "takeWhile", function() { return takeWhile; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");





function takeWhile(predicate) {
  var inclusive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  return function (source) {
    return source.lift(new TakeWhileOperator(predicate, inclusive));
  };
}

var TakeWhileOperator = /*#__PURE__*/function () {
  function TakeWhileOperator(predicate, inclusive) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, TakeWhileOperator);

    this.predicate = predicate;
    this.inclusive = inclusive;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(TakeWhileOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));
    }
  }]);

  return TakeWhileOperator;
}();

var TakeWhileSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(TakeWhileSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(TakeWhileSubscriber);

  function TakeWhileSubscriber(destination, predicate, inclusive) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, TakeWhileSubscriber);

    _this = _super.call(this, destination);
    _this.predicate = predicate;
    _this.inclusive = inclusive;
    _this.index = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(TakeWhileSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var destination = this.destination;
      var result;

      try {
        result = this.predicate(value, this.index++);
      } catch (err) {
        destination.error(err);
        return;
      }

      this.nextOrComplete(value, result);
    }
  }, {
    key: "nextOrComplete",
    value: function nextOrComplete(value, predicateResult) {
      var destination = this.destination;

      if (Boolean(predicateResult)) {
        destination.next(value);
      } else {
        if (this.inclusive) {
          destination.next(value);
        }

        destination.complete();
      }
    }
  }]);

  return TakeWhileSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "Gi4w":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/every.js ***!
  \****************************************************************/
/*! exports provided: every */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "every", function() { return every; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");






function every(predicate, thisArg) {
  return function (source) {
    return source.lift(new EveryOperator(predicate, thisArg, source));
  };
}

var EveryOperator = /*#__PURE__*/function () {
  function EveryOperator(predicate, thisArg, source) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, EveryOperator);

    this.predicate = predicate;
    this.thisArg = thisArg;
    this.source = source;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(EveryOperator, [{
    key: "call",
    value: function call(observer, source) {
      return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));
    }
  }]);

  return EveryOperator;
}();

var EverySubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(EverySubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(EverySubscriber);

  function EverySubscriber(destination, predicate, thisArg, source) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, EverySubscriber);

    _this = _super.call(this, destination);
    _this.predicate = predicate;
    _this.thisArg = thisArg;
    _this.source = source;
    _this.index = 0;
    _this.thisArg = thisArg || Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this);
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(EverySubscriber, [{
    key: "notifyComplete",
    value: function notifyComplete(everyValueMatch) {
      this.destination.next(everyValueMatch);
      this.destination.complete();
    }
  }, {
    key: "_next",
    value: function _next(value) {
      var result = false;

      try {
        result = this.predicate.call(this.thisArg, value, this.index++, this.source);
      } catch (err) {
        this.destination.error(err);
        return;
      }

      if (!result) {
        this.notifyComplete(false);
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.notifyComplete(true);
    }
  }]);

  return EverySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_5__["Subscriber"]);

/***/ }),

/***/ "GjHo":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/zip.js ***!
  \**************************************************************/
/*! exports provided: zip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return zip; });
/* harmony import */ var _observable_zip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/zip */ "1uah");

function zip() {
  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {
    observables[_key] = arguments[_key];
  }

  return function zipOperatorFunction(source) {
    return source.lift.call(_observable_zip__WEBPACK_IMPORTED_MODULE_0__["zip"].apply(void 0, [source].concat(observables)));
  };
}

/***/ }),

/***/ "Gqsl":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/repeatWhen.js ***!
  \*********************************************************************/
/*! exports provided: repeatWhen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "repeatWhen", function() { return repeatWhen; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Subject */ "XNiG");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");








function repeatWhen(notifier) {
  return function (source) {
    return source.lift(new RepeatWhenOperator(notifier));
  };
}

var RepeatWhenOperator = /*#__PURE__*/function () {
  function RepeatWhenOperator(notifier) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, RepeatWhenOperator);

    this.notifier = notifier;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RepeatWhenOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));
    }
  }]);

  return RepeatWhenOperator;
}();

var RepeatWhenSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(RepeatWhenSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(RepeatWhenSubscriber);

  function RepeatWhenSubscriber(destination, notifier, source) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, RepeatWhenSubscriber);

    _this = _super.call(this, destination);
    _this.notifier = notifier;
    _this.source = source;
    _this.sourceIsBeingSubscribedTo = true;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RepeatWhenSubscriber, [{
    key: "notifyNext",
    value: function notifyNext() {
      this.sourceIsBeingSubscribedTo = true;
      this.source.subscribe(this);
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {
      if (this.sourceIsBeingSubscribedTo === false) {
        return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(RepeatWhenSubscriber.prototype), "complete", this).call(this);
      }
    }
  }, {
    key: "complete",
    value: function complete() {
      this.sourceIsBeingSubscribedTo = false;

      if (!this.isStopped) {
        if (!this.retries) {
          this.subscribeToRetries();
        }

        if (!this.retriesSubscription || this.retriesSubscription.closed) {
          return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(RepeatWhenSubscriber.prototype), "complete", this).call(this);
        }

        this._unsubscribeAndRecycle();

        this.notifications.next(undefined);
      }
    }
  }, {
    key: "_unsubscribe",
    value: function _unsubscribe() {
      var notifications = this.notifications,
          retriesSubscription = this.retriesSubscription;

      if (notifications) {
        notifications.unsubscribe();
        this.notifications = undefined;
      }

      if (retriesSubscription) {
        retriesSubscription.unsubscribe();
        this.retriesSubscription = undefined;
      }

      this.retries = undefined;
    }
  }, {
    key: "_unsubscribeAndRecycle",
    value: function _unsubscribeAndRecycle() {
      var _unsubscribe = this._unsubscribe;
      this._unsubscribe = null;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(RepeatWhenSubscriber.prototype), "_unsubscribeAndRecycle", this).call(this);

      this._unsubscribe = _unsubscribe;
      return this;
    }
  }, {
    key: "subscribeToRetries",
    value: function subscribeToRetries() {
      this.notifications = new _Subject__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
      var retries;

      try {
        var notifier = this.notifier;
        retries = notifier(this.notifications);
      } catch (e) {
        return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(RepeatWhenSubscriber.prototype), "complete", this).call(this);
      }

      this.retries = retries;
      this.retriesSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_7__["innerSubscribe"])(retries, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_7__["SimpleInnerSubscriber"](this));
    }
  }]);

  return RepeatWhenSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_7__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "GyhO":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/concat.js ***!
  \******************************************************************/
/*! exports provided: concat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return concat; });
/* harmony import */ var _of__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./of */ "LRne");
/* harmony import */ var _operators_concatAll__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operators/concatAll */ "0EUg");


function concat() {
  return Object(_operators_concatAll__WEBPACK_IMPORTED_MODULE_1__["concatAll"])()(_of__WEBPACK_IMPORTED_MODULE_0__["of"].apply(void 0, arguments));
}

/***/ }),

/***/ "HDdC":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/Observable.js ***!
  \***********************************************************/
/*! exports provided: Observable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Observable", function() { return Observable; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _util_canReportError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/canReportError */ "8Qeq");
/* harmony import */ var _util_toSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/toSubscriber */ "WyKG");
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./symbol/observable */ "kJWO");
/* harmony import */ var _util_pipe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/pipe */ "mCNh");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./config */ "2fFW");







var Observable = /*@__PURE__*/function () {
  var Observable = /*#__PURE__*/function () {
    function Observable(subscribe) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Observable);

      this._isScalar = false;

      if (subscribe) {
        this._subscribe = subscribe;
      }
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Observable, [{
      key: "lift",
      value: function lift(operator) {
        var observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
      }
    }, {
      key: "subscribe",
      value: function subscribe(observerOrNext, error, complete) {
        var operator = this.operator;
        var sink = Object(_util_toSubscriber__WEBPACK_IMPORTED_MODULE_3__["toSubscriber"])(observerOrNext, error, complete);

        if (operator) {
          sink.add(operator.call(sink, this.source));
        } else {
          sink.add(this.source || _config__WEBPACK_IMPORTED_MODULE_6__["config"].useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));
        }

        if (_config__WEBPACK_IMPORTED_MODULE_6__["config"].useDeprecatedSynchronousErrorHandling) {
          if (sink.syncErrorThrowable) {
            sink.syncErrorThrowable = false;

            if (sink.syncErrorThrown) {
              throw sink.syncErrorValue;
            }
          }
        }

        return sink;
      }
    }, {
      key: "_trySubscribe",
      value: function _trySubscribe(sink) {
        try {
          return this._subscribe(sink);
        } catch (err) {
          if (_config__WEBPACK_IMPORTED_MODULE_6__["config"].useDeprecatedSynchronousErrorHandling) {
            sink.syncErrorThrown = true;
            sink.syncErrorValue = err;
          }

          if (Object(_util_canReportError__WEBPACK_IMPORTED_MODULE_2__["canReportError"])(sink)) {
            sink.error(err);
          } else {
            console.warn(err);
          }
        }
      }
    }, {
      key: "forEach",
      value: function forEach(next, promiseCtor) {
        var _this = this;

        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
          var subscription;
          subscription = _this.subscribe(function (value) {
            try {
              next(value);
            } catch (err) {
              reject(err);

              if (subscription) {
                subscription.unsubscribe();
              }
            }
          }, reject, resolve);
        });
      }
    }, {
      key: "_subscribe",
      value: function _subscribe(subscriber) {
        var source = this.source;
        return source && source.subscribe(subscriber);
      }
    }, {
      key: _symbol_observable__WEBPACK_IMPORTED_MODULE_4__["observable"],
      value: function value() {
        return this;
      }
    }, {
      key: "pipe",
      value: function pipe() {
        for (var _len = arguments.length, operations = new Array(_len), _key = 0; _key < _len; _key++) {
          operations[_key] = arguments[_key];
        }

        if (operations.length === 0) {
          return this;
        }

        return Object(_util_pipe__WEBPACK_IMPORTED_MODULE_5__["pipeFromArray"])(operations)(this);
      }
    }, {
      key: "toPromise",
      value: function toPromise(promiseCtor) {
        var _this2 = this;

        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
          var value;

          _this2.subscribe(function (x) {
            return value = x;
          }, function (err) {
            return reject(err);
          }, function () {
            return resolve(value);
          });
        });
      }
    }]);

    return Observable;
  }();

  Observable.create = function (subscribe) {
    return new Observable(subscribe);
  };

  return Observable;
}();

function getPromiseCtor(promiseCtor) {
  if (!promiseCtor) {
    promiseCtor = _config__WEBPACK_IMPORTED_MODULE_6__["config"].Promise || Promise;
  }

  if (!promiseCtor) {
    throw new Error('no Promise impl found');
  }

  return promiseCtor;
}

/***/ }),

/***/ "Hh5Z":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduler/QueueScheduler.js ***!
  \*************************************************************************/
/*! exports provided: QueueScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueueScheduler", function() { return QueueScheduler; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AsyncScheduler */ "IjjT");




var QueueScheduler = /*#__PURE__*/function (_AsyncScheduler) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(QueueScheduler, _AsyncScheduler);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(QueueScheduler);

  function QueueScheduler() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, QueueScheduler);

    return _super.apply(this, arguments);
  }

  return QueueScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_3__["AsyncScheduler"]);

/***/ }),

/***/ "Hkhx":
/*!*****************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/onErrorResumeNext.js ***!
  \*****************************************************************************/
/*! exports provided: onErrorResumeNext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return onErrorResumeNext; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./from */ "Cfvw");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isArray */ "DH7j");
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./empty */ "EY2u");





function onErrorResumeNext() {
  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {
    sources[_key] = arguments[_key];
  }

  if (sources.length === 0) {
    return _empty__WEBPACK_IMPORTED_MODULE_4__["EMPTY"];
  }

  var first = sources[0],
      remainder = sources.slice(1);

  if (sources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_3__["isArray"])(first)) {
    return onErrorResumeNext.apply(void 0, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(first));
  }

  return new _Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"](function (subscriber) {
    var subNext = function subNext() {
      return subscriber.add(onErrorResumeNext.apply(void 0, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(remainder)).subscribe(subscriber));
    };

    return Object(_from__WEBPACK_IMPORTED_MODULE_2__["from"])(first).subscribe({
      next: function next(value) {
        subscriber.next(value);
      },
      error: subNext,
      complete: subNext
    });
  });
}

/***/ }),

/***/ "HrJb":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/count.js ***!
  \****************************************************************/
/*! exports provided: count */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "count", function() { return count; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");





function count(predicate) {
  return function (source) {
    return source.lift(new CountOperator(predicate, source));
  };
}

var CountOperator = /*#__PURE__*/function () {
  function CountOperator(predicate, source) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, CountOperator);

    this.predicate = predicate;
    this.source = source;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(CountOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));
    }
  }]);

  return CountOperator;
}();

var CountSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(CountSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(CountSubscriber);

  function CountSubscriber(destination, predicate, source) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, CountSubscriber);

    _this = _super.call(this, destination);
    _this.predicate = predicate;
    _this.source = source;
    _this.count = 0;
    _this.index = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(CountSubscriber, [{
    key: "_next",
    value: function _next(value) {
      if (this.predicate) {
        this._tryPredicate(value);
      } else {
        this.count++;
      }
    }
  }, {
    key: "_tryPredicate",
    value: function _tryPredicate(value) {
      var result;

      try {
        result = this.predicate(value, this.index++, this.source);
      } catch (err) {
        this.destination.error(err);
        return;
      }

      if (result) {
        this.count++;
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.destination.next(this.count);
      this.destination.complete();
    }
  }]);

  return CountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "I55L":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/isArrayLike.js ***!
  \*****************************************************************/
/*! exports provided: isArrayLike */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArrayLike", function() { return isArrayLike; });
var isArrayLike = function isArrayLike(x) {
  return x && typeof x.length === 'number' && typeof x !== 'function';
};

/***/ }),

/***/ "IAdc":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/toArray.js ***!
  \******************************************************************/
/*! exports provided: toArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return toArray; });
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reduce */ "128B");


function toArrayReducer(arr, item, index) {
  if (index === 0) {
    return [item];
  }

  arr.push(item);
  return arr;
}

function toArray() {
  return Object(_reduce__WEBPACK_IMPORTED_MODULE_0__["reduce"])(toArrayReducer, []);
}

/***/ }),

/***/ "IjjT":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduler/AsyncScheduler.js ***!
  \*************************************************************************/
/*! exports provided: AsyncScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncScheduler", function() { return AsyncScheduler; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Scheduler__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Scheduler */ "Y/cZ");








var AsyncScheduler = /*#__PURE__*/function (_Scheduler) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(AsyncScheduler, _Scheduler);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(AsyncScheduler);

  function AsyncScheduler(SchedulerAction) {
    var _this;

    var now = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _Scheduler__WEBPACK_IMPORTED_MODULE_7__["Scheduler"].now;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, AsyncScheduler);

    _this = _super.call(this, SchedulerAction, function () {
      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this)) {
        return AsyncScheduler.delegate.now();
      } else {
        return now();
      }
    });
    _this.actions = [];
    _this.active = false;
    _this.scheduled = undefined;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(AsyncScheduler, [{
    key: "schedule",
    value: function schedule(work) {
      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var state = arguments.length > 2 ? arguments[2] : undefined;

      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {
        return AsyncScheduler.delegate.schedule(work, delay, state);
      } else {
        return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_3__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__["default"])(AsyncScheduler.prototype), "schedule", this).call(this, work, delay, state);
      }
    }
  }, {
    key: "flush",
    value: function flush(action) {
      var actions = this.actions;

      if (this.active) {
        actions.push(action);
        return;
      }

      var error;
      this.active = true;

      do {
        if (error = action.execute(action.state, action.delay)) {
          break;
        }
      } while (action = actions.shift());

      this.active = false;

      if (error) {
        while (action = actions.shift()) {
          action.unsubscribe();
        }

        throw error;
      }
    }
  }]);

  return AsyncScheduler;
}(_Scheduler__WEBPACK_IMPORTED_MODULE_7__["Scheduler"]);

/***/ }),

/***/ "IzEk":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/take.js ***!
  \***************************************************************/
/*! exports provided: take */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "take", function() { return take; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ "4I5i");
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../observable/empty */ "EY2u");







function take(count) {
  return function (source) {
    if (count === 0) {
      return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_6__["empty"])();
    } else {
      return source.lift(new TakeOperator(count));
    }
  };
}

var TakeOperator = /*#__PURE__*/function () {
  function TakeOperator(total) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, TakeOperator);

    this.total = total;

    if (this.total < 0) {
      throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_5__["ArgumentOutOfRangeError"]();
    }
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(TakeOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new TakeSubscriber(subscriber, this.total));
    }
  }]);

  return TakeOperator;
}();

var TakeSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(TakeSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(TakeSubscriber);

  function TakeSubscriber(destination, total) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, TakeSubscriber);

    _this = _super.call(this, destination);
    _this.total = total;
    _this.count = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(TakeSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var total = this.total;
      var count = ++this.count;

      if (count <= total) {
        this.destination.next(value);

        if (count === total) {
          this.destination.complete();
          this.unsubscribe();
        }
      }
    }
  }]);

  return TakeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "JIr8":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/catchError.js ***!
  \*********************************************************************/
/*! exports provided: catchError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "catchError", function() { return catchError; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");







function catchError(selector) {
  return function catchErrorOperatorFunction(source) {
    var operator = new CatchOperator(selector);
    var caught = source.lift(operator);
    return operator.caught = caught;
  };
}

var CatchOperator = /*#__PURE__*/function () {
  function CatchOperator(selector) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CatchOperator);

    this.selector = selector;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(CatchOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));
    }
  }]);

  return CatchOperator;
}();

var CatchSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(CatchSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(CatchSubscriber);

  function CatchSubscriber(destination, selector, caught) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CatchSubscriber);

    _this = _super.call(this, destination);
    _this.selector = selector;
    _this.caught = caught;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(CatchSubscriber, [{
    key: "error",
    value: function error(err) {
      if (!this.isStopped) {
        var result;

        try {
          result = this.selector(err, this.caught);
        } catch (err2) {
          Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(CatchSubscriber.prototype), "error", this).call(this, err2);

          return;
        }

        this._unsubscribeAndRecycle();

        var innerSubscriber = new _innerSubscribe__WEBPACK_IMPORTED_MODULE_6__["SimpleInnerSubscriber"](this);
        this.add(innerSubscriber);
        var innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_6__["innerSubscribe"])(result, innerSubscriber);

        if (innerSubscription !== innerSubscriber) {
          this.add(innerSubscription);
        }
      }
    }
  }]);

  return CatchSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_6__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "JVRy":
/*!*********************************************************!*\
  !*** ./src/app/services/auth/authentication.service.ts ***!
  \*********************************************************/
/*! exports provided: AuthenticationService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthenticationService", function() { return AuthenticationService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_fire_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/fire/auth */ "KDZV");



var AuthenticationService = /** @class */ /*@__PURE__*/ (function () {
    function AuthenticationService(angularFireAuth) {
        this.angularFireAuth = angularFireAuth;
        this.userData = angularFireAuth.authState;
    }
    /* Sign up */
    /*SignUp(email: string, password: string) {
    this.angularFireAuth
    .auth
    .createUserWithEmailAndPassword(email, password)
    .then(res => {
    console.log('You are Successfully signed up!', res);
    })
    .catch(error => {
    console.log('Something is wrong:', error.message);
    });
    }*/
    /* Sign in */
    AuthenticationService.prototype.AuthSignIn = function () {
        //email : string = 'admin@demo.com';
        //password : string ='password123';	
        this.angularFireAuth.auth.signInWithEmailAndPassword('admin@demo.com', 'password123')
            .then(function (res) {
            //console.log('You are Successfully logged in!');
            localStorage.setItem('authData', JSON.stringify(res));
        })
            .catch(function (err) {
            console.log('Something is wrong:', err.message);
            // catchError(this.handleError)
        });
    };
    AuthenticationService.prototype.isAuthenticated = function () {
        if (localStorage.getItem('authData')) {
            return true;
        }
        else {
            return false;
        }
    };
    /* Sign out */
    AuthenticationService.prototype.AuthSignOut = function () {
        this.angularFireAuth
            .auth
            .signOut();
    };
    AuthenticationService.ɵfac = function AuthenticationService_Factory(t) { return new (t || AuthenticationService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_fire_auth__WEBPACK_IMPORTED_MODULE_1__["AngularFireAuth"])); };
    AuthenticationService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: AuthenticationService, factory: AuthenticationService.ɵfac, providedIn: 'root' });
    return AuthenticationService;
}());




/***/ }),

/***/ "JX7q":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _assertThisInitialized; });
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

/***/ }),

/***/ "JX91":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/startWith.js ***!
  \********************************************************************/
/*! exports provided: startWith */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "startWith", function() { return startWith; });
/* harmony import */ var _observable_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/concat */ "GyhO");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isScheduler */ "z+Ro");


function startWith() {
  for (var _len = arguments.length, array = new Array(_len), _key = 0; _key < _len; _key++) {
    array[_key] = arguments[_key];
  }

  var scheduler = array[array.length - 1];

  if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__["isScheduler"])(scheduler)) {
    array.pop();
    return function (source) {
      return Object(_observable_concat__WEBPACK_IMPORTED_MODULE_0__["concat"])(array, source, scheduler);
    };
  } else {
    return function (source) {
      return Object(_observable_concat__WEBPACK_IMPORTED_MODULE_0__["concat"])(array, source);
    };
  }
}

/***/ }),

/***/ "Ji7U":
/*!*************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/inherits.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _inherits; });
/* harmony import */ var _babel_runtime_helpers_esm_setPrototypeOf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/setPrototypeOf */ "s4An");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object(_babel_runtime_helpers_esm_setPrototypeOf__WEBPACK_IMPORTED_MODULE_0__["default"])(subClass, superClass);
}

/***/ }),

/***/ "JmF6":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/zipAll.js ***!
  \*****************************************************************/
/*! exports provided: zipAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zipAll", function() { return zipAll; });
/* harmony import */ var _observable_zip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/zip */ "1uah");

function zipAll(project) {
  return function (source) {
    return source.lift(new _observable_zip__WEBPACK_IMPORTED_MODULE_0__["ZipOperator"](project));
  };
}

/***/ }),

/***/ "K7De":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/findIndex.js ***!
  \********************************************************************/
/*! exports provided: findIndex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findIndex", function() { return findIndex; });
/* harmony import */ var _operators_find__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operators/find */ "cBqT");

function findIndex(predicate, thisArg) {
  return function (source) {
    return source.lift(new _operators_find__WEBPACK_IMPORTED_MODULE_0__["FindValueOperator"](predicate, source, true, thisArg));
  };
}

/***/ }),

/***/ "KDZV":
/*!**********************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/auth/es2015/index.js ***!
  \**********************************************************************/
/*! exports provided: AngularFireAuth, AngularFireAuthModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./public_api */ "jXA+");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngularFireAuth", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AngularFireAuth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngularFireAuthModule", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AngularFireAuthModule"]; });



/***/ }),

/***/ "KQm4":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _toConsumableArray; });
/* harmony import */ var _babel_runtime_helpers_esm_arrayWithoutHoles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/arrayWithoutHoles */ "YAWx");
/* harmony import */ var _babel_runtime_helpers_esm_iterableToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/iterableToArray */ "25BE");
/* harmony import */ var _babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/unsupportedIterableToArray */ "BsWD");
/* harmony import */ var _babel_runtime_helpers_esm_nonIterableSpread__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/nonIterableSpread */ "NCdM");




function _toConsumableArray(arr) {
  return Object(_babel_runtime_helpers_esm_arrayWithoutHoles__WEBPACK_IMPORTED_MODULE_0__["default"])(arr) || Object(_babel_runtime_helpers_esm_iterableToArray__WEBPACK_IMPORTED_MODULE_1__["default"])(arr) || Object(_babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(arr) || Object(_babel_runtime_helpers_esm_nonIterableSpread__WEBPACK_IMPORTED_MODULE_3__["default"])();
}

/***/ }),

/***/ "Kj3r":
/*!***********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/debounceTime.js ***!
  \***********************************************************************/
/*! exports provided: debounceTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debounceTime", function() { return debounceTime; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../scheduler/async */ "D0XW");






function debounceTime(dueTime) {
  var scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _scheduler_async__WEBPACK_IMPORTED_MODULE_5__["async"];
  return function (source) {
    return source.lift(new DebounceTimeOperator(dueTime, scheduler));
  };
}

var DebounceTimeOperator = /*#__PURE__*/function () {
  function DebounceTimeOperator(dueTime, scheduler) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DebounceTimeOperator);

    this.dueTime = dueTime;
    this.scheduler = scheduler;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DebounceTimeOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));
    }
  }]);

  return DebounceTimeOperator;
}();

var DebounceTimeSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(DebounceTimeSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(DebounceTimeSubscriber);

  function DebounceTimeSubscriber(destination, dueTime, scheduler) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DebounceTimeSubscriber);

    _this = _super.call(this, destination);
    _this.dueTime = dueTime;
    _this.scheduler = scheduler;
    _this.debouncedSubscription = null;
    _this.lastValue = null;
    _this.hasValue = false;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DebounceTimeSubscriber, [{
    key: "_next",
    value: function _next(value) {
      this.clearDebounce();
      this.lastValue = value;
      this.hasValue = true;
      this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.debouncedNext();
      this.destination.complete();
    }
  }, {
    key: "debouncedNext",
    value: function debouncedNext() {
      this.clearDebounce();

      if (this.hasValue) {
        var lastValue = this.lastValue;
        this.lastValue = null;
        this.hasValue = false;
        this.destination.next(lastValue);
      }
    }
  }, {
    key: "clearDebounce",
    value: function clearDebounce() {
      var debouncedSubscription = this.debouncedSubscription;

      if (debouncedSubscription !== null) {
        this.remove(debouncedSubscription);
        debouncedSubscription.unsubscribe();
        this.debouncedSubscription = null;
      }
    }
  }]);

  return DebounceTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

function dispatchNext(subscriber) {
  subscriber.debouncedNext();
}

/***/ }),

/***/ "Kqap":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/scan.js ***!
  \***************************************************************/
/*! exports provided: scan */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return scan; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");





function scan(accumulator, seed) {
  var hasSeed = false;

  if (arguments.length >= 2) {
    hasSeed = true;
  }

  return function scanOperatorFunction(source) {
    return source.lift(new ScanOperator(accumulator, seed, hasSeed));
  };
}

var ScanOperator = /*#__PURE__*/function () {
  function ScanOperator(accumulator, seed) {
    var hasSeed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ScanOperator);

    this.accumulator = accumulator;
    this.seed = seed;
    this.hasSeed = hasSeed;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ScanOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));
    }
  }]);

  return ScanOperator;
}();

var ScanSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(ScanSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(ScanSubscriber);

  function ScanSubscriber(destination, accumulator, _seed, hasSeed) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ScanSubscriber);

    _this = _super.call(this, destination);
    _this.accumulator = accumulator;
    _this._seed = _seed;
    _this.hasSeed = hasSeed;
    _this.index = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ScanSubscriber, [{
    key: "_next",
    value: function _next(value) {
      if (!this.hasSeed) {
        this.seed = value;
        this.destination.next(value);
      } else {
        return this._tryNext(value);
      }
    }
  }, {
    key: "_tryNext",
    value: function _tryNext(value) {
      var index = this.index++;
      var result;

      try {
        result = this.accumulator(this.seed, value, index);
      } catch (err) {
        this.destination.error(err);
      }

      this.seed = result;
      this.destination.next(result);
    }
  }, {
    key: "seed",
    get: function get() {
      return this._seed;
    },
    set: function set(value) {
      this.hasSeed = true;
      this._seed = value;
    }
  }]);

  return ScanSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "KqfI":
/*!**********************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/noop.js ***!
  \**********************************************************/
/*! exports provided: noop */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return noop; });
function noop() {}

/***/ }),

/***/ "LK+K":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/createSuper.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _createSuper; });
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var _babel_runtime_helpers_esm_isNativeReflectConstruct__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/isNativeReflectConstruct */ "2WcH");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "md7G");



function _createSuper(Derived) {
  var hasNativeReflectConstruct = Object(_babel_runtime_helpers_esm_isNativeReflectConstruct__WEBPACK_IMPORTED_MODULE_1__["default"])();
  return function _createSuperInternal() {
    var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_0__["default"])(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_0__["default"])(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__["default"])(this, result);
  };
}

/***/ }),

/***/ "LOEa":
/*!**************************************************!*\
  !*** ./node_modules/@firebase/auth/dist/auth.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function () {
  var firebase = __webpack_require__(/*! @firebase/app */ "wj3C").default;
  /*
  Copyright The Closure Library Authors.
  SPDX-License-Identifier: Apache-2.0
  */


  var k,
      aa = "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) {
    a != Array.prototype && a != Object.prototype && (a[b] = c.value);
  };

  function ba(a) {
    a = ["object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global, a];

    for (var b = 0; b < a.length; ++b) {
      var c = a[b];
      if (c && c.Math == Math) return c;
    }

    return globalThis;
  }

  var ca = ba(this);

  function da(a, b) {
    if (b) {
      var c = ca;
      a = a.split(".");

      for (var d = 0; d < a.length - 1; d++) {
        var e = a[d];
        e in c || (c[e] = {});
        c = c[e];
      }

      a = a[a.length - 1];
      d = c[a];
      b = b(d);
      b != d && null != b && aa(c, a, {
        configurable: !0,
        writable: !0,
        value: b
      });
    }
  }

  function ea(a) {
    var b = 0;
    return function () {
      return b < a.length ? {
        done: !1,
        value: a[b++]
      } : {
        done: !0
      };
    };
  }

  function fa(a) {
    var b = "undefined" != typeof Symbol && Symbol.iterator && a[Symbol.iterator];
    return b ? b.call(a) : {
      next: ea(a)
    };
  }

  da("Promise", function (a) {
    function b(g) {
      this.b = 0;
      this.c = void 0;
      this.a = [];
      var h = this.f();

      try {
        g(h.resolve, h.reject);
      } catch (m) {
        h.reject(m);
      }
    }

    function c() {
      this.a = null;
    }

    function d(g) {
      return g instanceof b ? g : new b(function (h) {
        h(g);
      });
    }

    if (a) return a;

    c.prototype.b = function (g) {
      if (null == this.a) {
        this.a = [];
        var h = this;
        this.c(function () {
          h.g();
        });
      }

      this.a.push(g);
    };

    var e = ca.setTimeout;

    c.prototype.c = function (g) {
      e(g, 0);
    };

    c.prototype.g = function () {
      for (; this.a && this.a.length;) {
        var g = this.a;
        this.a = [];

        for (var h = 0; h < g.length; ++h) {
          var m = g[h];
          g[h] = null;

          try {
            m();
          } catch (p) {
            this.f(p);
          }
        }
      }

      this.a = null;
    };

    c.prototype.f = function (g) {
      this.c(function () {
        throw g;
      });
    };

    b.prototype.f = function () {
      function g(p) {
        return function (v) {
          m || (m = !0, p.call(h, v));
        };
      }

      var h = this,
          m = !1;
      return {
        resolve: g(this.v),
        reject: g(this.g)
      };
    };

    b.prototype.v = function (g) {
      if (g === this) this.g(new TypeError("A Promise cannot resolve to itself"));else if (g instanceof b) this.o(g);else {
        a: switch (typeof g) {
          case "object":
            var h = null != g;
            break a;

          case "function":
            h = !0;
            break a;

          default:
            h = !1;
        }

        h ? this.m(g) : this.h(g);
      }
    };

    b.prototype.m = function (g) {
      var h = void 0;

      try {
        h = g.then;
      } catch (m) {
        this.g(m);
        return;
      }

      "function" == typeof h ? this.u(h, g) : this.h(g);
    };

    b.prototype.g = function (g) {
      this.i(2, g);
    };

    b.prototype.h = function (g) {
      this.i(1, g);
    };

    b.prototype.i = function (g, h) {
      if (0 != this.b) throw Error("Cannot settle(" + g + ", " + h + "): Promise already settled in state" + this.b);
      this.b = g;
      this.c = h;
      this.l();
    };

    b.prototype.l = function () {
      if (null != this.a) {
        for (var g = 0; g < this.a.length; ++g) {
          f.b(this.a[g]);
        }

        this.a = null;
      }
    };

    var f = new c();

    b.prototype.o = function (g) {
      var h = this.f();
      g.Pa(h.resolve, h.reject);
    };

    b.prototype.u = function (g, h) {
      var m = this.f();

      try {
        g.call(h, m.resolve, m.reject);
      } catch (p) {
        m.reject(p);
      }
    };

    b.prototype.then = function (g, h) {
      function m(A, Q) {
        return "function" == typeof A ? function (xa) {
          try {
            p(A(xa));
          } catch (yd) {
            v(yd);
          }
        } : Q;
      }

      var p,
          v,
          B = new b(function (A, Q) {
        p = A;
        v = Q;
      });
      this.Pa(m(g, p), m(h, v));
      return B;
    };

    b.prototype.catch = function (g) {
      return this.then(void 0, g);
    };

    b.prototype.Pa = function (g, h) {
      function m() {
        switch (p.b) {
          case 1:
            g(p.c);
            break;

          case 2:
            h(p.c);
            break;

          default:
            throw Error("Unexpected state: " + p.b);
        }
      }

      var p = this;
      null == this.a ? f.b(m) : this.a.push(m);
    };

    b.resolve = d;

    b.reject = function (g) {
      return new b(function (h, m) {
        m(g);
      });
    };

    b.race = function (g) {
      return new b(function (h, m) {
        for (var p = fa(g), v = p.next(); !v.done; v = p.next()) {
          d(v.value).Pa(h, m);
        }
      });
    };

    b.all = function (g) {
      var h = fa(g),
          m = h.next();
      return m.done ? d([]) : new b(function (p, v) {
        function B(xa) {
          return function (yd) {
            A[xa] = yd;
            Q--;
            0 == Q && p(A);
          };
        }

        var A = [],
            Q = 0;

        do {
          A.push(void 0), Q++, d(m.value).Pa(B(A.length - 1), v), m = h.next();
        } while (!m.done);
      });
    };

    return b;
  });
  var ha = ha || {},
      l = this || self,
      ia = /^[\w+/_-]+[=]{0,2}$/,
      ja = null;

  function ka() {}

  function la(a) {
    var b = typeof a;
    if ("object" == b) {
      if (a) {
        if (a instanceof Array) return "array";
        if (a instanceof Object) return b;
        var c = Object.prototype.toString.call(a);
        if ("[object Window]" == c) return "object";
        if ("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice")) return "array";
        if ("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("call")) return "function";
      } else return "null";
    } else if ("function" == b && "undefined" == typeof a.call) return "object";
    return b;
  }

  function ma(a) {
    var b = la(a);
    return "array" == b || "object" == b && "number" == typeof a.length;
  }

  function na(a) {
    return "function" == la(a);
  }

  function n(a) {
    var b = typeof a;
    return "object" == b && null != a || "function" == b;
  }

  function oa(a) {
    return Object.prototype.hasOwnProperty.call(a, pa) && a[pa] || (a[pa] = ++qa);
  }

  var pa = "closure_uid_" + (1E9 * Math.random() >>> 0),
      qa = 0;

  function ra(a, b, c) {
    return a.call.apply(a.bind, arguments);
  }

  function sa(a, b, c) {
    if (!a) throw Error();

    if (2 < arguments.length) {
      var d = Array.prototype.slice.call(arguments, 2);
      return function () {
        var e = Array.prototype.slice.call(arguments);
        Array.prototype.unshift.apply(e, d);
        return a.apply(b, e);
      };
    }

    return function () {
      return a.apply(b, arguments);
    };
  }

  function q(a, b, c) {
    Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? q = ra : q = sa;
    return q.apply(null, arguments);
  }

  function ta(a, b) {
    var c = Array.prototype.slice.call(arguments, 1);
    return function () {
      var d = c.slice();
      d.push.apply(d, arguments);
      return a.apply(this, d);
    };
  }

  var ua = Date.now || function () {
    return +new Date();
  };

  function r(a, b) {
    function c() {}

    c.prototype = b.prototype;
    a.$a = b.prototype;
    a.prototype = new c();
    a.prototype.constructor = a;
  }

  ;
  /*
  Copyright 2017 Google Inc.
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  */

  function t(a, b, c) {
    this.code = va + a;
    this.message = b || wa[a] || "";
    this.a = c || null;
  }

  r(t, Error);

  t.prototype.w = function () {
    var a = {
      code: this.code,
      message: this.message
    };
    this.a && (a.serverResponse = this.a);
    return a;
  };

  t.prototype.toJSON = function () {
    return this.w();
  };

  function ya(a) {
    var b = a && a.code;
    return b ? new t(b.substring(va.length), a.message, a.serverResponse) : null;
  }

  var va = "auth/",
      wa = {
    "admin-restricted-operation": "This operation is restricted to administrators only.",
    "argument-error": "",
    "app-not-authorized": "This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.",
    "app-not-installed": "The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.",
    "captcha-check-failed": "The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.",
    "code-expired": "The SMS code has expired. Please re-send the verification code to try again.",
    "cordova-not-ready": "Cordova framework is not ready.",
    "cors-unsupported": "This browser is not supported.",
    "credential-already-in-use": "This credential is already associated with a different user account.",
    "custom-token-mismatch": "The custom token corresponds to a different audience.",
    "requires-recent-login": "This operation is sensitive and requires recent authentication. Log in again before retrying this request.",
    "dynamic-link-not-activated": "Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.",
    "email-change-needs-verification": "Multi-factor users must always have a verified email.",
    "email-already-in-use": "The email address is already in use by another account.",
    "expired-action-code": "The action code has expired. ",
    "cancelled-popup-request": "This operation has been cancelled due to another conflicting popup being opened.",
    "internal-error": "An internal error has occurred.",
    "invalid-app-credential": "The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.",
    "invalid-app-id": "The mobile app identifier is not registed for the current project.",
    "invalid-user-token": "This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.",
    "invalid-auth-event": "An internal error has occurred.",
    "invalid-verification-code": "The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.",
    "invalid-continue-uri": "The continue URL provided in the request is invalid.",
    "invalid-cordova-configuration": "The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.",
    "invalid-custom-token": "The custom token format is incorrect. Please check the documentation.",
    "invalid-dynamic-link-domain": "The provided dynamic link domain is not configured or authorized for the current project.",
    "invalid-email": "The email address is badly formatted.",
    "invalid-api-key": "Your API key is invalid, please check you have copied it correctly.",
    "invalid-cert-hash": "The SHA-1 certificate hash provided is invalid.",
    "invalid-credential": "The supplied auth credential is malformed or has expired.",
    "invalid-message-payload": "The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.",
    "invalid-multi-factor-session": "The request does not contain a valid proof of first factor successful sign-in.",
    "invalid-oauth-provider": "EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.",
    "invalid-oauth-client-id": "The OAuth client ID provided is either invalid or does not match the specified API key.",
    "unauthorized-domain": "This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.",
    "invalid-action-code": "The action code is invalid. This can happen if the code is malformed, expired, or has already been used.",
    "wrong-password": "The password is invalid or the user does not have a password.",
    "invalid-persistence-type": "The specified persistence type is invalid. It can only be local, session or none.",
    "invalid-phone-number": "The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].",
    "invalid-provider-id": "The specified provider ID is invalid.",
    "invalid-recipient-email": "The email corresponding to this action failed to send as the provided recipient email address is invalid.",
    "invalid-sender": "The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.",
    "invalid-verification-id": "The verification ID used to create the phone auth credential is invalid.",
    "invalid-tenant-id": "The Auth instance's tenant ID is invalid.",
    "multi-factor-info-not-found": "The user does not have a second factor matching the identifier provided.",
    "multi-factor-auth-required": "Proof of ownership of a second factor is required to complete sign-in.",
    "missing-android-pkg-name": "An Android Package Name must be provided if the Android App is required to be installed.",
    "auth-domain-config-required": "Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.",
    "missing-app-credential": "The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.",
    "missing-verification-code": "The phone auth credential was created with an empty SMS verification code.",
    "missing-continue-uri": "A continue URL must be provided in the request.",
    "missing-iframe-start": "An internal error has occurred.",
    "missing-ios-bundle-id": "An iOS Bundle ID must be provided if an App Store ID is provided.",
    "missing-multi-factor-info": "No second factor identifier is provided.",
    "missing-multi-factor-session": "The request is missing proof of first factor successful sign-in.",
    "missing-or-invalid-nonce": "The request does not contain a valid nonce. This can occur if the SHA-256 hash of the provided raw nonce does not match the hashed nonce in the ID token payload.",
    "missing-phone-number": "To send verification codes, provide a phone number for the recipient.",
    "missing-verification-id": "The phone auth credential was created with an empty verification ID.",
    "app-deleted": "This instance of FirebaseApp has been deleted.",
    "account-exists-with-different-credential": "An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.",
    "network-request-failed": "A network error (such as timeout, interrupted connection or unreachable host) has occurred.",
    "no-auth-event": "An internal error has occurred.",
    "no-such-provider": "User was not linked to an account with the given provider.",
    "null-user": "A null user object was provided as the argument for an operation which requires a non-null user object.",
    "operation-not-allowed": "The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.",
    "operation-not-supported-in-this-environment": 'This operation is not supported in the environment this application is running on. "location.protocol" must be http, https or chrome-extension and web storage must be enabled.',
    "popup-blocked": "Unable to establish a connection with the popup. It may have been blocked by the browser.",
    "popup-closed-by-user": "The popup has been closed by the user before finalizing the operation.",
    "provider-already-linked": "User can only be linked to one identity for the given provider.",
    "quota-exceeded": "The project's quota for this operation has been exceeded.",
    "redirect-cancelled-by-user": "The redirect operation has been cancelled by the user before finalizing.",
    "redirect-operation-pending": "A redirect sign-in operation is already pending.",
    "rejected-credential": "The request contains malformed or mismatching credentials.",
    "second-factor-already-in-use": "The second factor is already enrolled on this account.",
    "maximum-second-factor-count-exceeded": "The maximum allowed number of second factors on a user has been exceeded.",
    "tenant-id-mismatch": "The provided tenant ID does not match the Auth instance's tenant ID",
    timeout: "The operation has timed out.",
    "user-token-expired": "The user's credential is no longer valid. The user must sign in again.",
    "too-many-requests": "We have blocked all requests from this device due to unusual activity. Try again later.",
    "unauthorized-continue-uri": "The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.",
    "unsupported-first-factor": "Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.",
    "unsupported-persistence-type": "The current environment does not support the specified persistence type.",
    "unsupported-tenant-operation": "This operation is not supported in a multi-tenant context.",
    "unverified-email": "The operation requires a verified email.",
    "user-cancelled": "The user did not grant your application the permissions it requested.",
    "user-not-found": "There is no user record corresponding to this identifier. The user may have been deleted.",
    "user-disabled": "The user account has been disabled by an administrator.",
    "user-mismatch": "The supplied credentials do not correspond to the previously signed in user.",
    "user-signed-out": "",
    "weak-password": "The password must be 6 characters long or more.",
    "web-storage-unsupported": "This browser is not supported or 3rd party cookies and data may be disabled."
  };
  var za = {
    kd: {
      Sa: "https://staging-identitytoolkit.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/",
      Ya: "https://staging-securetoken.sandbox.googleapis.com/v1/token",
      Va: "https://staging-identitytoolkit.sandbox.googleapis.com/v2/",
      id: "b"
    },
    rd: {
      Sa: "https://www.googleapis.com/identitytoolkit/v3/relyingparty/",
      Ya: "https://securetoken.googleapis.com/v1/token",
      Va: "https://identitytoolkit.googleapis.com/v2/",
      id: "p"
    },
    td: {
      Sa: "https://staging-www.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/",
      Ya: "https://staging-securetoken.sandbox.googleapis.com/v1/token",
      Va: "https://staging-identitytoolkit.sandbox.googleapis.com/v2/",
      id: "s"
    },
    ud: {
      Sa: "https://www-googleapis-test.sandbox.google.com/identitytoolkit/v3/relyingparty/",
      Ya: "https://test-securetoken.sandbox.googleapis.com/v1/token",
      Va: "https://test-identitytoolkit.sandbox.googleapis.com/v2/",
      id: "t"
    }
  };

  function Aa(a) {
    for (var b in za) {
      if (za[b].id === a) return a = za[b], {
        firebaseEndpoint: a.Sa,
        secureTokenEndpoint: a.Ya,
        identityPlatformEndpoint: a.Va
      };
    }

    return null;
  }

  var Ba;
  Ba = Aa("__EID__") ? "__EID__" : void 0;

  function Ca(a) {
    if (!a) return !1;

    try {
      return !!a.$goog_Thenable;
    } catch (b) {
      return !1;
    }
  }

  ;

  function u(a) {
    if (Error.captureStackTrace) Error.captureStackTrace(this, u);else {
      var b = Error().stack;
      b && (this.stack = b);
    }
    a && (this.message = String(a));
  }

  r(u, Error);
  u.prototype.name = "CustomError";

  function Da(a, b) {
    a = a.split("%s");

    for (var c = "", d = a.length - 1, e = 0; e < d; e++) {
      c += a[e] + (e < b.length ? b[e] : "%s");
    }

    u.call(this, c + a[d]);
  }

  r(Da, u);
  Da.prototype.name = "AssertionError";

  function Ea(a, b) {
    throw new Da("Failure" + (a ? ": " + a : ""), Array.prototype.slice.call(arguments, 1));
  }

  ;

  function Fa(a, b) {
    this.c = a;
    this.f = b;
    this.b = 0;
    this.a = null;
  }

  Fa.prototype.get = function () {
    if (0 < this.b) {
      this.b--;
      var a = this.a;
      this.a = a.next;
      a.next = null;
    } else a = this.c();

    return a;
  };

  function Ga(a, b) {
    a.f(b);
    100 > a.b && (a.b++, b.next = a.a, a.a = b);
  }

  ;

  function Ha() {
    this.b = this.a = null;
  }

  var Ja = new Fa(function () {
    return new Ia();
  }, function (a) {
    a.reset();
  });

  Ha.prototype.add = function (a, b) {
    var c = Ja.get();
    c.set(a, b);
    this.b ? this.b.next = c : this.a = c;
    this.b = c;
  };

  function Ka() {
    var a = La,
        b = null;
    a.a && (b = a.a, a.a = a.a.next, a.a || (a.b = null), b.next = null);
    return b;
  }

  function Ia() {
    this.next = this.b = this.a = null;
  }

  Ia.prototype.set = function (a, b) {
    this.a = a;
    this.b = b;
    this.next = null;
  };

  Ia.prototype.reset = function () {
    this.next = this.b = this.a = null;
  };

  var Ma = Array.prototype.indexOf ? function (a, b) {
    return Array.prototype.indexOf.call(a, b, void 0);
  } : function (a, b) {
    if ("string" === typeof a) return "string" !== typeof b || 1 != b.length ? -1 : a.indexOf(b, 0);

    for (var c = 0; c < a.length; c++) {
      if (c in a && a[c] === b) return c;
    }

    return -1;
  },
      w = Array.prototype.forEach ? function (a, b, c) {
    Array.prototype.forEach.call(a, b, c);
  } : function (a, b, c) {
    for (var d = a.length, e = "string" === typeof a ? a.split("") : a, f = 0; f < d; f++) {
      f in e && b.call(c, e[f], f, a);
    }
  };

  function Na(a, b) {
    for (var c = "string" === typeof a ? a.split("") : a, d = a.length - 1; 0 <= d; --d) {
      d in c && b.call(void 0, c[d], d, a);
    }
  }

  var Oa = Array.prototype.filter ? function (a, b) {
    return Array.prototype.filter.call(a, b, void 0);
  } : function (a, b) {
    for (var c = a.length, d = [], e = 0, f = "string" === typeof a ? a.split("") : a, g = 0; g < c; g++) {
      if (g in f) {
        var h = f[g];
        b.call(void 0, h, g, a) && (d[e++] = h);
      }
    }

    return d;
  },
      Pa = Array.prototype.map ? function (a, b) {
    return Array.prototype.map.call(a, b, void 0);
  } : function (a, b) {
    for (var c = a.length, d = Array(c), e = "string" === typeof a ? a.split("") : a, f = 0; f < c; f++) {
      f in e && (d[f] = b.call(void 0, e[f], f, a));
    }

    return d;
  },
      Qa = Array.prototype.some ? function (a, b) {
    return Array.prototype.some.call(a, b, void 0);
  } : function (a, b) {
    for (var c = a.length, d = "string" === typeof a ? a.split("") : a, e = 0; e < c; e++) {
      if (e in d && b.call(void 0, d[e], e, a)) return !0;
    }

    return !1;
  };

  function Ra(a) {
    a: {
      var b = Sa;

      for (var c = a.length, d = "string" === typeof a ? a.split("") : a, e = 0; e < c; e++) {
        if (e in d && b.call(void 0, d[e], e, a)) {
          b = e;
          break a;
        }
      }

      b = -1;
    }

    return 0 > b ? null : "string" === typeof a ? a.charAt(b) : a[b];
  }

  function Ta(a, b) {
    return 0 <= Ma(a, b);
  }

  function Ua(a, b) {
    b = Ma(a, b);
    var c;
    (c = 0 <= b) && Array.prototype.splice.call(a, b, 1);
    return c;
  }

  function Va(a, b) {
    var c = 0;
    Na(a, function (d, e) {
      b.call(void 0, d, e, a) && 1 == Array.prototype.splice.call(a, e, 1).length && c++;
    });
  }

  function Wa(a) {
    return Array.prototype.concat.apply([], arguments);
  }

  function Xa(a) {
    var b = a.length;

    if (0 < b) {
      for (var c = Array(b), d = 0; d < b; d++) {
        c[d] = a[d];
      }

      return c;
    }

    return [];
  }

  ;
  var Ya = String.prototype.trim ? function (a) {
    return a.trim();
  } : function (a) {
    return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1];
  },
      Za = /&/g,
      $a = /</g,
      ab = />/g,
      bb = /"/g,
      cb = /'/g,
      db = /\x00/g,
      eb = /[\x00&<>"']/;

  function x(a, b) {
    return -1 != a.indexOf(b);
  }

  function fb(a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  }

  ;
  var gb;

  a: {
    var hb = l.navigator;

    if (hb) {
      var ib = hb.userAgent;

      if (ib) {
        gb = ib;
        break a;
      }
    }

    gb = "";
  }

  function y(a) {
    return x(gb, a);
  }

  ;

  function jb(a, b) {
    for (var c in a) {
      b.call(void 0, a[c], c, a);
    }
  }

  function kb(a) {
    for (var b in a) {
      return !1;
    }

    return !0;
  }

  function lb(a) {
    var b = {},
        c;

    for (c in a) {
      b[c] = a[c];
    }

    return b;
  }

  var mb = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");

  function z(a, b) {
    for (var c, d, e = 1; e < arguments.length; e++) {
      d = arguments[e];

      for (c in d) {
        a[c] = d[c];
      }

      for (var f = 0; f < mb.length; f++) {
        c = mb[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
      }
    }
  }

  ;

  function nb(a, b) {
    a: {
      try {
        var c = a && a.ownerDocument,
            d = c && (c.defaultView || c.parentWindow);
        d = d || l;

        if (d.Element && d.Location) {
          var e = d;
          break a;
        }
      } catch (g) {}

      e = null;
    }

    if (e && "undefined" != typeof e[b] && (!a || !(a instanceof e[b]) && (a instanceof e.Location || a instanceof e.Element))) {
      if (n(a)) try {
        var f = a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a);
      } catch (g) {
        f = "<object could not be stringified>";
      } else f = void 0 === a ? "undefined" : null === a ? "null" : typeof a;
      Ea("Argument is not a %s (or a non-Element, non-Location mock); got: %s", b, f);
    }
  }

  ;

  function ob(a, b) {
    this.a = a === pb && b || "";
    this.b = qb;
  }

  ob.prototype.sa = !0;

  ob.prototype.ra = function () {
    return this.a;
  };

  ob.prototype.toString = function () {
    return "Const{" + this.a + "}";
  };

  function rb(a) {
    if (a instanceof ob && a.constructor === ob && a.b === qb) return a.a;
    Ea("expected object of type Const, got '" + a + "'");
    return "type_error:Const";
  }

  var qb = {},
      pb = {},
      sb = new ob(pb, "");

  function tb(a, b) {
    this.a = a === ub && b || "";
    this.b = vb;
  }

  tb.prototype.sa = !0;

  tb.prototype.ra = function () {
    return this.a.toString();
  };

  tb.prototype.toString = function () {
    return "TrustedResourceUrl{" + this.a + "}";
  };

  function wb(a) {
    if (a instanceof tb && a.constructor === tb && a.b === vb) return a.a;
    Ea("expected object of type TrustedResourceUrl, got '" + a + "' of type " + la(a));
    return "type_error:TrustedResourceUrl";
  }

  function xb(a, b) {
    var c = rb(a);
    if (!yb.test(c)) throw Error("Invalid TrustedResourceUrl format: " + c);
    a = c.replace(zb, function (d, e) {
      if (!Object.prototype.hasOwnProperty.call(b, e)) throw Error('Found marker, "' + e + '", in format string, "' + c + '", but no valid label mapping found in args: ' + JSON.stringify(b));
      d = b[e];
      return d instanceof ob ? rb(d) : encodeURIComponent(String(d));
    });
    return new tb(ub, a);
  }

  var zb = /%{(\w+)}/g,
      yb = /^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i,
      vb = {},
      ub = {};

  function Ab(a, b) {
    this.a = a === Bb && b || "";
    this.b = Cb;
  }

  Ab.prototype.sa = !0;

  Ab.prototype.ra = function () {
    return this.a.toString();
  };

  Ab.prototype.toString = function () {
    return "SafeUrl{" + this.a + "}";
  };

  function Db(a) {
    if (a instanceof Ab && a.constructor === Ab && a.b === Cb) return a.a;
    Ea("expected object of type SafeUrl, got '" + a + "' of type " + la(a));
    return "type_error:SafeUrl";
  }

  var Eb = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;

  function Fb(a) {
    if (a instanceof Ab) return a;
    a = "object" == typeof a && a.sa ? a.ra() : String(a);
    Eb.test(a) || (a = "about:invalid#zClosurez");
    return new Ab(Bb, a);
  }

  var Cb = {},
      Bb = {};

  function Gb() {
    this.a = "";
    this.b = Hb;
  }

  Gb.prototype.sa = !0;

  Gb.prototype.ra = function () {
    return this.a.toString();
  };

  Gb.prototype.toString = function () {
    return "SafeHtml{" + this.a + "}";
  };

  function Ib(a) {
    if (a instanceof Gb && a.constructor === Gb && a.b === Hb) return a.a;
    Ea("expected object of type SafeHtml, got '" + a + "' of type " + la(a));
    return "type_error:SafeHtml";
  }

  var Hb = {};

  function Jb(a) {
    var b = new Gb();
    b.a = a;
    return b;
  }

  Jb("<!DOCTYPE html>");
  var Kb = Jb("");
  Jb("<br>");

  function Lb(a) {
    var b = new tb(ub, rb(sb));
    nb(a, "HTMLIFrameElement");
    a.src = wb(b).toString();
  }

  function Mb(a, b) {
    nb(a, "HTMLScriptElement");
    a.src = wb(b);
    if (null === ja) b: {
      b = l.document;

      if ((b = b.querySelector && b.querySelector("script[nonce]")) && (b = b.nonce || b.getAttribute("nonce")) && ia.test(b)) {
        ja = b;
        break b;
      }

      ja = "";
    }
    b = ja;
    b && a.setAttribute("nonce", b);
  }

  ;

  function Nb(a, b) {
    for (var c = a.split("%s"), d = "", e = Array.prototype.slice.call(arguments, 1); e.length && 1 < c.length;) {
      d += c.shift() + e.shift();
    }

    return d + c.join("%s");
  }

  function Ob(a) {
    eb.test(a) && (-1 != a.indexOf("&") && (a = a.replace(Za, "&amp;")), -1 != a.indexOf("<") && (a = a.replace($a, "&lt;")), -1 != a.indexOf(">") && (a = a.replace(ab, "&gt;")), -1 != a.indexOf('"') && (a = a.replace(bb, "&quot;")), -1 != a.indexOf("'") && (a = a.replace(cb, "&#39;")), -1 != a.indexOf("\x00") && (a = a.replace(db, "&#0;")));
    return a;
  }

  ;

  function Pb(a) {
    Pb[" "](a);
    return a;
  }

  Pb[" "] = ka;

  function Qb(a, b) {
    var c = Rb;
    return Object.prototype.hasOwnProperty.call(c, a) ? c[a] : c[a] = b(a);
  }

  ;
  var Sb = y("Opera"),
      Tb = y("Trident") || y("MSIE"),
      Ub = y("Edge"),
      Vb = Ub || Tb,
      Wb = y("Gecko") && !(x(gb.toLowerCase(), "webkit") && !y("Edge")) && !(y("Trident") || y("MSIE")) && !y("Edge"),
      Xb = x(gb.toLowerCase(), "webkit") && !y("Edge");

  function Yb() {
    var a = l.document;
    return a ? a.documentMode : void 0;
  }

  var Zb;

  a: {
    var $b = "",
        ac = function () {
      var a = gb;
      if (Wb) return /rv:([^\);]+)(\)|;)/.exec(a);
      if (Ub) return /Edge\/([\d\.]+)/.exec(a);
      if (Tb) return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);
      if (Xb) return /WebKit\/(\S+)/.exec(a);
      if (Sb) return /(?:Version)[ \/]?(\S+)/.exec(a);
    }();

    ac && ($b = ac ? ac[1] : "");

    if (Tb) {
      var bc = Yb();

      if (null != bc && bc > parseFloat($b)) {
        Zb = String(bc);
        break a;
      }
    }

    Zb = $b;
  }

  var Rb = {};

  function cc(a) {
    return Qb(a, function () {
      for (var b = 0, c = Ya(String(Zb)).split("."), d = Ya(String(a)).split("."), e = Math.max(c.length, d.length), f = 0; 0 == b && f < e; f++) {
        var g = c[f] || "",
            h = d[f] || "";

        do {
          g = /(\d*)(\D*)(.*)/.exec(g) || ["", "", "", ""];
          h = /(\d*)(\D*)(.*)/.exec(h) || ["", "", "", ""];
          if (0 == g[0].length && 0 == h[0].length) break;
          b = fb(0 == g[1].length ? 0 : parseInt(g[1], 10), 0 == h[1].length ? 0 : parseInt(h[1], 10)) || fb(0 == g[2].length, 0 == h[2].length) || fb(g[2], h[2]);
          g = g[3];
          h = h[3];
        } while (0 == b);
      }

      return 0 <= b;
    });
  }

  var dc;
  dc = l.document && Tb ? Yb() : void 0;

  try {
    new self.OffscreenCanvas(0, 0).getContext("2d");
  } catch (a) {}

  var ec = !Tb || 9 <= Number(dc);

  function fc(a) {
    var b = document;
    return "string" === typeof a ? b.getElementById(a) : a;
  }

  function gc(a, b) {
    jb(b, function (c, d) {
      c && "object" == typeof c && c.sa && (c = c.ra());
      "style" == d ? a.style.cssText = c : "class" == d ? a.className = c : "for" == d ? a.htmlFor = c : hc.hasOwnProperty(d) ? a.setAttribute(hc[d], c) : 0 == d.lastIndexOf("aria-", 0) || 0 == d.lastIndexOf("data-", 0) ? a.setAttribute(d, c) : a[d] = c;
    });
  }

  var hc = {
    cellpadding: "cellPadding",
    cellspacing: "cellSpacing",
    colspan: "colSpan",
    frameborder: "frameBorder",
    height: "height",
    maxlength: "maxLength",
    nonce: "nonce",
    role: "role",
    rowspan: "rowSpan",
    type: "type",
    usemap: "useMap",
    valign: "vAlign",
    width: "width"
  };

  function ic(a, b, c) {
    var d = arguments,
        e = document,
        f = String(d[0]),
        g = d[1];

    if (!ec && g && (g.name || g.type)) {
      f = ["<", f];
      g.name && f.push(' name="', Ob(g.name), '"');

      if (g.type) {
        f.push(' type="', Ob(g.type), '"');
        var h = {};
        z(h, g);
        delete h.type;
        g = h;
      }

      f.push(">");
      f = f.join("");
    }

    f = jc(e, f);
    g && ("string" === typeof g ? f.className = g : Array.isArray(g) ? f.className = g.join(" ") : gc(f, g));
    2 < d.length && kc(e, f, d);
    return f;
  }

  function kc(a, b, c) {
    function d(g) {
      g && b.appendChild("string" === typeof g ? a.createTextNode(g) : g);
    }

    for (var e = 2; e < c.length; e++) {
      var f = c[e];
      !ma(f) || n(f) && 0 < f.nodeType ? d(f) : w(lc(f) ? Xa(f) : f, d);
    }
  }

  function jc(a, b) {
    b = String(b);
    "application/xhtml+xml" === a.contentType && (b = b.toLowerCase());
    return a.createElement(b);
  }

  function lc(a) {
    if (a && "number" == typeof a.length) {
      if (n(a)) return "function" == typeof a.item || "string" == typeof a.item;
      if (na(a)) return "function" == typeof a.item;
    }

    return !1;
  }

  ;

  function mc(a) {
    l.setTimeout(function () {
      throw a;
    }, 0);
  }

  var nc;

  function oc() {
    var a = l.MessageChannel;
    "undefined" === typeof a && "undefined" !== typeof window && window.postMessage && window.addEventListener && !y("Presto") && (a = function a() {
      var e = jc(document, "IFRAME");
      e.style.display = "none";
      Lb(e);
      document.documentElement.appendChild(e);
      var f = e.contentWindow;
      e = f.document;
      e.open();
      e.write(Ib(Kb));
      e.close();
      var g = "callImmediate" + Math.random(),
          h = "file:" == f.location.protocol ? "*" : f.location.protocol + "//" + f.location.host;
      e = q(function (m) {
        if (("*" == h || m.origin == h) && m.data == g) this.port1.onmessage();
      }, this);
      f.addEventListener("message", e, !1);
      this.port1 = {};
      this.port2 = {
        postMessage: function postMessage() {
          f.postMessage(g, h);
        }
      };
    });

    if ("undefined" !== typeof a && !y("Trident") && !y("MSIE")) {
      var b = new a(),
          c = {},
          d = c;

      b.port1.onmessage = function () {
        if (void 0 !== c.next) {
          c = c.next;
          var e = c.Fb;
          c.Fb = null;
          e();
        }
      };

      return function (e) {
        d.next = {
          Fb: e
        };
        d = d.next;
        b.port2.postMessage(0);
      };
    }

    return function (e) {
      l.setTimeout(e, 0);
    };
  }

  ;

  function pc(a, b) {
    qc || rc();
    sc || (qc(), sc = !0);
    La.add(a, b);
  }

  var qc;

  function rc() {
    if (l.Promise && l.Promise.resolve) {
      var a = l.Promise.resolve(void 0);

      qc = function qc() {
        a.then(tc);
      };
    } else qc = function qc() {
      var b = tc;
      !na(l.setImmediate) || l.Window && l.Window.prototype && !y("Edge") && l.Window.prototype.setImmediate == l.setImmediate ? (nc || (nc = oc()), nc(b)) : l.setImmediate(b);
    };
  }

  var sc = !1,
      La = new Ha();

  function tc() {
    for (var a; a = Ka();) {
      try {
        a.a.call(a.b);
      } catch (b) {
        mc(b);
      }

      Ga(Ja, a);
    }

    sc = !1;
  }

  ;

  function C(a, b) {
    this.a = uc;
    this.i = void 0;
    this.f = this.b = this.c = null;
    this.g = this.h = !1;
    if (a != ka) try {
      var c = this;
      a.call(b, function (d) {
        vc(c, wc, d);
      }, function (d) {
        if (!(d instanceof xc)) try {
          if (d instanceof Error) throw d;
          throw Error("Promise rejected.");
        } catch (e) {}
        vc(c, yc, d);
      });
    } catch (d) {
      vc(this, yc, d);
    }
  }

  var uc = 0,
      wc = 2,
      yc = 3;

  function zc() {
    this.next = this.f = this.b = this.g = this.a = null;
    this.c = !1;
  }

  zc.prototype.reset = function () {
    this.f = this.b = this.g = this.a = null;
    this.c = !1;
  };

  var Ac = new Fa(function () {
    return new zc();
  }, function (a) {
    a.reset();
  });

  function Bc(a, b, c) {
    var d = Ac.get();
    d.g = a;
    d.b = b;
    d.f = c;
    return d;
  }

  function D(a) {
    if (a instanceof C) return a;
    var b = new C(ka);
    vc(b, wc, a);
    return b;
  }

  function E(a) {
    return new C(function (b, c) {
      c(a);
    });
  }

  function Cc(a, b, c) {
    Dc(a, b, c, null) || pc(ta(b, a));
  }

  function Ec(a) {
    return new C(function (b, c) {
      var d = a.length,
          e = [];
      if (d) for (var f = function f(p, v) {
        d--;
        e[p] = v;
        0 == d && b(e);
      }, g = function g(p) {
        c(p);
      }, h = 0, m; h < a.length; h++) {
        m = a[h], Cc(m, ta(f, h), g);
      } else b(e);
    });
  }

  function Fc(a) {
    return new C(function (b) {
      var c = a.length,
          d = [];
      if (c) for (var e = function e(h, m, p) {
        c--;
        d[h] = m ? {
          Ob: !0,
          value: p
        } : {
          Ob: !1,
          reason: p
        };
        0 == c && b(d);
      }, f = 0, g; f < a.length; f++) {
        g = a[f], Cc(g, ta(e, f, !0), ta(e, f, !1));
      } else b(d);
    });
  }

  C.prototype.then = function (a, b, c) {
    return Gc(this, na(a) ? a : null, na(b) ? b : null, c);
  };

  C.prototype.$goog_Thenable = !0;
  k = C.prototype;

  k.na = function (a, b) {
    a = Bc(a, a, b);
    a.c = !0;
    Hc(this, a);
    return this;
  };

  k.s = function (a, b) {
    return Gc(this, null, a, b);
  };

  k.cancel = function (a) {
    if (this.a == uc) {
      var b = new xc(a);
      pc(function () {
        Ic(this, b);
      }, this);
    }
  };

  function Ic(a, b) {
    if (a.a == uc) if (a.c) {
      var c = a.c;

      if (c.b) {
        for (var d = 0, e = null, f = null, g = c.b; g && (g.c || (d++, g.a == a && (e = g), !(e && 1 < d))); g = g.next) {
          e || (f = g);
        }

        e && (c.a == uc && 1 == d ? Ic(c, b) : (f ? (d = f, d.next == c.f && (c.f = d), d.next = d.next.next) : Jc(c), Kc(c, e, yc, b)));
      }

      a.c = null;
    } else vc(a, yc, b);
  }

  function Hc(a, b) {
    a.b || a.a != wc && a.a != yc || Lc(a);
    a.f ? a.f.next = b : a.b = b;
    a.f = b;
  }

  function Gc(a, b, c, d) {
    var e = Bc(null, null, null);
    e.a = new C(function (f, g) {
      e.g = b ? function (h) {
        try {
          var m = b.call(d, h);
          f(m);
        } catch (p) {
          g(p);
        }
      } : f;
      e.b = c ? function (h) {
        try {
          var m = c.call(d, h);
          void 0 === m && h instanceof xc ? g(h) : f(m);
        } catch (p) {
          g(p);
        }
      } : g;
    });
    e.a.c = a;
    Hc(a, e);
    return e.a;
  }

  k.Zc = function (a) {
    this.a = uc;
    vc(this, wc, a);
  };

  k.$c = function (a) {
    this.a = uc;
    vc(this, yc, a);
  };

  function vc(a, b, c) {
    a.a == uc && (a === c && (b = yc, c = new TypeError("Promise cannot resolve to itself")), a.a = 1, Dc(c, a.Zc, a.$c, a) || (a.i = c, a.a = b, a.c = null, Lc(a), b != yc || c instanceof xc || Mc(a, c)));
  }

  function Dc(a, b, c, d) {
    if (a instanceof C) return Hc(a, Bc(b || ka, c || null, d)), !0;
    if (Ca(a)) return a.then(b, c, d), !0;
    if (n(a)) try {
      var e = a.then;
      if (na(e)) return Nc(a, e, b, c, d), !0;
    } catch (f) {
      return c.call(d, f), !0;
    }
    return !1;
  }

  function Nc(a, b, c, d, e) {
    function f(m) {
      h || (h = !0, d.call(e, m));
    }

    function g(m) {
      h || (h = !0, c.call(e, m));
    }

    var h = !1;

    try {
      b.call(a, g, f);
    } catch (m) {
      f(m);
    }
  }

  function Lc(a) {
    a.h || (a.h = !0, pc(a.fc, a));
  }

  function Jc(a) {
    var b = null;
    a.b && (b = a.b, a.b = b.next, b.next = null);
    a.b || (a.f = null);
    return b;
  }

  k.fc = function () {
    for (var a; a = Jc(this);) {
      Kc(this, a, this.a, this.i);
    }

    this.h = !1;
  };

  function Kc(a, b, c, d) {
    if (c == yc && b.b && !b.c) for (; a && a.g; a = a.c) {
      a.g = !1;
    }
    if (b.a) b.a.c = null, Oc(b, c, d);else try {
      b.c ? b.g.call(b.f) : Oc(b, c, d);
    } catch (e) {
      Pc.call(null, e);
    }
    Ga(Ac, b);
  }

  function Oc(a, b, c) {
    b == wc ? a.g.call(a.f, c) : a.b && a.b.call(a.f, c);
  }

  function Mc(a, b) {
    a.g = !0;
    pc(function () {
      a.g && Pc.call(null, b);
    });
  }

  var Pc = mc;

  function xc(a) {
    u.call(this, a);
  }

  r(xc, u);
  xc.prototype.name = "cancel";

  function Qc() {
    0 != Rc && (Sc[oa(this)] = this);
    this.xa = this.xa;
    this.oa = this.oa;
  }

  var Rc = 0,
      Sc = {};
  Qc.prototype.xa = !1;

  function Tc(a) {
    if (!a.xa && (a.xa = !0, a.Da(), 0 != Rc)) {
      var b = oa(a);
      if (0 != Rc && a.oa && 0 < a.oa.length) throw Error(a + " did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.");
      delete Sc[b];
    }
  }

  Qc.prototype.Da = function () {
    if (this.oa) for (; this.oa.length;) {
      this.oa.shift()();
    }
  };

  var Uc = Object.freeze || function (a) {
    return a;
  };

  var Vc = !Tb || 9 <= Number(dc),
      Wc = Tb && !cc("9"),
      Xc = function () {
    if (!l.addEventListener || !Object.defineProperty) return !1;
    var a = !1,
        b = Object.defineProperty({}, "passive", {
      get: function get() {
        a = !0;
      }
    });

    try {
      l.addEventListener("test", ka, b), l.removeEventListener("test", ka, b);
    } catch (c) {}

    return a;
  }();

  function F(a, b) {
    this.type = a;
    this.b = this.target = b;
    this.defaultPrevented = !1;
  }

  F.prototype.preventDefault = function () {
    this.defaultPrevented = !0;
  };

  function Yc(a, b) {
    F.call(this, a ? a.type : "");
    this.relatedTarget = this.b = this.target = null;
    this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;
    this.key = "";
    this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;
    this.pointerId = 0;
    this.pointerType = "";
    this.a = null;

    if (a) {
      var c = this.type = a.type,
          d = a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : null;
      this.target = a.target || a.srcElement;
      this.b = b;

      if (b = a.relatedTarget) {
        if (Wb) {
          a: {
            try {
              Pb(b.nodeName);
              var e = !0;
              break a;
            } catch (f) {}

            e = !1;
          }

          e || (b = null);
        }
      } else "mouseover" == c ? b = a.fromElement : "mouseout" == c && (b = a.toElement);

      this.relatedTarget = b;
      d ? (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = d.screenX || 0, this.screenY = d.screenY || 0) : (this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0);
      this.button = a.button;
      this.key = a.key || "";
      this.ctrlKey = a.ctrlKey;
      this.altKey = a.altKey;
      this.shiftKey = a.shiftKey;
      this.metaKey = a.metaKey;
      this.pointerId = a.pointerId || 0;
      this.pointerType = "string" === typeof a.pointerType ? a.pointerType : Zc[a.pointerType] || "";
      this.a = a;
      a.defaultPrevented && this.preventDefault();
    }
  }

  r(Yc, F);
  var Zc = Uc({
    2: "touch",
    3: "pen",
    4: "mouse"
  });

  Yc.prototype.preventDefault = function () {
    Yc.$a.preventDefault.call(this);
    var a = this.a;
    if (a.preventDefault) a.preventDefault();else if (a.returnValue = !1, Wc) try {
      if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode) a.keyCode = -1;
    } catch (b) {}
  };

  Yc.prototype.g = function () {
    return this.a;
  };

  var $c = "closure_listenable_" + (1E6 * Math.random() | 0),
      ad = 0;

  function bd(a, b, c, d, e) {
    this.listener = a;
    this.proxy = null;
    this.src = b;
    this.type = c;
    this.capture = !!d;
    this.Ua = e;
    this.key = ++ad;
    this.va = this.Oa = !1;
  }

  function cd(a) {
    a.va = !0;
    a.listener = null;
    a.proxy = null;
    a.src = null;
    a.Ua = null;
  }

  ;

  function dd(a) {
    this.src = a;
    this.a = {};
    this.b = 0;
  }

  dd.prototype.add = function (a, b, c, d, e) {
    var f = a.toString();
    a = this.a[f];
    a || (a = this.a[f] = [], this.b++);
    var g = ed(a, b, d, e);
    -1 < g ? (b = a[g], c || (b.Oa = !1)) : (b = new bd(b, this.src, f, !!d, e), b.Oa = c, a.push(b));
    return b;
  };

  function fd(a, b) {
    var c = b.type;
    c in a.a && Ua(a.a[c], b) && (cd(b), 0 == a.a[c].length && (delete a.a[c], a.b--));
  }

  function ed(a, b, c, d) {
    for (var e = 0; e < a.length; ++e) {
      var f = a[e];
      if (!f.va && f.listener == b && f.capture == !!c && f.Ua == d) return e;
    }

    return -1;
  }

  ;
  var gd = "closure_lm_" + (1E6 * Math.random() | 0),
      hd = {},
      id = 0;

  function jd(a, b, c, d, e) {
    if (d && d.once) kd(a, b, c, d, e);else if (Array.isArray(b)) for (var f = 0; f < b.length; f++) {
      jd(a, b[f], c, d, e);
    } else c = ld(c), a && a[$c] ? md(a, b, c, n(d) ? !!d.capture : !!d, e) : nd(a, b, c, !1, d, e);
  }

  function nd(a, b, c, d, e, f) {
    if (!b) throw Error("Invalid event type");
    var g = n(e) ? !!e.capture : !!e,
        h = od(a);
    h || (a[gd] = h = new dd(a));
    c = h.add(b, c, d, g, f);

    if (!c.proxy) {
      d = pd();
      c.proxy = d;
      d.src = a;
      d.listener = c;
      if (a.addEventListener) Xc || (e = g), void 0 === e && (e = !1), a.addEventListener(b.toString(), d, e);else if (a.attachEvent) a.attachEvent(qd(b.toString()), d);else if (a.addListener && a.removeListener) a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");
      id++;
    }
  }

  function pd() {
    var a = rd,
        b = Vc ? function (c) {
      return a.call(b.src, b.listener, c);
    } : function (c) {
      c = a.call(b.src, b.listener, c);
      if (!c) return c;
    };
    return b;
  }

  function kd(a, b, c, d, e) {
    if (Array.isArray(b)) for (var f = 0; f < b.length; f++) {
      kd(a, b[f], c, d, e);
    } else c = ld(c), a && a[$c] ? sd(a, b, c, n(d) ? !!d.capture : !!d, e) : nd(a, b, c, !0, d, e);
  }

  function G(a, b, c, d, e) {
    if (Array.isArray(b)) for (var f = 0; f < b.length; f++) {
      G(a, b[f], c, d, e);
    } else (d = n(d) ? !!d.capture : !!d, c = ld(c), a && a[$c]) ? (a = a.v, b = String(b).toString(), b in a.a && (f = a.a[b], c = ed(f, c, d, e), -1 < c && (cd(f[c]), Array.prototype.splice.call(f, c, 1), 0 == f.length && (delete a.a[b], a.b--)))) : a && (a = od(a)) && (b = a.a[b.toString()], a = -1, b && (a = ed(b, c, d, e)), (c = -1 < a ? b[a] : null) && td(c));
  }

  function td(a) {
    if ("number" !== typeof a && a && !a.va) {
      var b = a.src;
      if (b && b[$c]) fd(b.v, a);else {
        var c = a.type,
            d = a.proxy;
        b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent ? b.detachEvent(qd(c), d) : b.addListener && b.removeListener && b.removeListener(d);
        id--;
        (c = od(b)) ? (fd(c, a), 0 == c.b && (c.src = null, b[gd] = null)) : cd(a);
      }
    }
  }

  function qd(a) {
    return a in hd ? hd[a] : hd[a] = "on" + a;
  }

  function ud(a, b, c, d) {
    var e = !0;
    if (a = od(a)) if (b = a.a[b.toString()]) for (b = b.concat(), a = 0; a < b.length; a++) {
      var f = b[a];
      f && f.capture == c && !f.va && (f = vd(f, d), e = e && !1 !== f);
    }
    return e;
  }

  function vd(a, b) {
    var c = a.listener,
        d = a.Ua || a.src;
    a.Oa && td(a);
    return c.call(d, b);
  }

  function rd(a, b) {
    if (a.va) return !0;

    if (!Vc) {
      if (!b) a: {
        b = ["window", "event"];

        for (var c = l, d = 0; d < b.length; d++) {
          if (c = c[b[d]], null == c) {
            b = null;
            break a;
          }
        }

        b = c;
      }
      d = b;
      b = new Yc(d, this);
      c = !0;

      if (!(0 > d.keyCode || void 0 != d.returnValue)) {
        a: {
          var e = !1;
          if (0 == d.keyCode) try {
            d.keyCode = -1;
            break a;
          } catch (g) {
            e = !0;
          }
          if (e || void 0 == d.returnValue) d.returnValue = !0;
        }

        d = [];

        for (e = b.b; e; e = e.parentNode) {
          d.push(e);
        }

        a = a.type;

        for (e = d.length - 1; 0 <= e; e--) {
          b.b = d[e];
          var f = ud(d[e], a, !0, b);
          c = c && f;
        }

        for (e = 0; e < d.length; e++) {
          b.b = d[e], f = ud(d[e], a, !1, b), c = c && f;
        }
      }

      return c;
    }

    return vd(a, new Yc(b, this));
  }

  function od(a) {
    a = a[gd];
    return a instanceof dd ? a : null;
  }

  var wd = "__closure_events_fn_" + (1E9 * Math.random() >>> 0);

  function ld(a) {
    if (na(a)) return a;
    a[wd] || (a[wd] = function (b) {
      return a.handleEvent(b);
    });
    return a[wd];
  }

  ;

  function H() {
    Qc.call(this);
    this.v = new dd(this);
    this.$b = this;
    this.fb = null;
  }

  r(H, Qc);
  H.prototype[$c] = !0;

  H.prototype.addEventListener = function (a, b, c, d) {
    jd(this, a, b, c, d);
  };

  H.prototype.removeEventListener = function (a, b, c, d) {
    G(this, a, b, c, d);
  };

  H.prototype.dispatchEvent = function (a) {
    var b,
        c = this.fb;
    if (c) for (b = []; c; c = c.fb) {
      b.push(c);
    }
    c = this.$b;
    var d = a.type || a;
    if ("string" === typeof a) a = new F(a, c);else if (a instanceof F) a.target = a.target || c;else {
      var e = a;
      a = new F(d, c);
      z(a, e);
    }
    e = !0;
    if (b) for (var f = b.length - 1; 0 <= f; f--) {
      var g = a.b = b[f];
      e = xd(g, d, !0, a) && e;
    }
    g = a.b = c;
    e = xd(g, d, !0, a) && e;
    e = xd(g, d, !1, a) && e;
    if (b) for (f = 0; f < b.length; f++) {
      g = a.b = b[f], e = xd(g, d, !1, a) && e;
    }
    return e;
  };

  H.prototype.Da = function () {
    H.$a.Da.call(this);

    if (this.v) {
      var a = this.v,
          b = 0,
          c;

      for (c in a.a) {
        for (var d = a.a[c], e = 0; e < d.length; e++) {
          ++b, cd(d[e]);
        }

        delete a.a[c];
        a.b--;
      }
    }

    this.fb = null;
  };

  function md(a, b, c, d, e) {
    a.v.add(String(b), c, !1, d, e);
  }

  function sd(a, b, c, d, e) {
    a.v.add(String(b), c, !0, d, e);
  }

  function xd(a, b, c, d) {
    b = a.v.a[String(b)];
    if (!b) return !0;
    b = b.concat();

    for (var e = !0, f = 0; f < b.length; ++f) {
      var g = b[f];

      if (g && !g.va && g.capture == c) {
        var h = g.listener,
            m = g.Ua || g.src;
        g.Oa && fd(a.v, g);
        e = !1 !== h.call(m, d) && e;
      }
    }

    return e && !d.defaultPrevented;
  }

  ;

  function zd(a, b, c) {
    if (na(a)) c && (a = q(a, c));else if (a && "function" == typeof a.handleEvent) a = q(a.handleEvent, a);else throw Error("Invalid listener argument");
    return 2147483647 < Number(b) ? -1 : l.setTimeout(a, b || 0);
  }

  function Ad(a) {
    var b = null;
    return new C(function (c, d) {
      b = zd(function () {
        c(void 0);
      }, a);
      -1 == b && d(Error("Failed to schedule timer."));
    }).s(function (c) {
      l.clearTimeout(b);
      throw c;
    });
  }

  ;

  function Bd(a) {
    if (a.V && "function" == typeof a.V) return a.V();
    if ("string" === typeof a) return a.split("");

    if (ma(a)) {
      for (var b = [], c = a.length, d = 0; d < c; d++) {
        b.push(a[d]);
      }

      return b;
    }

    b = [];
    c = 0;

    for (d in a) {
      b[c++] = a[d];
    }

    return b;
  }

  function Cd(a) {
    if (a.Y && "function" == typeof a.Y) return a.Y();

    if (!a.V || "function" != typeof a.V) {
      if (ma(a) || "string" === typeof a) {
        var b = [];
        a = a.length;

        for (var c = 0; c < a; c++) {
          b.push(c);
        }

        return b;
      }

      b = [];
      c = 0;

      for (var d in a) {
        b[c++] = d;
      }

      return b;
    }
  }

  function Dd(a, b) {
    if (a.forEach && "function" == typeof a.forEach) a.forEach(b, void 0);else if (ma(a) || "string" === typeof a) w(a, b, void 0);else for (var c = Cd(a), d = Bd(a), e = d.length, f = 0; f < e; f++) {
      b.call(void 0, d[f], c && c[f], a);
    }
  }

  ;

  function Ed(a, b) {
    this.b = {};
    this.a = [];
    this.c = 0;
    var c = arguments.length;

    if (1 < c) {
      if (c % 2) throw Error("Uneven number of arguments");

      for (var d = 0; d < c; d += 2) {
        this.set(arguments[d], arguments[d + 1]);
      }
    } else if (a) if (a instanceof Ed) for (c = a.Y(), d = 0; d < c.length; d++) {
      this.set(c[d], a.get(c[d]));
    } else for (d in a) {
      this.set(d, a[d]);
    }
  }

  k = Ed.prototype;

  k.V = function () {
    Fd(this);

    for (var a = [], b = 0; b < this.a.length; b++) {
      a.push(this.b[this.a[b]]);
    }

    return a;
  };

  k.Y = function () {
    Fd(this);
    return this.a.concat();
  };

  k.clear = function () {
    this.b = {};
    this.c = this.a.length = 0;
  };

  function Fd(a) {
    if (a.c != a.a.length) {
      for (var b = 0, c = 0; b < a.a.length;) {
        var d = a.a[b];
        Gd(a.b, d) && (a.a[c++] = d);
        b++;
      }

      a.a.length = c;
    }

    if (a.c != a.a.length) {
      var e = {};

      for (c = b = 0; b < a.a.length;) {
        d = a.a[b], Gd(e, d) || (a.a[c++] = d, e[d] = 1), b++;
      }

      a.a.length = c;
    }
  }

  k.get = function (a, b) {
    return Gd(this.b, a) ? this.b[a] : b;
  };

  k.set = function (a, b) {
    Gd(this.b, a) || (this.c++, this.a.push(a));
    this.b[a] = b;
  };

  k.forEach = function (a, b) {
    for (var c = this.Y(), d = 0; d < c.length; d++) {
      var e = c[d],
          f = this.get(e);
      a.call(b, f, e, this);
    }
  };

  function Gd(a, b) {
    return Object.prototype.hasOwnProperty.call(a, b);
  }

  ;
  var Hd = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/\\#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;

  function Id(a, b) {
    if (a) {
      a = a.split("&");

      for (var c = 0; c < a.length; c++) {
        var d = a[c].indexOf("="),
            e = null;

        if (0 <= d) {
          var f = a[c].substring(0, d);
          e = a[c].substring(d + 1);
        } else f = a[c];

        b(f, e ? decodeURIComponent(e.replace(/\+/g, " ")) : "");
      }
    }
  }

  ;

  function Jd(a, b) {
    this.a = this.l = this.f = "";
    this.g = null;
    this.h = this.c = "";
    this.i = !1;
    var c;
    a instanceof Jd ? (this.i = void 0 !== b ? b : a.i, Kd(this, a.f), this.l = a.l, this.a = a.a, Ld(this, a.g), this.c = a.c, Md(this, Nd(a.b)), this.h = a.h) : a && (c = String(a).match(Hd)) ? (this.i = !!b, Kd(this, c[1] || "", !0), this.l = Od(c[2] || ""), this.a = Od(c[3] || "", !0), Ld(this, c[4]), this.c = Od(c[5] || "", !0), Md(this, c[6] || "", !0), this.h = Od(c[7] || "")) : (this.i = !!b, this.b = new Pd(null, this.i));
  }

  Jd.prototype.toString = function () {
    var a = [],
        b = this.f;
    b && a.push(Qd(b, Rd, !0), ":");
    var c = this.a;
    if (c || "file" == b) a.push("//"), (b = this.l) && a.push(Qd(b, Rd, !0), "@"), a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g, "%$1")), c = this.g, null != c && a.push(":", String(c));
    if (c = this.c) this.a && "/" != c.charAt(0) && a.push("/"), a.push(Qd(c, "/" == c.charAt(0) ? Sd : Td, !0));
    (c = this.b.toString()) && a.push("?", c);
    (c = this.h) && a.push("#", Qd(c, Ud));
    return a.join("");
  };

  Jd.prototype.resolve = function (a) {
    var b = new Jd(this),
        c = !!a.f;
    c ? Kd(b, a.f) : c = !!a.l;
    c ? b.l = a.l : c = !!a.a;
    c ? b.a = a.a : c = null != a.g;
    var d = a.c;
    if (c) Ld(b, a.g);else if (c = !!a.c) {
      if ("/" != d.charAt(0)) if (this.a && !this.c) d = "/" + d;else {
        var e = b.c.lastIndexOf("/");
        -1 != e && (d = b.c.substr(0, e + 1) + d);
      }
      e = d;
      if (".." == e || "." == e) d = "";else if (x(e, "./") || x(e, "/.")) {
        d = 0 == e.lastIndexOf("/", 0);
        e = e.split("/");

        for (var f = [], g = 0; g < e.length;) {
          var h = e[g++];
          "." == h ? d && g == e.length && f.push("") : ".." == h ? ((1 < f.length || 1 == f.length && "" != f[0]) && f.pop(), d && g == e.length && f.push("")) : (f.push(h), d = !0);
        }

        d = f.join("/");
      } else d = e;
    }
    c ? b.c = d : c = "" !== a.b.toString();
    c ? Md(b, Nd(a.b)) : c = !!a.h;
    c && (b.h = a.h);
    return b;
  };

  function Kd(a, b, c) {
    a.f = c ? Od(b, !0) : b;
    a.f && (a.f = a.f.replace(/:$/, ""));
  }

  function Ld(a, b) {
    if (b) {
      b = Number(b);
      if (isNaN(b) || 0 > b) throw Error("Bad port number " + b);
      a.g = b;
    } else a.g = null;
  }

  function Md(a, b, c) {
    b instanceof Pd ? (a.b = b, Vd(a.b, a.i)) : (c || (b = Qd(b, Wd)), a.b = new Pd(b, a.i));
  }

  function I(a, b, c) {
    a.b.set(b, c);
  }

  function Xd(a, b) {
    return a.b.get(b);
  }

  function J(a) {
    return a instanceof Jd ? new Jd(a) : new Jd(a, void 0);
  }

  function Yd(a, b, c, d) {
    var e = new Jd(null, void 0);
    a && Kd(e, a);
    b && (e.a = b);
    c && Ld(e, c);
    d && (e.c = d);
    return e;
  }

  function Od(a, b) {
    return a ? b ? decodeURI(a.replace(/%25/g, "%2525")) : decodeURIComponent(a) : "";
  }

  function Qd(a, b, c) {
    return "string" === typeof a ? (a = encodeURI(a).replace(b, Zd), c && (a = a.replace(/%25([0-9a-fA-F]{2})/g, "%$1")), a) : null;
  }

  function Zd(a) {
    a = a.charCodeAt(0);
    return "%" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);
  }

  var Rd = /[#\/\?@]/g,
      Td = /[#\?:]/g,
      Sd = /[#\?]/g,
      Wd = /[#\?@]/g,
      Ud = /#/g;

  function Pd(a, b) {
    this.b = this.a = null;
    this.c = a || null;
    this.f = !!b;
  }

  function $d(a) {
    a.a || (a.a = new Ed(), a.b = 0, a.c && Id(a.c, function (b, c) {
      a.add(decodeURIComponent(b.replace(/\+/g, " ")), c);
    }));
  }

  function ae(a) {
    var b = Cd(a);
    if ("undefined" == typeof b) throw Error("Keys are undefined");
    var c = new Pd(null, void 0);
    a = Bd(a);

    for (var d = 0; d < b.length; d++) {
      var e = b[d],
          f = a[d];
      Array.isArray(f) ? be(c, e, f) : c.add(e, f);
    }

    return c;
  }

  k = Pd.prototype;

  k.add = function (a, b) {
    $d(this);
    this.c = null;
    a = ce(this, a);
    var c = this.a.get(a);
    c || this.a.set(a, c = []);
    c.push(b);
    this.b += 1;
    return this;
  };

  function de(a, b) {
    $d(a);
    b = ce(a, b);
    Gd(a.a.b, b) && (a.c = null, a.b -= a.a.get(b).length, a = a.a, Gd(a.b, b) && (delete a.b[b], a.c--, a.a.length > 2 * a.c && Fd(a)));
  }

  k.clear = function () {
    this.a = this.c = null;
    this.b = 0;
  };

  function ee(a, b) {
    $d(a);
    b = ce(a, b);
    return Gd(a.a.b, b);
  }

  k.forEach = function (a, b) {
    $d(this);
    this.a.forEach(function (c, d) {
      w(c, function (e) {
        a.call(b, e, d, this);
      }, this);
    }, this);
  };

  k.Y = function () {
    $d(this);

    for (var a = this.a.V(), b = this.a.Y(), c = [], d = 0; d < b.length; d++) {
      for (var e = a[d], f = 0; f < e.length; f++) {
        c.push(b[d]);
      }
    }

    return c;
  };

  k.V = function (a) {
    $d(this);
    var b = [];
    if ("string" === typeof a) ee(this, a) && (b = Wa(b, this.a.get(ce(this, a))));else {
      a = this.a.V();

      for (var c = 0; c < a.length; c++) {
        b = Wa(b, a[c]);
      }
    }
    return b;
  };

  k.set = function (a, b) {
    $d(this);
    this.c = null;
    a = ce(this, a);
    ee(this, a) && (this.b -= this.a.get(a).length);
    this.a.set(a, [b]);
    this.b += 1;
    return this;
  };

  k.get = function (a, b) {
    if (!a) return b;
    a = this.V(a);
    return 0 < a.length ? String(a[0]) : b;
  };

  function be(a, b, c) {
    de(a, b);
    0 < c.length && (a.c = null, a.a.set(ce(a, b), Xa(c)), a.b += c.length);
  }

  k.toString = function () {
    if (this.c) return this.c;
    if (!this.a) return "";

    for (var a = [], b = this.a.Y(), c = 0; c < b.length; c++) {
      var d = b[c],
          e = encodeURIComponent(String(d));
      d = this.V(d);

      for (var f = 0; f < d.length; f++) {
        var g = e;
        "" !== d[f] && (g += "=" + encodeURIComponent(String(d[f])));
        a.push(g);
      }
    }

    return this.c = a.join("&");
  };

  function Nd(a) {
    var b = new Pd();
    b.c = a.c;
    a.a && (b.a = new Ed(a.a), b.b = a.b);
    return b;
  }

  function ce(a, b) {
    b = String(b);
    a.f && (b = b.toLowerCase());
    return b;
  }

  function Vd(a, b) {
    b && !a.f && ($d(a), a.c = null, a.a.forEach(function (c, d) {
      var e = d.toLowerCase();
      d != e && (de(this, d), be(this, e, c));
    }, a));
    a.f = b;
  }

  ;

  function fe(a) {
    var b = [];
    ge(new he(), a, b);
    return b.join("");
  }

  function he() {}

  function ge(a, b, c) {
    if (null == b) c.push("null");else {
      if ("object" == typeof b) {
        if (Array.isArray(b)) {
          var d = b;
          b = d.length;
          c.push("[");

          for (var e = "", f = 0; f < b; f++) {
            c.push(e), ge(a, d[f], c), e = ",";
          }

          c.push("]");
          return;
        }

        if (b instanceof String || b instanceof Number || b instanceof Boolean) b = b.valueOf();else {
          c.push("{");
          e = "";

          for (d in b) {
            Object.prototype.hasOwnProperty.call(b, d) && (f = b[d], "function" != typeof f && (c.push(e), ie(d, c), c.push(":"), ge(a, f, c), e = ","));
          }

          c.push("}");
          return;
        }
      }

      switch (typeof b) {
        case "string":
          ie(b, c);
          break;

        case "number":
          c.push(isFinite(b) && !isNaN(b) ? String(b) : "null");
          break;

        case "boolean":
          c.push(String(b));
          break;

        case "function":
          c.push("null");
          break;

        default:
          throw Error("Unknown type: " + typeof b);
      }
    }
  }

  var je = {
    '"': '\\"',
    "\\": "\\\\",
    "/": "\\/",
    "\b": "\\b",
    "\f": "\\f",
    "\n": "\\n",
    "\r": "\\r",
    "\t": "\\t",
    "\x0B": "\\u000b"
  },
      ke = /\uffff/.test("\uFFFF") ? /[\\"\x00-\x1f\x7f-\uffff]/g : /[\\"\x00-\x1f\x7f-\xff]/g;

  function ie(a, b) {
    b.push('"', a.replace(ke, function (c) {
      var d = je[c];
      d || (d = "\\u" + (c.charCodeAt(0) | 65536).toString(16).substr(1), je[c] = d);
      return d;
    }), '"');
  }

  ;

  function le() {
    var a = K();
    return Tb && !!dc && 11 == dc || /Edge\/\d+/.test(a);
  }

  function me() {
    return l.window && l.window.location.href || self && self.location && self.location.href || "";
  }

  function ne(a, b) {
    b = b || l.window;
    var c = "about:blank";
    a && (c = Db(Fb(a)));
    b.location.href = c;
  }

  function oe(a, b) {
    var c = [],
        d;

    for (d in a) {
      d in b ? typeof a[d] != typeof b[d] ? c.push(d) : "object" == typeof a[d] && null != a[d] && null != b[d] ? 0 < oe(a[d], b[d]).length && c.push(d) : a[d] !== b[d] && c.push(d) : c.push(d);
    }

    for (d in b) {
      d in a || c.push(d);
    }

    return c;
  }

  function pe() {
    var a = K();
    a = qe(a) != re ? null : (a = a.match(/\sChrome\/(\d+)/i)) && 2 == a.length ? parseInt(a[1], 10) : null;
    return a && 30 > a ? !1 : !Tb || !dc || 9 < dc;
  }

  function se(a) {
    a = (a || K()).toLowerCase();
    return a.match(/android/) || a.match(/webos/) || a.match(/iphone|ipad|ipod/) || a.match(/blackberry/) || a.match(/windows phone/) || a.match(/iemobile/) ? !0 : !1;
  }

  function te(a) {
    a = a || l.window;

    try {
      a.close();
    } catch (b) {}
  }

  function ue(a, b, c) {
    var d = Math.floor(1E9 * Math.random()).toString();
    b = b || 500;
    c = c || 600;
    var e = (window.screen.availHeight - c) / 2,
        f = (window.screen.availWidth - b) / 2;
    b = {
      width: b,
      height: c,
      top: 0 < e ? e : 0,
      left: 0 < f ? f : 0,
      location: !0,
      resizable: !0,
      statusbar: !0,
      toolbar: !1
    };
    c = K().toLowerCase();
    d && (b.target = d, x(c, "crios/") && (b.target = "_blank"));
    qe(K()) == ve && (a = a || "http://localhost", b.scrollbars = !0);
    c = a || "";
    (a = b) || (a = {});
    d = window;
    b = c instanceof Ab ? c : Fb("undefined" != typeof c.href ? c.href : String(c));
    c = a.target || c.target;
    e = [];

    for (g in a) {
      switch (g) {
        case "width":
        case "height":
        case "top":
        case "left":
          e.push(g + "=" + a[g]);
          break;

        case "target":
        case "noopener":
        case "noreferrer":
          break;

        default:
          e.push(g + "=" + (a[g] ? 1 : 0));
      }
    }

    var g = e.join(",");
    if ((y("iPhone") && !y("iPod") && !y("iPad") || y("iPad") || y("iPod")) && d.navigator && d.navigator.standalone && c && "_self" != c) g = jc(document, "A"), nb(g, "HTMLAnchorElement"), b instanceof Ab || b instanceof Ab || (b = "object" == typeof b && b.sa ? b.ra() : String(b), Eb.test(b) || (b = "about:invalid#zClosurez"), b = new Ab(Bb, b)), g.href = Db(b), g.setAttribute("target", c), a.noreferrer && g.setAttribute("rel", "noreferrer"), a = document.createEvent("MouseEvent"), a.initMouseEvent("click", !0, !0, d, 1), g.dispatchEvent(a), g = {};else if (a.noreferrer) {
      if (g = d.open("", c, g), a = Db(b), g && (Vb && x(a, ";") && (a = "'" + a.replace(/'/g, "%27") + "'"), g.opener = null, a = Jb('<meta name="referrer" content="no-referrer"><meta http-equiv="refresh" content="0; url=' + Ob(a) + '">'), d = g.document)) d.write(Ib(a)), d.close();
    } else (g = d.open(Db(b), c, g)) && a.noopener && (g.opener = null);
    if (g) try {
      g.focus();
    } catch (h) {}
    return g;
  }

  function we(a) {
    return new C(function (b) {
      function c() {
        Ad(2E3).then(function () {
          if (!a || a.closed) b();else return c();
        });
      }

      return c();
    });
  }

  var xe = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,
      ye = /^[^@]+@[^@]+$/;

  function ze() {
    var a = null;
    return new C(function (b) {
      "complete" == l.document.readyState ? b() : (a = function a() {
        b();
      }, kd(window, "load", a));
    }).s(function (b) {
      G(window, "load", a);
      throw b;
    });
  }

  function Ae() {
    return Be(void 0) ? ze().then(function () {
      return new C(function (a, b) {
        var c = l.document,
            d = setTimeout(function () {
          b(Error("Cordova framework is not ready."));
        }, 1E3);
        c.addEventListener("deviceready", function () {
          clearTimeout(d);
          a();
        }, !1);
      });
    }) : E(Error("Cordova must run in an Android or iOS file scheme."));
  }

  function Be(a) {
    a = a || K();
    return !("file:" !== Ce() && "ionic:" !== Ce() || !a.toLowerCase().match(/iphone|ipad|ipod|android/));
  }

  function De() {
    var a = l.window;

    try {
      return !(!a || a == a.top);
    } catch (b) {
      return !1;
    }
  }

  function Ee() {
    return "undefined" !== typeof l.WorkerGlobalScope && "function" === typeof l.importScripts;
  }

  function Fe() {
    return firebase.INTERNAL.hasOwnProperty("reactNative") ? "ReactNative" : firebase.INTERNAL.hasOwnProperty("node") ? "Node" : Ee() ? "Worker" : "Browser";
  }

  function Ge() {
    var a = Fe();
    return "ReactNative" === a || "Node" === a;
  }

  function He() {
    for (var a = 50, b = []; 0 < a;) {
      b.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62 * Math.random()))), a--;
    }

    return b.join("");
  }

  var ve = "Firefox",
      re = "Chrome";

  function qe(a) {
    var b = a.toLowerCase();
    if (x(b, "opera/") || x(b, "opr/") || x(b, "opios/")) return "Opera";
    if (x(b, "iemobile")) return "IEMobile";
    if (x(b, "msie") || x(b, "trident/")) return "IE";
    if (x(b, "edge/")) return "Edge";
    if (x(b, "firefox/")) return ve;
    if (x(b, "silk/")) return "Silk";
    if (x(b, "blackberry")) return "Blackberry";
    if (x(b, "webos")) return "Webos";
    if (!x(b, "safari/") || x(b, "chrome/") || x(b, "crios/") || x(b, "android")) {
      if (!x(b, "chrome/") && !x(b, "crios/") || x(b, "edge/")) {
        if (x(b, "android")) return "Android";
        if ((a = a.match(/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/)) && 2 == a.length) return a[1];
      } else return re;
    } else return "Safari";
    return "Other";
  }

  var Ie = {
    ld: "FirebaseCore-web",
    nd: "FirebaseUI-web"
  };

  function Je(a, b) {
    b = b || [];
    var c = [],
        d = {},
        e;

    for (e in Ie) {
      d[Ie[e]] = !0;
    }

    for (e = 0; e < b.length; e++) {
      "undefined" !== typeof d[b[e]] && (delete d[b[e]], c.push(b[e]));
    }

    c.sort();
    b = c;
    b.length || (b = ["FirebaseCore-web"]);
    c = Fe();
    "Browser" === c ? (d = K(), c = qe(d)) : "Worker" === c && (d = K(), c = qe(d) + "-" + c);
    return c + "/JsCore/" + a + "/" + b.join(",");
  }

  function K() {
    return l.navigator && l.navigator.userAgent || "";
  }

  function L(a, b) {
    a = a.split(".");
    b = b || l;

    for (var c = 0; c < a.length && "object" == typeof b && null != b; c++) {
      b = b[a[c]];
    }

    c != a.length && (b = void 0);
    return b;
  }

  function Ke() {
    try {
      var a = l.localStorage,
          b = Le();
      if (a) return a.setItem(b, "1"), a.removeItem(b), le() ? !!l.indexedDB : !0;
    } catch (c) {
      return Ee() && !!l.indexedDB;
    }

    return !1;
  }

  function Me() {
    return (Ne() || "chrome-extension:" === Ce() || Be()) && !Ge() && Ke() && !Ee();
  }

  function Ne() {
    return "http:" === Ce() || "https:" === Ce();
  }

  function Ce() {
    return l.location && l.location.protocol || null;
  }

  function Oe(a) {
    a = a || K();
    return se(a) || qe(a) == ve ? !1 : !0;
  }

  function Pe(a) {
    return "undefined" === typeof a ? null : fe(a);
  }

  function Qe(a) {
    var b = {},
        c;

    for (c in a) {
      a.hasOwnProperty(c) && null !== a[c] && void 0 !== a[c] && (b[c] = a[c]);
    }

    return b;
  }

  function Re(a) {
    if (null !== a) return JSON.parse(a);
  }

  function Le(a) {
    return a ? a : Math.floor(1E9 * Math.random()).toString();
  }

  function Se(a) {
    a = a || K();
    return "Safari" == qe(a) || a.toLowerCase().match(/iphone|ipad|ipod/) ? !1 : !0;
  }

  function Te() {
    var a = l.___jsl;
    if (a && a.H) for (var b in a.H) {
      if (a.H[b].r = a.H[b].r || [], a.H[b].L = a.H[b].L || [], a.H[b].r = a.H[b].L.concat(), a.CP) for (var c = 0; c < a.CP.length; c++) {
        a.CP[c] = null;
      }
    }
  }

  function Ue(a, b) {
    if (a > b) throw Error("Short delay should be less than long delay!");
    this.a = a;
    this.c = b;
    a = K();
    b = Fe();
    this.b = se(a) || "ReactNative" === b;
  }

  Ue.prototype.get = function () {
    var a = l.navigator;
    return (a && "boolean" === typeof a.onLine && (Ne() || "chrome-extension:" === Ce() || "undefined" !== typeof a.connection) ? a.onLine : 1) ? this.b ? this.c : this.a : Math.min(5E3, this.a);
  };

  function Ve() {
    var a = l.document;
    return a && "undefined" !== typeof a.visibilityState ? "visible" == a.visibilityState : !0;
  }

  function We() {
    var a = l.document,
        _b = null;
    return Ve() || !a ? D() : new C(function (c) {
      _b = function b() {
        Ve() && (a.removeEventListener("visibilitychange", _b, !1), c());
      };

      a.addEventListener("visibilitychange", _b, !1);
    }).s(function (c) {
      a.removeEventListener("visibilitychange", _b, !1);
      throw c;
    });
  }

  function Xe(a) {
    "undefined" !== typeof console && "function" === typeof console.warn && console.warn(a);
  }

  function Ye(a) {
    try {
      var b = new Date(parseInt(a, 10));
      if (!isNaN(b.getTime()) && !/[^0-9]/.test(a)) return b.toUTCString();
    } catch (c) {}

    return null;
  }

  function Ze() {
    return !(!L("fireauth.oauthhelper", l) && !L("fireauth.iframe", l));
  }

  function $e() {
    var a = l.navigator;
    return a && a.serviceWorker && a.serviceWorker.controller || null;
  }

  function af() {
    var a = l.navigator;
    return a && a.serviceWorker ? D().then(function () {
      return a.serviceWorker.ready;
    }).then(function (b) {
      return b.active || null;
    }).s(function () {
      return null;
    }) : D(null);
  }

  ;
  var bf = {};

  function cf(a) {
    bf[a] || (bf[a] = !0, Xe(a));
  }

  ;
  var df;

  try {
    var ef = {};
    Object.defineProperty(ef, "abcd", {
      configurable: !0,
      enumerable: !0,
      value: 1
    });
    Object.defineProperty(ef, "abcd", {
      configurable: !0,
      enumerable: !0,
      value: 2
    });
    df = 2 == ef.abcd;
  } catch (a) {
    df = !1;
  }

  function M(a, b, c) {
    df ? Object.defineProperty(a, b, {
      configurable: !0,
      enumerable: !0,
      value: c
    }) : a[b] = c;
  }

  function N(a, b) {
    if (b) for (var c in b) {
      b.hasOwnProperty(c) && M(a, c, b[c]);
    }
  }

  function ff(a) {
    var b = {};
    N(b, a);
    return b;
  }

  function gf(a) {
    var b = {},
        c;

    for (c in a) {
      a.hasOwnProperty(c) && (b[c] = a[c]);
    }

    return b;
  }

  function hf(a, b) {
    if (!b || !b.length) return !0;
    if (!a) return !1;

    for (var c = 0; c < b.length; c++) {
      var d = a[b[c]];
      if (void 0 === d || null === d || "" === d) return !1;
    }

    return !0;
  }

  function jf(a) {
    var b = a;

    if ("object" == typeof a && null != a) {
      b = "length" in a ? [] : {};

      for (var c in a) {
        M(b, c, jf(a[c]));
      }
    }

    return b;
  }

  ;
  /*
  Copyright 2019 Google Inc.
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  */

  function kf(a) {
    var b = a && (a[lf] ? "phone" : null);

    if (b && a && a[mf]) {
      M(this, "uid", a[mf]);
      M(this, "displayName", a[nf] || null);
      var c = null;
      a[of] && (c = new Date(a[of]).toUTCString());
      M(this, "enrollmentTime", c);
      M(this, "factorId", b);
    } else throw new t("internal-error", "Internal assert: invalid MultiFactorInfo object");
  }

  kf.prototype.w = function () {
    return {
      uid: this.uid,
      displayName: this.displayName,
      factorId: this.factorId,
      enrollmentTime: this.enrollmentTime
    };
  };

  function pf(a) {
    try {
      var b = new qf(a);
    } catch (c) {
      b = null;
    }

    return b;
  }

  var nf = "displayName",
      of = "enrolledAt",
      mf = "mfaEnrollmentId",
      lf = "phoneInfo";

  function qf(a) {
    kf.call(this, a);
    M(this, "phoneNumber", a[lf]);
  }

  r(qf, kf);

  qf.prototype.w = function () {
    var a = qf.$a.w.call(this);
    a.phoneNumber = this.phoneNumber;
    return a;
  };

  function rf(a) {
    var b = {},
        c = a[sf],
        d = a[tf],
        e = a[uf];
    a = pf(a[vf]);
    if (!e || e != wf && e != xf && !c || e == xf && !d || e == yf && !a) throw Error("Invalid checkActionCode response!");
    e == xf ? (b[zf] = c || null, b[Af] = c || null, b[Bf] = d) : (b[zf] = d || null, b[Af] = d || null, b[Bf] = c || null);
    b[Cf] = a || null;
    M(this, Df, e);
    M(this, Ef, jf(b));
  }

  var yf = "REVERT_SECOND_FACTOR_ADDITION",
      wf = "EMAIL_SIGNIN",
      xf = "VERIFY_AND_CHANGE_EMAIL",
      sf = "email",
      vf = "mfaInfo",
      tf = "newEmail",
      uf = "requestType",
      Bf = "email",
      zf = "fromEmail",
      Cf = "multiFactorInfo",
      Af = "previousEmail",
      Ef = "data",
      Df = "operation";

  function Ff(a) {
    a = J(a);
    var b = Xd(a, Gf) || null,
        c = Xd(a, Hf) || null,
        d = Xd(a, If) || null;
    d = d ? Jf[d] || null : null;
    if (!b || !c || !d) throw new t("argument-error", Gf + ", " + Hf + "and " + If + " are required in a valid action code URL.");
    N(this, {
      apiKey: b,
      operation: d,
      code: c,
      continueUrl: Xd(a, Kf) || null,
      languageCode: Xd(a, Lf) || null,
      tenantId: Xd(a, Mf) || null
    });
  }

  var Gf = "apiKey",
      Hf = "oobCode",
      Kf = "continueUrl",
      Lf = "languageCode",
      If = "mode",
      Mf = "tenantId",
      Jf = {
    recoverEmail: "RECOVER_EMAIL",
    resetPassword: "PASSWORD_RESET",
    revertSecondFactorAddition: yf,
    signIn: wf,
    verifyAndChangeEmail: xf,
    verifyEmail: "VERIFY_EMAIL"
  };

  function Nf(a) {
    try {
      return new Ff(a);
    } catch (b) {
      return null;
    }
  }

  ;

  function Of(a) {
    var b = a[Pf];
    if ("undefined" === typeof b) throw new t("missing-continue-uri");
    if ("string" !== typeof b || "string" === typeof b && !b.length) throw new t("invalid-continue-uri");
    this.h = b;
    this.b = this.a = null;
    this.g = !1;
    var c = a[Qf];

    if (c && "object" === typeof c) {
      b = c[Rf];
      var d = c[Sf];
      c = c[Tf];

      if ("string" === typeof b && b.length) {
        this.a = b;
        if ("undefined" !== typeof d && "boolean" !== typeof d) throw new t("argument-error", Sf + " property must be a boolean when specified.");
        this.g = !!d;
        if ("undefined" !== typeof c && ("string" !== typeof c || "string" === typeof c && !c.length)) throw new t("argument-error", Tf + " property must be a non empty string when specified.");
        this.b = c || null;
      } else {
        if ("undefined" !== typeof b) throw new t("argument-error", Rf + " property must be a non empty string when specified.");
        if ("undefined" !== typeof d || "undefined" !== typeof c) throw new t("missing-android-pkg-name");
      }
    } else if ("undefined" !== typeof c) throw new t("argument-error", Qf + " property must be a non null object when specified.");

    this.f = null;
    if ((b = a[Uf]) && "object" === typeof b) {
      if (b = b[Vf], "string" === typeof b && b.length) this.f = b;else {
        if ("undefined" !== typeof b) throw new t("argument-error", Vf + " property must be a non empty string when specified.");
      }
    } else if ("undefined" !== typeof b) throw new t("argument-error", Uf + " property must be a non null object when specified.");
    b = a[Wf];
    if ("undefined" !== typeof b && "boolean" !== typeof b) throw new t("argument-error", Wf + " property must be a boolean when specified.");
    this.c = !!b;
    a = a[Xf];
    if ("undefined" !== typeof a && ("string" !== typeof a || "string" === typeof a && !a.length)) throw new t("argument-error", Xf + " property must be a non empty string when specified.");
    this.i = a || null;
  }

  var Qf = "android",
      Xf = "dynamicLinkDomain",
      Wf = "handleCodeInApp",
      Uf = "iOS",
      Pf = "url",
      Sf = "installApp",
      Tf = "minimumVersion",
      Rf = "packageName",
      Vf = "bundleId";

  function Yf(a) {
    var b = {};
    b.continueUrl = a.h;
    b.canHandleCodeInApp = a.c;
    if (b.androidPackageName = a.a) b.androidMinimumVersion = a.b, b.androidInstallApp = a.g;
    b.iOSBundleId = a.f;
    b.dynamicLinkDomain = a.i;

    for (var c in b) {
      null === b[c] && delete b[c];
    }

    return b;
  }

  ;

  function Zf(a) {
    return Pa(a, function (b) {
      b = b.toString(16);
      return 1 < b.length ? b : "0" + b;
    }).join("");
  }

  ;
  var $f = null;

  function ag(a) {
    var b = "";
    bg(a, function (c) {
      b += String.fromCharCode(c);
    });
    return b;
  }

  function bg(a, b) {
    function c(m) {
      for (; d < a.length;) {
        var p = a.charAt(d++),
            v = $f[p];
        if (null != v) return v;
        if (!/^[\s\xa0]*$/.test(p)) throw Error("Unknown base64 encoding at char: " + p);
      }

      return m;
    }

    cg();

    for (var d = 0;;) {
      var e = c(-1),
          f = c(0),
          g = c(64),
          h = c(64);
      if (64 === h && -1 === e) break;
      b(e << 2 | f >> 4);
      64 != g && (b(f << 4 & 240 | g >> 2), 64 != h && b(g << 6 & 192 | h));
    }
  }

  function cg() {
    if (!$f) {
      $f = {};

      for (var a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""), b = ["+/=", "+/", "-_=", "-_.", "-_"], c = 0; 5 > c; c++) {
        for (var d = a.concat(b[c].split("")), e = 0; e < d.length; e++) {
          var f = d[e];
          void 0 === $f[f] && ($f[f] = e);
        }
      }
    }
  }

  ;

  function dg(a) {
    var b = eg(a);
    if (!(b && b.sub && b.iss && b.aud && b.exp)) throw Error("Invalid JWT");
    this.g = a;
    this.c = b.exp;
    this.h = b.sub;
    ua();
    this.a = b.provider_id || b.firebase && b.firebase.sign_in_provider || null;
    this.f = b.firebase && b.firebase.tenant || null;
    this.b = !!b.is_anonymous || "anonymous" == this.a;
  }

  dg.prototype.S = function () {
    return this.f;
  };

  dg.prototype.i = function () {
    return this.b;
  };

  dg.prototype.toString = function () {
    return this.g;
  };

  function fg(a) {
    try {
      return new dg(a);
    } catch (b) {
      return null;
    }
  }

  function eg(a) {
    if (!a) return null;
    a = a.split(".");
    if (3 != a.length) return null;
    a = a[1];

    for (var b = (4 - a.length % 4) % 4, c = 0; c < b; c++) {
      a += ".";
    }

    try {
      return JSON.parse(ag(a));
    } catch (d) {}

    return null;
  }

  ;
  var gg = "oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version".split(" "),
      hg = ["client_id", "response_type", "scope", "redirect_uri", "state"],
      ig = {
    md: {
      Ja: "locale",
      ua: 700,
      ta: 600,
      fa: "facebook.com",
      Wa: hg
    },
    od: {
      Ja: null,
      ua: 500,
      ta: 750,
      fa: "github.com",
      Wa: hg
    },
    pd: {
      Ja: "hl",
      ua: 515,
      ta: 680,
      fa: "google.com",
      Wa: hg
    },
    vd: {
      Ja: "lang",
      ua: 485,
      ta: 705,
      fa: "twitter.com",
      Wa: gg
    },
    jd: {
      Ja: "locale",
      ua: 640,
      ta: 600,
      fa: "apple.com",
      Wa: []
    }
  };

  function jg(a) {
    for (var b in ig) {
      if (ig[b].fa == a) return ig[b];
    }

    return null;
  }

  ;

  function kg(a) {
    var b = {};
    b["facebook.com"] = lg;
    b["google.com"] = mg;
    b["github.com"] = ng;
    b["twitter.com"] = og;
    var c = a && a[pg];

    try {
      if (c) return b[c] ? new b[c](a) : new qg(a);
      if ("undefined" !== typeof a[rg]) return new sg(a);
    } catch (d) {}

    return null;
  }

  var rg = "idToken",
      pg = "providerId";

  function sg(a) {
    var b = a[pg];

    if (!b && a[rg]) {
      var c = fg(a[rg]);
      c && c.a && (b = c.a);
    }

    if (!b) throw Error("Invalid additional user info!");
    if ("anonymous" == b || "custom" == b) b = null;
    c = !1;
    "undefined" !== typeof a.isNewUser ? c = !!a.isNewUser : "identitytoolkit#SignupNewUserResponse" === a.kind && (c = !0);
    M(this, "providerId", b);
    M(this, "isNewUser", c);
  }

  function qg(a) {
    sg.call(this, a);
    a = Re(a.rawUserInfo || "{}");
    M(this, "profile", jf(a || {}));
  }

  r(qg, sg);

  function lg(a) {
    qg.call(this, a);
    if ("facebook.com" != this.providerId) throw Error("Invalid provider ID!");
  }

  r(lg, qg);

  function ng(a) {
    qg.call(this, a);
    if ("github.com" != this.providerId) throw Error("Invalid provider ID!");
    M(this, "username", this.profile && this.profile.login || null);
  }

  r(ng, qg);

  function mg(a) {
    qg.call(this, a);
    if ("google.com" != this.providerId) throw Error("Invalid provider ID!");
  }

  r(mg, qg);

  function og(a) {
    qg.call(this, a);
    if ("twitter.com" != this.providerId) throw Error("Invalid provider ID!");
    M(this, "username", a.screenName || null);
  }

  r(og, qg);

  function tg(a) {
    var b = J(a),
        c = Xd(b, "link"),
        d = Xd(J(c), "link");
    b = Xd(b, "deep_link_id");
    return Xd(J(b), "link") || b || d || c || a;
  }

  ;

  function ug(a, b) {
    if (!a && !b) throw new t("internal-error", "Internal assert: no raw session string available");
    if (a && b) throw new t("internal-error", "Internal assert: unable to determine the session type");
    this.a = a || null;
    this.b = b || null;
    this.type = this.a ? vg : wg;
  }

  var vg = "enroll",
      wg = "signin";

  ug.prototype.Ha = function () {
    return this.a ? D(this.a) : D(this.b);
  };

  ug.prototype.w = function () {
    return this.type == vg ? {
      multiFactorSession: {
        idToken: this.a
      }
    } : {
      multiFactorSession: {
        pendingCredential: this.b
      }
    };
  };

  function xg() {}

  xg.prototype.ja = function () {};

  xg.prototype.b = function () {};

  xg.prototype.c = function () {};

  xg.prototype.w = function () {};

  function yg(a, b) {
    return a.then(function (c) {
      if (c[zg]) {
        var d = fg(c[zg]);
        if (!d || b != d.h) throw new t("user-mismatch");
        return c;
      }

      throw new t("user-mismatch");
    }).s(function (c) {
      throw c && c.code && c.code == va + "user-not-found" ? new t("user-mismatch") : c;
    });
  }

  function Ag(a, b) {
    if (b) this.a = b;else throw new t("internal-error", "failed to construct a credential");
    M(this, "providerId", a);
    M(this, "signInMethod", a);
  }

  Ag.prototype.ja = function (a) {
    return Bg(a, Cg(this));
  };

  Ag.prototype.b = function (a, b) {
    var c = Cg(this);
    c.idToken = b;
    return Dg(a, c);
  };

  Ag.prototype.c = function (a, b) {
    return yg(Eg(a, Cg(this)), b);
  };

  function Cg(a) {
    return {
      pendingToken: a.a,
      requestUri: "http://localhost"
    };
  }

  Ag.prototype.w = function () {
    return {
      providerId: this.providerId,
      signInMethod: this.signInMethod,
      pendingToken: this.a
    };
  };

  function Fg(a) {
    if (a && a.providerId && a.signInMethod && 0 == a.providerId.indexOf("saml.") && a.pendingToken) try {
      return new Ag(a.providerId, a.pendingToken);
    } catch (b) {}
    return null;
  }

  function Gg(a, b, c) {
    this.a = null;
    if (b.idToken || b.accessToken) b.idToken && M(this, "idToken", b.idToken), b.accessToken && M(this, "accessToken", b.accessToken), b.nonce && !b.pendingToken && M(this, "nonce", b.nonce), b.pendingToken && (this.a = b.pendingToken);else if (b.oauthToken && b.oauthTokenSecret) M(this, "accessToken", b.oauthToken), M(this, "secret", b.oauthTokenSecret);else throw new t("internal-error", "failed to construct a credential");
    M(this, "providerId", a);
    M(this, "signInMethod", c);
  }

  Gg.prototype.ja = function (a) {
    return Bg(a, Hg(this));
  };

  Gg.prototype.b = function (a, b) {
    var c = Hg(this);
    c.idToken = b;
    return Dg(a, c);
  };

  Gg.prototype.c = function (a, b) {
    var c = Hg(this);
    return yg(Eg(a, c), b);
  };

  function Hg(a) {
    var b = {};
    a.idToken && (b.id_token = a.idToken);
    a.accessToken && (b.access_token = a.accessToken);
    a.secret && (b.oauth_token_secret = a.secret);
    b.providerId = a.providerId;
    a.nonce && !a.a && (b.nonce = a.nonce);
    b = {
      postBody: ae(b).toString(),
      requestUri: "http://localhost"
    };
    a.a && (delete b.postBody, b.pendingToken = a.a);
    return b;
  }

  Gg.prototype.w = function () {
    var a = {
      providerId: this.providerId,
      signInMethod: this.signInMethod
    };
    this.idToken && (a.oauthIdToken = this.idToken);
    this.accessToken && (a.oauthAccessToken = this.accessToken);
    this.secret && (a.oauthTokenSecret = this.secret);
    this.nonce && (a.nonce = this.nonce);
    this.a && (a.pendingToken = this.a);
    return a;
  };

  function Ig(a) {
    if (a && a.providerId && a.signInMethod) {
      var b = {
        idToken: a.oauthIdToken,
        accessToken: a.oauthTokenSecret ? null : a.oauthAccessToken,
        oauthTokenSecret: a.oauthTokenSecret,
        oauthToken: a.oauthTokenSecret && a.oauthAccessToken,
        nonce: a.nonce,
        pendingToken: a.pendingToken
      };

      try {
        return new Gg(a.providerId, b, a.signInMethod);
      } catch (c) {}
    }

    return null;
  }

  function Jg(a, b) {
    this.Pc = b || [];
    N(this, {
      providerId: a,
      isOAuthProvider: !0
    });
    this.Hb = {};
    this.ob = (jg(a) || {}).Ja || null;
    this.nb = null;
  }

  Jg.prototype.Ka = function (a) {
    this.Hb = lb(a);
    return this;
  };

  function Kg(a) {
    if ("string" !== typeof a || 0 != a.indexOf("saml.")) throw new t("argument-error", 'SAML provider IDs must be prefixed with "saml."');
    Jg.call(this, a, []);
  }

  r(Kg, Jg);

  function Lg(a) {
    Jg.call(this, a, hg);
    this.a = [];
  }

  r(Lg, Jg);

  Lg.prototype.Ca = function (a) {
    Ta(this.a, a) || this.a.push(a);
    return this;
  };

  Lg.prototype.Pb = function () {
    return Xa(this.a);
  };

  Lg.prototype.credential = function (a, b) {
    var c;
    n(a) ? c = {
      idToken: a.idToken || null,
      accessToken: a.accessToken || null,
      nonce: a.rawNonce || null
    } : c = {
      idToken: a || null,
      accessToken: b || null
    };
    if (!c.idToken && !c.accessToken) throw new t("argument-error", "credential failed: must provide the ID token and/or the access token.");
    return new Gg(this.providerId, c, this.providerId);
  };

  function Mg() {
    Lg.call(this, "facebook.com");
  }

  r(Mg, Lg);
  M(Mg, "PROVIDER_ID", "facebook.com");
  M(Mg, "FACEBOOK_SIGN_IN_METHOD", "facebook.com");

  function Ng(a) {
    if (!a) throw new t("argument-error", "credential failed: expected 1 argument (the OAuth access token).");
    var b = a;
    n(a) && (b = a.accessToken);
    return new Mg().credential({
      accessToken: b
    });
  }

  function Og() {
    Lg.call(this, "github.com");
  }

  r(Og, Lg);
  M(Og, "PROVIDER_ID", "github.com");
  M(Og, "GITHUB_SIGN_IN_METHOD", "github.com");

  function Pg(a) {
    if (!a) throw new t("argument-error", "credential failed: expected 1 argument (the OAuth access token).");
    var b = a;
    n(a) && (b = a.accessToken);
    return new Og().credential({
      accessToken: b
    });
  }

  function Qg() {
    Lg.call(this, "google.com");
    this.Ca("profile");
  }

  r(Qg, Lg);
  M(Qg, "PROVIDER_ID", "google.com");
  M(Qg, "GOOGLE_SIGN_IN_METHOD", "google.com");

  function Rg(a, b) {
    var c = a;
    n(a) && (c = a.idToken, b = a.accessToken);
    return new Qg().credential({
      idToken: c,
      accessToken: b
    });
  }

  function Sg() {
    Jg.call(this, "twitter.com", gg);
  }

  r(Sg, Jg);
  M(Sg, "PROVIDER_ID", "twitter.com");
  M(Sg, "TWITTER_SIGN_IN_METHOD", "twitter.com");

  function Tg(a, b) {
    var c = a;
    n(c) || (c = {
      oauthToken: a,
      oauthTokenSecret: b
    });
    if (!c.oauthToken || !c.oauthTokenSecret) throw new t("argument-error", "credential failed: expected 2 arguments (the OAuth access token and secret).");
    return new Gg("twitter.com", c, "twitter.com");
  }

  function Ug(a, b, c) {
    this.a = a;
    this.f = b;
    M(this, "providerId", "password");
    M(this, "signInMethod", c === Vg.EMAIL_LINK_SIGN_IN_METHOD ? Vg.EMAIL_LINK_SIGN_IN_METHOD : Vg.EMAIL_PASSWORD_SIGN_IN_METHOD);
  }

  Ug.prototype.ja = function (a) {
    return this.signInMethod == Vg.EMAIL_LINK_SIGN_IN_METHOD ? O(a, Wg, {
      email: this.a,
      oobCode: this.f
    }) : O(a, Xg, {
      email: this.a,
      password: this.f
    });
  };

  Ug.prototype.b = function (a, b) {
    return this.signInMethod == Vg.EMAIL_LINK_SIGN_IN_METHOD ? O(a, Yg, {
      idToken: b,
      email: this.a,
      oobCode: this.f
    }) : O(a, Zg, {
      idToken: b,
      email: this.a,
      password: this.f
    });
  };

  Ug.prototype.c = function (a, b) {
    return yg(this.ja(a), b);
  };

  Ug.prototype.w = function () {
    return {
      email: this.a,
      password: this.f,
      signInMethod: this.signInMethod
    };
  };

  function $g(a) {
    return a && a.email && a.password ? new Ug(a.email, a.password, a.signInMethod) : null;
  }

  function Vg() {
    N(this, {
      providerId: "password",
      isOAuthProvider: !1
    });
  }

  function ah(a, b) {
    b = bh(b);
    if (!b) throw new t("argument-error", "Invalid email link!");
    return new Ug(a, b.code, Vg.EMAIL_LINK_SIGN_IN_METHOD);
  }

  function bh(a) {
    a = tg(a);
    return (a = Nf(a)) && a.operation === wf ? a : null;
  }

  N(Vg, {
    PROVIDER_ID: "password"
  });
  N(Vg, {
    EMAIL_LINK_SIGN_IN_METHOD: "emailLink"
  });
  N(Vg, {
    EMAIL_PASSWORD_SIGN_IN_METHOD: "password"
  });

  function ch(a) {
    if (!(a.cb && a.bb || a.La && a.ea)) throw new t("internal-error");
    this.a = a;
    M(this, "providerId", "phone");
    this.fa = "phone";
    M(this, "signInMethod", "phone");
  }

  ch.prototype.ja = function (a) {
    return a.eb(dh(this));
  };

  ch.prototype.b = function (a, b) {
    var c = dh(this);
    c.idToken = b;
    return O(a, eh, c);
  };

  ch.prototype.c = function (a, b) {
    var c = dh(this);
    c.operation = "REAUTH";
    a = O(a, fh, c);
    return yg(a, b);
  };

  ch.prototype.w = function () {
    var a = {
      providerId: "phone"
    };
    this.a.cb && (a.verificationId = this.a.cb);
    this.a.bb && (a.verificationCode = this.a.bb);
    this.a.La && (a.temporaryProof = this.a.La);
    this.a.ea && (a.phoneNumber = this.a.ea);
    return a;
  };

  function gh(a) {
    if (a && "phone" === a.providerId && (a.verificationId && a.verificationCode || a.temporaryProof && a.phoneNumber)) {
      var b = {};
      w(["verificationId", "verificationCode", "temporaryProof", "phoneNumber"], function (c) {
        a[c] && (b[c] = a[c]);
      });
      return new ch(b);
    }

    return null;
  }

  function dh(a) {
    return a.a.La && a.a.ea ? {
      temporaryProof: a.a.La,
      phoneNumber: a.a.ea
    } : {
      sessionInfo: a.a.cb,
      code: a.a.bb
    };
  }

  function hh(a) {
    try {
      this.a = a || firebase.auth();
    } catch (b) {
      throw new t("argument-error", "Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().");
    }

    N(this, {
      providerId: "phone",
      isOAuthProvider: !1
    });
  }

  hh.prototype.eb = function (a, b) {
    var c = this.a.a;
    return D(b.verify()).then(function (d) {
      if ("string" !== typeof d) throw new t("argument-error", "An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.");

      switch (b.type) {
        case "recaptcha":
          var e = n(a) ? a.session : null,
              f = n(a) ? a.phoneNumber : a,
              g;
          e && e.type == vg ? g = e.Ha().then(function (h) {
            return ih(c, {
              idToken: h,
              phoneEnrollmentInfo: {
                phoneNumber: f,
                recaptchaToken: d
              }
            });
          }) : e && e.type == wg ? g = e.Ha().then(function (h) {
            return jh(c, {
              mfaPendingCredential: h,
              mfaEnrollmentId: a.multiFactorHint && a.multiFactorHint.uid || a.multiFactorUid,
              phoneSignInInfo: {
                recaptchaToken: d
              }
            });
          }) : g = kh(c, {
            phoneNumber: f,
            recaptchaToken: d
          });
          return g.then(function (h) {
            "function" === typeof b.reset && b.reset();
            return h;
          }, function (h) {
            "function" === typeof b.reset && b.reset();
            throw h;
          });

        default:
          throw new t("argument-error", 'Only firebase.auth.ApplicationVerifiers with type="recaptcha" are currently supported.');
      }
    });
  };

  function lh(a, b) {
    if (!a) throw new t("missing-verification-id");
    if (!b) throw new t("missing-verification-code");
    return new ch({
      cb: a,
      bb: b
    });
  }

  N(hh, {
    PROVIDER_ID: "phone"
  });
  N(hh, {
    PHONE_SIGN_IN_METHOD: "phone"
  });

  function mh(a) {
    if (a.temporaryProof && a.phoneNumber) return new ch({
      La: a.temporaryProof,
      ea: a.phoneNumber
    });
    var b = a && a.providerId;
    if (!b || "password" === b) return null;
    var c = a && a.oauthAccessToken,
        d = a && a.oauthTokenSecret,
        e = a && a.nonce,
        f = a && a.oauthIdToken,
        g = a && a.pendingToken;

    try {
      switch (b) {
        case "google.com":
          return Rg(f, c);

        case "facebook.com":
          return Ng(c);

        case "github.com":
          return Pg(c);

        case "twitter.com":
          return Tg(c, d);

        default:
          return c || d || f || g ? g ? 0 == b.indexOf("saml.") ? new Ag(b, g) : new Gg(b, {
            pendingToken: g,
            idToken: a.oauthIdToken,
            accessToken: a.oauthAccessToken
          }, b) : new Lg(b).credential({
            idToken: f,
            accessToken: c,
            rawNonce: e
          }) : null;
      }
    } catch (h) {
      return null;
    }
  }

  function nh(a) {
    if (!a.isOAuthProvider) throw new t("invalid-oauth-provider");
  }

  ;

  function oh(a, b, c, d, e, f, g) {
    this.c = a;
    this.b = b || null;
    this.g = c || null;
    this.f = d || null;
    this.i = f || null;
    this.h = g || null;
    this.a = e || null;

    if (this.g || this.a) {
      if (this.g && this.a) throw new t("invalid-auth-event");
      if (this.g && !this.f) throw new t("invalid-auth-event");
    } else throw new t("invalid-auth-event");
  }

  oh.prototype.getUid = function () {
    var a = [];
    a.push(this.c);
    this.b && a.push(this.b);
    this.f && a.push(this.f);
    this.h && a.push(this.h);
    return a.join("-");
  };

  oh.prototype.S = function () {
    return this.h;
  };

  oh.prototype.w = function () {
    return {
      type: this.c,
      eventId: this.b,
      urlResponse: this.g,
      sessionId: this.f,
      postBody: this.i,
      tenantId: this.h,
      error: this.a && this.a.w()
    };
  };

  function ph(a) {
    a = a || {};
    return a.type ? new oh(a.type, a.eventId, a.urlResponse, a.sessionId, a.error && ya(a.error), a.postBody, a.tenantId) : null;
  }

  ;
  /*
  Copyright 2018 Google Inc.
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  */

  function qh() {
    this.b = null;
    this.a = [];
  }

  var rh = null;

  function sh(a) {
    var b = rh;
    b.a.push(a);
    b.b || (b.b = function (c) {
      for (var d = 0; d < b.a.length; d++) {
        b.a[d](c);
      }
    }, a = L("universalLinks.subscribe", l), "function" === typeof a && a(null, b.b));
  }

  ;

  function th(a) {
    var b = "unauthorized-domain",
        c = void 0,
        d = J(a);
    a = d.a;
    d = d.f;
    "chrome-extension" == d ? c = Nb("This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.", a) : "http" == d || "https" == d ? c = Nb("This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.", a) : b = "operation-not-supported-in-this-environment";
    t.call(this, b, c);
  }

  r(th, t);

  function uh(a, b, c) {
    t.call(this, a, c);
    a = b || {};
    a.Ib && M(this, "email", a.Ib);
    a.ea && M(this, "phoneNumber", a.ea);
    a.credential && M(this, "credential", a.credential);
    a.Yb && M(this, "tenantId", a.Yb);
  }

  r(uh, t);

  uh.prototype.w = function () {
    var a = {
      code: this.code,
      message: this.message
    };
    this.email && (a.email = this.email);
    this.phoneNumber && (a.phoneNumber = this.phoneNumber);
    this.tenantId && (a.tenantId = this.tenantId);
    var b = this.credential && this.credential.w();
    b && z(a, b);
    return a;
  };

  uh.prototype.toJSON = function () {
    return this.w();
  };

  function vh(a) {
    if (a.code) {
      var b = a.code || "";
      0 == b.indexOf(va) && (b = b.substring(va.length));
      var c = {
        credential: mh(a),
        Yb: a.tenantId
      };
      if (a.email) c.Ib = a.email;else if (a.phoneNumber) c.ea = a.phoneNumber;else if (!c.credential) return new t(b, a.message || void 0);
      return new uh(b, c, a.message);
    }

    return null;
  }

  ;

  function wh() {}

  wh.prototype.c = null;

  function xh(a) {
    return a.c || (a.c = a.b());
  }

  ;
  var yh;

  function zh() {}

  r(zh, wh);

  zh.prototype.a = function () {
    var a = Ah(this);
    return a ? new ActiveXObject(a) : new XMLHttpRequest();
  };

  zh.prototype.b = function () {
    var a = {};
    Ah(this) && (a[0] = !0, a[1] = !0);
    return a;
  };

  function Ah(a) {
    if (!a.f && "undefined" == typeof XMLHttpRequest && "undefined" != typeof ActiveXObject) {
      for (var b = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"], c = 0; c < b.length; c++) {
        var d = b[c];

        try {
          return new ActiveXObject(d), a.f = d;
        } catch (e) {}
      }

      throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");
    }

    return a.f;
  }

  yh = new zh();

  function Bh() {}

  r(Bh, wh);

  Bh.prototype.a = function () {
    var a = new XMLHttpRequest();
    if ("withCredentials" in a) return a;
    if ("undefined" != typeof XDomainRequest) return new Ch();
    throw Error("Unsupported browser");
  };

  Bh.prototype.b = function () {
    return {};
  };

  function Ch() {
    this.a = new XDomainRequest();
    this.readyState = 0;
    this.onreadystatechange = null;
    this.responseType = this.responseText = this.response = "";
    this.status = -1;
    this.statusText = "";
    this.a.onload = q(this.pc, this);
    this.a.onerror = q(this.Rb, this);
    this.a.onprogress = q(this.qc, this);
    this.a.ontimeout = q(this.uc, this);
  }

  k = Ch.prototype;

  k.open = function (a, b, c) {
    if (null != c && !c) throw Error("Only async requests are supported.");
    this.a.open(a, b);
  };

  k.send = function (a) {
    if (a) {
      if ("string" == typeof a) this.a.send(a);else throw Error("Only string data is supported");
    } else this.a.send();
  };

  k.abort = function () {
    this.a.abort();
  };

  k.setRequestHeader = function () {};

  k.getResponseHeader = function (a) {
    return "content-type" == a.toLowerCase() ? this.a.contentType : "";
  };

  k.pc = function () {
    this.status = 200;
    this.response = this.responseText = this.a.responseText;
    Dh(this, 4);
  };

  k.Rb = function () {
    this.status = 500;
    this.response = this.responseText = "";
    Dh(this, 4);
  };

  k.uc = function () {
    this.Rb();
  };

  k.qc = function () {
    this.status = 200;
    Dh(this, 1);
  };

  function Dh(a, b) {
    a.readyState = b;
    if (a.onreadystatechange) a.onreadystatechange();
  }

  k.getAllResponseHeaders = function () {
    return "content-type: " + this.a.contentType;
  };

  function Eh(a, b, c) {
    this.reset(a, b, c, void 0, void 0);
  }

  Eh.prototype.a = null;
  var Fh = 0;

  Eh.prototype.reset = function (a, b, c, d, e) {
    "number" == typeof e || Fh++;
    d || ua();
    delete this.a;
  };

  function Gh(a) {
    this.f = a;
    this.b = this.c = this.a = null;
  }

  function Hh(a, b) {
    this.name = a;
    this.value = b;
  }

  Hh.prototype.toString = function () {
    return this.name;
  };

  var Ih = new Hh("SEVERE", 1E3),
      Jh = new Hh("WARNING", 900),
      Kh = new Hh("CONFIG", 700),
      Lh = new Hh("FINE", 500);

  function Mh(a) {
    if (a.c) return a.c;
    if (a.a) return Mh(a.a);
    Ea("Root logger has no level set.");
    return null;
  }

  Gh.prototype.log = function (a, b, c) {
    if (a.value >= Mh(this).value) for (na(b) && (b = b()), a = new Eh(a, String(b), this.f), c && (a.a = c), c = this; c;) {
      c = c.a;
    }
  };

  var Nh = {},
      Oh = null;

  function Ph(a) {
    Oh || (Oh = new Gh(""), Nh[""] = Oh, Oh.c = Kh);
    var b;

    if (!(b = Nh[a])) {
      b = new Gh(a);
      var c = a.lastIndexOf("."),
          d = a.substr(c + 1);
      c = Ph(a.substr(0, c));
      c.b || (c.b = {});
      c.b[d] = b;
      b.a = c;
      Nh[a] = b;
    }

    return b;
  }

  ;

  function Qh(a, b) {
    a && a.log(Lh, b, void 0);
  }

  ;

  function Rh(a) {
    this.f = a;
  }

  r(Rh, wh);

  Rh.prototype.a = function () {
    return new Sh(this.f);
  };

  Rh.prototype.b = function (a) {
    return function () {
      return a;
    };
  }({});

  function Sh(a) {
    H.call(this);
    this.o = a;
    this.readyState = Th;
    this.status = 0;
    this.responseType = this.responseText = this.response = this.statusText = "";
    this.onreadystatechange = null;
    this.i = new Headers();
    this.b = null;
    this.m = "GET";
    this.g = "";
    this.a = !1;
    this.h = Ph("goog.net.FetchXmlHttp");
    this.l = this.c = this.f = null;
  }

  r(Sh, H);
  var Th = 0;
  k = Sh.prototype;

  k.open = function (a, b) {
    if (this.readyState != Th) throw this.abort(), Error("Error reopening a connection");
    this.m = a;
    this.g = b;
    this.readyState = 1;
    Uh(this);
  };

  k.send = function (a) {
    if (1 != this.readyState) throw this.abort(), Error("need to call open() first. ");
    this.a = !0;
    var b = {
      headers: this.i,
      method: this.m,
      credentials: void 0,
      cache: void 0
    };
    a && (b.body = a);
    this.o.fetch(new Request(this.g, b)).then(this.tc.bind(this), this.Ta.bind(this));
  };

  k.abort = function () {
    this.response = this.responseText = "";
    this.i = new Headers();
    this.status = 0;
    this.c && this.c.cancel("Request was aborted.");
    1 <= this.readyState && this.a && 4 != this.readyState && (this.a = !1, Vh(this, !1));
    this.readyState = Th;
  };

  k.tc = function (a) {
    this.a && (this.f = a, this.b || (this.b = a.headers, this.readyState = 2, Uh(this)), this.a && (this.readyState = 3, Uh(this), this.a && ("arraybuffer" === this.responseType ? a.arrayBuffer().then(this.rc.bind(this), this.Ta.bind(this)) : "undefined" !== typeof l.ReadableStream && "body" in a ? (this.response = this.responseText = "", this.c = a.body.getReader(), this.l = new TextDecoder(), Wh(this)) : a.text().then(this.sc.bind(this), this.Ta.bind(this)))));
  };

  function Wh(a) {
    a.c.read().then(a.oc.bind(a)).catch(a.Ta.bind(a));
  }

  k.oc = function (a) {
    if (this.a) {
      var b = this.l.decode(a.value ? a.value : new Uint8Array(0), {
        stream: !a.done
      });
      b && (this.response = this.responseText += b);
      a.done ? Vh(this, !0) : Uh(this);
      3 == this.readyState && Wh(this);
    }
  };

  k.sc = function (a) {
    this.a && (this.response = this.responseText = a, Vh(this, !0));
  };

  k.rc = function (a) {
    this.a && (this.response = a, Vh(this, !0));
  };

  k.Ta = function (a) {
    var b = this.h;
    b && b.log(Jh, "Failed to fetch url " + this.g, a instanceof Error ? a : Error(a));
    this.a && Vh(this, !0);
  };

  function Vh(a, b) {
    b && a.f && (a.status = a.f.status, a.statusText = a.f.statusText);
    a.readyState = 4;
    a.f = null;
    a.c = null;
    a.l = null;
    Uh(a);
  }

  k.setRequestHeader = function (a, b) {
    this.i.append(a, b);
  };

  k.getResponseHeader = function (a) {
    return this.b ? this.b.get(a.toLowerCase()) || "" : ((a = this.h) && a.log(Jh, "Attempting to get response header but no headers have been received for url: " + this.g, void 0), "");
  };

  k.getAllResponseHeaders = function () {
    if (!this.b) {
      var a = this.h;
      a && a.log(Jh, "Attempting to get all response headers but no headers have been received for url: " + this.g, void 0);
      return "";
    }

    a = [];

    for (var b = this.b.entries(), c = b.next(); !c.done;) {
      c = c.value, a.push(c[0] + ": " + c[1]), c = b.next();
    }

    return a.join("\r\n");
  };

  function Uh(a) {
    a.onreadystatechange && a.onreadystatechange.call(a);
  }

  ;

  function Xh(a) {
    H.call(this);
    this.headers = new Ed();
    this.O = a || null;
    this.c = !1;
    this.A = this.a = null;
    this.h = this.P = this.l = "";
    this.f = this.N = this.i = this.G = !1;
    this.g = 0;
    this.o = null;
    this.m = Yh;
    this.u = this.R = !1;
  }

  r(Xh, H);
  var Yh = "";
  Xh.prototype.b = Ph("goog.net.XhrIo");
  var Zh = /^https?$/i,
      $h = ["POST", "PUT"];

  function ai(a, b, c, d, e) {
    if (a.a) throw Error("[goog.net.XhrIo] Object is active with another request=" + a.l + "; newUri=" + b);
    c = c ? c.toUpperCase() : "GET";
    a.l = b;
    a.h = "";
    a.P = c;
    a.G = !1;
    a.c = !0;
    a.a = a.O ? a.O.a() : yh.a();
    a.A = a.O ? xh(a.O) : xh(yh);
    a.a.onreadystatechange = q(a.Ub, a);

    try {
      Qh(a.b, bi(a, "Opening Xhr")), a.N = !0, a.a.open(c, String(b), !0), a.N = !1;
    } catch (g) {
      Qh(a.b, bi(a, "Error opening Xhr: " + g.message));
      ci(a, g);
      return;
    }

    b = d || "";
    var f = new Ed(a.headers);
    e && Dd(e, function (g, h) {
      f.set(h, g);
    });
    e = Ra(f.Y());
    d = l.FormData && b instanceof l.FormData;
    !Ta($h, c) || e || d || f.set("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");
    f.forEach(function (g, h) {
      this.a.setRequestHeader(h, g);
    }, a);
    a.m && (a.a.responseType = a.m);
    "withCredentials" in a.a && a.a.withCredentials !== a.R && (a.a.withCredentials = a.R);

    try {
      di(a), 0 < a.g && (a.u = ei(a.a), Qh(a.b, bi(a, "Will abort after " + a.g + "ms if incomplete, xhr2 " + a.u)), a.u ? (a.a.timeout = a.g, a.a.ontimeout = q(a.Ma, a)) : a.o = zd(a.Ma, a.g, a)), Qh(a.b, bi(a, "Sending request")), a.i = !0, a.a.send(b), a.i = !1;
    } catch (g) {
      Qh(a.b, bi(a, "Send error: " + g.message)), ci(a, g);
    }
  }

  function ei(a) {
    return Tb && cc(9) && "number" === typeof a.timeout && void 0 !== a.ontimeout;
  }

  function Sa(a) {
    return "content-type" == a.toLowerCase();
  }

  k = Xh.prototype;

  k.Ma = function () {
    "undefined" != typeof ha && this.a && (this.h = "Timed out after " + this.g + "ms, aborting", Qh(this.b, bi(this, this.h)), this.dispatchEvent("timeout"), this.abort(8));
  };

  function ci(a, b) {
    a.c = !1;
    a.a && (a.f = !0, a.a.abort(), a.f = !1);
    a.h = b;
    fi(a);
    gi(a);
  }

  function fi(a) {
    a.G || (a.G = !0, a.dispatchEvent("complete"), a.dispatchEvent("error"));
  }

  k.abort = function () {
    this.a && this.c && (Qh(this.b, bi(this, "Aborting")), this.c = !1, this.f = !0, this.a.abort(), this.f = !1, this.dispatchEvent("complete"), this.dispatchEvent("abort"), gi(this));
  };

  k.Da = function () {
    this.a && (this.c && (this.c = !1, this.f = !0, this.a.abort(), this.f = !1), gi(this, !0));
    Xh.$a.Da.call(this);
  };

  k.Ub = function () {
    this.xa || (this.N || this.i || this.f ? hi(this) : this.Ic());
  };

  k.Ic = function () {
    hi(this);
  };

  function hi(a) {
    if (a.c && "undefined" != typeof ha) if (a.A[1] && 4 == ii(a) && 2 == ji(a)) Qh(a.b, bi(a, "Local request error detected and ignored"));else if (a.i && 4 == ii(a)) zd(a.Ub, 0, a);else if (a.dispatchEvent("readystatechange"), 4 == ii(a)) {
      Qh(a.b, bi(a, "Request complete"));
      a.c = !1;

      try {
        var b = ji(a);

        a: switch (b) {
          case 200:
          case 201:
          case 202:
          case 204:
          case 206:
          case 304:
          case 1223:
            var c = !0;
            break a;

          default:
            c = !1;
        }

        var d;

        if (!(d = c)) {
          var e;

          if (e = 0 === b) {
            var f = String(a.l).match(Hd)[1] || null;

            if (!f && l.self && l.self.location) {
              var g = l.self.location.protocol;
              f = g.substr(0, g.length - 1);
            }

            e = !Zh.test(f ? f.toLowerCase() : "");
          }

          d = e;
        }

        if (d) a.dispatchEvent("complete"), a.dispatchEvent("success");else {
          try {
            var h = 2 < ii(a) ? a.a.statusText : "";
          } catch (m) {
            Qh(a.b, "Can not get status: " + m.message), h = "";
          }

          a.h = h + " [" + ji(a) + "]";
          fi(a);
        }
      } finally {
        gi(a);
      }
    }
  }

  function gi(a, b) {
    if (a.a) {
      di(a);
      var c = a.a,
          d = a.A[0] ? ka : null;
      a.a = null;
      a.A = null;
      b || a.dispatchEvent("ready");

      try {
        c.onreadystatechange = d;
      } catch (e) {
        (a = a.b) && a.log(Ih, "Problem encountered resetting onreadystatechange: " + e.message, void 0);
      }
    }
  }

  function di(a) {
    a.a && a.u && (a.a.ontimeout = null);
    a.o && (l.clearTimeout(a.o), a.o = null);
  }

  function ii(a) {
    return a.a ? a.a.readyState : 0;
  }

  function ji(a) {
    try {
      return 2 < ii(a) ? a.a.status : -1;
    } catch (b) {
      return -1;
    }
  }

  function ki(a) {
    try {
      return a.a ? a.a.responseText : "";
    } catch (b) {
      return Qh(a.b, "Can not get responseText: " + b.message), "";
    }
  }

  k.getResponse = function () {
    try {
      if (!this.a) return null;
      if ("response" in this.a) return this.a.response;

      switch (this.m) {
        case Yh:
        case "text":
          return this.a.responseText;

        case "arraybuffer":
          if ("mozResponseArrayBuffer" in this.a) return this.a.mozResponseArrayBuffer;
      }

      var a = this.b;
      a && a.log(Ih, "Response type " + this.m + " is not supported on this browser", void 0);
      return null;
    } catch (b) {
      return Qh(this.b, "Can not get response: " + b.message), null;
    }
  };

  function bi(a, b) {
    return b + " [" + a.P + " " + a.l + " " + ji(a) + "]";
  }

  ;
  /*
  Portions of this code are from MochiKit, received by
  The Closure Authors under the MIT license. All other code is Copyright
  2005-2009 The Closure Authors. All Rights Reserved.
  */

  function li(a) {
    var b = mi;
    this.g = [];
    this.u = b;
    this.o = a || null;
    this.f = this.a = !1;
    this.c = void 0;
    this.m = this.A = this.i = !1;
    this.h = 0;
    this.b = null;
    this.l = 0;
  }

  li.prototype.cancel = function (a) {
    if (this.a) this.c instanceof li && this.c.cancel();else {
      if (this.b) {
        var b = this.b;
        delete this.b;
        a ? b.cancel(a) : (b.l--, 0 >= b.l && b.cancel());
      }

      this.u ? this.u.call(this.o, this) : this.m = !0;
      this.a || (a = new ni(this), oi(this), pi(this, !1, a));
    }
  };

  li.prototype.v = function (a, b) {
    this.i = !1;
    pi(this, a, b);
  };

  function pi(a, b, c) {
    a.a = !0;
    a.c = c;
    a.f = !b;
    qi(a);
  }

  function oi(a) {
    if (a.a) {
      if (!a.m) throw new ri(a);
      a.m = !1;
    }
  }

  function si(a, b) {
    ti(a, null, b, void 0);
  }

  function ti(a, b, c, d) {
    a.g.push([b, c, d]);
    a.a && qi(a);
  }

  li.prototype.then = function (a, b, c) {
    var d,
        e,
        f = new C(function (g, h) {
      d = g;
      e = h;
    });
    ti(this, d, function (g) {
      g instanceof ni ? f.cancel() : e(g);
    });
    return f.then(a, b, c);
  };

  li.prototype.$goog_Thenable = !0;

  function ui(a) {
    return Qa(a.g, function (b) {
      return na(b[1]);
    });
  }

  function qi(a) {
    if (a.h && a.a && ui(a)) {
      var b = a.h,
          c = vi[b];
      c && (l.clearTimeout(c.a), delete vi[b]);
      a.h = 0;
    }

    a.b && (a.b.l--, delete a.b);
    b = a.c;

    for (var d = c = !1; a.g.length && !a.i;) {
      var e = a.g.shift(),
          f = e[0],
          g = e[1];
      e = e[2];
      if (f = a.f ? g : f) try {
        var h = f.call(e || a.o, b);
        void 0 !== h && (a.f = a.f && (h == b || h instanceof Error), a.c = b = h);
        if (Ca(b) || "function" === typeof l.Promise && b instanceof l.Promise) d = !0, a.i = !0;
      } catch (m) {
        b = m, a.f = !0, ui(a) || (c = !0);
      }
    }

    a.c = b;
    d && (h = q(a.v, a, !0), d = q(a.v, a, !1), b instanceof li ? (ti(b, h, d), b.A = !0) : b.then(h, d));
    c && (b = new wi(b), vi[b.a] = b, a.h = b.a);
  }

  function ri() {
    u.call(this);
  }

  r(ri, u);
  ri.prototype.message = "Deferred has already fired";
  ri.prototype.name = "AlreadyCalledError";

  function ni() {
    u.call(this);
  }

  r(ni, u);
  ni.prototype.message = "Deferred was canceled";
  ni.prototype.name = "CanceledError";

  function wi(a) {
    this.a = l.setTimeout(q(this.c, this), 0);
    this.b = a;
  }

  wi.prototype.c = function () {
    delete vi[this.a];
    throw this.b;
  };

  var vi = {};

  function xi(a) {
    var b = {},
        c = b.document || document,
        d = wb(a).toString(),
        e = jc(document, "SCRIPT"),
        f = {
      Vb: e,
      Ma: void 0
    },
        g = new li(f),
        h = null,
        m = null != b.timeout ? b.timeout : 5E3;
    0 < m && (h = window.setTimeout(function () {
      yi(e, !0);
      var p = new zi(Ai, "Timeout reached for loading script " + d);
      oi(g);
      pi(g, !1, p);
    }, m), f.Ma = h);

    e.onload = e.onreadystatechange = function () {
      e.readyState && "loaded" != e.readyState && "complete" != e.readyState || (yi(e, b.wd || !1, h), oi(g), pi(g, !0, null));
    };

    e.onerror = function () {
      yi(e, !0, h);
      var p = new zi(Bi, "Error while loading script " + d);
      oi(g);
      pi(g, !1, p);
    };

    f = b.attributes || {};
    z(f, {
      type: "text/javascript",
      charset: "UTF-8"
    });
    gc(e, f);
    Mb(e, a);
    Ci(c).appendChild(e);
    return g;
  }

  function Ci(a) {
    var b;
    return (b = (a || document).getElementsByTagName("HEAD")) && 0 != b.length ? b[0] : a.documentElement;
  }

  function mi() {
    if (this && this.Vb) {
      var a = this.Vb;
      a && "SCRIPT" == a.tagName && yi(a, !0, this.Ma);
    }
  }

  function yi(a, b, c) {
    null != c && l.clearTimeout(c);
    a.onload = ka;
    a.onerror = ka;
    a.onreadystatechange = ka;
    b && window.setTimeout(function () {
      a && a.parentNode && a.parentNode.removeChild(a);
    }, 0);
  }

  var Bi = 0,
      Ai = 1;

  function zi(a, b) {
    var c = "Jsloader error (code #" + a + ")";
    b && (c += ": " + b);
    u.call(this, c);
    this.code = a;
  }

  r(zi, u);

  function Di(a) {
    this.f = a;
  }

  r(Di, wh);

  Di.prototype.a = function () {
    return new this.f();
  };

  Di.prototype.b = function () {
    return {};
  };

  function Ei(a, b, c) {
    this.c = a;
    a = b || {};
    this.l = a.secureTokenEndpoint || "https://securetoken.googleapis.com/v1/token";
    this.v = a.secureTokenTimeout || Fi;
    this.g = lb(a.secureTokenHeaders || Gi);
    this.h = a.firebaseEndpoint || "https://www.googleapis.com/identitytoolkit/v3/relyingparty/";
    this.i = a.identityPlatformEndpoint || "https://identitytoolkit.googleapis.com/v2/";
    this.m = a.firebaseTimeout || Hi;
    this.a = lb(a.firebaseHeaders || Ii);
    c && (this.a["X-Client-Version"] = c, this.g["X-Client-Version"] = c);
    c = "Node" == Fe();
    c = l.XMLHttpRequest || c && firebase.INTERNAL.node && firebase.INTERNAL.node.XMLHttpRequest;
    if (!c && !Ee()) throw new t("internal-error", "The XMLHttpRequest compatibility library was not found.");
    this.f = void 0;
    Ee() ? this.f = new Rh(self) : Ge() ? this.f = new Di(c) : this.f = new Bh();
    this.b = null;
  }

  var Ji,
      zg = "idToken",
      Fi = new Ue(3E4, 6E4),
      Gi = {
    "Content-Type": "application/x-www-form-urlencoded"
  },
      Hi = new Ue(3E4, 6E4),
      Ii = {
    "Content-Type": "application/json"
  };

  function Ki(a, b) {
    b ? a.a["X-Firebase-Locale"] = b : delete a.a["X-Firebase-Locale"];
  }

  function Li(a, b) {
    b && (a.l = Mi("https://securetoken.googleapis.com/v1/token", b), a.h = Mi("https://www.googleapis.com/identitytoolkit/v3/relyingparty/", b), a.i = Mi("https://identitytoolkit.googleapis.com/v2/", b));
  }

  function Mi(a, b) {
    a = J(a);
    b = J(b.url);
    a.c = a.a + a.c;
    Kd(a, b.f);
    a.a = b.a;
    Ld(a, b.g);
    return a.toString();
  }

  function Ni(a, b) {
    b ? (a.a["X-Client-Version"] = b, a.g["X-Client-Version"] = b) : (delete a.a["X-Client-Version"], delete a.g["X-Client-Version"]);
  }

  Ei.prototype.S = function () {
    return this.b;
  };

  function Oi(a, b, c, d, e, f, g) {
    pe() || Ee() ? a = q(a.u, a) : (Ji || (Ji = new C(function (h, m) {
      Pi(h, m);
    })), a = q(a.o, a));
    a(b, c, d, e, f, g);
  }

  Ei.prototype.u = function (a, b, c, d, e, f) {
    if (Ee() && ("undefined" === typeof l.fetch || "undefined" === typeof l.Headers || "undefined" === typeof l.Request)) throw new t("operation-not-supported-in-this-environment", "fetch, Headers and Request native APIs or equivalent Polyfills must be available to support HTTP requests from a Worker environment.");
    var g = new Xh(this.f);

    if (f) {
      g.g = Math.max(0, f);
      var h = setTimeout(function () {
        g.dispatchEvent("timeout");
      }, f);
    }

    md(g, "complete", function () {
      h && clearTimeout(h);
      var m = null;

      try {
        m = JSON.parse(ki(this)) || null;
      } catch (p) {
        m = null;
      }

      b && b(m);
    });
    sd(g, "ready", function () {
      h && clearTimeout(h);
      Tc(this);
    });
    sd(g, "timeout", function () {
      h && clearTimeout(h);
      Tc(this);
      b && b(null);
    });
    ai(g, a, c, d, e);
  };

  var Qi = new ob(pb, "https://apis.google.com/js/client.js?onload=%{onload}"),
      Ri = "__fcb" + Math.floor(1E6 * Math.random()).toString();

  function Pi(a, b) {
    if (((window.gapi || {}).client || {}).request) a();else {
      l[Ri] = function () {
        ((window.gapi || {}).client || {}).request ? a() : b(Error("CORS_UNSUPPORTED"));
      };

      var c = xb(Qi, {
        onload: Ri
      });
      si(xi(c), function () {
        b(Error("CORS_UNSUPPORTED"));
      });
    }
  }

  Ei.prototype.o = function (a, b, c, d, e) {
    var f = this;
    Ji.then(function () {
      window.gapi.client.setApiKey(f.c);
      var g = window.gapi.auth.getToken();
      window.gapi.auth.setToken(null);
      window.gapi.client.request({
        path: a,
        method: c,
        body: d,
        headers: e,
        authType: "none",
        callback: function callback(h) {
          window.gapi.auth.setToken(g);
          b && b(h);
        }
      });
    }).s(function (g) {
      b && b({
        error: {
          message: g && g.message || "CORS_UNSUPPORTED"
        }
      });
    });
  };

  function Si(a, b) {
    return new C(function (c, d) {
      "refresh_token" == b.grant_type && b.refresh_token || "authorization_code" == b.grant_type && b.code ? Oi(a, a.l + "?key=" + encodeURIComponent(a.c), function (e) {
        e ? e.error ? d(Ti(e)) : e.access_token && e.refresh_token ? c(e) : d(new t("internal-error")) : d(new t("network-request-failed"));
      }, "POST", ae(b).toString(), a.g, a.v.get()) : d(new t("internal-error"));
    });
  }

  function Ui(a, b, c, d, e, f, g) {
    var h = J(b + c);
    I(h, "key", a.c);
    g && I(h, "cb", ua().toString());
    var m = "GET" == d;
    if (m) for (var p in e) {
      e.hasOwnProperty(p) && I(h, p, e[p]);
    }
    return new C(function (v, B) {
      Oi(a, h.toString(), function (A) {
        A ? A.error ? B(Ti(A, f || {})) : v(A) : B(new t("network-request-failed"));
      }, d, m ? void 0 : fe(Qe(e)), a.a, a.m.get());
    });
  }

  function Vi(a) {
    a = a.email;
    if ("string" !== typeof a || !ye.test(a)) throw new t("invalid-email");
  }

  function Wi(a) {
    "email" in a && Vi(a);
  }

  function Xi(a, b) {
    return O(a, Yi, {
      identifier: b,
      continueUri: Ne() ? me() : "http://localhost"
    }).then(function (c) {
      return c.signinMethods || [];
    });
  }

  function Zi(a) {
    return O(a, $i, {}).then(function (b) {
      return b.authorizedDomains || [];
    });
  }

  function P(a) {
    if (!a[zg]) {
      if (a.mfaPendingCredential) throw new t("multi-factor-auth-required", null, lb(a));
      throw new t("internal-error");
    }
  }

  function aj(a) {
    if (a.phoneNumber || a.temporaryProof) {
      if (!a.phoneNumber || !a.temporaryProof) throw new t("internal-error");
    } else {
      if (!a.sessionInfo) throw new t("missing-verification-id");
      if (!a.code) throw new t("missing-verification-code");
    }
  }

  Ei.prototype.yb = function () {
    return O(this, bj, {});
  };

  Ei.prototype.Ab = function (a, b) {
    return O(this, cj, {
      idToken: a,
      email: b
    });
  };

  Ei.prototype.Bb = function (a, b) {
    return O(this, Zg, {
      idToken: a,
      password: b
    });
  };

  var dj = {
    displayName: "DISPLAY_NAME",
    photoUrl: "PHOTO_URL"
  };
  k = Ei.prototype;

  k.Cb = function (a, b) {
    var c = {
      idToken: a
    },
        d = [];
    jb(dj, function (e, f) {
      var g = b[f];
      null === g ? d.push(e) : f in b && (c[f] = g);
    });
    d.length && (c.deleteAttribute = d);
    return O(this, cj, c);
  };

  k.ub = function (a, b) {
    a = {
      requestType: "PASSWORD_RESET",
      email: a
    };
    z(a, b);
    return O(this, ej, a);
  };

  k.vb = function (a, b) {
    a = {
      requestType: "EMAIL_SIGNIN",
      email: a
    };
    z(a, b);
    return O(this, fj, a);
  };

  k.tb = function (a, b) {
    a = {
      requestType: "VERIFY_EMAIL",
      idToken: a
    };
    z(a, b);
    return O(this, gj, a);
  };

  k.Db = function (a, b, c) {
    a = {
      requestType: "VERIFY_AND_CHANGE_EMAIL",
      idToken: a,
      newEmail: b
    };
    z(a, c);
    return O(this, hj, a);
  };

  function kh(a, b) {
    return O(a, ij, b);
  }

  k.eb = function (a) {
    return O(this, jj, a);
  };

  function ih(a, b) {
    return O(a, kj, b).then(function (c) {
      return c.phoneSessionInfo.sessionInfo;
    });
  }

  function lj(a) {
    if (!a.phoneVerificationInfo) throw new t("internal-error");
    if (!a.phoneVerificationInfo.sessionInfo) throw new t("missing-verification-id");
    if (!a.phoneVerificationInfo.code) throw new t("missing-verification-code");
  }

  function jh(a, b) {
    return O(a, mj, b).then(function (c) {
      return c.phoneResponseInfo.sessionInfo;
    });
  }

  function nj(a, b, c) {
    return O(a, oj, {
      idToken: b,
      deleteProvider: c
    });
  }

  function pj(a) {
    if (!a.requestUri || !a.sessionId && !a.postBody && !a.pendingToken) throw new t("internal-error");
  }

  function qj(a, b) {
    b.oauthIdToken && b.providerId && 0 == b.providerId.indexOf("oidc.") && !b.pendingToken && (a.sessionId ? b.nonce = a.sessionId : a.postBody && (a = new Pd(a.postBody), ee(a, "nonce") && (b.nonce = a.get("nonce"))));
    return b;
  }

  function rj(a) {
    var b = null;
    a.needConfirmation ? (a.code = "account-exists-with-different-credential", b = vh(a)) : "FEDERATED_USER_ID_ALREADY_LINKED" == a.errorMessage ? (a.code = "credential-already-in-use", b = vh(a)) : "EMAIL_EXISTS" == a.errorMessage ? (a.code = "email-already-in-use", b = vh(a)) : a.errorMessage && (b = sj(a.errorMessage));
    if (b) throw b;
    P(a);
  }

  function Bg(a, b) {
    b.returnIdpCredential = !0;
    return O(a, tj, b);
  }

  function Dg(a, b) {
    b.returnIdpCredential = !0;
    return O(a, uj, b);
  }

  function Eg(a, b) {
    b.returnIdpCredential = !0;
    b.autoCreate = !1;
    return O(a, vj, b);
  }

  function wj(a) {
    if (!a.oobCode) throw new t("invalid-action-code");
  }

  k.mb = function (a, b) {
    return O(this, xj, {
      oobCode: a,
      newPassword: b
    });
  };

  k.Qa = function (a) {
    return O(this, yj, {
      oobCode: a
    });
  };

  k.ib = function (a) {
    return O(this, zj, {
      oobCode: a
    });
  };

  var zj = {
    endpoint: "setAccountInfo",
    B: wj,
    Z: "email",
    C: !0
  },
      yj = {
    endpoint: "resetPassword",
    B: wj,
    F: function F(a) {
      var b = a.requestType;
      if (!b || !a.email && "EMAIL_SIGNIN" != b && "VERIFY_AND_CHANGE_EMAIL" != b) throw new t("internal-error");
    },
    C: !0
  },
      Aj = {
    endpoint: "signupNewUser",
    B: function B(a) {
      Vi(a);
      if (!a.password) throw new t("weak-password");
    },
    F: P,
    U: !0,
    C: !0
  },
      Yi = {
    endpoint: "createAuthUri",
    C: !0
  },
      Bj = {
    endpoint: "deleteAccount",
    M: ["idToken"]
  },
      oj = {
    endpoint: "setAccountInfo",
    M: ["idToken", "deleteProvider"],
    B: function B(a) {
      if ("array" != la(a.deleteProvider)) throw new t("internal-error");
    }
  },
      Wg = {
    endpoint: "emailLinkSignin",
    M: ["email", "oobCode"],
    B: Vi,
    F: P,
    U: !0,
    C: !0
  },
      Yg = {
    endpoint: "emailLinkSignin",
    M: ["idToken", "email", "oobCode"],
    B: Vi,
    F: P,
    U: !0
  },
      Cj = {
    endpoint: "accounts/mfaEnrollment:finalize",
    M: ["idToken", "phoneVerificationInfo"],
    B: lj,
    F: P,
    C: !0,
    Na: !0
  },
      Dj = {
    endpoint: "accounts/mfaSignIn:finalize",
    M: ["mfaPendingCredential", "phoneVerificationInfo"],
    B: lj,
    F: P,
    C: !0,
    Na: !0
  },
      Ej = {
    endpoint: "getAccountInfo"
  },
      fj = {
    endpoint: "getOobConfirmationCode",
    M: ["requestType"],
    B: function B(a) {
      if ("EMAIL_SIGNIN" != a.requestType) throw new t("internal-error");
      Vi(a);
    },
    Z: "email",
    C: !0
  },
      gj = {
    endpoint: "getOobConfirmationCode",
    M: ["idToken", "requestType"],
    B: function B(a) {
      if ("VERIFY_EMAIL" != a.requestType) throw new t("internal-error");
    },
    Z: "email",
    C: !0
  },
      hj = {
    endpoint: "getOobConfirmationCode",
    M: ["idToken", "newEmail", "requestType"],
    B: function B(a) {
      if ("VERIFY_AND_CHANGE_EMAIL" != a.requestType) throw new t("internal-error");
    },
    Z: "email",
    C: !0
  },
      ej = {
    endpoint: "getOobConfirmationCode",
    M: ["requestType"],
    B: function B(a) {
      if ("PASSWORD_RESET" != a.requestType) throw new t("internal-error");
      Vi(a);
    },
    Z: "email",
    C: !0
  },
      $i = {
    kb: !0,
    endpoint: "getProjectConfig",
    Tb: "GET"
  },
      Fj = {
    kb: !0,
    endpoint: "getRecaptchaParam",
    Tb: "GET",
    F: function F(a) {
      if (!a.recaptchaSiteKey) throw new t("internal-error");
    }
  },
      xj = {
    endpoint: "resetPassword",
    B: wj,
    Z: "email",
    C: !0
  },
      ij = {
    endpoint: "sendVerificationCode",
    M: ["phoneNumber", "recaptchaToken"],
    Z: "sessionInfo",
    C: !0
  },
      cj = {
    endpoint: "setAccountInfo",
    M: ["idToken"],
    B: Wi,
    U: !0
  },
      Zg = {
    endpoint: "setAccountInfo",
    M: ["idToken"],
    B: function B(a) {
      Wi(a);
      if (!a.password) throw new t("weak-password");
    },
    F: P,
    U: !0
  },
      bj = {
    endpoint: "signupNewUser",
    F: P,
    U: !0,
    C: !0
  },
      kj = {
    endpoint: "accounts/mfaEnrollment:start",
    M: ["idToken", "phoneEnrollmentInfo"],
    B: function B(a) {
      if (!a.phoneEnrollmentInfo) throw new t("internal-error");
      if (!a.phoneEnrollmentInfo.phoneNumber) throw new t("missing-phone-number");
      if (!a.phoneEnrollmentInfo.recaptchaToken) throw new t("missing-app-credential");
    },
    F: function F(a) {
      if (!a.phoneSessionInfo || !a.phoneSessionInfo.sessionInfo) throw new t("internal-error");
    },
    C: !0,
    Na: !0
  },
      mj = {
    endpoint: "accounts/mfaSignIn:start",
    M: ["mfaPendingCredential", "mfaEnrollmentId", "phoneSignInInfo"],
    B: function B(a) {
      if (!a.phoneSignInInfo || !a.phoneSignInInfo.recaptchaToken) throw new t("missing-app-credential");
    },
    F: function F(a) {
      if (!a.phoneResponseInfo || !a.phoneResponseInfo.sessionInfo) throw new t("internal-error");
    },
    C: !0,
    Na: !0
  },
      tj = {
    endpoint: "verifyAssertion",
    B: pj,
    Xa: qj,
    F: rj,
    U: !0,
    C: !0
  },
      vj = {
    endpoint: "verifyAssertion",
    B: pj,
    Xa: qj,
    F: function F(a) {
      if (a.errorMessage && "USER_NOT_FOUND" == a.errorMessage) throw new t("user-not-found");
      if (a.errorMessage) throw sj(a.errorMessage);
      P(a);
    },
    U: !0,
    C: !0
  },
      uj = {
    endpoint: "verifyAssertion",
    B: function B(a) {
      pj(a);
      if (!a.idToken) throw new t("internal-error");
    },
    Xa: qj,
    F: rj,
    U: !0
  },
      Gj = {
    endpoint: "verifyCustomToken",
    B: function B(a) {
      if (!a.token) throw new t("invalid-custom-token");
    },
    F: P,
    U: !0,
    C: !0
  },
      Xg = {
    endpoint: "verifyPassword",
    B: function B(a) {
      Vi(a);
      if (!a.password) throw new t("wrong-password");
    },
    F: P,
    U: !0,
    C: !0
  },
      jj = {
    endpoint: "verifyPhoneNumber",
    B: aj,
    F: P,
    C: !0
  },
      eh = {
    endpoint: "verifyPhoneNumber",
    B: function B(a) {
      if (!a.idToken) throw new t("internal-error");
      aj(a);
    },
    F: function F(a) {
      if (a.temporaryProof) throw a.code = "credential-already-in-use", vh(a);
      P(a);
    }
  },
      fh = {
    Gb: {
      USER_NOT_FOUND: "user-not-found"
    },
    endpoint: "verifyPhoneNumber",
    B: aj,
    F: P,
    C: !0
  },
      Hj = {
    endpoint: "accounts/mfaEnrollment:withdraw",
    M: ["idToken", "mfaEnrollmentId"],
    F: function F(a) {
      if (!!a[zg] ^ !!a.refreshToken) throw new t("internal-error");
    },
    C: !0,
    Na: !0
  };

  function O(a, b, c) {
    if (!hf(c, b.M)) return E(new t("internal-error"));
    var d = !!b.Na,
        e = b.Tb || "POST",
        f;
    return D(c).then(b.B).then(function () {
      b.U && (c.returnSecureToken = !0);
      b.C && a.b && "undefined" === typeof c.tenantId && (c.tenantId = a.b);
      return d ? Ui(a, a.i, b.endpoint, e, c, b.Gb, b.kb || !1) : Ui(a, a.h, b.endpoint, e, c, b.Gb, b.kb || !1);
    }).then(function (g) {
      f = g;
      return b.Xa ? b.Xa(c, f) : f;
    }).then(b.F).then(function () {
      if (!b.Z) return f;
      if (!(b.Z in f)) throw new t("internal-error");
      return f[b.Z];
    });
  }

  function sj(a) {
    return Ti({
      error: {
        errors: [{
          message: a
        }],
        code: 400,
        message: a
      }
    });
  }

  function Ti(a, b) {
    var c = (a.error && a.error.errors && a.error.errors[0] || {}).reason || "";
    var d = {
      keyInvalid: "invalid-api-key",
      ipRefererBlocked: "app-not-authorized"
    };
    if (c = d[c] ? new t(d[c]) : null) return c;
    c = a.error && a.error.message || "";
    d = {
      INVALID_CUSTOM_TOKEN: "invalid-custom-token",
      CREDENTIAL_MISMATCH: "custom-token-mismatch",
      MISSING_CUSTOM_TOKEN: "internal-error",
      INVALID_IDENTIFIER: "invalid-email",
      MISSING_CONTINUE_URI: "internal-error",
      INVALID_EMAIL: "invalid-email",
      INVALID_PASSWORD: "wrong-password",
      USER_DISABLED: "user-disabled",
      MISSING_PASSWORD: "internal-error",
      EMAIL_EXISTS: "email-already-in-use",
      PASSWORD_LOGIN_DISABLED: "operation-not-allowed",
      INVALID_IDP_RESPONSE: "invalid-credential",
      INVALID_PENDING_TOKEN: "invalid-credential",
      FEDERATED_USER_ID_ALREADY_LINKED: "credential-already-in-use",
      MISSING_OR_INVALID_NONCE: "missing-or-invalid-nonce",
      INVALID_MESSAGE_PAYLOAD: "invalid-message-payload",
      INVALID_RECIPIENT_EMAIL: "invalid-recipient-email",
      INVALID_SENDER: "invalid-sender",
      EMAIL_NOT_FOUND: "user-not-found",
      RESET_PASSWORD_EXCEED_LIMIT: "too-many-requests",
      EXPIRED_OOB_CODE: "expired-action-code",
      INVALID_OOB_CODE: "invalid-action-code",
      MISSING_OOB_CODE: "internal-error",
      INVALID_PROVIDER_ID: "invalid-provider-id",
      CREDENTIAL_TOO_OLD_LOGIN_AGAIN: "requires-recent-login",
      INVALID_ID_TOKEN: "invalid-user-token",
      TOKEN_EXPIRED: "user-token-expired",
      USER_NOT_FOUND: "user-token-expired",
      CORS_UNSUPPORTED: "cors-unsupported",
      DYNAMIC_LINK_NOT_ACTIVATED: "dynamic-link-not-activated",
      INVALID_APP_ID: "invalid-app-id",
      TOO_MANY_ATTEMPTS_TRY_LATER: "too-many-requests",
      WEAK_PASSWORD: "weak-password",
      OPERATION_NOT_ALLOWED: "operation-not-allowed",
      USER_CANCELLED: "user-cancelled",
      CAPTCHA_CHECK_FAILED: "captcha-check-failed",
      INVALID_APP_CREDENTIAL: "invalid-app-credential",
      INVALID_CODE: "invalid-verification-code",
      INVALID_PHONE_NUMBER: "invalid-phone-number",
      INVALID_SESSION_INFO: "invalid-verification-id",
      INVALID_TEMPORARY_PROOF: "invalid-credential",
      MISSING_APP_CREDENTIAL: "missing-app-credential",
      MISSING_CODE: "missing-verification-code",
      MISSING_PHONE_NUMBER: "missing-phone-number",
      MISSING_SESSION_INFO: "missing-verification-id",
      QUOTA_EXCEEDED: "quota-exceeded",
      SESSION_EXPIRED: "code-expired",
      REJECTED_CREDENTIAL: "rejected-credential",
      INVALID_CONTINUE_URI: "invalid-continue-uri",
      MISSING_ANDROID_PACKAGE_NAME: "missing-android-pkg-name",
      MISSING_IOS_BUNDLE_ID: "missing-ios-bundle-id",
      UNAUTHORIZED_DOMAIN: "unauthorized-continue-uri",
      INVALID_DYNAMIC_LINK_DOMAIN: "invalid-dynamic-link-domain",
      INVALID_OAUTH_CLIENT_ID: "invalid-oauth-client-id",
      INVALID_CERT_HASH: "invalid-cert-hash",
      UNSUPPORTED_TENANT_OPERATION: "unsupported-tenant-operation",
      INVALID_TENANT_ID: "invalid-tenant-id",
      TENANT_ID_MISMATCH: "tenant-id-mismatch",
      ADMIN_ONLY_OPERATION: "admin-restricted-operation",
      INVALID_MFA_PENDING_CREDENTIAL: "invalid-multi-factor-session",
      MFA_ENROLLMENT_NOT_FOUND: "multi-factor-info-not-found",
      MISSING_MFA_PENDING_CREDENTIAL: "missing-multi-factor-session",
      MISSING_MFA_ENROLLMENT_ID: "missing-multi-factor-info",
      EMAIL_CHANGE_NEEDS_VERIFICATION: "email-change-needs-verification",
      SECOND_FACTOR_EXISTS: "second-factor-already-in-use",
      SECOND_FACTOR_LIMIT_EXCEEDED: "maximum-second-factor-count-exceeded",
      UNSUPPORTED_FIRST_FACTOR: "unsupported-first-factor",
      UNVERIFIED_EMAIL: "unverified-email"
    };
    z(d, b || {});
    b = (b = c.match(/^[^\s]+\s*:\s*([\s\S]*)$/)) && 1 < b.length ? b[1] : void 0;

    for (var e in d) {
      if (0 === c.indexOf(e)) return new t(d[e], b);
    }

    !b && a && (b = Pe(a));
    return new t("internal-error", b);
  }

  ;

  function Ij(a) {
    this.b = a;
    this.a = null;
    this.qb = Jj(this);
  }

  function Jj(a) {
    return Kj().then(function () {
      return new C(function (b, c) {
        L("gapi.iframes.getContext")().open({
          where: document.body,
          url: a.b,
          messageHandlersFilter: L("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"),
          attributes: {
            style: {
              position: "absolute",
              top: "-100px",
              width: "1px",
              height: "1px"
            }
          },
          dontclear: !0
        }, function (d) {
          function e() {
            clearTimeout(f);
            b();
          }

          a.a = d;
          a.a.restyle({
            setHideOnLeave: !1
          });
          var f = setTimeout(function () {
            c(Error("Network Error"));
          }, Lj.get());
          d.ping(e).then(e, function () {
            c(Error("Network Error"));
          });
        });
      });
    });
  }

  function Mj(a, b) {
    return a.qb.then(function () {
      return new C(function (c) {
        a.a.send(b.type, b, c, L("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"));
      });
    });
  }

  function Nj(a, b) {
    a.qb.then(function () {
      a.a.register("authEvent", b, L("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"));
    });
  }

  var Oj = new ob(pb, "https://apis.google.com/js/api.js?onload=%{onload}"),
      Pj = new Ue(3E4, 6E4),
      Lj = new Ue(5E3, 15E3),
      Qj = null;

  function Kj() {
    return Qj ? Qj : Qj = new C(function (a, b) {
      function c() {
        Te();
        L("gapi.load")("gapi.iframes", {
          callback: a,
          ontimeout: function ontimeout() {
            Te();
            b(Error("Network Error"));
          },
          timeout: Pj.get()
        });
      }

      if (L("gapi.iframes.Iframe")) a();else if (L("gapi.load")) c();else {
        var d = "__iframefcb" + Math.floor(1E6 * Math.random()).toString();

        l[d] = function () {
          L("gapi.load") ? c() : b(Error("Network Error"));
        };

        d = xb(Oj, {
          onload: d
        });
        D(xi(d)).s(function () {
          b(Error("Network Error"));
        });
      }
    }).s(function (a) {
      Qj = null;
      throw a;
    });
  }

  ;

  function Rj(a, b, c, d) {
    this.l = a;
    this.h = b;
    this.i = c;
    this.g = d;
    this.f = null;
    this.g ? (a = J(this.g.url), a = Yd(a.f, a.a, a.g, "/emulator/auth/iframe")) : a = Yd("https", this.l, null, "/__/auth/iframe");
    this.a = a;
    I(this.a, "apiKey", this.h);
    I(this.a, "appName", this.i);
    this.b = null;
    this.c = [];
  }

  Rj.prototype.toString = function () {
    this.f ? I(this.a, "v", this.f) : de(this.a.b, "v");
    this.b ? I(this.a, "eid", this.b) : de(this.a.b, "eid");
    this.c.length ? I(this.a, "fw", this.c.join(",")) : de(this.a.b, "fw");
    return this.a.toString();
  };

  function Sj(a, b, c, d, e, f) {
    this.u = a;
    this.o = b;
    this.c = c;
    this.v = d;
    this.m = f;
    this.i = this.g = this.l = null;
    this.a = e;
    this.h = this.f = null;
  }

  Sj.prototype.xb = function (a) {
    this.h = a;
    return this;
  };

  Sj.prototype.toString = function () {
    if (this.m) {
      var a = J(this.m.url);
      a = Yd(a.f, a.a, a.g, "/emulator/auth/handler");
    } else a = Yd("https", this.u, null, "/__/auth/handler");

    I(a, "apiKey", this.o);
    I(a, "appName", this.c);
    I(a, "authType", this.v);

    if (this.a.isOAuthProvider) {
      var b = this.a;

      try {
        var c = firebase.app(this.c).auth().ka();
      } catch (h) {
        c = null;
      }

      b.nb = c;
      I(a, "providerId", this.a.providerId);
      c = this.a;
      b = Qe(c.Hb);

      for (var d in b) {
        b[d] = b[d].toString();
      }

      d = c.Pc;
      b = lb(b);

      for (var e = 0; e < d.length; e++) {
        var f = d[e];
        f in b && delete b[f];
      }

      c.ob && c.nb && !b[c.ob] && (b[c.ob] = c.nb);
      kb(b) || I(a, "customParameters", Pe(b));
    }

    "function" === typeof this.a.Pb && (c = this.a.Pb(), c.length && I(a, "scopes", c.join(",")));
    this.l ? I(a, "redirectUrl", this.l) : de(a.b, "redirectUrl");
    this.g ? I(a, "eventId", this.g) : de(a.b, "eventId");
    this.i ? I(a, "v", this.i) : de(a.b, "v");
    if (this.b) for (var g in this.b) {
      this.b.hasOwnProperty(g) && !Xd(a, g) && I(a, g, this.b[g]);
    }
    this.h ? I(a, "tid", this.h) : de(a.b, "tid");
    this.f ? I(a, "eid", this.f) : de(a.b, "eid");
    g = Tj(this.c);
    g.length && I(a, "fw", g.join(","));
    return a.toString();
  };

  function Tj(a) {
    try {
      return firebase.app(a).auth().Ga();
    } catch (b) {
      return [];
    }
  }

  function Uj(a, b, c, d, e, f) {
    this.o = a;
    this.g = b;
    this.b = c;
    this.f = f;
    this.c = d || null;
    this.i = e || null;
    this.l = this.u = this.A = null;
    this.h = [];
    this.v = this.a = null;
  }

  function Vj(a) {
    var b = me();
    return Zi(a).then(function (c) {
      a: {
        var d = J(b),
            e = d.f;
        d = d.a;

        for (var f = 0; f < c.length; f++) {
          var g = c[f];
          var h = d;
          var m = e;
          0 == g.indexOf("chrome-extension://") ? h = J(g).a == h && "chrome-extension" == m : "http" != m && "https" != m ? h = !1 : xe.test(g) ? h = h == g : (g = g.split(".").join("\\."), h = new RegExp("^(.+\\." + g + "|" + g + ")$", "i").test(h));

          if (h) {
            c = !0;
            break a;
          }
        }

        c = !1;
      }

      if (!c) throw new th(me());
    });
  }

  function Wj(a) {
    if (a.v) return a.v;
    a.v = ze().then(function () {
      if (!a.u) {
        var b = a.c,
            c = a.i,
            d = Tj(a.b),
            e = new Rj(a.o, a.g, a.b, a.f);
        e.f = b;
        e.b = c;
        e.c = Xa(d || []);
        a.u = e.toString();
      }

      a.m = new Ij(a.u);
      Xj(a);
    });
    return a.v;
  }

  k = Uj.prototype;

  k.Nb = function (a, b, c) {
    var d = new t("popup-closed-by-user"),
        e = new t("web-storage-unsupported"),
        f = this,
        g = !1;
    return this.la().then(function () {
      Yj(f).then(function (h) {
        h || (a && te(a), b(e), g = !0);
      });
    }).s(function () {}).then(function () {
      if (!g) return we(a);
    }).then(function () {
      if (!g) return Ad(c).then(function () {
        b(d);
      });
    });
  };

  k.Wb = function () {
    var a = K();
    return !Oe(a) && !Se(a);
  };

  k.Sb = function () {
    return !1;
  };

  k.Lb = function (a, b, c, d, e, f, g, h) {
    if (!a) return E(new t("popup-blocked"));
    if (g && !Oe()) return this.la().s(function (p) {
      te(a);
      e(p);
    }), d(), D();
    this.a || (this.a = Vj(Zj(this)));
    var m = this;
    return this.a.then(function () {
      var p = m.la().s(function (v) {
        te(a);
        e(v);
        throw v;
      });
      d();
      return p;
    }).then(function () {
      nh(c);

      if (!g) {
        var p = ak(m.o, m.g, m.b, b, c, null, f, m.c, void 0, m.i, h, m.f);
        ne(p, a);
      }
    }).s(function (p) {
      "auth/network-request-failed" == p.code && (m.a = null);
      throw p;
    });
  };

  function Zj(a) {
    a.l || (a.A = a.c ? Je(a.c, Tj(a.b)) : null, a.l = new Ei(a.g, Aa(a.i), a.A), a.f && Li(a.l, a.f));
    return a.l;
  }

  k.Mb = function (a, b, c, d) {
    this.a || (this.a = Vj(Zj(this)));
    var e = this;
    return this.a.then(function () {
      nh(b);
      var f = ak(e.o, e.g, e.b, a, b, me(), c, e.c, void 0, e.i, d, e.f);
      ne(f);
    }).s(function (f) {
      "auth/network-request-failed" == f.code && (e.a = null);
      throw f;
    });
  };

  k.la = function () {
    var a = this;
    return Wj(this).then(function () {
      return a.m.qb;
    }).s(function () {
      a.a = null;
      throw new t("network-request-failed");
    });
  };

  k.Zb = function () {
    return !0;
  };

  function ak(a, b, c, d, e, f, g, h, m, p, v, B) {
    a = new Sj(a, b, c, d, e, B);
    a.l = f;
    a.g = g;
    a.i = h;
    a.b = lb(m || null);
    a.f = p;
    return a.xb(v).toString();
  }

  function Xj(a) {
    if (!a.m) throw Error("IfcHandler must be initialized!");
    Nj(a.m, function (b) {
      var c = {};

      if (b && b.authEvent) {
        var d = !1;
        b = ph(b.authEvent);

        for (c = 0; c < a.h.length; c++) {
          d = a.h[c](b) || d;
        }

        c = {};
        c.status = d ? "ACK" : "ERROR";
        return D(c);
      }

      c.status = "ERROR";
      return D(c);
    });
  }

  function Yj(a) {
    var b = {
      type: "webStorageSupport"
    };
    return Wj(a).then(function () {
      return Mj(a.m, b);
    }).then(function (c) {
      if (c && c.length && "undefined" !== typeof c[0].webStorageSupport) return c[0].webStorageSupport;
      throw Error();
    });
  }

  k.Ea = function (a) {
    this.h.push(a);
  };

  k.Ra = function (a) {
    Va(this.h, function (b) {
      return b == a;
    });
  };

  function bk(a) {
    this.a = a || firebase.INTERNAL.reactNative && firebase.INTERNAL.reactNative.AsyncStorage;
    if (!this.a) throw new t("internal-error", "The React Native compatibility library was not found.");
    this.type = "asyncStorage";
  }

  k = bk.prototype;

  k.get = function (a) {
    return D(this.a.getItem(a)).then(function (b) {
      return b && Re(b);
    });
  };

  k.set = function (a, b) {
    return D(this.a.setItem(a, Pe(b)));
  };

  k.T = function (a) {
    return D(this.a.removeItem(a));
  };

  k.ca = function () {};

  k.ia = function () {};

  function ck(a) {
    this.b = a;
    this.a = {};
    this.f = q(this.c, this);
  }

  var dk = [];

  function ek() {
    var a = Ee() ? self : null;
    w(dk, function (c) {
      c.b == a && (b = c);
    });

    if (!b) {
      var b = new ck(a);
      dk.push(b);
    }

    return b;
  }

  ck.prototype.c = function (a) {
    var b = a.data.eventType,
        c = a.data.eventId,
        d = this.a[b];

    if (d && 0 < d.length) {
      a.ports[0].postMessage({
        status: "ack",
        eventId: c,
        eventType: b,
        response: null
      });
      var e = [];
      w(d, function (f) {
        e.push(D().then(function () {
          return f(a.origin, a.data.data);
        }));
      });
      Fc(e).then(function (f) {
        var g = [];
        w(f, function (h) {
          g.push({
            fulfilled: h.Ob,
            value: h.value,
            reason: h.reason ? h.reason.message : void 0
          });
        });
        w(g, function (h) {
          for (var m in h) {
            "undefined" === typeof h[m] && delete h[m];
          }
        });
        a.ports[0].postMessage({
          status: "done",
          eventId: c,
          eventType: b,
          response: g
        });
      });
    }
  };

  function fk(a, b, c) {
    kb(a.a) && a.b.addEventListener("message", a.f);
    "undefined" === typeof a.a[b] && (a.a[b] = []);
    a.a[b].push(c);
  }

  ;

  function gk(a) {
    this.a = a;
  }

  gk.prototype.postMessage = function (a, b) {
    this.a.postMessage(a, b);
  };

  function hk(a) {
    this.c = a;
    this.b = !1;
    this.a = [];
  }

  function ik(a, b, c, d) {
    var e,
        f = c || {},
        g,
        h,
        m,
        p = null;
    if (a.b) return E(Error("connection_unavailable"));
    var v = d ? 800 : 50,
        B = "undefined" !== typeof MessageChannel ? new MessageChannel() : null;
    return new C(function (A, Q) {
      B ? (e = Math.floor(Math.random() * Math.pow(10, 20)).toString(), B.port1.start(), h = setTimeout(function () {
        Q(Error("unsupported_event"));
      }, v), g = function g(xa) {
        xa.data.eventId === e && ("ack" === xa.data.status ? (clearTimeout(h), m = setTimeout(function () {
          Q(Error("timeout"));
        }, 3E3)) : "done" === xa.data.status ? (clearTimeout(m), "undefined" !== typeof xa.data.response ? A(xa.data.response) : Q(Error("unknown_error"))) : (clearTimeout(h), clearTimeout(m), Q(Error("invalid_response"))));
      }, p = {
        messageChannel: B,
        onMessage: g
      }, a.a.push(p), B.port1.addEventListener("message", g), a.c.postMessage({
        eventType: b,
        eventId: e,
        data: f
      }, [B.port2])) : Q(Error("connection_unavailable"));
    }).then(function (A) {
      jk(a, p);
      return A;
    }).s(function (A) {
      jk(a, p);
      throw A;
    });
  }

  function jk(a, b) {
    if (b) {
      var c = b.messageChannel,
          d = b.onMessage;
      c && (c.port1.removeEventListener("message", d), c.port1.close());
      Va(a.a, function (e) {
        return e == b;
      });
    }
  }

  hk.prototype.close = function () {
    for (; 0 < this.a.length;) {
      jk(this, this.a[0]);
    }

    this.b = !0;
  };

  function kk() {
    if (!lk()) throw new t("web-storage-unsupported");
    this.c = {};
    this.a = [];
    this.b = 0;
    this.m = l.indexedDB;
    this.type = "indexedDB";
    this.g = this.l = this.f = this.i = null;
    this.o = !1;
    this.h = null;
    var a = this;
    Ee() && self ? (this.l = ek(), fk(this.l, "keyChanged", function (b, c) {
      return mk(a).then(function (d) {
        0 < d.length && w(a.a, function (e) {
          e(d);
        });
        return {
          keyProcessed: Ta(d, c.key)
        };
      });
    }), fk(this.l, "ping", function () {
      return D(["keyChanged"]);
    })) : af().then(function (b) {
      if (a.h = b) a.g = new hk(new gk(b)), ik(a.g, "ping", null, !0).then(function (c) {
        c[0].fulfilled && Ta(c[0].value, "keyChanged") && (a.o = !0);
      }).s(function () {});
    });
  }

  var nk;

  function ok(a) {
    return new C(function (b, c) {
      var d = a.m.deleteDatabase("firebaseLocalStorageDb");

      d.onsuccess = function () {
        b();
      };

      d.onerror = function (e) {
        c(Error(e.target.error));
      };
    });
  }

  function pk(a) {
    return new C(function (b, c) {
      var d = a.m.open("firebaseLocalStorageDb", 1);

      d.onerror = function (e) {
        try {
          e.preventDefault();
        } catch (f) {}

        c(Error(e.target.error));
      };

      d.onupgradeneeded = function (e) {
        e = e.target.result;

        try {
          e.createObjectStore("firebaseLocalStorage", {
            keyPath: "fbase_key"
          });
        } catch (f) {
          c(f);
        }
      };

      d.onsuccess = function (e) {
        e = e.target.result;
        e.objectStoreNames.contains("firebaseLocalStorage") ? b(e) : ok(a).then(function () {
          return pk(a);
        }).then(function (f) {
          b(f);
        }).s(function (f) {
          c(f);
        });
      };
    });
  }

  function qk(a) {
    a.v || (a.v = pk(a));
    return a.v;
  }

  function lk() {
    try {
      return !!l.indexedDB;
    } catch (a) {
      return !1;
    }
  }

  function rk(a) {
    return a.objectStore("firebaseLocalStorage");
  }

  function sk(a, b) {
    return a.transaction(["firebaseLocalStorage"], b ? "readwrite" : "readonly");
  }

  function tk(a) {
    return new C(function (b, c) {
      a.onsuccess = function (d) {
        d && d.target ? b(d.target.result) : b();
      };

      a.onerror = function (d) {
        c(d.target.error);
      };
    });
  }

  k = kk.prototype;

  k.set = function (a, b) {
    var c = !1,
        d,
        e = this;
    return qk(this).then(function (f) {
      d = f;
      f = rk(sk(d, !0));
      return tk(f.get(a));
    }).then(function (f) {
      var g = rk(sk(d, !0));
      if (f) return f.value = b, tk(g.put(f));
      e.b++;
      c = !0;
      f = {};
      f.fbase_key = a;
      f.value = b;
      return tk(g.add(f));
    }).then(function () {
      e.c[a] = b;
      return uk(e, a);
    }).na(function () {
      c && e.b--;
    });
  };

  function uk(a, b) {
    return a.g && a.h && $e() === a.h ? ik(a.g, "keyChanged", {
      key: b
    }, a.o).then(function () {}).s(function () {}) : D();
  }

  k.get = function (a) {
    return qk(this).then(function (b) {
      return tk(rk(sk(b, !1)).get(a));
    }).then(function (b) {
      return b && b.value;
    });
  };

  k.T = function (a) {
    var b = !1,
        c = this;
    return qk(this).then(function (d) {
      b = !0;
      c.b++;
      return tk(rk(sk(d, !0))["delete"](a));
    }).then(function () {
      delete c.c[a];
      return uk(c, a);
    }).na(function () {
      b && c.b--;
    });
  };

  function mk(a) {
    return qk(a).then(function (b) {
      var c = rk(sk(b, !1));
      return c.getAll ? tk(c.getAll()) : new C(function (d, e) {
        var f = [],
            g = c.openCursor();

        g.onsuccess = function (h) {
          (h = h.target.result) ? (f.push(h.value), h["continue"]()) : d(f);
        };

        g.onerror = function (h) {
          e(h.target.error);
        };
      });
    }).then(function (b) {
      var c = {},
          d = [];

      if (0 == a.b) {
        for (d = 0; d < b.length; d++) {
          c[b[d].fbase_key] = b[d].value;
        }

        d = oe(a.c, c);
        a.c = c;
      }

      return d;
    });
  }

  k.ca = function (a) {
    0 == this.a.length && vk(this);
    this.a.push(a);
  };

  k.ia = function (a) {
    Va(this.a, function (b) {
      return b == a;
    });
    0 == this.a.length && wk(this);
  };

  function vk(a) {
    function b() {
      a.f = setTimeout(function () {
        a.i = mk(a).then(function (c) {
          0 < c.length && w(a.a, function (d) {
            d(c);
          });
        }).then(function () {
          b();
        }).s(function (c) {
          "STOP_EVENT" != c.message && b();
        });
      }, 800);
    }

    wk(a);
    b();
  }

  function wk(a) {
    a.i && a.i.cancel("STOP_EVENT");
    a.f && (clearTimeout(a.f), a.f = null);
  }

  ;

  function xk(a) {
    var b = this,
        c = null;
    this.a = [];
    this.type = "indexedDB";
    this.c = a;
    this.b = D().then(function () {
      if (lk()) {
        var d = Le(),
            e = "__sak" + d;
        nk || (nk = new kk());
        c = nk;
        return c.set(e, d).then(function () {
          return c.get(e);
        }).then(function (f) {
          if (f !== d) throw Error("indexedDB not supported!");
          return c.T(e);
        }).then(function () {
          return c;
        }).s(function () {
          return b.c;
        });
      }

      return b.c;
    }).then(function (d) {
      b.type = d.type;
      d.ca(function (e) {
        w(b.a, function (f) {
          f(e);
        });
      });
      return d;
    });
  }

  k = xk.prototype;

  k.get = function (a) {
    return this.b.then(function (b) {
      return b.get(a);
    });
  };

  k.set = function (a, b) {
    return this.b.then(function (c) {
      return c.set(a, b);
    });
  };

  k.T = function (a) {
    return this.b.then(function (b) {
      return b.T(a);
    });
  };

  k.ca = function (a) {
    this.a.push(a);
  };

  k.ia = function (a) {
    Va(this.a, function (b) {
      return b == a;
    });
  };

  function yk() {
    this.a = {};
    this.type = "inMemory";
  }

  k = yk.prototype;

  k.get = function (a) {
    return D(this.a[a]);
  };

  k.set = function (a, b) {
    this.a[a] = b;
    return D();
  };

  k.T = function (a) {
    delete this.a[a];
    return D();
  };

  k.ca = function () {};

  k.ia = function () {};

  function zk() {
    if (!Ak()) {
      if ("Node" == Fe()) throw new t("internal-error", "The LocalStorage compatibility library was not found.");
      throw new t("web-storage-unsupported");
    }

    this.a = Bk() || firebase.INTERNAL.node.localStorage;
    this.type = "localStorage";
  }

  function Bk() {
    try {
      var a = l.localStorage,
          b = Le();
      a && (a.setItem(b, "1"), a.removeItem(b));
      return a;
    } catch (c) {
      return null;
    }
  }

  function Ak() {
    var a = "Node" == Fe();
    a = Bk() || a && firebase.INTERNAL.node && firebase.INTERNAL.node.localStorage;
    if (!a) return !1;

    try {
      return a.setItem("__sak", "1"), a.removeItem("__sak"), !0;
    } catch (b) {
      return !1;
    }
  }

  k = zk.prototype;

  k.get = function (a) {
    var b = this;
    return D().then(function () {
      var c = b.a.getItem(a);
      return Re(c);
    });
  };

  k.set = function (a, b) {
    var c = this;
    return D().then(function () {
      var d = Pe(b);
      null === d ? c.T(a) : c.a.setItem(a, d);
    });
  };

  k.T = function (a) {
    var b = this;
    return D().then(function () {
      b.a.removeItem(a);
    });
  };

  k.ca = function (a) {
    l.window && jd(l.window, "storage", a);
  };

  k.ia = function (a) {
    l.window && G(l.window, "storage", a);
  };

  function Ck() {
    this.type = "nullStorage";
  }

  k = Ck.prototype;

  k.get = function () {
    return D(null);
  };

  k.set = function () {
    return D();
  };

  k.T = function () {
    return D();
  };

  k.ca = function () {};

  k.ia = function () {};

  function Dk() {
    if (!Ek()) {
      if ("Node" == Fe()) throw new t("internal-error", "The SessionStorage compatibility library was not found.");
      throw new t("web-storage-unsupported");
    }

    this.a = Fk() || firebase.INTERNAL.node.sessionStorage;
    this.type = "sessionStorage";
  }

  function Fk() {
    try {
      var a = l.sessionStorage,
          b = Le();
      a && (a.setItem(b, "1"), a.removeItem(b));
      return a;
    } catch (c) {
      return null;
    }
  }

  function Ek() {
    var a = "Node" == Fe();
    a = Fk() || a && firebase.INTERNAL.node && firebase.INTERNAL.node.sessionStorage;
    if (!a) return !1;

    try {
      return a.setItem("__sak", "1"), a.removeItem("__sak"), !0;
    } catch (b) {
      return !1;
    }
  }

  k = Dk.prototype;

  k.get = function (a) {
    var b = this;
    return D().then(function () {
      var c = b.a.getItem(a);
      return Re(c);
    });
  };

  k.set = function (a, b) {
    var c = this;
    return D().then(function () {
      var d = Pe(b);
      null === d ? c.T(a) : c.a.setItem(a, d);
    });
  };

  k.T = function (a) {
    var b = this;
    return D().then(function () {
      b.a.removeItem(a);
    });
  };

  k.ca = function () {};

  k.ia = function () {};

  function Gk() {
    var a = {};
    a.Browser = Hk;
    a.Node = Ik;
    a.ReactNative = Jk;
    a.Worker = Kk;
    this.a = a[Fe()];
  }

  var Lk,
      Hk = {
    D: zk,
    ab: Dk
  },
      Ik = {
    D: zk,
    ab: Dk
  },
      Jk = {
    D: bk,
    ab: Ck
  },
      Kk = {
    D: zk,
    ab: Ck
  };
  /*
  Copyright 2017 Google LLC
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  */

  var Mk = {
    qd: "local",
    NONE: "none",
    sd: "session"
  };

  function Nk(a) {
    var b = new t("invalid-persistence-type"),
        c = new t("unsupported-persistence-type");

    a: {
      for (d in Mk) {
        if (Mk[d] == a) {
          var d = !0;
          break a;
        }
      }

      d = !1;
    }

    if (!d || "string" !== typeof a) throw b;

    switch (Fe()) {
      case "ReactNative":
        if ("session" === a) throw c;
        break;

      case "Node":
        if ("none" !== a) throw c;
        break;

      case "Worker":
        if ("session" === a || !lk() && "none" !== a) throw c;
        break;

      default:
        if (!Ke() && "none" !== a) throw c;
    }
  }

  function Ok() {
    var a = !Se(K()) && De() ? !0 : !1,
        b = Oe(),
        c = Ke();
    this.v = a;
    this.h = b;
    this.l = c;
    this.a = {};
    Lk || (Lk = new Gk());
    a = Lk;

    try {
      this.g = !le() && Ze() || !l.indexedDB ? new a.a.D() : new xk(Ee() ? new yk() : new a.a.D());
    } catch (d) {
      this.g = new yk(), this.h = !0;
    }

    try {
      this.i = new a.a.ab();
    } catch (d) {
      this.i = new yk();
    }

    this.m = new yk();
    this.f = q(this.Xb, this);
    this.b = {};
  }

  var Pk;

  function Qk() {
    Pk || (Pk = new Ok());
    return Pk;
  }

  function Rk(a, b) {
    switch (b) {
      case "session":
        return a.i;

      case "none":
        return a.m;

      default:
        return a.g;
    }
  }

  function Sk(a, b) {
    return "firebase:" + a.name + (b ? ":" + b : "");
  }

  function Tk(a, b, c) {
    var d = Sk(b, c),
        e = Rk(a, b.D);
    return a.get(b, c).then(function (f) {
      var g = null;

      try {
        g = Re(l.localStorage.getItem(d));
      } catch (h) {}

      if (g && !f) return l.localStorage.removeItem(d), a.set(b, g, c);
      g && f && "localStorage" != e.type && l.localStorage.removeItem(d);
    });
  }

  k = Ok.prototype;

  k.get = function (a, b) {
    return Rk(this, a.D).get(Sk(a, b));
  };

  function Uk(a, b, c) {
    c = Sk(b, c);
    "local" == b.D && (a.b[c] = null);
    return Rk(a, b.D).T(c);
  }

  k.set = function (a, b, c) {
    var d = Sk(a, c),
        e = this,
        f = Rk(this, a.D);
    return f.set(d, b).then(function () {
      return f.get(d);
    }).then(function (g) {
      "local" == a.D && (e.b[d] = g);
    });
  };

  k.addListener = function (a, b, c) {
    a = Sk(a, b);
    this.l && (this.b[a] = l.localStorage.getItem(a));
    kb(this.a) && (Rk(this, "local").ca(this.f), this.h || (le() || !Ze()) && l.indexedDB || !this.l || Vk(this));
    this.a[a] || (this.a[a] = []);
    this.a[a].push(c);
  };

  k.removeListener = function (a, b, c) {
    a = Sk(a, b);
    this.a[a] && (Va(this.a[a], function (d) {
      return d == c;
    }), 0 == this.a[a].length && delete this.a[a]);
    kb(this.a) && (Rk(this, "local").ia(this.f), Wk(this));
  };

  function Vk(a) {
    Wk(a);
    a.c = setInterval(function () {
      for (var b in a.a) {
        var c = l.localStorage.getItem(b),
            d = a.b[b];
        c != d && (a.b[b] = c, c = new Yc({
          type: "storage",
          key: b,
          target: window,
          oldValue: d,
          newValue: c,
          a: !0
        }), a.Xb(c));
      }
    }, 1E3);
  }

  function Wk(a) {
    a.c && (clearInterval(a.c), a.c = null);
  }

  k.Xb = function (a) {
    if (a && a.g) {
      var b = a.a.key;
      if (null == b) for (var c in this.a) {
        var d = this.b[c];
        "undefined" === typeof d && (d = null);
        var e = l.localStorage.getItem(c);
        e !== d && (this.b[c] = e, this.lb(c));
      } else if (0 == b.indexOf("firebase:") && this.a[b]) {
        "undefined" !== typeof a.a.a ? Rk(this, "local").ia(this.f) : Wk(this);
        if (this.v) if (c = l.localStorage.getItem(b), d = a.a.newValue, d !== c) null !== d ? l.localStorage.setItem(b, d) : l.localStorage.removeItem(b);else if (this.b[b] === d && "undefined" === typeof a.a.a) return;
        var f = this;

        c = function c() {
          if ("undefined" !== typeof a.a.a || f.b[b] !== l.localStorage.getItem(b)) f.b[b] = l.localStorage.getItem(b), f.lb(b);
        };

        Tb && dc && 10 == dc && l.localStorage.getItem(b) !== a.a.newValue && a.a.newValue !== a.a.oldValue ? setTimeout(c, 10) : c();
      }
    } else w(a, q(this.lb, this));
  };

  k.lb = function (a) {
    this.a[a] && w(this.a[a], function (b) {
      b();
    });
  };

  function Xk(a) {
    this.a = a;
    this.b = Qk();
  }

  var Yk = {
    name: "authEvent",
    D: "local"
  };

  function Zk(a) {
    return a.b.get(Yk, a.a).then(function (b) {
      return ph(b);
    });
  }

  ;

  function $k() {
    this.a = Qk();
  }

  ;

  function al() {
    this.b = -1;
  }

  ;

  function bl(a, b) {
    this.b = cl;
    this.f = l.Uint8Array ? new Uint8Array(this.b) : Array(this.b);
    this.g = this.c = 0;
    this.a = [];
    this.i = a;
    this.h = b;
    this.l = l.Int32Array ? new Int32Array(64) : Array(64);
    void 0 === dl && (l.Int32Array ? dl = new Int32Array(el) : dl = el);
    this.reset();
  }

  var dl;
  r(bl, al);

  for (var cl = 64, fl = cl - 1, gl = [], hl = 0; hl < fl; hl++) {
    gl[hl] = 0;
  }

  var il = Wa(128, gl);

  bl.prototype.reset = function () {
    this.g = this.c = 0;
    this.a = l.Int32Array ? new Int32Array(this.h) : Xa(this.h);
  };

  function jl(a) {
    for (var b = a.f, c = a.l, d = 0, e = 0; e < b.length;) {
      c[d++] = b[e] << 24 | b[e + 1] << 16 | b[e + 2] << 8 | b[e + 3], e = 4 * d;
    }

    for (b = 16; 64 > b; b++) {
      e = c[b - 15] | 0;
      d = c[b - 2] | 0;
      var f = (c[b - 16] | 0) + ((e >>> 7 | e << 25) ^ (e >>> 18 | e << 14) ^ e >>> 3) | 0,
          g = (c[b - 7] | 0) + ((d >>> 17 | d << 15) ^ (d >>> 19 | d << 13) ^ d >>> 10) | 0;
      c[b] = f + g | 0;
    }

    d = a.a[0] | 0;
    e = a.a[1] | 0;
    var h = a.a[2] | 0,
        m = a.a[3] | 0,
        p = a.a[4] | 0,
        v = a.a[5] | 0,
        B = a.a[6] | 0;
    f = a.a[7] | 0;

    for (b = 0; 64 > b; b++) {
      var A = ((d >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10)) + (d & e ^ d & h ^ e & h) | 0;
      g = p & v ^ ~p & B;
      f = f + ((p >>> 6 | p << 26) ^ (p >>> 11 | p << 21) ^ (p >>> 25 | p << 7)) | 0;
      g = g + (dl[b] | 0) | 0;
      g = f + (g + (c[b] | 0) | 0) | 0;
      f = B;
      B = v;
      v = p;
      p = m + g | 0;
      m = h;
      h = e;
      e = d;
      d = g + A | 0;
    }

    a.a[0] = a.a[0] + d | 0;
    a.a[1] = a.a[1] + e | 0;
    a.a[2] = a.a[2] + h | 0;
    a.a[3] = a.a[3] + m | 0;
    a.a[4] = a.a[4] + p | 0;
    a.a[5] = a.a[5] + v | 0;
    a.a[6] = a.a[6] + B | 0;
    a.a[7] = a.a[7] + f | 0;
  }

  function kl(a, b, c) {
    void 0 === c && (c = b.length);
    var d = 0,
        e = a.c;
    if ("string" === typeof b) for (; d < c;) {
      a.f[e++] = b.charCodeAt(d++), e == a.b && (jl(a), e = 0);
    } else if (ma(b)) for (; d < c;) {
      var f = b[d++];
      if (!("number" == typeof f && 0 <= f && 255 >= f && f == (f | 0))) throw Error("message must be a byte array");
      a.f[e++] = f;
      e == a.b && (jl(a), e = 0);
    } else throw Error("message must be string or array");
    a.c = e;
    a.g += c;
  }

  var el = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];

  function ll() {
    bl.call(this, 8, ml);
  }

  r(ll, bl);
  var ml = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225];

  function nl(a, b, c, d, e, f) {
    this.m = a;
    this.i = b;
    this.l = c;
    this.v = d || null;
    this.u = e || null;
    this.o = f;
    this.h = b + ":" + c;
    this.A = new $k();
    this.g = new Xk(this.h);
    this.f = null;
    this.b = [];
    this.a = this.c = null;
  }

  function ol(a) {
    return new t("invalid-cordova-configuration", a);
  }

  k = nl.prototype;

  k.la = function () {
    return this.Ia ? this.Ia : this.Ia = Ae().then(function () {
      if ("function" !== typeof L("universalLinks.subscribe", l)) throw ol("cordova-universal-links-plugin-fix is not installed");
      if ("undefined" === typeof L("BuildInfo.packageName", l)) throw ol("cordova-plugin-buildinfo is not installed");
      if ("function" !== typeof L("cordova.plugins.browsertab.openUrl", l)) throw ol("cordova-plugin-browsertab is not installed");
      if ("function" !== typeof L("cordova.InAppBrowser.open", l)) throw ol("cordova-plugin-inappbrowser is not installed");
    }, function () {
      throw new t("cordova-not-ready");
    });
  };

  function pl() {
    for (var a = 20, b = []; 0 < a;) {
      b.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62 * Math.random()))), a--;
    }

    return b.join("");
  }

  function ql(a) {
    var b = new ll();
    kl(b, a);
    a = [];
    var c = 8 * b.g;
    56 > b.c ? kl(b, il, 56 - b.c) : kl(b, il, b.b - (b.c - 56));

    for (var d = 63; 56 <= d; d--) {
      b.f[d] = c & 255, c /= 256;
    }

    jl(b);

    for (d = c = 0; d < b.i; d++) {
      for (var e = 24; 0 <= e; e -= 8) {
        a[c++] = b.a[d] >> e & 255;
      }
    }

    return Zf(a);
  }

  k.Nb = function (a, b) {
    b(new t("operation-not-supported-in-this-environment"));
    return D();
  };

  k.Lb = function () {
    return E(new t("operation-not-supported-in-this-environment"));
  };

  k.Zb = function () {
    return !1;
  };

  k.Wb = function () {
    return !0;
  };

  k.Sb = function () {
    return !0;
  };

  k.Mb = function (a, b, c, d) {
    if (this.c) return E(new t("redirect-operation-pending"));
    var e = this,
        f = l.document,
        g = null,
        h = null,
        m = null,
        p = null;
    return this.c = D().then(function () {
      nh(b);
      return rl(e);
    }).then(function () {
      return sl(e, a, b, c, d);
    }).then(function () {
      return new C(function (v, B) {
        h = function h() {
          var A = L("cordova.plugins.browsertab.close", l);
          v();
          "function" === typeof A && A();
          e.a && "function" === typeof e.a.close && (e.a.close(), e.a = null);
          return !1;
        };

        e.Ea(h);

        m = function m() {
          g || (g = Ad(2E3).then(function () {
            B(new t("redirect-cancelled-by-user"));
          }));
        };

        p = function p() {
          Ve() && m();
        };

        f.addEventListener("resume", m, !1);
        K().toLowerCase().match(/android/) || f.addEventListener("visibilitychange", p, !1);
      }).s(function (v) {
        return tl(e).then(function () {
          throw v;
        });
      });
    }).na(function () {
      m && f.removeEventListener("resume", m, !1);
      p && f.removeEventListener("visibilitychange", p, !1);
      g && g.cancel();
      h && e.Ra(h);
      e.c = null;
    });
  };

  function sl(a, b, c, d, e) {
    var f = pl(),
        g = new oh(b, d, null, f, new t("no-auth-event"), null, e),
        h = L("BuildInfo.packageName", l);
    if ("string" !== typeof h) throw new t("invalid-cordova-configuration");
    var m = L("BuildInfo.displayName", l),
        p = {};
    if (K().toLowerCase().match(/iphone|ipad|ipod/)) p.ibi = h;else if (K().toLowerCase().match(/android/)) p.apn = h;else return E(new t("operation-not-supported-in-this-environment"));
    m && (p.appDisplayName = m);
    f = ql(f);
    p.sessionId = f;
    var v = ak(a.m, a.i, a.l, b, c, null, d, a.v, p, a.u, e, a.o);
    return a.la().then(function () {
      var B = a.h;
      return a.A.a.set(Yk, g.w(), B);
    }).then(function () {
      var B = L("cordova.plugins.browsertab.isAvailable", l);
      if ("function" !== typeof B) throw new t("invalid-cordova-configuration");
      var A = null;
      B(function (Q) {
        if (Q) {
          A = L("cordova.plugins.browsertab.openUrl", l);
          if ("function" !== typeof A) throw new t("invalid-cordova-configuration");
          A(v);
        } else {
          A = L("cordova.InAppBrowser.open", l);
          if ("function" !== typeof A) throw new t("invalid-cordova-configuration");
          Q = K();
          a.a = A(v, Q.match(/(iPad|iPhone|iPod).*OS 7_\d/i) || Q.match(/(iPad|iPhone|iPod).*OS 8_\d/i) ? "_blank" : "_system", "location=yes");
        }
      });
    });
  }

  function ul(a, b) {
    for (var c = 0; c < a.b.length; c++) {
      try {
        a.b[c](b);
      } catch (d) {}
    }
  }

  function rl(a) {
    a.f || (a.f = a.la().then(function () {
      return new C(function (b) {
        function c(d) {
          b(d);
          a.Ra(c);
          return !1;
        }

        a.Ea(c);
        vl(a);
      });
    }));
    return a.f;
  }

  function tl(a) {
    var b = null;
    return Zk(a.g).then(function (c) {
      b = c;
      c = a.g;
      return Uk(c.b, Yk, c.a);
    }).then(function () {
      return b;
    });
  }

  function vl(a) {
    function b(g) {
      d = !0;
      e && e.cancel();
      tl(a).then(function (h) {
        var m = c;

        if (h && g && g.url) {
          var p = null;
          m = tg(g.url);
          -1 != m.indexOf("/__/auth/callback") && (p = J(m), p = Re(Xd(p, "firebaseError") || null), p = (p = "object" === typeof p ? ya(p) : null) ? new oh(h.c, h.b, null, null, p, null, h.S()) : new oh(h.c, h.b, m, h.f, null, null, h.S()));
          m = p || c;
        }

        ul(a, m);
      });
    }

    var c = new oh("unknown", null, null, null, new t("no-auth-event")),
        d = !1,
        e = Ad(500).then(function () {
      return tl(a).then(function () {
        d || ul(a, c);
      });
    }),
        f = l.handleOpenURL;

    l.handleOpenURL = function (g) {
      0 == g.toLowerCase().indexOf(L("BuildInfo.packageName", l).toLowerCase() + "://") && b({
        url: g
      });
      if ("function" === typeof f) try {
        f(g);
      } catch (h) {
        console.error(h);
      }
    };

    rh || (rh = new qh());
    sh(b);
  }

  k.Ea = function (a) {
    this.b.push(a);
    rl(this).s(function (b) {
      "auth/invalid-cordova-configuration" === b.code && (b = new oh("unknown", null, null, null, new t("no-auth-event")), a(b));
    });
  };

  k.Ra = function (a) {
    Va(this.b, function (b) {
      return b == a;
    });
  };

  function wl(a) {
    this.a = a;
    this.b = Qk();
  }

  var xl = {
    name: "pendingRedirect",
    D: "session"
  };

  function yl(a) {
    return a.b.set(xl, "pending", a.a);
  }

  function zl(a) {
    return Uk(a.b, xl, a.a);
  }

  function Al(a) {
    return a.b.get(xl, a.a).then(function (b) {
      return "pending" == b;
    });
  }

  ;

  function Bl(a, b, c, d) {
    this.i = {};
    this.u = 0;
    this.O = a;
    this.m = b;
    this.v = c;
    this.G = d;
    this.h = [];
    this.f = !1;
    this.l = q(this.o, this);
    this.b = new Cl();
    this.A = new Dl();
    this.g = new wl(El(this.m, this.v));
    this.c = {};
    this.c.unknown = this.b;
    this.c.signInViaRedirect = this.b;
    this.c.linkViaRedirect = this.b;
    this.c.reauthViaRedirect = this.b;
    this.c.signInViaPopup = this.A;
    this.c.linkViaPopup = this.A;
    this.c.reauthViaPopup = this.A;
    this.a = Fl(this.O, this.m, this.v, Ba, this.G);
  }

  function Fl(a, b, c, d, e) {
    var f = firebase.SDK_VERSION || null;
    return Be() ? new nl(a, b, c, f, d, e) : new Uj(a, b, c, f, d, e);
  }

  Bl.prototype.reset = function () {
    this.f = !1;
    this.a.Ra(this.l);
    this.a = Fl(this.O, this.m, this.v, null, this.G);
    this.i = {};
  };

  function Gl(a) {
    a.f || (a.f = !0, a.a.Ea(a.l));
    var b = a.a;
    return a.a.la().s(function (c) {
      a.a == b && a.reset();
      throw c;
    });
  }

  function Hl(a) {
    a.a.Wb() && Gl(a).s(function (b) {
      var c = new oh("unknown", null, null, null, new t("operation-not-supported-in-this-environment"));
      Il(b) && a.o(c);
    });
    a.a.Sb() || Jl(a.b);
  }

  function Kl(a, b) {
    Ta(a.h, b) || a.h.push(b);
    a.f || Al(a.g).then(function (c) {
      c ? zl(a.g).then(function () {
        Gl(a).s(function (d) {
          var e = new oh("unknown", null, null, null, new t("operation-not-supported-in-this-environment"));
          Il(d) && a.o(e);
        });
      }) : Hl(a);
    }).s(function () {
      Hl(a);
    });
  }

  function Ll(a, b) {
    Va(a.h, function (c) {
      return c == b;
    });
  }

  Bl.prototype.o = function (a) {
    if (!a) throw new t("invalid-auth-event");
    6E5 <= ua() - this.u && (this.i = {}, this.u = 0);
    if (a && a.getUid() && this.i.hasOwnProperty(a.getUid())) return !1;

    for (var b = !1, c = 0; c < this.h.length; c++) {
      var d = this.h[c];

      if (d.Eb(a.c, a.b)) {
        if (b = this.c[a.c]) b.h(a, d), a && (a.f || a.b) && (this.i[a.getUid()] = !0, this.u = ua());
        b = !0;
        break;
      }
    }

    Jl(this.b);
    return b;
  };

  var Ml = new Ue(2E3, 1E4),
      Nl = new Ue(3E4, 6E4);

  Bl.prototype.qa = function () {
    return this.b.qa();
  };

  function Ol(a, b, c, d, e, f, g) {
    return a.a.Lb(b, c, d, function () {
      a.f || (a.f = !0, a.a.Ea(a.l));
    }, function () {
      a.reset();
    }, e, f, g);
  }

  function Il(a) {
    return a && "auth/cordova-not-ready" == a.code ? !0 : !1;
  }

  function Pl(a, b, c, d, e) {
    var f;
    return yl(a.g).then(function () {
      return a.a.Mb(b, c, d, e).s(function (g) {
        if (Il(g)) throw new t("operation-not-supported-in-this-environment");
        f = g;
        return zl(a.g).then(function () {
          throw f;
        });
      }).then(function () {
        return a.a.Zb() ? new C(function () {}) : zl(a.g).then(function () {
          return a.qa();
        }).then(function () {}).s(function () {});
      });
    });
  }

  function Ql(a, b, c, d, e) {
    return a.a.Nb(d, function (f) {
      b.ma(c, null, f, e);
    }, Ml.get());
  }

  var Rl = {};

  function El(a, b, c) {
    a = a + ":" + b;
    c && (a = a + ":" + c.url);
    return a;
  }

  function Sl(a, b, c, d) {
    var e = El(b, c, d);
    Rl[e] || (Rl[e] = new Bl(a, b, c, d));
    return Rl[e];
  }

  function Cl() {
    this.b = null;
    this.f = [];
    this.c = [];
    this.a = null;
    this.i = this.g = !1;
  }

  Cl.prototype.reset = function () {
    this.b = null;
    this.a && (this.a.cancel(), this.a = null);
  };

  Cl.prototype.h = function (a, b) {
    if (a) {
      this.reset();
      this.g = !0;
      var c = a.c,
          d = a.b,
          e = a.a && "auth/web-storage-unsupported" == a.a.code,
          f = a.a && "auth/operation-not-supported-in-this-environment" == a.a.code;
      this.i = !(!e && !f);
      "unknown" != c || e || f ? a.a ? (Tl(this, !0, null, a.a), D()) : b.Fa(c, d) ? Ul(this, a, b) : E(new t("invalid-auth-event")) : (Tl(this, !1, null, null), D());
    } else E(new t("invalid-auth-event"));
  };

  function Jl(a) {
    a.g || (a.g = !0, Tl(a, !1, null, null));
  }

  function Vl(a) {
    a.g && !a.i && Tl(a, !1, null, null);
  }

  function Ul(a, b, c) {
    c = c.Fa(b.c, b.b);
    var d = b.g,
        e = b.f,
        f = b.i,
        g = b.S(),
        h = !!b.c.match(/Redirect$/);
    c(d, e, g, f).then(function (m) {
      Tl(a, h, m, null);
    }).s(function (m) {
      Tl(a, h, null, m);
    });
  }

  function Wl(a, b) {
    a.b = function () {
      return E(b);
    };

    if (a.c.length) for (var c = 0; c < a.c.length; c++) {
      a.c[c](b);
    }
  }

  function Xl(a, b) {
    a.b = function () {
      return D(b);
    };

    if (a.f.length) for (var c = 0; c < a.f.length; c++) {
      a.f[c](b);
    }
  }

  function Tl(a, b, c, d) {
    b ? d ? Wl(a, d) : Xl(a, c) : Xl(a, {
      user: null
    });
    a.f = [];
    a.c = [];
  }

  Cl.prototype.qa = function () {
    var a = this;
    return new C(function (b, c) {
      a.b ? a.b().then(b, c) : (a.f.push(b), a.c.push(c), Yl(a));
    });
  };

  function Yl(a) {
    var b = new t("timeout");
    a.a && a.a.cancel();
    a.a = Ad(Nl.get()).then(function () {
      a.b || (a.g = !0, Tl(a, !0, null, b));
    });
  }

  function Dl() {}

  Dl.prototype.h = function (a, b) {
    if (a) {
      var c = a.c,
          d = a.b;
      a.a ? (b.ma(a.c, null, a.a, a.b), D()) : b.Fa(c, d) ? Zl(a, b) : E(new t("invalid-auth-event"));
    } else E(new t("invalid-auth-event"));
  };

  function Zl(a, b) {
    var c = a.b,
        d = a.c;
    b.Fa(d, c)(a.g, a.f, a.S(), a.i).then(function (e) {
      b.ma(d, e, null, c);
    }).s(function (e) {
      b.ma(d, null, e, c);
    });
  }

  ;

  function $l() {
    this.hb = !1;
    Object.defineProperty(this, "appVerificationDisabled", {
      get: function get() {
        return this.hb;
      },
      set: function set(a) {
        this.hb = a;
      },
      enumerable: !1
    });
  }

  ;

  function am(a, b) {
    this.a = b;
    M(this, "verificationId", a);
  }

  am.prototype.confirm = function (a) {
    a = lh(this.verificationId, a);
    return this.a(a);
  };

  function bm(a, b, c, d) {
    return new hh(a).eb(b, c).then(function (e) {
      return new am(e, d);
    });
  }

  ;

  function cm(a) {
    var b = eg(a);
    if (!(b && b.exp && b.auth_time && b.iat)) throw new t("internal-error", "An internal error occurred. The token obtained by Firebase appears to be malformed. Please retry the operation.");
    N(this, {
      token: a,
      expirationTime: Ye(1E3 * b.exp),
      authTime: Ye(1E3 * b.auth_time),
      issuedAtTime: Ye(1E3 * b.iat),
      signInProvider: b.firebase && b.firebase.sign_in_provider ? b.firebase.sign_in_provider : null,
      signInSecondFactor: b.firebase && b.firebase.sign_in_second_factor ? b.firebase.sign_in_second_factor : null,
      claims: b
    });
  }

  ;

  function dm(a, b, c) {
    var d = b && b[em];
    if (!d) throw new t("argument-error", "Internal assert: Invalid MultiFactorResolver");
    this.a = a;
    this.f = lb(b);
    this.g = c;
    this.c = new ug(null, d);
    this.b = [];
    var e = this;
    w(b[fm] || [], function (f) {
      (f = pf(f)) && e.b.push(f);
    });
    M(this, "auth", this.a);
    M(this, "session", this.c);
    M(this, "hints", this.b);
  }

  var fm = "mfaInfo",
      em = "mfaPendingCredential";

  dm.prototype.Qc = function (a) {
    var b = this;
    return a.rb(this.a.a, this.c).then(function (c) {
      var d = lb(b.f);
      delete d[fm];
      delete d[em];
      z(d, c);
      return b.g(d);
    });
  };

  function gm(a, b, c, d) {
    t.call(this, "multi-factor-auth-required", d, b);
    this.b = new dm(a, b, c);
    M(this, "resolver", this.b);
  }

  r(gm, t);

  function hm(a, b, c) {
    if (a && n(a.serverResponse) && "auth/multi-factor-auth-required" === a.code) try {
      return new gm(b, a.serverResponse, c, a.message);
    } catch (d) {}
    return null;
  }

  ;

  function im() {}

  im.prototype.rb = function (a, b, c) {
    return b.type == vg ? jm(this, a, b, c) : km(this, a, b);
  };

  function jm(a, b, c, d) {
    return c.Ha().then(function (e) {
      e = {
        idToken: e
      };
      "undefined" !== typeof d && (e.displayName = d);
      z(e, {
        phoneVerificationInfo: dh(a.a)
      });
      return O(b, Cj, e);
    });
  }

  function km(a, b, c) {
    return c.Ha().then(function (d) {
      d = {
        mfaPendingCredential: d
      };
      z(d, {
        phoneVerificationInfo: dh(a.a)
      });
      return O(b, Dj, d);
    });
  }

  function lm(a) {
    M(this, "factorId", a.fa);
    this.a = a;
  }

  r(lm, im);

  function mm(a) {
    lm.call(this, a);
    if (this.a.fa != hh.PROVIDER_ID) throw new t("argument-error", "firebase.auth.PhoneMultiFactorAssertion requires a valid firebase.auth.PhoneAuthCredential");
  }

  r(mm, lm);

  function nm(a, b) {
    F.call(this, a);

    for (var c in b) {
      this[c] = b[c];
    }
  }

  r(nm, F);

  function om(a, b) {
    this.a = a;
    this.b = [];
    this.c = q(this.xc, this);
    jd(this.a, "userReloaded", this.c);
    var c = [];
    b && b.multiFactor && b.multiFactor.enrolledFactors && w(b.multiFactor.enrolledFactors, function (d) {
      var e = null,
          f = {};

      if (d) {
        d.uid && (f[mf] = d.uid);
        d.displayName && (f[nf] = d.displayName);
        d.enrollmentTime && (f[of] = new Date(d.enrollmentTime).toISOString());
        d.phoneNumber && (f[lf] = d.phoneNumber);

        try {
          e = new qf(f);
        } catch (g) {}

        d = e;
      } else d = null;

      d && c.push(d);
    });
    pm(this, c);
  }

  function qm(a) {
    var b = [];
    w(a.mfaInfo || [], function (c) {
      (c = pf(c)) && b.push(c);
    });
    return b;
  }

  k = om.prototype;

  k.xc = function (a) {
    pm(this, qm(a.gd));
  };

  function pm(a, b) {
    a.b = b;
    M(a, "enrolledFactors", b);
  }

  k.Qb = function () {
    return this.a.I().then(function (a) {
      return new ug(a, null);
    });
  };

  k.ec = function (a, b) {
    var c = this,
        d = this.a.a;
    return this.Qb().then(function (e) {
      return a.rb(d, e, b);
    }).then(function (e) {
      rm(c.a, e);
      return c.a.reload();
    });
  };

  k.ad = function (a) {
    var b = this,
        c = "string" === typeof a ? a : a.uid,
        d = this.a.a;
    return this.a.I().then(function (e) {
      return O(d, Hj, {
        idToken: e,
        mfaEnrollmentId: c
      });
    }).then(function (e) {
      var f = Oa(b.b, function (g) {
        return g.uid != c;
      });
      pm(b, f);
      rm(b.a, e);
      return b.a.reload().s(function (g) {
        if ("auth/user-token-expired" != g.code) throw g;
      });
    });
  };

  k.w = function () {
    return {
      multiFactor: {
        enrolledFactors: Pa(this.b, function (a) {
          return a.w();
        })
      }
    };
  };

  function sm(a, b, c) {
    this.h = a;
    this.i = b;
    this.g = c;
    this.c = 3E4;
    this.f = 96E4;
    this.b = null;
    this.a = this.c;
    if (this.f < this.c) throw Error("Proactive refresh lower bound greater than upper bound!");
  }

  sm.prototype.start = function () {
    this.a = this.c;
    tm(this, !0);
  };

  function um(a, b) {
    if (b) return a.a = a.c, a.g();
    b = a.a;
    a.a *= 2;
    a.a > a.f && (a.a = a.f);
    return b;
  }

  function tm(a, b) {
    a.stop();
    a.b = Ad(um(a, b)).then(function () {
      return We();
    }).then(function () {
      return a.h();
    }).then(function () {
      tm(a, !0);
    }).s(function (c) {
      a.i(c) && tm(a, !1);
    });
  }

  sm.prototype.stop = function () {
    this.b && (this.b.cancel(), this.b = null);
  };

  function vm(a) {
    this.c = a;
    this.b = this.a = null;
  }

  vm.prototype.w = function () {
    return {
      apiKey: this.c.c,
      refreshToken: this.a,
      accessToken: this.b && this.b.toString(),
      expirationTime: wm(this)
    };
  };

  function wm(a) {
    return a.b && 1E3 * a.b.c || 0;
  }

  function xm(a, b) {
    var c = b.refreshToken;
    a.b = fg(b[zg] || "");
    a.a = c;
  }

  function ym(a, b) {
    a.b = b.b;
    a.a = b.a;
  }

  function zm(a, b) {
    return Si(a.c, b).then(function (c) {
      a.b = fg(c.access_token);
      a.a = c.refresh_token;
      return {
        accessToken: a.b.toString(),
        refreshToken: a.a
      };
    }).s(function (c) {
      "auth/user-token-expired" == c.code && (a.a = null);
      throw c;
    });
  }

  vm.prototype.getToken = function (a) {
    a = !!a;
    return this.b && !this.a ? E(new t("user-token-expired")) : a || !this.b || ua() > wm(this) - 3E4 ? this.a ? zm(this, {
      grant_type: "refresh_token",
      refresh_token: this.a
    }) : D(null) : D({
      accessToken: this.b.toString(),
      refreshToken: this.a
    });
  };

  function Am(a, b) {
    this.a = a || null;
    this.b = b || null;
    N(this, {
      lastSignInTime: Ye(b || null),
      creationTime: Ye(a || null)
    });
  }

  function Bm(a) {
    return new Am(a.a, a.b);
  }

  Am.prototype.w = function () {
    return {
      lastLoginAt: this.b,
      createdAt: this.a
    };
  };

  function Cm(a, b, c, d, e, f) {
    N(this, {
      uid: a,
      displayName: d || null,
      photoURL: e || null,
      email: c || null,
      phoneNumber: f || null,
      providerId: b
    });
  }

  function Dm(a, b, c) {
    this.G = [];
    this.l = a.apiKey;
    this.m = a.appName;
    this.o = a.authDomain || null;
    var d = firebase.SDK_VERSION ? Je(firebase.SDK_VERSION) : null;
    this.a = new Ei(this.l, Aa(Ba), d);
    a.emulatorConfig && Li(this.a, a.emulatorConfig);
    this.b = new vm(this.a);
    Em(this, b[zg]);
    xm(this.b, b);
    M(this, "refreshToken", this.b.a);
    Fm(this, c || {});
    H.call(this);
    this.P = !1;
    this.o && Me() && (this.i = Sl(this.o, this.l, this.m));
    this.R = [];
    this.f = null;
    this.u = Gm(this);
    this.$ = q(this.gb, this);
    var e = this;
    this.pa = null;

    this.Ba = function (f) {
      e.wa(f.h);
    };

    this.ba = null;

    this.za = function (f) {
      Li(e.a, f.c);
    };

    this.W = null;
    this.X = [];

    this.Aa = function (f) {
      Hm(e, f.f);
    };

    this.aa = null;
    this.N = new om(this, c);
    M(this, "multiFactor", this.N);
  }

  r(Dm, H);

  Dm.prototype.wa = function (a) {
    this.pa = a;
    Ki(this.a, a);
  };

  Dm.prototype.ka = function () {
    return this.pa;
  };

  function Im(a, b) {
    a.ba && G(a.ba, "languageCodeChanged", a.Ba);
    (a.ba = b) && jd(b, "languageCodeChanged", a.Ba);
  }

  function Jm(a, b) {
    a.W && G(a.W, "emulatorConfigChanged", a.za);
    (a.W = b) && jd(b, "emulatorConfigChanged", a.za);
  }

  function Hm(a, b) {
    a.X = b;
    Ni(a.a, firebase.SDK_VERSION ? Je(firebase.SDK_VERSION, a.X) : null);
  }

  Dm.prototype.Ga = function () {
    return Xa(this.X);
  };

  function Km(a, b) {
    a.aa && G(a.aa, "frameworkChanged", a.Aa);
    (a.aa = b) && jd(b, "frameworkChanged", a.Aa);
  }

  Dm.prototype.gb = function () {
    this.u.b && (this.u.stop(), this.u.start());
  };

  function Lm(a) {
    try {
      return firebase.app(a.m).auth();
    } catch (b) {
      throw new t("internal-error", "No firebase.auth.Auth instance is available for the Firebase App '" + a.m + "'!");
    }
  }

  function Gm(a) {
    return new sm(function () {
      return a.I(!0);
    }, function (b) {
      return b && "auth/network-request-failed" == b.code ? !0 : !1;
    }, function () {
      var b = wm(a.b) - ua() - 3E5;
      return 0 < b ? b : 0;
    });
  }

  function Mm(a) {
    a.A || a.u.b || (a.u.start(), G(a, "tokenChanged", a.$), jd(a, "tokenChanged", a.$));
  }

  function Nm(a) {
    G(a, "tokenChanged", a.$);
    a.u.stop();
  }

  function Em(a, b) {
    a.ya = b;
    M(a, "_lat", b);
  }

  function Om(a, b) {
    Va(a.R, function (c) {
      return c == b;
    });
  }

  function Pm(a) {
    for (var b = [], c = 0; c < a.R.length; c++) {
      b.push(a.R[c](a));
    }

    return Fc(b).then(function () {
      return a;
    });
  }

  function Qm(a) {
    a.i && !a.P && (a.P = !0, Kl(a.i, a));
  }

  function Fm(a, b) {
    N(a, {
      uid: b.uid,
      displayName: b.displayName || null,
      photoURL: b.photoURL || null,
      email: b.email || null,
      emailVerified: b.emailVerified || !1,
      phoneNumber: b.phoneNumber || null,
      isAnonymous: b.isAnonymous || !1,
      tenantId: b.tenantId || null,
      metadata: new Am(b.createdAt, b.lastLoginAt),
      providerData: []
    });
    a.a.b = a.tenantId;
  }

  M(Dm.prototype, "providerId", "firebase");

  function Rm() {}

  function Sm(a) {
    return D().then(function () {
      if (a.A) throw new t("app-deleted");
    });
  }

  function Tm(a) {
    return Pa(a.providerData, function (b) {
      return b.providerId;
    });
  }

  function Um(a, b) {
    b && (Vm(a, b.providerId), a.providerData.push(b));
  }

  function Vm(a, b) {
    Va(a.providerData, function (c) {
      return c.providerId == b;
    });
  }

  function Wm(a, b, c) {
    ("uid" != b || c) && a.hasOwnProperty(b) && M(a, b, c);
  }

  function Xm(a, b) {
    a != b && (N(a, {
      uid: b.uid,
      displayName: b.displayName,
      photoURL: b.photoURL,
      email: b.email,
      emailVerified: b.emailVerified,
      phoneNumber: b.phoneNumber,
      isAnonymous: b.isAnonymous,
      tenantId: b.tenantId,
      providerData: []
    }), b.metadata ? M(a, "metadata", Bm(b.metadata)) : M(a, "metadata", new Am()), w(b.providerData, function (c) {
      Um(a, c);
    }), ym(a.b, b.b), M(a, "refreshToken", a.b.a), pm(a.N, b.N.b));
  }

  k = Dm.prototype;

  k.reload = function () {
    var a = this;
    return R(this, Sm(this).then(function () {
      return Ym(a).then(function () {
        return Pm(a);
      }).then(Rm);
    }));
  };

  function Ym(a) {
    return a.I().then(function (b) {
      var c = a.isAnonymous;
      return Zm(a, b).then(function () {
        c || Wm(a, "isAnonymous", !1);
        return b;
      });
    });
  }

  k.nc = function (a) {
    return this.I(a).then(function (b) {
      return new cm(b);
    });
  };

  k.I = function (a) {
    var b = this;
    return R(this, Sm(this).then(function () {
      return b.b.getToken(a);
    }).then(function (c) {
      if (!c) throw new t("internal-error");
      c.accessToken != b.ya && (Em(b, c.accessToken), b.dispatchEvent(new nm("tokenChanged")));
      Wm(b, "refreshToken", c.refreshToken);
      return c.accessToken;
    }));
  };

  function rm(a, b) {
    b[zg] && a.ya != b[zg] && (xm(a.b, b), a.dispatchEvent(new nm("tokenChanged")), Em(a, b[zg]), Wm(a, "refreshToken", a.b.a));
  }

  function Zm(a, b) {
    return O(a.a, Ej, {
      idToken: b
    }).then(q(a.Jc, a));
  }

  k.Jc = function (a) {
    a = a.users;
    if (!a || !a.length) throw new t("internal-error");
    a = a[0];
    Fm(this, {
      uid: a.localId,
      displayName: a.displayName,
      photoURL: a.photoUrl,
      email: a.email,
      emailVerified: !!a.emailVerified,
      phoneNumber: a.phoneNumber,
      lastLoginAt: a.lastLoginAt,
      createdAt: a.createdAt,
      tenantId: a.tenantId
    });

    for (var b = $m(a), c = 0; c < b.length; c++) {
      Um(this, b[c]);
    }

    Wm(this, "isAnonymous", !(this.email && a.passwordHash) && !(this.providerData && this.providerData.length));
    this.dispatchEvent(new nm("userReloaded", {
      gd: a
    }));
  };

  function $m(a) {
    return (a = a.providerUserInfo) && a.length ? Pa(a, function (b) {
      return new Cm(b.rawId, b.providerId, b.email, b.displayName, b.photoUrl, b.phoneNumber);
    }) : [];
  }

  k.Kc = function (a) {
    cf("firebase.User.prototype.reauthenticateAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.reauthenticateWithCredential instead.");
    return this.sb(a);
  };

  k.sb = function (a) {
    var b = this,
        c = null;
    return R(this, a.c(this.a, this.uid).then(function (d) {
      rm(b, d);
      c = an(b, d, "reauthenticate");
      b.f = null;
      return b.reload();
    }).then(function () {
      return c;
    }), !0);
  };

  function bn(a, b) {
    return Ym(a).then(function () {
      if (Ta(Tm(a), b)) return Pm(a).then(function () {
        throw new t("provider-already-linked");
      });
    });
  }

  k.Bc = function (a) {
    cf("firebase.User.prototype.linkAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.linkWithCredential instead.");
    return this.pb(a);
  };

  k.pb = function (a) {
    var b = this,
        c = null;
    return R(this, bn(this, a.providerId).then(function () {
      return b.I();
    }).then(function (d) {
      return a.b(b.a, d);
    }).then(function (d) {
      c = an(b, d, "link");
      return cn(b, d);
    }).then(function () {
      return c;
    }));
  };

  k.Cc = function (a, b) {
    var c = this;
    return R(this, bn(this, "phone").then(function () {
      return bm(Lm(c), a, b, q(c.pb, c));
    }));
  };

  k.Lc = function (a, b) {
    var c = this;
    return R(this, D().then(function () {
      return bm(Lm(c), a, b, q(c.sb, c));
    }), !0);
  };

  function an(a, b, c) {
    var d = mh(b);
    b = kg(b);
    return ff({
      user: a,
      credential: d,
      additionalUserInfo: b,
      operationType: c
    });
  }

  function cn(a, b) {
    rm(a, b);
    return a.reload().then(function () {
      return a;
    });
  }

  k.Ab = function (a) {
    var b = this;
    return R(this, this.I().then(function (c) {
      return b.a.Ab(c, a);
    }).then(function (c) {
      rm(b, c);
      return b.reload();
    }));
  };

  k.dd = function (a) {
    var b = this;
    return R(this, this.I().then(function (c) {
      return a.b(b.a, c);
    }).then(function (c) {
      rm(b, c);
      return b.reload();
    }));
  };

  k.Bb = function (a) {
    var b = this;
    return R(this, this.I().then(function (c) {
      return b.a.Bb(c, a);
    }).then(function (c) {
      rm(b, c);
      return b.reload();
    }));
  };

  k.Cb = function (a) {
    if (void 0 === a.displayName && void 0 === a.photoURL) return Sm(this);
    var b = this;
    return R(this, this.I().then(function (c) {
      return b.a.Cb(c, {
        displayName: a.displayName,
        photoUrl: a.photoURL
      });
    }).then(function (c) {
      rm(b, c);
      Wm(b, "displayName", c.displayName || null);
      Wm(b, "photoURL", c.photoUrl || null);
      w(b.providerData, function (d) {
        "password" === d.providerId && (M(d, "displayName", b.displayName), M(d, "photoURL", b.photoURL));
      });
      return Pm(b);
    }).then(Rm));
  };

  k.bd = function (a) {
    var b = this;
    return R(this, Ym(this).then(function (c) {
      return Ta(Tm(b), a) ? nj(b.a, c, [a]).then(function (d) {
        var e = {};
        w(d.providerUserInfo || [], function (f) {
          e[f.providerId] = !0;
        });
        w(Tm(b), function (f) {
          e[f] || Vm(b, f);
        });
        e[hh.PROVIDER_ID] || M(b, "phoneNumber", null);
        return Pm(b);
      }) : Pm(b).then(function () {
        throw new t("no-such-provider");
      });
    }));
  };

  k.delete = function () {
    var a = this;
    return R(this, this.I().then(function (b) {
      return O(a.a, Bj, {
        idToken: b
      });
    }).then(function () {
      a.dispatchEvent(new nm("userDeleted"));
    })).then(function () {
      for (var b = 0; b < a.G.length; b++) {
        a.G[b].cancel("app-deleted");
      }

      Im(a, null);
      Jm(a, null);
      Km(a, null);
      a.G = [];
      a.A = !0;
      Nm(a);
      M(a, "refreshToken", null);
      a.i && Ll(a.i, a);
    });
  };

  k.Eb = function (a, b) {
    return "linkViaPopup" == a && (this.h || null) == b && this.g || "reauthViaPopup" == a && (this.h || null) == b && this.g || "linkViaRedirect" == a && (this.ga || null) == b || "reauthViaRedirect" == a && (this.ga || null) == b ? !0 : !1;
  };

  k.ma = function (a, b, c, d) {
    "linkViaPopup" != a && "reauthViaPopup" != a || d != (this.h || null) || (c && this.O ? this.O(c) : b && !c && this.g && this.g(b), this.c && (this.c.cancel(), this.c = null), delete this.g, delete this.O);
  };

  k.Fa = function (a, b) {
    return "linkViaPopup" == a && b == (this.h || null) ? q(this.Jb, this) : "reauthViaPopup" == a && b == (this.h || null) ? q(this.Kb, this) : "linkViaRedirect" == a && (this.ga || null) == b ? q(this.Jb, this) : "reauthViaRedirect" == a && (this.ga || null) == b ? q(this.Kb, this) : null;
  };

  k.Dc = function (a) {
    var b = this;
    return dn(this, "linkViaPopup", a, function () {
      return bn(b, a.providerId).then(function () {
        return Pm(b);
      });
    }, !1);
  };

  k.Mc = function (a) {
    return dn(this, "reauthViaPopup", a, function () {
      return D();
    }, !0);
  };

  function dn(a, b, c, d, e) {
    if (!Me()) return E(new t("operation-not-supported-in-this-environment"));
    if (a.f && !e) return E(a.f);
    var f = jg(c.providerId),
        g = Le(a.uid + ":::"),
        h = null;
    (!Oe() || De()) && a.o && c.isOAuthProvider && (h = ak(a.o, a.l, a.m, b, c, null, g, firebase.SDK_VERSION || null, null, null, a.tenantId));
    var m = ue(h, f && f.ua, f && f.ta);
    d = d().then(function () {
      en(a);
      if (!e) return a.I().then(function () {});
    }).then(function () {
      return Ol(a.i, m, b, c, g, !!h, a.tenantId);
    }).then(function () {
      return new C(function (p, v) {
        a.ma(b, null, new t("cancelled-popup-request"), a.h || null);
        a.g = p;
        a.O = v;
        a.h = g;
        a.c = Ql(a.i, a, b, m, g);
      });
    }).then(function (p) {
      m && te(m);
      return p ? ff(p) : null;
    }).s(function (p) {
      m && te(m);
      throw p;
    });
    return R(a, d, e);
  }

  k.Ec = function (a) {
    var b = this;
    return fn(this, "linkViaRedirect", a, function () {
      return bn(b, a.providerId);
    }, !1);
  };

  k.Nc = function (a) {
    return fn(this, "reauthViaRedirect", a, function () {
      return D();
    }, !0);
  };

  function fn(a, b, c, d, e) {
    if (!Me()) return E(new t("operation-not-supported-in-this-environment"));
    if (a.f && !e) return E(a.f);
    var f = null,
        g = Le(a.uid + ":::");
    d = d().then(function () {
      en(a);
      if (!e) return a.I().then(function () {});
    }).then(function () {
      a.ga = g;
      return Pm(a);
    }).then(function (h) {
      a.ha && (h = a.ha, h = h.b.set(gn, a.w(), h.a));
      return h;
    }).then(function () {
      return Pl(a.i, b, c, g, a.tenantId);
    }).s(function (h) {
      f = h;
      if (a.ha) return hn(a.ha);
      throw f;
    }).then(function () {
      if (f) throw f;
    });
    return R(a, d, e);
  }

  function en(a) {
    if (!a.i || !a.P) {
      if (a.i && !a.P) throw new t("internal-error");
      throw new t("auth-domain-config-required");
    }
  }

  k.Jb = function (a, b, c, d) {
    var e = this;
    this.c && (this.c.cancel(), this.c = null);
    var f = null;
    c = this.I().then(function (g) {
      return Dg(e.a, {
        requestUri: a,
        postBody: d,
        sessionId: b,
        idToken: g
      });
    }).then(function (g) {
      f = an(e, g, "link");
      return cn(e, g);
    }).then(function () {
      return f;
    });
    return R(this, c);
  };

  k.Kb = function (a, b, c, d) {
    var e = this;
    this.c && (this.c.cancel(), this.c = null);
    var f = null,
        g = D().then(function () {
      return yg(Eg(e.a, {
        requestUri: a,
        sessionId: b,
        postBody: d,
        tenantId: c
      }), e.uid);
    }).then(function (h) {
      f = an(e, h, "reauthenticate");
      rm(e, h);
      e.f = null;
      return e.reload();
    }).then(function () {
      return f;
    });
    return R(this, g, !0);
  };

  k.tb = function (a) {
    var b = this,
        c = null;
    return R(this, this.I().then(function (d) {
      c = d;
      return "undefined" === typeof a || kb(a) ? {} : Yf(new Of(a));
    }).then(function (d) {
      return b.a.tb(c, d);
    }).then(function (d) {
      if (b.email != d) return b.reload();
    }).then(function () {}));
  };

  k.Db = function (a, b) {
    var c = this,
        d = null;
    return R(this, this.I().then(function (e) {
      d = e;
      return "undefined" === typeof b || kb(b) ? {} : Yf(new Of(b));
    }).then(function (e) {
      return c.a.Db(d, a, e);
    }).then(function (e) {
      if (c.email != e) return c.reload();
    }).then(function () {}));
  };

  function R(a, b, c) {
    var d = jn(a, b, c);
    a.G.push(d);
    d.na(function () {
      Ua(a.G, d);
    });
    return d.s(function (e) {
      var f = null;
      e && "auth/multi-factor-auth-required" === e.code && (f = hm(e.w(), Lm(a), q(a.ic, a)));
      throw f || e;
    });
  }

  k.ic = function (a) {
    var b = null,
        c = this;
    a = yg(D(a), c.uid).then(function (d) {
      b = an(c, d, "reauthenticate");
      rm(c, d);
      c.f = null;
      return c.reload();
    }).then(function () {
      return b;
    });
    return R(this, a, !0);
  };

  function jn(a, b, c) {
    return a.f && !c ? (b.cancel(), E(a.f)) : b.s(function (d) {
      !d || "auth/user-disabled" != d.code && "auth/user-token-expired" != d.code || (a.f || a.dispatchEvent(new nm("userInvalidated")), a.f = d);
      throw d;
    });
  }

  k.toJSON = function () {
    return this.w();
  };

  k.w = function () {
    var a = {
      uid: this.uid,
      displayName: this.displayName,
      photoURL: this.photoURL,
      email: this.email,
      emailVerified: this.emailVerified,
      phoneNumber: this.phoneNumber,
      isAnonymous: this.isAnonymous,
      tenantId: this.tenantId,
      providerData: [],
      apiKey: this.l,
      appName: this.m,
      authDomain: this.o,
      stsTokenManager: this.b.w(),
      redirectEventId: this.ga || null
    };
    this.metadata && z(a, this.metadata.w());
    w(this.providerData, function (b) {
      a.providerData.push(gf(b));
    });
    z(a, this.N.w());
    return a;
  };

  function kn(a) {
    if (!a.apiKey) return null;
    var b = {
      apiKey: a.apiKey,
      authDomain: a.authDomain,
      appName: a.appName,
      emulatorConfig: a.emulatorConfig
    },
        c = {};
    if (a.stsTokenManager && a.stsTokenManager.accessToken) c[zg] = a.stsTokenManager.accessToken, c.refreshToken = a.stsTokenManager.refreshToken || null;else return null;
    var d = new Dm(b, c, a);
    a.providerData && w(a.providerData, function (e) {
      e && Um(d, ff(e));
    });
    a.redirectEventId && (d.ga = a.redirectEventId);
    return d;
  }

  function ln(a, b, c, d) {
    var e = new Dm(a, b);
    c && (e.ha = c);
    d && Hm(e, d);
    return e.reload().then(function () {
      return e;
    });
  }

  function mn(a, b, c, d) {
    var e = a.b,
        f = {};
    f[zg] = e.b && e.b.toString();
    f.refreshToken = e.a;
    b = new Dm(b || {
      apiKey: a.l,
      authDomain: a.o,
      appName: a.m
    }, f);
    c && (b.ha = c);
    d && Hm(b, d);
    Xm(b, a);
    return b;
  }

  ;

  function nn(a) {
    this.a = a;
    this.b = Qk();
  }

  var gn = {
    name: "redirectUser",
    D: "session"
  };

  function hn(a) {
    return Uk(a.b, gn, a.a);
  }

  function on(a, b) {
    return a.b.get(gn, a.a).then(function (c) {
      c && b && (c.authDomain = b);
      return kn(c || {});
    });
  }

  ;

  function pn(a) {
    this.a = a;
    this.b = Qk();
    this.c = null;
    this.f = qn(this);
    this.b.addListener(rn("local"), this.a, q(this.g, this));
  }

  pn.prototype.g = function () {
    var a = this,
        b = rn("local");
    sn(this, function () {
      return D().then(function () {
        return a.c && "local" != a.c.D ? a.b.get(b, a.a) : null;
      }).then(function (c) {
        if (c) return tn(a, "local").then(function () {
          a.c = b;
        });
      });
    });
  };

  function tn(a, b) {
    var c = [],
        d;

    for (d in Mk) {
      Mk[d] !== b && c.push(Uk(a.b, rn(Mk[d]), a.a));
    }

    c.push(Uk(a.b, un, a.a));
    return Ec(c);
  }

  function qn(a) {
    var b = rn("local"),
        c = rn("session"),
        d = rn("none");
    return Tk(a.b, b, a.a).then(function () {
      return a.b.get(c, a.a);
    }).then(function (e) {
      return e ? c : a.b.get(d, a.a).then(function (f) {
        return f ? d : a.b.get(b, a.a).then(function (g) {
          return g ? b : a.b.get(un, a.a).then(function (h) {
            return h ? rn(h) : b;
          });
        });
      });
    }).then(function (e) {
      a.c = e;
      return tn(a, e.D);
    }).s(function () {
      a.c || (a.c = b);
    });
  }

  var un = {
    name: "persistence",
    D: "session"
  };

  function rn(a) {
    return {
      name: "authUser",
      D: a
    };
  }

  pn.prototype.wb = function (a) {
    var b = null,
        c = this;
    Nk(a);
    return sn(this, function () {
      return a != c.c.D ? c.b.get(c.c, c.a).then(function (d) {
        b = d;
        return tn(c, a);
      }).then(function () {
        c.c = rn(a);
        if (b) return c.b.set(c.c, b, c.a);
      }) : D();
    });
  };

  function vn(a) {
    return sn(a, function () {
      return a.b.set(un, a.c.D, a.a);
    });
  }

  function wn(a, b) {
    return sn(a, function () {
      return a.b.set(a.c, b.w(), a.a);
    });
  }

  function xn(a) {
    return sn(a, function () {
      return Uk(a.b, a.c, a.a);
    });
  }

  function yn(a, b, c) {
    return sn(a, function () {
      return a.b.get(a.c, a.a).then(function (d) {
        d && b && (d.authDomain = b);
        d && c && (d.emulatorConfig = c);
        return kn(d || {});
      });
    });
  }

  function sn(a, b) {
    a.f = a.f.then(b, b);
    return a.f;
  }

  ;

  function zn(a) {
    this.m = !1;
    M(this, "settings", new $l());
    M(this, "app", a);
    if (S(this).options && S(this).options.apiKey) a = firebase.SDK_VERSION ? Je(firebase.SDK_VERSION) : null, this.a = new Ei(S(this).options && S(this).options.apiKey, Aa(Ba), a);else throw new t("invalid-api-key");
    this.R = [];
    this.u = [];
    this.P = [];
    this.ac = firebase.INTERNAL.createSubscribe(q(this.yc, this));
    this.X = void 0;
    this.bc = firebase.INTERNAL.createSubscribe(q(this.zc, this));
    An(this, null);
    this.l = new pn(S(this).options.apiKey + ":" + S(this).name);
    this.G = new nn(S(this).options.apiKey + ":" + S(this).name);
    this.$ = T(this, Bn(this));
    this.i = T(this, Cn(this));
    this.ba = !1;
    this.pa = q(this.Yc, this);
    this.Ba = q(this.da, this);
    this.ya = q(this.kc, this);
    this.za = q(this.vc, this);
    this.Aa = q(this.wc, this);
    this.b = null;
    Dn(this);
    this.INTERNAL = {};
    this.INTERNAL["delete"] = q(this.delete, this);
    this.INTERNAL.logFramework = q(this.Fc, this);
    this.A = 0;
    H.call(this);
    En(this);
    this.N = [];
    this.f = null;
  }

  r(zn, H);

  function Fn(a) {
    F.call(this, "languageCodeChanged");
    this.h = a;
  }

  r(Fn, F);

  function Gn(a) {
    F.call(this, "emulatorConfigChanged");
    this.c = a;
  }

  r(Gn, F);

  function Hn(a) {
    F.call(this, "frameworkChanged");
    this.f = a;
  }

  r(Hn, F);
  k = zn.prototype;

  k.wb = function (a) {
    a = this.l.wb(a);
    return T(this, a);
  };

  k.wa = function (a) {
    this.aa === a || this.m || (this.aa = a, Ki(this.a, this.aa), this.dispatchEvent(new Fn(this.ka())));
  };

  k.ka = function () {
    return this.aa;
  };

  k.ed = function () {
    var a = l.navigator;
    this.wa(a ? a.languages && a.languages[0] || a.language || a.userLanguage || null : null);
  };

  k.fd = function (a) {
    if (!this.f) {
      if (!/^https?:\/\//.test(a)) throw new t("argument-error", "Emulator URL must start with a valid scheme (http:// or https://).");
      In();
      this.f = {
        url: a
      };
      this.settings.hb = !0;
      Li(this.a, this.f);
      this.dispatchEvent(new Gn(this.f));
    }
  };

  function In() {
    Xe("WARNING: You are using the Auth Emulator, which is intended for local testing only.  Do not use with production credentials.");
    l.document && ze().then(function () {
      var a = l.document.createElement("div");
      a.innerText = "Running in emulator mode. Do not use with production credentials.";
      a.style.position = "fixed";
      a.style.width = "100%";
      a.style.backgroundColor = "#ffffff";
      a.style.border = ".1em solid #000000";
      a.style.color = "#ff0000";
      a.style.bottom = "0px";
      a.style.left = "0px";
      a.style.margin = "0px";
      a.style.zIndex = 1E4;
      a.style.textAlign = "center";
      a.classList.add("firebase-emulator-warning");
      l.document.body.appendChild(a);
    });
  }

  k.Fc = function (a) {
    this.N.push(a);
    Ni(this.a, firebase.SDK_VERSION ? Je(firebase.SDK_VERSION, this.N) : null);
    this.dispatchEvent(new Hn(this.N));
  };

  k.Ga = function () {
    return Xa(this.N);
  };

  k.xb = function (a) {
    this.W === a || this.m || (this.W = a, this.a.b = this.W);
  };

  k.S = function () {
    return this.W;
  };

  function En(a) {
    Object.defineProperty(a, "lc", {
      get: function get() {
        return this.ka();
      },
      set: function set(b) {
        this.wa(b);
      },
      enumerable: !1
    });
    a.aa = null;
    Object.defineProperty(a, "ti", {
      get: function get() {
        return this.S();
      },
      set: function set(b) {
        this.xb(b);
      },
      enumerable: !1
    });
    a.W = null;
  }

  k.toJSON = function () {
    return {
      apiKey: S(this).options.apiKey,
      authDomain: S(this).options.authDomain,
      appName: S(this).name,
      currentUser: U(this) && U(this).w()
    };
  };

  function Jn(a) {
    return a.gb || E(new t("auth-domain-config-required"));
  }

  function Dn(a) {
    var b = S(a).options.authDomain,
        c = S(a).options.apiKey;
    b && Me() && (a.gb = a.$.then(function () {
      if (!a.m) {
        a.b = Sl(b, c, S(a).name, a.f);
        Kl(a.b, a);
        U(a) && Qm(U(a));

        if (a.o) {
          Qm(a.o);
          var d = a.o;
          d.wa(a.ka());
          Im(d, a);
          d = a.o;
          Hm(d, a.N);
          Km(d, a);
          d = a.o;
          Li(d.a, a.f);
          Jm(d, a);
          a.o = null;
        }

        return a.b;
      }
    }));
  }

  k.Eb = function (a, b) {
    switch (a) {
      case "unknown":
      case "signInViaRedirect":
        return !0;

      case "signInViaPopup":
        return this.h == b && !!this.g;

      default:
        return !1;
    }
  };

  k.ma = function (a, b, c, d) {
    "signInViaPopup" == a && this.h == d && (c && this.O ? this.O(c) : b && !c && this.g && this.g(b), this.c && (this.c.cancel(), this.c = null), delete this.g, delete this.O);
  };

  k.Fa = function (a, b) {
    return "signInViaRedirect" == a || "signInViaPopup" == a && this.h == b && this.g ? q(this.hc, this) : null;
  };

  k.hc = function (a, b, c, d) {
    var e = this,
        f = {
      requestUri: a,
      postBody: d,
      sessionId: b,
      tenantId: c
    };
    this.c && (this.c.cancel(), this.c = null);
    return e.$.then(function () {
      return Kn(e, Bg(e.a, f));
    });
  };

  k.Wc = function (a) {
    if (!Me()) return E(new t("operation-not-supported-in-this-environment"));
    var b = this,
        c = jg(a.providerId),
        d = Le(),
        e = null;
    (!Oe() || De()) && S(this).options.authDomain && a.isOAuthProvider && (e = ak(S(this).options.authDomain, S(this).options.apiKey, S(this).name, "signInViaPopup", a, null, d, firebase.SDK_VERSION || null, null, null, this.S(), this.f));
    var f = ue(e, c && c.ua, c && c.ta);
    c = Jn(this).then(function (g) {
      return Ol(g, f, "signInViaPopup", a, d, !!e, b.S());
    }).then(function () {
      return new C(function (g, h) {
        b.ma("signInViaPopup", null, new t("cancelled-popup-request"), b.h);
        b.g = g;
        b.O = h;
        b.h = d;
        b.c = Ql(b.b, b, "signInViaPopup", f, d);
      });
    }).then(function (g) {
      f && te(f);
      return g ? ff(g) : null;
    }).s(function (g) {
      f && te(f);
      throw g;
    });
    return T(this, c);
  };

  k.Xc = function (a) {
    if (!Me()) return E(new t("operation-not-supported-in-this-environment"));
    var b = this,
        c = Jn(this).then(function () {
      return vn(b.l);
    }).then(function () {
      return Pl(b.b, "signInViaRedirect", a, void 0, b.S());
    });
    return T(this, c);
  };

  function Ln(a) {
    if (!Me()) return E(new t("operation-not-supported-in-this-environment"));
    var b = Jn(a).then(function () {
      return a.b.qa();
    }).then(function (c) {
      return c ? ff(c) : null;
    });
    return T(a, b);
  }

  k.qa = function () {
    var a = this;
    return Ln(this).then(function (b) {
      a.b && Vl(a.b.b);
      return b;
    }).s(function (b) {
      a.b && Vl(a.b.b);
      throw b;
    });
  };

  k.cd = function (a) {
    if (!a) return E(new t("null-user"));
    if (this.W != a.tenantId) return E(new t("tenant-id-mismatch"));
    var b = this,
        c = {};
    c.apiKey = S(this).options.apiKey;
    c.authDomain = S(this).options.authDomain;
    c.appName = S(this).name;
    var d = mn(a, c, b.G, b.Ga());
    return T(this, this.i.then(function () {
      if (S(b).options.apiKey != a.l) return d.reload();
    }).then(function () {
      if (U(b) && a.uid == U(b).uid) return Xm(U(b), a), b.da(a);
      An(b, d);
      Qm(d);
      return b.da(d);
    }).then(function () {
      Mn(b);
    }));
  };

  function Nn(a, b) {
    var c = {};
    c.apiKey = S(a).options.apiKey;
    c.authDomain = S(a).options.authDomain;
    c.appName = S(a).name;
    a.f && (c.emulatorConfig = a.f);
    return a.$.then(function () {
      return ln(c, b, a.G, a.Ga());
    }).then(function (d) {
      if (U(a) && d.uid == U(a).uid) return Xm(U(a), d), a.da(d);
      An(a, d);
      Qm(d);
      return a.da(d);
    }).then(function () {
      Mn(a);
    });
  }

  function An(a, b) {
    U(a) && (Om(U(a), a.Ba), G(U(a), "tokenChanged", a.ya), G(U(a), "userDeleted", a.za), G(U(a), "userInvalidated", a.Aa), Nm(U(a)));
    b && (b.R.push(a.Ba), jd(b, "tokenChanged", a.ya), jd(b, "userDeleted", a.za), jd(b, "userInvalidated", a.Aa), 0 < a.A && Mm(b));
    M(a, "currentUser", b);
    b && (b.wa(a.ka()), Im(b, a), Hm(b, a.N), Km(b, a), Li(b.a, a.f), Jm(b, a));
  }

  k.zb = function () {
    var a = this,
        b = this.i.then(function () {
      a.b && Vl(a.b.b);
      if (!U(a)) return D();
      An(a, null);
      return xn(a.l).then(function () {
        Mn(a);
      });
    });
    return T(this, b);
  };

  function On(a) {
    var b = on(a.G, S(a).options.authDomain).then(function (c) {
      if (a.o = c) c.ha = a.G;
      return hn(a.G);
    });
    return T(a, b);
  }

  function Bn(a) {
    var b = S(a).options.authDomain,
        c = On(a).then(function () {
      return yn(a.l, b, a.f);
    }).then(function (d) {
      return d ? (d.ha = a.G, a.o && (a.o.ga || null) == (d.ga || null) ? d : d.reload().then(function () {
        return wn(a.l, d).then(function () {
          return d;
        });
      }).s(function (e) {
        return "auth/network-request-failed" == e.code ? d : xn(a.l);
      })) : null;
    }).then(function (d) {
      An(a, d || null);
    });
    return T(a, c);
  }

  function Cn(a) {
    return a.$.then(function () {
      return Ln(a);
    }).s(function () {}).then(function () {
      if (!a.m) return a.pa();
    }).s(function () {}).then(function () {
      if (!a.m) {
        a.ba = !0;
        var b = a.l;
        b.b.addListener(rn("local"), b.a, a.pa);
      }
    });
  }

  k.Yc = function () {
    var a = this;
    return yn(this.l, S(this).options.authDomain).then(function (b) {
      if (!a.m) {
        var c;

        if (c = U(a) && b) {
          c = U(a).uid;
          var d = b.uid;
          c = void 0 === c || null === c || "" === c || void 0 === d || null === d || "" === d ? !1 : c == d;
        }

        if (c) return Xm(U(a), b), U(a).I();
        if (U(a) || b) An(a, b), b && (Qm(b), b.ha = a.G), a.b && Kl(a.b, a), Mn(a);
      }
    });
  };

  k.da = function (a) {
    return wn(this.l, a);
  };

  k.kc = function () {
    Mn(this);
    this.da(U(this));
  };

  k.vc = function () {
    this.zb();
  };

  k.wc = function () {
    this.zb();
  };

  function Kn(a, b) {
    var c = null,
        d = null;
    return T(a, b.then(function (e) {
      c = mh(e);
      d = kg(e);
      return Nn(a, e);
    }, function (e) {
      var f = null;
      e && "auth/multi-factor-auth-required" === e.code && (f = hm(e.w(), a, q(a.jc, a)));
      throw f || e;
    }).then(function () {
      return ff({
        user: U(a),
        credential: c,
        additionalUserInfo: d,
        operationType: "signIn"
      });
    }));
  }

  k.jc = function (a) {
    var b = this;
    return this.i.then(function () {
      return Kn(b, D(a));
    });
  };

  k.yc = function (a) {
    var b = this;
    this.addAuthTokenListener(function () {
      a.next(U(b));
    });
  };

  k.zc = function (a) {
    var b = this;
    Pn(this, function () {
      a.next(U(b));
    });
  };

  k.Hc = function (a, b, c) {
    var d = this;
    this.ba && Promise.resolve().then(function () {
      "function" === typeof a ? a(U(d)) : "function" === typeof a.next && a.next(U(d));
    });
    return this.ac(a, b, c);
  };

  k.Gc = function (a, b, c) {
    var d = this;
    this.ba && Promise.resolve().then(function () {
      d.X = d.getUid();
      "function" === typeof a ? a(U(d)) : "function" === typeof a.next && a.next(U(d));
    });
    return this.bc(a, b, c);
  };

  k.mc = function (a) {
    var b = this,
        c = this.i.then(function () {
      return U(b) ? U(b).I(a).then(function (d) {
        return {
          accessToken: d
        };
      }) : null;
    });
    return T(this, c);
  };

  k.Sc = function (a) {
    var b = this;
    return this.i.then(function () {
      return Kn(b, O(b.a, Gj, {
        token: a
      }));
    }).then(function (c) {
      var d = c.user;
      Wm(d, "isAnonymous", !1);
      b.da(d);
      return c;
    });
  };

  k.Tc = function (a, b) {
    var c = this;
    return this.i.then(function () {
      return Kn(c, O(c.a, Xg, {
        email: a,
        password: b
      }));
    });
  };

  k.dc = function (a, b) {
    var c = this;
    return this.i.then(function () {
      return Kn(c, O(c.a, Aj, {
        email: a,
        password: b
      }));
    });
  };

  k.Za = function (a) {
    var b = this;
    return this.i.then(function () {
      return Kn(b, a.ja(b.a));
    });
  };

  k.Rc = function (a) {
    cf("firebase.auth.Auth.prototype.signInAndRetrieveDataWithCredential is deprecated. Please use firebase.auth.Auth.prototype.signInWithCredential instead.");
    return this.Za(a);
  };

  k.yb = function () {
    var a = this;
    return this.i.then(function () {
      var b = U(a);

      if (b && b.isAnonymous) {
        var c = ff({
          providerId: null,
          isNewUser: !1
        });
        return ff({
          user: b,
          credential: null,
          additionalUserInfo: c,
          operationType: "signIn"
        });
      }

      return Kn(a, a.a.yb()).then(function (d) {
        var e = d.user;
        Wm(e, "isAnonymous", !0);
        a.da(e);
        return d;
      });
    });
  };

  function S(a) {
    return a.app;
  }

  function U(a) {
    return a.currentUser;
  }

  k.getUid = function () {
    return U(this) && U(this).uid || null;
  };

  function Qn(a) {
    return U(a) && U(a)._lat || null;
  }

  function Mn(a) {
    if (a.ba) {
      for (var b = 0; b < a.u.length; b++) {
        if (a.u[b]) a.u[b](Qn(a));
      }

      if (a.X !== a.getUid() && a.P.length) for (a.X = a.getUid(), b = 0; b < a.P.length; b++) {
        if (a.P[b]) a.P[b](Qn(a));
      }
    }
  }

  k.cc = function (a) {
    this.addAuthTokenListener(a);
    this.A++;
    0 < this.A && U(this) && Mm(U(this));
  };

  k.Oc = function (a) {
    var b = this;
    w(this.u, function (c) {
      c == a && b.A--;
    });
    0 > this.A && (this.A = 0);
    0 == this.A && U(this) && Nm(U(this));
    this.removeAuthTokenListener(a);
  };

  k.addAuthTokenListener = function (a) {
    var b = this;
    this.u.push(a);
    T(this, this.i.then(function () {
      b.m || Ta(b.u, a) && a(Qn(b));
    }));
  };

  k.removeAuthTokenListener = function (a) {
    Va(this.u, function (b) {
      return b == a;
    });
  };

  function Pn(a, b) {
    a.P.push(b);
    T(a, a.i.then(function () {
      !a.m && Ta(a.P, b) && a.X !== a.getUid() && (a.X = a.getUid(), b(Qn(a)));
    }));
  }

  k.delete = function () {
    this.m = !0;

    for (var a = 0; a < this.R.length; a++) {
      this.R[a].cancel("app-deleted");
    }

    this.R = [];
    this.l && (a = this.l, a.b.removeListener(rn("local"), a.a, this.pa));
    this.b && (Ll(this.b, this), Vl(this.b.b));
    return Promise.resolve();
  };

  function T(a, b) {
    a.R.push(b);
    b.na(function () {
      Ua(a.R, b);
    });
    return b;
  }

  k.gc = function (a) {
    return T(this, Xi(this.a, a));
  };

  k.Ac = function (a) {
    return !!bh(a);
  };

  k.vb = function (a, b) {
    var c = this;
    return T(this, D().then(function () {
      var d = new Of(b);
      if (!d.c) throw new t("argument-error", Wf + " must be true when sending sign in link to email");
      return Yf(d);
    }).then(function (d) {
      return c.a.vb(a, d);
    }).then(function () {}));
  };

  k.hd = function (a) {
    return this.Qa(a).then(function (b) {
      return b.data.email;
    });
  };

  k.mb = function (a, b) {
    return T(this, this.a.mb(a, b).then(function () {}));
  };

  k.Qa = function (a) {
    return T(this, this.a.Qa(a).then(function (b) {
      return new rf(b);
    }));
  };

  k.ib = function (a) {
    return T(this, this.a.ib(a).then(function () {}));
  };

  k.ub = function (a, b) {
    var c = this;
    return T(this, D().then(function () {
      return "undefined" === typeof b || kb(b) ? {} : Yf(new Of(b));
    }).then(function (d) {
      return c.a.ub(a, d);
    }).then(function () {}));
  };

  k.Vc = function (a, b) {
    return T(this, bm(this, a, b, q(this.Za, this)));
  };

  k.Uc = function (a, b) {
    var c = this;
    return T(this, D().then(function () {
      var d = b || me(),
          e = ah(a, d);
      d = bh(d);
      if (!d) throw new t("argument-error", "Invalid email link!");
      if (d.tenantId !== c.S()) throw new t("tenant-id-mismatch");
      return c.Za(e);
    }));
  };

  function Rn() {}

  Rn.prototype.render = function () {};

  Rn.prototype.reset = function () {};

  Rn.prototype.getResponse = function () {};

  Rn.prototype.execute = function () {};

  function Sn() {
    this.a = {};
    this.b = 1E12;
  }

  var Tn = null;

  Sn.prototype.render = function (a, b) {
    this.a[this.b.toString()] = new Un(a, b);
    return this.b++;
  };

  Sn.prototype.reset = function (a) {
    var b = Vn(this, a);
    a = Wn(a);
    b && a && (b.delete(), delete this.a[a]);
  };

  Sn.prototype.getResponse = function (a) {
    return (a = Vn(this, a)) ? a.getResponse() : null;
  };

  Sn.prototype.execute = function (a) {
    (a = Vn(this, a)) && a.execute();
  };

  function Vn(a, b) {
    return (b = Wn(b)) ? a.a[b] || null : null;
  }

  function Wn(a) {
    return (a = "undefined" === typeof a ? 1E12 : a) ? a.toString() : null;
  }

  function Un(a, b) {
    this.g = !1;
    this.c = b;
    this.a = this.b = null;
    this.h = "invisible" !== this.c.size;
    this.f = fc(a);
    var c = this;

    this.i = function () {
      c.execute();
    };

    this.h ? this.execute() : jd(this.f, "click", this.i);
  }

  Un.prototype.getResponse = function () {
    Xn(this);
    return this.b;
  };

  Un.prototype.execute = function () {
    Xn(this);
    var a = this;
    this.a || (this.a = setTimeout(function () {
      a.b = He();
      var b = a.c.callback,
          c = a.c["expired-callback"];
      if (b) try {
        b(a.b);
      } catch (d) {}
      a.a = setTimeout(function () {
        a.a = null;
        a.b = null;
        if (c) try {
          c();
        } catch (d) {}
        a.h && a.execute();
      }, 6E4);
    }, 500));
  };

  Un.prototype.delete = function () {
    Xn(this);
    this.g = !0;
    clearTimeout(this.a);
    this.a = null;
    G(this.f, "click", this.i);
  };

  function Xn(a) {
    if (a.g) throw Error("reCAPTCHA mock was already deleted!");
  }

  ;

  function Yn() {}

  M(Yn, "FACTOR_ID", "phone");

  function Zn() {}

  Zn.prototype.g = function () {
    Tn || (Tn = new Sn());
    return D(Tn);
  };

  Zn.prototype.c = function () {};

  var $n = null;

  function ao() {
    this.b = l.grecaptcha ? Infinity : 0;
    this.f = null;
    this.a = "__rcb" + Math.floor(1E6 * Math.random()).toString();
  }

  var bo = new ob(pb, "https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}"),
      co = new Ue(3E4, 6E4);

  ao.prototype.g = function (a) {
    var b = this;
    return new C(function (c, d) {
      var e = setTimeout(function () {
        d(new t("network-request-failed"));
      }, co.get());

      if (!l.grecaptcha || a !== b.f && !b.b) {
        l[b.a] = function () {
          if (l.grecaptcha) {
            b.f = a;
            var g = l.grecaptcha.render;

            l.grecaptcha.render = function (h, m) {
              h = g(h, m);
              b.b++;
              return h;
            };

            clearTimeout(e);
            c(l.grecaptcha);
          } else clearTimeout(e), d(new t("internal-error"));

          delete l[b.a];
        };

        var f = xb(bo, {
          onload: b.a,
          hl: a || ""
        });
        D(xi(f)).s(function () {
          clearTimeout(e);
          d(new t("internal-error", "Unable to load external reCAPTCHA dependencies!"));
        });
      } else clearTimeout(e), c(l.grecaptcha);
    });
  };

  ao.prototype.c = function () {
    this.b--;
  };

  var eo = null;

  function fo(a, b, c, d, e, f, g) {
    M(this, "type", "recaptcha");
    this.c = this.f = null;
    this.A = !1;
    this.m = b;
    this.g = null;
    g ? ($n || ($n = new Zn()), g = $n) : (eo || (eo = new ao()), g = eo);
    this.v = g;
    this.a = c || {
      theme: "light",
      type: "image"
    };
    this.h = [];
    if (this.a[go]) throw new t("argument-error", "sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.");
    this.i = "invisible" === this.a[ho];
    if (!l.document) throw new t("operation-not-supported-in-this-environment", "RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment with DOM support.");
    if (!fc(b) || !this.i && fc(b).hasChildNodes()) throw new t("argument-error", "reCAPTCHA container is either not found or already contains inner elements!");
    this.o = new Ei(a, f || null, e || null);

    this.u = d || function () {
      return null;
    };

    var h = this;
    this.l = [];
    var m = this.a[io];

    this.a[io] = function (v) {
      jo(h, v);
      if ("function" === typeof m) m(v);else if ("string" === typeof m) {
        var B = L(m, l);
        "function" === typeof B && B(v);
      }
    };

    var p = this.a[ko];

    this.a[ko] = function () {
      jo(h, null);
      if ("function" === typeof p) p();else if ("string" === typeof p) {
        var v = L(p, l);
        "function" === typeof v && v();
      }
    };
  }

  var io = "callback",
      ko = "expired-callback",
      go = "sitekey",
      ho = "size";

  function jo(a, b) {
    for (var c = 0; c < a.l.length; c++) {
      try {
        a.l[c](b);
      } catch (d) {}
    }
  }

  function lo(a, b) {
    Va(a.l, function (c) {
      return c == b;
    });
  }

  function mo(a, b) {
    a.h.push(b);
    b.na(function () {
      Ua(a.h, b);
    });
    return b;
  }

  k = fo.prototype;

  k.Ia = function () {
    var a = this;
    return this.f ? this.f : this.f = mo(this, D().then(function () {
      if (Ne() && !Ee()) return ze();
      throw new t("operation-not-supported-in-this-environment", "RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.");
    }).then(function () {
      return a.v.g(a.u());
    }).then(function (b) {
      a.g = b;
      return O(a.o, Fj, {});
    }).then(function (b) {
      a.a[go] = b.recaptchaSiteKey;
    }).s(function (b) {
      a.f = null;
      throw b;
    }));
  };

  k.render = function () {
    no(this);
    var a = this;
    return mo(this, this.Ia().then(function () {
      if (null === a.c) {
        var b = a.m;

        if (!a.i) {
          var c = fc(b);
          b = ic("DIV");
          c.appendChild(b);
        }

        a.c = a.g.render(b, a.a);
      }

      return a.c;
    }));
  };

  k.verify = function () {
    no(this);
    var a = this;
    return mo(this, this.render().then(function (b) {
      return new C(function (c) {
        var d = a.g.getResponse(b);
        if (d) c(d);else {
          var e = function e(f) {
            f && (lo(a, e), c(f));
          };

          a.l.push(e);
          a.i && a.g.execute(a.c);
        }
      });
    }));
  };

  k.reset = function () {
    no(this);
    null !== this.c && this.g.reset(this.c);
  };

  function no(a) {
    if (a.A) throw new t("internal-error", "RecaptchaVerifier instance has been destroyed.");
  }

  k.clear = function () {
    no(this);
    this.A = !0;
    this.v.c();

    for (var a = 0; a < this.h.length; a++) {
      this.h[a].cancel("RecaptchaVerifier instance has been destroyed.");
    }

    if (!this.i) {
      a = fc(this.m);

      for (var b; b = a.firstChild;) {
        a.removeChild(b);
      }
    }
  };

  function oo(a, b, c) {
    var d = !1;

    try {
      this.b = c || firebase.app();
    } catch (g) {
      throw new t("argument-error", "No firebase.app.App instance is currently initialized.");
    }

    if (this.b.options && this.b.options.apiKey) c = this.b.options.apiKey;else throw new t("invalid-api-key");
    var e = this,
        f = null;

    try {
      f = this.b.auth().Ga();
    } catch (g) {}

    try {
      d = this.b.auth().settings.appVerificationDisabledForTesting;
    } catch (g) {}

    f = firebase.SDK_VERSION ? Je(firebase.SDK_VERSION, f) : null;
    fo.call(this, c, a, b, function () {
      try {
        var g = e.b.auth().ka();
      } catch (h) {
        g = null;
      }

      return g;
    }, f, Aa(Ba), d);
  }

  r(oo, fo);

  function po(a, b, c, d) {
    a: {
      c = Array.prototype.slice.call(c);
      var e = 0;

      for (var f = !1, g = 0; g < b.length; g++) {
        if (b[g].optional) f = !0;else {
          if (f) throw new t("internal-error", "Argument validator encountered a required argument after an optional argument.");
          e++;
        }
      }

      f = b.length;
      if (c.length < e || f < c.length) d = "Expected " + (e == f ? 1 == e ? "1 argument" : e + " arguments" : e + "-" + f + " arguments") + " but got " + c.length + ".";else {
        for (e = 0; e < c.length; e++) {
          if (f = b[e].optional && void 0 === c[e], !b[e].K(c[e]) && !f) {
            b = b[e];
            if (0 > e || e >= qo.length) throw new t("internal-error", "Argument validator received an unsupported number of arguments.");
            c = qo[e];
            d = (d ? "" : c + " argument ") + (b.name ? '"' + b.name + '" ' : "") + "must be " + b.J + ".";
            break a;
          }
        }

        d = null;
      }
    }

    if (d) throw new t("argument-error", a + " failed: " + d);
  }

  var qo = "First Second Third Fourth Fifth Sixth Seventh Eighth Ninth".split(" ");

  function V(a, b) {
    return {
      name: a || "",
      J: "a valid string",
      optional: !!b,
      K: function K(c) {
        return "string" === typeof c;
      }
    };
  }

  function ro(a, b) {
    return {
      name: a || "",
      J: "a boolean",
      optional: !!b,
      K: function K(c) {
        return "boolean" === typeof c;
      }
    };
  }

  function W(a, b) {
    return {
      name: a || "",
      J: "a valid object",
      optional: !!b,
      K: n
    };
  }

  function so(a, b) {
    return {
      name: a || "",
      J: "a function",
      optional: !!b,
      K: function K(c) {
        return "function" === typeof c;
      }
    };
  }

  function to(a, b) {
    return {
      name: a || "",
      J: "null",
      optional: !!b,
      K: function K(c) {
        return null === c;
      }
    };
  }

  function uo() {
    return {
      name: "",
      J: "an HTML element",
      optional: !1,
      K: function K(a) {
        return !!(a && a instanceof Element);
      }
    };
  }

  function vo() {
    return {
      name: "auth",
      J: "an instance of Firebase Auth",
      optional: !0,
      K: function K(a) {
        return !!(a && a instanceof zn);
      }
    };
  }

  function wo() {
    return {
      name: "app",
      J: "an instance of Firebase App",
      optional: !0,
      K: function K(a) {
        return !!(a && a instanceof firebase.app.App);
      }
    };
  }

  function xo(a) {
    return {
      name: a ? a + "Credential" : "credential",
      J: a ? "a valid " + a + " credential" : "a valid credential",
      optional: !1,
      K: function K(b) {
        if (!b) return !1;
        var c = !a || b.providerId === a;
        return !(!b.ja || !c);
      }
    };
  }

  function yo() {
    return {
      name: "multiFactorAssertion",
      J: "a valid multiFactorAssertion",
      optional: !1,
      K: function K(a) {
        return a ? !!a.rb : !1;
      }
    };
  }

  function zo() {
    return {
      name: "authProvider",
      J: "a valid Auth provider",
      optional: !1,
      K: function K(a) {
        return !!(a && a.providerId && a.hasOwnProperty && a.hasOwnProperty("isOAuthProvider"));
      }
    };
  }

  function Ao(a, b) {
    return n(a) && "string" === typeof a.type && a.type === b && "function" === typeof a.Ha;
  }

  function Bo(a) {
    return n(a) && "string" === typeof a.uid;
  }

  function Co() {
    return {
      name: "applicationVerifier",
      J: "an implementation of firebase.auth.ApplicationVerifier",
      optional: !1,
      K: function K(a) {
        return !(!a || "string" !== typeof a.type || "function" !== typeof a.verify);
      }
    };
  }

  function X(a, b, c, d) {
    return {
      name: c || "",
      J: a.J + " or " + b.J,
      optional: !!d,
      K: function K(e) {
        return a.K(e) || b.K(e);
      }
    };
  }

  ;

  function Y(a, b) {
    for (var c in b) {
      var d = b[c].name;
      a[d] = Do(d, a[c], b[c].j);
    }
  }

  function Eo(a, b) {
    for (var c in b) {
      var d = b[c].name;
      d !== c && Object.defineProperty(a, d, {
        get: ta(function (e) {
          return this[e];
        }, c),
        set: ta(function (e, f, g, h) {
          po(e, [g], [h], !0);
          this[f] = h;
        }, d, c, b[c].jb),
        enumerable: !0
      });
    }
  }

  function Z(a, b, c, d) {
    a[b] = Do(b, c, d);
  }

  function Do(a, b, c) {
    function d() {
      var g = Array.prototype.slice.call(arguments);
      po(e, c, g);
      return b.apply(this, g);
    }

    if (!c) return b;
    var e = Fo(a),
        f;

    for (f in b) {
      d[f] = b[f];
    }

    for (f in b.prototype) {
      d.prototype[f] = b.prototype[f];
    }

    return d;
  }

  function Fo(a) {
    a = a.split(".");
    return a[a.length - 1];
  }

  ;
  Y(zn.prototype, {
    ib: {
      name: "applyActionCode",
      j: [V("code")]
    },
    Qa: {
      name: "checkActionCode",
      j: [V("code")]
    },
    mb: {
      name: "confirmPasswordReset",
      j: [V("code"), V("newPassword")]
    },
    dc: {
      name: "createUserWithEmailAndPassword",
      j: [V("email"), V("password")]
    },
    gc: {
      name: "fetchSignInMethodsForEmail",
      j: [V("email")]
    },
    qa: {
      name: "getRedirectResult",
      j: []
    },
    Ac: {
      name: "isSignInWithEmailLink",
      j: [V("emailLink")]
    },
    Gc: {
      name: "onAuthStateChanged",
      j: [X(W(), so(), "nextOrObserver"), so("opt_error", !0), so("opt_completed", !0)]
    },
    Hc: {
      name: "onIdTokenChanged",
      j: [X(W(), so(), "nextOrObserver"), so("opt_error", !0), so("opt_completed", !0)]
    },
    ub: {
      name: "sendPasswordResetEmail",
      j: [V("email"), X(W("opt_actionCodeSettings", !0), to(null, !0), "opt_actionCodeSettings", !0)]
    },
    vb: {
      name: "sendSignInLinkToEmail",
      j: [V("email"), W("actionCodeSettings")]
    },
    wb: {
      name: "setPersistence",
      j: [V("persistence")]
    },
    Rc: {
      name: "signInAndRetrieveDataWithCredential",
      j: [xo()]
    },
    yb: {
      name: "signInAnonymously",
      j: []
    },
    Za: {
      name: "signInWithCredential",
      j: [xo()]
    },
    Sc: {
      name: "signInWithCustomToken",
      j: [V("token")]
    },
    Tc: {
      name: "signInWithEmailAndPassword",
      j: [V("email"), V("password")]
    },
    Uc: {
      name: "signInWithEmailLink",
      j: [V("email"), V("emailLink", !0)]
    },
    Vc: {
      name: "signInWithPhoneNumber",
      j: [V("phoneNumber"), Co()]
    },
    Wc: {
      name: "signInWithPopup",
      j: [zo()]
    },
    Xc: {
      name: "signInWithRedirect",
      j: [zo()]
    },
    cd: {
      name: "updateCurrentUser",
      j: [X(function (a) {
        return {
          name: "user",
          J: "an instance of Firebase User",
          optional: !!a,
          K: function K(b) {
            return !!(b && b instanceof Dm);
          }
        };
      }(), to(), "user")]
    },
    zb: {
      name: "signOut",
      j: []
    },
    toJSON: {
      name: "toJSON",
      j: [V(null, !0)]
    },
    ed: {
      name: "useDeviceLanguage",
      j: []
    },
    fd: {
      name: "useEmulator",
      j: [V("url")]
    },
    hd: {
      name: "verifyPasswordResetCode",
      j: [V("code")]
    }
  });
  Eo(zn.prototype, {
    lc: {
      name: "languageCode",
      jb: X(V(), to(), "languageCode")
    },
    ti: {
      name: "tenantId",
      jb: X(V(), to(), "tenantId")
    }
  });
  zn.Persistence = Mk;
  zn.Persistence.LOCAL = "local";
  zn.Persistence.SESSION = "session";
  zn.Persistence.NONE = "none";
  Y(Dm.prototype, {
    "delete": {
      name: "delete",
      j: []
    },
    nc: {
      name: "getIdTokenResult",
      j: [ro("opt_forceRefresh", !0)]
    },
    I: {
      name: "getIdToken",
      j: [ro("opt_forceRefresh", !0)]
    },
    Bc: {
      name: "linkAndRetrieveDataWithCredential",
      j: [xo()]
    },
    pb: {
      name: "linkWithCredential",
      j: [xo()]
    },
    Cc: {
      name: "linkWithPhoneNumber",
      j: [V("phoneNumber"), Co()]
    },
    Dc: {
      name: "linkWithPopup",
      j: [zo()]
    },
    Ec: {
      name: "linkWithRedirect",
      j: [zo()]
    },
    Kc: {
      name: "reauthenticateAndRetrieveDataWithCredential",
      j: [xo()]
    },
    sb: {
      name: "reauthenticateWithCredential",
      j: [xo()]
    },
    Lc: {
      name: "reauthenticateWithPhoneNumber",
      j: [V("phoneNumber"), Co()]
    },
    Mc: {
      name: "reauthenticateWithPopup",
      j: [zo()]
    },
    Nc: {
      name: "reauthenticateWithRedirect",
      j: [zo()]
    },
    reload: {
      name: "reload",
      j: []
    },
    tb: {
      name: "sendEmailVerification",
      j: [X(W("opt_actionCodeSettings", !0), to(null, !0), "opt_actionCodeSettings", !0)]
    },
    toJSON: {
      name: "toJSON",
      j: [V(null, !0)]
    },
    bd: {
      name: "unlink",
      j: [V("provider")]
    },
    Ab: {
      name: "updateEmail",
      j: [V("email")]
    },
    Bb: {
      name: "updatePassword",
      j: [V("password")]
    },
    dd: {
      name: "updatePhoneNumber",
      j: [xo("phone")]
    },
    Cb: {
      name: "updateProfile",
      j: [W("profile")]
    },
    Db: {
      name: "verifyBeforeUpdateEmail",
      j: [V("email"), X(W("opt_actionCodeSettings", !0), to(null, !0), "opt_actionCodeSettings", !0)]
    }
  });
  Y(Sn.prototype, {
    execute: {
      name: "execute"
    },
    render: {
      name: "render"
    },
    reset: {
      name: "reset"
    },
    getResponse: {
      name: "getResponse"
    }
  });
  Y(Rn.prototype, {
    execute: {
      name: "execute"
    },
    render: {
      name: "render"
    },
    reset: {
      name: "reset"
    },
    getResponse: {
      name: "getResponse"
    }
  });
  Y(C.prototype, {
    na: {
      name: "finally"
    },
    s: {
      name: "catch"
    },
    then: {
      name: "then"
    }
  });
  Eo($l.prototype, {
    appVerificationDisabled: {
      name: "appVerificationDisabledForTesting",
      jb: ro("appVerificationDisabledForTesting")
    }
  });
  Y(am.prototype, {
    confirm: {
      name: "confirm",
      j: [V("verificationCode")]
    }
  });
  Z(xg, "fromJSON", function (a) {
    a = "string" === typeof a ? JSON.parse(a) : a;

    for (var b, c = [Ig, $g, gh, Fg], d = 0; d < c.length; d++) {
      if (b = c[d](a)) return b;
    }

    return null;
  }, [X(V(), W(), "json")]);
  Z(Vg, "credential", function (a, b) {
    return new Ug(a, b);
  }, [V("email"), V("password")]);
  Y(Ug.prototype, {
    w: {
      name: "toJSON",
      j: [V(null, !0)]
    }
  });
  Y(Mg.prototype, {
    Ca: {
      name: "addScope",
      j: [V("scope")]
    },
    Ka: {
      name: "setCustomParameters",
      j: [W("customOAuthParameters")]
    }
  });
  Z(Mg, "credential", Ng, [X(V(), W(), "token")]);
  Z(Vg, "credentialWithLink", ah, [V("email"), V("emailLink")]);
  Y(Og.prototype, {
    Ca: {
      name: "addScope",
      j: [V("scope")]
    },
    Ka: {
      name: "setCustomParameters",
      j: [W("customOAuthParameters")]
    }
  });
  Z(Og, "credential", Pg, [X(V(), W(), "token")]);
  Y(Qg.prototype, {
    Ca: {
      name: "addScope",
      j: [V("scope")]
    },
    Ka: {
      name: "setCustomParameters",
      j: [W("customOAuthParameters")]
    }
  });
  Z(Qg, "credential", Rg, [X(V(), X(W(), to()), "idToken"), X(V(), to(), "accessToken", !0)]);
  Y(Sg.prototype, {
    Ka: {
      name: "setCustomParameters",
      j: [W("customOAuthParameters")]
    }
  });
  Z(Sg, "credential", Tg, [X(V(), W(), "token"), V("secret", !0)]);
  Y(Lg.prototype, {
    Ca: {
      name: "addScope",
      j: [V("scope")]
    },
    credential: {
      name: "credential",
      j: [X(V(), X(W(), to()), "optionsOrIdToken"), X(V(), to(), "accessToken", !0)]
    },
    Ka: {
      name: "setCustomParameters",
      j: [W("customOAuthParameters")]
    }
  });
  Y(Gg.prototype, {
    w: {
      name: "toJSON",
      j: [V(null, !0)]
    }
  });
  Y(Ag.prototype, {
    w: {
      name: "toJSON",
      j: [V(null, !0)]
    }
  });
  Z(hh, "credential", lh, [V("verificationId"), V("verificationCode")]);
  Y(hh.prototype, {
    eb: {
      name: "verifyPhoneNumber",
      j: [X(V(), function (a, b) {
        return {
          name: a || "phoneInfoOptions",
          J: "valid phone info options",
          optional: !!b,
          K: function K(c) {
            return c ? c.session && c.phoneNumber ? Ao(c.session, vg) && "string" === typeof c.phoneNumber : c.session && c.multiFactorHint ? Ao(c.session, wg) && Bo(c.multiFactorHint) : c.session && c.multiFactorUid ? Ao(c.session, wg) && "string" === typeof c.multiFactorUid : c.phoneNumber ? "string" === typeof c.phoneNumber : !1 : !1;
          }
        };
      }(), "phoneInfoOptions"), Co()]
    }
  });
  Y(ch.prototype, {
    w: {
      name: "toJSON",
      j: [V(null, !0)]
    }
  });
  Y(t.prototype, {
    toJSON: {
      name: "toJSON",
      j: [V(null, !0)]
    }
  });
  Y(uh.prototype, {
    toJSON: {
      name: "toJSON",
      j: [V(null, !0)]
    }
  });
  Y(th.prototype, {
    toJSON: {
      name: "toJSON",
      j: [V(null, !0)]
    }
  });
  Y(gm.prototype, {
    toJSON: {
      name: "toJSON",
      j: [V(null, !0)]
    }
  });
  Y(dm.prototype, {
    Qc: {
      name: "resolveSignIn",
      j: [yo()]
    }
  });
  Y(om.prototype, {
    Qb: {
      name: "getSession",
      j: []
    },
    ec: {
      name: "enroll",
      j: [yo(), V("displayName", !0)]
    },
    ad: {
      name: "unenroll",
      j: [X({
        name: "multiFactorInfo",
        J: "a valid multiFactorInfo",
        optional: !1,
        K: Bo
      }, V(), "multiFactorInfoIdentifier")]
    }
  });
  Y(oo.prototype, {
    clear: {
      name: "clear",
      j: []
    },
    render: {
      name: "render",
      j: []
    },
    verify: {
      name: "verify",
      j: []
    }
  });
  Z(Ff, "parseLink", Nf, [V("link")]);
  Z(Yn, "assertion", function (a) {
    return new mm(a);
  }, [xo("phone")]);

  (function () {
    if ("undefined" !== typeof firebase && firebase.INTERNAL && firebase.INTERNAL.registerComponent) {
      var a = {
        ActionCodeInfo: {
          Operation: {
            EMAIL_SIGNIN: wf,
            PASSWORD_RESET: "PASSWORD_RESET",
            RECOVER_EMAIL: "RECOVER_EMAIL",
            REVERT_SECOND_FACTOR_ADDITION: yf,
            VERIFY_AND_CHANGE_EMAIL: xf,
            VERIFY_EMAIL: "VERIFY_EMAIL"
          }
        },
        Auth: zn,
        AuthCredential: xg,
        Error: t
      };
      Z(a, "EmailAuthProvider", Vg, []);
      Z(a, "FacebookAuthProvider", Mg, []);
      Z(a, "GithubAuthProvider", Og, []);
      Z(a, "GoogleAuthProvider", Qg, []);
      Z(a, "TwitterAuthProvider", Sg, []);
      Z(a, "OAuthProvider", Lg, [V("providerId")]);
      Z(a, "SAMLAuthProvider", Kg, [V("providerId")]);
      Z(a, "PhoneAuthProvider", hh, [vo()]);
      Z(a, "RecaptchaVerifier", oo, [X(V(), uo(), "recaptchaContainer"), W("recaptchaParameters", !0), wo()]);
      Z(a, "ActionCodeURL", Ff, []);
      Z(a, "PhoneMultiFactorGenerator", Yn, []);
      firebase.INTERNAL.registerComponent({
        name: "auth",
        instanceFactory: function instanceFactory(b) {
          b = b.getProvider("app").getImmediate();
          return new zn(b);
        },
        multipleInstances: !1,
        serviceProps: a,
        instantiationMode: "LAZY",
        type: "PUBLIC"
      });
      firebase.INTERNAL.registerComponent({
        name: "auth-internal",
        instanceFactory: function instanceFactory(b) {
          b = b.getProvider("auth").getImmediate();
          return {
            getUid: q(b.getUid, b),
            getToken: q(b.mc, b),
            addAuthTokenListener: q(b.cc, b),
            removeAuthTokenListener: q(b.Oc, b)
          };
        },
        multipleInstances: !1,
        instantiationMode: "LAZY",
        type: "PRIVATE"
      });
      firebase.registerVersion("@firebase/auth", "0.15.0");
      firebase.INTERNAL.extendNamespace({
        User: Dm
      });
    } else throw Error("Cannot find the firebase namespace; be sure to include firebase-app.js before this library.");
  })();
}).apply(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {});

/***/ }),

/***/ "LRne":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/of.js ***!
  \**************************************************************/
/*! exports provided: of */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "of", function() { return of; });
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/isScheduler */ "z+Ro");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromArray */ "yCtX");
/* harmony import */ var _scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduled/scheduleArray */ "jZKg");



function of() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var scheduler = args[args.length - 1];

  if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_0__["isScheduler"])(scheduler)) {
    args.pop();
    return Object(_scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__["scheduleArray"])(args, scheduler);
  } else {
    return Object(_fromArray__WEBPACK_IMPORTED_MODULE_1__["fromArray"])(args);
  }
}

/***/ }),

/***/ "Lhse":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/symbol/iterator.js ***!
  \****************************************************************/
/*! exports provided: getSymbolIterator, iterator, $$iterator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSymbolIterator", function() { return getSymbolIterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iterator", function() { return iterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$$iterator", function() { return $$iterator; });
function getSymbolIterator() {
  if (typeof Symbol !== 'function' || !Symbol.iterator) {
    return '@@iterator';
  }

  return Symbol.iterator;
}
var iterator = /*@__PURE__*/getSymbolIterator();
var $$iterator = iterator;

/***/ }),

/***/ "MBAA":
/*!***************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduled/scheduleIterable.js ***!
  \***************************************************************************/
/*! exports provided: scheduleIterable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduleIterable", function() { return scheduleIterable; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "quSY");
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../symbol/iterator */ "Lhse");



function scheduleIterable(input, scheduler) {
  if (!input) {
    throw new Error('Iterable cannot be null');
  }

  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
    var iterator;
    sub.add(function () {
      if (iterator && typeof iterator.return === 'function') {
        iterator.return();
      }
    });
    sub.add(scheduler.schedule(function () {
      iterator = input[_symbol_iterator__WEBPACK_IMPORTED_MODULE_2__["iterator"]]();
      sub.add(scheduler.schedule(function () {
        if (subscriber.closed) {
          return;
        }

        var value;
        var done;

        try {
          var result = iterator.next();
          value = result.value;
          done = result.done;
        } catch (err) {
          subscriber.error(err);
          return;
        }

        if (done) {
          subscriber.complete();
        } else {
          subscriber.next(value);
          this.schedule();
        }
      }));
    }));
    return sub;
  });
}

/***/ }),

/***/ "MtjB":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/retryWhen.js ***!
  \********************************************************************/
/*! exports provided: retryWhen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "retryWhen", function() { return retryWhen; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Subject */ "XNiG");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");








function retryWhen(notifier) {
  return function (source) {
    return source.lift(new RetryWhenOperator(notifier, source));
  };
}

var RetryWhenOperator = /*#__PURE__*/function () {
  function RetryWhenOperator(notifier, source) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, RetryWhenOperator);

    this.notifier = notifier;
    this.source = source;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RetryWhenOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));
    }
  }]);

  return RetryWhenOperator;
}();

var RetryWhenSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(RetryWhenSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(RetryWhenSubscriber);

  function RetryWhenSubscriber(destination, notifier, source) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, RetryWhenSubscriber);

    _this = _super.call(this, destination);
    _this.notifier = notifier;
    _this.source = source;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RetryWhenSubscriber, [{
    key: "error",
    value: function error(err) {
      if (!this.isStopped) {
        var errors = this.errors;
        var retries = this.retries;
        var retriesSubscription = this.retriesSubscription;

        if (!retries) {
          errors = new _Subject__WEBPACK_IMPORTED_MODULE_6__["Subject"]();

          try {
            var notifier = this.notifier;
            retries = notifier(errors);
          } catch (e) {
            return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(RetryWhenSubscriber.prototype), "error", this).call(this, e);
          }

          retriesSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_7__["innerSubscribe"])(retries, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_7__["SimpleInnerSubscriber"](this));
        } else {
          this.errors = undefined;
          this.retriesSubscription = undefined;
        }

        this._unsubscribeAndRecycle();

        this.errors = errors;
        this.retries = retries;
        this.retriesSubscription = retriesSubscription;
        errors.next(err);
      }
    }
  }, {
    key: "_unsubscribe",
    value: function _unsubscribe() {
      var errors = this.errors,
          retriesSubscription = this.retriesSubscription;

      if (errors) {
        errors.unsubscribe();
        this.errors = undefined;
      }

      if (retriesSubscription) {
        retriesSubscription.unsubscribe();
        this.retriesSubscription = undefined;
      }

      this.retries = undefined;
    }
  }, {
    key: "notifyNext",
    value: function notifyNext() {
      var _unsubscribe = this._unsubscribe;
      this._unsubscribe = null;

      this._unsubscribeAndRecycle();

      this._unsubscribe = _unsubscribe;
      this.source.subscribe(this);
    }
  }]);

  return RetryWhenSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_7__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "NCdM":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _nonIterableSpread; });
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

/***/ }),

/***/ "NHP+":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/AsyncSubject.js ***!
  \*************************************************************/
/*! exports provided: AsyncSubject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncSubject", function() { return AsyncSubject; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Subject */ "XNiG");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Subscription */ "quSY");








var AsyncSubject = /*#__PURE__*/function (_Subject) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(AsyncSubject, _Subject);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(AsyncSubject);

  function AsyncSubject() {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, AsyncSubject);

    _this = _super.apply(this, arguments);
    _this.value = null;
    _this.hasNext = false;
    _this.hasCompleted = false;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(AsyncSubject, [{
    key: "_subscribe",
    value: function _subscribe(subscriber) {
      if (this.hasError) {
        subscriber.error(this.thrownError);
        return _Subscription__WEBPACK_IMPORTED_MODULE_7__["Subscription"].EMPTY;
      } else if (this.hasCompleted && this.hasNext) {
        subscriber.next(this.value);
        subscriber.complete();
        return _Subscription__WEBPACK_IMPORTED_MODULE_7__["Subscription"].EMPTY;
      }

      return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(AsyncSubject.prototype), "_subscribe", this).call(this, subscriber);
    }
  }, {
    key: "next",
    value: function next(value) {
      if (!this.hasCompleted) {
        this.value = value;
        this.hasNext = true;
      }
    }
  }, {
    key: "error",
    value: function error(_error) {
      if (!this.hasCompleted) {
        Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(AsyncSubject.prototype), "error", this).call(this, _error);
      }
    }
  }, {
    key: "complete",
    value: function complete() {
      this.hasCompleted = true;

      if (this.hasNext) {
        Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(AsyncSubject.prototype), "next", this).call(this, this.value);
      }

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(AsyncSubject.prototype), "complete", this).call(this);
    }
  }]);

  return AsyncSubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_6__["Subject"]);

/***/ }),

/***/ "NJ4a":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/hostReportError.js ***!
  \*********************************************************************/
/*! exports provided: hostReportError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hostReportError", function() { return hostReportError; });
function hostReportError(err) {
  setTimeout(function () {
    throw err;
  }, 0);
}

/***/ }),

/***/ "NJ9Y":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/last.js ***!
  \***************************************************************/
/*! exports provided: last */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "last", function() { return last; });
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/EmptyError */ "sVev");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ "pLZG");
/* harmony import */ var _takeLast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./takeLast */ "BFxc");
/* harmony import */ var _throwIfEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./throwIfEmpty */ "XDbj");
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaultIfEmpty */ "xbPD");
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/identity */ "SpAZ");






function last(predicate, defaultValue) {
  var hasDefaultValue = arguments.length >= 2;
  return function (source) {
    return source.pipe(predicate ? Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(function (v, i) {
      return predicate(v, i, source);
    }) : _util_identity__WEBPACK_IMPORTED_MODULE_5__["identity"], Object(_takeLast__WEBPACK_IMPORTED_MODULE_2__["takeLast"])(1), hasDefaultValue ? Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_4__["defaultIfEmpty"])(defaultValue) : Object(_throwIfEmpty__WEBPACK_IMPORTED_MODULE_3__["throwIfEmpty"])(function () {
      return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__["EmptyError"]();
    }));
  };
}

/***/ }),

/***/ "NNCq":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/range.js ***!
  \*****************************************************************/
/*! exports provided: range, dispatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "range", function() { return range; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dispatch", function() { return dispatch; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");

function range() {
  var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var count = arguments.length > 1 ? arguments[1] : undefined;
  var scheduler = arguments.length > 2 ? arguments[2] : undefined;
  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    if (count === undefined) {
      count = start;
      start = 0;
    }

    var index = 0;
    var current = start;

    if (scheduler) {
      return scheduler.schedule(dispatch, 0, {
        index: index,
        count: count,
        start: start,
        subscriber: subscriber
      });
    } else {
      do {
        if (index++ >= count) {
          subscriber.complete();
          break;
        }

        subscriber.next(current++);

        if (subscriber.closed) {
          break;
        }
      } while (true);
    }

    return undefined;
  });
}
function dispatch(state) {
  var start = state.start,
      index = state.index,
      count = state.count,
      subscriber = state.subscriber;

  if (index >= count) {
    subscriber.complete();
    return;
  }

  subscriber.next(start);

  if (subscriber.closed) {
    return;
  }

  state.index = index + 1;
  state.start = start + 1;
  this.schedule(state);
}

/***/ }),

/***/ "NXyV":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/defer.js ***!
  \*****************************************************************/
/*! exports provided: defer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defer", function() { return defer; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./from */ "Cfvw");
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./empty */ "EY2u");



function defer(observableFactory) {
  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    var input;

    try {
      input = observableFactory();
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }

    var source = input ? Object(_from__WEBPACK_IMPORTED_MODULE_1__["from"])(input) : Object(_empty__WEBPACK_IMPORTED_MODULE_2__["empty"])();
    return source.subscribe(subscriber);
  });
}

/***/ }),

/***/ "NbQQ":
/*!**************************************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/firestore/es2015/firestore.module.js ***!
  \**************************************************************************************/
/*! exports provided: AngularFirestoreModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AngularFirestoreModule", function() { return AngularFirestoreModule; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _firestore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./firestore */ "S/Aq");
/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! firebase/firestore */ "5x/H");




var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var AngularFirestoreModule_1;




var AngularFirestoreModule = /*@__PURE__*/function () {
  var AngularFirestoreModule = AngularFirestoreModule_1 = /*#__PURE__*/function () {
    function AngularFirestoreModule() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, AngularFirestoreModule);
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(AngularFirestoreModule, null, [{
      key: "enablePersistence",
      value: function enablePersistence(persistenceSettings) {
        return {
          ngModule: AngularFirestoreModule_1,
          providers: [{
            provide: _firestore__WEBPACK_IMPORTED_MODULE_3__["EnablePersistenceToken"],
            useValue: true
          }, {
            provide: _firestore__WEBPACK_IMPORTED_MODULE_3__["PersistenceSettingsToken"],
            useValue: persistenceSettings
          }]
        };
      }
    }]);

    return AngularFirestoreModule;
  }();

  AngularFirestoreModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
    type: AngularFirestoreModule
  });
  AngularFirestoreModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
    factory: function AngularFirestoreModule_Factory(t) {
      return new (t || AngularFirestoreModule)();
    },
    providers: [_firestore__WEBPACK_IMPORTED_MODULE_3__["AngularFirestore"]]
  });
  return AngularFirestoreModule;
}();



/***/ }),

/***/ "NfdI":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/publish.js ***!
  \******************************************************************/
/*! exports provided: publish */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "publish", function() { return publish; });
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subject */ "XNiG");
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ "oB13");


function publish(selector) {
  return selector ? Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(function () {
    return new _Subject__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
  }, selector) : Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(new _Subject__WEBPACK_IMPORTED_MODULE_0__["Subject"]());
}

/***/ }),

/***/ "Nv8m":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/race.js ***!
  \****************************************************************/
/*! exports provided: race, RaceOperator, RaceSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "race", function() { return race; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RaceOperator", function() { return RaceOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RaceSubscriber", function() { return RaceSubscriber; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isArray */ "DH7j");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fromArray */ "yCtX");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../OuterSubscriber */ "l7GE");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/subscribeToResult */ "ZUHj");








function race() {
  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {
    observables[_key] = arguments[_key];
  }

  if (observables.length === 1) {
    if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_4__["isArray"])(observables[0])) {
      observables = observables[0];
    } else {
      return observables[0];
    }
  }

  return Object(_fromArray__WEBPACK_IMPORTED_MODULE_5__["fromArray"])(observables, undefined).lift(new RaceOperator());
}
var RaceOperator = /*#__PURE__*/function () {
  function RaceOperator() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, RaceOperator);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(RaceOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new RaceSubscriber(subscriber));
    }
  }]);

  return RaceOperator;
}();
var RaceSubscriber = /*#__PURE__*/function (_OuterSubscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(RaceSubscriber, _OuterSubscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(RaceSubscriber);

  function RaceSubscriber(destination) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, RaceSubscriber);

    _this = _super.call(this, destination);
    _this.hasFirst = false;
    _this.observables = [];
    _this.subscriptions = [];
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(RaceSubscriber, [{
    key: "_next",
    value: function _next(observable) {
      this.observables.push(observable);
    }
  }, {
    key: "_complete",
    value: function _complete() {
      var observables = this.observables;
      var len = observables.length;

      if (len === 0) {
        this.destination.complete();
      } else {
        for (var i = 0; i < len && !this.hasFirst; i++) {
          var observable = observables[i];
          var subscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_7__["subscribeToResult"])(this, observable, undefined, i);

          if (this.subscriptions) {
            this.subscriptions.push(subscription);
          }

          this.add(subscription);
        }

        this.observables = null;
      }
    }
  }, {
    key: "notifyNext",
    value: function notifyNext(_outerValue, innerValue, outerIndex) {
      if (!this.hasFirst) {
        this.hasFirst = true;

        for (var i = 0; i < this.subscriptions.length; i++) {
          if (i !== outerIndex) {
            var subscription = this.subscriptions[i];
            subscription.unsubscribe();
            this.remove(subscription);
          }
        }

        this.subscriptions = null;
      }

      this.destination.next(innerValue);
    }
  }]);

  return RaceSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_6__["OuterSubscriber"]);

/***/ }),

/***/ "O4y0":
/*!*********************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/SubscribeOnObservable.js ***!
  \*********************************************************************************/
/*! exports provided: SubscribeOnObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubscribeOnObservable", function() { return SubscribeOnObservable; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _scheduler_asap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../scheduler/asap */ "7Hc7");
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/isNumeric */ "Y7HM");







var SubscribeOnObservable = /*#__PURE__*/function (_Observable) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(SubscribeOnObservable, _Observable);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(SubscribeOnObservable);

  function SubscribeOnObservable(source) {
    var _this;

    var delayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var scheduler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _scheduler_asap__WEBPACK_IMPORTED_MODULE_5__["asap"];

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, SubscribeOnObservable);

    _this = _super.call(this);
    _this.source = source;
    _this.delayTime = delayTime;
    _this.scheduler = scheduler;

    if (!Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_6__["isNumeric"])(delayTime) || delayTime < 0) {
      _this.delayTime = 0;
    }

    if (!scheduler || typeof scheduler.schedule !== 'function') {
      _this.scheduler = _scheduler_asap__WEBPACK_IMPORTED_MODULE_5__["asap"];
    }

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(SubscribeOnObservable, [{
    key: "_subscribe",
    value: function _subscribe(subscriber) {
      var delay = this.delayTime;
      var source = this.source;
      var scheduler = this.scheduler;
      return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {
        source: source,
        subscriber: subscriber
      });
    }
  }], [{
    key: "create",
    value: function create(source) {
      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var scheduler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _scheduler_asap__WEBPACK_IMPORTED_MODULE_5__["asap"];
      return new SubscribeOnObservable(source, delay, scheduler);
    }
  }, {
    key: "dispatch",
    value: function dispatch(arg) {
      var source = arg.source,
          subscriber = arg.subscriber;
      return this.add(source.subscribe(subscriber));
    }
  }]);

  return SubscribeOnObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_4__["Observable"]);

/***/ }),

/***/ "ODXe":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _slicedToArray; });
/* harmony import */ var _babel_runtime_helpers_esm_arrayWithHoles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/arrayWithHoles */ "DSFK");
/* harmony import */ var _babel_runtime_helpers_esm_iterableToArrayLimit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/iterableToArrayLimit */ "CfBk");
/* harmony import */ var _babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/unsupportedIterableToArray */ "BsWD");
/* harmony import */ var _babel_runtime_helpers_esm_nonIterableRest__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/nonIterableRest */ "PYwp");




function _slicedToArray(arr, i) {
  return Object(_babel_runtime_helpers_esm_arrayWithHoles__WEBPACK_IMPORTED_MODULE_0__["default"])(arr) || Object(_babel_runtime_helpers_esm_iterableToArrayLimit__WEBPACK_IMPORTED_MODULE_1__["default"])(arr, i) || Object(_babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(arr, i) || Object(_babel_runtime_helpers_esm_nonIterableRest__WEBPACK_IMPORTED_MODULE_3__["default"])();
}

/***/ }),

/***/ "OQgR":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/groupBy.js ***!
  \******************************************************************/
/*! exports provided: groupBy, GroupedObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return groupBy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupedObservable", function() { return GroupedObservable; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Subscription */ "quSY");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Subject */ "XNiG");










function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {
  return function (source) {
    return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));
  };
}

var GroupByOperator = /*#__PURE__*/function () {
  function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, GroupByOperator);

    this.keySelector = keySelector;
    this.elementSelector = elementSelector;
    this.durationSelector = durationSelector;
    this.subjectSelector = subjectSelector;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(GroupByOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));
    }
  }]);

  return GroupByOperator;
}();

var GroupBySubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(GroupBySubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(GroupBySubscriber);

  function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, GroupBySubscriber);

    _this = _super.call(this, destination);
    _this.keySelector = keySelector;
    _this.elementSelector = elementSelector;
    _this.durationSelector = durationSelector;
    _this.subjectSelector = subjectSelector;
    _this.groups = null;
    _this.attemptedToUnsubscribe = false;
    _this.count = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(GroupBySubscriber, [{
    key: "_next",
    value: function _next(value) {
      var key;

      try {
        key = this.keySelector(value);
      } catch (err) {
        this.error(err);
        return;
      }

      this._group(value, key);
    }
  }, {
    key: "_group",
    value: function _group(value, key) {
      var groups = this.groups;

      if (!groups) {
        groups = this.groups = new Map();
      }

      var group = groups.get(key);
      var element;

      if (this.elementSelector) {
        try {
          element = this.elementSelector(value);
        } catch (err) {
          this.error(err);
        }
      } else {
        element = value;
      }

      if (!group) {
        group = this.subjectSelector ? this.subjectSelector() : new _Subject__WEBPACK_IMPORTED_MODULE_9__["Subject"]();
        groups.set(key, group);
        var groupedObservable = new GroupedObservable(key, group, this);
        this.destination.next(groupedObservable);

        if (this.durationSelector) {
          var duration;

          try {
            duration = this.durationSelector(new GroupedObservable(key, group));
          } catch (err) {
            this.error(err);
            return;
          }

          this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));
        }
      }

      if (!group.closed) {
        group.next(element);
      }
    }
  }, {
    key: "_error",
    value: function _error(err) {
      var groups = this.groups;

      if (groups) {
        groups.forEach(function (group, key) {
          group.error(err);
        });
        groups.clear();
      }

      this.destination.error(err);
    }
  }, {
    key: "_complete",
    value: function _complete() {
      var groups = this.groups;

      if (groups) {
        groups.forEach(function (group, key) {
          group.complete();
        });
        groups.clear();
      }

      this.destination.complete();
    }
  }, {
    key: "removeGroup",
    value: function removeGroup(key) {
      this.groups.delete(key);
    }
  }, {
    key: "unsubscribe",
    value: function unsubscribe() {
      if (!this.closed) {
        this.attemptedToUnsubscribe = true;

        if (this.count === 0) {
          Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(GroupBySubscriber.prototype), "unsubscribe", this).call(this);
        }
      }
    }
  }]);

  return GroupBySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_6__["Subscriber"]);

var GroupDurationSubscriber = /*#__PURE__*/function (_Subscriber2) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(GroupDurationSubscriber, _Subscriber2);

  var _super2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(GroupDurationSubscriber);

  function GroupDurationSubscriber(key, group, parent) {
    var _this2;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, GroupDurationSubscriber);

    _this2 = _super2.call(this, group);
    _this2.key = key;
    _this2.group = group;
    _this2.parent = parent;
    return _this2;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(GroupDurationSubscriber, [{
    key: "_next",
    value: function _next(value) {
      this.complete();
    }
  }, {
    key: "_unsubscribe",
    value: function _unsubscribe() {
      var parent = this.parent,
          key = this.key;
      this.key = this.parent = null;

      if (parent) {
        parent.removeGroup(key);
      }
    }
  }]);

  return GroupDurationSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_6__["Subscriber"]);

var GroupedObservable = /*#__PURE__*/function (_Observable) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(GroupedObservable, _Observable);

  var _super3 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(GroupedObservable);

  function GroupedObservable(key, groupSubject, refCountSubscription) {
    var _this3;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, GroupedObservable);

    _this3 = _super3.call(this);
    _this3.key = key;
    _this3.groupSubject = groupSubject;
    _this3.refCountSubscription = refCountSubscription;
    return _this3;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(GroupedObservable, [{
    key: "_subscribe",
    value: function _subscribe(subscriber) {
      var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_7__["Subscription"]();
      var refCountSubscription = this.refCountSubscription,
          groupSubject = this.groupSubject;

      if (refCountSubscription && !refCountSubscription.closed) {
        subscription.add(new InnerRefCountSubscription(refCountSubscription));
      }

      subscription.add(groupSubject.subscribe(subscriber));
      return subscription;
    }
  }]);

  return GroupedObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_8__["Observable"]);

var InnerRefCountSubscription = /*#__PURE__*/function (_Subscription) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(InnerRefCountSubscription, _Subscription);

  var _super4 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(InnerRefCountSubscription);

  function InnerRefCountSubscription(parent) {
    var _this4;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, InnerRefCountSubscription);

    _this4 = _super4.call(this);
    _this4.parent = parent;
    parent.count++;
    return _this4;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(InnerRefCountSubscription, [{
    key: "unsubscribe",
    value: function unsubscribe() {
      var parent = this.parent;

      if (!parent.closed && !this.closed) {
        Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(InnerRefCountSubscription.prototype), "unsubscribe", this).call(this);

        parent.count -= 1;

        if (parent.count === 0 && parent.attemptedToUnsubscribe) {
          parent.unsubscribe();
        }
      }
    }
  }]);

  return InnerRefCountSubscription;
}(_Subscription__WEBPACK_IMPORTED_MODULE_7__["Subscription"]);

/***/ }),

/***/ "OsX3":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/bufferTime.js ***!
  \*********************************************************************/
/*! exports provided: bufferTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bufferTime", function() { return bufferTime; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../scheduler/async */ "D0XW");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/isScheduler */ "z+Ro");










function bufferTime(bufferTimeSpan) {
  var length = arguments.length;
  var scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_7__["async"];

  if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_9__["isScheduler"])(arguments[arguments.length - 1])) {
    scheduler = arguments[arguments.length - 1];
    length--;
  }

  var bufferCreationInterval = null;

  if (length >= 2) {
    bufferCreationInterval = arguments[1];
  }

  var maxBufferSize = Number.POSITIVE_INFINITY;

  if (length >= 3) {
    maxBufferSize = arguments[2];
  }

  return function bufferTimeOperatorFunction(source) {
    return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));
  };
}

var BufferTimeOperator = /*#__PURE__*/function () {
  function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, BufferTimeOperator);

    this.bufferTimeSpan = bufferTimeSpan;
    this.bufferCreationInterval = bufferCreationInterval;
    this.maxBufferSize = maxBufferSize;
    this.scheduler = scheduler;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(BufferTimeOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));
    }
  }]);

  return BufferTimeOperator;
}();

var Context = function Context() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, Context);

  this.buffer = [];
};

var BufferTimeSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(BufferTimeSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(BufferTimeSubscriber);

  function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, BufferTimeSubscriber);

    _this = _super.call(this, destination);
    _this.bufferTimeSpan = bufferTimeSpan;
    _this.bufferCreationInterval = bufferCreationInterval;
    _this.maxBufferSize = maxBufferSize;
    _this.scheduler = scheduler;
    _this.contexts = [];

    var context = _this.openContext();

    _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;

    if (_this.timespanOnly) {
      var timeSpanOnlyState = {
        subscriber: Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this),
        context: context,
        bufferTimeSpan: bufferTimeSpan
      };

      _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
    } else {
      var closeState = {
        subscriber: Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this),
        context: context
      };
      var creationState = {
        bufferTimeSpan: bufferTimeSpan,
        bufferCreationInterval: bufferCreationInterval,
        subscriber: Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this),
        scheduler: scheduler
      };

      _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));

      _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));
    }

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(BufferTimeSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var contexts = this.contexts;
      var len = contexts.length;
      var filledBufferContext;

      for (var i = 0; i < len; i++) {
        var context = contexts[i];
        var buffer = context.buffer;
        buffer.push(value);

        if (buffer.length == this.maxBufferSize) {
          filledBufferContext = context;
        }
      }

      if (filledBufferContext) {
        this.onBufferFull(filledBufferContext);
      }
    }
  }, {
    key: "_error",
    value: function _error(err) {
      this.contexts.length = 0;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(BufferTimeSubscriber.prototype), "_error", this).call(this, err);
    }
  }, {
    key: "_complete",
    value: function _complete() {
      var contexts = this.contexts,
          destination = this.destination;

      while (contexts.length > 0) {
        var context = contexts.shift();
        destination.next(context.buffer);
      }

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(BufferTimeSubscriber.prototype), "_complete", this).call(this);
    }
  }, {
    key: "_unsubscribe",
    value: function _unsubscribe() {
      this.contexts = null;
    }
  }, {
    key: "onBufferFull",
    value: function onBufferFull(context) {
      this.closeContext(context);
      var closeAction = context.closeAction;
      closeAction.unsubscribe();
      this.remove(closeAction);

      if (!this.closed && this.timespanOnly) {
        context = this.openContext();
        var bufferTimeSpan = this.bufferTimeSpan;
        var timeSpanOnlyState = {
          subscriber: this,
          context: context,
          bufferTimeSpan: bufferTimeSpan
        };
        this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
      }
    }
  }, {
    key: "openContext",
    value: function openContext() {
      var context = new Context();
      this.contexts.push(context);
      return context;
    }
  }, {
    key: "closeContext",
    value: function closeContext(context) {
      this.destination.next(context.buffer);
      var contexts = this.contexts;
      var spliceIndex = contexts ? contexts.indexOf(context) : -1;

      if (spliceIndex >= 0) {
        contexts.splice(contexts.indexOf(context), 1);
      }
    }
  }]);

  return BufferTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_8__["Subscriber"]);

function dispatchBufferTimeSpanOnly(state) {
  var subscriber = state.subscriber;
  var prevContext = state.context;

  if (prevContext) {
    subscriber.closeContext(prevContext);
  }

  if (!subscriber.closed) {
    state.context = subscriber.openContext();
    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);
  }
}

function dispatchBufferCreation(state) {
  var bufferCreationInterval = state.bufferCreationInterval,
      bufferTimeSpan = state.bufferTimeSpan,
      subscriber = state.subscriber,
      scheduler = state.scheduler;
  var context = subscriber.openContext();
  var action = this;

  if (!subscriber.closed) {
    subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, {
      subscriber: subscriber,
      context: context
    }));
    action.schedule(state, bufferCreationInterval);
  }
}

function dispatchBufferClose(arg) {
  var subscriber = arg.subscriber,
      context = arg.context;
  subscriber.closeContext(context);
}

/***/ }),

/***/ "PYwp":
/*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _nonIterableRest; });
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

/***/ }),

/***/ "PZkE":
/*!**********************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/distinctUntilKeyChanged.js ***!
  \**********************************************************************************/
/*! exports provided: distinctUntilKeyChanged */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distinctUntilKeyChanged", function() { return distinctUntilKeyChanged; });
/* harmony import */ var _distinctUntilChanged__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./distinctUntilChanged */ "/uUt");

function distinctUntilKeyChanged(key, compare) {
  return Object(_distinctUntilChanged__WEBPACK_IMPORTED_MODULE_0__["distinctUntilChanged"])(function (x, y) {
    return compare ? compare(x[key], y[key]) : x[key] === y[key];
  });
}

/***/ }),

/***/ "PfrF":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/bufferWhen.js ***!
  \*********************************************************************/
/*! exports provided: bufferWhen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bufferWhen", function() { return bufferWhen; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Subscription */ "quSY");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");








function bufferWhen(closingSelector) {
  return function (source) {
    return source.lift(new BufferWhenOperator(closingSelector));
  };
}

var BufferWhenOperator = /*#__PURE__*/function () {
  function BufferWhenOperator(closingSelector) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, BufferWhenOperator);

    this.closingSelector = closingSelector;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(BufferWhenOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));
    }
  }]);

  return BufferWhenOperator;
}();

var BufferWhenSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(BufferWhenSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(BufferWhenSubscriber);

  function BufferWhenSubscriber(destination, closingSelector) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, BufferWhenSubscriber);

    _this = _super.call(this, destination);
    _this.closingSelector = closingSelector;
    _this.subscribing = false;

    _this.openBuffer();

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(BufferWhenSubscriber, [{
    key: "_next",
    value: function _next(value) {
      this.buffer.push(value);
    }
  }, {
    key: "_complete",
    value: function _complete() {
      var buffer = this.buffer;

      if (buffer) {
        this.destination.next(buffer);
      }

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(BufferWhenSubscriber.prototype), "_complete", this).call(this);
    }
  }, {
    key: "_unsubscribe",
    value: function _unsubscribe() {
      this.buffer = undefined;
      this.subscribing = false;
    }
  }, {
    key: "notifyNext",
    value: function notifyNext() {
      this.openBuffer();
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {
      if (this.subscribing) {
        this.complete();
      } else {
        this.openBuffer();
      }
    }
  }, {
    key: "openBuffer",
    value: function openBuffer() {
      var closingSubscription = this.closingSubscription;

      if (closingSubscription) {
        this.remove(closingSubscription);
        closingSubscription.unsubscribe();
      }

      var buffer = this.buffer;

      if (this.buffer) {
        this.destination.next(buffer);
      }

      this.buffer = [];
      var closingNotifier;

      try {
        var closingSelector = this.closingSelector;
        closingNotifier = closingSelector();
      } catch (err) {
        return this.error(err);
      }

      closingSubscription = new _Subscription__WEBPACK_IMPORTED_MODULE_6__["Subscription"]();
      this.closingSubscription = closingSubscription;
      this.add(closingSubscription);
      this.subscribing = true;
      closingSubscription.add(Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_7__["innerSubscribe"])(closingNotifier, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_7__["SimpleInnerSubscriber"](this)));
      this.subscribing = false;
    }
  }]);

  return BufferWhenSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_7__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "PqYM":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/timer.js ***!
  \*****************************************************************/
/*! exports provided: timer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return timer; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ "D0XW");
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isNumeric */ "Y7HM");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isScheduler */ "z+Ro");




function timer() {
  var dueTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var periodOrScheduler = arguments.length > 1 ? arguments[1] : undefined;
  var scheduler = arguments.length > 2 ? arguments[2] : undefined;
  var period = -1;

  if (Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__["isNumeric"])(periodOrScheduler)) {
    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);
  } else if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__["isScheduler"])(periodOrScheduler)) {
    scheduler = periodOrScheduler;
  }

  if (!Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__["isScheduler"])(scheduler)) {
    scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
  }

  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    var due = Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__["isNumeric"])(dueTime) ? dueTime : +dueTime - scheduler.now();
    return scheduler.schedule(dispatch, due, {
      index: 0,
      period: period,
      subscriber: subscriber
    });
  });
}

function dispatch(state) {
  var index = state.index,
      period = state.period,
      subscriber = state.subscriber;
  subscriber.next(index);

  if (subscriber.closed) {
    return;
  } else if (period === -1) {
    return subscriber.complete();
  }

  state.index = index + 1;
  this.schedule(state, period);
}

/***/ }),

/***/ "Pz8W":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduler/AsapAction.js ***!
  \*********************************************************************/
/*! exports provided: AsapAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsapAction", function() { return AsapAction; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _util_Immediate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/Immediate */ "c7jc");
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./AsyncAction */ "3N8a");








var AsapAction = /*#__PURE__*/function (_AsyncAction) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(AsapAction, _AsyncAction);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(AsapAction);

  function AsapAction(scheduler, work) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, AsapAction);

    _this = _super.call(this, scheduler, work);
    _this.scheduler = scheduler;
    _this.work = work;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(AsapAction, [{
    key: "requestAsyncId",
    value: function requestAsyncId(scheduler, id) {
      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

      if (delay !== null && delay > 0) {
        return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(AsapAction.prototype), "requestAsyncId", this).call(this, scheduler, id, delay);
      }

      scheduler.actions.push(this);
      return scheduler.scheduled || (scheduler.scheduled = _util_Immediate__WEBPACK_IMPORTED_MODULE_6__["Immediate"].setImmediate(scheduler.flush.bind(scheduler, null)));
    }
  }, {
    key: "recycleAsyncId",
    value: function recycleAsyncId(scheduler, id) {
      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

      if (delay !== null && delay > 0 || delay === null && this.delay > 0) {
        return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(AsapAction.prototype), "recycleAsyncId", this).call(this, scheduler, id, delay);
      }

      if (scheduler.actions.length === 0) {
        _util_Immediate__WEBPACK_IMPORTED_MODULE_6__["Immediate"].clearImmediate(id);
        scheduler.scheduled = undefined;
      }

      return undefined;
    }
  }]);

  return AsapAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_7__["AsyncAction"]);

/***/ }),

/***/ "QIAL":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/isInteropObservable.js ***!
  \*************************************************************************/
/*! exports provided: isInteropObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isInteropObservable", function() { return isInteropObservable; });
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/observable */ "kJWO");

function isInteropObservable(input) {
  return input && typeof input[_symbol_observable__WEBPACK_IMPORTED_MODULE_0__["observable"]] === 'function';
}

/***/ }),

/***/ "Qn8I":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/using.js ***!
  \*****************************************************************/
/*! exports provided: using */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "using", function() { return using; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./from */ "Cfvw");
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./empty */ "EY2u");



function using(resourceFactory, observableFactory) {
  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    var resource;

    try {
      resource = resourceFactory();
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }

    var result;

    try {
      result = observableFactory(resource);
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }

    var source = result ? Object(_from__WEBPACK_IMPORTED_MODULE_1__["from"])(result) : _empty__WEBPACK_IMPORTED_MODULE_2__["EMPTY"];
    var subscription = source.subscribe(subscriber);
    return function () {
      subscription.unsubscribe();

      if (resource) {
        resource.unsubscribe();
      }
    };
  });
}

/***/ }),

/***/ "QqCr":
/*!************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/bindCallback.js ***!
  \************************************************************************/
/*! exports provided: bindCallback */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bindCallback", function() { return bindCallback; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _AsyncSubject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../AsyncSubject */ "NHP+");
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operators/map */ "lJxs");
/* harmony import */ var _util_canReportError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/canReportError */ "8Qeq");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isArray */ "DH7j");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/isScheduler */ "z+Ro");







function bindCallback(callbackFunc, resultSelector, scheduler) {
  if (resultSelector) {
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_6__["isScheduler"])(resultSelector)) {
      scheduler = resultSelector;
    } else {
      return function () {
        return bindCallback(callbackFunc, scheduler).apply(void 0, arguments).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_3__["map"])(function (args) {
          return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_5__["isArray"])(args) ? resultSelector.apply(void 0, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(args)) : resultSelector(args);
        }));
      };
    }
  }

  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var context = this;
    var subject;
    var params = {
      context: context,
      subject: subject,
      callbackFunc: callbackFunc,
      scheduler: scheduler
    };
    return new _Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"](function (subscriber) {
      if (!scheduler) {
        if (!subject) {
          subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_2__["AsyncSubject"]();

          var handler = function handler() {
            for (var _len2 = arguments.length, innerArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              innerArgs[_key2] = arguments[_key2];
            }

            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
            subject.complete();
          };

          try {
            callbackFunc.apply(context, [].concat(args, [handler]));
          } catch (err) {
            if (Object(_util_canReportError__WEBPACK_IMPORTED_MODULE_4__["canReportError"])(subject)) {
              subject.error(err);
            } else {
              console.warn(err);
            }
          }
        }

        return subject.subscribe(subscriber);
      } else {
        var state = {
          args: args,
          subscriber: subscriber,
          params: params
        };
        return scheduler.schedule(dispatch, 0, state);
      }
    });
  };
}

function dispatch(state) {
  var _this = this;

  var self = this;
  var args = state.args,
      subscriber = state.subscriber,
      params = state.params;
  var callbackFunc = params.callbackFunc,
      context = params.context,
      scheduler = params.scheduler;
  var subject = params.subject;

  if (!subject) {
    subject = params.subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_2__["AsyncSubject"]();

    var handler = function handler() {
      for (var _len3 = arguments.length, innerArgs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        innerArgs[_key3] = arguments[_key3];
      }

      var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;

      _this.add(scheduler.schedule(dispatchNext, 0, {
        value: value,
        subject: subject
      }));
    };

    try {
      callbackFunc.apply(context, [].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(args), [handler]));
    } catch (err) {
      subject.error(err);
    }
  }

  this.add(subject.subscribe(subscriber));
}

function dispatchNext(state) {
  var value = state.value,
      subject = state.subject;
  subject.next(value);
  subject.complete();
}

function dispatchError(state) {
  var err = state.err,
      subject = state.subject;
  subject.error(err);
}

/***/ }),

/***/ "RHh3":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/construct.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _construct; });
/* harmony import */ var _babel_runtime_helpers_esm_setPrototypeOf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/setPrototypeOf */ "s4An");
/* harmony import */ var _babel_runtime_helpers_esm_isNativeReflectConstruct__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/isNativeReflectConstruct */ "2WcH");


function _construct(Parent, args, Class) {
  if (Object(_babel_runtime_helpers_esm_isNativeReflectConstruct__WEBPACK_IMPORTED_MODULE_1__["default"])()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) Object(_babel_runtime_helpers_esm_setPrototypeOf__WEBPACK_IMPORTED_MODULE_0__["default"])(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

/***/ }),

/***/ "RUbi":
/*!************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduler/AsapScheduler.js ***!
  \************************************************************************/
/*! exports provided: AsapScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsapScheduler", function() { return AsapScheduler; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AsyncScheduler */ "IjjT");





var AsapScheduler = /*#__PURE__*/function (_AsyncScheduler) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(AsapScheduler, _AsyncScheduler);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(AsapScheduler);

  function AsapScheduler() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, AsapScheduler);

    return _super.apply(this, arguments);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(AsapScheduler, [{
    key: "flush",
    value: function flush(action) {
      this.active = true;
      this.scheduled = undefined;
      var actions = this.actions;
      var error;
      var index = -1;
      var count = actions.length;
      action = action || actions.shift();

      do {
        if (error = action.execute(action.state, action.delay)) {
          break;
        }
      } while (++index < count && (action = actions.shift()));

      this.active = false;

      if (error) {
        while (++index < count && (action = actions.shift())) {
          action.unsubscribe();
        }

        throw error;
      }
    }
  }]);

  return AsapScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_4__["AsyncScheduler"]);

/***/ }),

/***/ "ReuC":
/*!********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/get.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _get; });
/* harmony import */ var _babel_runtime_helpers_esm_superPropBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/superPropBase */ "XTTE");

function _get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get = Reflect.get;
  } else {
    _get = function _get(target, property, receiver) {
      var base = Object(_babel_runtime_helpers_esm_superPropBase__WEBPACK_IMPORTED_MODULE_0__["default"])(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return _get(target, property, receiver || target);
}

/***/ }),

/***/ "S+S0":
/*!************************************************************!*\
  !*** ./node_modules/@firebase/component/dist/index.cjs.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', {
  value: true
});

var tslib = __webpack_require__(/*! tslib */ "mrSG");

var util = __webpack_require__(/*! @firebase/util */ "zVF4");
/**
 * Component for service name T, e.g. `auth`, `auth-internal`
 */


var Component =
/** @class */

/*@__PURE__*/
function () {
  /**
   *
   * @param name The public service name, e.g. app, auth, firestore, database
   * @param instanceFactory Service factory responsible for creating the public interface
   * @param type whether the service provided by the component is public or private
   */
  function Component(name, instanceFactory, type) {
    this.name = name;
    this.instanceFactory = instanceFactory;
    this.type = type;
    this.multipleInstances = false;
    /**
     * Properties to be added to the service namespace
     */

    this.serviceProps = {};
    this.instantiationMode = "LAZY"
    /* LAZY */
    ;
  }

  Component.prototype.setInstantiationMode = function (mode) {
    this.instantiationMode = mode;
    return this;
  };

  Component.prototype.setMultipleInstances = function (multipleInstances) {
    this.multipleInstances = multipleInstances;
    return this;
  };

  Component.prototype.setServiceProps = function (props) {
    this.serviceProps = props;
    return this;
  };

  return Component;
}();
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var DEFAULT_ENTRY_NAME = '[DEFAULT]';
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Provider for instance for service name T, e.g. 'auth', 'auth-internal'
 * NameServiceMapping[T] is an alias for the type of the instance
 */

var Provider =
/** @class */

/*@__PURE__*/
function () {
  function Provider(name, container) {
    this.name = name;
    this.container = container;
    this.component = null;
    this.instances = new Map();
    this.instancesDeferred = new Map();
  }
  /**
   * @param identifier A provider can provide mulitple instances of a service
   * if this.component.multipleInstances is true.
   */


  Provider.prototype.get = function (identifier) {
    if (identifier === void 0) {
      identifier = DEFAULT_ENTRY_NAME;
    } // if multipleInstances is not supported, use the default name


    var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);

    if (!this.instancesDeferred.has(normalizedIdentifier)) {
      var deferred = new util.Deferred();
      this.instancesDeferred.set(normalizedIdentifier, deferred); // If the service instance is available, resolve the promise with it immediately

      try {
        var instance = this.getOrInitializeService(normalizedIdentifier);

        if (instance) {
          deferred.resolve(instance);
        }
      } catch (e) {// when the instance factory throws an exception during get(), it should not cause
        // a fatal error. We just return the unresolved promise in this case.
      }
    }

    return this.instancesDeferred.get(normalizedIdentifier).promise;
  };

  Provider.prototype.getImmediate = function (options) {
    var _a = tslib.__assign({
      identifier: DEFAULT_ENTRY_NAME,
      optional: false
    }, options),
        identifier = _a.identifier,
        optional = _a.optional; // if multipleInstances is not supported, use the default name


    var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);

    try {
      var instance = this.getOrInitializeService(normalizedIdentifier);

      if (!instance) {
        if (optional) {
          return null;
        }

        throw Error("Service " + this.name + " is not available");
      }

      return instance;
    } catch (e) {
      if (optional) {
        return null;
      } else {
        throw e;
      }
    }
  };

  Provider.prototype.getComponent = function () {
    return this.component;
  };

  Provider.prototype.setComponent = function (component) {
    var e_1, _a;

    if (component.name !== this.name) {
      throw Error("Mismatching Component " + component.name + " for Provider " + this.name + ".");
    }

    if (this.component) {
      throw Error("Component for " + this.name + " has already been provided");
    }

    this.component = component; // if the service is eager, initialize the default instance

    if (isComponentEager(component)) {
      try {
        this.getOrInitializeService(DEFAULT_ENTRY_NAME);
      } catch (e) {// when the instance factory for an eager Component throws an exception during the eager
        // initialization, it should not cause a fatal error.
        // TODO: Investigate if we need to make it configurable, because some component may want to cause
        // a fatal error in this case?
      }
    }

    try {
      // Create service instances for the pending promises and resolve them
      // NOTE: if this.multipleInstances is false, only the default instance will be created
      // and all promises with resolve with it regardless of the identifier.
      for (var _b = tslib.__values(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {
        var _d = tslib.__read(_c.value, 2),
            instanceIdentifier = _d[0],
            instanceDeferred = _d[1];

        var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);

        try {
          // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.
          var instance = this.getOrInitializeService(normalizedIdentifier);
          instanceDeferred.resolve(instance);
        } catch (e) {// when the instance factory throws an exception, it should not cause
          // a fatal error. We just leave the promise unresolved.
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  };

  Provider.prototype.clearInstance = function (identifier) {
    if (identifier === void 0) {
      identifier = DEFAULT_ENTRY_NAME;
    }

    this.instancesDeferred.delete(identifier);
    this.instances.delete(identifier);
  }; // app.delete() will call this method on every provider to delete the services
  // TODO: should we mark the provider as deleted?


  Provider.prototype.delete = function () {
    return tslib.__awaiter(this, void 0, void 0, function () {
      var services;
      return tslib.__generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            services = Array.from(this.instances.values());
            return [4
            /*yield*/
            , Promise.all(tslib.__spread(services.filter(function (service) {
              return 'INTERNAL' in service;
            }) // legacy services
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            .map(function (service) {
              return service.INTERNAL.delete();
            }), services.filter(function (service) {
              return '_delete' in service;
            }) // modularized services
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            .map(function (service) {
              return service._delete();
            })))];

          case 1:
            _a.sent();

            return [2
            /*return*/
            ];
        }
      });
    });
  };

  Provider.prototype.isComponentSet = function () {
    return this.component != null;
  };

  Provider.prototype.getOrInitializeService = function (identifier) {
    var instance = this.instances.get(identifier);

    if (!instance && this.component) {
      instance = this.component.instanceFactory(this.container, normalizeIdentifierForFactory(identifier));
      this.instances.set(identifier, instance);
    }

    return instance || null;
  };

  Provider.prototype.normalizeInstanceIdentifier = function (identifier) {
    if (this.component) {
      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;
    } else {
      return identifier; // assume multiple instances are supported before the component is provided.
    }
  };

  return Provider;
}(); // undefined should be passed to the service factory for the default instance


function normalizeIdentifierForFactory(identifier) {
  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;
}

function isComponentEager(component) {
  return component.instantiationMode === "EAGER"
  /* EAGER */
  ;
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`
 */


var ComponentContainer =
/** @class */

/*@__PURE__*/
function () {
  function ComponentContainer(name) {
    this.name = name;
    this.providers = new Map();
  }
  /**
   *
   * @param component Component being added
   * @param overwrite When a component with the same name has already been registered,
   * if overwrite is true: overwrite the existing component with the new component and create a new
   * provider with the new component. It can be useful in tests where you want to use different mocks
   * for different tests.
   * if overwrite is false: throw an exception
   */


  ComponentContainer.prototype.addComponent = function (component) {
    var provider = this.getProvider(component.name);

    if (provider.isComponentSet()) {
      throw new Error("Component " + component.name + " has already been registered with " + this.name);
    }

    provider.setComponent(component);
  };

  ComponentContainer.prototype.addOrOverwriteComponent = function (component) {
    var provider = this.getProvider(component.name);

    if (provider.isComponentSet()) {
      // delete the existing provider from the container, so we can register the new component
      this.providers.delete(component.name);
    }

    this.addComponent(component);
  };
  /**
   * getProvider provides a type safe interface where it can only be called with a field name
   * present in NameServiceMapping interface.
   *
   * Firebase SDKs providing services should extend NameServiceMapping interface to register
   * themselves.
   */


  ComponentContainer.prototype.getProvider = function (name) {
    if (this.providers.has(name)) {
      return this.providers.get(name);
    } // create a Provider for a service that hasn't registered with Firebase


    var provider = new Provider(name, this);
    this.providers.set(name, provider);
    return provider;
  };

  ComponentContainer.prototype.getProviders = function () {
    return Array.from(this.providers.values());
  };

  return ComponentContainer;
}();

exports.Component = Component;
exports.ComponentContainer = ComponentContainer;
exports.Provider = Provider;

/***/ }),

/***/ "S/Aq":
/*!*******************************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/firestore/es2015/firestore.js ***!
  \*******************************************************************************/
/*! exports provided: EnablePersistenceToken, PersistenceSettingsToken, FirestoreSettingsToken, ENABLE_PERSISTENCE, PERSISTENCE_SETTINGS, SETTINGS, DefaultFirestoreSettings, associateQuery, AngularFirestore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EnablePersistenceToken", function() { return EnablePersistenceToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PersistenceSettingsToken", function() { return PersistenceSettingsToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FirestoreSettingsToken", function() { return FirestoreSettingsToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ENABLE_PERSISTENCE", function() { return ENABLE_PERSISTENCE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PERSISTENCE_SETTINGS", function() { return PERSISTENCE_SETTINGS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SETTINGS", function() { return SETTINGS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultFirestoreSettings", function() { return DefaultFirestoreSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "associateQuery", function() { return associateQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AngularFirestore", function() { return AngularFirestore; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var _document_document__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./document/document */ "VqN3");
/* harmony import */ var _collection_collection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./collection/collection */ "maur");
/* harmony import */ var _collection_group_collection_group__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./collection-group/collection-group */ "ts7B");
/* harmony import */ var _angular_fire__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/fire */ "05qF");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! firebase/app */ "Wcq6");
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(firebase_app__WEBPACK_IMPORTED_MODULE_9__);




var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var __metadata = undefined && undefined.__metadata || function (k, v) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var __param = undefined && undefined.__param || function (paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
};









var EnablePersistenceToken = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["InjectionToken"]('angularfire2.enableFirestorePersistence');
var PersistenceSettingsToken = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["InjectionToken"]('angularfire2.firestore.persistenceSettings');
var FirestoreSettingsToken = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["InjectionToken"]('angularfire2.firestore.settings');
var ENABLE_PERSISTENCE = EnablePersistenceToken;
var PERSISTENCE_SETTINGS = PersistenceSettingsToken;
var SETTINGS = FirestoreSettingsToken;
var major = parseInt(firebase_app__WEBPACK_IMPORTED_MODULE_9___default.a.SDK_VERSION.split('.')[0]);
var minor = parseInt(firebase_app__WEBPACK_IMPORTED_MODULE_9___default.a.SDK_VERSION.split('.')[1]);
var DefaultFirestoreSettings = major < 5 || major == 5 && minor < 8 ? {
  timestampsInSnapshots: true
} : {};
function associateQuery(collectionRef) {
  var queryFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (ref) {
    return ref;
  };
  var query = queryFn(collectionRef);
  var ref = collectionRef;
  return {
    query: query,
    ref: ref
  };
}

var AngularFirestore = /*@__PURE__*/function () {
  var AngularFirestore = /*#__PURE__*/function () {
    function AngularFirestore(options, nameOrConfig, shouldEnablePersistence, settings, platformId, zone, persistenceSettings) {
      var _this = this;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, AngularFirestore);

      this.schedulers = new _angular_fire__WEBPACK_IMPORTED_MODULE_7__["ɵAngularFireSchedulers"](zone);
      this.keepUnstableUntilFirst = Object(_angular_fire__WEBPACK_IMPORTED_MODULE_7__["ɵkeepUnstableUntilFirstFactory"])(this.schedulers, platformId);
      this.firestore = zone.runOutsideAngular(function () {
        var app = Object(_angular_fire__WEBPACK_IMPORTED_MODULE_7__["_firebaseAppFactory"])(options, zone, nameOrConfig);

        var firestore = app.firestore();
        firestore.settings(settings || DefaultFirestoreSettings);
        return firestore;
      });

      if (shouldEnablePersistence && !Object(_angular_common__WEBPACK_IMPORTED_MODULE_8__["isPlatformServer"])(platformId)) {
        var enablePersistence = function enablePersistence() {
          try {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(_this.firestore.enablePersistence(persistenceSettings || undefined).then(function () {
              return true;
            }, function () {
              return false;
            }));
          } catch (e) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(false);
          }
        };

        this.persistenceEnabled$ = zone.runOutsideAngular(enablePersistence);
      } else {
        this.persistenceEnabled$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(false);
      }
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(AngularFirestore, [{
      key: "collection",
      value: function collection(pathOrRef, queryFn) {
        var collectionRef;

        if (typeof pathOrRef === 'string') {
          collectionRef = this.firestore.collection(pathOrRef);
        } else {
          collectionRef = pathOrRef;
        }

        var _associateQuery = associateQuery(collectionRef, queryFn),
            ref = _associateQuery.ref,
            query = _associateQuery.query;

        return new _collection_collection__WEBPACK_IMPORTED_MODULE_5__["AngularFirestoreCollection"](ref, query, this);
      }
    }, {
      key: "collectionGroup",
      value: function collectionGroup(collectionId, queryGroupFn) {
        if (major < 6) {
          throw "collection group queries require Firebase JS SDK >= 6.0";
        }

        var queryFn = queryGroupFn || function (ref) {
          return ref;
        };

        var firestore = this.firestore;
        var collectionGroup = firestore.collectionGroup(collectionId);
        return new _collection_group_collection_group__WEBPACK_IMPORTED_MODULE_6__["AngularFirestoreCollectionGroup"](queryFn(collectionGroup), this);
      }
    }, {
      key: "doc",
      value: function doc(pathOrRef) {
        var ref;

        if (typeof pathOrRef === 'string') {
          ref = this.firestore.doc(pathOrRef);
        } else {
          ref = pathOrRef;
        }

        return new _document_document__WEBPACK_IMPORTED_MODULE_4__["AngularFirestoreDocument"](ref, this);
      }
    }, {
      key: "createId",
      value: function createId() {
        return this.firestore.collection('_').doc().id;
      }
    }]);

    return AngularFirestore;
  }();

  AngularFirestore.ɵfac = function AngularFirestore_Factory(t) {
    return new (t || AngularFirestore)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_fire__WEBPACK_IMPORTED_MODULE_7__["FIREBASE_OPTIONS"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_fire__WEBPACK_IMPORTED_MODULE_7__["FIREBASE_APP_NAME"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](ENABLE_PERSISTENCE, 8), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](SETTINGS, 8), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__["PLATFORM_ID"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](PERSISTENCE_SETTINGS, 8));
  };

  AngularFirestore.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({
    token: AngularFirestore,
    factory: function factory(t) {
      return AngularFirestore.ɵfac(t);
    }
  });
  AngularFirestore = __decorate([__param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(_angular_fire__WEBPACK_IMPORTED_MODULE_7__["FIREBASE_OPTIONS"])), __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"])()), __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(_angular_fire__WEBPACK_IMPORTED_MODULE_7__["FIREBASE_APP_NAME"])), __param(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"])()), __param(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(ENABLE_PERSISTENCE)), __param(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"])()), __param(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(SETTINGS)), __param(4, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_2__["PLATFORM_ID"])), __param(6, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"])()), __param(6, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(PERSISTENCE_SETTINGS)), __metadata("design:paramtypes", [Object, Object, Object, Object, Object, _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"], Object])], AngularFirestore);
  return AngularFirestore;
}();



/***/ }),

/***/ "SeVD":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/subscribeTo.js ***!
  \*****************************************************************/
/*! exports provided: subscribeTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeTo", function() { return subscribeTo; });
/* harmony import */ var _subscribeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribeToArray */ "ngJS");
/* harmony import */ var _subscribeToPromise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./subscribeToPromise */ "a7t3");
/* harmony import */ var _subscribeToIterable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./subscribeToIterable */ "pLzU");
/* harmony import */ var _subscribeToObservable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./subscribeToObservable */ "CRDf");
/* harmony import */ var _isArrayLike__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./isArrayLike */ "I55L");
/* harmony import */ var _isPromise__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isPromise */ "c2HN");
/* harmony import */ var _isObject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./isObject */ "XoHu");
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../symbol/iterator */ "Lhse");
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../symbol/observable */ "kJWO");









var subscribeTo = function subscribeTo(result) {
  if (!!result && typeof result[_symbol_observable__WEBPACK_IMPORTED_MODULE_8__["observable"]] === 'function') {
    return Object(_subscribeToObservable__WEBPACK_IMPORTED_MODULE_3__["subscribeToObservable"])(result);
  } else if (Object(_isArrayLike__WEBPACK_IMPORTED_MODULE_4__["isArrayLike"])(result)) {
    return Object(_subscribeToArray__WEBPACK_IMPORTED_MODULE_0__["subscribeToArray"])(result);
  } else if (Object(_isPromise__WEBPACK_IMPORTED_MODULE_5__["isPromise"])(result)) {
    return Object(_subscribeToPromise__WEBPACK_IMPORTED_MODULE_1__["subscribeToPromise"])(result);
  } else if (!!result && typeof result[_symbol_iterator__WEBPACK_IMPORTED_MODULE_7__["iterator"]] === 'function') {
    return Object(_subscribeToIterable__WEBPACK_IMPORTED_MODULE_2__["subscribeToIterable"])(result);
  } else {
    var value = Object(_isObject__WEBPACK_IMPORTED_MODULE_6__["isObject"])(result) ? 'an invalid object' : "'".concat(result, "'");
    var msg = "You provided ".concat(value, " where a stream was expected.") + ' You can provide an Observable, Promise, Array, or Iterable.';
    throw new TypeError(msg);
  }
};

/***/ }),

/***/ "SpAZ":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/identity.js ***!
  \**************************************************************/
/*! exports provided: identity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
function identity(x) {
  return x;
}

/***/ }),

/***/ "SxV6":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/first.js ***!
  \****************************************************************/
/*! exports provided: first */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "first", function() { return first; });
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/EmptyError */ "sVev");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ "pLZG");
/* harmony import */ var _take__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./take */ "IzEk");
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaultIfEmpty */ "xbPD");
/* harmony import */ var _throwIfEmpty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./throwIfEmpty */ "XDbj");
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/identity */ "SpAZ");






function first(predicate, defaultValue) {
  var hasDefaultValue = arguments.length >= 2;
  return function (source) {
    return source.pipe(predicate ? Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(function (v, i) {
      return predicate(v, i, source);
    }) : _util_identity__WEBPACK_IMPORTED_MODULE_5__["identity"], Object(_take__WEBPACK_IMPORTED_MODULE_2__["take"])(1), hasDefaultValue ? Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__["defaultIfEmpty"])(defaultValue) : Object(_throwIfEmpty__WEBPACK_IMPORTED_MODULE_4__["throwIfEmpty"])(function () {
      return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__["EmptyError"]();
    }));
  };
}

/***/ }),

/***/ "Sy1n":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _header_header_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./header/header.component */ "fECr");
/* harmony import */ var _footer_footer_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./footer/footer.component */ "fp1T");
/*import { Component } from '@angular/core';
import { AuthenticationService } from './services/authentication.service';

@Component({
selector: 'app-root',
templateUrl: './app.component.html',
styleUrls: ['./app.component.css']
})
export class AppComponent {
constructor(
private authenticationService:AuthenticationService
){
}

email: string;
password: string;
 
signUp() {
this.authenticationService.SignUp(this.email, this.password);
this.email = '';
this.password = '';
}

signIn() {
this.authenticationService.AuthSignIn(this.email, this.password);
this.email = '';
this.password = '';
}

signOut() {
this.authenticationService.AuthSignOut();
}

}
*/





var AppComponent = /** @class */ /*@__PURE__*/ (function () {
    function AppComponent(router) {
        this.router = router;
        this.title = 'User';
    }
    AppComponent.ɵfac = function AppComponent_Factory(t) { return new (t || AppComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"])); };
    AppComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: AppComponent, selectors: [["app-root"]], decls: 3, vars: 0, template: function AppComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "app-header");
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "router-outlet");
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "app-footer");
            }
        }, directives: [_header_header_component__WEBPACK_IMPORTED_MODULE_2__["HeaderComponent"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterOutlet"], _footer_footer_component__WEBPACK_IMPORTED_MODULE_3__["FooterComponent"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */"] });
    return AppComponent;
}());




/***/ }),

/***/ "T5bk":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/toArray.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _toArray; });
/* harmony import */ var _babel_runtime_helpers_esm_arrayWithHoles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/arrayWithHoles */ "DSFK");
/* harmony import */ var _babel_runtime_helpers_esm_iterableToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/iterableToArray */ "25BE");
/* harmony import */ var _babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/unsupportedIterableToArray */ "BsWD");
/* harmony import */ var _babel_runtime_helpers_esm_nonIterableRest__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/nonIterableRest */ "PYwp");




function _toArray(arr) {
  return Object(_babel_runtime_helpers_esm_arrayWithHoles__WEBPACK_IMPORTED_MODULE_0__["default"])(arr) || Object(_babel_runtime_helpers_esm_iterableToArray__WEBPACK_IMPORTED_MODULE_1__["default"])(arr) || Object(_babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(arr) || Object(_babel_runtime_helpers_esm_nonIterableRest__WEBPACK_IMPORTED_MODULE_3__["default"])();
}

/***/ }),

/***/ "Ttzs":
/*!****************************************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/firestore/es2015/observable/fromRef.js ***!
  \****************************************************************************************/
/*! exports provided: fromRef, fromDocRef, fromCollectionRef */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRef", function() { return fromRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromDocRef", function() { return fromDocRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromCollectionRef", function() { return fromCollectionRef; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "kU1M");



function _fromRef(ref) {
  var scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : rxjs__WEBPACK_IMPORTED_MODULE_0__["asyncScheduler"];
  return new rxjs__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    var unsubscribe;

    if (scheduler != null) {
      scheduler.schedule(function () {
        unsubscribe = ref.onSnapshot(subscriber);
      });
    } else {
      unsubscribe = ref.onSnapshot(subscriber);
    }

    return function () {
      if (unsubscribe != null) {
        unsubscribe();
      }
    };
  });
}

function fromRef(ref, scheduler) {
  return _fromRef(ref, scheduler);
}
function fromDocRef(ref, scheduler) {
  return fromRef(ref, scheduler).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (payload) {
    return {
      payload: payload,
      type: 'value'
    };
  }));
}
function fromCollectionRef(ref, scheduler) {
  return fromRef(ref, scheduler).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (payload) {
    return {
      payload: payload,
      type: 'query'
    };
  }));
}

/***/ }),

/***/ "U8pU":
/*!***********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/typeof.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _typeof; });
function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

/***/ }),

/***/ "U9AN":
/*!********************************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/firestore/es2015/public_api.js ***!
  \********************************************************************************/
/*! exports provided: EnablePersistenceToken, PersistenceSettingsToken, FirestoreSettingsToken, ENABLE_PERSISTENCE, PERSISTENCE_SETTINGS, SETTINGS, DefaultFirestoreSettings, associateQuery, AngularFirestore, AngularFirestoreModule, validateEventsArray, AngularFirestoreCollection, AngularFirestoreCollectionGroup, AngularFirestoreDocument, docChanges, sortedChanges, combineChanges, combineChange, fromRef, fromDocRef, fromCollectionRef */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./firestore */ "S/Aq");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EnablePersistenceToken", function() { return _firestore__WEBPACK_IMPORTED_MODULE_0__["EnablePersistenceToken"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PersistenceSettingsToken", function() { return _firestore__WEBPACK_IMPORTED_MODULE_0__["PersistenceSettingsToken"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FirestoreSettingsToken", function() { return _firestore__WEBPACK_IMPORTED_MODULE_0__["FirestoreSettingsToken"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ENABLE_PERSISTENCE", function() { return _firestore__WEBPACK_IMPORTED_MODULE_0__["ENABLE_PERSISTENCE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PERSISTENCE_SETTINGS", function() { return _firestore__WEBPACK_IMPORTED_MODULE_0__["PERSISTENCE_SETTINGS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SETTINGS", function() { return _firestore__WEBPACK_IMPORTED_MODULE_0__["SETTINGS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DefaultFirestoreSettings", function() { return _firestore__WEBPACK_IMPORTED_MODULE_0__["DefaultFirestoreSettings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "associateQuery", function() { return _firestore__WEBPACK_IMPORTED_MODULE_0__["associateQuery"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngularFirestore", function() { return _firestore__WEBPACK_IMPORTED_MODULE_0__["AngularFirestore"]; });

/* harmony import */ var _firestore_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./firestore.module */ "NbQQ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngularFirestoreModule", function() { return _firestore_module__WEBPACK_IMPORTED_MODULE_1__["AngularFirestoreModule"]; });

/* harmony import */ var _collection_collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./collection/collection */ "maur");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "validateEventsArray", function() { return _collection_collection__WEBPACK_IMPORTED_MODULE_2__["validateEventsArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngularFirestoreCollection", function() { return _collection_collection__WEBPACK_IMPORTED_MODULE_2__["AngularFirestoreCollection"]; });

/* harmony import */ var _collection_group_collection_group__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./collection-group/collection-group */ "ts7B");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngularFirestoreCollectionGroup", function() { return _collection_group_collection_group__WEBPACK_IMPORTED_MODULE_3__["AngularFirestoreCollectionGroup"]; });

/* harmony import */ var _document_document__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./document/document */ "VqN3");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngularFirestoreDocument", function() { return _document_document__WEBPACK_IMPORTED_MODULE_4__["AngularFirestoreDocument"]; });

/* harmony import */ var _collection_changes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./collection/changes */ "3CkQ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "docChanges", function() { return _collection_changes__WEBPACK_IMPORTED_MODULE_5__["docChanges"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedChanges", function() { return _collection_changes__WEBPACK_IMPORTED_MODULE_5__["sortedChanges"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combineChanges", function() { return _collection_changes__WEBPACK_IMPORTED_MODULE_5__["combineChanges"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combineChange", function() { return _collection_changes__WEBPACK_IMPORTED_MODULE_5__["combineChange"]; });

/* harmony import */ var _observable_fromRef__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./observable/fromRef */ "Ttzs");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromRef", function() { return _observable_fromRef__WEBPACK_IMPORTED_MODULE_6__["fromRef"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromDocRef", function() { return _observable_fromRef__WEBPACK_IMPORTED_MODULE_6__["fromDocRef"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromCollectionRef", function() { return _observable_fromRef__WEBPACK_IMPORTED_MODULE_6__["fromCollectionRef"]; });









/***/ }),

/***/ "UGaM":
/*!**************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/publishBehavior.js ***!
  \**************************************************************************/
/*! exports provided: publishBehavior */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "publishBehavior", function() { return publishBehavior; });
/* harmony import */ var _BehaviorSubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../BehaviorSubject */ "2Vo4");
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ "oB13");


function publishBehavior(value) {
  return function (source) {
    return Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(new _BehaviorSubject__WEBPACK_IMPORTED_MODULE_0__["BehaviorSubject"](value))(source);
  };
}

/***/ }),

/***/ "UHp3":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/windowTime.js ***!
  \*********************************************************************/
/*! exports provided: windowTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowTime", function() { return windowTime; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Subject */ "XNiG");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../scheduler/async */ "D0XW");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/isNumeric */ "Y7HM");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../util/isScheduler */ "z+Ro");












function windowTime(windowTimeSpan) {
  var scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_8__["async"];
  var windowCreationInterval = null;
  var maxWindowSize = Number.POSITIVE_INFINITY;

  if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_11__["isScheduler"])(arguments[3])) {
    scheduler = arguments[3];
  }

  if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_11__["isScheduler"])(arguments[2])) {
    scheduler = arguments[2];
  } else if (Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_10__["isNumeric"])(arguments[2])) {
    maxWindowSize = Number(arguments[2]);
  }

  if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_11__["isScheduler"])(arguments[1])) {
    scheduler = arguments[1];
  } else if (Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_10__["isNumeric"])(arguments[1])) {
    windowCreationInterval = Number(arguments[1]);
  }

  return function windowTimeOperatorFunction(source) {
    return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));
  };
}

var WindowTimeOperator = /*#__PURE__*/function () {
  function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, WindowTimeOperator);

    this.windowTimeSpan = windowTimeSpan;
    this.windowCreationInterval = windowCreationInterval;
    this.maxWindowSize = maxWindowSize;
    this.scheduler = scheduler;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(WindowTimeOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));
    }
  }]);

  return WindowTimeOperator;
}();

var CountedSubject = /*#__PURE__*/function (_Subject) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(CountedSubject, _Subject);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(CountedSubject);

  function CountedSubject() {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, CountedSubject);

    _this = _super.apply(this, arguments);
    _this._numberOfNextedValues = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(CountedSubject, [{
    key: "next",
    value: function next(value) {
      this._numberOfNextedValues++;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(CountedSubject.prototype), "next", this).call(this, value);
    }
  }, {
    key: "numberOfNextedValues",
    get: function get() {
      return this._numberOfNextedValues;
    }
  }]);

  return CountedSubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_7__["Subject"]);

var WindowTimeSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(WindowTimeSubscriber, _Subscriber);

  var _super2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(WindowTimeSubscriber);

  function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
    var _this2;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, WindowTimeSubscriber);

    _this2 = _super2.call(this, destination);
    _this2.destination = destination;
    _this2.windowTimeSpan = windowTimeSpan;
    _this2.windowCreationInterval = windowCreationInterval;
    _this2.maxWindowSize = maxWindowSize;
    _this2.scheduler = scheduler;
    _this2.windows = [];

    var window = _this2.openWindow();

    if (windowCreationInterval !== null && windowCreationInterval >= 0) {
      var closeState = {
        subscriber: Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this2),
        window: window,
        context: null
      };
      var creationState = {
        windowTimeSpan: windowTimeSpan,
        windowCreationInterval: windowCreationInterval,
        subscriber: Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this2),
        scheduler: scheduler
      };

      _this2.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));

      _this2.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));
    } else {
      var timeSpanOnlyState = {
        subscriber: Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this2),
        window: window,
        windowTimeSpan: windowTimeSpan
      };

      _this2.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));
    }

    return _this2;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(WindowTimeSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var windows = this.windows;
      var len = windows.length;

      for (var i = 0; i < len; i++) {
        var window = windows[i];

        if (!window.closed) {
          window.next(value);

          if (window.numberOfNextedValues >= this.maxWindowSize) {
            this.closeWindow(window);
          }
        }
      }
    }
  }, {
    key: "_error",
    value: function _error(err) {
      var windows = this.windows;

      while (windows.length > 0) {
        windows.shift().error(err);
      }

      this.destination.error(err);
    }
  }, {
    key: "_complete",
    value: function _complete() {
      var windows = this.windows;

      while (windows.length > 0) {
        var window = windows.shift();

        if (!window.closed) {
          window.complete();
        }
      }

      this.destination.complete();
    }
  }, {
    key: "openWindow",
    value: function openWindow() {
      var window = new CountedSubject();
      this.windows.push(window);
      var destination = this.destination;
      destination.next(window);
      return window;
    }
  }, {
    key: "closeWindow",
    value: function closeWindow(window) {
      window.complete();
      var windows = this.windows;
      windows.splice(windows.indexOf(window), 1);
    }
  }]);

  return WindowTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_9__["Subscriber"]);

function dispatchWindowTimeSpanOnly(state) {
  var subscriber = state.subscriber,
      windowTimeSpan = state.windowTimeSpan,
      window = state.window;

  if (window) {
    subscriber.closeWindow(window);
  }

  state.window = subscriber.openWindow();
  this.schedule(state, windowTimeSpan);
}

function dispatchWindowCreation(state) {
  var windowTimeSpan = state.windowTimeSpan,
      subscriber = state.subscriber,
      scheduler = state.scheduler,
      windowCreationInterval = state.windowCreationInterval;
  var window = subscriber.openWindow();
  var action = this;
  var context = {
    action: action,
    subscription: null
  };
  var timeSpanState = {
    subscriber: subscriber,
    window: window,
    context: context
  };
  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);
  action.add(context.subscription);
  action.schedule(state, windowCreationInterval);
}

function dispatchWindowClose(state) {
  var subscriber = state.subscriber,
      window = state.window,
      context = state.context;

  if (context && context.action && context.subscription) {
    context.action.remove(context.subscription);
  }

  subscriber.closeWindow(window);
}

/***/ }),

/***/ "UXbc":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/mergeMapTo.js ***!
  \*********************************************************************/
/*! exports provided: mergeMapTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeMapTo", function() { return mergeMapTo; });
/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeMap */ "5+tZ");

function mergeMapTo(innerObservable, resultSelector) {
  var concurrent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.POSITIVE_INFINITY;

  if (typeof resultSelector === 'function') {
    return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(function () {
      return innerObservable;
    }, resultSelector, concurrent);
  }

  if (typeof resultSelector === 'number') {
    concurrent = resultSelector;
  }

  return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(function () {
    return innerObservable;
  }, concurrent);
}

/***/ }),

/***/ "UXun":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/shareReplay.js ***!
  \**********************************************************************/
/*! exports provided: shareReplay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shareReplay", function() { return shareReplay; });
/* harmony import */ var _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ReplaySubject */ "jtHE");

function shareReplay(configOrBufferSize, windowTime, scheduler) {
  var config;

  if (configOrBufferSize && typeof configOrBufferSize === 'object') {
    config = configOrBufferSize;
  } else {
    config = {
      bufferSize: configOrBufferSize,
      windowTime: windowTime,
      refCount: false,
      scheduler: scheduler
    };
  }

  return function (source) {
    return source.lift(shareReplayOperator(config));
  };
}

function shareReplayOperator(_ref) {
  var _ref$bufferSize = _ref.bufferSize,
      bufferSize = _ref$bufferSize === void 0 ? Number.POSITIVE_INFINITY : _ref$bufferSize,
      _ref$windowTime = _ref.windowTime,
      windowTime = _ref$windowTime === void 0 ? Number.POSITIVE_INFINITY : _ref$windowTime,
      useRefCount = _ref.refCount,
      scheduler = _ref.scheduler;
  var subject;
  var refCount = 0;
  var subscription;
  var hasError = false;
  var isComplete = false;
  return function shareReplayOperation(source) {
    refCount++;
    var innerSub;

    if (!subject || hasError) {
      hasError = false;
      subject = new _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__["ReplaySubject"](bufferSize, windowTime, scheduler);
      innerSub = subject.subscribe(this);
      subscription = source.subscribe({
        next: function next(value) {
          subject.next(value);
        },
        error: function error(err) {
          hasError = true;
          subject.error(err);
        },
        complete: function complete() {
          isComplete = true;
          subscription = undefined;
          subject.complete();
        }
      });
    } else {
      innerSub = subject.subscribe(this);
    }

    this.add(function () {
      refCount--;
      innerSub.unsubscribe();

      if (subscription && !isComplete && useRefCount && refCount === 0) {
        subscription.unsubscribe();
        subscription = undefined;
        subject = undefined;
      }
    });
  };
}

/***/ }),

/***/ "VRyK":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/merge.js ***!
  \*****************************************************************/
/*! exports provided: merge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return merge; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isScheduler */ "z+Ro");
/* harmony import */ var _operators_mergeAll__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/mergeAll */ "bHdf");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fromArray */ "yCtX");




function merge() {
  var concurrent = Number.POSITIVE_INFINITY;
  var scheduler = null;

  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {
    observables[_key] = arguments[_key];
  }

  var last = observables[observables.length - 1];

  if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__["isScheduler"])(last)) {
    scheduler = observables.pop();

    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
      concurrent = observables.pop();
    }
  } else if (typeof last === 'number') {
    concurrent = observables.pop();
  }

  if (scheduler === null && observables.length === 1 && observables[0] instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"]) {
    return observables[0];
  }

  return Object(_operators_mergeAll__WEBPACK_IMPORTED_MODULE_2__["mergeAll"])(concurrent)(Object(_fromArray__WEBPACK_IMPORTED_MODULE_3__["fromArray"])(observables, scheduler));
}

/***/ }),

/***/ "Vpsf":
/*!*******************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameAction.js ***!
  \*******************************************************************************/
/*! exports provided: AnimationFrameAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimationFrameAction", function() { return AnimationFrameAction; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./AsyncAction */ "3N8a");







var AnimationFrameAction = /*#__PURE__*/function (_AsyncAction) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(AnimationFrameAction, _AsyncAction);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(AnimationFrameAction);

  function AnimationFrameAction(scheduler, work) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, AnimationFrameAction);

    _this = _super.call(this, scheduler, work);
    _this.scheduler = scheduler;
    _this.work = work;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(AnimationFrameAction, [{
    key: "requestAsyncId",
    value: function requestAsyncId(scheduler, id) {
      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

      if (delay !== null && delay > 0) {
        return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(AnimationFrameAction.prototype), "requestAsyncId", this).call(this, scheduler, id, delay);
      }

      scheduler.actions.push(this);
      return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () {
        return scheduler.flush(null);
      }));
    }
  }, {
    key: "recycleAsyncId",
    value: function recycleAsyncId(scheduler, id) {
      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

      if (delay !== null && delay > 0 || delay === null && this.delay > 0) {
        return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(AnimationFrameAction.prototype), "recycleAsyncId", this).call(this, scheduler, id, delay);
      }

      if (scheduler.actions.length === 0) {
        cancelAnimationFrame(id);
        scheduler.scheduled = undefined;
      }

      return undefined;
    }
  }]);

  return AnimationFrameAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_6__["AsyncAction"]);

/***/ }),

/***/ "VqN3":
/*!***************************************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/firestore/es2015/document/document.js ***!
  \***************************************************************************************/
/*! exports provided: AngularFirestoreDocument */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AngularFirestoreDocument", function() { return AngularFirestoreDocument; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var _observable_fromRef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../observable/fromRef */ "Ttzs");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _firestore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../firestore */ "S/Aq");
/* harmony import */ var _collection_collection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../collection/collection */ "maur");







var AngularFirestoreDocument = /*#__PURE__*/function () {
  function AngularFirestoreDocument(ref, afs) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, AngularFirestoreDocument);

    this.ref = ref;
    this.afs = afs;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(AngularFirestoreDocument, [{
    key: "set",
    value: function set(data, options) {
      return this.ref.set(data, options);
    }
  }, {
    key: "update",
    value: function update(data) {
      return this.ref.update(data);
    }
  }, {
    key: "delete",
    value: function _delete() {
      return this.ref.delete();
    }
  }, {
    key: "collection",
    value: function collection(path, queryFn) {
      var collectionRef = this.ref.collection(path);

      var _associateQuery = Object(_firestore__WEBPACK_IMPORTED_MODULE_5__["associateQuery"])(collectionRef, queryFn),
          ref = _associateQuery.ref,
          query = _associateQuery.query;

      return new _collection_collection__WEBPACK_IMPORTED_MODULE_6__["AngularFirestoreCollection"](ref, query, this.afs);
    }
  }, {
    key: "snapshotChanges",
    value: function snapshotChanges() {
      var scheduledFromDocRef$ = Object(_observable_fromRef__WEBPACK_IMPORTED_MODULE_3__["fromDocRef"])(this.ref, this.afs.schedulers.outsideAngular);
      return scheduledFromDocRef$.pipe(this.afs.keepUnstableUntilFirst);
    }
  }, {
    key: "valueChanges",
    value: function valueChanges() {
      return this.snapshotChanges().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (action) {
        return action.payload.data();
      }));
    }
  }, {
    key: "get",
    value: function get(options) {
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(this.ref.get(options)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["observeOn"])(this.afs.schedulers.insideAngular));
    }
  }]);

  return AngularFirestoreDocument;
}();

/***/ }),

/***/ "WMd4":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/Notification.js ***!
  \*************************************************************/
/*! exports provided: NotificationKind, Notification */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationKind", function() { return NotificationKind; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Notification", function() { return Notification; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./observable/empty */ "EY2u");
/* harmony import */ var _observable_of__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./observable/of */ "LRne");
/* harmony import */ var _observable_throwError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./observable/throwError */ "z6cu");





var NotificationKind = /*@__PURE__*/function (NotificationKind) {
  NotificationKind["NEXT"] = "N";
  NotificationKind["ERROR"] = "E";
  NotificationKind["COMPLETE"] = "C";
  return NotificationKind;
}({});
var Notification = /*@__PURE__*/function () {
  var Notification = /*#__PURE__*/function () {
    function Notification(kind, value, error) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Notification);

      this.kind = kind;
      this.value = value;
      this.error = error;
      this.hasValue = kind === 'N';
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Notification, [{
      key: "observe",
      value: function observe(observer) {
        switch (this.kind) {
          case 'N':
            return observer.next && observer.next(this.value);

          case 'E':
            return observer.error && observer.error(this.error);

          case 'C':
            return observer.complete && observer.complete();
        }
      }
    }, {
      key: "do",
      value: function _do(next, error, complete) {
        var kind = this.kind;

        switch (kind) {
          case 'N':
            return next && next(this.value);

          case 'E':
            return error && error(this.error);

          case 'C':
            return complete && complete();
        }
      }
    }, {
      key: "accept",
      value: function accept(nextOrObserver, error, complete) {
        if (nextOrObserver && typeof nextOrObserver.next === 'function') {
          return this.observe(nextOrObserver);
        } else {
          return this.do(nextOrObserver, error, complete);
        }
      }
    }, {
      key: "toObservable",
      value: function toObservable() {
        var kind = this.kind;

        switch (kind) {
          case 'N':
            return Object(_observable_of__WEBPACK_IMPORTED_MODULE_3__["of"])(this.value);

          case 'E':
            return Object(_observable_throwError__WEBPACK_IMPORTED_MODULE_4__["throwError"])(this.error);

          case 'C':
            return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_2__["empty"])();
        }

        throw new Error('unexpected notification kind value');
      }
    }], [{
      key: "createNext",
      value: function createNext(value) {
        if (typeof value !== 'undefined') {
          return new Notification('N', value);
        }

        return Notification.undefinedValueNotification;
      }
    }, {
      key: "createError",
      value: function createError(err) {
        return new Notification('E', undefined, err);
      }
    }, {
      key: "createComplete",
      value: function createComplete() {
        return Notification.completeNotification;
      }
    }]);

    return Notification;
  }();

  Notification.completeNotification = /*@__PURE__*/new Notification('C');
  Notification.undefinedValueNotification = /*@__PURE__*/new Notification('N', undefined);
  return Notification;
}();

/***/ }),

/***/ "WPMC":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/generate.js ***!
  \********************************************************************/
/*! exports provided: generate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generate", function() { return generate; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/identity */ "SpAZ");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isScheduler */ "z+Ro");



function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {
  var resultSelector;
  var initialState;

  if (arguments.length == 1) {
    var options = initialStateOrOptions;
    initialState = options.initialState;
    condition = options.condition;
    iterate = options.iterate;
    resultSelector = options.resultSelector || _util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"];
    scheduler = options.scheduler;
  } else if (resultSelectorOrObservable === undefined || Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_2__["isScheduler"])(resultSelectorOrObservable)) {
    initialState = initialStateOrOptions;
    resultSelector = _util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"];
    scheduler = resultSelectorOrObservable;
  } else {
    initialState = initialStateOrOptions;
    resultSelector = resultSelectorOrObservable;
  }

  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    var state = initialState;

    if (scheduler) {
      return scheduler.schedule(dispatch, 0, {
        subscriber: subscriber,
        iterate: iterate,
        condition: condition,
        resultSelector: resultSelector,
        state: state
      });
    }

    do {
      if (condition) {
        var conditionResult = void 0;

        try {
          conditionResult = condition(state);
        } catch (err) {
          subscriber.error(err);
          return undefined;
        }

        if (!conditionResult) {
          subscriber.complete();
          break;
        }
      }

      var value = void 0;

      try {
        value = resultSelector(state);
      } catch (err) {
        subscriber.error(err);
        return undefined;
      }

      subscriber.next(value);

      if (subscriber.closed) {
        break;
      }

      try {
        state = iterate(state);
      } catch (err) {
        subscriber.error(err);
        return undefined;
      }
    } while (true);

    return undefined;
  });
}

function dispatch(state) {
  var subscriber = state.subscriber,
      condition = state.condition;

  if (subscriber.closed) {
    return undefined;
  }

  if (state.needIterate) {
    try {
      state.state = state.iterate(state.state);
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }
  } else {
    state.needIterate = true;
  }

  if (condition) {
    var conditionResult;

    try {
      conditionResult = condition(state.state);
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }

    if (!conditionResult) {
      subscriber.complete();
      return undefined;
    }

    if (subscriber.closed) {
      return undefined;
    }
  }

  var value;

  try {
    value = state.resultSelector(state.state);
  } catch (err) {
    subscriber.error(err);
    return undefined;
  }

  if (subscriber.closed) {
    return undefined;
  }

  subscriber.next(value);

  if (subscriber.closed) {
    return undefined;
  }

  return this.schedule(state);
}

/***/ }),

/***/ "Wcq6":
/*!*****************************************************!*\
  !*** ./node_modules/firebase/app/dist/index.cjs.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var firebase = __webpack_require__(/*! @firebase/app */ "wj3C");

function _interopDefaultLegacy(e) {
  return e && typeof e === 'object' && 'default' in e ? e : {
    'default': e
  };
}

var firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);

var name = "firebase";
var version = "7.24.0";
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

firebase__default['default'].registerVersion(name, version, 'app');
module.exports = firebase__default['default'];

/***/ }),

/***/ "WyKG":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/toSubscriber.js ***!
  \******************************************************************/
/*! exports provided: toSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toSubscriber", function() { return toSubscriber; });
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../symbol/rxSubscriber */ "2QA8");
/* harmony import */ var _Observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observer */ "gRHU");



function toSubscriber(nextOrObserver, error, complete) {
  if (nextOrObserver) {
    if (nextOrObserver instanceof _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"]) {
      return nextOrObserver;
    }

    if (nextOrObserver[_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__["rxSubscriber"]]) {
      return nextOrObserver[_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__["rxSubscriber"]]();
    }
  }

  if (!nextOrObserver && !error && !complete) {
    return new _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"](_Observer__WEBPACK_IMPORTED_MODULE_2__["empty"]);
  }

  return new _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"](nextOrObserver, error, complete);
}

/***/ }),

/***/ "XDbj":
/*!***********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/throwIfEmpty.js ***!
  \***********************************************************************/
/*! exports provided: throwIfEmpty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throwIfEmpty", function() { return throwIfEmpty; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/EmptyError */ "sVev");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");






function throwIfEmpty() {
  var errorFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultErrorFactory;
  return function (source) {
    return source.lift(new ThrowIfEmptyOperator(errorFactory));
  };
}

var ThrowIfEmptyOperator = /*#__PURE__*/function () {
  function ThrowIfEmptyOperator(errorFactory) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ThrowIfEmptyOperator);

    this.errorFactory = errorFactory;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ThrowIfEmptyOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));
    }
  }]);

  return ThrowIfEmptyOperator;
}();

var ThrowIfEmptySubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(ThrowIfEmptySubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(ThrowIfEmptySubscriber);

  function ThrowIfEmptySubscriber(destination, errorFactory) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ThrowIfEmptySubscriber);

    _this = _super.call(this, destination);
    _this.errorFactory = errorFactory;
    _this.hasValue = false;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ThrowIfEmptySubscriber, [{
    key: "_next",
    value: function _next(value) {
      this.hasValue = true;
      this.destination.next(value);
    }
  }, {
    key: "_complete",
    value: function _complete() {
      if (!this.hasValue) {
        var err;

        try {
          err = this.errorFactory();
        } catch (e) {
          err = e;
        }

        this.destination.error(err);
      } else {
        return this.destination.complete();
      }
    }
  }]);

  return ThrowIfEmptySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_5__["Subscriber"]);

function defaultErrorFactory() {
  return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_4__["EmptyError"]();
}

/***/ }),

/***/ "XNiG":
/*!********************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/Subject.js ***!
  \********************************************************/
/*! exports provided: SubjectSubscriber, Subject, AnonymousSubject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubjectSubscriber", function() { return SubjectSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subject", function() { return Subject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnonymousSubject", function() { return AnonymousSubject; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Observable */ "HDdC");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Subscriber */ "7o/Q");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Subscription */ "quSY");
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ "9ppp");
/* harmony import */ var _SubjectSubscription__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./SubjectSubscription */ "Ylt2");
/* harmony import */ var _internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../internal/symbol/rxSubscriber */ "2QA8");












var SubjectSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(SubjectSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(SubjectSubscriber);

  function SubjectSubscriber(destination) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, SubjectSubscriber);

    _this = _super.call(this, destination);
    _this.destination = destination;
    return _this;
  }

  return SubjectSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_7__["Subscriber"]);
var Subject = /*@__PURE__*/function () {
  var Subject = /*#__PURE__*/function (_Observable) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(Subject, _Observable);

    var _super2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(Subject);

    function Subject() {
      var _this2;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, Subject);

      _this2 = _super2.call(this);
      _this2.observers = [];
      _this2.closed = false;
      _this2.isStopped = false;
      _this2.hasError = false;
      _this2.thrownError = null;
      return _this2;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(Subject, [{
      key: _internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_11__["rxSubscriber"],
      value: function value() {
        return new SubjectSubscriber(this);
      }
    }, {
      key: "lift",
      value: function lift(operator) {
        var subject = new AnonymousSubject(this, this);
        subject.operator = operator;
        return subject;
      }
    }, {
      key: "next",
      value: function next(value) {
        if (this.closed) {
          throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_9__["ObjectUnsubscribedError"]();
        }

        if (!this.isStopped) {
          var observers = this.observers;
          var len = observers.length;
          var copy = observers.slice();

          for (var i = 0; i < len; i++) {
            copy[i].next(value);
          }
        }
      }
    }, {
      key: "error",
      value: function error(err) {
        if (this.closed) {
          throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_9__["ObjectUnsubscribedError"]();
        }

        this.hasError = true;
        this.thrownError = err;
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();

        for (var i = 0; i < len; i++) {
          copy[i].error(err);
        }

        this.observers.length = 0;
      }
    }, {
      key: "complete",
      value: function complete() {
        if (this.closed) {
          throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_9__["ObjectUnsubscribedError"]();
        }

        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();

        for (var i = 0; i < len; i++) {
          copy[i].complete();
        }

        this.observers.length = 0;
      }
    }, {
      key: "unsubscribe",
      value: function unsubscribe() {
        this.isStopped = true;
        this.closed = true;
        this.observers = null;
      }
    }, {
      key: "_trySubscribe",
      value: function _trySubscribe(subscriber) {
        if (this.closed) {
          throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_9__["ObjectUnsubscribedError"]();
        } else {
          return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(Subject.prototype), "_trySubscribe", this).call(this, subscriber);
        }
      }
    }, {
      key: "_subscribe",
      value: function _subscribe(subscriber) {
        if (this.closed) {
          throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_9__["ObjectUnsubscribedError"]();
        } else if (this.hasError) {
          subscriber.error(this.thrownError);
          return _Subscription__WEBPACK_IMPORTED_MODULE_8__["Subscription"].EMPTY;
        } else if (this.isStopped) {
          subscriber.complete();
          return _Subscription__WEBPACK_IMPORTED_MODULE_8__["Subscription"].EMPTY;
        } else {
          this.observers.push(subscriber);
          return new _SubjectSubscription__WEBPACK_IMPORTED_MODULE_10__["SubjectSubscription"](this, subscriber);
        }
      }
    }, {
      key: "asObservable",
      value: function asObservable() {
        var observable = new _Observable__WEBPACK_IMPORTED_MODULE_6__["Observable"]();
        observable.source = this;
        return observable;
      }
    }]);

    return Subject;
  }(_Observable__WEBPACK_IMPORTED_MODULE_6__["Observable"]);

  Subject.create = function (destination, source) {
    return new AnonymousSubject(destination, source);
  };

  return Subject;
}();
var AnonymousSubject = /*#__PURE__*/function (_Subject) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(AnonymousSubject, _Subject);

  var _super3 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(AnonymousSubject);

  function AnonymousSubject(destination, source) {
    var _this3;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, AnonymousSubject);

    _this3 = _super3.call(this);
    _this3.destination = destination;
    _this3.source = source;
    return _this3;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(AnonymousSubject, [{
    key: "next",
    value: function next(value) {
      var destination = this.destination;

      if (destination && destination.next) {
        destination.next(value);
      }
    }
  }, {
    key: "error",
    value: function error(err) {
      var destination = this.destination;

      if (destination && destination.error) {
        this.destination.error(err);
      }
    }
  }, {
    key: "complete",
    value: function complete() {
      var destination = this.destination;

      if (destination && destination.complete) {
        this.destination.complete();
      }
    }
  }, {
    key: "_subscribe",
    value: function _subscribe(subscriber) {
      var source = this.source;

      if (source) {
        return this.source.subscribe(subscriber);
      } else {
        return _Subscription__WEBPACK_IMPORTED_MODULE_8__["Subscription"].EMPTY;
      }
    }
  }]);

  return AnonymousSubject;
}(Subject);

/***/ }),

/***/ "XTTE":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/superPropBase.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _superPropBase; });
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "foSv");

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_0__["default"])(object);
    if (object === null) break;
  }

  return object;
}

/***/ }),

/***/ "XU1U":
/*!************************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/es2015/angularfire2.js ***!
  \************************************************************************/
/*! exports provided: RealtimeDatabaseURL, DATABASE_URL, ɵZoneScheduler, ɵBlockUntilFirstOperator, ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, runOutsideAngular, runInZone, FirebaseZoneScheduler, ɵlazySDKProxy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RealtimeDatabaseURL", function() { return RealtimeDatabaseURL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DATABASE_URL", function() { return DATABASE_URL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵZoneScheduler", function() { return ɵZoneScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵBlockUntilFirstOperator", function() { return ɵBlockUntilFirstOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵAngularFireSchedulers", function() { return ɵAngularFireSchedulers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵkeepUnstableUntilFirstFactory", function() { return ɵkeepUnstableUntilFirstFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "runOutsideAngular", function() { return runOutsideAngular; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "runInZone", function() { return runInZone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FirebaseZoneScheduler", function() { return FirebaseZoneScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵlazySDKProxy", function() { return ɵlazySDKProxy; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ "kU1M");







var RealtimeDatabaseURL = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["InjectionToken"]('angularfire2.realtimeDatabaseURL');
var DATABASE_URL = RealtimeDatabaseURL;

function noop() {}

var ɵZoneScheduler = /*#__PURE__*/function () {
  function ɵZoneScheduler(zone) {
    var delegate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : rxjs__WEBPACK_IMPORTED_MODULE_5__["queueScheduler"];

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, ɵZoneScheduler);

    this.zone = zone;
    this.delegate = delegate;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(ɵZoneScheduler, [{
    key: "now",
    value: function now() {
      return this.delegate.now();
    }
  }, {
    key: "schedule",
    value: function schedule(work, delay, state) {
      var targetZone = this.zone;

      var workInZone = function workInZone(state) {
        var _this = this;

        targetZone.runGuarded(function () {
          work.apply(_this, [state]);
        });
      };

      return this.delegate.schedule(workInZone, delay, state);
    }
  }]);

  return ɵZoneScheduler;
}();
var ɵBlockUntilFirstOperator = /*#__PURE__*/function () {
  function ɵBlockUntilFirstOperator(zone) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, ɵBlockUntilFirstOperator);

    this.zone = zone;
    this.task = null;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(ɵBlockUntilFirstOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      var unscheduleTask = this.unscheduleTask.bind(this);
      this.task = this.zone.run(function () {
        return Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop);
      });
      return source.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["tap"])(unscheduleTask, unscheduleTask, unscheduleTask)).subscribe(subscriber).add(unscheduleTask);
    }
  }, {
    key: "unscheduleTask",
    value: function unscheduleTask() {
      if (this.task != null && this.task.state === 'scheduled') {
        this.task.invoke();
        this.task = null;
      }
    }
  }]);

  return ɵBlockUntilFirstOperator;
}();
var ɵAngularFireSchedulers = function ɵAngularFireSchedulers(ngZone) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, ɵAngularFireSchedulers);

  this.ngZone = ngZone;
  this.outsideAngular = ngZone.runOutsideAngular(function () {
    return new ɵZoneScheduler(Zone.current);
  });
  this.insideAngular = ngZone.run(function () {
    return new ɵZoneScheduler(Zone.current, rxjs__WEBPACK_IMPORTED_MODULE_5__["asyncScheduler"]);
  });
};
function ɵkeepUnstableUntilFirstFactory(schedulers, platformId) {
  return function keepUnstableUntilFirst(obs$) {
    if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_4__["isPlatformServer"])(platformId)) {
      obs$ = obs$.lift(new ɵBlockUntilFirstOperator(schedulers.ngZone));
    }

    return obs$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["subscribeOn"])(schedulers.outsideAngular), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["observeOn"])(schedulers.insideAngular));
  };
}
var runOutsideAngular = function runOutsideAngular(zone) {
  return function (obs$) {
    return new rxjs__WEBPACK_IMPORTED_MODULE_5__["Observable"](function (subscriber) {
      return zone.runOutsideAngular(function () {
        runInZone(zone)(obs$).subscribe(subscriber);
      });
    });
  };
};
var runInZone = function runInZone(zone) {
  return function (obs$) {
    return new rxjs__WEBPACK_IMPORTED_MODULE_5__["Observable"](function (subscriber) {
      return obs$.subscribe(function (value) {
        return zone.run(function () {
          return subscriber.next(value);
        });
      }, function (error) {
        return zone.run(function () {
          return subscriber.error(error);
        });
      }, function () {
        return zone.run(function () {
          return subscriber.complete();
        });
      });
    });
  };
};
var FirebaseZoneScheduler = /*#__PURE__*/function () {
  function FirebaseZoneScheduler(zone, platformId) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, FirebaseZoneScheduler);

    this.zone = zone;
    this.platformId = platformId;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(FirebaseZoneScheduler, [{
    key: "schedule",
    value: function schedule() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return this.zone.runGuarded(function () {
        return rxjs__WEBPACK_IMPORTED_MODULE_5__["queueScheduler"].schedule.apply(rxjs__WEBPACK_IMPORTED_MODULE_5__["queueScheduler"], args);
      });
    }
  }, {
    key: "keepUnstableUntilFirst",
    value: function keepUnstableUntilFirst(obs$) {
      if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_4__["isPlatformServer"])(this.platformId)) {
        return new rxjs__WEBPACK_IMPORTED_MODULE_5__["Observable"](function (subscriber) {
          var noop = function noop() {};

          var task = Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop);
          obs$.subscribe(function (next) {
            if (task.state === 'scheduled') {
              task.invoke();
            }

            ;
            subscriber.next(next);
          }, function (error) {
            if (task.state === 'scheduled') {
              task.invoke();
            }

            subscriber.error(error);
          }, function () {
            if (task.state === 'scheduled') {
              task.invoke();
            }

            subscriber.complete();
          });
        });
      } else {
        return obs$;
      }
    }
  }, {
    key: "runOutsideAngular",
    value: function runOutsideAngular(obs$) {
      var _this2 = this;

      return new rxjs__WEBPACK_IMPORTED_MODULE_5__["Observable"](function (subscriber) {
        return _this2.zone.runOutsideAngular(function () {
          return obs$.subscribe(function (value) {
            return _this2.zone.run(function () {
              return subscriber.next(value);
            });
          }, function (error) {
            return _this2.zone.run(function () {
              return subscriber.error(error);
            });
          }, function () {
            return _this2.zone.run(function () {
              return subscriber.complete();
            });
          });
        });
      });
    }
  }]);

  return FirebaseZoneScheduler;
}();
var noopFunctions = ['ngOnDestroy'];
var ɵlazySDKProxy = function ɵlazySDKProxy(klass, observable, zone) {
  return new Proxy(klass, {
    get: function get(_, name) {
      return zone.runOutsideAngular(function () {
        if (klass[name]) {
          return klass[name];
        }

        if (noopFunctions.includes(name)) {
          return function () {};
        }

        var promise = observable.toPromise().then(function (mod) {
          var ret = mod && mod[name];

          if (typeof ret == 'function') {
            return ret.bind(mod);
          } else if (ret && ret.then) {
            return ret.then(function (res) {
              return zone.run(function () {
                return res;
              });
            });
          } else {
            return zone.run(function () {
              return ret;
            });
          }
        });
        return new Proxy(function () {
          return undefined;
        }, {
          get: function get(_, name) {
            return promise[name];
          },
          apply: function apply(self, _, args) {
            return promise.then(function (it) {
              return it && it.apply(void 0, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(args));
            });
          }
        });
      });
    }
  });
};

/***/ }),

/***/ "XoHu":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/isObject.js ***!
  \**************************************************************/
/*! exports provided: isObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return isObject; });
function isObject(x) {
  return x !== null && typeof x === 'object';
}

/***/ }),

/***/ "XqQ8":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/exhaustMap.js ***!
  \*********************************************************************/
/*! exports provided: exhaustMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exhaustMap", function() { return exhaustMap; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./map */ "lJxs");
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../observable/from */ "Cfvw");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");







function exhaustMap(project, resultSelector) {
  if (resultSelector) {
    return function (source) {
      return source.pipe(exhaustMap(function (a, i) {
        return Object(_observable_from__WEBPACK_IMPORTED_MODULE_5__["from"])(project(a, i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_4__["map"])(function (b, ii) {
          return resultSelector(a, b, i, ii);
        }));
      }));
    };
  }

  return function (source) {
    return source.lift(new ExhaustMapOperator(project));
  };
}

var ExhaustMapOperator = /*#__PURE__*/function () {
  function ExhaustMapOperator(project) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ExhaustMapOperator);

    this.project = project;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ExhaustMapOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));
    }
  }]);

  return ExhaustMapOperator;
}();

var ExhaustMapSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(ExhaustMapSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(ExhaustMapSubscriber);

  function ExhaustMapSubscriber(destination, project) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ExhaustMapSubscriber);

    _this = _super.call(this, destination);
    _this.project = project;
    _this.hasSubscription = false;
    _this.hasCompleted = false;
    _this.index = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ExhaustMapSubscriber, [{
    key: "_next",
    value: function _next(value) {
      if (!this.hasSubscription) {
        this.tryNext(value);
      }
    }
  }, {
    key: "tryNext",
    value: function tryNext(value) {
      var result;
      var index = this.index++;

      try {
        result = this.project(value, index);
      } catch (err) {
        this.destination.error(err);
        return;
      }

      this.hasSubscription = true;

      this._innerSub(result);
    }
  }, {
    key: "_innerSub",
    value: function _innerSub(result) {
      var innerSubscriber = new _innerSubscribe__WEBPACK_IMPORTED_MODULE_6__["SimpleInnerSubscriber"](this);
      var destination = this.destination;
      destination.add(innerSubscriber);
      var innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_6__["innerSubscribe"])(result, innerSubscriber);

      if (innerSubscription !== innerSubscriber) {
        destination.add(innerSubscription);
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.hasCompleted = true;

      if (!this.hasSubscription) {
        this.destination.complete();
      }

      this.unsubscribe();
    }
  }, {
    key: "notifyNext",
    value: function notifyNext(innerValue) {
      this.destination.next(innerValue);
    }
  }, {
    key: "notifyError",
    value: function notifyError(err) {
      this.destination.error(err);
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {
      this.hasSubscription = false;

      if (this.hasCompleted) {
        this.destination.complete();
      }
    }
  }]);

  return ExhaustMapSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_6__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "Y/cZ":
/*!**********************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/Scheduler.js ***!
  \**********************************************************/
/*! exports provided: Scheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scheduler", function() { return Scheduler; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");


var Scheduler = /*@__PURE__*/function () {
  var Scheduler = /*#__PURE__*/function () {
    function Scheduler(SchedulerAction) {
      var now = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Scheduler.now;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Scheduler);

      this.SchedulerAction = SchedulerAction;
      this.now = now;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Scheduler, [{
      key: "schedule",
      value: function schedule(work) {
        var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var state = arguments.length > 2 ? arguments[2] : undefined;
        return new this.SchedulerAction(this, work).schedule(state, delay);
      }
    }]);

    return Scheduler;
  }();

  Scheduler.now = function () {
    return Date.now();
  };

  return Scheduler;
}();

/***/ }),

/***/ "Y6u4":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/TimeoutError.js ***!
  \******************************************************************/
/*! exports provided: TimeoutError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeoutError", function() { return TimeoutError; });
var TimeoutErrorImpl = /*@__PURE__*/function () {
  function TimeoutErrorImpl() {
    Error.call(this);
    this.message = 'Timeout has occurred';
    this.name = 'TimeoutError';
    return this;
  }

  TimeoutErrorImpl.prototype = Object.create(Error.prototype);
  return TimeoutErrorImpl;
}();

var TimeoutError = TimeoutErrorImpl;

/***/ }),

/***/ "Y6wi":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/switchAll.js ***!
  \********************************************************************/
/*! exports provided: switchAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "switchAll", function() { return switchAll; });
/* harmony import */ var _switchMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./switchMap */ "eIep");
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/identity */ "SpAZ");


function switchAll() {
  return Object(_switchMap__WEBPACK_IMPORTED_MODULE_0__["switchMap"])(_util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"]);
}

/***/ }),

/***/ "Y7HM":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/isNumeric.js ***!
  \***************************************************************/
/*! exports provided: isNumeric */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumeric", function() { return isNumeric; });
/* harmony import */ var _isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArray */ "DH7j");

function isNumeric(val) {
  return !Object(_isArray__WEBPACK_IMPORTED_MODULE_0__["isArray"])(val) && val - parseFloat(val) + 1 >= 0;
}

/***/ }),

/***/ "YAWx":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _arrayWithoutHoles; });
/* harmony import */ var _babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/arrayLikeToArray */ "a3WO");

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return Object(_babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(arr);
}

/***/ }),

/***/ "Yj9t":
/*!*************************************!*\
  !*** ./src/app/auth/auth.module.ts ***!
  \*************************************/
/*! exports provided: AuthModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthModule", function() { return AuthModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _auth_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./auth-routing.module */ "6epW");
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./login/login.component */ "bsvf");







var AuthModule = /** @class */ /*@__PURE__*/ (function () {
    function AuthModule() {
    }
    AuthModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: AuthModule });
    AuthModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function AuthModule_Factory(t) { return new (t || AuthModule)(); }, imports: [[
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ReactiveFormsModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"],
                _auth_routing_module__WEBPACK_IMPORTED_MODULE_3__["AuthRoutingModule"]
            ]] });
    return AuthModule;
}());

(function () {
    (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](AuthModule, { declarations: [_login_login_component__WEBPACK_IMPORTED_MODULE_4__["LoginComponent"]], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ReactiveFormsModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"],
            _auth_routing_module__WEBPACK_IMPORTED_MODULE_3__["AuthRoutingModule"]] });
})();



/***/ }),

/***/ "Ylt2":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/SubjectSubscription.js ***!
  \********************************************************************/
/*! exports provided: SubjectSubscription */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubjectSubscription", function() { return SubjectSubscription; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Subscription */ "quSY");





var SubjectSubscription = /*#__PURE__*/function (_Subscription) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(SubjectSubscription, _Subscription);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(SubjectSubscription);

  function SubjectSubscription(subject, subscriber) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, SubjectSubscription);

    _this = _super.call(this);
    _this.subject = subject;
    _this.subscriber = subscriber;
    _this.closed = false;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(SubjectSubscription, [{
    key: "unsubscribe",
    value: function unsubscribe() {
      if (this.closed) {
        return;
      }

      this.closed = true;
      var subject = this.subject;
      var observers = subject.observers;
      this.subject = null;

      if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
        return;
      }

      var subscriberIndex = observers.indexOf(this.subscriber);

      if (subscriberIndex !== -1) {
        observers.splice(subscriberIndex, 1);
      }
    }
  }]);

  return SubjectSubscription;
}(_Subscription__WEBPACK_IMPORTED_MODULE_4__["Subscription"]);

/***/ }),

/***/ "YuR2":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduler/QueueAction.js ***!
  \**********************************************************************/
/*! exports provided: QueueAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueueAction", function() { return QueueAction; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./AsyncAction */ "3N8a");







var QueueAction = /*#__PURE__*/function (_AsyncAction) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(QueueAction, _AsyncAction);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(QueueAction);

  function QueueAction(scheduler, work) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, QueueAction);

    _this = _super.call(this, scheduler, work);
    _this.scheduler = scheduler;
    _this.work = work;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(QueueAction, [{
    key: "schedule",
    value: function schedule(state) {
      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      if (delay > 0) {
        return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(QueueAction.prototype), "schedule", this).call(this, state, delay);
      }

      this.delay = delay;
      this.state = state;
      this.scheduler.flush(this);
      return this;
    }
  }, {
    key: "execute",
    value: function execute(state, delay) {
      return delay > 0 || this.closed ? Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(QueueAction.prototype), "execute", this).call(this, state, delay) : this._execute(state, delay);
    }
  }, {
    key: "requestAsyncId",
    value: function requestAsyncId(scheduler, id) {
      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

      if (delay !== null && delay > 0 || delay === null && this.delay > 0) {
        return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(QueueAction.prototype), "requestAsyncId", this).call(this, scheduler, id, delay);
      }

      return scheduler.flush(this);
    }
  }]);

  return QueueAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_6__["AsyncAction"]);

/***/ }),

/***/ "ZAI4":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/platform-browser */ "jhN1");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app-routing.module */ "vY5A");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app.component */ "Sy1n");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_fire__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/fire */ "05qF");
/* harmony import */ var _angular_fire_auth__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/fire/auth */ "KDZV");
/* harmony import */ var _angular_fire_firestore__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/fire/firestore */ "mrps");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../environments/environment */ "AytR");
/* harmony import */ var _services_auth_authentication_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./services/auth/authentication.service */ "JVRy");
/* harmony import */ var _services_firebase_firebase_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./services/firebase/firebase.service */ "qnoD");
/* harmony import */ var _header_header_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./header/header.component */ "fECr");
/* harmony import */ var _footer_footer_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./footer/footer.component */ "fp1T");
/* harmony import */ var _admin_admin_module__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./admin/admin.module */ "jkDv");
/* harmony import */ var _auth_auth_module__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./auth/auth.module */ "Yj9t");









/* Auth service */








var AppModule = /** @class */ /*@__PURE__*/ (function () {
    function AppModule() {
    }
    AppModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({ type: AppModule, bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_3__["AppComponent"]] });
    AppModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({ factory: function AppModule_Factory(t) { return new (t || AppModule)(); }, providers: [_services_auth_authentication_service__WEBPACK_IMPORTED_MODULE_9__["AuthenticationService"], _services_firebase_firebase_service__WEBPACK_IMPORTED_MODULE_10__["FirebaseService"]], imports: [[
                _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__["BrowserModule"],
                _admin_admin_module__WEBPACK_IMPORTED_MODULE_13__["AdminModule"],
                _auth_auth_module__WEBPACK_IMPORTED_MODULE_14__["AuthModule"],
                _app_routing_module__WEBPACK_IMPORTED_MODULE_2__["AppRoutingModule"],
                _angular_fire_auth__WEBPACK_IMPORTED_MODULE_6__["AngularFireAuthModule"],
                _angular_fire__WEBPACK_IMPORTED_MODULE_5__["AngularFireModule"].initializeApp(_environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].firebaseConfig),
                _angular_fire_firestore__WEBPACK_IMPORTED_MODULE_7__["AngularFirestoreModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"]
            ]] });
    return AppModule;
}());

(function () {
    (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](AppModule, { declarations: [_app_component__WEBPACK_IMPORTED_MODULE_3__["AppComponent"],
            _header_header_component__WEBPACK_IMPORTED_MODULE_11__["HeaderComponent"],
            _footer_footer_component__WEBPACK_IMPORTED_MODULE_12__["FooterComponent"]], imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__["BrowserModule"],
            _admin_admin_module__WEBPACK_IMPORTED_MODULE_13__["AdminModule"],
            _auth_auth_module__WEBPACK_IMPORTED_MODULE_14__["AuthModule"],
            _app_routing_module__WEBPACK_IMPORTED_MODULE_2__["AppRoutingModule"],
            _angular_fire_auth__WEBPACK_IMPORTED_MODULE_6__["AngularFireAuthModule"], _angular_fire__WEBPACK_IMPORTED_MODULE_5__["AngularFireModule"], _angular_fire_firestore__WEBPACK_IMPORTED_MODULE_7__["AngularFirestoreModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"]] });
})();



/***/ }),

/***/ "ZUHj":
/*!***********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/subscribeToResult.js ***!
  \***********************************************************************/
/*! exports provided: subscribeToResult */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToResult", function() { return subscribeToResult; });
/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../InnerSubscriber */ "51Dv");
/* harmony import */ var _subscribeTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./subscribeTo */ "SeVD");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observable */ "HDdC");



function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {
  var innerSubscriber = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_0__["InnerSubscriber"](outerSubscriber, outerValue, outerIndex);

  if (innerSubscriber.closed) {
    return undefined;
  }

  if (result instanceof _Observable__WEBPACK_IMPORTED_MODULE_2__["Observable"]) {
    return result.subscribe(innerSubscriber);
  }

  return Object(_subscribeTo__WEBPACK_IMPORTED_MODULE_1__["subscribeTo"])(result)(innerSubscriber);
}

/***/ }),

/***/ "Zy1z":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/pairwise.js ***!
  \*******************************************************************/
/*! exports provided: pairwise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pairwise", function() { return pairwise; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");





function pairwise() {
  return function (source) {
    return source.lift(new PairwiseOperator());
  };
}

var PairwiseOperator = /*#__PURE__*/function () {
  function PairwiseOperator() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, PairwiseOperator);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(PairwiseOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new PairwiseSubscriber(subscriber));
    }
  }]);

  return PairwiseOperator;
}();

var PairwiseSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(PairwiseSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(PairwiseSubscriber);

  function PairwiseSubscriber(destination) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, PairwiseSubscriber);

    _this = _super.call(this, destination);
    _this.hasPrev = false;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(PairwiseSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var pair;

      if (this.hasPrev) {
        pair = [this.prev, value];
      } else {
        this.hasPrev = true;
      }

      this.prev = value;

      if (pair) {
        this.destination.next(pair);
      }
    }
  }]);

  return PairwiseSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "Zyez":
/*!************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/sequenceEqual.js ***!
  \************************************************************************/
/*! exports provided: sequenceEqual, SequenceEqualOperator, SequenceEqualSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequenceEqual", function() { return sequenceEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SequenceEqualOperator", function() { return SequenceEqualOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SequenceEqualSubscriber", function() { return SequenceEqualSubscriber; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");






function sequenceEqual(compareTo, comparator) {
  return function (source) {
    return source.lift(new SequenceEqualOperator(compareTo, comparator));
  };
}
var SequenceEqualOperator = /*#__PURE__*/function () {
  function SequenceEqualOperator(compareTo, comparator) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, SequenceEqualOperator);

    this.compareTo = compareTo;
    this.comparator = comparator;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(SequenceEqualOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));
    }
  }]);

  return SequenceEqualOperator;
}();
var SequenceEqualSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(SequenceEqualSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(SequenceEqualSubscriber);

  function SequenceEqualSubscriber(destination, compareTo, comparator) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, SequenceEqualSubscriber);

    _this = _super.call(this, destination);
    _this.compareTo = compareTo;
    _this.comparator = comparator;
    _this._a = [];
    _this._b = [];
    _this._oneComplete = false;

    _this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this))));

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(SequenceEqualSubscriber, [{
    key: "_next",
    value: function _next(value) {
      if (this._oneComplete && this._b.length === 0) {
        this.emit(false);
      } else {
        this._a.push(value);

        this.checkValues();
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      if (this._oneComplete) {
        this.emit(this._a.length === 0 && this._b.length === 0);
      } else {
        this._oneComplete = true;
      }

      this.unsubscribe();
    }
  }, {
    key: "checkValues",
    value: function checkValues() {
      var _a = this._a,
          _b = this._b,
          comparator = this.comparator;

      while (_a.length > 0 && _b.length > 0) {
        var a = _a.shift();

        var b = _b.shift();

        var areEqual = false;

        try {
          areEqual = comparator ? comparator(a, b) : a === b;
        } catch (e) {
          this.destination.error(e);
        }

        if (!areEqual) {
          this.emit(false);
        }
      }
    }
  }, {
    key: "emit",
    value: function emit(value) {
      var destination = this.destination;
      destination.next(value);
      destination.complete();
    }
  }, {
    key: "nextB",
    value: function nextB(value) {
      if (this._oneComplete && this._a.length === 0) {
        this.emit(false);
      } else {
        this._b.push(value);

        this.checkValues();
      }
    }
  }, {
    key: "completeB",
    value: function completeB() {
      if (this._oneComplete) {
        this.emit(this._a.length === 0 && this._b.length === 0);
      } else {
        this._oneComplete = true;
      }
    }
  }]);

  return SequenceEqualSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_5__["Subscriber"]);

var SequenceEqualCompareToSubscriber = /*#__PURE__*/function (_Subscriber2) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(SequenceEqualCompareToSubscriber, _Subscriber2);

  var _super2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(SequenceEqualCompareToSubscriber);

  function SequenceEqualCompareToSubscriber(destination, parent) {
    var _this2;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, SequenceEqualCompareToSubscriber);

    _this2 = _super2.call(this, destination);
    _this2.parent = parent;
    return _this2;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(SequenceEqualCompareToSubscriber, [{
    key: "_next",
    value: function _next(value) {
      this.parent.nextB(value);
    }
  }, {
    key: "_error",
    value: function _error(err) {
      this.parent.error(err);
      this.unsubscribe();
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.parent.completeB();
      this.unsubscribe();
    }
  }]);

  return SequenceEqualCompareToSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_5__["Subscriber"]);

/***/ }),

/***/ "a3WO":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _arrayLikeToArray; });
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

/***/ }),

/***/ "a7t3":
/*!************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/subscribeToPromise.js ***!
  \************************************************************************/
/*! exports provided: subscribeToPromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToPromise", function() { return subscribeToPromise; });
/* harmony import */ var _hostReportError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hostReportError */ "NJ4a");

var subscribeToPromise = function subscribeToPromise(promise) {
  return function (subscriber) {
    promise.then(function (value) {
      if (!subscriber.closed) {
        subscriber.next(value);
        subscriber.complete();
      }
    }, function (err) {
      return subscriber.error(err);
    }).then(null, _hostReportError__WEBPACK_IMPORTED_MODULE_0__["hostReportError"]);
    return subscriber;
  };
};

/***/ }),

/***/ "aECQ":
/*!*********************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/auth/es2015/auth.js ***!
  \*********************************************************************/
/*! exports provided: AngularFireAuth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AngularFireAuth", function() { return AngularFireAuth; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_fire__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/fire */ "05qF");



var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var __metadata = undefined && undefined.__metadata || function (k, v) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var __param = undefined && undefined.__param || function (paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
};






var AngularFireAuth = /*@__PURE__*/function () {
  var AngularFireAuth = function AngularFireAuth(options, nameOrConfig, platformId, zone) {
    var _this = this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, AngularFireAuth);

    var keepUnstableUntilFirst = Object(_angular_fire__WEBPACK_IMPORTED_MODULE_4__["ɵkeepUnstableUntilFirstFactory"])(new _angular_fire__WEBPACK_IMPORTED_MODULE_4__["ɵAngularFireSchedulers"](zone), platformId);
    this.auth = zone.runOutsideAngular(function () {
      var app = Object(_angular_fire__WEBPACK_IMPORTED_MODULE_4__["_firebaseAppFactory"])(options, zone, nameOrConfig);

      return app.auth();
    });
    this.authState = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (subscriber) {
      return zone.runOutsideAngular(function () {
        return _this.auth.onAuthStateChanged(subscriber);
      });
    }).pipe(keepUnstableUntilFirst);
    ;
    this.user = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (subscriber) {
      return zone.runOutsideAngular(function () {
        return _this.auth.onIdTokenChanged(subscriber);
      });
    }).pipe(keepUnstableUntilFirst);
    this.idToken = this.user.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["switchMap"])(function (user) {
      return user ? Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(user.getIdToken()) : Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(null);
    }));
    this.idTokenResult = this.user.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["switchMap"])(function (user) {
      return user ? Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(user.getIdTokenResult()) : Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(null);
    }));
  };

  AngularFireAuth.ɵfac = function AngularFireAuth_Factory(t) {
    return new (t || AngularFireAuth)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_fire__WEBPACK_IMPORTED_MODULE_4__["FIREBASE_OPTIONS"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_fire__WEBPACK_IMPORTED_MODULE_4__["FIREBASE_APP_NAME"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]));
  };

  AngularFireAuth.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({
    token: AngularFireAuth,
    factory: function factory(t) {
      return AngularFireAuth.ɵfac(t);
    }
  });
  AngularFireAuth = __decorate([__param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_fire__WEBPACK_IMPORTED_MODULE_4__["FIREBASE_OPTIONS"])), __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_fire__WEBPACK_IMPORTED_MODULE_4__["FIREBASE_APP_NAME"])), __param(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"])), __metadata("design:paramtypes", [Object, Object, Object, _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]])], AngularFireAuth);
  return AngularFireAuth;
}();



/***/ }),

/***/ "aGrj":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/switchMapTo.js ***!
  \**********************************************************************/
/*! exports provided: switchMapTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "switchMapTo", function() { return switchMapTo; });
/* harmony import */ var _switchMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./switchMap */ "eIep");

function switchMapTo(innerObservable, resultSelector) {
  return resultSelector ? Object(_switchMap__WEBPACK_IMPORTED_MODULE_0__["switchMap"])(function () {
    return innerObservable;
  }, resultSelector) : Object(_switchMap__WEBPACK_IMPORTED_MODULE_0__["switchMap"])(function () {
    return innerObservable;
  });
}

/***/ }),

/***/ "bHdf":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/mergeAll.js ***!
  \*******************************************************************/
/*! exports provided: mergeAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeAll", function() { return mergeAll; });
/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeMap */ "5+tZ");
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/identity */ "SpAZ");


function mergeAll() {
  var concurrent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Number.POSITIVE_INFINITY;
  return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(_util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"], concurrent);
}

/***/ }),

/***/ "bOdf":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/concatMap.js ***!
  \********************************************************************/
/*! exports provided: concatMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concatMap", function() { return concatMap; });
/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeMap */ "5+tZ");

function concatMap(project, resultSelector) {
  return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(project, resultSelector, 1);
}

/***/ }),

/***/ "bsvf":
/*!***********************************************!*\
  !*** ./src/app/auth/login/login.component.ts ***!
  \***********************************************/
/*! exports provided: LoginComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginComponent", function() { return LoginComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _services_firebase_firebase_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/firebase/firebase.service */ "qnoD");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _services_auth_authentication_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/auth/authentication.service */ "JVRy");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "ofXK");








function LoginComponent_div_2_div_5_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r2.loginError, " ");
    }
}
function LoginComponent_div_2_div_9_div_1_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Username is required. ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
}
function LoginComponent_div_2_div_9_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, LoginComponent_div_2_div_9_div_1_Template, 2, 0, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r3.username.errors);
    }
}
function LoginComponent_div_2_div_12_div_1_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Password is required. ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
}
function LoginComponent_div_2_div_12_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, LoginComponent_div_2_div_12_div_1_Template, 2, 0, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r4.password.errors);
    }
}
function LoginComponent_div_2_Template(rf, ctx) {
    if (rf & 1) {
        var _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "h1");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "Administrator Login");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, LoginComponent_div_2_div_5_Template, 2, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "form", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngSubmit", function LoginComponent_div_2_Template_form_ngSubmit_6_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r8); var ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](); return ctx_r7.onSubmit(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](8, "input", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, LoginComponent_div_2_div_9_Template, 2, 1, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](11, "input", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](12, LoginComponent_div_2_div_12_Template, 2, 1, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "button", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](15, "Log In");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r0.loginError);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx_r0.loginForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r0.username.invalid && (ctx_r0.username.dirty || ctx_r0.username.touched));
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r0.password.invalid && (ctx_r0.password.dirty || ctx_r0.password.touched));
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("disabled", !ctx_r0.loginForm.valid);
    }
}
function LoginComponent_div_3_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h1");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "h3");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r1.error.errorTitle);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r1.error.errorDesc);
    }
}
var LoginComponent = /** @class */ /*@__PURE__*/ (function () {
    function LoginComponent(fb, firebaseService, router, authenticationService) {
        this.fb = fb;
        this.firebaseService = firebaseService;
        this.router = router;
        this.authenticationService = authenticationService;
        this.submitted = false;
    }
    LoginComponent.prototype.ngOnInit = function () {
        this.authenticationService.AuthSignIn();
        if (this.authenticationService.isAuthenticated()) {
            if (this.firebaseService.isLoggedIn()) {
                this.router.navigateByUrl('/admin/dashboard');
            }
            this.loginForm = this.fb.group({
                username: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                password: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]
            });
        }
        else {
            console.log('User Authentication failed');
        }
    };
    Object.defineProperty(LoginComponent.prototype, "username", {
        get: function () { return this.loginForm.get('username'); },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LoginComponent.prototype, "password", {
        get: function () { return this.loginForm.get('password'); },
        enumerable: false,
        configurable: true
    });
    LoginComponent.prototype.onSubmit = function () {
        var _this = this;
        console.log(this.username.value + '====' + this.password.value);
        var param = {
            'username': this.username.value,
            'password': this.password.value
        };
        this.firebaseService.searchUsers(param).subscribe(function (result) {
            _this.users = result;
            if (_this.users && _this.users.length > 0) {
                localStorage.setItem('currentUser', JSON.stringify(_this.users));
                _this.router.navigateByUrl('/admin/dashboard');
            }
            else {
                (function (error) { return _this.error = error; });
            }
        });
        /*
      this.submitted = true;
      
      this.userService.getUsers().subscribe(users=>{
          console.log(users);
      })
      */
        /* this.authService.login(this.username.value, this.password.value).subscribe((data) => {
            if (this.authService.isLoggedIn) {console.log(1);
             //  const redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '/admin';
               this.router.navigateByUrl('/admin/dashboard');
             } else {console.log(2);
               this.loginError = 'Username or password is incorrect.';
             }
           },
           error => this.error = error
         );*/
    };
    LoginComponent.ɵfac = function LoginComponent_Factory(t) { return new (t || LoginComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_services_firebase_firebase_service__WEBPACK_IMPORTED_MODULE_2__["FirebaseService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_services_auth_authentication_service__WEBPACK_IMPORTED_MODULE_4__["AuthenticationService"])); };
    LoginComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: LoginComponent, selectors: [["app-login"]], decls: 4, vars: 2, consts: [[1, "login-wrap", "mtb-40"], [1, "container"], ["class", "row justify-content-center", 4, "ngIf"], ["class", "service-error", 4, "ngIf"], [1, "row", "justify-content-center"], [1, "col-md-6"], [1, "login-box"], ["class", "alert alert-danger", 4, "ngIf"], [3, "formGroup", "ngSubmit"], [1, "form-group"], ["type", "text", "formControlName", "username", "placeholder", "Username", "required", "", 1, "form-control"], ["class", "error", 4, "ngIf"], ["type", "password", "formControlName", "password", "placeholder", "Password", "required", "", 1, "form-control"], ["type", "submit", 1, "btn", "btn-primary", 3, "disabled"], [1, "alert", "alert-danger"], [1, "error"], [4, "ngIf"], [1, "service-error"]], template: function LoginComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "section", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, LoginComponent_div_2_Template, 16, 5, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, LoginComponent_div_3_Template, 5, 2, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx.error);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.error);
            }
        }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_5__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["RequiredValidator"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */"] });
    return LoginComponent;
}());




/***/ }),

/***/ "c2HN":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/isPromise.js ***!
  \***************************************************************/
/*! exports provided: isPromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPromise", function() { return isPromise; });
function isPromise(value) {
  return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
}

/***/ }),

/***/ "c6ID":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/sample.js ***!
  \*****************************************************************/
/*! exports provided: sample */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sample", function() { return sample; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");





function sample(notifier) {
  return function (source) {
    return source.lift(new SampleOperator(notifier));
  };
}

var SampleOperator = /*#__PURE__*/function () {
  function SampleOperator(notifier) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SampleOperator);

    this.notifier = notifier;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SampleOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      var sampleSubscriber = new SampleSubscriber(subscriber);
      var subscription = source.subscribe(sampleSubscriber);
      subscription.add(Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["innerSubscribe"])(this.notifier, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["SimpleInnerSubscriber"](sampleSubscriber)));
      return subscription;
    }
  }]);

  return SampleOperator;
}();

var SampleSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(SampleSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(SampleSubscriber);

  function SampleSubscriber() {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SampleSubscriber);

    _this = _super.apply(this, arguments);
    _this.hasValue = false;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SampleSubscriber, [{
    key: "_next",
    value: function _next(value) {
      this.value = value;
      this.hasValue = true;
    }
  }, {
    key: "notifyNext",
    value: function notifyNext() {
      this.emitValue();
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {
      this.emitValue();
    }
  }, {
    key: "emitValue",
    value: function emitValue() {
      if (this.hasValue) {
        this.hasValue = false;
        this.destination.next(this.value);
      }
    }
  }]);

  return SampleSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "c7jc":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/Immediate.js ***!
  \***************************************************************/
/*! exports provided: Immediate, TestTools */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Immediate", function() { return Immediate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TestTools", function() { return TestTools; });
var nextHandle = 1;

var RESOLVED = /*@__PURE__*/function () {
  return Promise.resolve();
}();

var activeHandles = {};

function findAndClearHandle(handle) {
  if (handle in activeHandles) {
    delete activeHandles[handle];
    return true;
  }

  return false;
}

var Immediate = {
  setImmediate: function setImmediate(cb) {
    var handle = nextHandle++;
    activeHandles[handle] = true;
    RESOLVED.then(function () {
      return findAndClearHandle(handle) && cb();
    });
    return handle;
  },
  clearImmediate: function clearImmediate(handle) {
    findAndClearHandle(handle);
  }
};
var TestTools = {
  pending: function pending() {
    return Object.keys(activeHandles).length;
  }
};

/***/ }),

/***/ "cBqT":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/find.js ***!
  \***************************************************************/
/*! exports provided: find, FindValueOperator, FindValueSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "find", function() { return find; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FindValueOperator", function() { return FindValueOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FindValueSubscriber", function() { return FindValueSubscriber; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");





function find(predicate, thisArg) {
  if (typeof predicate !== 'function') {
    throw new TypeError('predicate is not a function');
  }

  return function (source) {
    return source.lift(new FindValueOperator(predicate, source, false, thisArg));
  };
}
var FindValueOperator = /*#__PURE__*/function () {
  function FindValueOperator(predicate, source, yieldIndex, thisArg) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, FindValueOperator);

    this.predicate = predicate;
    this.source = source;
    this.yieldIndex = yieldIndex;
    this.thisArg = thisArg;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(FindValueOperator, [{
    key: "call",
    value: function call(observer, source) {
      return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));
    }
  }]);

  return FindValueOperator;
}();
var FindValueSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(FindValueSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(FindValueSubscriber);

  function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, FindValueSubscriber);

    _this = _super.call(this, destination);
    _this.predicate = predicate;
    _this.source = source;
    _this.yieldIndex = yieldIndex;
    _this.thisArg = thisArg;
    _this.index = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(FindValueSubscriber, [{
    key: "notifyComplete",
    value: function notifyComplete(value) {
      var destination = this.destination;
      destination.next(value);
      destination.complete();
      this.unsubscribe();
    }
  }, {
    key: "_next",
    value: function _next(value) {
      var predicate = this.predicate,
          thisArg = this.thisArg;
      var index = this.index++;

      try {
        var result = predicate.call(thisArg || this, value, index, this.source);

        if (result) {
          this.notifyComplete(this.yieldIndex ? index : value);
        }
      } catch (err) {
        this.destination.error(err);
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.notifyComplete(this.yieldIndex ? -1 : undefined);
    }
  }]);

  return FindValueSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "coGc":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/delayWhen.js ***!
  \********************************************************************/
/*! exports provided: delayWhen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "delayWhen", function() { return delayWhen; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../OuterSubscriber */ "l7GE");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/subscribeToResult */ "ZUHj");








function delayWhen(delayDurationSelector, subscriptionDelay) {
  if (subscriptionDelay) {
    return function (source) {
      return new SubscriptionDelayObservable(source, subscriptionDelay).lift(new DelayWhenOperator(delayDurationSelector));
    };
  }

  return function (source) {
    return source.lift(new DelayWhenOperator(delayDurationSelector));
  };
}

var DelayWhenOperator = /*#__PURE__*/function () {
  function DelayWhenOperator(delayDurationSelector) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DelayWhenOperator);

    this.delayDurationSelector = delayDurationSelector;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DelayWhenOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));
    }
  }]);

  return DelayWhenOperator;
}();

var DelayWhenSubscriber = /*#__PURE__*/function (_OuterSubscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(DelayWhenSubscriber, _OuterSubscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(DelayWhenSubscriber);

  function DelayWhenSubscriber(destination, delayDurationSelector) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DelayWhenSubscriber);

    _this = _super.call(this, destination);
    _this.delayDurationSelector = delayDurationSelector;
    _this.completed = false;
    _this.delayNotifierSubscriptions = [];
    _this.index = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DelayWhenSubscriber, [{
    key: "notifyNext",
    value: function notifyNext(outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {
      this.destination.next(outerValue);
      this.removeSubscription(innerSub);
      this.tryComplete();
    }
  }, {
    key: "notifyError",
    value: function notifyError(error, innerSub) {
      this._error(error);
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete(innerSub) {
      var value = this.removeSubscription(innerSub);

      if (value) {
        this.destination.next(value);
      }

      this.tryComplete();
    }
  }, {
    key: "_next",
    value: function _next(value) {
      var index = this.index++;

      try {
        var delayNotifier = this.delayDurationSelector(value, index);

        if (delayNotifier) {
          this.tryDelay(delayNotifier, value);
        }
      } catch (err) {
        this.destination.error(err);
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.completed = true;
      this.tryComplete();
      this.unsubscribe();
    }
  }, {
    key: "removeSubscription",
    value: function removeSubscription(subscription) {
      subscription.unsubscribe();
      var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);

      if (subscriptionIdx !== -1) {
        this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);
      }

      return subscription.outerValue;
    }
  }, {
    key: "tryDelay",
    value: function tryDelay(delayNotifier, value) {
      var notifierSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_7__["subscribeToResult"])(this, delayNotifier, value);

      if (notifierSubscription && !notifierSubscription.closed) {
        var destination = this.destination;
        destination.add(notifierSubscription);
        this.delayNotifierSubscriptions.push(notifierSubscription);
      }
    }
  }, {
    key: "tryComplete",
    value: function tryComplete() {
      if (this.completed && this.delayNotifierSubscriptions.length === 0) {
        this.destination.complete();
      }
    }
  }]);

  return DelayWhenSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_6__["OuterSubscriber"]);

var SubscriptionDelayObservable = /*#__PURE__*/function (_Observable) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(SubscriptionDelayObservable, _Observable);

  var _super2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(SubscriptionDelayObservable);

  function SubscriptionDelayObservable(source, subscriptionDelay) {
    var _this2;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SubscriptionDelayObservable);

    _this2 = _super2.call(this);
    _this2.source = source;
    _this2.subscriptionDelay = subscriptionDelay;
    return _this2;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SubscriptionDelayObservable, [{
    key: "_subscribe",
    value: function _subscribe(subscriber) {
      this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));
    }
  }]);

  return SubscriptionDelayObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_5__["Observable"]);

var SubscriptionDelaySubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(SubscriptionDelaySubscriber, _Subscriber);

  var _super3 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(SubscriptionDelaySubscriber);

  function SubscriptionDelaySubscriber(parent, source) {
    var _this3;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SubscriptionDelaySubscriber);

    _this3 = _super3.call(this);
    _this3.parent = parent;
    _this3.source = source;
    _this3.sourceSubscribed = false;
    return _this3;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SubscriptionDelaySubscriber, [{
    key: "_next",
    value: function _next(unused) {
      this.subscribeToSource();
    }
  }, {
    key: "_error",
    value: function _error(err) {
      this.unsubscribe();
      this.parent.error(err);
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.unsubscribe();
      this.subscribeToSource();
    }
  }, {
    key: "subscribeToSource",
    value: function subscribeToSource() {
      if (!this.sourceSubscribed) {
        this.sourceSubscribed = true;
        this.unsubscribe();
        this.source.subscribe(this.parent);
      }
    }
  }]);

  return SubscriptionDelaySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "cp0P":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/forkJoin.js ***!
  \********************************************************************/
/*! exports provided: forkJoin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forkJoin", function() { return forkJoin; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ "DH7j");
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operators/map */ "lJxs");
/* harmony import */ var _util_isObject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isObject */ "XoHu");
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./from */ "Cfvw");






function forkJoin() {
  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {
    sources[_key] = arguments[_key];
  }

  if (sources.length === 1) {
    var first = sources[0];

    if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(first)) {
      return forkJoinInternal(first, null);
    }

    if (Object(_util_isObject__WEBPACK_IMPORTED_MODULE_4__["isObject"])(first) && Object.getPrototypeOf(first) === Object.prototype) {
      var keys = Object.keys(first);
      return forkJoinInternal(keys.map(function (key) {
        return first[key];
      }), keys);
    }
  }

  if (typeof sources[sources.length - 1] === 'function') {
    var resultSelector = sources.pop();
    sources = sources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(sources[0]) ? sources[0] : sources;
    return forkJoinInternal(sources, null).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_3__["map"])(function (args) {
      return resultSelector.apply(void 0, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(args));
    }));
  }

  return forkJoinInternal(sources, null);
}

function forkJoinInternal(sources, keys) {
  return new _Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"](function (subscriber) {
    var len = sources.length;

    if (len === 0) {
      subscriber.complete();
      return;
    }

    var values = new Array(len);
    var completed = 0;
    var emitted = 0;

    var _loop = function _loop(i) {
      var source = Object(_from__WEBPACK_IMPORTED_MODULE_5__["from"])(sources[i]);
      var hasValue = false;
      subscriber.add(source.subscribe({
        next: function next(value) {
          if (!hasValue) {
            hasValue = true;
            emitted++;
          }

          values[i] = value;
        },
        error: function error(err) {
          return subscriber.error(err);
        },
        complete: function complete() {
          completed++;

          if (completed === len || !hasValue) {
            if (emitted === len) {
              subscriber.next(keys ? keys.reduce(function (result, key, i) {
                return result[key] = values[i], result;
              }, {}) : values);
            }

            subscriber.complete();
          }
        }
      }));
    };

    for (var i = 0; i < len; i++) {
      _loop(i);
    }
  });
}

/***/ }),

/***/ "crnd":
/*!**********************************************************!*\
  !*** ./src/$$_lazy_route_resource lazy namespace object ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "crnd";

/***/ }),

/***/ "cx9U":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/single.js ***!
  \*****************************************************************/
/*! exports provided: single */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "single", function() { return single; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/EmptyError */ "sVev");






function single(predicate) {
  return function (source) {
    return source.lift(new SingleOperator(predicate, source));
  };
}

var SingleOperator = /*#__PURE__*/function () {
  function SingleOperator(predicate, source) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SingleOperator);

    this.predicate = predicate;
    this.source = source;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SingleOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));
    }
  }]);

  return SingleOperator;
}();

var SingleSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(SingleSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(SingleSubscriber);

  function SingleSubscriber(destination, predicate, source) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SingleSubscriber);

    _this = _super.call(this, destination);
    _this.predicate = predicate;
    _this.source = source;
    _this.seenValue = false;
    _this.index = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SingleSubscriber, [{
    key: "applySingleValue",
    value: function applySingleValue(value) {
      if (this.seenValue) {
        this.destination.error('Sequence contains more than one element');
      } else {
        this.seenValue = true;
        this.singleValue = value;
      }
    }
  }, {
    key: "_next",
    value: function _next(value) {
      var index = this.index++;

      if (this.predicate) {
        this.tryNext(value, index);
      } else {
        this.applySingleValue(value);
      }
    }
  }, {
    key: "tryNext",
    value: function tryNext(value, index) {
      try {
        if (this.predicate(value, index, this.source)) {
          this.applySingleValue(value);
        }
      } catch (err) {
        this.destination.error(err);
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      var destination = this.destination;

      if (this.index > 0) {
        destination.next(this.seenValue ? this.singleValue : undefined);
        destination.complete();
      } else {
        destination.error(new _util_EmptyError__WEBPACK_IMPORTED_MODULE_5__["EmptyError"]());
      }
    }
  }]);

  return SingleSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "dkDA":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/materialize.js ***!
  \**********************************************************************/
/*! exports provided: materialize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "materialize", function() { return materialize; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Notification */ "WMd4");






function materialize() {
  return function materializeOperatorFunction(source) {
    return source.lift(new MaterializeOperator());
  };
}

var MaterializeOperator = /*#__PURE__*/function () {
  function MaterializeOperator() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, MaterializeOperator);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(MaterializeOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new MaterializeSubscriber(subscriber));
    }
  }]);

  return MaterializeOperator;
}();

var MaterializeSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(MaterializeSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(MaterializeSubscriber);

  function MaterializeSubscriber(destination) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, MaterializeSubscriber);

    return _super.call(this, destination);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(MaterializeSubscriber, [{
    key: "_next",
    value: function _next(value) {
      this.destination.next(_Notification__WEBPACK_IMPORTED_MODULE_5__["Notification"].createNext(value));
    }
  }, {
    key: "_error",
    value: function _error(err) {
      var destination = this.destination;
      destination.next(_Notification__WEBPACK_IMPORTED_MODULE_5__["Notification"].createError(err));
      destination.complete();
    }
  }, {
    key: "_complete",
    value: function _complete() {
      var destination = this.destination;
      destination.next(_Notification__WEBPACK_IMPORTED_MODULE_5__["Notification"].createComplete());
      destination.complete();
    }
  }]);

  return MaterializeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "eIep":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/switchMap.js ***!
  \********************************************************************/
/*! exports provided: switchMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "switchMap", function() { return switchMap; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./map */ "lJxs");
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../observable/from */ "Cfvw");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");









function switchMap(project, resultSelector) {
  if (typeof resultSelector === 'function') {
    return function (source) {
      return source.pipe(switchMap(function (a, i) {
        return Object(_observable_from__WEBPACK_IMPORTED_MODULE_7__["from"])(project(a, i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_6__["map"])(function (b, ii) {
          return resultSelector(a, b, i, ii);
        }));
      }));
    };
  }

  return function (source) {
    return source.lift(new SwitchMapOperator(project));
  };
}

var SwitchMapOperator = /*#__PURE__*/function () {
  function SwitchMapOperator(project) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, SwitchMapOperator);

    this.project = project;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(SwitchMapOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));
    }
  }]);

  return SwitchMapOperator;
}();

var SwitchMapSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(SwitchMapSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(SwitchMapSubscriber);

  function SwitchMapSubscriber(destination, project) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, SwitchMapSubscriber);

    _this = _super.call(this, destination);
    _this.project = project;
    _this.index = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(SwitchMapSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var result;
      var index = this.index++;

      try {
        result = this.project(value, index);
      } catch (error) {
        this.destination.error(error);
        return;
      }

      this._innerSub(result);
    }
  }, {
    key: "_innerSub",
    value: function _innerSub(result) {
      var innerSubscription = this.innerSubscription;

      if (innerSubscription) {
        innerSubscription.unsubscribe();
      }

      var innerSubscriber = new _innerSubscribe__WEBPACK_IMPORTED_MODULE_8__["SimpleInnerSubscriber"](this);
      var destination = this.destination;
      destination.add(innerSubscriber);
      this.innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_8__["innerSubscribe"])(result, innerSubscriber);

      if (this.innerSubscription !== innerSubscriber) {
        destination.add(this.innerSubscription);
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      var innerSubscription = this.innerSubscription;

      if (!innerSubscription || innerSubscription.closed) {
        Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(SwitchMapSubscriber.prototype), "_complete", this).call(this);
      }

      this.unsubscribe();
    }
  }, {
    key: "_unsubscribe",
    value: function _unsubscribe() {
      this.innerSubscription = undefined;
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {
      this.innerSubscription = undefined;

      if (this.isStopped) {
        Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(SwitchMapSubscriber.prototype), "_complete", this).call(this);
      }
    }
  }, {
    key: "notifyNext",
    value: function notifyNext(innerValue) {
      this.destination.next(innerValue);
    }
  }]);

  return SwitchMapSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_8__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "eNwd":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduler/animationFrame.js ***!
  \*************************************************************************/
/*! exports provided: animationFrameScheduler, animationFrame */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animationFrameScheduler", function() { return animationFrameScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animationFrame", function() { return animationFrame; });
/* harmony import */ var _AnimationFrameAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AnimationFrameAction */ "Vpsf");
/* harmony import */ var _AnimationFrameScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AnimationFrameScheduler */ "znLP");


var animationFrameScheduler = /*@__PURE__*/new _AnimationFrameScheduler__WEBPACK_IMPORTED_MODULE_1__["AnimationFrameScheduler"](_AnimationFrameAction__WEBPACK_IMPORTED_MODULE_0__["AnimationFrameAction"]);
var animationFrame = animationFrameScheduler;

/***/ }),

/***/ "f29J":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/concat.js ***!
  \*****************************************************************/
/*! exports provided: concat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return concat; });
/* harmony import */ var _observable_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/concat */ "GyhO");

function concat() {
  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {
    observables[_key] = arguments[_key];
  }

  return function (source) {
    return source.lift.call(_observable_concat__WEBPACK_IMPORTED_MODULE_0__["concat"].apply(void 0, [source].concat(observables)));
  };
}

/***/ }),

/***/ "fECr":
/*!********************************************!*\
  !*** ./src/app/header/header.component.ts ***!
  \********************************************/
/*! exports provided: HeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderComponent", function() { return HeaderComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "jhN1");
/* harmony import */ var _services_firebase_firebase_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/firebase/firebase.service */ "qnoD");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "ofXK");






function HeaderComponent_li_8_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "a", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Login");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
}
function HeaderComponent_li_9_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "a", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Admin Dashboard");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
}
function HeaderComponent_li_10_Template(rf, ctx) {
    if (rf & 1) {
        var _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "a", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function HeaderComponent_li_10_Template_a_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r4); var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](); return ctx_r3.logout(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Logout");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
}
var HeaderComponent = /** @class */ /*@__PURE__*/ (function () {
    function HeaderComponent(titleService, firebaseService, router) {
        this.titleService = titleService;
        this.firebaseService = firebaseService;
        this.router = router;
    }
    HeaderComponent.prototype.ngOnInit = function () {
    };
    Object.defineProperty(HeaderComponent.prototype, "isLoggedIn", {
        get: function () {
            return this.firebaseService.isLoggedIn();
        },
        enumerable: false,
        configurable: true
    });
    HeaderComponent.prototype.setPageTitle = function (title) {
        this.titleService.setTitle(title);
    };
    HeaderComponent.prototype.logout = function () {
        this.firebaseService.logout();
        this.router.navigateByUrl('/login');
    };
    HeaderComponent.ɵfac = function HeaderComponent_Factory(t) { return new (t || HeaderComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["Title"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_services_firebase_firebase_service__WEBPACK_IMPORTED_MODULE_2__["FirebaseService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"])); };
    HeaderComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: HeaderComponent, selectors: [["app-header"]], decls: 11, vars: 3, consts: [[1, "navbar", "navbar-expand-md", "navbar-dark", "bg-blue"], [1, "container"], ["routerLink", "/", 1, "navbar-brand", 3, "click"], ["type", "button", "data-toggle", "collapse", "data-target", "#navbarCollapse", "aria-controls", "navbarCollapse", "aria-expanded", "false", "aria-label", "Toggle navigation", 1, "navbar-toggler"], [1, "navbar-toggler-icon"], ["id", "navbarCollapse", 1, "collapse", "navbar-collapse"], [1, "navbar-nav", "ml-auto"], ["class", "nav-item", 4, "ngIf"], ["class", "nav-item", "style", "cursor:pointer;", 4, "ngIf"], [1, "nav-item"], ["routerLink", "/login", 1, "nav-link"], ["routerLink", "/admin/dashboard", 1, "nav-link"], [1, "nav-item", 2, "cursor", "pointer"], [1, "nav-link", 3, "click"]], template: function HeaderComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nav", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "a", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function HeaderComponent_Template_a_click_2_listener() { return ctx.setPageTitle("Blogger"); });
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "Angular Project ");
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "button", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](5, "span", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "ul", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, HeaderComponent_li_8_Template, 3, 0, "li", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, HeaderComponent_li_9_Template, 3, 0, "li", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](10, HeaderComponent_li_10_Template, 3, 0, "li", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](8);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx.isLoggedIn);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isLoggedIn);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isLoggedIn);
            }
        }, directives: [_angular_router__WEBPACK_IMPORTED_MODULE_3__["RouterLinkWithHref"], _angular_common__WEBPACK_IMPORTED_MODULE_4__["NgIf"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJoZWFkZXIuY29tcG9uZW50LmNzcyJ9 */"] });
    return HeaderComponent;
}());




/***/ }),

/***/ "fFD9":
/*!************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/combineLatest.js ***!
  \************************************************************************/
/*! exports provided: combineLatest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return combineLatest; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isArray */ "DH7j");
/* harmony import */ var _observable_combineLatest__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/combineLatest */ "itXk");
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../observable/from */ "Cfvw");




var none = {};
function combineLatest() {
  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {
    observables[_key] = arguments[_key];
  }

  var project = null;

  if (typeof observables[observables.length - 1] === 'function') {
    project = observables.pop();
  }

  if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__["isArray"])(observables[0])) {
    observables = observables[0].slice();
  }

  return function (source) {
    return source.lift.call(Object(_observable_from__WEBPACK_IMPORTED_MODULE_3__["from"])([source].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(observables))), new _observable_combineLatest__WEBPACK_IMPORTED_MODULE_2__["CombineLatestOperator"](project));
  };
}

/***/ }),

/***/ "fXoL":
/*!******************************************************************!*\
  !*** ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js ***!
  \******************************************************************/
/*! exports provided: ANALYZE_FOR_ENTRY_COMPONENTS, APP_BOOTSTRAP_LISTENER, APP_ID, APP_INITIALIZER, ApplicationInitStatus, ApplicationModule, ApplicationRef, Attribute, COMPILER_OPTIONS, CUSTOM_ELEMENTS_SCHEMA, ChangeDetectionStrategy, ChangeDetectorRef, Compiler, CompilerFactory, Component, ComponentFactory, ComponentFactoryResolver, ComponentRef, ContentChild, ContentChildren, DEFAULT_CURRENCY_CODE, DebugElement, DebugEventListener, DebugNode, DefaultIterableDiffer, Directive, ElementRef, EmbeddedViewRef, ErrorHandler, EventEmitter, Host, HostBinding, HostListener, INJECTOR, Inject, InjectFlags, Injectable, InjectionToken, Injector, Input, IterableDiffers, KeyValueDiffers, LOCALE_ID, MissingTranslationStrategy, ModuleWithComponentFactories, NO_ERRORS_SCHEMA, NgModule, NgModuleFactory, NgModuleFactoryLoader, NgModuleRef, NgProbeToken, NgZone, Optional, Output, PACKAGE_ROOT_URL, PLATFORM_ID, PLATFORM_INITIALIZER, Pipe, PlatformRef, Query, QueryList, ReflectiveInjector, ReflectiveKey, Renderer2, RendererFactory2, RendererStyleFlags2, ResolvedReflectiveFactory, Sanitizer, SecurityContext, Self, SimpleChange, SkipSelf, SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig, TRANSLATIONS, TRANSLATIONS_FORMAT, TemplateRef, Testability, TestabilityRegistry, Type, VERSION, Version, ViewChild, ViewChildren, ViewContainerRef, ViewEncapsulation, ViewRef, WrappedValue, asNativeElements, assertPlatform, createPlatform, createPlatformFactory, defineInjectable, destroyPlatform, enableProdMode, forwardRef, getDebugNode, getModuleFactory, getPlatform, inject, isDevMode, platformCore, resolveForwardRef, setTestabilityGetter, ɵ0, ɵ1, ɵALLOW_MULTIPLE_PLATFORMS, ɵAPP_ID_RANDOM_PROVIDER, ɵChangeDetectorStatus, ɵCodegenComponentFactoryResolver, ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__, ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__, ɵCompiler_compileModuleAsync__POST_R3__, ɵCompiler_compileModuleSync__POST_R3__, ɵComponentFactory, ɵConsole, ɵDEFAULT_LOCALE_ID, ɵEMPTY_ARRAY, ɵEMPTY_MAP, ɵINJECTOR_IMPL__POST_R3__, ɵINJECTOR_SCOPE, ɵLifecycleHooksFeature, ɵLocaleDataIndex, ɵNG_COMP_DEF, ɵNG_DIR_DEF, ɵNG_ELEMENT_ID, ɵNG_INJ_DEF, ɵNG_MOD_DEF, ɵNG_PIPE_DEF, ɵNG_PROV_DEF, ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, ɵNO_CHANGE, ɵNgModuleFactory, ɵNoopNgZone, ɵReflectionCapabilities, ɵRender3ComponentFactory, ɵRender3ComponentRef, ɵRender3NgModuleRef, ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__, ɵSWITCH_COMPILE_COMPONENT__POST_R3__, ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__, ɵSWITCH_COMPILE_INJECTABLE__POST_R3__, ɵSWITCH_COMPILE_NGMODULE__POST_R3__, ɵSWITCH_COMPILE_PIPE__POST_R3__, ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__, ɵSWITCH_IVY_ENABLED__POST_R3__, ɵSWITCH_RENDERER2_FACTORY__POST_R3__, ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__, ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__, ɵ_sanitizeHtml, ɵ_sanitizeUrl, ɵallowSanitizationBypassAndThrow, ɵand, ɵangular_packages_core_core_a, ɵangular_packages_core_core_b, ɵangular_packages_core_core_ba, ɵangular_packages_core_core_bb, ɵangular_packages_core_core_bc, ɵangular_packages_core_core_bd, ɵangular_packages_core_core_be, ɵangular_packages_core_core_bf, ɵangular_packages_core_core_bg, ɵangular_packages_core_core_bi, ɵangular_packages_core_core_bj, ɵangular_packages_core_core_bk, ɵangular_packages_core_core_bl, ɵangular_packages_core_core_bm, ɵangular_packages_core_core_bn, ɵangular_packages_core_core_bo, ɵangular_packages_core_core_bp, ɵangular_packages_core_core_bq, ɵangular_packages_core_core_br, ɵangular_packages_core_core_bs, ɵangular_packages_core_core_bu, ɵangular_packages_core_core_bw, ɵangular_packages_core_core_bx, ɵangular_packages_core_core_by, ɵangular_packages_core_core_bz, ɵangular_packages_core_core_c, ɵangular_packages_core_core_ca, ɵangular_packages_core_core_d, ɵangular_packages_core_core_e, ɵangular_packages_core_core_f, ɵangular_packages_core_core_g, ɵangular_packages_core_core_h, ɵangular_packages_core_core_i, ɵangular_packages_core_core_j, ɵangular_packages_core_core_k, ɵangular_packages_core_core_l, ɵangular_packages_core_core_m, ɵangular_packages_core_core_n, ɵangular_packages_core_core_o, ɵangular_packages_core_core_p, ɵangular_packages_core_core_q, ɵangular_packages_core_core_r, ɵangular_packages_core_core_s, ɵangular_packages_core_core_t, ɵangular_packages_core_core_u, ɵangular_packages_core_core_v, ɵangular_packages_core_core_w, ɵangular_packages_core_core_x, ɵangular_packages_core_core_y, ɵangular_packages_core_core_z, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustResourceUrl, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustUrl, ɵccf, ɵclearOverrides, ɵclearResolutionOfComponentResourcesQueue, ɵcmf, ɵcompileComponent, ɵcompileDirective, ɵcompileNgModule, ɵcompileNgModuleDefs, ɵcompileNgModuleFactory__POST_R3__, ɵcompilePipe, ɵcreateInjector, ɵcrt, ɵdefaultIterableDiffers, ɵdefaultKeyValueDiffers, ɵdetectChanges, ɵdevModeEqual, ɵdid, ɵeld, ɵfindLocaleData, ɵflushModuleScopingQueueAsMuchAsPossible, ɵgetComponentViewDefinitionFactory, ɵgetDebugNodeR2, ɵgetDebugNode__POST_R3__, ɵgetDirectives, ɵgetHostElement, ɵgetInjectableDef, ɵgetLContext, ɵgetLocaleCurrencyCode, ɵgetLocalePluralCase, ɵgetModuleFactory__POST_R3__, ɵgetSanitizationBypassType, ɵglobal, ɵinitServicesIfNeeded, ɵinlineInterpolate, ɵinterpolate, ɵisBoundToModule__POST_R3__, ɵisDefaultChangeDetectionStrategy, ɵisListLikeIterable, ɵisObservable, ɵisPromise, ɵivyEnabled, ɵmakeDecorator, ɵmarkDirty, ɵmod, ɵmpd, ɵncd, ɵnoSideEffects, ɵnov, ɵoverrideComponentView, ɵoverrideProvider, ɵpad, ɵpatchComponentDefWithScope, ɵpid, ɵpod, ɵppd, ɵprd, ɵpublishDefaultGlobalUtils, ɵpublishGlobalUtil, ɵqud, ɵregisterLocaleData, ɵregisterModuleFactory, ɵregisterNgModuleType, ɵrenderComponent, ɵresetCompiledComponents, ɵresetJitOptions, ɵresolveComponentResources, ɵsetClassMetadata, ɵsetCurrentInjector, ɵsetDocument, ɵsetLocaleId, ɵstore, ɵstringify, ɵted, ɵtransitiveScopesFor, ɵunregisterLocaleData, ɵunv, ɵunwrapSafeValue, ɵvid, ɵwhenRendered, ɵɵCopyDefinitionFeature, ɵɵInheritDefinitionFeature, ɵɵNgOnChangesFeature, ɵɵProvidersFeature, ɵɵadvance, ɵɵattribute, ɵɵattributeInterpolate1, ɵɵattributeInterpolate2, ɵɵattributeInterpolate3, ɵɵattributeInterpolate4, ɵɵattributeInterpolate5, ɵɵattributeInterpolate6, ɵɵattributeInterpolate7, ɵɵattributeInterpolate8, ɵɵattributeInterpolateV, ɵɵclassMap, ɵɵclassMapInterpolate1, ɵɵclassMapInterpolate2, ɵɵclassMapInterpolate3, ɵɵclassMapInterpolate4, ɵɵclassMapInterpolate5, ɵɵclassMapInterpolate6, ɵɵclassMapInterpolate7, ɵɵclassMapInterpolate8, ɵɵclassMapInterpolateV, ɵɵclassProp, ɵɵcontentQuery, ɵɵdefineComponent, ɵɵdefineDirective, ɵɵdefineInjectable, ɵɵdefineInjector, ɵɵdefineNgModule, ɵɵdefinePipe, ɵɵdirectiveInject, ɵɵdisableBindings, ɵɵelement, ɵɵelementContainer, ɵɵelementContainerEnd, ɵɵelementContainerStart, ɵɵelementEnd, ɵɵelementStart, ɵɵenableBindings, ɵɵgetCurrentView, ɵɵgetFactoryOf, ɵɵgetInheritedFactory, ɵɵhostProperty, ɵɵi18n, ɵɵi18nApply, ɵɵi18nAttributes, ɵɵi18nEnd, ɵɵi18nExp, ɵɵi18nPostprocess, ɵɵi18nStart, ɵɵinject, ɵɵinjectAttribute, ɵɵinjectPipeChangeDetectorRef, ɵɵinvalidFactory, ɵɵinvalidFactoryDep, ɵɵlistener, ɵɵloadQuery, ɵɵnamespaceHTML, ɵɵnamespaceMathML, ɵɵnamespaceSVG, ɵɵnextContext, ɵɵpipe, ɵɵpipeBind1, ɵɵpipeBind2, ɵɵpipeBind3, ɵɵpipeBind4, ɵɵpipeBindV, ɵɵprojection, ɵɵprojectionDef, ɵɵproperty, ɵɵpropertyInterpolate, ɵɵpropertyInterpolate1, ɵɵpropertyInterpolate2, ɵɵpropertyInterpolate3, ɵɵpropertyInterpolate4, ɵɵpropertyInterpolate5, ɵɵpropertyInterpolate6, ɵɵpropertyInterpolate7, ɵɵpropertyInterpolate8, ɵɵpropertyInterpolateV, ɵɵpureFunction0, ɵɵpureFunction1, ɵɵpureFunction2, ɵɵpureFunction3, ɵɵpureFunction4, ɵɵpureFunction5, ɵɵpureFunction6, ɵɵpureFunction7, ɵɵpureFunction8, ɵɵpureFunctionV, ɵɵqueryRefresh, ɵɵreference, ɵɵresolveBody, ɵɵresolveDocument, ɵɵresolveWindow, ɵɵrestoreView, ɵɵsanitizeHtml, ɵɵsanitizeResourceUrl, ɵɵsanitizeScript, ɵɵsanitizeStyle, ɵɵsanitizeUrl, ɵɵsanitizeUrlOrResourceUrl, ɵɵsetComponentScope, ɵɵsetNgModuleScope, ɵɵstaticContentQuery, ɵɵstaticViewQuery, ɵɵstyleMap, ɵɵstyleMapInterpolate1, ɵɵstyleMapInterpolate2, ɵɵstyleMapInterpolate3, ɵɵstyleMapInterpolate4, ɵɵstyleMapInterpolate5, ɵɵstyleMapInterpolate6, ɵɵstyleMapInterpolate7, ɵɵstyleMapInterpolate8, ɵɵstyleMapInterpolateV, ɵɵstyleProp, ɵɵstylePropInterpolate1, ɵɵstylePropInterpolate2, ɵɵstylePropInterpolate3, ɵɵstylePropInterpolate4, ɵɵstylePropInterpolate5, ɵɵstylePropInterpolate6, ɵɵstylePropInterpolate7, ɵɵstylePropInterpolate8, ɵɵstylePropInterpolateV, ɵɵsyntheticHostListener, ɵɵsyntheticHostProperty, ɵɵtemplate, ɵɵtemplateRefExtractor, ɵɵtext, ɵɵtextInterpolate, ɵɵtextInterpolate1, ɵɵtextInterpolate2, ɵɵtextInterpolate3, ɵɵtextInterpolate4, ɵɵtextInterpolate5, ɵɵtextInterpolate6, ɵɵtextInterpolate7, ɵɵtextInterpolate8, ɵɵtextInterpolateV, ɵɵtrustConstantHtml, ɵɵtrustConstantResourceUrl, ɵɵtrustConstantScript, ɵɵviewQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ANALYZE_FOR_ENTRY_COMPONENTS", function() { return ANALYZE_FOR_ENTRY_COMPONENTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APP_BOOTSTRAP_LISTENER", function() { return APP_BOOTSTRAP_LISTENER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APP_ID", function() { return APP_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APP_INITIALIZER", function() { return APP_INITIALIZER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationInitStatus", function() { return ApplicationInitStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationModule", function() { return ApplicationModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationRef", function() { return ApplicationRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Attribute", function() { return Attribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COMPILER_OPTIONS", function() { return COMPILER_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CUSTOM_ELEMENTS_SCHEMA", function() { return CUSTOM_ELEMENTS_SCHEMA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChangeDetectionStrategy", function() { return ChangeDetectionStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChangeDetectorRef", function() { return ChangeDetectorRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Compiler", function() { return Compiler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompilerFactory", function() { return CompilerFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Component", function() { return Component; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComponentFactory", function() { return ComponentFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComponentFactoryResolver", function() { return ComponentFactoryResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComponentRef", function() { return ComponentRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ContentChild", function() { return ContentChild; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ContentChildren", function() { return ContentChildren; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_CURRENCY_CODE", function() { return DEFAULT_CURRENCY_CODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DebugElement", function() { return DebugElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DebugEventListener", function() { return DebugEventListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DebugNode", function() { return DebugNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultIterableDiffer", function() { return DefaultIterableDiffer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Directive", function() { return Directive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ElementRef", function() { return ElementRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmbeddedViewRef", function() { return EmbeddedViewRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorHandler", function() { return ErrorHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventEmitter", function() { return EventEmitter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Host", function() { return Host; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HostBinding", function() { return HostBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HostListener", function() { return HostListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "INJECTOR", function() { return INJECTOR$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Inject", function() { return Inject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InjectFlags", function() { return InjectFlags; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Injectable", function() { return Injectable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InjectionToken", function() { return InjectionToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Injector", function() { return Injector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Input", function() { return Input; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IterableDiffers", function() { return IterableDiffers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyValueDiffers", function() { return KeyValueDiffers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOCALE_ID", function() { return LOCALE_ID$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MissingTranslationStrategy", function() { return MissingTranslationStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModuleWithComponentFactories", function() { return ModuleWithComponentFactories; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NO_ERRORS_SCHEMA", function() { return NO_ERRORS_SCHEMA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgModule", function() { return NgModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgModuleFactory", function() { return NgModuleFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgModuleFactoryLoader", function() { return NgModuleFactoryLoader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgModuleRef", function() { return NgModuleRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgProbeToken", function() { return NgProbeToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgZone", function() { return NgZone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Optional", function() { return Optional; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Output", function() { return Output; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PACKAGE_ROOT_URL", function() { return PACKAGE_ROOT_URL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PLATFORM_ID", function() { return PLATFORM_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PLATFORM_INITIALIZER", function() { return PLATFORM_INITIALIZER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pipe", function() { return Pipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PlatformRef", function() { return PlatformRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Query", function() { return Query; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueryList", function() { return QueryList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReflectiveInjector", function() { return ReflectiveInjector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReflectiveKey", function() { return ReflectiveKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Renderer2", function() { return Renderer2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RendererFactory2", function() { return RendererFactory2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RendererStyleFlags2", function() { return RendererStyleFlags2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResolvedReflectiveFactory", function() { return ResolvedReflectiveFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sanitizer", function() { return Sanitizer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SecurityContext", function() { return SecurityContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Self", function() { return Self; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SimpleChange", function() { return SimpleChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SkipSelf", function() { return SkipSelf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SystemJsNgModuleLoader", function() { return SystemJsNgModuleLoader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SystemJsNgModuleLoaderConfig", function() { return SystemJsNgModuleLoaderConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TRANSLATIONS", function() { return TRANSLATIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TRANSLATIONS_FORMAT", function() { return TRANSLATIONS_FORMAT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TemplateRef", function() { return TemplateRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Testability", function() { return Testability; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TestabilityRegistry", function() { return TestabilityRegistry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Type", function() { return Type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Version", function() { return Version; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewChild", function() { return ViewChild; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewChildren", function() { return ViewChildren; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewContainerRef", function() { return ViewContainerRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewEncapsulation", function() { return ViewEncapsulation$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewRef", function() { return ViewRef$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WrappedValue", function() { return WrappedValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asNativeElements", function() { return asNativeElements; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assertPlatform", function() { return assertPlatform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPlatform", function() { return createPlatform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPlatformFactory", function() { return createPlatformFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defineInjectable", function() { return defineInjectable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "destroyPlatform", function() { return destroyPlatform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableProdMode", function() { return enableProdMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forwardRef", function() { return forwardRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDebugNode", function() { return getDebugNode$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getModuleFactory", function() { return getModuleFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPlatform", function() { return getPlatform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inject", function() { return inject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDevMode", function() { return isDevMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "platformCore", function() { return platformCore; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resolveForwardRef", function() { return resolveForwardRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setTestabilityGetter", function() { return setTestabilityGetter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ0", function() { return ɵ0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ1", function() { return ɵ1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵALLOW_MULTIPLE_PLATFORMS", function() { return ALLOW_MULTIPLE_PLATFORMS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵAPP_ID_RANDOM_PROVIDER", function() { return APP_ID_RANDOM_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵChangeDetectorStatus", function() { return ChangeDetectorStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵCodegenComponentFactoryResolver", function() { return CodegenComponentFactoryResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__", function() { return Compiler_compileModuleAndAllComponentsAsync__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__", function() { return Compiler_compileModuleAndAllComponentsSync__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵCompiler_compileModuleAsync__POST_R3__", function() { return Compiler_compileModuleAsync__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵCompiler_compileModuleSync__POST_R3__", function() { return Compiler_compileModuleSync__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵComponentFactory", function() { return ComponentFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵConsole", function() { return Console; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵDEFAULT_LOCALE_ID", function() { return DEFAULT_LOCALE_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵEMPTY_ARRAY", function() { return EMPTY_ARRAY$4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵEMPTY_MAP", function() { return EMPTY_MAP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵINJECTOR_IMPL__POST_R3__", function() { return INJECTOR_IMPL__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵINJECTOR_SCOPE", function() { return INJECTOR_SCOPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵLifecycleHooksFeature", function() { return LifecycleHooksFeature; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵLocaleDataIndex", function() { return LocaleDataIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNG_COMP_DEF", function() { return NG_COMP_DEF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNG_DIR_DEF", function() { return NG_DIR_DEF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNG_ELEMENT_ID", function() { return NG_ELEMENT_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNG_INJ_DEF", function() { return NG_INJ_DEF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNG_MOD_DEF", function() { return NG_MOD_DEF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNG_PIPE_DEF", function() { return NG_PIPE_DEF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNG_PROV_DEF", function() { return NG_PROV_DEF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR", function() { return NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNO_CHANGE", function() { return NO_CHANGE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNgModuleFactory", function() { return NgModuleFactory$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNoopNgZone", function() { return NoopNgZone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵReflectionCapabilities", function() { return ReflectionCapabilities; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵRender3ComponentFactory", function() { return ComponentFactory$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵRender3ComponentRef", function() { return ComponentRef$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵRender3NgModuleRef", function() { return NgModuleRef$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__", function() { return SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵSWITCH_COMPILE_COMPONENT__POST_R3__", function() { return SWITCH_COMPILE_COMPONENT__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__", function() { return SWITCH_COMPILE_DIRECTIVE__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵSWITCH_COMPILE_INJECTABLE__POST_R3__", function() { return SWITCH_COMPILE_INJECTABLE__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵSWITCH_COMPILE_NGMODULE__POST_R3__", function() { return SWITCH_COMPILE_NGMODULE__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵSWITCH_COMPILE_PIPE__POST_R3__", function() { return SWITCH_COMPILE_PIPE__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__", function() { return SWITCH_ELEMENT_REF_FACTORY__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵSWITCH_IVY_ENABLED__POST_R3__", function() { return SWITCH_IVY_ENABLED__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵSWITCH_RENDERER2_FACTORY__POST_R3__", function() { return SWITCH_RENDERER2_FACTORY__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__", function() { return SWITCH_TEMPLATE_REF_FACTORY__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__", function() { return SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ_sanitizeHtml", function() { return _sanitizeHtml; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ_sanitizeUrl", function() { return _sanitizeUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵallowSanitizationBypassAndThrow", function() { return allowSanitizationBypassAndThrow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵand", function() { return anchorDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_a", function() { return isForwardRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_b", function() { return injectInjectorOnly; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_ba", function() { return DebugContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bb", function() { return NgOnChangesFeatureImpl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bc", function() { return SCHEDULER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bd", function() { return injectAttributeImpl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_be", function() { return getLView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bf", function() { return getBindingRoot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bg", function() { return nextContextImpl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bi", function() { return pureFunction1Internal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bj", function() { return pureFunction2Internal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bk", function() { return pureFunction3Internal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bl", function() { return pureFunction4Internal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bm", function() { return pureFunctionVInternal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bn", function() { return getUrlSanitizer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bo", function() { return makeParamDecorator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bp", function() { return makePropDecorator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bq", function() { return getClosureSafeProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_br", function() { return NullInjector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bs", function() { return getInjectImplementation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bu", function() { return getNativeByTNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bw", function() { return getRootContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bx", function() { return i18nPostprocess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_by", function() { return trustedHTMLFromString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bz", function() { return trustedScriptURLFromString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_c", function() { return ReflectiveInjector_; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_ca", function() { return trustedScriptFromString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_d", function() { return ReflectiveDependency; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_e", function() { return resolveReflectiveProviders; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_f", function() { return _appIdRandomProviderFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_g", function() { return injectRenderer2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_h", function() { return injectElementRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_i", function() { return createElementRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_j", function() { return getModuleFactory__PRE_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_k", function() { return injectTemplateRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_l", function() { return createTemplateRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_m", function() { return injectViewContainerRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_n", function() { return DebugNode__PRE_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_o", function() { return DebugElement__PRE_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_p", function() { return getDebugNodeR2__PRE_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_q", function() { return injectChangeDetectorRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_r", function() { return DefaultIterableDifferFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_s", function() { return DefaultKeyValueDifferFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_t", function() { return _iterableDiffersFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_u", function() { return _keyValueDiffersFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_v", function() { return _localeFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_w", function() { return APPLICATION_MODULE_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_x", function() { return zoneSchedulerFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_y", function() { return USD_CURRENCY_CODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_z", function() { return _def; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbypassSanitizationTrustHtml", function() { return bypassSanitizationTrustHtml; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbypassSanitizationTrustResourceUrl", function() { return bypassSanitizationTrustResourceUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbypassSanitizationTrustScript", function() { return bypassSanitizationTrustScript; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbypassSanitizationTrustStyle", function() { return bypassSanitizationTrustStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbypassSanitizationTrustUrl", function() { return bypassSanitizationTrustUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵccf", function() { return createComponentFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵclearOverrides", function() { return clearOverrides; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵclearResolutionOfComponentResourcesQueue", function() { return clearResolutionOfComponentResourcesQueue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcmf", function() { return createNgModuleFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcompileComponent", function() { return compileComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcompileDirective", function() { return compileDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcompileNgModule", function() { return compileNgModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcompileNgModuleDefs", function() { return compileNgModuleDefs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcompileNgModuleFactory__POST_R3__", function() { return compileNgModuleFactory__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcompilePipe", function() { return compilePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcreateInjector", function() { return createInjector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcrt", function() { return createRendererType2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdefaultIterableDiffers", function() { return defaultIterableDiffers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdefaultKeyValueDiffers", function() { return defaultKeyValueDiffers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdetectChanges", function() { return detectChanges; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdevModeEqual", function() { return devModeEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdid", function() { return directiveDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵeld", function() { return elementDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵfindLocaleData", function() { return findLocaleData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵflushModuleScopingQueueAsMuchAsPossible", function() { return flushModuleScopingQueueAsMuchAsPossible; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetComponentViewDefinitionFactory", function() { return getComponentViewDefinitionFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetDebugNodeR2", function() { return getDebugNodeR2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetDebugNode__POST_R3__", function() { return getDebugNode__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetDirectives", function() { return getDirectives; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetHostElement", function() { return getHostElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetInjectableDef", function() { return getInjectableDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetLContext", function() { return getLContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetLocaleCurrencyCode", function() { return getLocaleCurrencyCode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetLocalePluralCase", function() { return getLocalePluralCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetModuleFactory__POST_R3__", function() { return getModuleFactory__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetSanitizationBypassType", function() { return getSanitizationBypassType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵglobal", function() { return _global; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinitServicesIfNeeded", function() { return initServicesIfNeeded; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinlineInterpolate", function() { return inlineInterpolate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinterpolate", function() { return interpolate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵisBoundToModule__POST_R3__", function() { return isBoundToModule__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵisDefaultChangeDetectionStrategy", function() { return isDefaultChangeDetectionStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵisListLikeIterable", function() { return isListLikeIterable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵisObservable", function() { return isObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵisPromise", function() { return isPromise; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵivyEnabled", function() { return ivyEnabled; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵmakeDecorator", function() { return makeDecorator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵmarkDirty", function() { return markDirty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵmod", function() { return moduleDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵmpd", function() { return moduleProvideDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵncd", function() { return ngContentDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵnoSideEffects", function() { return noSideEffects; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵnov", function() { return nodeValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵoverrideComponentView", function() { return overrideComponentView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵoverrideProvider", function() { return overrideProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpad", function() { return pureArrayDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpatchComponentDefWithScope", function() { return patchComponentDefWithScope; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpid", function() { return pipeDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpod", function() { return pureObjectDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵppd", function() { return purePipeDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵprd", function() { return providerDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpublishDefaultGlobalUtils", function() { return publishDefaultGlobalUtils; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpublishGlobalUtil", function() { return publishGlobalUtil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵqud", function() { return queryDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵregisterLocaleData", function() { return registerLocaleData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵregisterModuleFactory", function() { return registerModuleFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵregisterNgModuleType", function() { return registerNgModuleType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵrenderComponent", function() { return renderComponent$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵresetCompiledComponents", function() { return resetCompiledComponents; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵresetJitOptions", function() { return resetJitOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵresolveComponentResources", function() { return resolveComponentResources; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵsetClassMetadata", function() { return setClassMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵsetCurrentInjector", function() { return setCurrentInjector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵsetDocument", function() { return setDocument; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵsetLocaleId", function() { return setLocaleId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵstore", function() { return store; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵstringify", function() { return stringify; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵted", function() { return textDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵtransitiveScopesFor", function() { return transitiveScopesFor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵunregisterLocaleData", function() { return unregisterAllLocaleData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵunv", function() { return unwrapValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵunwrapSafeValue", function() { return unwrapSafeValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵvid", function() { return viewDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵwhenRendered", function() { return whenRendered; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵCopyDefinitionFeature", function() { return ɵɵCopyDefinitionFeature; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵInheritDefinitionFeature", function() { return ɵɵInheritDefinitionFeature; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵNgOnChangesFeature", function() { return ɵɵNgOnChangesFeature; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵProvidersFeature", function() { return ɵɵProvidersFeature; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵadvance", function() { return ɵɵadvance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵattribute", function() { return ɵɵattribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵattributeInterpolate1", function() { return ɵɵattributeInterpolate1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵattributeInterpolate2", function() { return ɵɵattributeInterpolate2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵattributeInterpolate3", function() { return ɵɵattributeInterpolate3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵattributeInterpolate4", function() { return ɵɵattributeInterpolate4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵattributeInterpolate5", function() { return ɵɵattributeInterpolate5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵattributeInterpolate6", function() { return ɵɵattributeInterpolate6; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵattributeInterpolate7", function() { return ɵɵattributeInterpolate7; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵattributeInterpolate8", function() { return ɵɵattributeInterpolate8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵattributeInterpolateV", function() { return ɵɵattributeInterpolateV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵclassMap", function() { return ɵɵclassMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵclassMapInterpolate1", function() { return ɵɵclassMapInterpolate1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵclassMapInterpolate2", function() { return ɵɵclassMapInterpolate2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵclassMapInterpolate3", function() { return ɵɵclassMapInterpolate3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵclassMapInterpolate4", function() { return ɵɵclassMapInterpolate4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵclassMapInterpolate5", function() { return ɵɵclassMapInterpolate5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵclassMapInterpolate6", function() { return ɵɵclassMapInterpolate6; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵclassMapInterpolate7", function() { return ɵɵclassMapInterpolate7; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵclassMapInterpolate8", function() { return ɵɵclassMapInterpolate8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵclassMapInterpolateV", function() { return ɵɵclassMapInterpolateV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵclassProp", function() { return ɵɵclassProp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵcontentQuery", function() { return ɵɵcontentQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵdefineComponent", function() { return ɵɵdefineComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵdefineDirective", function() { return ɵɵdefineDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵdefineInjectable", function() { return ɵɵdefineInjectable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵdefineInjector", function() { return ɵɵdefineInjector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵdefineNgModule", function() { return ɵɵdefineNgModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵdefinePipe", function() { return ɵɵdefinePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵdirectiveInject", function() { return ɵɵdirectiveInject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵdisableBindings", function() { return ɵɵdisableBindings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵelement", function() { return ɵɵelement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵelementContainer", function() { return ɵɵelementContainer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵelementContainerEnd", function() { return ɵɵelementContainerEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵelementContainerStart", function() { return ɵɵelementContainerStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵelementEnd", function() { return ɵɵelementEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵelementStart", function() { return ɵɵelementStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵenableBindings", function() { return ɵɵenableBindings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵgetCurrentView", function() { return ɵɵgetCurrentView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵgetFactoryOf", function() { return ɵɵgetFactoryOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵgetInheritedFactory", function() { return ɵɵgetInheritedFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵhostProperty", function() { return ɵɵhostProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵi18n", function() { return ɵɵi18n; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵi18nApply", function() { return ɵɵi18nApply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵi18nAttributes", function() { return ɵɵi18nAttributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵi18nEnd", function() { return ɵɵi18nEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵi18nExp", function() { return ɵɵi18nExp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵi18nPostprocess", function() { return ɵɵi18nPostprocess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵi18nStart", function() { return ɵɵi18nStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵinject", function() { return ɵɵinject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵinjectAttribute", function() { return ɵɵinjectAttribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵinjectPipeChangeDetectorRef", function() { return ɵɵinjectPipeChangeDetectorRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵinvalidFactory", function() { return ɵɵinvalidFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵinvalidFactoryDep", function() { return ɵɵinvalidFactoryDep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵlistener", function() { return ɵɵlistener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵloadQuery", function() { return ɵɵloadQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵnamespaceHTML", function() { return ɵɵnamespaceHTML; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵnamespaceMathML", function() { return ɵɵnamespaceMathML; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵnamespaceSVG", function() { return ɵɵnamespaceSVG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵnextContext", function() { return ɵɵnextContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpipe", function() { return ɵɵpipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpipeBind1", function() { return ɵɵpipeBind1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpipeBind2", function() { return ɵɵpipeBind2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpipeBind3", function() { return ɵɵpipeBind3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpipeBind4", function() { return ɵɵpipeBind4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpipeBindV", function() { return ɵɵpipeBindV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵprojection", function() { return ɵɵprojection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵprojectionDef", function() { return ɵɵprojectionDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵproperty", function() { return ɵɵproperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpropertyInterpolate", function() { return ɵɵpropertyInterpolate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpropertyInterpolate1", function() { return ɵɵpropertyInterpolate1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpropertyInterpolate2", function() { return ɵɵpropertyInterpolate2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpropertyInterpolate3", function() { return ɵɵpropertyInterpolate3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpropertyInterpolate4", function() { return ɵɵpropertyInterpolate4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpropertyInterpolate5", function() { return ɵɵpropertyInterpolate5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpropertyInterpolate6", function() { return ɵɵpropertyInterpolate6; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpropertyInterpolate7", function() { return ɵɵpropertyInterpolate7; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpropertyInterpolate8", function() { return ɵɵpropertyInterpolate8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpropertyInterpolateV", function() { return ɵɵpropertyInterpolateV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpureFunction0", function() { return ɵɵpureFunction0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpureFunction1", function() { return ɵɵpureFunction1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpureFunction2", function() { return ɵɵpureFunction2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpureFunction3", function() { return ɵɵpureFunction3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpureFunction4", function() { return ɵɵpureFunction4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpureFunction5", function() { return ɵɵpureFunction5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpureFunction6", function() { return ɵɵpureFunction6; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpureFunction7", function() { return ɵɵpureFunction7; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpureFunction8", function() { return ɵɵpureFunction8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵpureFunctionV", function() { return ɵɵpureFunctionV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵqueryRefresh", function() { return ɵɵqueryRefresh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵreference", function() { return ɵɵreference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵresolveBody", function() { return ɵɵresolveBody; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵresolveDocument", function() { return ɵɵresolveDocument; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵresolveWindow", function() { return ɵɵresolveWindow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵrestoreView", function() { return ɵɵrestoreView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵsanitizeHtml", function() { return ɵɵsanitizeHtml; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵsanitizeResourceUrl", function() { return ɵɵsanitizeResourceUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵsanitizeScript", function() { return ɵɵsanitizeScript; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵsanitizeStyle", function() { return ɵɵsanitizeStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵsanitizeUrl", function() { return ɵɵsanitizeUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵsanitizeUrlOrResourceUrl", function() { return ɵɵsanitizeUrlOrResourceUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵsetComponentScope", function() { return ɵɵsetComponentScope; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵsetNgModuleScope", function() { return ɵɵsetNgModuleScope; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstaticContentQuery", function() { return ɵɵstaticContentQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstaticViewQuery", function() { return ɵɵstaticViewQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstyleMap", function() { return ɵɵstyleMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstyleMapInterpolate1", function() { return ɵɵstyleMapInterpolate1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstyleMapInterpolate2", function() { return ɵɵstyleMapInterpolate2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstyleMapInterpolate3", function() { return ɵɵstyleMapInterpolate3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstyleMapInterpolate4", function() { return ɵɵstyleMapInterpolate4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstyleMapInterpolate5", function() { return ɵɵstyleMapInterpolate5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstyleMapInterpolate6", function() { return ɵɵstyleMapInterpolate6; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstyleMapInterpolate7", function() { return ɵɵstyleMapInterpolate7; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstyleMapInterpolate8", function() { return ɵɵstyleMapInterpolate8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstyleMapInterpolateV", function() { return ɵɵstyleMapInterpolateV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstyleProp", function() { return ɵɵstyleProp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstylePropInterpolate1", function() { return ɵɵstylePropInterpolate1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstylePropInterpolate2", function() { return ɵɵstylePropInterpolate2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstylePropInterpolate3", function() { return ɵɵstylePropInterpolate3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstylePropInterpolate4", function() { return ɵɵstylePropInterpolate4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstylePropInterpolate5", function() { return ɵɵstylePropInterpolate5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstylePropInterpolate6", function() { return ɵɵstylePropInterpolate6; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstylePropInterpolate7", function() { return ɵɵstylePropInterpolate7; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstylePropInterpolate8", function() { return ɵɵstylePropInterpolate8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵstylePropInterpolateV", function() { return ɵɵstylePropInterpolateV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵsyntheticHostListener", function() { return ɵɵsyntheticHostListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵsyntheticHostProperty", function() { return ɵɵsyntheticHostProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵtemplate", function() { return ɵɵtemplate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵtemplateRefExtractor", function() { return ɵɵtemplateRefExtractor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵtext", function() { return ɵɵtext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵtextInterpolate", function() { return ɵɵtextInterpolate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵtextInterpolate1", function() { return ɵɵtextInterpolate1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵtextInterpolate2", function() { return ɵɵtextInterpolate2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵtextInterpolate3", function() { return ɵɵtextInterpolate3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵtextInterpolate4", function() { return ɵɵtextInterpolate4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵtextInterpolate5", function() { return ɵɵtextInterpolate5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵtextInterpolate6", function() { return ɵɵtextInterpolate6; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵtextInterpolate7", function() { return ɵɵtextInterpolate7; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵtextInterpolate8", function() { return ɵɵtextInterpolate8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵtextInterpolateV", function() { return ɵɵtextInterpolateV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵtrustConstantHtml", function() { return ɵɵtrustConstantHtml; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵtrustConstantResourceUrl", function() { return ɵɵtrustConstantResourceUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵtrustConstantScript", function() { return ɵɵtrustConstantScript; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵɵviewQuery", function() { return ɵɵviewQuery; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "ODXe");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/defineProperty */ "rePB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toArray */ "T5bk");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper */ "kHIg");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "uFwe");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/construct */ "RHh3");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs/operators */ "kU1M");















/**
 * @license Angular v11.0.2
 * (c) 2010-2020 Google LLC. https://angular.io/
 * License: MIT
 */


/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Convince closure compiler that the wrapped function has no side-effects.
 *
 * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to
 * allow us to execute a function but have closure compiler mark the call as no-side-effects.
 * It is important that the return value for the `noSideEffects` function be assigned
 * to something which is retained otherwise the call to `noSideEffects` will be removed by closure
 * compiler.
 */

function noSideEffects(fn) {
  return {
    toString: fn
  }.toString();
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ANNOTATIONS = '__annotations__';
var PARAMETERS = '__parameters__';
var PROP_METADATA = '__prop__metadata__';
/**
 * @suppress {globalThis}
 */

function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {
  return noSideEffects(function () {
    var metaCtor = makeMetadataCtor(props);

    function DecoratorFactory() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      if (this instanceof DecoratorFactory) {
        metaCtor.call.apply(metaCtor, [this].concat(args));
        return this;
      }

      var annotationInstance = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_13__["default"])(DecoratorFactory, args);

      return function TypeDecorator(cls) {
        if (typeFn) typeFn.apply(void 0, [cls].concat(args)); // Use of Object.defineProperty is important since it creates non-enumerable property which
        // prevents the property is copied during subclassing.

        var annotations = cls.hasOwnProperty(ANNOTATIONS) ? cls[ANNOTATIONS] : Object.defineProperty(cls, ANNOTATIONS, {
          value: []
        })[ANNOTATIONS];
        annotations.push(annotationInstance);
        if (additionalProcessing) additionalProcessing(cls);
        return cls;
      };
    }

    if (parentClass) {
      DecoratorFactory.prototype = Object.create(parentClass.prototype);
    }

    DecoratorFactory.prototype.ngMetadataName = name;
    DecoratorFactory.annotationCls = DecoratorFactory;
    return DecoratorFactory;
  });
}

function makeMetadataCtor(props) {
  return function ctor() {
    if (props) {
      var values = props.apply(void 0, arguments);

      for (var propName in values) {
        this[propName] = values[propName];
      }
    }
  };
}

function makeParamDecorator(name, props, parentClass) {
  return noSideEffects(function () {
    var metaCtor = makeMetadataCtor(props);

    function ParamDecoratorFactory() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      if (this instanceof ParamDecoratorFactory) {
        metaCtor.apply(this, args);
        return this;
      }

      var annotationInstance = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_13__["default"])(ParamDecoratorFactory, args);

      ParamDecorator.annotation = annotationInstance;
      return ParamDecorator;

      function ParamDecorator(cls, unusedKey, index) {
        // Use of Object.defineProperty is important since it creates non-enumerable property which
        // prevents the property is copied during subclassing.
        var parameters = cls.hasOwnProperty(PARAMETERS) ? cls[PARAMETERS] : Object.defineProperty(cls, PARAMETERS, {
          value: []
        })[PARAMETERS]; // there might be gaps if some in between parameters do not have annotations.
        // we pad with nulls.

        while (parameters.length <= index) {
          parameters.push(null);
        }

        (parameters[index] = parameters[index] || []).push(annotationInstance);
        return cls;
      }
    }

    if (parentClass) {
      ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);
    }

    ParamDecoratorFactory.prototype.ngMetadataName = name;
    ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;
    return ParamDecoratorFactory;
  });
}

function makePropDecorator(name, props, parentClass, additionalProcessing) {
  return noSideEffects(function () {
    var metaCtor = makeMetadataCtor(props);

    function PropDecoratorFactory() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      if (this instanceof PropDecoratorFactory) {
        metaCtor.apply(this, args);
        return this;
      }

      var decoratorInstance = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_13__["default"])(PropDecoratorFactory, args);

      function PropDecorator(target, name) {
        var constructor = target.constructor; // Use of Object.defineProperty is important because it creates a non-enumerable property
        // which prevents the property from being copied during subclassing.

        var meta = constructor.hasOwnProperty(PROP_METADATA) ? constructor[PROP_METADATA] : Object.defineProperty(constructor, PROP_METADATA, {
          value: {}
        })[PROP_METADATA];
        meta[name] = meta.hasOwnProperty(name) && meta[name] || [];
        meta[name].unshift(decoratorInstance);
        if (additionalProcessing) additionalProcessing.apply(void 0, [target, name].concat(args));
      }

      return PropDecorator;
    }

    if (parentClass) {
      PropDecoratorFactory.prototype = Object.create(parentClass.prototype);
    }

    PropDecoratorFactory.prototype.ngMetadataName = name;
    PropDecoratorFactory.annotationCls = PropDecoratorFactory;
    return PropDecoratorFactory;
  });
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ɵ0 = function ɵ0(token) {
  return {
    token: token
  };
};
/**
 * Inject decorator and metadata.
 *
 * @Annotation
 * @publicApi
 */


var Inject = /*@__PURE__*/makeParamDecorator('Inject', ɵ0);
/**
 * Optional decorator and metadata.
 *
 * @Annotation
 * @publicApi
 */

var Optional = /*@__PURE__*/makeParamDecorator('Optional');
/**
 * Self decorator and metadata.
 *
 * @Annotation
 * @publicApi
 */

var Self = /*@__PURE__*/makeParamDecorator('Self');
/**
 * `SkipSelf` decorator and metadata.
 *
 * @Annotation
 * @publicApi
 */

var SkipSelf = /*@__PURE__*/makeParamDecorator('SkipSelf');
/**
 * Host decorator and metadata.
 *
 * @Annotation
 * @publicApi
 */

var Host = /*@__PURE__*/makeParamDecorator('Host');

var ɵ1 = function ɵ1(attributeName) {
  return {
    attributeName: attributeName
  };
};
/**
 * Attribute decorator and metadata.
 *
 * @Annotation
 * @publicApi
 */


var Attribute = /*@__PURE__*/makeParamDecorator('Attribute', ɵ1);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

function stringify(token) {
  if (typeof token === 'string') {
    return token;
  }

  if (Array.isArray(token)) {
    return '[' + token.map(stringify).join(', ') + ']';
  }

  if (token == null) {
    return '' + token;
  }

  if (token.overriddenName) {
    return "".concat(token.overriddenName);
  }

  if (token.name) {
    return "".concat(token.name);
  }

  var res = token.toString();

  if (res == null) {
    return '' + res;
  }

  var newLineIndex = res.indexOf('\n');
  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);
}
/**
 * Concatenates two strings with separator, allocating new strings only when necessary.
 *
 * @param before before string.
 * @param separator separator string.
 * @param after after string.
 * @returns concatenated string.
 */


function concatStringsWithSpace(before, after) {
  return before == null || before === '' ? after === null ? '' : after : after == null || after === '' ? before : before + ' ' + after;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function assertNumber(actual, msg) {
  if (!(typeof actual === 'number')) {
    throwError(msg, typeof actual, 'number', '===');
  }
}

function assertNumberInRange(actual, minInclusive, maxInclusive) {
  assertNumber(actual, 'Expected a number');
  assertLessThanOrEqual(actual, maxInclusive, 'Expected number to be less than or equal to');
  assertGreaterThanOrEqual(actual, minInclusive, 'Expected number to be greater than or equal to');
}

function assertString(actual, msg) {
  if (!(typeof actual === 'string')) {
    throwError(msg, actual === null ? 'null' : typeof actual, 'string', '===');
  }
}

function assertEqual(actual, expected, msg) {
  if (!(actual == expected)) {
    throwError(msg, actual, expected, '==');
  }
}

function assertNotEqual(actual, expected, msg) {
  if (!(actual != expected)) {
    throwError(msg, actual, expected, '!=');
  }
}

function assertSame(actual, expected, msg) {
  if (!(actual === expected)) {
    throwError(msg, actual, expected, '===');
  }
}

function assertNotSame(actual, expected, msg) {
  if (!(actual !== expected)) {
    throwError(msg, actual, expected, '!==');
  }
}

function assertLessThan(actual, expected, msg) {
  if (!(actual < expected)) {
    throwError(msg, actual, expected, '<');
  }
}

function assertLessThanOrEqual(actual, expected, msg) {
  if (!(actual <= expected)) {
    throwError(msg, actual, expected, '<=');
  }
}

function assertGreaterThan(actual, expected, msg) {
  if (!(actual > expected)) {
    throwError(msg, actual, expected, '>');
  }
}

function assertGreaterThanOrEqual(actual, expected, msg) {
  if (!(actual >= expected)) {
    throwError(msg, actual, expected, '>=');
  }
}

function assertNotDefined(actual, msg) {
  if (actual != null) {
    throwError(msg, actual, null, '==');
  }
}

function assertDefined(actual, msg) {
  if (actual == null) {
    throwError(msg, actual, null, '!=');
  }
}

function throwError(msg, actual, expected, comparison) {
  throw new Error("ASSERTION ERROR: ".concat(msg) + (comparison == null ? '' : " [Expected=> ".concat(expected, " ").concat(comparison, " ").concat(actual, " <=Actual]")));
}

function assertDomNode(node) {
  // If we're in a worker, `Node` will not be defined.
  if (!(typeof Node !== 'undefined' && node instanceof Node) && !(typeof node === 'object' && node != null && node.constructor.name === 'WebWorkerRenderNode')) {
    throwError("The provided value must be an instance of a DOM Node but got ".concat(stringify(node)));
  }
}

function assertIndexInRange(arr, index) {
  assertDefined(arr, 'Array must be defined.');
  var maxLen = arr.length;

  if (index < 0 || index >= maxLen) {
    throwError("Index expected to be less than ".concat(maxLen, " but got ").concat(index));
  }
}

function assertOneOf(value) {
  for (var _len4 = arguments.length, validValues = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
    validValues[_key4 - 1] = arguments[_key4];
  }

  if (validValues.indexOf(value) !== -1) return true;
  throwError("Expected value to be one of ".concat(JSON.stringify(validValues), " but was ").concat(JSON.stringify(value), "."));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function getClosureSafeProperty(objWithPropertyToExtract) {
  for (var key in objWithPropertyToExtract) {
    if (objWithPropertyToExtract[key] === getClosureSafeProperty) {
      return key;
    }
  }

  throw Error('Could not find renamed property on target object.');
}
/**
 * Sets properties on a target object from a source object, but only if
 * the property doesn't already exist on the target object.
 * @param target The target to set properties on
 * @param source The source of the property keys and values to set
 */


function fillProperties(target, source) {
  for (var key in source) {
    if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {
      target[key] = source[key];
    }
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and
 * in which injectors (if any) it will be available.
 *
 * This should be assigned to a static `ɵprov` field on a type, which will then be an
 * `InjectableType`.
 *
 * Options:
 * * `providedIn` determines which injectors will include the injectable, by either associating it
 *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be
 *   provided in the `'root'` injector, which will be the application-level injector in most apps.
 * * `factory` gives the zero argument function which will create an instance of the injectable.
 *   The factory can call `inject` to access the `Injector` and request injection of dependencies.
 *
 * @codeGenApi
 * @publicApi This instruction has been emitted by ViewEngine for some time and is deployed to npm.
 */


function ɵɵdefineInjectable(opts) {
  return {
    token: opts.token,
    providedIn: opts.providedIn || null,
    factory: opts.factory,
    value: undefined
  };
}
/**
 * @deprecated in v8, delete after v10. This API should be used only be generated code, and that
 * code should now use ɵɵdefineInjectable instead.
 * @publicApi
 */


var defineInjectable = ɵɵdefineInjectable;
/**
 * Construct an `InjectorDef` which configures an injector.
 *
 * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an
 * `InjectorType`.
 *
 * Options:
 *
 * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to
 *   create the type must be provided. If that factory function needs to inject arguments, it can
 *   use the `inject` function.
 * * `providers`: an optional array of providers to add to the injector. Each provider must
 *   either have a factory or point to a type which has a `ɵprov` static property (the
 *   type must be an `InjectableType`).
 * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s
 *   whose providers will also be added to the injector. Locally provided types will override
 *   providers from imports.
 *
 * @codeGenApi
 */

function ɵɵdefineInjector(options) {
  return {
    factory: options.factory,
    providers: options.providers || [],
    imports: options.imports || []
  };
}
/**
 * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading
 * inherited value.
 *
 * @param type A type which may have its own (non-inherited) `ɵprov`.
 */


function getInjectableDef(type) {
  return getOwnDefinition(type, NG_PROV_DEF) || getOwnDefinition(type, NG_INJECTABLE_DEF);
}
/**
 * Return definition only if it is defined directly on `type` and is not inherited from a base
 * class of `type`.
 */


function getOwnDefinition(type, field) {
  return type.hasOwnProperty(field) ? type[field] : null;
}
/**
 * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.
 *
 * @param type A type which may have `ɵprov`, via inheritance.
 *
 * @deprecated Will be removed in a future version of Angular, where an error will occur in the
 *     scenario if we find the `ɵprov` on an ancestor only.
 */


function getInheritedInjectableDef(type) {
  var def = type && (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);

  if (def) {
    var typeName = getTypeName(type); // TODO(FW-1307): Re-add ngDevMode when closure can handle it
    // ngDevMode &&

    console.warn("DEPRECATED: DI is instantiating a token \"".concat(typeName, "\" that inherits its @Injectable decorator but does not provide one itself.\n") + "This will become an error in a future version of Angular. Please add @Injectable() to the \"".concat(typeName, "\" class."));
    return def;
  } else {
    return null;
  }
}
/** Gets the name of a type, accounting for some cross-browser differences. */


function getTypeName(type) {
  // `Function.prototype.name` behaves differently between IE and other browsers. In most browsers
  // it'll always return the name of the function itself, no matter how many other functions it
  // inherits from. On IE the function doesn't have its own `name` property, but it takes it from
  // the lowest level in the prototype chain. E.g. if we have `class Foo extends Parent` most
  // browsers will evaluate `Foo.name` to `Foo` while IE will return `Parent`. We work around
  // the issue by converting the function to a string and parsing its name out that way via a regex.
  if (type.hasOwnProperty('name')) {
    return type.name;
  }

  var match = ('' + type).match(/^function\s*([^\s(]+)/);
  return match === null ? '' : match[1];
}
/**
 * Read the injector def type in a way which is immune to accidentally reading inherited value.
 *
 * @param type type which may have an injector def (`ɵinj`)
 */


function getInjectorDef(type) {
  return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ? type[NG_INJ_DEF] : null;
}

var NG_PROV_DEF = /*@__PURE__*/getClosureSafeProperty({
  ɵprov: getClosureSafeProperty
});
var NG_INJ_DEF = /*@__PURE__*/getClosureSafeProperty({
  ɵinj: getClosureSafeProperty
}); // We need to keep these around so we can read off old defs if new defs are unavailable

var NG_INJECTABLE_DEF = /*@__PURE__*/getClosureSafeProperty({
  ngInjectableDef: getClosureSafeProperty
});
var NG_INJECTOR_DEF = /*@__PURE__*/getClosureSafeProperty({
  ngInjectorDef: getClosureSafeProperty
});
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Creates a token that can be used in a DI Provider.
 *
 * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a
 * runtime representation) such as when injecting an interface, callable type, array or
 * parameterized type.
 *
 * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by
 * the `Injector`. This provides additional level of type safety.
 *
 * ```
 * interface MyInterface {...}
 * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));
 * // myInterface is inferred to be MyInterface.
 * ```
 *
 * When creating an `InjectionToken`, you can optionally specify a factory function which returns
 * (possibly by creating) a default value of the parameterized type `T`. This sets up the
 * `InjectionToken` using this factory as a provider as if it was defined explicitly in the
 * application's root injector. If the factory function, which takes zero arguments, needs to inject
 * dependencies, it can do so using the `inject` function. See below for an example.
 *
 * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which
 * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As
 * mentioned above, `'root'` is the default value for `providedIn`.
 *
 * @usageNotes
 * ### Basic Example
 *
 * ### Plain InjectionToken
 *
 * {@example core/di/ts/injector_spec.ts region='InjectionToken'}
 *
 * ### Tree-shakable InjectionToken
 *
 * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}
 *
 *
 * @publicApi
 */

var InjectionToken = /*#__PURE__*/function () {
  function InjectionToken(_desc, options) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, InjectionToken);

    this._desc = _desc;
    /** @internal */

    this.ngMetadataName = 'InjectionToken';
    this.ɵprov = undefined;

    if (typeof options == 'number') {
      (typeof ngDevMode === 'undefined' || ngDevMode) && assertLessThan(options, 0, 'Only negative numbers are supported here'); // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.
      // See `InjectorMarkers`

      this.__NG_ELEMENT_ID__ = options;
    } else if (options !== undefined) {
      this.ɵprov = ɵɵdefineInjectable({
        token: this,
        providedIn: options.providedIn || 'root',
        factory: options.factory
      });
    }
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(InjectionToken, [{
    key: "toString",
    value: function toString() {
      return "InjectionToken ".concat(this._desc);
    }
  }]);

  return InjectionToken;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A DI token that you can use to create a virtual [provider](guide/glossary#provider)
 * that will populate the `entryComponents` field of components and NgModules
 * based on its `useValue` property value.
 * All components that are referenced in the `useValue` value (either directly
 * or in a nested array or map) are added to the `entryComponents` property.
 *
 * @usageNotes
 *
 * The following example shows how the router can populate the `entryComponents`
 * field of an NgModule based on a router configuration that refers
 * to components.
 *
 * ```typescript
 * // helper function inside the router
 * function provideRoutes(routes) {
 *   return [
 *     {provide: ROUTES, useValue: routes},
 *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}
 *   ];
 * }
 *
 * // user code
 * let routes = [
 *   {path: '/root', component: RootComp},
 *   {path: '/teams', component: TeamsComp}
 * ];
 *
 * @NgModule({
 *   providers: [provideRoutes(routes)]
 * })
 * class ModuleWithRoutes {}
 * ```
 *
 * @publicApi
 * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.
 */


var ANALYZE_FOR_ENTRY_COMPONENTS = /*@__PURE__*/new InjectionToken('AnalyzeForEntryComponents');
/**
 * Base class for query metadata.
 *
 * @see `ContentChildren`.
 * @see `ContentChild`.
 * @see `ViewChildren`.
 * @see `ViewChild`.
 *
 * @publicApi
 */

var Query = function Query() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, Query);
};

var ɵ0$1 = function ɵ0$1(selector) {
  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return Object.assign({
    selector: selector,
    first: false,
    isViewQuery: false,
    descendants: false
  }, data);
};
/**
 * ContentChildren decorator and metadata.
 *
 *
 * @Annotation
 * @publicApi
 */


var ContentChildren = /*@__PURE__*/makePropDecorator('ContentChildren', ɵ0$1, Query);

var ɵ1$1 = function ɵ1$1(selector) {
  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return Object.assign({
    selector: selector,
    first: true,
    isViewQuery: false,
    descendants: true
  }, data);
};
/**
 * ContentChild decorator and metadata.
 *
 *
 * @Annotation
 *
 * @publicApi
 */


var ContentChild = /*@__PURE__*/makePropDecorator('ContentChild', ɵ1$1, Query);

var ɵ2 = function ɵ2(selector) {
  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return Object.assign({
    selector: selector,
    first: false,
    isViewQuery: true,
    descendants: true
  }, data);
};
/**
 * ViewChildren decorator and metadata.
 *
 * @Annotation
 * @publicApi
 */


var ViewChildren = /*@__PURE__*/makePropDecorator('ViewChildren', ɵ2, Query);

var ɵ3 = function ɵ3(selector, data) {
  return Object.assign({
    selector: selector,
    first: true,
    isViewQuery: true,
    descendants: true
  }, data);
};
/**
 * ViewChild decorator and metadata.
 *
 * @Annotation
 * @publicApi
 */


var ViewChild = /*@__PURE__*/makePropDecorator('ViewChild', ɵ3, Query);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The strategy that the default change detector uses to detect changes.
 * When set, takes effect the next time change detection is triggered.
 *
 * @see {@link ChangeDetectorRef#usage-notes Change detection usage}
 *
 * @publicApi
 */

var ChangeDetectionStrategy = /*@__PURE__*/function (ChangeDetectionStrategy) {
  /**
   * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated
   * until reactivated by setting the strategy to `Default` (`CheckAlways`).
   * Change detection can still be explicitly invoked.
   * This strategy applies to all child directives and cannot be overridden.
   */
  ChangeDetectionStrategy[ChangeDetectionStrategy["OnPush"] = 0] = "OnPush";
  /**
   * Use the default `CheckAlways` strategy, in which change detection is automatic until
   * explicitly deactivated.
   */

  ChangeDetectionStrategy[ChangeDetectionStrategy["Default"] = 1] = "Default";
  return ChangeDetectionStrategy;
}({});
/**
 * Defines the possible states of the default change detector.
 * @see `ChangeDetectorRef`
 */


var ChangeDetectorStatus = /*@__PURE__*/function (ChangeDetectorStatus) {
  /**
   * A state in which, after calling `detectChanges()`, the change detector
   * state becomes `Checked`, and must be explicitly invoked or reactivated.
   */
  ChangeDetectorStatus[ChangeDetectorStatus["CheckOnce"] = 0] = "CheckOnce";
  /**
   * A state in which change detection is skipped until the change detector mode
   * becomes `CheckOnce`.
   */

  ChangeDetectorStatus[ChangeDetectorStatus["Checked"] = 1] = "Checked";
  /**
   * A state in which change detection continues automatically until explicitly
   * deactivated.
   */

  ChangeDetectorStatus[ChangeDetectorStatus["CheckAlways"] = 2] = "CheckAlways";
  /**
   * A state in which a change detector sub tree is not a part of the main tree and
   * should be skipped.
   */

  ChangeDetectorStatus[ChangeDetectorStatus["Detached"] = 3] = "Detached";
  /**
   * Indicates that the change detector encountered an error checking a binding
   * or calling a directive lifecycle method and is now in an inconsistent state. Change
   * detectors in this state do not detect changes.
   */

  ChangeDetectorStatus[ChangeDetectorStatus["Errored"] = 4] = "Errored";
  /**
   * Indicates that the change detector has been destroyed.
   */

  ChangeDetectorStatus[ChangeDetectorStatus["Destroyed"] = 5] = "Destroyed";
  return ChangeDetectorStatus;
}({});
/**
 * Reports whether a given strategy is currently the default for change detection.
 * @param changeDetectionStrategy The strategy to check.
 * @returns True if the given strategy is the current default, false otherwise.
 * @see `ChangeDetectorStatus`
 * @see `ChangeDetectorRef`
 */


function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {
  return changeDetectionStrategy == null || changeDetectionStrategy === ChangeDetectionStrategy.Default;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var __globalThis = typeof globalThis !== 'undefined' && globalThis;

var __window = typeof window !== 'undefined' && window;

var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && self;

var __global = typeof global !== 'undefined' && global; // Always use __globalThis if available, which is the spec-defined global variable across all
// environments, then fallback to __global first, because in Node tests both __global and
// __window may be defined and _global should be __global in that case.


var _global = __globalThis || __global || __window || __self;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var R3ResolvedDependencyType = /*@__PURE__*/function (R3ResolvedDependencyType) {
  R3ResolvedDependencyType[R3ResolvedDependencyType["Token"] = 0] = "Token";
  R3ResolvedDependencyType[R3ResolvedDependencyType["Attribute"] = 1] = "Attribute";
  R3ResolvedDependencyType[R3ResolvedDependencyType["ChangeDetectorRef"] = 2] = "ChangeDetectorRef";
  R3ResolvedDependencyType[R3ResolvedDependencyType["Invalid"] = 3] = "Invalid";
  return R3ResolvedDependencyType;
}({});

var R3FactoryTarget = /*@__PURE__*/function (R3FactoryTarget) {
  R3FactoryTarget[R3FactoryTarget["Directive"] = 0] = "Directive";
  R3FactoryTarget[R3FactoryTarget["Component"] = 1] = "Component";
  R3FactoryTarget[R3FactoryTarget["Injectable"] = 2] = "Injectable";
  R3FactoryTarget[R3FactoryTarget["Pipe"] = 3] = "Pipe";
  R3FactoryTarget[R3FactoryTarget["NgModule"] = 4] = "NgModule";
  return R3FactoryTarget;
}({});

var ViewEncapsulation = /*@__PURE__*/function (ViewEncapsulation) {
  ViewEncapsulation[ViewEncapsulation["Emulated"] = 0] = "Emulated"; // Historically the 1 value was for `Native` encapsulation which has been removed as of v11.

  ViewEncapsulation[ViewEncapsulation["None"] = 2] = "None";
  ViewEncapsulation[ViewEncapsulation["ShadowDom"] = 3] = "ShadowDom";
  return ViewEncapsulation;
}({});
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function getCompilerFacade() {
  var globalNg = _global['ng'];

  if (!globalNg || !globalNg.ɵcompilerFacade) {
    throw new Error("Angular JIT compilation failed: '@angular/compiler' not loaded!\n" + "  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\n" + "  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\n" + "  - Alternatively provide the compiler with 'import \"@angular/compiler\";' before bootstrapping.");
  }

  return globalNg.ɵcompilerFacade;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var __forward_ref__ = /*@__PURE__*/getClosureSafeProperty({
  __forward_ref__: getClosureSafeProperty
});
/**
 * Allows to refer to references which are not yet defined.
 *
 * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of
 * DI is declared, but not yet defined. It is also used when the `token` which we use when creating
 * a query is not yet defined.
 *
 * @usageNotes
 * ### Example
 * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}
 * @publicApi
 */


function forwardRef(forwardRefFn) {
  forwardRefFn.__forward_ref__ = forwardRef;

  forwardRefFn.toString = function () {
    return stringify(this());
  };

  return forwardRefFn;
}
/**
 * Lazily retrieves the reference value from a forwardRef.
 *
 * Acts as the identity function when given a non-forward-ref value.
 *
 * @usageNotes
 * ### Example
 *
 * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}
 *
 * @see `forwardRef`
 * @publicApi
 */


function resolveForwardRef(type) {
  return isForwardRef(type) ? type() : type;
}
/** Checks whether a function is wrapped by a `forwardRef`. */


function isForwardRef(fn) {
  return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) && fn.__forward_ref__ === forwardRef;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Represents a type that a Component or other object is instances of.
 *
 * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is represented by
 * the `MyCustomComponent` constructor function.
 *
 * @publicApi
 */


var Type = Function;

function isType(v) {
  return typeof v === 'function';
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Equivalent to ES6 spread, add each item to an array.
 *
 * @param items The items to add
 * @param arr The array to which you want to add the items
 */


function addAllToArray(items, arr) {
  for (var i = 0; i < items.length; i++) {
    arr.push(items[i]);
  }
}
/**
 * Flattens an array.
 */


function flatten(list, dst) {
  if (dst === undefined) dst = list;

  for (var i = 0; i < list.length; i++) {
    var item = list[i];

    if (Array.isArray(item)) {
      // we need to inline it.
      if (dst === list) {
        // Our assumption that the list was already flat was wrong and
        // we need to clone flat since we need to write to it.
        dst = list.slice(0, i);
      }

      flatten(item, dst);
    } else if (dst !== list) {
      dst.push(item);
    }
  }

  return dst;
}

function deepForEach(input, fn) {
  input.forEach(function (value) {
    return Array.isArray(value) ? deepForEach(value, fn) : fn(value);
  });
}

function addToArray(arr, index, value) {
  // perf: array.push is faster than array.splice!
  if (index >= arr.length) {
    arr.push(value);
  } else {
    arr.splice(index, 0, value);
  }
}

function removeFromArray(arr, index) {
  // perf: array.pop is faster than array.splice!
  if (index >= arr.length - 1) {
    return arr.pop();
  } else {
    return arr.splice(index, 1)[0];
  }
}

function newArray(size, value) {
  var list = [];

  for (var i = 0; i < size; i++) {
    list.push(value);
  }

  return list;
}
/**
 * Remove item from array (Same as `Array.splice()` but faster.)
 *
 * `Array.splice()` is not as fast because it has to allocate an array for the elements which were
 * removed. This causes memory pressure and slows down code when most of the time we don't
 * care about the deleted items array.
 *
 * https://jsperf.com/fast-array-splice (About 20x faster)
 *
 * @param array Array to splice
 * @param index Index of element in array to remove.
 * @param count Number of items to remove.
 */


function arraySplice(array, index, count) {
  var length = array.length - count;

  while (index < length) {
    array[index] = array[index + count];
    index++;
  }

  while (count--) {
    array.pop(); // shrink the array
  }
}
/**
 * Same as `Array.splice(index, 0, value)` but faster.
 *
 * `Array.splice()` is not fast because it has to allocate an array for the elements which were
 * removed. This causes memory pressure and slows down code when most of the time we don't
 * care about the deleted items array.
 *
 * @param array Array to splice.
 * @param index Index in array where the `value` should be added.
 * @param value Value to add to array.
 */


function arrayInsert(array, index, value) {
  ngDevMode && assertLessThanOrEqual(index, array.length, 'Can\'t insert past array end.');
  var end = array.length;

  while (end > index) {
    var previousEnd = end - 1;
    array[end] = array[previousEnd];
    end = previousEnd;
  }

  array[index] = value;
}
/**
 * Same as `Array.splice2(index, 0, value1, value2)` but faster.
 *
 * `Array.splice()` is not fast because it has to allocate an array for the elements which were
 * removed. This causes memory pressure and slows down code when most of the time we don't
 * care about the deleted items array.
 *
 * @param array Array to splice.
 * @param index Index in array where the `value` should be added.
 * @param value1 Value to add to array.
 * @param value2 Value to add to array.
 */


function arrayInsert2(array, index, value1, value2) {
  ngDevMode && assertLessThanOrEqual(index, array.length, 'Can\'t insert past array end.');
  var end = array.length;

  if (end == index) {
    // inserting at the end.
    array.push(value1, value2);
  } else if (end === 1) {
    // corner case when we have less items in array than we have items to insert.
    array.push(value2, array[0]);
    array[0] = value1;
  } else {
    end--;
    array.push(array[end - 1], array[end]);

    while (end > index) {
      var previousEnd = end - 2;
      array[end] = array[previousEnd];
      end--;
    }

    array[index] = value1;
    array[index + 1] = value2;
  }
}
/**
 * Insert a `value` into an `array` so that the array remains sorted.
 *
 * NOTE:
 * - Duplicates are not allowed, and are ignored.
 * - This uses binary search algorithm for fast inserts.
 *
 * @param array A sorted array to insert into.
 * @param value The value to insert.
 * @returns index of the inserted value.
 */


function arrayInsertSorted(array, value) {
  var index = arrayIndexOfSorted(array, value);

  if (index < 0) {
    // if we did not find it insert it.
    index = ~index;
    arrayInsert(array, index, value);
  }

  return index;
}
/**
 * Remove `value` from a sorted `array`.
 *
 * NOTE:
 * - This uses binary search algorithm for fast removals.
 *
 * @param array A sorted array to remove from.
 * @param value The value to remove.
 * @returns index of the removed value.
 *   - positive index if value found and removed.
 *   - negative index if value not found. (`~index` to get the value where it should have been
 *     inserted)
 */


function arrayRemoveSorted(array, value) {
  var index = arrayIndexOfSorted(array, value);

  if (index >= 0) {
    arraySplice(array, index, 1);
  }

  return index;
}
/**
 * Get an index of an `value` in a sorted `array`.
 *
 * NOTE:
 * - This uses binary search algorithm for fast removals.
 *
 * @param array A sorted array to binary search.
 * @param value The value to look for.
 * @returns index of the value.
 *   - positive index if value found.
 *   - negative index if value not found. (`~index` to get the value where it should have been
 *     located)
 */


function arrayIndexOfSorted(array, value) {
  return _arrayIndexOfSorted(array, value, 0);
}
/**
 * Set a `value` for a `key`.
 *
 * @param keyValueArray to modify.
 * @param key The key to locate or create.
 * @param value The value to set for a `key`.
 * @returns index (always even) of where the value vas set.
 */


function keyValueArraySet(keyValueArray, key, value) {
  var index = keyValueArrayIndexOf(keyValueArray, key);

  if (index >= 0) {
    // if we found it set it.
    keyValueArray[index | 1] = value;
  } else {
    index = ~index;
    arrayInsert2(keyValueArray, index, key, value);
  }

  return index;
}
/**
 * Retrieve a `value` for a `key` (on `undefined` if not found.)
 *
 * @param keyValueArray to search.
 * @param key The key to locate.
 * @return The `value` stored at the `key` location or `undefined if not found.
 */


function keyValueArrayGet(keyValueArray, key) {
  var index = keyValueArrayIndexOf(keyValueArray, key);

  if (index >= 0) {
    // if we found it retrieve it.
    return keyValueArray[index | 1];
  }

  return undefined;
}
/**
 * Retrieve a `key` index value in the array or `-1` if not found.
 *
 * @param keyValueArray to search.
 * @param key The key to locate.
 * @returns index of where the key is (or should have been.)
 *   - positive (even) index if key found.
 *   - negative index if key not found. (`~index` (even) to get the index where it should have
 *     been inserted.)
 */


function keyValueArrayIndexOf(keyValueArray, key) {
  return _arrayIndexOfSorted(keyValueArray, key, 1);
}
/**
 * Delete a `key` (and `value`) from the `KeyValueArray`.
 *
 * @param keyValueArray to modify.
 * @param key The key to locate or delete (if exist).
 * @returns index of where the key was (or should have been.)
 *   - positive (even) index if key found and deleted.
 *   - negative index if key not found. (`~index` (even) to get the index where it should have
 *     been.)
 */


function keyValueArrayDelete(keyValueArray, key) {
  var index = keyValueArrayIndexOf(keyValueArray, key);

  if (index >= 0) {
    // if we found it remove it.
    arraySplice(keyValueArray, index, 2);
  }

  return index;
}
/**
 * INTERNAL: Get an index of an `value` in a sorted `array` by grouping search by `shift`.
 *
 * NOTE:
 * - This uses binary search algorithm for fast removals.
 *
 * @param array A sorted array to binary search.
 * @param value The value to look for.
 * @param shift grouping shift.
 *   - `0` means look at every location
 *   - `1` means only look at every other (even) location (the odd locations are to be ignored as
 *         they are values.)
 * @returns index of the value.
 *   - positive index if value found.
 *   - negative index if value not found. (`~index` to get the value where it should have been
 * inserted)
 */


function _arrayIndexOfSorted(array, value, shift) {
  ngDevMode && assertEqual(Array.isArray(array), true, 'Expecting an array');
  var start = 0;
  var end = array.length >> shift;

  while (end !== start) {
    var middle = start + (end - start >> 1); // find the middle.

    var current = array[middle << shift];

    if (value === current) {
      return middle << shift;
    } else if (current > value) {
      end = middle;
    } else {
      start = middle + 1; // We already searched middle so make it non-inclusive by adding 1
    }
  }

  return ~(end << shift);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/*
 * #########################
 * Attention: These Regular expressions have to hold even if the code is minified!
 * ##########################
 */

/**
 * Regular expression that detects pass-through constructors for ES5 output. This Regex
 * intends to capture the common delegation pattern emitted by TypeScript and Babel. Also
 * it intends to capture the pattern where existing constructors have been downleveled from
 * ES2015 to ES5 using TypeScript w/ downlevel iteration. e.g.
 *
 * ```
 *   function MyClass() {
 *     var _this = _super.apply(this, arguments) || this;
 * ```
 *
 * ```
 *   function MyClass() {
 *     var _this = _super.apply(this, __spread(arguments)) || this;
 * ```
 *
 * More details can be found in: https://github.com/angular/angular/issues/38453.
 */


var ES5_DELEGATE_CTOR = /^function\s+\S+\(\)\s*{[\s\S]+\.apply\(this,\s*(arguments|[^()]+\(arguments\))\)/;
/** Regular expression that detects ES2015 classes which extend from other classes. */

var ES2015_INHERITED_CLASS = /^class\s+[A-Za-z\d$_]*\s*extends\s+[^{]+{/;
/**
 * Regular expression that detects ES2015 classes which extend from other classes and
 * have an explicit constructor defined.
 */

var ES2015_INHERITED_CLASS_WITH_CTOR = /^class\s+[A-Za-z\d$_]*\s*extends\s+[^{]+{[\s\S]*constructor\s*\(/;
/**
 * Regular expression that detects ES2015 classes which extend from other classes
 * and inherit a constructor.
 */

var ES2015_INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\s+[A-Za-z\d$_]*\s*extends\s+[^{]+{[\s\S]*constructor\s*\(\)\s*{\s*super\(\.\.\.arguments\)/;
/**
 * Determine whether a stringified type is a class which delegates its constructor
 * to its parent.
 *
 * This is not trivial since compiled code can actually contain a constructor function
 * even if the original source code did not. For instance, when the child class contains
 * an initialized instance property.
 */

function isDelegateCtor(typeStr) {
  return ES5_DELEGATE_CTOR.test(typeStr) || ES2015_INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) || ES2015_INHERITED_CLASS.test(typeStr) && !ES2015_INHERITED_CLASS_WITH_CTOR.test(typeStr);
}

var ReflectionCapabilities = /*#__PURE__*/function () {
  function ReflectionCapabilities(reflect) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ReflectionCapabilities);

    this._reflect = reflect || _global['Reflect'];
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ReflectionCapabilities, [{
    key: "isReflectionEnabled",
    value: function isReflectionEnabled() {
      return true;
    }
  }, {
    key: "factory",
    value: function factory(t) {
      return function () {
        for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
          args[_key5] = arguments[_key5];
        }

        return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_13__["default"])(t, args);
      };
    }
    /** @internal */

  }, {
    key: "_zipTypesAndAnnotations",
    value: function _zipTypesAndAnnotations(paramTypes, paramAnnotations) {
      var result;

      if (typeof paramTypes === 'undefined') {
        result = newArray(paramAnnotations.length);
      } else {
        result = newArray(paramTypes.length);
      }

      for (var i = 0; i < result.length; i++) {
        // TS outputs Object for parameters without types, while Traceur omits
        // the annotations. For now we preserve the Traceur behavior to aid
        // migration, but this can be revisited.
        if (typeof paramTypes === 'undefined') {
          result[i] = [];
        } else if (paramTypes[i] && paramTypes[i] != Object) {
          result[i] = [paramTypes[i]];
        } else {
          result[i] = [];
        }

        if (paramAnnotations && paramAnnotations[i] != null) {
          result[i] = result[i].concat(paramAnnotations[i]);
        }
      }

      return result;
    }
  }, {
    key: "_ownParameters",
    value: function _ownParameters(type, parentCtor) {
      var typeStr = type.toString(); // If we have no decorators, we only have function.length as metadata.
      // In that case, to detect whether a child class declared an own constructor or not,
      // we need to look inside of that constructor to check whether it is
      // just calling the parent.
      // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439
      // that sets 'design:paramtypes' to []
      // if a class inherits from another class but has no ctor declared itself.

      if (isDelegateCtor(typeStr)) {
        return null;
      } // Prefer the direct API.


      if (type.parameters && type.parameters !== parentCtor.parameters) {
        return type.parameters;
      } // API of tsickle for lowering decorators to properties on the class.


      var tsickleCtorParams = type.ctorParameters;

      if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {
        // Newer tsickle uses a function closure
        // Retain the non-function case for compatibility with older tsickle
        var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;

        var _paramTypes = ctorParameters.map(function (ctorParam) {
          return ctorParam && ctorParam.type;
        });

        var _paramAnnotations = ctorParameters.map(function (ctorParam) {
          return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);
        });

        return this._zipTypesAndAnnotations(_paramTypes, _paramAnnotations);
      } // API for metadata created by invoking the decorators.


      var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];

      var paramTypes = this._reflect && this._reflect.getOwnMetadata && this._reflect.getOwnMetadata('design:paramtypes', type);

      if (paramTypes || paramAnnotations) {
        return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);
      } // If a class has no decorators, at least create metadata
      // based on function.length.
      // Note: We know that this is a real constructor as we checked
      // the content of the constructor above.


      return newArray(type.length);
    }
  }, {
    key: "parameters",
    value: function parameters(type) {
      // Note: only report metadata if we have at least one class decorator
      // to stay in sync with the static reflector.
      if (!isType(type)) {
        return [];
      }

      var parentCtor = getParentCtor(type);

      var parameters = this._ownParameters(type, parentCtor);

      if (!parameters && parentCtor !== Object) {
        parameters = this.parameters(parentCtor);
      }

      return parameters || [];
    }
  }, {
    key: "_ownAnnotations",
    value: function _ownAnnotations(typeOrFunc, parentCtor) {
      // Prefer the direct API.
      if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {
        var annotations = typeOrFunc.annotations;

        if (typeof annotations === 'function' && annotations.annotations) {
          annotations = annotations.annotations;
        }

        return annotations;
      } // API of tsickle for lowering decorators to properties on the class.


      if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {
        return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);
      } // API for metadata created by invoking the decorators.


      if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {
        return typeOrFunc[ANNOTATIONS];
      }

      return null;
    }
  }, {
    key: "annotations",
    value: function annotations(typeOrFunc) {
      if (!isType(typeOrFunc)) {
        return [];
      }

      var parentCtor = getParentCtor(typeOrFunc);
      var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];
      var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];
      return parentAnnotations.concat(ownAnnotations);
    }
  }, {
    key: "_ownPropMetadata",
    value: function _ownPropMetadata(typeOrFunc, parentCtor) {
      // Prefer the direct API.
      if (typeOrFunc.propMetadata && typeOrFunc.propMetadata !== parentCtor.propMetadata) {
        var propMetadata = typeOrFunc.propMetadata;

        if (typeof propMetadata === 'function' && propMetadata.propMetadata) {
          propMetadata = propMetadata.propMetadata;
        }

        return propMetadata;
      } // API of tsickle for lowering decorators to properties on the class.


      if (typeOrFunc.propDecorators && typeOrFunc.propDecorators !== parentCtor.propDecorators) {
        var propDecorators = typeOrFunc.propDecorators;
        var _propMetadata = {};
        Object.keys(propDecorators).forEach(function (prop) {
          _propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);
        });
        return _propMetadata;
      } // API for metadata created by invoking the decorators.


      if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {
        return typeOrFunc[PROP_METADATA];
      }

      return null;
    }
  }, {
    key: "propMetadata",
    value: function propMetadata(typeOrFunc) {
      if (!isType(typeOrFunc)) {
        return {};
      }

      var parentCtor = getParentCtor(typeOrFunc);
      var propMetadata = {};

      if (parentCtor !== Object) {
        var parentPropMetadata = this.propMetadata(parentCtor);
        Object.keys(parentPropMetadata).forEach(function (propName) {
          propMetadata[propName] = parentPropMetadata[propName];
        });
      }

      var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);

      if (ownPropMetadata) {
        Object.keys(ownPropMetadata).forEach(function (propName) {
          var decorators = [];

          if (propMetadata.hasOwnProperty(propName)) {
            decorators.push.apply(decorators, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(propMetadata[propName]));
          }

          decorators.push.apply(decorators, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(ownPropMetadata[propName]));
          propMetadata[propName] = decorators;
        });
      }

      return propMetadata;
    }
  }, {
    key: "ownPropMetadata",
    value: function ownPropMetadata(typeOrFunc) {
      if (!isType(typeOrFunc)) {
        return {};
      }

      return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};
    }
  }, {
    key: "hasLifecycleHook",
    value: function hasLifecycleHook(type, lcProperty) {
      return type instanceof Type && lcProperty in type.prototype;
    }
  }, {
    key: "guards",
    value: function guards(type) {
      return {};
    }
  }, {
    key: "getter",
    value: function getter(name) {
      return new Function('o', 'return o.' + name + ';');
    }
  }, {
    key: "setter",
    value: function setter(name) {
      return new Function('o', 'v', 'return o.' + name + ' = v;');
    }
  }, {
    key: "method",
    value: function method(name) {
      var functionBody = "if (!o.".concat(name, ") throw new Error('\"").concat(name, "\" is undefined');\n        return o.").concat(name, ".apply(o, args);");
      return new Function('o', 'args', functionBody);
    } // There is not a concept of import uri in Js, but this is useful in developing Dart applications.

  }, {
    key: "importUri",
    value: function importUri(type) {
      // StaticSymbol
      if (typeof type === 'object' && type['filePath']) {
        return type['filePath'];
      } // Runtime type


      return "./".concat(stringify(type));
    }
  }, {
    key: "resourceUri",
    value: function resourceUri(type) {
      return "./".concat(stringify(type));
    }
  }, {
    key: "resolveIdentifier",
    value: function resolveIdentifier(name, moduleUrl, members, runtime) {
      return runtime;
    }
  }, {
    key: "resolveEnum",
    value: function resolveEnum(enumIdentifier, name) {
      return enumIdentifier[name];
    }
  }]);

  return ReflectionCapabilities;
}();

function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {
  if (!decoratorInvocations) {
    return [];
  }

  return decoratorInvocations.map(function (decoratorInvocation) {
    var decoratorType = decoratorInvocation.type;
    var annotationCls = decoratorType.annotationCls;
    var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];
    return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_13__["default"])(annotationCls, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(annotationArgs));
  });
}

function getParentCtor(ctor) {
  var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;
  var parentCtor = parentProto ? parentProto.constructor : null; // Note: We always use `Object` as the null value
  // to simplify checking later on.

  return parentCtor || Object;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var _reflect = null;

function getReflect() {
  return _reflect = _reflect || new ReflectionCapabilities();
}

function reflectDependencies(type) {
  return convertDependencies(getReflect().parameters(type));
}

function convertDependencies(deps) {
  var compiler = getCompilerFacade();
  return deps.map(function (dep) {
    return reflectDependency(compiler, dep);
  });
}

function reflectDependency(compiler, dep) {
  var meta = {
    token: null,
    host: false,
    optional: false,
    resolved: compiler.R3ResolvedDependencyType.Token,
    self: false,
    skipSelf: false
  };

  function setTokenAndResolvedType(token) {
    meta.resolved = compiler.R3ResolvedDependencyType.Token;
    meta.token = token;
  }

  if (Array.isArray(dep) && dep.length > 0) {
    for (var j = 0; j < dep.length; j++) {
      var param = dep[j];

      if (param === undefined) {
        // param may be undefined if type of dep is not set by ngtsc
        continue;
      }

      var proto = Object.getPrototypeOf(param);

      if (param instanceof Optional || proto.ngMetadataName === 'Optional') {
        meta.optional = true;
      } else if (param instanceof SkipSelf || proto.ngMetadataName === 'SkipSelf') {
        meta.skipSelf = true;
      } else if (param instanceof Self || proto.ngMetadataName === 'Self') {
        meta.self = true;
      } else if (param instanceof Host || proto.ngMetadataName === 'Host') {
        meta.host = true;
      } else if (param instanceof Inject) {
        meta.token = param.token;
      } else if (param instanceof Attribute) {
        if (param.attributeName === undefined) {
          throw new Error("Attribute name must be defined.");
        }

        meta.token = param.attributeName;
        meta.resolved = compiler.R3ResolvedDependencyType.Attribute;
      } else if (param.__ChangeDetectorRef__ === true) {
        meta.token = param;
        meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;
      } else {
        setTokenAndResolvedType(param);
      }
    }
  } else if (dep === undefined || Array.isArray(dep) && dep.length === 0) {
    meta.token = undefined;
    meta.resolved = R3ResolvedDependencyType.Invalid;
  } else {
    setTokenAndResolvedType(dep);
  }

  return meta;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Used to resolve resource URLs on `@Component` when used with JIT compilation.
 *
 * Example:
 * ```
 * @Component({
 *   selector: 'my-comp',
 *   templateUrl: 'my-comp.html', // This requires asynchronous resolution
 * })
 * class MyComponent{
 * }
 *
 * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process
 * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.
 *
 * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into
 * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.
 *
 * // Use browser's `fetch()` function as the default resource resolution strategy.
 * resolveComponentResources(fetch).then(() => {
 *   // After resolution all URLs have been converted into `template` strings.
 *   renderComponent(MyComponent);
 * });
 *
 * ```
 *
 * NOTE: In AOT the resolution happens during compilation, and so there should be no need
 * to call this method outside JIT mode.
 *
 * @param resourceResolver a function which is responsible for returning a `Promise` to the
 * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.
 */


function resolveComponentResources(resourceResolver) {
  // Store all promises which are fetching the resources.
  var componentResolved = []; // Cache so that we don't fetch the same resource more than once.

  var urlMap = new Map();

  function cachedResourceResolve(url) {
    var promise = urlMap.get(url);

    if (!promise) {
      var resp = resourceResolver(url);
      urlMap.set(url, promise = resp.then(unwrapResponse));
    }

    return promise;
  }

  componentResourceResolutionQueue.forEach(function (component, type) {
    var promises = [];

    if (component.templateUrl) {
      promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {
        component.template = template;
      }));
    }

    var styleUrls = component.styleUrls;
    var styles = component.styles || (component.styles = []);
    var styleOffset = component.styles.length;
    styleUrls && styleUrls.forEach(function (styleUrl, index) {
      styles.push(''); // pre-allocate array.

      promises.push(cachedResourceResolve(styleUrl).then(function (style) {
        styles[styleOffset + index] = style;
        styleUrls.splice(styleUrls.indexOf(styleUrl), 1);

        if (styleUrls.length == 0) {
          component.styleUrls = undefined;
        }
      }));
    });
    var fullyResolved = Promise.all(promises).then(function () {
      return componentDefResolved(type);
    });
    componentResolved.push(fullyResolved);
  });
  clearResolutionOfComponentResourcesQueue();
  return Promise.all(componentResolved).then(function () {
    return undefined;
  });
}

var componentResourceResolutionQueue = /*@__PURE__*/new Map(); // Track when existing ɵcmp for a Type is waiting on resources.

var componentDefPendingResolution = /*@__PURE__*/new Set();

function maybeQueueResolutionOfComponentResources(type, metadata) {
  if (componentNeedsResolution(metadata)) {
    componentResourceResolutionQueue.set(type, metadata);
    componentDefPendingResolution.add(type);
  }
}

function isComponentDefPendingResolution(type) {
  return componentDefPendingResolution.has(type);
}

function componentNeedsResolution(component) {
  return !!(component.templateUrl && !component.hasOwnProperty('template') || component.styleUrls && component.styleUrls.length);
}

function clearResolutionOfComponentResourcesQueue() {
  var old = componentResourceResolutionQueue;
  componentResourceResolutionQueue = new Map();
  return old;
}

function restoreComponentResolutionQueue(queue) {
  componentDefPendingResolution.clear();
  queue.forEach(function (_, type) {
    return componentDefPendingResolution.add(type);
  });
  componentResourceResolutionQueue = queue;
}

function isComponentResourceResolutionQueueEmpty() {
  return componentResourceResolutionQueue.size === 0;
}

function unwrapResponse(response) {
  return typeof response == 'string' ? response : response.text();
}

function componentDefResolved(type) {
  componentDefPendingResolution.delete(type);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Defines template and style encapsulation options available for Component's {@link Component}.
 *
 * See {@link Component#encapsulation encapsulation}.
 *
 * @usageNotes
 * ### Example
 *
 * {@example core/ts/metadata/encapsulation.ts region='longform'}
 *
 * @publicApi
 */


var ViewEncapsulation$1 = /*@__PURE__*/function (ViewEncapsulation) {
  /**
   * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host
   * Element and pre-processing the style rules provided via {@link Component#styles styles} or
   * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all
   * selectors.
   *
   * This is the default option.
   */
  ViewEncapsulation[ViewEncapsulation["Emulated"] = 0] = "Emulated"; // Historically the 1 value was for `Native` encapsulation which has been removed as of v11.

  /**
   * Don't provide any template or style encapsulation.
   */

  ViewEncapsulation[ViewEncapsulation["None"] = 2] = "None";
  /**
   * Use Shadow DOM to encapsulate styles.
   *
   * For the DOM this means using modern [Shadow
   * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and
   * creating a ShadowRoot for Component's Host Element.
   */

  ViewEncapsulation[ViewEncapsulation["ShadowDom"] = 3] = "ShadowDom";
  return ViewEncapsulation;
}({});
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function ngDevModeResetPerfCounters() {
  var locationString = typeof location !== 'undefined' ? location.toString() : '';
  var newCounters = {
    namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,
    firstCreatePass: 0,
    tNode: 0,
    tView: 0,
    rendererCreateTextNode: 0,
    rendererSetText: 0,
    rendererCreateElement: 0,
    rendererAddEventListener: 0,
    rendererSetAttribute: 0,
    rendererRemoveAttribute: 0,
    rendererSetProperty: 0,
    rendererSetClassName: 0,
    rendererAddClass: 0,
    rendererRemoveClass: 0,
    rendererSetStyle: 0,
    rendererRemoveStyle: 0,
    rendererDestroy: 0,
    rendererDestroyNode: 0,
    rendererMoveNode: 0,
    rendererRemoveNode: 0,
    rendererAppendChild: 0,
    rendererInsertBefore: 0,
    rendererCreateComment: 0
  }; // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.

  var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;
  _global['ngDevMode'] = allowNgDevModeTrue && newCounters;
  return newCounters;
}
/**
 * This function checks to see if the `ngDevMode` has been set. If yes,
 * then we honor it, otherwise we default to dev mode with additional checks.
 *
 * The idea is that unless we are doing production build where we explicitly
 * set `ngDevMode == false` we should be helping the developer by providing
 * as much early warning and errors as possible.
 *
 * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions
 * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode
 * is defined for the entire instruction set.
 *
 * When checking `ngDevMode` on toplevel, always init it before referencing it
 * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can
 *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.
 *
 * Details on possible values for `ngDevMode` can be found on its docstring.
 *
 * NOTE:
 * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.
 */


function initNgDevMode() {
  // The below checks are to ensure that calling `initNgDevMode` multiple times does not
  // reset the counters.
  // If the `ngDevMode` is not an object, then it means we have not created the perf counters
  // yet.
  if (typeof ngDevMode === 'undefined' || ngDevMode) {
    if (typeof ngDevMode !== 'object') {
      ngDevModeResetPerfCounters();
    }

    return typeof ngDevMode !== 'undefined' && !!ngDevMode;
  }

  return false;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * This file contains reuseable "empty" symbols that can be used as default return values
 * in different parts of the rendering code. Because the same symbols are returned, this
 * allows for identity checks against these values to be consistently used by the framework
 * code.
 */


var EMPTY_OBJ = {};
var EMPTY_ARRAY = []; // freezing the values prevents any code from accidentally inserting new values in

if ((typeof ngDevMode === 'undefined' || ngDevMode) && /*@__PURE__*/initNgDevMode()) {
  // These property accesses can be ignored because ngDevMode will be set to false
  // when optimizing code and the whole if statement will be dropped.
  // tslint:disable-next-line:no-toplevel-property-access

  /*@__PURE__*/
  Object.freeze(EMPTY_OBJ); // tslint:disable-next-line:no-toplevel-property-access

  /*@__PURE__*/

  Object.freeze(EMPTY_ARRAY);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NG_COMP_DEF = /*@__PURE__*/getClosureSafeProperty({
  ɵcmp: getClosureSafeProperty
});
var NG_DIR_DEF = /*@__PURE__*/getClosureSafeProperty({
  ɵdir: getClosureSafeProperty
});
var NG_PIPE_DEF = /*@__PURE__*/getClosureSafeProperty({
  ɵpipe: getClosureSafeProperty
});
var NG_MOD_DEF = /*@__PURE__*/getClosureSafeProperty({
  ɵmod: getClosureSafeProperty
});
var NG_LOC_ID_DEF = /*@__PURE__*/getClosureSafeProperty({
  ɵloc: getClosureSafeProperty
});
var NG_FACTORY_DEF = /*@__PURE__*/getClosureSafeProperty({
  ɵfac: getClosureSafeProperty
});
/**
 * If a directive is diPublic, bloomAdd sets a property on the type with this constant as
 * the key and the directive's unique ID as the value. This allows us to map directives to their
 * bloom filter bit for DI.
 */
// TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.

var NG_ELEMENT_ID = /*@__PURE__*/getClosureSafeProperty({
  __NG_ELEMENT_ID__: getClosureSafeProperty
});
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var _renderCompCount = 0;
/**
 * Create a component definition object.
 *
 *
 * # Example
 * ```
 * class MyDirective {
 *   // Generated by Angular Template Compiler
 *   // [Symbol] syntax will not be supported by TypeScript until v2.7
 *   static ɵcmp = defineComponent({
 *     ...
 *   });
 * }
 * ```
 * @codeGenApi
 */

function ɵɵdefineComponent(componentDefinition) {
  return noSideEffects(function () {
    // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.
    // See the `initNgDevMode` docstring for more information.
    (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();
    var type = componentDefinition.type;
    var typePrototype = type.prototype;
    var declaredInputs = {};
    var def = {
      type: type,
      providersResolver: null,
      decls: componentDefinition.decls,
      vars: componentDefinition.vars,
      factory: null,
      template: componentDefinition.template || null,
      consts: componentDefinition.consts || null,
      ngContentSelectors: componentDefinition.ngContentSelectors,
      hostBindings: componentDefinition.hostBindings || null,
      hostVars: componentDefinition.hostVars || 0,
      hostAttrs: componentDefinition.hostAttrs || null,
      contentQueries: componentDefinition.contentQueries || null,
      declaredInputs: declaredInputs,
      inputs: null,
      outputs: null,
      exportAs: componentDefinition.exportAs || null,
      onPush: componentDefinition.changeDetection === ChangeDetectionStrategy.OnPush,
      directiveDefs: null,
      pipeDefs: null,
      selectors: componentDefinition.selectors || EMPTY_ARRAY,
      viewQuery: componentDefinition.viewQuery || null,
      features: componentDefinition.features || null,
      data: componentDefinition.data || {},
      // TODO(misko): convert ViewEncapsulation into const enum so that it can be used
      // directly in the next line. Also `None` should be 0 not 2.
      encapsulation: componentDefinition.encapsulation || ViewEncapsulation$1.Emulated,
      id: 'c',
      styles: componentDefinition.styles || EMPTY_ARRAY,
      _: null,
      setInput: null,
      schemas: componentDefinition.schemas || null,
      tView: null
    };
    var directiveTypes = componentDefinition.directives;
    var feature = componentDefinition.features;
    var pipeTypes = componentDefinition.pipes;
    def.id += _renderCompCount++;
    def.inputs = invertObject(componentDefinition.inputs, declaredInputs), def.outputs = invertObject(componentDefinition.outputs), feature && feature.forEach(function (fn) {
      return fn(def);
    });
    def.directiveDefs = directiveTypes ? function () {
      return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes).map(extractDirectiveDef);
    } : null;
    def.pipeDefs = pipeTypes ? function () {
      return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef);
    } : null;
    return def;
  });
}
/**
 * Generated next to NgModules to monkey-patch directive and pipe references onto a component's
 * definition, when generating a direct reference in the component file would otherwise create an
 * import cycle.
 *
 * See [this explanation](https://hackmd.io/Odw80D0pR6yfsOjg_7XCJg?view) for more details.
 *
 * @codeGenApi
 */


function ɵɵsetComponentScope(type, directives, pipes) {
  var def = type.ɵcmp;

  def.directiveDefs = function () {
    return directives.map(extractDirectiveDef);
  };

  def.pipeDefs = function () {
    return pipes.map(extractPipeDef);
  };
}

function extractDirectiveDef(type) {
  var def = getComponentDef(type) || getDirectiveDef(type);

  if (ngDevMode && !def) {
    throw new Error("'".concat(type.name, "' is neither 'ComponentType' or 'DirectiveType'."));
  }

  return def;
}

function extractPipeDef(type) {
  var def = getPipeDef(type);

  if (ngDevMode && !def) {
    throw new Error("'".concat(type.name, "' is not a 'PipeType'."));
  }

  return def;
}

var autoRegisterModuleById = {};
/**
 * @codeGenApi
 */

function ɵɵdefineNgModule(def) {
  var res = {
    type: def.type,
    bootstrap: def.bootstrap || EMPTY_ARRAY,
    declarations: def.declarations || EMPTY_ARRAY,
    imports: def.imports || EMPTY_ARRAY,
    exports: def.exports || EMPTY_ARRAY,
    transitiveCompileScopes: null,
    schemas: def.schemas || null,
    id: def.id || null
  };

  if (def.id != null) {
    noSideEffects(function () {
      autoRegisterModuleById[def.id] = def.type;
    });
  }

  return res;
}
/**
 * Adds the module metadata that is necessary to compute the module's transitive scope to an
 * existing module definition.
 *
 * Scope metadata of modules is not used in production builds, so calls to this function can be
 * marked pure to tree-shake it from the bundle, allowing for all referenced declarations
 * to become eligible for tree-shaking as well.
 *
 * @codeGenApi
 */


function ɵɵsetNgModuleScope(type, scope) {
  return noSideEffects(function () {
    var ngModuleDef = getNgModuleDef(type, true);
    ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;
    ngModuleDef.imports = scope.imports || EMPTY_ARRAY;
    ngModuleDef.exports = scope.exports || EMPTY_ARRAY;
  });
}
/**
 * Inverts an inputs or outputs lookup such that the keys, which were the
 * minified keys, are part of the values, and the values are parsed so that
 * the publicName of the property is the new key
 *
 * e.g. for
 *
 * ```
 * class Comp {
 *   @Input()
 *   propName1: string;
 *
 *   @Input('publicName2')
 *   declaredPropName2: number;
 * }
 * ```
 *
 * will be serialized as
 *
 * ```
 * {
 *   propName1: 'propName1',
 *   declaredPropName2: ['publicName2', 'declaredPropName2'],
 * }
 * ```
 *
 * which is than translated by the minifier as:
 *
 * ```
 * {
 *   minifiedPropName1: 'propName1',
 *   minifiedPropName2: ['publicName2', 'declaredPropName2'],
 * }
 * ```
 *
 * becomes: (public name => minifiedName)
 *
 * ```
 * {
 *  'propName1': 'minifiedPropName1',
 *  'publicName2': 'minifiedPropName2',
 * }
 * ```
 *
 * Optionally the function can take `secondary` which will result in: (public name => declared name)
 *
 * ```
 * {
 *  'propName1': 'propName1',
 *  'publicName2': 'declaredPropName2',
 * }
 * ```
 *

 */


function invertObject(obj, secondary) {
  if (obj == null) return EMPTY_OBJ;
  var newLookup = {};

  for (var minifiedKey in obj) {
    if (obj.hasOwnProperty(minifiedKey)) {
      var publicName = obj[minifiedKey];
      var declaredName = publicName;

      if (Array.isArray(publicName)) {
        declaredName = publicName[1];
        publicName = publicName[0];
      }

      newLookup[publicName] = minifiedKey;

      if (secondary) {
        secondary[publicName] = declaredName;
      }
    }
  }

  return newLookup;
}
/**
 * Create a directive definition object.
 *
 * # Example
 * ```ts
 * class MyDirective {
 *   // Generated by Angular Template Compiler
 *   // [Symbol] syntax will not be supported by TypeScript until v2.7
 *   static ɵdir = ɵɵdefineDirective({
 *     ...
 *   });
 * }
 * ```
 *
 * @codeGenApi
 */


var ɵɵdefineDirective = ɵɵdefineComponent;
/**
 * Create a pipe definition object.
 *
 * # Example
 * ```
 * class MyPipe implements PipeTransform {
 *   // Generated by Angular Template Compiler
 *   static ɵpipe = definePipe({
 *     ...
 *   });
 * }
 * ```
 * @param pipeDef Pipe definition generated by the compiler
 *
 * @codeGenApi
 */

function ɵɵdefinePipe(pipeDef) {
  return {
    type: pipeDef.type,
    name: pipeDef.name,
    factory: null,
    pure: pipeDef.pure !== false,
    onDestroy: pipeDef.type.prototype.ngOnDestroy || null
  };
}
/**
 * The following getter methods retrieve the definition form the type. Currently the retrieval
 * honors inheritance, but in the future we may change the rule to require that definitions are
 * explicit. This would require some sort of migration strategy.
 */


function getComponentDef(type) {
  return type[NG_COMP_DEF] || null;
}

function getDirectiveDef(type) {
  return type[NG_DIR_DEF] || null;
}

function getPipeDef(type) {
  return type[NG_PIPE_DEF] || null;
}

function getNgModuleDef(type, throwNotFound) {
  var ngModuleDef = type[NG_MOD_DEF] || null;

  if (!ngModuleDef && throwNotFound === true) {
    throw new Error("Type ".concat(stringify(type), " does not have '\u0275mod' property."));
  }

  return ngModuleDef;
}

function getNgLocaleIdDef(type) {
  return type[NG_LOC_ID_DEF] || null;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Used for stringify render output in Ivy.
 * Important! This function is very performance-sensitive and we should
 * be extra careful not to introduce megamorphic reads in it.
 */


function renderStringify(value) {
  if (typeof value === 'string') return value;
  if (value == null) return '';
  return '' + value;
}
/**
 * Used to stringify a value so that it can be displayed in an error message.
 * Important! This function contains a megamorphic read and should only be
 * used for error messages.
 */


function stringifyForError(value) {
  if (typeof value === 'function') return value.name || value.toString();

  if (typeof value === 'object' && value != null && typeof value.type === 'function') {
    return value.type.name || value.type.toString();
  }

  return renderStringify(value);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Injection flags for DI.
 *
 * @publicApi
 */


var InjectFlags = /*@__PURE__*/function (InjectFlags) {
  // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.

  /** Check self and check parent injector if needed */
  InjectFlags[InjectFlags["Default"] = 0] = "Default";
  /**
   * Specifies that an injector should retrieve a dependency from any injector until reaching the
   * host element of the current component. (Only used with Element Injector)
   */

  InjectFlags[InjectFlags["Host"] = 1] = "Host";
  /** Don't ascend to ancestors of the node requesting injection. */

  InjectFlags[InjectFlags["Self"] = 2] = "Self";
  /** Skip the node that is requesting injection. */

  InjectFlags[InjectFlags["SkipSelf"] = 4] = "SkipSelf";
  /** Inject `defaultValue` instead if token not found. */

  InjectFlags[InjectFlags["Optional"] = 8] = "Optional";
  return InjectFlags;
}({});
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Current implementation of inject.
 *
 * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed
 * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this
 * way for two reasons:
 *  1. `Injector` should not depend on ivy logic.
 *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.
 */


var _injectImplementation;

function getInjectImplementation() {
  return _injectImplementation;
}
/**
 * Sets the current inject implementation.
 */


function setInjectImplementation(impl) {
  var previous = _injectImplementation;
  _injectImplementation = impl;
  return previous;
}
/**
 * Injects `root` tokens in limp mode.
 *
 * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to
 * `"root"`. This is known as the limp mode injection. In such case the value is stored in the
 * `InjectableDef`.
 */


function injectRootLimpMode(token, notFoundValue, flags) {
  var injectableDef = getInjectableDef(token);

  if (injectableDef && injectableDef.providedIn == 'root') {
    return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() : injectableDef.value;
  }

  if (flags & InjectFlags.Optional) return null;
  if (notFoundValue !== undefined) return notFoundValue;
  throw new Error("Injector: NOT_FOUND [".concat(stringify(token), "]"));
}
/**
 * Assert that `_injectImplementation` is not `fn`.
 *
 * This is useful, to prevent infinite recursion.
 *
 * @param fn Function which it should not equal to
 */


function assertInjectImplementationNotEqual(fn) {
  ngDevMode && assertNotEqual(_injectImplementation, fn, 'Calling ɵɵinject would cause infinite recursion');
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var _THROW_IF_NOT_FOUND = {};
var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;
var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';
var NG_TOKEN_PATH = 'ngTokenPath';
var NEW_LINE = /\n/gm;
var NO_NEW_LINE = 'ɵ';
var SOURCE = '__source';
var ɵ0$2 = getClosureSafeProperty;
var USE_VALUE = /*@__PURE__*/getClosureSafeProperty({
  provide: String,
  useValue: ɵ0$2
});
/**
 * Current injector value used by `inject`.
 * - `undefined`: it is an error to call `inject`
 * - `null`: `inject` can be called but there is no injector (limp-mode).
 * - Injector instance: Use the injector for resolution.
 */

var _currentInjector = undefined;

function setCurrentInjector(injector) {
  var former = _currentInjector;
  _currentInjector = injector;
  return former;
}

function injectInjectorOnly(token) {
  var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : InjectFlags.Default;

  if (_currentInjector === undefined) {
    throw new Error("inject() must be called from an injection context");
  } else if (_currentInjector === null) {
    return injectRootLimpMode(token, undefined, flags);
  } else {
    return _currentInjector.get(token, flags & InjectFlags.Optional ? null : undefined, flags);
  }
}

function ɵɵinject(token) {
  var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : InjectFlags.Default;
  return (getInjectImplementation() || injectInjectorOnly)(resolveForwardRef(token), flags);
}
/**
 * Throws an error indicating that a factory function could not be generated by the compiler for a
 * particular class.
 *
 * This instruction allows the actual error message to be optimized away when ngDevMode is turned
 * off, saving bytes of generated code while still providing a good experience in dev mode.
 *
 * The name of the class is not mentioned here, but will be in the generated factory function name
 * and thus in the stack trace.
 *
 * @codeGenApi
 */


function ɵɵinvalidFactoryDep(index) {
  var msg = ngDevMode ? "This constructor is not compatible with Angular Dependency Injection because its dependency at index ".concat(index, " of the parameter list is invalid.\nThis can happen if the dependency type is a primitive like a string or if an ancestor of this class is missing an Angular decorator.\n\nPlease check that 1) the type for the parameter at index ").concat(index, " is correct and 2) the correct Angular decorators are defined for this class and its ancestors.") : 'invalid';
  throw new Error(msg);
}
/**
 * Injects a token from the currently active injector.
 *
 * Must be used in the context of a factory function such as one defined for an
 * `InjectionToken`. Throws an error if not called from such a context.
 *
 * Within such a factory function, using this function to request injection of a dependency
 * is faster and more type-safe than providing an additional array of dependencies
 * (as has been common with `useFactory` providers).
 *
 * @param token The injection token for the dependency to be injected.
 * @param flags Optional flags that control how injection is executed.
 * The flags correspond to injection strategies that can be specified with
 * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.
 * @returns True if injection is successful, null otherwise.
 *
 * @usageNotes
 *
 * ### Example
 *
 * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}
 *
 * @publicApi
 */


var inject = ɵɵinject;

function injectArgs(types) {
  var args = [];

  for (var i = 0; i < types.length; i++) {
    var arg = resolveForwardRef(types[i]);

    if (Array.isArray(arg)) {
      if (arg.length === 0) {
        throw new Error('Arguments array must have arguments.');
      }

      var type = undefined;
      var flags = InjectFlags.Default;

      for (var j = 0; j < arg.length; j++) {
        var meta = arg[j];

        if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {
          flags |= InjectFlags.Optional;
        } else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {
          flags |= InjectFlags.SkipSelf;
        } else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {
          flags |= InjectFlags.Self;
        } else if (meta instanceof Inject || meta === Inject) {
          type = meta.token;
        } else {
          type = meta;
        }
      }

      args.push(ɵɵinject(type, flags));
    } else {
      args.push(ɵɵinject(arg));
    }
  }

  return args;
}

function catchInjectorError(e, token, injectorErrorName, source) {
  var tokenPath = e[NG_TEMP_TOKEN_PATH];

  if (token[SOURCE]) {
    tokenPath.unshift(token[SOURCE]);
  }

  e.message = formatError('\n' + e.message, tokenPath, injectorErrorName, source);
  e[NG_TOKEN_PATH] = tokenPath;
  e[NG_TEMP_TOKEN_PATH] = null;
  throw e;
}

function formatError(text, obj, injectorErrorName) {
  var source = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  text = text && text.charAt(0) === '\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;
  var context = stringify(obj);

  if (Array.isArray(obj)) {
    context = obj.map(stringify).join(' -> ');
  } else if (typeof obj === 'object') {
    var parts = [];

    for (var key in obj) {
      if (obj.hasOwnProperty(key)) {
        var value = obj[key];
        parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));
      }
    }

    context = "{".concat(parts.join(', '), "}");
  }

  return "".concat(injectorErrorName).concat(source ? '(' + source + ')' : '', "[").concat(context, "]: ").concat(text.replace(NEW_LINE, '\n  '));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Most of the use of `document` in Angular is from within the DI system so it is possible to simply
 * inject the `DOCUMENT` token and are done.
 *
 * Ivy is special because it does not rely upon the DI and must get hold of the document some other
 * way.
 *
 * The solution is to define `getDocument()` and `setDocument()` top-level functions for ivy.
 * Wherever ivy needs the global document, it calls `getDocument()` instead.
 *
 * When running ivy outside of a browser environment, it is necessary to call `setDocument()` to
 * tell ivy what the global `document` is.
 *
 * Angular does this for us in each of the standard platforms (`Browser`, `Server`, and `WebWorker`)
 * by calling `setDocument()` when providing the `DOCUMENT` token.
 */


var DOCUMENT = undefined;
/**
 * Tell ivy what the `document` is for this platform.
 *
 * It is only necessary to call this if the current platform is not a browser.
 *
 * @param document The object representing the global `document` in this environment.
 */

function setDocument(document) {
  DOCUMENT = document;
}
/**
 * Access the object that represents the `document` for this platform.
 *
 * Ivy calls this whenever it needs to access the `document` object.
 * For example to create the renderer or to do sanitization.
 */


function getDocument() {
  if (DOCUMENT !== undefined) {
    return DOCUMENT;
  } else if (typeof document !== 'undefined') {
    return document;
  } // No "document" can be found. This should only happen if we are running ivy outside Angular and
  // the current platform is not a browser. Since this is not a supported scenario at the moment
  // this should not happen in Angular apps.
  // Once we support running ivy outside of Angular we will need to publish `setDocument()` as a
  // public API. Meanwhile we just return `undefined` and let the application fail.


  return undefined;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Below are constants for LView indices to help us look up LView members
// without having to remember the specific indices.
// Uglify will inline these when minifying so there shouldn't be a cost.


var HOST = 0;
var TVIEW = 1;
var FLAGS = 2;
var PARENT = 3;
var NEXT = 4;
var TRANSPLANTED_VIEWS_TO_REFRESH = 5;
var T_HOST = 6;
var CLEANUP = 7;
var CONTEXT = 8;
var INJECTOR = 9;
var RENDERER_FACTORY = 10;
var RENDERER = 11;
var SANITIZER = 12;
var CHILD_HEAD = 13;
var CHILD_TAIL = 14; // FIXME(misko): Investigate if the three declarations aren't all same thing.

var DECLARATION_VIEW = 15;
var DECLARATION_COMPONENT_VIEW = 16;
var DECLARATION_LCONTAINER = 17;
var PREORDER_HOOK_FLAGS = 18;
var QUERIES = 19;
/**
 * Size of LView's header. Necessary to adjust for it when setting slots.
 *
 * IMPORTANT: `HEADER_OFFSET` should only be referred to the in the `ɵɵ*` instructions to translate
 * instruction index into `LView` index. All other indexes should be in the `LView` index space and
 * there should be no need to refer to `HEADER_OFFSET` anywhere else.
 */

var HEADER_OFFSET = 20;
/**
 * Converts `TViewType` into human readable text.
 * Make sure this matches with `TViewType`
 */

var TViewTypeAsString = ['Root', 'Component', 'Embedded']; // Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.

var unusedValueExportToPlacateAjd = 1;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Special location which allows easy identification of type. If we have an array which was
 * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is
 * `LContainer`.
 */

var TYPE = 1;
/**
 * Below are constants for LContainer indices to help us look up LContainer members
 * without having to remember the specific indices.
 * Uglify will inline these when minifying so there shouldn't be a cost.
 */

/**
 * Flag to signify that this `LContainer` may have transplanted views which need to be change
 * detected. (see: `LView[DECLARATION_COMPONENT_VIEW])`.
 *
 * This flag, once set, is never unset for the `LContainer`. This means that when unset we can skip
 * a lot of work in `refreshEmbeddedViews`. But when set we still need to verify
 * that the `MOVED_VIEWS` are transplanted and on-push.
 */

var HAS_TRANSPLANTED_VIEWS = 2; // PARENT, NEXT, TRANSPLANTED_VIEWS_TO_REFRESH are indices 3, 4, and 5
// As we already have these constants in LView, we don't need to re-create them.
// T_HOST is index 6
// We already have this constants in LView, we don't need to re-create it.

var NATIVE = 7;
var VIEW_REFS = 8;
var MOVED_VIEWS = 9;
/**
 * Size of LContainer's header. Represents the index after which all views in the
 * container will be inserted. We need to keep a record of current views so we know
 * which views are already in the DOM (and don't need to be re-added) and so we can
 * remove views from the DOM when they are no longer required.
 */

var CONTAINER_HEADER_OFFSET = 10; // Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.

var unusedValueExportToPlacateAjd$1 = 1;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * True if `value` is `LView`.
 * @param value wrapped value of `RNode`, `LView`, `LContainer`
 */

function isLView(value) {
  return Array.isArray(value) && typeof value[TYPE] === 'object';
}
/**
 * True if `value` is `LContainer`.
 * @param value wrapped value of `RNode`, `LView`, `LContainer`
 */


function isLContainer(value) {
  return Array.isArray(value) && value[TYPE] === true;
}

function isContentQueryHost(tNode) {
  return (tNode.flags & 8
  /* hasContentQuery */
  ) !== 0;
}

function isComponentHost(tNode) {
  return (tNode.flags & 2
  /* isComponentHost */
  ) === 2
  /* isComponentHost */
  ;
}

function isDirectiveHost(tNode) {
  return (tNode.flags & 1
  /* isDirectiveHost */
  ) === 1
  /* isDirectiveHost */
  ;
}

function isComponentDef(def) {
  return def.template !== null;
}

function isRootView(target) {
  return (target[FLAGS] & 512
  /* IsRoot */
  ) !== 0;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// [Assert functions do not constraint type when they are guarded by a truthy
// expression.](https://github.com/microsoft/TypeScript/issues/37295)


function assertTNodeForLView(tNode, lView) {
  assertTNodeForTView(tNode, lView[TVIEW]);
}

function assertTNodeForTView(tNode, tView) {
  assertTNode(tNode);
  tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, tView, 'This TNode does not belong to this TView.');
}

function assertTNode(tNode) {
  assertDefined(tNode, 'TNode must be defined');

  if (!(tNode && typeof tNode === 'object' && tNode.hasOwnProperty('directiveStylingLast'))) {
    throwError('Not of type TNode, got: ' + tNode);
  }
}

function assertTIcu(tIcu) {
  assertDefined(tIcu, 'Expected TIcu to be defined');

  if (!(typeof tIcu.currentCaseLViewIndex === 'number')) {
    throwError('Object is not of TIcu type.');
  }
}

function assertComponentType(actual) {
  var msg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Type passed in is not ComponentType, it does not have \'ɵcmp\' property.';

  if (!getComponentDef(actual)) {
    throwError(msg);
  }
}

function assertNgModuleType(actual) {
  var msg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Type passed in is not NgModuleType, it does not have \'ɵmod\' property.';

  if (!getNgModuleDef(actual)) {
    throwError(msg);
  }
}

function assertCurrentTNodeIsParent(isParent) {
  assertEqual(isParent, true, 'currentTNode should be a parent');
}

function assertHasParent(tNode) {
  assertDefined(tNode, 'currentTNode should exist!');
  assertDefined(tNode.parent, 'currentTNode should have a parent');
}

function assertDataNext(lView, index, arr) {
  if (arr == null) arr = lView;
  assertEqual(arr.length, index, "index ".concat(index, " expected to be at the end of arr (length ").concat(arr.length, ")"));
}

function assertLContainer(value) {
  assertDefined(value, 'LContainer must be defined');
  assertEqual(isLContainer(value), true, 'Expecting LContainer');
}

function assertLViewOrUndefined(value) {
  value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');
}

function assertLView(value) {
  assertDefined(value, 'LView must be defined');
  assertEqual(isLView(value), true, 'Expecting LView');
}

function assertFirstCreatePass(tView, errMessage) {
  assertEqual(tView.firstCreatePass, true, errMessage || 'Should only be called in first create pass.');
}

function assertFirstUpdatePass(tView, errMessage) {
  assertEqual(tView.firstUpdatePass, true, errMessage || 'Should only be called in first update pass.');
}
/**
 * This is a basic sanity check that an object is probably a directive def. DirectiveDef is
 * an interface, so we can't do a direct instanceof check.
 */


function assertDirectiveDef(obj) {
  if (obj.type === undefined || obj.selectors == undefined || obj.inputs === undefined) {
    throwError("Expected a DirectiveDef/ComponentDef and this object does not seem to have the expected shape.");
  }
}

function assertIndexInDeclRange(lView, index) {
  var tView = lView[1];
  assertBetween(HEADER_OFFSET, tView.bindingStartIndex, index);
}

function assertIndexInVarsRange(lView, index) {
  var tView = lView[1];
  assertBetween(tView.bindingStartIndex, tView.expandoStartIndex, index);
}

function assertIndexInExpandoRange(lView, index) {
  var tView = lView[1];
  assertBetween(tView.expandoStartIndex, lView.length, index);
}

function assertBetween(lower, upper, index) {
  if (!(lower <= index && index < upper)) {
    throwError("Index out of range (expecting ".concat(lower, " <= ").concat(index, " < ").concat(upper, ")"));
  }
}
/**
 * This is a basic sanity check that the `injectorIndex` seems to point to what looks like a
 * NodeInjector data structure.
 *
 * @param lView `LView` which should be checked.
 * @param injectorIndex index into the `LView` where the `NodeInjector` is expected.
 */


function assertNodeInjector(lView, injectorIndex) {
  assertIndexInExpandoRange(lView, injectorIndex);
  assertIndexInExpandoRange(lView, injectorIndex + 8
  /* PARENT */
  );
  assertNumber(lView[injectorIndex + 0], 'injectorIndex should point to a bloom filter');
  assertNumber(lView[injectorIndex + 1], 'injectorIndex should point to a bloom filter');
  assertNumber(lView[injectorIndex + 2], 'injectorIndex should point to a bloom filter');
  assertNumber(lView[injectorIndex + 3], 'injectorIndex should point to a bloom filter');
  assertNumber(lView[injectorIndex + 4], 'injectorIndex should point to a bloom filter');
  assertNumber(lView[injectorIndex + 5], 'injectorIndex should point to a bloom filter');
  assertNumber(lView[injectorIndex + 6], 'injectorIndex should point to a bloom filter');
  assertNumber(lView[injectorIndex + 7], 'injectorIndex should point to a bloom filter');
  assertNumber(lView[injectorIndex + 8
  /* PARENT */
  ], 'injectorIndex should point to parent injector');
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
var MATH_ML_NAMESPACE = 'http://www.w3.org/1998/MathML/';
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * This property will be monkey-patched on elements, components and directives
 */

var MONKEY_PATCH_KEY_NAME = '__ngContext__';
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// TODO: cleanup once the code is merged in angular/angular

var RendererStyleFlags3 = /*@__PURE__*/function (RendererStyleFlags3) {
  RendererStyleFlags3[RendererStyleFlags3["Important"] = 1] = "Important";
  RendererStyleFlags3[RendererStyleFlags3["DashCase"] = 2] = "DashCase";
  return RendererStyleFlags3;
}({});
/** Returns whether the `renderer` is a `ProceduralRenderer3` */


function isProceduralRenderer(renderer) {
  return !!renderer.listen;
}

var ɵ0$3 = function ɵ0$3(hostElement, rendererType) {
  return getDocument();
};

var domRendererFactory3 = {
  createRenderer: ɵ0$3
}; // Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.

var unusedValueExportToPlacateAjd$2 = 1;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)
 * in same location in `LView`. This is because we don't want to pre-allocate space for it
 * because the storage is sparse. This file contains utilities for dealing with such data types.
 *
 * How do we know what is stored at a given location in `LView`.
 * - `Array.isArray(value) === false` => `RNode` (The normal storage value)
 * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.
 *   - `typeof value[TYPE] === 'object'` => `LView`
 *      - This happens when we have a component at a given location
 *   - `typeof value[TYPE] === true` => `LContainer`
 *      - This happens when we have `LContainer` binding at a given location.
 *
 *
 * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.
 */

/**
 * Returns `RNode`.
 * @param value wrapped value of `RNode`, `LView`, `LContainer`
 */

function unwrapRNode(value) {
  while (Array.isArray(value)) {
    value = value[HOST];
  }

  return value;
}
/**
 * Returns `LView` or `null` if not found.
 * @param value wrapped value of `RNode`, `LView`, `LContainer`
 */


function unwrapLView(value) {
  while (Array.isArray(value)) {
    // This check is same as `isLView()` but we don't call at as we don't want to call
    // `Array.isArray()` twice and give JITer more work for inlining.
    if (typeof value[TYPE] === 'object') return value;
    value = value[HOST];
  }

  return null;
}
/**
 * Returns `LContainer` or `null` if not found.
 * @param value wrapped value of `RNode`, `LView`, `LContainer`
 */


function unwrapLContainer(value) {
  while (Array.isArray(value)) {
    // This check is same as `isLContainer()` but we don't call at as we don't want to call
    // `Array.isArray()` twice and give JITer more work for inlining.
    if (value[TYPE] === true) return value;
    value = value[HOST];
  }

  return null;
}
/**
 * Retrieves an element value from the provided `viewData`, by unwrapping
 * from any containers, component views, or style contexts.
 */


function getNativeByIndex(index, lView) {
  ngDevMode && assertIndexInRange(lView, index);
  ngDevMode && assertGreaterThanOrEqual(index, HEADER_OFFSET, 'Expected to be past HEADER_OFFSET');
  return unwrapRNode(lView[index]);
}
/**
 * Retrieve an `RNode` for a given `TNode` and `LView`.
 *
 * This function guarantees in dev mode to retrieve a non-null `RNode`.
 *
 * @param tNode
 * @param lView
 */


function getNativeByTNode(tNode, lView) {
  ngDevMode && assertTNodeForLView(tNode, lView);
  ngDevMode && assertIndexInRange(lView, tNode.index);
  var node = unwrapRNode(lView[tNode.index]);
  ngDevMode && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);
  return node;
}
/**
 * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.
 *
 * Some `TNode`s don't have associated `RNode`s. For example `Projection`
 *
 * @param tNode
 * @param lView
 */


function getNativeByTNodeOrNull(tNode, lView) {
  var index = tNode === null ? -1 : tNode.index;

  if (index !== -1) {
    ngDevMode && assertTNodeForLView(tNode, lView);
    var node = unwrapRNode(lView[index]);
    ngDevMode && node !== null && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);
    return node;
  }

  return null;
} // fixme(misko): The return Type should be `TNode|null`


function getTNode(tView, index) {
  ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');
  ngDevMode && assertLessThan(index, tView.data.length, 'wrong index for TNode');
  var tNode = tView.data[index];
  ngDevMode && tNode !== null && assertTNode(tNode);
  return tNode;
}
/** Retrieves a value from any `LView` or `TData`. */


function load(view, index) {
  ngDevMode && assertIndexInRange(view, index);
  return view[index];
}

function getComponentLViewByIndex(nodeIndex, hostView) {
  // Could be an LView or an LContainer. If LContainer, unwrap to find LView.
  ngDevMode && assertIndexInRange(hostView, nodeIndex);
  var slotValue = hostView[nodeIndex];
  var lView = isLView(slotValue) ? slotValue : slotValue[HOST];
  return lView;
}
/**
 * Returns the monkey-patch value data present on the target (which could be
 * a component, directive or a DOM node).
 */


function readPatchedData(target) {
  ngDevMode && assertDefined(target, 'Target expected');
  return target[MONKEY_PATCH_KEY_NAME] || null;
}

function readPatchedLView(target) {
  var value = readPatchedData(target);

  if (value) {
    return Array.isArray(value) ? value : value.lView;
  }

  return null;
}
/** Checks whether a given view is in creation mode */


function isCreationMode(view) {
  return (view[FLAGS] & 4
  /* CreationMode */
  ) === 4
  /* CreationMode */
  ;
}
/**
 * Returns a boolean for whether the view is attached to the change detection tree.
 *
 * Note: This determines whether a view should be checked, not whether it's inserted
 * into a container. For that, you'll want `viewAttachedToContainer` below.
 */


function viewAttachedToChangeDetector(view) {
  return (view[FLAGS] & 128
  /* Attached */
  ) === 128
  /* Attached */
  ;
}
/** Returns a boolean for whether the view is attached to a container. */


function viewAttachedToContainer(view) {
  return isLContainer(view[PARENT]);
}

function getConstant(consts, index) {
  if (index === null || index === undefined) return null;
  ngDevMode && assertIndexInRange(consts, index);
  return consts[index];
}
/**
 * Resets the pre-order hook flags of the view.
 * @param lView the LView on which the flags are reset
 */


function resetPreOrderHookFlags(lView) {
  lView[PREORDER_HOOK_FLAGS] = 0;
}
/**
 * Updates the `TRANSPLANTED_VIEWS_TO_REFRESH` counter on the `LContainer` as well as the parents
 * whose
 *  1. counter goes from 0 to 1, indicating that there is a new child that has a view to refresh
 *  or
 *  2. counter goes from 1 to 0, indicating there are no more descendant views to refresh
 */


function updateTransplantedViewCount(lContainer, amount) {
  lContainer[TRANSPLANTED_VIEWS_TO_REFRESH] += amount;
  var viewOrContainer = lContainer;
  var parent = lContainer[PARENT];

  while (parent !== null && (amount === 1 && viewOrContainer[TRANSPLANTED_VIEWS_TO_REFRESH] === 1 || amount === -1 && viewOrContainer[TRANSPLANTED_VIEWS_TO_REFRESH] === 0)) {
    parent[TRANSPLANTED_VIEWS_TO_REFRESH] += amount;
    viewOrContainer = parent;
    parent = parent[PARENT];
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var instructionState = {
  lFrame: /*@__PURE__*/createLFrame(null),
  bindingsEnabled: true,
  isInCheckNoChangesMode: false
};
/**
 * Returns true if the instruction state stack is empty.
 *
 * Intended to be called from tests only (tree shaken otherwise).
 */

function specOnlyIsInstructionStateEmpty() {
  return instructionState.lFrame.parent === null;
}

function getElementDepthCount() {
  return instructionState.lFrame.elementDepthCount;
}

function increaseElementDepthCount() {
  instructionState.lFrame.elementDepthCount++;
}

function decreaseElementDepthCount() {
  instructionState.lFrame.elementDepthCount--;
}

function getBindingsEnabled() {
  return instructionState.bindingsEnabled;
}
/**
 * Enables directive matching on elements.
 *
 *  * Example:
 * ```
 * <my-comp my-directive>
 *   Should match component / directive.
 * </my-comp>
 * <div ngNonBindable>
 *   <!-- ɵɵdisableBindings() -->
 *   <my-comp my-directive>
 *     Should not match component / directive because we are in ngNonBindable.
 *   </my-comp>
 *   <!-- ɵɵenableBindings() -->
 * </div>
 * ```
 *
 * @codeGenApi
 */


function ɵɵenableBindings() {
  instructionState.bindingsEnabled = true;
}
/**
 * Disables directive matching on element.
 *
 *  * Example:
 * ```
 * <my-comp my-directive>
 *   Should match component / directive.
 * </my-comp>
 * <div ngNonBindable>
 *   <!-- ɵɵdisableBindings() -->
 *   <my-comp my-directive>
 *     Should not match component / directive because we are in ngNonBindable.
 *   </my-comp>
 *   <!-- ɵɵenableBindings() -->
 * </div>
 * ```
 *
 * @codeGenApi
 */


function ɵɵdisableBindings() {
  instructionState.bindingsEnabled = false;
}
/**
 * Return the current `LView`.
 */


function getLView() {
  return instructionState.lFrame.lView;
}
/**
 * Return the current `TView`.
 */


function getTView() {
  return instructionState.lFrame.tView;
}
/**
 * Restores `contextViewData` to the given OpaqueViewState instance.
 *
 * Used in conjunction with the getCurrentView() instruction to save a snapshot
 * of the current view and restore it when listeners are invoked. This allows
 * walking the declaration view tree in listeners to get vars from parent views.
 *
 * @param viewToRestore The OpaqueViewState instance to restore.
 *
 * @codeGenApi
 */


function ɵɵrestoreView(viewToRestore) {
  instructionState.lFrame.contextLView = viewToRestore;
}

function getCurrentTNode() {
  var currentTNode = getCurrentTNodePlaceholderOk();

  while (currentTNode !== null && currentTNode.type === 64
  /* Placeholder */
  ) {
    currentTNode = currentTNode.parent;
  }

  return currentTNode;
}

function getCurrentTNodePlaceholderOk() {
  return instructionState.lFrame.currentTNode;
}

function getCurrentParentTNode() {
  var lFrame = instructionState.lFrame;
  var currentTNode = lFrame.currentTNode;
  return lFrame.isParent ? currentTNode : currentTNode.parent;
}

function setCurrentTNode(tNode, isParent) {
  ngDevMode && tNode && assertTNodeForTView(tNode, instructionState.lFrame.tView);
  var lFrame = instructionState.lFrame;
  lFrame.currentTNode = tNode;
  lFrame.isParent = isParent;
}

function isCurrentTNodeParent() {
  return instructionState.lFrame.isParent;
}

function setCurrentTNodeAsNotParent() {
  instructionState.lFrame.isParent = false;
}

function setCurrentTNodeAsParent() {
  instructionState.lFrame.isParent = true;
}

function getContextLView() {
  return instructionState.lFrame.contextLView;
}

function isInCheckNoChangesMode() {
  // TODO(misko): remove this from the LView since it is ngDevMode=true mode only.
  return instructionState.isInCheckNoChangesMode;
}

function setIsInCheckNoChangesMode(mode) {
  instructionState.isInCheckNoChangesMode = mode;
} // top level variables should not be exported for performance reasons (PERF_NOTES.md)


function getBindingRoot() {
  var lFrame = instructionState.lFrame;
  var index = lFrame.bindingRootIndex;

  if (index === -1) {
    index = lFrame.bindingRootIndex = lFrame.tView.bindingStartIndex;
  }

  return index;
}

function getBindingIndex() {
  return instructionState.lFrame.bindingIndex;
}

function setBindingIndex(value) {
  return instructionState.lFrame.bindingIndex = value;
}

function nextBindingIndex() {
  return instructionState.lFrame.bindingIndex++;
}

function incrementBindingIndex(count) {
  var lFrame = instructionState.lFrame;
  var index = lFrame.bindingIndex;
  lFrame.bindingIndex = lFrame.bindingIndex + count;
  return index;
}

function isInI18nBlock() {
  return instructionState.lFrame.inI18n;
}

function setInI18nBlock(isInI18nBlock) {
  instructionState.lFrame.inI18n = isInI18nBlock;
}
/**
 * Set a new binding root index so that host template functions can execute.
 *
 * Bindings inside the host template are 0 index. But because we don't know ahead of time
 * how many host bindings we have we can't pre-compute them. For this reason they are all
 * 0 index and we just shift the root so that they match next available location in the LView.
 *
 * @param bindingRootIndex Root index for `hostBindings`
 * @param currentDirectiveIndex `TData[currentDirectiveIndex]` will point to the current directive
 *        whose `hostBindings` are being processed.
 */


function setBindingRootForHostBindings(bindingRootIndex, currentDirectiveIndex) {
  var lFrame = instructionState.lFrame;
  lFrame.bindingIndex = lFrame.bindingRootIndex = bindingRootIndex;
  setCurrentDirectiveIndex(currentDirectiveIndex);
}
/**
 * When host binding is executing this points to the directive index.
 * `TView.data[getCurrentDirectiveIndex()]` is `DirectiveDef`
 * `LView[getCurrentDirectiveIndex()]` is directive instance.
 */


function getCurrentDirectiveIndex() {
  return instructionState.lFrame.currentDirectiveIndex;
}
/**
 * Sets an index of a directive whose `hostBindings` are being processed.
 *
 * @param currentDirectiveIndex `TData` index where current directive instance can be found.
 */


function setCurrentDirectiveIndex(currentDirectiveIndex) {
  instructionState.lFrame.currentDirectiveIndex = currentDirectiveIndex;
}
/**
 * Retrieve the current `DirectiveDef` which is active when `hostBindings` instruction is being
 * executed.
 *
 * @param tData Current `TData` where the `DirectiveDef` will be looked up at.
 */


function getCurrentDirectiveDef(tData) {
  var currentDirectiveIndex = instructionState.lFrame.currentDirectiveIndex;
  return currentDirectiveIndex === -1 ? null : tData[currentDirectiveIndex];
}

function getCurrentQueryIndex() {
  return instructionState.lFrame.currentQueryIndex;
}

function setCurrentQueryIndex(value) {
  instructionState.lFrame.currentQueryIndex = value;
}
/**
 * Returns a `TNode` of the location where the current `LView` is declared at.
 *
 * @param lView an `LView` that we want to find parent `TNode` for.
 */


function getDeclarationTNode(lView) {
  var tView = lView[TVIEW]; // Return the declaration parent for embedded views

  if (tView.type === 2
  /* Embedded */
  ) {
      ngDevMode && assertDefined(tView.declTNode, 'Embedded TNodes should have declaration parents.');
      return tView.declTNode;
    } // Components don't have `TView.declTNode` because each instance of component could be
  // inserted in different location, hence `TView.declTNode` is meaningless.
  // Falling back to `T_HOST` in case we cross component boundary.


  if (tView.type === 1
  /* Component */
  ) {
      return lView[T_HOST];
    } // Remaining TNode type is `TViewType.Root` which doesn't have a parent TNode.


  return null;
}
/**
 * This is a light weight version of the `enterView` which is needed by the DI system.
 *
 * @param lView `LView` location of the DI context.
 * @param tNode `TNode` for DI context
 * @param flags DI context flags. if `SkipSelf` flag is set than we walk up the declaration
 *     tree from `tNode`  until we find parent declared `TElementNode`.
 * @returns `true` if we have successfully entered DI associated with `tNode` (or with declared
 *     `TNode` if `flags` has  `SkipSelf`). Failing to enter DI implies that no associated
 *     `NodeInjector` can be found and we should instead use `ModuleInjector`.
 *     - If `true` than this call must be fallowed by `leaveDI`
 *     - If `false` than this call failed and we should NOT call `leaveDI`
 */


function enterDI(lView, tNode, flags) {
  ngDevMode && assertLViewOrUndefined(lView);

  if (flags & InjectFlags.SkipSelf) {
    ngDevMode && assertTNodeForTView(tNode, lView[TVIEW]);
    var parentTNode = tNode;
    var parentLView = lView;

    while (true) {
      ngDevMode && assertDefined(parentTNode, 'Parent TNode should be defined');
      parentTNode = parentTNode.parent;

      if (parentTNode === null && !(flags & InjectFlags.Host)) {
        parentTNode = getDeclarationTNode(parentLView);
        if (parentTNode === null) break; // In this case, a parent exists and is definitely an element. So it will definitely
        // have an existing lView as the declaration view, which is why we can assume it's defined.

        ngDevMode && assertDefined(parentLView, 'Parent LView should be defined');
        parentLView = parentLView[DECLARATION_VIEW]; // In Ivy there are Comment nodes that correspond to ngIf and NgFor embedded directives
        // We want to skip those and look only at Elements and ElementContainers to ensure
        // we're looking at true parent nodes, and not content or other types.

        if (parentTNode.type & (2
        /* Element */
        | 8
        /* ElementContainer */
        )) {
          break;
        }
      } else {
        break;
      }
    }

    if (parentTNode === null) {
      // If we failed to find a parent TNode this means that we should use module injector.
      return false;
    } else {
      tNode = parentTNode;
      lView = parentLView;
    }
  }

  ngDevMode && assertTNodeForLView(tNode, lView);
  var lFrame = instructionState.lFrame = allocLFrame();
  lFrame.currentTNode = tNode;
  lFrame.lView = lView;
  return true;
}
/**
 * Swap the current lView with a new lView.
 *
 * For performance reasons we store the lView in the top level of the module.
 * This way we minimize the number of properties to read. Whenever a new view
 * is entered we have to store the lView for later, and when the view is
 * exited the state has to be restored
 *
 * @param newView New lView to become active
 * @returns the previously active lView;
 */


function enterView(newView) {
  ngDevMode && assertNotEqual(newView[0], newView[1], '????');
  ngDevMode && assertLViewOrUndefined(newView);
  var newLFrame = allocLFrame();

  if (ngDevMode) {
    assertEqual(newLFrame.isParent, true, 'Expected clean LFrame');
    assertEqual(newLFrame.lView, null, 'Expected clean LFrame');
    assertEqual(newLFrame.tView, null, 'Expected clean LFrame');
    assertEqual(newLFrame.selectedIndex, -1, 'Expected clean LFrame');
    assertEqual(newLFrame.elementDepthCount, 0, 'Expected clean LFrame');
    assertEqual(newLFrame.currentDirectiveIndex, -1, 'Expected clean LFrame');
    assertEqual(newLFrame.currentNamespace, null, 'Expected clean LFrame');
    assertEqual(newLFrame.bindingRootIndex, -1, 'Expected clean LFrame');
    assertEqual(newLFrame.currentQueryIndex, 0, 'Expected clean LFrame');
  }

  var tView = newView[TVIEW];
  instructionState.lFrame = newLFrame;
  ngDevMode && tView.firstChild && assertTNodeForTView(tView.firstChild, tView);
  newLFrame.currentTNode = tView.firstChild;
  newLFrame.lView = newView;
  newLFrame.tView = tView;
  newLFrame.contextLView = newView;
  newLFrame.bindingIndex = tView.bindingStartIndex;
  newLFrame.inI18n = false;
}
/**
 * Allocates next free LFrame. This function tries to reuse the `LFrame`s to lower memory pressure.
 */


function allocLFrame() {
  var currentLFrame = instructionState.lFrame;
  var childLFrame = currentLFrame === null ? null : currentLFrame.child;
  var newLFrame = childLFrame === null ? createLFrame(currentLFrame) : childLFrame;
  return newLFrame;
}

function createLFrame(parent) {
  var lFrame = {
    currentTNode: null,
    isParent: true,
    lView: null,
    tView: null,
    selectedIndex: -1,
    contextLView: null,
    elementDepthCount: 0,
    currentNamespace: null,
    currentDirectiveIndex: -1,
    bindingRootIndex: -1,
    bindingIndex: -1,
    currentQueryIndex: 0,
    parent: parent,
    child: null,
    inI18n: false
  };
  parent !== null && (parent.child = lFrame); // link the new LFrame for reuse.

  return lFrame;
}
/**
 * A lightweight version of leave which is used with DI.
 *
 * This function only resets `currentTNode` and `LView` as those are the only properties
 * used with DI (`enterDI()`).
 *
 * NOTE: This function is reexported as `leaveDI`. However `leaveDI` has return type of `void` where
 * as `leaveViewLight` has `LFrame`. This is so that `leaveViewLight` can be used in `leaveView`.
 */


function leaveViewLight() {
  var oldLFrame = instructionState.lFrame;
  instructionState.lFrame = oldLFrame.parent;
  oldLFrame.currentTNode = null;
  oldLFrame.lView = null;
  return oldLFrame;
}
/**
 * This is a lightweight version of the `leaveView` which is needed by the DI system.
 *
 * NOTE: this function is an alias so that we can change the type of the function to have `void`
 * return type.
 */


var leaveDI = leaveViewLight;
/**
 * Leave the current `LView`
 *
 * This pops the `LFrame` with the associated `LView` from the stack.
 *
 * IMPORTANT: We must zero out the `LFrame` values here otherwise they will be retained. This is
 * because for performance reasons we don't release `LFrame` but rather keep it for next use.
 */

function leaveView() {
  var oldLFrame = leaveViewLight();
  oldLFrame.isParent = true;
  oldLFrame.tView = null;
  oldLFrame.selectedIndex = -1;
  oldLFrame.contextLView = null;
  oldLFrame.elementDepthCount = 0;
  oldLFrame.currentDirectiveIndex = -1;
  oldLFrame.currentNamespace = null;
  oldLFrame.bindingRootIndex = -1;
  oldLFrame.bindingIndex = -1;
  oldLFrame.currentQueryIndex = 0;
}

function nextContextImpl(level) {
  var contextLView = instructionState.lFrame.contextLView = walkUpViews(level, instructionState.lFrame.contextLView);
  return contextLView[CONTEXT];
}

function walkUpViews(nestingLevel, currentView) {
  while (nestingLevel > 0) {
    ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');
    currentView = currentView[DECLARATION_VIEW];
    nestingLevel--;
  }

  return currentView;
}
/**
 * Gets the currently selected element index.
 *
 * Used with {@link property} instruction (and more in the future) to identify the index in the
 * current `LView` to act on.
 */


function getSelectedIndex() {
  return instructionState.lFrame.selectedIndex;
}
/**
 * Sets the most recent index passed to {@link select}
 *
 * Used with {@link property} instruction (and more in the future) to identify the index in the
 * current `LView` to act on.
 *
 * (Note that if an "exit function" was set earlier (via `setElementExitFn()`) then that will be
 * run if and when the provided `index` value is different from the current selected index value.)
 */


function setSelectedIndex(index) {
  ngDevMode && index !== -1 && assertGreaterThanOrEqual(index, HEADER_OFFSET, 'Index must be past HEADER_OFFSET (or -1).');
  ngDevMode && assertLessThan(index, instructionState.lFrame.lView.length, 'Can\'t set index passed end of LView');
  instructionState.lFrame.selectedIndex = index;
}
/**
 * Gets the `tNode` that represents currently selected element.
 */


function getSelectedTNode() {
  var lFrame = instructionState.lFrame;
  return getTNode(lFrame.tView, lFrame.selectedIndex);
}
/**
 * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.
 *
 * @codeGenApi
 */


function ɵɵnamespaceSVG() {
  instructionState.lFrame.currentNamespace = SVG_NAMESPACE;
}
/**
 * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.
 *
 * @codeGenApi
 */


function ɵɵnamespaceMathML() {
  instructionState.lFrame.currentNamespace = MATH_ML_NAMESPACE;
}
/**
 * Sets the namespace used to create elements to `null`, which forces element creation to use
 * `createElement` rather than `createElementNS`.
 *
 * @codeGenApi
 */


function ɵɵnamespaceHTML() {
  namespaceHTMLInternal();
}
/**
 * Sets the namespace used to create elements to `null`, which forces element creation to use
 * `createElement` rather than `createElementNS`.
 */


function namespaceHTMLInternal() {
  instructionState.lFrame.currentNamespace = null;
}

function getNamespace() {
  return instructionState.lFrame.currentNamespace;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The Trusted Types policy, or null if Trusted Types are not
 * enabled/supported, or undefined if the policy has not been created yet.
 */


var policy;
/**
 * Returns the Trusted Types policy, or null if Trusted Types are not
 * enabled/supported. The first call to this function will create the policy.
 */

function getPolicy() {
  if (policy === undefined) {
    policy = null;

    if (_global.trustedTypes) {
      try {
        policy = _global.trustedTypes.createPolicy('angular', {
          createHTML: function createHTML(s) {
            return s;
          },
          createScript: function createScript(s) {
            return s;
          },
          createScriptURL: function createScriptURL(s) {
            return s;
          }
        });
      } catch (_a) {// trustedTypes.createPolicy throws if called with a name that is
        // already registered, even in report-only mode. Until the API changes,
        // catch the error not to break the applications functionally. In such
        // cases, the code will fall back to using strings.
      }
    }
  }

  return policy;
}
/**
 * Unsafely promote a string to a TrustedHTML, falling back to strings when
 * Trusted Types are not available.
 * @security This is a security-sensitive function; any use of this function
 * must go through security review. In particular, it must be assured that the
 * provided string will never cause an XSS vulnerability if used in a context
 * that will be interpreted as HTML by a browser, e.g. when assigning to
 * element.innerHTML.
 */


function trustedHTMLFromString(html) {
  var _a;

  return ((_a = getPolicy()) === null || _a === void 0 ? void 0 : _a.createHTML(html)) || html;
}
/**
 * Unsafely promote a string to a TrustedScript, falling back to strings when
 * Trusted Types are not available.
 * @security In particular, it must be assured that the provided string will
 * never cause an XSS vulnerability if used in a context that will be
 * interpreted and executed as a script by a browser, e.g. when calling eval.
 */


function trustedScriptFromString(script) {
  var _a;

  return ((_a = getPolicy()) === null || _a === void 0 ? void 0 : _a.createScript(script)) || script;
}
/**
 * Unsafely promote a string to a TrustedScriptURL, falling back to strings
 * when Trusted Types are not available.
 * @security This is a security-sensitive function; any use of this function
 * must go through security review. In particular, it must be assured that the
 * provided string will never cause an XSS vulnerability if used in a context
 * that will cause a browser to load and execute a resource, e.g. when
 * assigning to script.src.
 */


function trustedScriptURLFromString(url) {
  var _a;

  return ((_a = getPolicy()) === null || _a === void 0 ? void 0 : _a.createScriptURL(url)) || url;
}
/**
 * Unsafely call the Function constructor with the given string arguments. It
 * is only available in development mode, and should be stripped out of
 * production code.
 * @security This is a security-sensitive function; any use of this function
 * must go through security review. In particular, it must be assured that it
 * is only called from development code, as use in production code can lead to
 * XSS vulnerabilities.
 */


function newTrustedFunctionForDev() {
  if (typeof ngDevMode === 'undefined') {
    throw new Error('newTrustedFunctionForDev should never be called in production');
  }

  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
    args[_key6] = arguments[_key6];
  }

  if (!_global.trustedTypes) {
    // In environments that don't support Trusted Types, fall back to the most
    // straightforward implementation:
    return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_13__["default"])(Function, args);
  } // Chrome currently does not support passing TrustedScript to the Function
  // constructor. The following implements the workaround proposed on the page
  // below, where the Chromium bug is also referenced:
  // https://github.com/w3c/webappsec-trusted-types/wiki/Trusted-Types-for-function-constructor


  var fnArgs = args.slice(0, -1).join(',');
  var fnBody = args.pop().toString();
  var body = "(function anonymous(".concat(fnArgs, "\n) { ").concat(fnBody, "\n})"); // Using eval directly confuses the compiler and prevents this module from
  // being stripped out of JS binaries even if not used. The global['eval']
  // indirection fixes that.

  var fn = _global['eval'](trustedScriptFromString(body)); // To completely mimic the behavior of calling "new Function", two more
  // things need to happen:
  // 1. Stringifying the resulting function should return its source code


  fn.toString = function () {
    return body;
  }; // 2. When calling the resulting function, `this` should refer to `global`


  return fn.bind(_global); // When Trusted Types support in Function constructors is widely available,
  // the implementation of this function can be simplified to:
  // return new Function(...args.map(a => trustedScriptFromString(a)));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SafeValueImpl = /*#__PURE__*/function () {
  function SafeValueImpl(changingThisBreaksApplicationSecurity) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, SafeValueImpl);

    this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(SafeValueImpl, [{
    key: "toString",
    value: function toString() {
      return "SafeValue must use [property]=binding: ".concat(this.changingThisBreaksApplicationSecurity) + " (see http://g.co/ng/security#xss)";
    }
  }]);

  return SafeValueImpl;
}();

var SafeHtmlImpl = /*#__PURE__*/function (_SafeValueImpl) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(SafeHtmlImpl, _SafeValueImpl);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(SafeHtmlImpl);

  function SafeHtmlImpl() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, SafeHtmlImpl);

    return _super.apply(this, arguments);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(SafeHtmlImpl, [{
    key: "getTypeName",
    value: function getTypeName() {
      return "HTML"
      /* Html */
      ;
    }
  }]);

  return SafeHtmlImpl;
}(SafeValueImpl);

var SafeStyleImpl = /*#__PURE__*/function (_SafeValueImpl2) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(SafeStyleImpl, _SafeValueImpl2);

  var _super2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(SafeStyleImpl);

  function SafeStyleImpl() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, SafeStyleImpl);

    return _super2.apply(this, arguments);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(SafeStyleImpl, [{
    key: "getTypeName",
    value: function getTypeName() {
      return "Style"
      /* Style */
      ;
    }
  }]);

  return SafeStyleImpl;
}(SafeValueImpl);

var SafeScriptImpl = /*#__PURE__*/function (_SafeValueImpl3) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(SafeScriptImpl, _SafeValueImpl3);

  var _super3 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(SafeScriptImpl);

  function SafeScriptImpl() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, SafeScriptImpl);

    return _super3.apply(this, arguments);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(SafeScriptImpl, [{
    key: "getTypeName",
    value: function getTypeName() {
      return "Script"
      /* Script */
      ;
    }
  }]);

  return SafeScriptImpl;
}(SafeValueImpl);

var SafeUrlImpl = /*#__PURE__*/function (_SafeValueImpl4) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(SafeUrlImpl, _SafeValueImpl4);

  var _super4 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(SafeUrlImpl);

  function SafeUrlImpl() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, SafeUrlImpl);

    return _super4.apply(this, arguments);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(SafeUrlImpl, [{
    key: "getTypeName",
    value: function getTypeName() {
      return "URL"
      /* Url */
      ;
    }
  }]);

  return SafeUrlImpl;
}(SafeValueImpl);

var SafeResourceUrlImpl = /*#__PURE__*/function (_SafeValueImpl5) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(SafeResourceUrlImpl, _SafeValueImpl5);

  var _super5 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(SafeResourceUrlImpl);

  function SafeResourceUrlImpl() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, SafeResourceUrlImpl);

    return _super5.apply(this, arguments);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(SafeResourceUrlImpl, [{
    key: "getTypeName",
    value: function getTypeName() {
      return "ResourceURL"
      /* ResourceUrl */
      ;
    }
  }]);

  return SafeResourceUrlImpl;
}(SafeValueImpl);

function unwrapSafeValue(value) {
  return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity : value;
}

function allowSanitizationBypassAndThrow(value, type) {
  var actualType = getSanitizationBypassType(value);

  if (actualType != null && actualType !== type) {
    // Allow ResourceURLs in URL contexts, they are strictly more trusted.
    if (actualType === "ResourceURL"
    /* ResourceUrl */
    && type === "URL"
    /* Url */
    ) return true;
    throw new Error("Required a safe ".concat(type, ", got a ").concat(actualType, " (see http://g.co/ng/security#xss)"));
  }

  return actualType === type;
}

function getSanitizationBypassType(value) {
  return value instanceof SafeValueImpl && value.getTypeName() || null;
}
/**
 * Mark `html` string as trusted.
 *
 * This function wraps the trusted string in `String` and brands it in a way which makes it
 * recognizable to {@link htmlSanitizer} to be trusted implicitly.
 *
 * @param trustedHtml `html` string which needs to be implicitly trusted.
 * @returns a `html` which has been branded to be implicitly trusted.
 */


function bypassSanitizationTrustHtml(trustedHtml) {
  return new SafeHtmlImpl(trustedHtml);
}
/**
 * Mark `style` string as trusted.
 *
 * This function wraps the trusted string in `String` and brands it in a way which makes it
 * recognizable to {@link styleSanitizer} to be trusted implicitly.
 *
 * @param trustedStyle `style` string which needs to be implicitly trusted.
 * @returns a `style` hich has been branded to be implicitly trusted.
 */


function bypassSanitizationTrustStyle(trustedStyle) {
  return new SafeStyleImpl(trustedStyle);
}
/**
 * Mark `script` string as trusted.
 *
 * This function wraps the trusted string in `String` and brands it in a way which makes it
 * recognizable to {@link scriptSanitizer} to be trusted implicitly.
 *
 * @param trustedScript `script` string which needs to be implicitly trusted.
 * @returns a `script` which has been branded to be implicitly trusted.
 */


function bypassSanitizationTrustScript(trustedScript) {
  return new SafeScriptImpl(trustedScript);
}
/**
 * Mark `url` string as trusted.
 *
 * This function wraps the trusted string in `String` and brands it in a way which makes it
 * recognizable to {@link urlSanitizer} to be trusted implicitly.
 *
 * @param trustedUrl `url` string which needs to be implicitly trusted.
 * @returns a `url`  which has been branded to be implicitly trusted.
 */


function bypassSanitizationTrustUrl(trustedUrl) {
  return new SafeUrlImpl(trustedUrl);
}
/**
 * Mark `url` string as trusted.
 *
 * This function wraps the trusted string in `String` and brands it in a way which makes it
 * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.
 *
 * @param trustedResourceUrl `url` string which needs to be implicitly trusted.
 * @returns a `url` which has been branded to be implicitly trusted.
 */


function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {
  return new SafeResourceUrlImpl(trustedResourceUrl);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.
 *
 * For more information on how to run and debug tests with either Ivy or View Engine (legacy),
 * please see [BAZEL.md](./docs/BAZEL.md).
 */


var _devMode = true;
var _runModeLocked = false;
/**
 * Returns whether Angular is in development mode. After called once,
 * the value is locked and won't change any more.
 *
 * By default, this is true, unless a user calls `enableProdMode` before calling this.
 *
 * @publicApi
 */

function isDevMode() {
  _runModeLocked = true;
  return _devMode;
}
/**
 * Disable Angular's development mode, which turns off assertions and other
 * checks within the framework.
 *
 * One important assertion this disables verifies that a change detection pass
 * does not result in additional changes to any bindings (also known as
 * unidirectional data flow).
 *
 * @publicApi
 */


function enableProdMode() {
  if (_runModeLocked) {
    throw new Error('Cannot enable prod mode after platform setup.');
  }

  _devMode = false;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * This helper is used to get hold of an inert tree of DOM elements containing dirty HTML
 * that needs sanitizing.
 * Depending upon browser support we use one of two strategies for doing this.
 * Default: DOMParser strategy
 * Fallback: InertDocument strategy
 */


function getInertBodyHelper(defaultDoc) {
  return isDOMParserAvailable() ? new DOMParserHelper() : new InertDocumentHelper(defaultDoc);
}
/**
 * Uses DOMParser to create and fill an inert body element.
 * This is the default strategy used in browsers that support it.
 */


var DOMParserHelper = /*#__PURE__*/function () {
  function DOMParserHelper() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, DOMParserHelper);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(DOMParserHelper, [{
    key: "getInertBodyElement",
    value: function getInertBodyElement(html) {
      // We add these extra elements to ensure that the rest of the content is parsed as expected
      // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the
      // `<head>` tag. Note that the `<body>` tag is closed implicitly to prevent unclosed tags
      // in `html` from consuming the otherwise explicit `</body>` tag.
      html = '<body><remove></remove>' + html;

      try {
        var body = new window.DOMParser().parseFromString(trustedHTMLFromString(html), 'text/html').body;
        body.removeChild(body.firstChild);
        return body;
      } catch (_a) {
        return null;
      }
    }
  }]);

  return DOMParserHelper;
}();
/**
 * Use an HTML5 `template` element, if supported, or an inert body element created via
 * `createHtmlDocument` to create and fill an inert DOM element.
 * This is the fallback strategy if the browser does not support DOMParser.
 */


var InertDocumentHelper = /*#__PURE__*/function () {
  function InertDocumentHelper(defaultDoc) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, InertDocumentHelper);

    this.defaultDoc = defaultDoc;
    this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');

    if (this.inertDocument.body == null) {
      // usually there should be only one body element in the document, but IE doesn't have any, so
      // we need to create one.
      var inertHtml = this.inertDocument.createElement('html');
      this.inertDocument.appendChild(inertHtml);
      var inertBodyElement = this.inertDocument.createElement('body');
      inertHtml.appendChild(inertBodyElement);
    }
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(InertDocumentHelper, [{
    key: "getInertBodyElement",
    value: function getInertBodyElement(html) {
      // Prefer using <template> element if supported.
      var templateEl = this.inertDocument.createElement('template');

      if ('content' in templateEl) {
        templateEl.innerHTML = trustedHTMLFromString(html);
        return templateEl;
      } // Note that previously we used to do something like `this.inertDocument.body.innerHTML = html`
      // and we returned the inert `body` node. This was changed, because IE seems to treat setting
      // `innerHTML` on an inserted element differently, compared to one that hasn't been inserted
      // yet. In particular, IE appears to split some of the text into multiple text nodes rather
      // than keeping them in a single one which ends up messing with Ivy's i18n parsing further
      // down the line. This has been worked around by creating a new inert `body` and using it as
      // the root node in which we insert the HTML.


      var inertBody = this.inertDocument.createElement('body');
      inertBody.innerHTML = trustedHTMLFromString(html); // Support: IE 11 only
      // strip custom-namespaced attributes on IE<=11

      if (this.defaultDoc.documentMode) {
        this.stripCustomNsAttrs(inertBody);
      }

      return inertBody;
    }
    /**
     * When IE11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'
     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.
     * 'ns1:xlink:foo').
     *
     * This is undesirable since we don't want to allow any of these custom attributes. This method
     * strips them all.
     */

  }, {
    key: "stripCustomNsAttrs",
    value: function stripCustomNsAttrs(el) {
      var elAttrs = el.attributes; // loop backwards so that we can support removals.

      for (var i = elAttrs.length - 1; 0 < i; i--) {
        var attrib = elAttrs.item(i);
        var attrName = attrib.name;

        if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {
          el.removeAttribute(attrName);
        }
      }

      var childNode = el.firstChild;

      while (childNode) {
        if (childNode.nodeType === Node.ELEMENT_NODE) this.stripCustomNsAttrs(childNode);
        childNode = childNode.nextSibling;
      }
    }
  }]);

  return InertDocumentHelper;
}();
/**
 * We need to determine whether the DOMParser exists in the global context and
 * supports parsing HTML; HTML parsing support is not as wide as other formats, see
 * https://developer.mozilla.org/en-US/docs/Web/API/DOMParser#Browser_compatibility.
 *
 * @suppress {uselessCode}
 */


function isDOMParserAvailable() {
  try {
    return !!new window.DOMParser().parseFromString(trustedHTMLFromString(''), 'text/html');
  } catch (_a) {
    return false;
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A pattern that recognizes a commonly useful subset of URLs that are safe.
 *
 * This regular expression matches a subset of URLs that will not cause script
 * execution if used in URL context within a HTML document. Specifically, this
 * regular expression matches if (comment from here on and regex copied from
 * Soy's EscapingConventions):
 * (1) Either an allowed protocol (http, https, mailto or ftp).
 * (2) or no protocol.  A protocol must be followed by a colon. The below
 *     allows that by allowing colons only after one of the characters [/?#].
 *     A colon after a hash (#) must be in the fragment.
 *     Otherwise, a colon after a (?) must be in a query.
 *     Otherwise, a colon after a single solidus (/) must be in a path.
 *     Otherwise, a colon after a double solidus (//) must be in the authority
 *     (before port).
 *
 * The pattern disallows &, used in HTML entity declarations before
 * one of the characters in [/?#]. This disallows HTML entities used in the
 * protocol name, which should never happen, e.g. "h&#116;tp" for "http".
 * It also disallows HTML entities in the first path part of a relative path,
 * e.g. "foo&lt;bar/baz".  Our existing escaping functions should not produce
 * that. More importantly, it disallows masking of a colon,
 * e.g. "javascript&#58;...".
 *
 * This regular expression was taken from the Closure sanitization library.
 */


var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi;
/* A pattern that matches safe srcset values */

var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;
/** A pattern that matches safe data URLs. Only matches image, video and audio types. */

var DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;

function _sanitizeUrl(url) {
  url = String(url);
  if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN)) return url;

  if (isDevMode()) {
    console.warn("WARNING: sanitizing unsafe URL value ".concat(url, " (see http://g.co/ng/security#xss)"));
  }

  return 'unsafe:' + url;
}

function sanitizeSrcset(srcset) {
  srcset = String(srcset);
  return srcset.split(',').map(function (srcset) {
    return _sanitizeUrl(srcset.trim());
  }).join(', ');
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function tagSet(tags) {
  var res = {};

  var _iterator = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_7__["default"])(tags.split(',')),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var t = _step.value;
      res[t] = true;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return res;
}

function merge() {
  var res = {};

  for (var _len7 = arguments.length, sets = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
    sets[_key7] = arguments[_key7];
  }

  for (var _i = 0, _sets = sets; _i < _sets.length; _i++) {
    var s = _sets[_i];

    for (var v in s) {
      if (s.hasOwnProperty(v)) res[v] = true;
    }
  }

  return res;
} // Good source of info about elements and attributes
// http://dev.w3.org/html5/spec/Overview.html#semantics
// http://simon.html5.org/html-elements
// Safe Void Elements - HTML5
// http://dev.w3.org/html5/spec/Overview.html#void-elements


var VOID_ELEMENTS = /*@__PURE__*/tagSet('area,br,col,hr,img,wbr'); // Elements that you can, intentionally, leave open (and which close themselves)
// http://dev.w3.org/html5/spec/Overview.html#optional-tags

var OPTIONAL_END_TAG_BLOCK_ELEMENTS = /*@__PURE__*/tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');
var OPTIONAL_END_TAG_INLINE_ELEMENTS = /*@__PURE__*/tagSet('rp,rt');
var OPTIONAL_END_TAG_ELEMENTS = /*@__PURE__*/merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS); // Safe Block Elements - HTML5

var BLOCK_ELEMENTS = /*@__PURE__*/merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, /*@__PURE__*/tagSet('address,article,' + 'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' + 'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul')); // Inline Elements - HTML5

var INLINE_ELEMENTS = /*@__PURE__*/merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, /*@__PURE__*/tagSet('a,abbr,acronym,audio,b,' + 'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' + 'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));
var VALID_ELEMENTS = /*@__PURE__*/merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS); // Attributes that have href and hence need to be sanitized

var URI_ATTRS = /*@__PURE__*/tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href'); // Attributes that have special href set hence need to be sanitized

var SRCSET_ATTRS = /*@__PURE__*/tagSet('srcset');
var HTML_ATTRS = /*@__PURE__*/tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' + 'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' + 'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' + 'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' + 'valign,value,vspace,width'); // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)

var ARIA_ATTRS = /*@__PURE__*/tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' + 'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' + 'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' + 'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' + 'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' + 'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' + 'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext'); // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security
// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via
// innerHTML is required, SVG attributes should be added here.
// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those
// can be sanitized, but they increase security surface area without a legitimate use case, so they
// are left out here.

var VALID_ATTRS = /*@__PURE__*/merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS); // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.
//
// Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)
// `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we
// don't want to preserve the content, if the elements themselves are going to be removed.

var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = /*@__PURE__*/tagSet('script,style,template');
/**
 * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe
 * attributes.
 */

var SanitizingHtmlSerializer = /*#__PURE__*/function () {
  function SanitizingHtmlSerializer() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, SanitizingHtmlSerializer);

    // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just
    // because characters were re-encoded.
    this.sanitizedSomething = false;
    this.buf = [];
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(SanitizingHtmlSerializer, [{
    key: "sanitizeChildren",
    value: function sanitizeChildren(el) {
      // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.
      // However this code never accesses properties off of `document` before deleting its contents
      // again, so it shouldn't be vulnerable to DOM clobbering.
      var current = el.firstChild;
      var traverseContent = true;

      while (current) {
        if (current.nodeType === Node.ELEMENT_NODE) {
          traverseContent = this.startElement(current);
        } else if (current.nodeType === Node.TEXT_NODE) {
          this.chars(current.nodeValue);
        } else {
          // Strip non-element, non-text nodes.
          this.sanitizedSomething = true;
        }

        if (traverseContent && current.firstChild) {
          current = current.firstChild;
          continue;
        }

        while (current) {
          // Leaving the element. Walk up and to the right, closing tags as we go.
          if (current.nodeType === Node.ELEMENT_NODE) {
            this.endElement(current);
          }

          var next = this.checkClobberedElement(current, current.nextSibling);

          if (next) {
            current = next;
            break;
          }

          current = this.checkClobberedElement(current, current.parentNode);
        }
      }

      return this.buf.join('');
    }
    /**
     * Sanitizes an opening element tag (if valid) and returns whether the element's contents should
     * be traversed. Element content must always be traversed (even if the element itself is not
     * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.
     *
     * @param element The element to sanitize.
     * @return True if the element's contents should be traversed.
     */

  }, {
    key: "startElement",
    value: function startElement(element) {
      var tagName = element.nodeName.toLowerCase();

      if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {
        this.sanitizedSomething = true;
        return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);
      }

      this.buf.push('<');
      this.buf.push(tagName);
      var elAttrs = element.attributes;

      for (var i = 0; i < elAttrs.length; i++) {
        var elAttr = elAttrs.item(i);
        var attrName = elAttr.name;
        var lower = attrName.toLowerCase();

        if (!VALID_ATTRS.hasOwnProperty(lower)) {
          this.sanitizedSomething = true;
          continue;
        }

        var value = elAttr.value; // TODO(martinprobst): Special case image URIs for data:image/...

        if (URI_ATTRS[lower]) value = _sanitizeUrl(value);
        if (SRCSET_ATTRS[lower]) value = sanitizeSrcset(value);
        this.buf.push(' ', attrName, '="', encodeEntities(value), '"');
      }

      this.buf.push('>');
      return true;
    }
  }, {
    key: "endElement",
    value: function endElement(current) {
      var tagName = current.nodeName.toLowerCase();

      if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {
        this.buf.push('</');
        this.buf.push(tagName);
        this.buf.push('>');
      }
    }
  }, {
    key: "chars",
    value: function chars(_chars) {
      this.buf.push(encodeEntities(_chars));
    }
  }, {
    key: "checkClobberedElement",
    value: function checkClobberedElement(node, nextNode) {
      if (nextNode && (node.compareDocumentPosition(nextNode) & Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {
        throw new Error("Failed to sanitize html because the element is clobbered: ".concat(node.outerHTML));
      }

      return nextNode;
    }
  }]);

  return SanitizingHtmlSerializer;
}(); // Regular Expressions for parsing tags and attributes


var SURROGATE_PAIR_REGEXP = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g; // ! to ~ is the ASCII range.

var NON_ALPHANUMERIC_REGEXP = /([^\#-~ |!])/g;
/**
 * Escapes all potentially dangerous characters, so that the
 * resulting string can be safely inserted into attribute or
 * element text.
 * @param value
 */

function encodeEntities(value) {
  return value.replace(/&/g, '&amp;').replace(SURROGATE_PAIR_REGEXP, function (match) {
    var hi = match.charCodeAt(0);
    var low = match.charCodeAt(1);
    return '&#' + ((hi - 0xD800) * 0x400 + (low - 0xDC00) + 0x10000) + ';';
  }).replace(NON_ALPHANUMERIC_REGEXP, function (match) {
    return '&#' + match.charCodeAt(0) + ';';
  }).replace(/</g, '&lt;').replace(/>/g, '&gt;');
}

var inertBodyHelper;
/**
 * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to
 * the DOM in a browser environment.
 */

function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {
  var inertBodyElement = null;

  try {
    inertBodyHelper = inertBodyHelper || getInertBodyHelper(defaultDoc); // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).

    var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';
    inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml); // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser
    // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.

    var mXSSAttempts = 5;
    var parsedHtml = unsafeHtml;

    do {
      if (mXSSAttempts === 0) {
        throw new Error('Failed to sanitize html because the input is unstable');
      }

      mXSSAttempts--;
      unsafeHtml = parsedHtml;
      parsedHtml = inertBodyElement.innerHTML;
      inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);
    } while (unsafeHtml !== parsedHtml);

    var sanitizer = new SanitizingHtmlSerializer();
    var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);

    if (isDevMode() && sanitizer.sanitizedSomething) {
      console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');
    }

    return safeHtml;
  } finally {
    // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.
    if (inertBodyElement) {
      var parent = getTemplateContent(inertBodyElement) || inertBodyElement;

      while (parent.firstChild) {
        parent.removeChild(parent.firstChild);
      }
    }
  }
}

function getTemplateContent(el) {
  return 'content' in el
  /** Microsoft/TypeScript#21517 */
  && isTemplateElement(el) ? el.content : null;
}

function isTemplateElement(el) {
  return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property
 * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly
 * handled.
 *
 * See DomSanitizer for more details on security in Angular applications.
 *
 * @publicApi
 */


var SecurityContext = /*@__PURE__*/function (SecurityContext) {
  SecurityContext[SecurityContext["NONE"] = 0] = "NONE";
  SecurityContext[SecurityContext["HTML"] = 1] = "HTML";
  SecurityContext[SecurityContext["STYLE"] = 2] = "STYLE";
  SecurityContext[SecurityContext["SCRIPT"] = 3] = "SCRIPT";
  SecurityContext[SecurityContext["URL"] = 4] = "URL";
  SecurityContext[SecurityContext["RESOURCE_URL"] = 5] = "RESOURCE_URL";
  return SecurityContext;
}({});
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing
 * dangerous content.
 *
 * This method parses the `html` and locates potentially dangerous content (such as urls and
 * javascript) and removes it.
 *
 * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.
 *
 * @param unsafeHtml untrusted `html`, typically from the user.
 * @returns `html` string which is safe to display to user, because all of the dangerous javascript
 * and urls have been removed.
 *
 * @codeGenApi
 */


function ɵɵsanitizeHtml(unsafeHtml) {
  var sanitizer = getSanitizer();

  if (sanitizer) {
    return sanitizer.sanitize(SecurityContext.HTML, unsafeHtml) || '';
  }

  if (allowSanitizationBypassAndThrow(unsafeHtml, "HTML"
  /* Html */
  )) {
    return unwrapSafeValue(unsafeHtml);
  }

  return _sanitizeHtml(getDocument(), renderStringify(unsafeHtml));
}
/**
 * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing
 * dangerous content.
 *
 * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.
 *
 * @param unsafeStyle untrusted `style`, typically from the user.
 * @returns `style` string which is safe to bind to the `style` properties.
 *
 * @codeGenApi
 */


function ɵɵsanitizeStyle(unsafeStyle) {
  var sanitizer = getSanitizer();

  if (sanitizer) {
    return sanitizer.sanitize(SecurityContext.STYLE, unsafeStyle) || '';
  }

  if (allowSanitizationBypassAndThrow(unsafeStyle, "Style"
  /* Style */
  )) {
    return unwrapSafeValue(unsafeStyle);
  }

  return renderStringify(unsafeStyle);
}
/**
 * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing
 * dangerous
 * content.
 *
 * This method parses the `url` and locates potentially dangerous content (such as javascript) and
 * removes it.
 *
 * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.
 *
 * @param unsafeUrl untrusted `url`, typically from the user.
 * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because
 * all of the dangerous javascript has been removed.
 *
 * @codeGenApi
 */


function ɵɵsanitizeUrl(unsafeUrl) {
  var sanitizer = getSanitizer();

  if (sanitizer) {
    return sanitizer.sanitize(SecurityContext.URL, unsafeUrl) || '';
  }

  if (allowSanitizationBypassAndThrow(unsafeUrl, "URL"
  /* Url */
  )) {
    return unwrapSafeValue(unsafeUrl);
  }

  return _sanitizeUrl(renderStringify(unsafeUrl));
}
/**
 * A `url` sanitizer which only lets trusted `url`s through.
 *
 * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.
 *
 * @param unsafeResourceUrl untrusted `url`, typically from the user.
 * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because
 * only trusted `url`s have been allowed to pass.
 *
 * @codeGenApi
 */


function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {
  var sanitizer = getSanitizer();

  if (sanitizer) {
    return sanitizer.sanitize(SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';
  }

  if (allowSanitizationBypassAndThrow(unsafeResourceUrl, "ResourceURL"
  /* ResourceUrl */
  )) {
    return unwrapSafeValue(unsafeResourceUrl);
  }

  throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');
}
/**
 * A `script` sanitizer which only lets trusted javascript through.
 *
 * This passes only `script`s marked trusted by calling {@link
 * bypassSanitizationTrustScript}.
 *
 * @param unsafeScript untrusted `script`, typically from the user.
 * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,
 * because only trusted `scripts` have been allowed to pass.
 *
 * @codeGenApi
 */


function ɵɵsanitizeScript(unsafeScript) {
  var sanitizer = getSanitizer();

  if (sanitizer) {
    return sanitizer.sanitize(SecurityContext.SCRIPT, unsafeScript) || '';
  }

  if (allowSanitizationBypassAndThrow(unsafeScript, "Script"
  /* Script */
  )) {
    return unwrapSafeValue(unsafeScript);
  }

  throw new Error('unsafe value used in a script context');
}
/**
 * Promotes the given constant string to a TrustedHTML.
 * @param html constant string containing trusted HTML.
 * @returns TrustedHTML wrapping `html`.
 *
 * @security This is a security-sensitive function and should only be used to
 * convert constant values of attributes and properties found in
 * application-provided Angular templates to TrustedHTML.
 *
 * @codeGenApi
 */


function ɵɵtrustConstantHtml(html) {
  return trustedHTMLFromString(html);
}
/**
 * Promotes the given constant string to a TrustedScript.
 * @param script constant string containing a trusted script.
 * @returns TrustedScript wrapping `script`.
 *
 * @security This is a security-sensitive function and should only be used to
 * convert constant values of attributes and properties found in
 * application-provided Angular templates to TrustedScript.
 *
 * @codeGenApi
 */


function ɵɵtrustConstantScript(script) {
  return trustedScriptFromString(script);
}
/**
 * Promotes the given constant string to a TrustedScriptURL.
 * @param url constant string containing a trusted script URL.
 * @returns TrustedScriptURL wrapping `url`.
 *
 * @security This is a security-sensitive function and should only be used to
 * convert constant values of attributes and properties found in
 * application-provided Angular templates to TrustedScriptURL.
 *
 * @codeGenApi
 */


function ɵɵtrustConstantResourceUrl(url) {
  return trustedScriptURLFromString(url);
}
/**
 * Detects which sanitizer to use for URL property, based on tag name and prop name.
 *
 * The rules are based on the RESOURCE_URL context config from
 * `packages/compiler/src/schema/dom_security_schema.ts`.
 * If tag and prop names don't match Resource URL schema, use URL sanitizer.
 */


function getUrlSanitizer(tag, prop) {
  if (prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' || tag === 'media' || tag === 'script') || prop === 'href' && (tag === 'base' || tag === 'link')) {
    return ɵɵsanitizeResourceUrl;
  }

  return ɵɵsanitizeUrl;
}
/**
 * Sanitizes URL, selecting sanitizer function based on tag and property names.
 *
 * This function is used in case we can't define security context at compile time, when only prop
 * name is available. This happens when we generate host bindings for Directives/Components. The
 * host element is unknown at compile time, so we defer calculation of specific sanitizer to
 * runtime.
 *
 * @param unsafeUrl untrusted `url`, typically from the user.
 * @param tag target element tag name.
 * @param prop name of the property that contains the value.
 * @returns `url` string which is safe to bind.
 *
 * @codeGenApi
 */


function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {
  return getUrlSanitizer(tag, prop)(unsafeUrl);
}

function validateAgainstEventProperties(name) {
  if (name.toLowerCase().startsWith('on')) {
    var msg = "Binding to event property '".concat(name, "' is disallowed for security reasons, ") + "please use (".concat(name.slice(2), ")=...") + "\nIf '".concat(name, "' is a directive input, make sure the directive is imported by the") + " current module.";
    throw new Error(msg);
  }
}

function validateAgainstEventAttributes(name) {
  if (name.toLowerCase().startsWith('on')) {
    var msg = "Binding to event attribute '".concat(name, "' is disallowed for security reasons, ") + "please use (".concat(name.slice(2), ")=...");
    throw new Error(msg);
  }
}

function getSanitizer() {
  var lView = getLView();
  return lView && lView[SANITIZER];
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function getFactoryDef(type, throwNotFound) {
  var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);

  if (!hasFactoryDef && throwNotFound === true && ngDevMode) {
    throw new Error("Type ".concat(stringify(type), " does not have '\u0275fac' property."));
  }

  return hasFactoryDef ? type[NG_FACTORY_DEF] : null;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var RuntimeError = /*#__PURE__*/function (_Error) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(RuntimeError, _Error);

  var _super6 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(RuntimeError);

  function RuntimeError(code, message) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, RuntimeError);

    _this = _super6.call(this, formatRuntimeError(code, message));
    _this.code = code;
    return _this;
  }

  return RuntimeError;
}( /*#__PURE__*/Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(Error));
/** Called to format a runtime error */


function formatRuntimeError(code, message) {
  var fullCode = code ? "NG0".concat(code, ": ") : '';
  return "".concat(fullCode).concat(message);
}
/** Called when directives inject each other (creating a circular dependency) */


function throwCyclicDependencyError(token, path) {
  var depPath = path ? ". Dependency path: ".concat(path.join(' > '), " > ").concat(token) : '';
  throw new RuntimeError("200"
  /* CYCLIC_DI_DEPENDENCY */
  , "Circular dependency in DI detected for ".concat(token).concat(depPath));
}

function throwMixedMultiProviderError() {
  throw new Error("Cannot mix multi providers and regular providers");
}

function throwInvalidProviderError(ngModuleType, providers, provider) {
  var ngModuleDetail = '';

  if (ngModuleType && providers) {
    var providerDetail = providers.map(function (v) {
      return v == provider ? '?' + provider + '?' : '...';
    });
    ngModuleDetail = " - only instances of Provider and Type are allowed, got: [".concat(providerDetail.join(', '), "]");
  }

  throw new Error("Invalid provider for the NgModule '".concat(stringify(ngModuleType), "'") + ngModuleDetail);
}
/** Throws an error when a token is not found in DI. */


function throwProviderNotFoundError(token, injectorName) {
  var injectorDetails = injectorName ? " in ".concat(injectorName) : '';
  throw new RuntimeError("201"
  /* PROVIDER_NOT_FOUND */
  , "No provider for ".concat(stringifyForError(token), " found").concat(injectorDetails));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Represents a basic change from a previous to a new value for a single
 * property on a directive instance. Passed as a value in a
 * {@link SimpleChanges} object to the `ngOnChanges` hook.
 *
 * @see `OnChanges`
 *
 * @publicApi
 */


var SimpleChange = /*#__PURE__*/function () {
  function SimpleChange(previousValue, currentValue, firstChange) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, SimpleChange);

    this.previousValue = previousValue;
    this.currentValue = currentValue;
    this.firstChange = firstChange;
  }
  /**
   * Check whether the new value is the first value assigned.
   */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(SimpleChange, [{
    key: "isFirstChange",
    value: function isFirstChange() {
      return this.firstChange;
    }
  }]);

  return SimpleChange;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The NgOnChangesFeature decorates a component with support for the ngOnChanges
 * lifecycle hook, so it should be included in any component that implements
 * that hook.
 *
 * If the component or directive uses inheritance, the NgOnChangesFeature MUST
 * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise
 * inherited properties will not be propagated to the ngOnChanges lifecycle
 * hook.
 *
 * Example usage:
 *
 * ```
 * static ɵcmp = defineComponent({
 *   ...
 *   inputs: {name: 'publicName'},
 *   features: [NgOnChangesFeature]
 * });
 * ```
 *
 * @codeGenApi
 */


function ɵɵNgOnChangesFeature() {
  return NgOnChangesFeatureImpl;
}

function NgOnChangesFeatureImpl(definition) {
  if (definition.type.prototype.ngOnChanges) {
    definition.setInput = ngOnChangesSetInput;
  }

  return rememberChangeHistoryAndInvokeOnChangesHook;
} // This option ensures that the ngOnChanges lifecycle hook will be inherited
// from superclasses (in InheritDefinitionFeature).

/** @nocollapse */
// tslint:disable-next-line:no-toplevel-property-access


ɵɵNgOnChangesFeature.ngInherit = true;
/**
 * This is a synthetic lifecycle hook which gets inserted into `TView.preOrderHooks` to simulate
 * `ngOnChanges`.
 *
 * The hook reads the `NgSimpleChangesStore` data from the component instance and if changes are
 * found it invokes `ngOnChanges` on the component instance.
 *
 * @param this Component instance. Because this function gets inserted into `TView.preOrderHooks`,
 *     it is guaranteed to be called with component instance.
 */

function rememberChangeHistoryAndInvokeOnChangesHook() {
  var simpleChangesStore = getSimpleChangesStore(this);
  var current = simpleChangesStore === null || simpleChangesStore === void 0 ? void 0 : simpleChangesStore.current;

  if (current) {
    var previous = simpleChangesStore.previous;

    if (previous === EMPTY_OBJ) {
      simpleChangesStore.previous = current;
    } else {
      // New changes are copied to the previous store, so that we don't lose history for inputs
      // which were not changed this time
      for (var key in current) {
        previous[key] = current[key];
      }
    }

    simpleChangesStore.current = null;
    this.ngOnChanges(current);
  }
}

function ngOnChangesSetInput(instance, value, publicName, privateName) {
  var simpleChangesStore = getSimpleChangesStore(instance) || setSimpleChangesStore(instance, {
    previous: EMPTY_OBJ,
    current: null
  });
  var current = simpleChangesStore.current || (simpleChangesStore.current = {});
  var previous = simpleChangesStore.previous;
  var declaredName = this.declaredInputs[publicName];
  var previousChange = previous[declaredName];
  current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);
  instance[privateName] = value;
}

var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';

function getSimpleChangesStore(instance) {
  return instance[SIMPLE_CHANGES_STORE] || null;
}

function setSimpleChangesStore(instance, store) {
  return instance[SIMPLE_CHANGES_STORE] = store;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.
 *
 * Must be run *only* on the first template pass.
 *
 * Sets up the pre-order hooks on the provided `tView`,
 * see {@link HookData} for details about the data structure.
 *
 * @param directiveIndex The index of the directive in LView
 * @param directiveDef The definition containing the hooks to setup in tView
 * @param tView The current TView
 */


function registerPreOrderHooks(directiveIndex, directiveDef, tView) {
  ngDevMode && assertFirstCreatePass(tView);
  var _directiveDef$type$pr = directiveDef.type.prototype,
      ngOnChanges = _directiveDef$type$pr.ngOnChanges,
      ngOnInit = _directiveDef$type$pr.ngOnInit,
      ngDoCheck = _directiveDef$type$pr.ngDoCheck;

  if (ngOnChanges) {
    var wrappedOnChanges = NgOnChangesFeatureImpl(directiveDef);
    (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, wrappedOnChanges);
    (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, wrappedOnChanges);
  }

  if (ngOnInit) {
    (tView.preOrderHooks || (tView.preOrderHooks = [])).push(0 - directiveIndex, ngOnInit);
  }

  if (ngDoCheck) {
    (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, ngDoCheck);
    (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, ngDoCheck);
  }
}
/**
 *
 * Loops through the directives on the provided `tNode` and queues hooks to be
 * run that are not initialization hooks.
 *
 * Should be executed during `elementEnd()` and similar to
 * preserve hook execution order. Content, view, and destroy hooks for projected
 * components and directives must be called *before* their hosts.
 *
 * Sets up the content, view, and destroy hooks on the provided `tView`,
 * see {@link HookData} for details about the data structure.
 *
 * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up
 * separately at `elementStart`.
 *
 * @param tView The current TView
 * @param tNode The TNode whose directives are to be searched for hooks to queue
 */


function registerPostOrderHooks(tView, tNode) {
  ngDevMode && assertFirstCreatePass(tView); // It's necessary to loop through the directives at elementEnd() (rather than processing in
  // directiveCreate) so we can preserve the current hook order. Content, view, and destroy
  // hooks for projected components and directives must be called *before* their hosts.

  for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {
    var _directiveDef = tView.data[i];
    ngDevMode && assertDefined(_directiveDef, 'Expecting DirectiveDef');
    var lifecycleHooks = _directiveDef.type.prototype;
    var ngAfterContentInit = lifecycleHooks.ngAfterContentInit,
        ngAfterContentChecked = lifecycleHooks.ngAfterContentChecked,
        ngAfterViewInit = lifecycleHooks.ngAfterViewInit,
        ngAfterViewChecked = lifecycleHooks.ngAfterViewChecked,
        ngOnDestroy = lifecycleHooks.ngOnDestroy;

    if (ngAfterContentInit) {
      (tView.contentHooks || (tView.contentHooks = [])).push(-i, ngAfterContentInit);
    }

    if (ngAfterContentChecked) {
      (tView.contentHooks || (tView.contentHooks = [])).push(i, ngAfterContentChecked);
      (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, ngAfterContentChecked);
    }

    if (ngAfterViewInit) {
      (tView.viewHooks || (tView.viewHooks = [])).push(-i, ngAfterViewInit);
    }

    if (ngAfterViewChecked) {
      (tView.viewHooks || (tView.viewHooks = [])).push(i, ngAfterViewChecked);
      (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, ngAfterViewChecked);
    }

    if (ngOnDestroy != null) {
      (tView.destroyHooks || (tView.destroyHooks = [])).push(i, ngOnDestroy);
    }
  }
}
/**
 * Executing hooks requires complex logic as we need to deal with 2 constraints.
 *
 * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only
 * once, across many change detection cycles. This must be true even if some hooks throw, or if
 * some recursively trigger a change detection cycle.
 * To solve that, it is required to track the state of the execution of these init hooks.
 * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},
 * and the index within that phase. They can be seen as a cursor in the following structure:
 * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]
 * They are are stored as flags in LView[FLAGS].
 *
 * 2. Pre-order hooks can be executed in batches, because of the select instruction.
 * To be able to pause and resume their execution, we also need some state about the hook's array
 * that is being processed:
 * - the index of the next hook to be executed
 * - the number of init hooks already found in the processed part of the  array
 * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].
 */

/**
 * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were
 * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read
 * / write of the init-hooks related flags.
 * @param lView The LView where hooks are defined
 * @param hooks Hooks to be run
 * @param nodeIndex 3 cases depending on the value:
 * - undefined: all hooks from the array should be executed (post-order case)
 * - null: execute hooks only from the saved index until the end of the array (pre-order case, when
 * flushing the remaining hooks)
 * - number: execute hooks only from the saved index until that node index exclusive (pre-order
 * case, when executing select(number))
 */


function executeCheckHooks(lView, hooks, nodeIndex) {
  callHooks(lView, hooks, 3
  /* InitPhaseCompleted */
  , nodeIndex);
}
/**
 * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,
 * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.
 * @param lView The LView where hooks are defined
 * @param hooks Hooks to be run
 * @param initPhase A phase for which hooks should be run
 * @param nodeIndex 3 cases depending on the value:
 * - undefined: all hooks from the array should be executed (post-order case)
 * - null: execute hooks only from the saved index until the end of the array (pre-order case, when
 * flushing the remaining hooks)
 * - number: execute hooks only from the saved index until that node index exclusive (pre-order
 * case, when executing select(number))
 */


function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {
  ngDevMode && assertNotEqual(initPhase, 3
  /* InitPhaseCompleted */
  , 'Init pre-order hooks should not be called more than once');

  if ((lView[FLAGS] & 3
  /* InitPhaseStateMask */
  ) === initPhase) {
    callHooks(lView, hooks, initPhase, nodeIndex);
  }
}

function incrementInitPhaseFlags(lView, initPhase) {
  ngDevMode && assertNotEqual(initPhase, 3
  /* InitPhaseCompleted */
  , 'Init hooks phase should not be incremented after all init hooks have been run.');
  var flags = lView[FLAGS];

  if ((flags & 3
  /* InitPhaseStateMask */
  ) === initPhase) {
    flags &= 2047
    /* IndexWithinInitPhaseReset */
    ;
    flags += 1
    /* InitPhaseStateIncrementer */
    ;
    lView[FLAGS] = flags;
  }
}
/**
 * Calls lifecycle hooks with their contexts, skipping init hooks if it's not
 * the first LView pass
 *
 * @param currentView The current view
 * @param arr The array in which the hooks are found
 * @param initPhaseState the current state of the init phase
 * @param currentNodeIndex 3 cases depending on the value:
 * - undefined: all hooks from the array should be executed (post-order case)
 * - null: execute hooks only from the saved index until the end of the array (pre-order case, when
 * flushing the remaining hooks)
 * - number: execute hooks only from the saved index until that node index exclusive (pre-order
 * case, when executing select(number))
 */


function callHooks(currentView, arr, initPhase, currentNodeIndex) {
  ngDevMode && assertEqual(isInCheckNoChangesMode(), false, 'Hooks should never be run when in check no changes mode.');
  var startIndex = currentNodeIndex !== undefined ? currentView[PREORDER_HOOK_FLAGS] & 65535
  /* IndexOfTheNextPreOrderHookMaskMask */
  : 0;
  var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;
  var lastNodeIndexFound = 0;

  for (var i = startIndex; i < arr.length; i++) {
    var hook = arr[i + 1];

    if (typeof hook === 'number') {
      lastNodeIndexFound = arr[i];

      if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {
        break;
      }
    } else {
      var isInitHook = arr[i] < 0;
      if (isInitHook) currentView[PREORDER_HOOK_FLAGS] += 65536
      /* NumberOfInitHooksCalledIncrementer */
      ;

      if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {
        callHook(currentView, initPhase, arr, i);
        currentView[PREORDER_HOOK_FLAGS] = (currentView[PREORDER_HOOK_FLAGS] & 4294901760
        /* NumberOfInitHooksCalledMask */
        ) + i + 2;
      }

      i++;
    }
  }
}
/**
 * Execute one hook against the current `LView`.
 *
 * @param currentView The current view
 * @param initPhaseState the current state of the init phase
 * @param arr The array in which the hooks are found
 * @param i The current index within the hook data array
 */


function callHook(currentView, initPhase, arr, i) {
  var isInitHook = arr[i] < 0;
  var hook = arr[i + 1];
  var directiveIndex = isInitHook ? -arr[i] : arr[i];
  var directive = currentView[directiveIndex];

  if (isInitHook) {
    var indexWithintInitPhase = currentView[FLAGS] >> 11
    /* IndexWithinInitPhaseShift */
    ; // The init phase state must be always checked here as it may have been recursively
    // updated

    if (indexWithintInitPhase < currentView[PREORDER_HOOK_FLAGS] >> 16
    /* NumberOfInitHooksCalledShift */
    && (currentView[FLAGS] & 3
    /* InitPhaseStateMask */
    ) === initPhase) {
      currentView[FLAGS] += 2048
      /* IndexWithinInitPhaseIncrementer */
      ;
      hook.call(directive);
    }
  } else {
    hook.call(directive);
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NO_PARENT_INJECTOR = -1;
/**
 * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in
 * `TView.data`. This allows us to store information about the current node's tokens (which
 * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be
 * shared, so they live in `LView`).
 *
 * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter
 * determines whether a directive is available on the associated node or not. This prevents us
 * from searching the directives array at this level unless it's probable the directive is in it.
 *
 * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.
 *
 * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed
 * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`
 * will differ based on where it is flattened into the main array, so it's not possible to know
 * the indices ahead of time and save their types here. The interfaces are still included here
 * for documentation purposes.
 *
 * export interface LInjector extends Array<any> {
 *
 *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)
 *    [0]: number;
 *
 *    // Cumulative bloom for directive IDs 32-63
 *    [1]: number;
 *
 *    // Cumulative bloom for directive IDs 64-95
 *    [2]: number;
 *
 *    // Cumulative bloom for directive IDs 96-127
 *    [3]: number;
 *
 *    // Cumulative bloom for directive IDs 128-159
 *    [4]: number;
 *
 *    // Cumulative bloom for directive IDs 160 - 191
 *    [5]: number;
 *
 *    // Cumulative bloom for directive IDs 192 - 223
 *    [6]: number;
 *
 *    // Cumulative bloom for directive IDs 224 - 255
 *    [7]: number;
 *
 *    // We need to store a reference to the injector's parent so DI can keep looking up
 *    // the injector tree until it finds the dependency it's looking for.
 *    [PARENT_INJECTOR]: number;
 * }
 *
 * export interface TInjector extends Array<any> {
 *
 *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)
 *    [0]: number;
 *
 *    // Shared node bloom for directive IDs 32-63
 *    [1]: number;
 *
 *    // Shared node bloom for directive IDs 64-95
 *    [2]: number;
 *
 *    // Shared node bloom for directive IDs 96-127
 *    [3]: number;
 *
 *    // Shared node bloom for directive IDs 128-159
 *    [4]: number;
 *
 *    // Shared node bloom for directive IDs 160 - 191
 *    [5]: number;
 *
 *    // Shared node bloom for directive IDs 192 - 223
 *    [6]: number;
 *
 *    // Shared node bloom for directive IDs 224 - 255
 *    [7]: number;
 *
 *    // Necessary to find directive indices for a particular node.
 *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;
 *  }
 */

/**
 * Factory for creating instances of injectors in the NodeInjector.
 *
 * This factory is complicated by the fact that it can resolve `multi` factories as well.
 *
 * NOTE: Some of the fields are optional which means that this class has two hidden classes.
 * - One without `multi` support (most common)
 * - One with `multi` values, (rare).
 *
 * Since VMs can cache up to 4 inline hidden classes this is OK.
 *
 * - Single factory: Only `resolving` and `factory` is defined.
 * - `providers` factory: `componentProviders` is a number and `index = -1`.
 * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.
 */

var NodeInjectorFactory = function NodeInjectorFactory(
/**
 * Factory to invoke in order to create a new instance.
 */
factory,
/**
 * Set to `true` if the token is declared in `viewProviders` (or if it is component).
 */
isViewProvider, injectImplementation) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, NodeInjectorFactory);

  this.factory = factory;
  /**
   * Marker set to true during factory invocation to see if we get into recursive loop.
   * Recursive loop causes an error to be displayed.
   */

  this.resolving = false;
  ngDevMode && assertDefined(factory, 'Factory not specified');
  ngDevMode && assertEqual(typeof factory, 'function', 'Expected factory function.');
  this.canSeeViewProviders = isViewProvider;
  this.injectImpl = injectImplementation;
};

function isFactory(obj) {
  return obj instanceof NodeInjectorFactory;
} // Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.


var unusedValueExportToPlacateAjd$3 = 1;
/**
 * Converts `TNodeType` into human readable text.
 * Make sure this matches with `TNodeType`
 */

function toTNodeTypeAsString(tNodeType) {
  var text = '';
  tNodeType & 1
  /* Text */
  && (text += '|Text');
  tNodeType & 2
  /* Element */
  && (text += '|Element');
  tNodeType & 4
  /* Container */
  && (text += '|Container');
  tNodeType & 8
  /* ElementContainer */
  && (text += '|ElementContainer');
  tNodeType & 16
  /* Projection */
  && (text += '|Projection');
  tNodeType & 32
  /* Icu */
  && (text += '|IcuContainer');
  tNodeType & 64
  /* Placeholder */
  && (text += '|Placeholder');
  return text.length > 0 ? text.substring(1) : text;
} // Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.


var unusedValueExportToPlacateAjd$4 = 1;
/**
 * Returns `true` if the `TNode` has a directive which has `@Input()` for `class` binding.
 *
 * ```
 * <div my-dir [class]="exp"></div>
 * ```
 * and
 * ```
 * @Directive({
 * })
 * class MyDirective {
 *   @Input()
 *   class: string;
 * }
 * ```
 *
 * In the above case it is necessary to write the reconciled styling information into the
 * directive's input.
 *
 * @param tNode
 */

function hasClassInput(tNode) {
  return (tNode.flags & 16
  /* hasClassInput */
  ) !== 0;
}
/**
 * Returns `true` if the `TNode` has a directive which has `@Input()` for `style` binding.
 *
 * ```
 * <div my-dir [style]="exp"></div>
 * ```
 * and
 * ```
 * @Directive({
 * })
 * class MyDirective {
 *   @Input()
 *   class: string;
 * }
 * ```
 *
 * In the above case it is necessary to write the reconciled styling information into the
 * directive's input.
 *
 * @param tNode
 */


function hasStyleInput(tNode) {
  return (tNode.flags & 32
  /* hasStyleInput */
  ) !== 0;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function assertTNodeType(tNode, expectedTypes, message) {
  assertDefined(tNode, 'should be called with a TNode');

  if ((tNode.type & expectedTypes) === 0) {
    throwError(message || "Expected [".concat(toTNodeTypeAsString(expectedTypes), "] but got ").concat(toTNodeTypeAsString(tNode.type), "."));
  }
}

function assertPureTNodeType(type) {
  if (!(type === 2
  /* Element */
  || //
  type === 1
  /* Text */
  || //
  type === 4
  /* Container */
  || //
  type === 8
  /* ElementContainer */
  || //
  type === 32
  /* Icu */
  || //
  type === 16
  /* Projection */
  || //
  type === 64
  /* Placeholder */
  )) {
    throwError("Expected TNodeType to have only a single type selected, but got ".concat(toTNodeTypeAsString(type), "."));
  }
}
/**
 * Assigns all attribute values to the provided element via the inferred renderer.
 *
 * This function accepts two forms of attribute entries:
 *
 * default: (key, value):
 *  attrs = [key1, value1, key2, value2]
 *
 * namespaced: (NAMESPACE_MARKER, uri, name, value)
 *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]
 *
 * The `attrs` array can contain a mix of both the default and namespaced entries.
 * The "default" values are set without a marker, but if the function comes across
 * a marker value then it will attempt to set a namespaced value. If the marker is
 * not of a namespaced value then the function will quit and return the index value
 * where it stopped during the iteration of the attrs array.
 *
 * See [AttributeMarker] to understand what the namespace marker value is.
 *
 * Note that this instruction does not support assigning style and class values to
 * an element. See `elementStart` and `elementHostAttrs` to learn how styling values
 * are applied to an element.
 * @param renderer The renderer to be used
 * @param native The element that the attributes will be assigned to
 * @param attrs The attribute array of values that will be assigned to the element
 * @returns the index value that was last accessed in the attributes array
 */


function setUpAttributes(renderer, native, attrs) {
  var isProc = isProceduralRenderer(renderer);
  var i = 0;

  while (i < attrs.length) {
    var value = attrs[i];

    if (typeof value === 'number') {
      // only namespaces are supported. Other value types (such as style/class
      // entries) are not supported in this function.
      if (value !== 0
      /* NamespaceURI */
      ) {
          break;
        } // we just landed on the marker value ... therefore
      // we should skip to the next entry


      i++;
      var namespaceURI = attrs[i++];
      var attrName = attrs[i++];
      var attrVal = attrs[i++];
      ngDevMode && ngDevMode.rendererSetAttribute++;
      isProc ? renderer.setAttribute(native, attrName, attrVal, namespaceURI) : native.setAttributeNS(namespaceURI, attrName, attrVal);
    } else {
      // attrName is string;
      var _attrName = value;
      var _attrVal = attrs[++i]; // Standard attributes

      ngDevMode && ngDevMode.rendererSetAttribute++;

      if (isAnimationProp(_attrName)) {
        if (isProc) {
          renderer.setProperty(native, _attrName, _attrVal);
        }
      } else {
        isProc ? renderer.setAttribute(native, _attrName, _attrVal) : native.setAttribute(_attrName, _attrVal);
      }

      i++;
    }
  } // another piece of code may iterate over the same attributes array. Therefore
  // it may be helpful to return the exact spot where the attributes array exited
  // whether by running into an unsupported marker or if all the static values were
  // iterated over.


  return i;
}
/**
 * Test whether the given value is a marker that indicates that the following
 * attribute values in a `TAttributes` array are only the names of attributes,
 * and not name-value pairs.
 * @param marker The attribute marker to test.
 * @returns true if the marker is a "name-only" marker (e.g. `Bindings`, `Template` or `I18n`).
 */


function isNameOnlyAttributeMarker(marker) {
  return marker === 3
  /* Bindings */
  || marker === 4
  /* Template */
  || marker === 6
  /* I18n */
  ;
}

function isAnimationProp(name) {
  // Perf note: accessing charCodeAt to check for the first character of a string is faster as
  // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that
  // charCodeAt doesn't allocate memory to return a substring.
  return name.charCodeAt(0) === 64
  /* AT_SIGN */
  ;
}
/**
 * Merges `src` `TAttributes` into `dst` `TAttributes` removing any duplicates in the process.
 *
 * This merge function keeps the order of attrs same.
 *
 * @param dst Location of where the merged `TAttributes` should end up.
 * @param src `TAttributes` which should be appended to `dst`
 */


function mergeHostAttrs(dst, src) {
  if (src === null || src.length === 0) {// do nothing
  } else if (dst === null || dst.length === 0) {
    // We have source, but dst is empty, just make a copy.
    dst = src.slice();
  } else {
    var srcMarker = -1
    /* ImplicitAttributes */
    ;

    for (var i = 0; i < src.length; i++) {
      var item = src[i];

      if (typeof item === 'number') {
        srcMarker = item;
      } else {
        if (srcMarker === 0
        /* NamespaceURI */
        ) {// Case where we need to consume `key1`, `key2`, `value` items.
          } else if (srcMarker === -1
        /* ImplicitAttributes */
        || srcMarker === 2
        /* Styles */
        ) {
            // Case where we have to consume `key1` and `value` only.
            mergeHostAttribute(dst, srcMarker, item, null, src[++i]);
          } else {
          // Case where we have to consume `key1` only.
          mergeHostAttribute(dst, srcMarker, item, null, null);
        }
      }
    }
  }

  return dst;
}
/**
 * Append `key`/`value` to existing `TAttributes` taking region marker and duplicates into account.
 *
 * @param dst `TAttributes` to append to.
 * @param marker Region where the `key`/`value` should be added.
 * @param key1 Key to add to `TAttributes`
 * @param key2 Key to add to `TAttributes` (in case of `AttributeMarker.NamespaceURI`)
 * @param value Value to add or to overwrite to `TAttributes` Only used if `marker` is not Class.
 */


function mergeHostAttribute(dst, marker, key1, key2, value) {
  var i = 0; // Assume that new markers will be inserted at the end.

  var markerInsertPosition = dst.length; // scan until correct type.

  if (marker === -1
  /* ImplicitAttributes */
  ) {
      markerInsertPosition = -1;
    } else {
    while (i < dst.length) {
      var dstValue = dst[i++];

      if (typeof dstValue === 'number') {
        if (dstValue === marker) {
          markerInsertPosition = -1;
          break;
        } else if (dstValue > marker) {
          // We need to save this as we want the markers to be inserted in specific order.
          markerInsertPosition = i - 1;
          break;
        }
      }
    }
  } // search until you find place of insertion


  while (i < dst.length) {
    var item = dst[i];

    if (typeof item === 'number') {
      // since `i` started as the index after the marker, we did not find it if we are at the next
      // marker
      break;
    } else if (item === key1) {
      // We already have same token
      if (key2 === null) {
        if (value !== null) {
          dst[i + 1] = value;
        }

        return;
      } else if (key2 === dst[i + 1]) {
        dst[i + 2] = value;
        return;
      }
    } // Increment counter.


    i++;
    if (key2 !== null) i++;
    if (value !== null) i++;
  } // insert at location.


  if (markerInsertPosition !== -1) {
    dst.splice(markerInsertPosition, 0, marker);
    i = markerInsertPosition + 1;
  }

  dst.splice(i++, 0, key1);

  if (key2 !== null) {
    dst.splice(i++, 0, key2);
  }

  if (value !== null) {
    dst.splice(i++, 0, value);
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/// Parent Injector Utils ///////////////////////////////////////////////////////////////


function hasParentInjector(parentLocation) {
  return parentLocation !== NO_PARENT_INJECTOR;
}

function getParentInjectorIndex(parentLocation) {
  ngDevMode && assertNumber(parentLocation, 'Number expected');
  ngDevMode && assertNotEqual(parentLocation, -1, 'Not a valid state.');
  var parentInjectorIndex = parentLocation & 32767
  /* InjectorIndexMask */
  ;
  ngDevMode && assertGreaterThan(parentInjectorIndex, HEADER_OFFSET, 'Parent injector must be pointing past HEADER_OFFSET.');
  return parentLocation & 32767
  /* InjectorIndexMask */
  ;
}

function getParentInjectorViewOffset(parentLocation) {
  return parentLocation >> 16
  /* ViewOffsetShift */
  ;
}
/**
 * Unwraps a parent injector location number to find the view offset from the current injector,
 * then walks up the declaration view tree until the view is found that contains the parent
 * injector.
 *
 * @param location The location of the parent injector, which contains the view offset
 * @param startView The LView instance from which to start walking up the view tree
 * @returns The LView instance that contains the parent injector
 */


function getParentInjectorView(location, startView) {
  var viewOffset = getParentInjectorViewOffset(location);
  var parentView = startView; // For most cases, the parent injector can be found on the host node (e.g. for component
  // or container), but we must keep the loop here to support the rarer case of deeply nested
  // <ng-template> tags or inline views, where the parent injector might live many views
  // above the child injector.

  while (viewOffset > 0) {
    parentView = parentView[DECLARATION_VIEW];
    viewOffset--;
  }

  return parentView;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Defines if the call to `inject` should include `viewProviders` in its resolution.
 *
 * This is set to true when we try to instantiate a component. This value is reset in
 * `getNodeInjectable` to a value which matches the declaration location of the token about to be
 * instantiated. This is done so that if we are injecting a token which was declared outside of
 * `viewProviders` we don't accidentally pull `viewProviders` in.
 *
 * Example:
 *
 * ```
 * @Injectable()
 * class MyService {
 *   constructor(public value: String) {}
 * }
 *
 * @Component({
 *   providers: [
 *     MyService,
 *     {provide: String, value: 'providers' }
 *   ]
 *   viewProviders: [
 *     {provide: String, value: 'viewProviders'}
 *   ]
 * })
 * class MyComponent {
 *   constructor(myService: MyService, value: String) {
 *     // We expect that Component can see into `viewProviders`.
 *     expect(value).toEqual('viewProviders');
 *     // `MyService` was not declared in `viewProviders` hence it can't see it.
 *     expect(myService.value).toEqual('providers');
 *   }
 * }
 *
 * ```
 */


var includeViewProviders = true;

function setIncludeViewProviders(v) {
  var oldValue = includeViewProviders;
  includeViewProviders = v;
  return oldValue;
}
/**
 * The number of slots in each bloom filter (used by DI). The larger this number, the fewer
 * directives that will share slots, and thus, the fewer false positives when checking for
 * the existence of a directive.
 */


var BLOOM_SIZE = 256;
var BLOOM_MASK = BLOOM_SIZE - 1;
/** Counter used to generate unique IDs for directives. */

var nextNgElementId = 0;
/**
 * Registers this directive as present in its node's injector by flipping the directive's
 * corresponding bit in the injector's bloom filter.
 *
 * @param injectorIndex The index of the node injector where this token should be registered
 * @param tView The TView for the injector's bloom filters
 * @param type The directive token to register
 */

function bloomAdd(injectorIndex, tView, type) {
  ngDevMode && assertEqual(tView.firstCreatePass, true, 'expected firstCreatePass to be true');
  var id;

  if (typeof type === 'string') {
    id = type.charCodeAt(0) || 0;
  } else if (type.hasOwnProperty(NG_ELEMENT_ID)) {
    id = type[NG_ELEMENT_ID];
  } // Set a unique ID on the directive type, so if something tries to inject the directive,
  // we can easily retrieve the ID and hash it into the bloom bit that should be checked.


  if (id == null) {
    id = type[NG_ELEMENT_ID] = nextNgElementId++;
  } // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),
  // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.


  var bloomBit = id & BLOOM_MASK; // Create a mask that targets the specific bit associated with the directive.
  // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding
  // to bit positions 0 - 31 in a 32 bit integer.

  var mask = 1 << bloomBit; // Use the raw bloomBit number to determine which bloom filter bucket we should check
  // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc

  var b7 = bloomBit & 0x80;
  var b6 = bloomBit & 0x40;
  var b5 = bloomBit & 0x20;
  var tData = tView.data;

  if (b7) {
    b6 ? b5 ? tData[injectorIndex + 7] |= mask : tData[injectorIndex + 6] |= mask : b5 ? tData[injectorIndex + 5] |= mask : tData[injectorIndex + 4] |= mask;
  } else {
    b6 ? b5 ? tData[injectorIndex + 3] |= mask : tData[injectorIndex + 2] |= mask : b5 ? tData[injectorIndex + 1] |= mask : tData[injectorIndex] |= mask;
  }
}
/**
 * Creates (or gets an existing) injector for a given element or container.
 *
 * @param tNode for which an injector should be retrieved / created.
 * @param lView View where the node is stored
 * @returns Node injector
 */


function getOrCreateNodeInjectorForNode(tNode, lView) {
  var existingInjectorIndex = getInjectorIndex(tNode, lView);

  if (existingInjectorIndex !== -1) {
    return existingInjectorIndex;
  }

  var tView = lView[TVIEW];

  if (tView.firstCreatePass) {
    tNode.injectorIndex = lView.length;
    insertBloom(tView.data, tNode); // foundation for node bloom

    insertBloom(lView, null); // foundation for cumulative bloom

    insertBloom(tView.blueprint, null);
  }

  var parentLoc = getParentInjectorLocation(tNode, lView);
  var injectorIndex = tNode.injectorIndex; // If a parent injector can't be found, its location is set to -1.
  // In that case, we don't need to set up a cumulative bloom

  if (hasParentInjector(parentLoc)) {
    var parentIndex = getParentInjectorIndex(parentLoc);
    var parentLView = getParentInjectorView(parentLoc, lView);
    var parentData = parentLView[TVIEW].data; // Creates a cumulative bloom filter that merges the parent's bloom filter
    // and its own cumulative bloom (which contains tokens for all ancestors)

    for (var i = 0; i < 8
    /* BLOOM_SIZE */
    ; i++) {
      lView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];
    }
  }

  lView[injectorIndex + 8
  /* PARENT */
  ] = parentLoc;
  return injectorIndex;
}

function insertBloom(arr, footer) {
  arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);
}

function getInjectorIndex(tNode, lView) {
  if (tNode.injectorIndex === -1 || // If the injector index is the same as its parent's injector index, then the index has been
  // copied down from the parent node. No injector has been created yet on this node.
  tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex || // After the first template pass, the injector index might exist but the parent values
  // might not have been calculated yet for this instance
  lView[tNode.injectorIndex + 8
  /* PARENT */
  ] === null) {
    return -1;
  } else {
    ngDevMode && assertIndexInRange(lView, tNode.injectorIndex);
    return tNode.injectorIndex;
  }
}
/**
 * Finds the index of the parent injector, with a view offset if applicable. Used to set the
 * parent injector initially.
 *
 * @returns Returns a number that is the combination of the number of LViews that we have to go up
 * to find the LView containing the parent inject AND the index of the injector within that LView.
 */


function getParentInjectorLocation(tNode, lView) {
  if (tNode.parent && tNode.parent.injectorIndex !== -1) {
    // If we have a parent `TNode` and there is an injector associated with it we are done, because
    // the parent injector is within the current `LView`.
    return tNode.parent.injectorIndex; // ViewOffset is 0
  } // When parent injector location is computed it may be outside of the current view. (ie it could
  // be pointing to a declared parent location). This variable stores number of declaration parents
  // we need to walk up in order to find the parent injector location.


  var declarationViewOffset = 0;
  var parentTNode = null;
  var lViewCursor = lView; // The parent injector is not in the current `LView`. We will have to walk the declared parent
  // `LView` hierarchy and look for it. If we walk of the top, that means that there is no parent
  // `NodeInjector`.

  while (lViewCursor !== null) {
    // First determine the `parentTNode` location. The parent pointer differs based on `TView.type`.
    var tView = lViewCursor[TVIEW];
    var tViewType = tView.type;

    if (tViewType === 2
    /* Embedded */
    ) {
        ngDevMode && assertDefined(tView.declTNode, 'Embedded TNodes should have declaration parents.');
        parentTNode = tView.declTNode;
      } else if (tViewType === 1
    /* Component */
    ) {
        // Components don't have `TView.declTNode` because each instance of component could be
        // inserted in different location, hence `TView.declTNode` is meaningless.
        parentTNode = lViewCursor[T_HOST];
      } else {
      ngDevMode && assertEqual(tView.type, 0
      /* Root */
      , 'Root type expected');
      parentTNode = null;
    }

    if (parentTNode === null) {
      // If we have no parent, than we are done.
      return NO_PARENT_INJECTOR;
    }

    ngDevMode && parentTNode && assertTNodeForLView(parentTNode, lViewCursor[DECLARATION_VIEW]); // Every iteration of the loop requires that we go to the declared parent.

    declarationViewOffset++;
    lViewCursor = lViewCursor[DECLARATION_VIEW];

    if (parentTNode.injectorIndex !== -1) {
      // We found a NodeInjector which points to something.
      return parentTNode.injectorIndex | declarationViewOffset << 16
      /* ViewOffsetShift */
      ;
    }
  }

  return NO_PARENT_INJECTOR;
}
/**
 * Makes a type or an injection token public to the DI system by adding it to an
 * injector's bloom filter.
 *
 * @param di The node injector in which a directive will be added
 * @param token The type or the injection token to be made public
 */


function diPublicInInjector(injectorIndex, tView, token) {
  bloomAdd(injectorIndex, tView, token);
}
/**
 * Inject static attribute value into directive constructor.
 *
 * This method is used with `factory` functions which are generated as part of
 * `defineDirective` or `defineComponent`. The method retrieves the static value
 * of an attribute. (Dynamic attributes are not supported since they are not resolved
 *  at the time of injection and can change over time.)
 *
 * # Example
 * Given:
 * ```
 * @Component(...)
 * class MyComponent {
 *   constructor(@Attribute('title') title: string) { ... }
 * }
 * ```
 * When instantiated with
 * ```
 * <my-component title="Hello"></my-component>
 * ```
 *
 * Then factory method generated is:
 * ```
 * MyComponent.ɵcmp = defineComponent({
 *   factory: () => new MyComponent(injectAttribute('title'))
 *   ...
 * })
 * ```
 *
 * @publicApi
 */


function injectAttributeImpl(tNode, attrNameToInject) {
  ngDevMode && assertTNodeType(tNode, 12
  /* AnyContainer */
  | 3
  /* AnyRNode */
  );
  ngDevMode && assertDefined(tNode, 'expecting tNode');

  if (attrNameToInject === 'class') {
    return tNode.classes;
  }

  if (attrNameToInject === 'style') {
    return tNode.styles;
  }

  var attrs = tNode.attrs;

  if (attrs) {
    var attrsLength = attrs.length;
    var i = 0;

    while (i < attrsLength) {
      var value = attrs[i]; // If we hit a `Bindings` or `Template` marker then we are done.

      if (isNameOnlyAttributeMarker(value)) break; // Skip namespaced attributes

      if (value === 0
      /* NamespaceURI */
      ) {
          // we skip the next two values
          // as namespaced attributes looks like
          // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',
          // 'existValue', ...]
          i = i + 2;
        } else if (typeof value === 'number') {
        // Skip to the first value of the marked attribute.
        i++;

        while (i < attrsLength && typeof attrs[i] === 'string') {
          i++;
        }
      } else if (value === attrNameToInject) {
        return attrs[i + 1];
      } else {
        i = i + 2;
      }
    }
  }

  return null;
}

function notFoundValueOrThrow(notFoundValue, token, flags) {
  if (flags & InjectFlags.Optional) {
    return notFoundValue;
  } else {
    throwProviderNotFoundError(token, 'NodeInjector');
  }
}
/**
 * Returns the value associated to the given token from the ModuleInjector or throws exception
 *
 * @param lView The `LView` that contains the `tNode`
 * @param token The token to look for
 * @param flags Injection flags
 * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`
 * @returns the value from the injector or throws an exception
 */


function lookupTokenUsingModuleInjector(lView, token, flags, notFoundValue) {
  if (flags & InjectFlags.Optional && notFoundValue === undefined) {
    // This must be set or the NullInjector will throw for optional deps
    notFoundValue = null;
  }

  if ((flags & (InjectFlags.Self | InjectFlags.Host)) === 0) {
    var moduleInjector = lView[INJECTOR]; // switch to `injectInjectorOnly` implementation for module injector, since module injector
    // should not have access to Component/Directive DI scope (that may happen through
    // `directiveInject` implementation)

    var previousInjectImplementation = setInjectImplementation(undefined);

    try {
      if (moduleInjector) {
        return moduleInjector.get(token, notFoundValue, flags & InjectFlags.Optional);
      } else {
        return injectRootLimpMode(token, notFoundValue, flags & InjectFlags.Optional);
      }
    } finally {
      setInjectImplementation(previousInjectImplementation);
    }
  }

  return notFoundValueOrThrow(notFoundValue, token, flags);
}
/**
 * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.
 *
 * Look for the injector providing the token by walking up the node injector tree and then
 * the module injector tree.
 *
 * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom
 * filter. `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)
 *
 * @param tNode The Node where the search for the injector should start
 * @param lView The `LView` that contains the `tNode`
 * @param token The token to look for
 * @param flags Injection flags
 * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`
 * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided
 */


function getOrCreateInjectable(tNode, lView, token) {
  var flags = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : InjectFlags.Default;
  var notFoundValue = arguments.length > 4 ? arguments[4] : undefined;

  if (tNode !== null) {
    var bloomHash = bloomHashBitOrFactory(token); // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef
    // so just call the factory function to create it.

    if (typeof bloomHash === 'function') {
      if (!enterDI(lView, tNode, flags)) {
        // Failed to enter DI, try module injector instead. If a token is injected with the @Host
        // flag, the module injector is not searched for that token in Ivy.
        return flags & InjectFlags.Host ? notFoundValueOrThrow(notFoundValue, token, flags) : lookupTokenUsingModuleInjector(lView, token, flags, notFoundValue);
      }

      try {
        var value = bloomHash();

        if (value == null && !(flags & InjectFlags.Optional)) {
          throwProviderNotFoundError(token);
        } else {
          return value;
        }
      } finally {
        leaveDI();
      }
    } else if (typeof bloomHash === 'number') {
      // A reference to the previous injector TView that was found while climbing the element
      // injector tree. This is used to know if viewProviders can be accessed on the current
      // injector.
      var previousTView = null;
      var injectorIndex = getInjectorIndex(tNode, lView);
      var parentLocation = NO_PARENT_INJECTOR;
      var hostTElementNode = flags & InjectFlags.Host ? lView[DECLARATION_COMPONENT_VIEW][T_HOST] : null; // If we should skip this injector, or if there is no injector on this node, start by
      // searching the parent injector.

      if (injectorIndex === -1 || flags & InjectFlags.SkipSelf) {
        parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) : lView[injectorIndex + 8
        /* PARENT */
        ];

        if (parentLocation === NO_PARENT_INJECTOR || !shouldSearchParent(flags, false)) {
          injectorIndex = -1;
        } else {
          previousTView = lView[TVIEW];
          injectorIndex = getParentInjectorIndex(parentLocation);
          lView = getParentInjectorView(parentLocation, lView);
        }
      } // Traverse up the injector tree until we find a potential match or until we know there
      // *isn't* a match.


      while (injectorIndex !== -1) {
        ngDevMode && assertNodeInjector(lView, injectorIndex); // Check the current injector. If it matches, see if it contains token.

        var tView = lView[TVIEW];
        ngDevMode && assertTNodeForLView(tView.data[injectorIndex + 8
        /* TNODE */
        ], lView);

        if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {
          // At this point, we have an injector which *may* contain the token, so we step through
          // the providers and directives associated with the injector's corresponding node to get
          // the instance.
          var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);

          if (instance !== NOT_FOUND) {
            return instance;
          }
        }

        parentLocation = lView[injectorIndex + 8
        /* PARENT */
        ];

        if (parentLocation !== NO_PARENT_INJECTOR && shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + 8
        /* TNODE */
        ] === hostTElementNode) && bloomHasToken(bloomHash, injectorIndex, lView)) {
          // The def wasn't found anywhere on this node, so it was a false positive.
          // Traverse up the tree and continue searching.
          previousTView = tView;
          injectorIndex = getParentInjectorIndex(parentLocation);
          lView = getParentInjectorView(parentLocation, lView);
        } else {
          // If we should not search parent OR If the ancestor bloom filter value does not have the
          // bit corresponding to the directive we can give up on traversing up to find the specific
          // injector.
          injectorIndex = -1;
        }
      }
    }
  }

  return lookupTokenUsingModuleInjector(lView, token, flags, notFoundValue);
}

var NOT_FOUND = {};

function createNodeInjector() {
  return new NodeInjector(getCurrentTNode(), getLView());
}

function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {
  var currentTView = lView[TVIEW];
  var tNode = currentTView.data[injectorIndex + 8
  /* TNODE */
  ]; // First, we need to determine if view providers can be accessed by the starting element.
  // There are two possibilities

  var canAccessViewProviders = previousTView == null ? // 1) This is the first invocation `previousTView == null` which means that we are at the
  // `TNode` of where injector is starting to look. In such a case the only time we are allowed
  // to look into the ViewProviders is if:
  // - we are on a component
  // - AND the injector set `includeViewProviders` to true (implying that the token can see
  // ViewProviders because it is the Component or a Service which itself was declared in
  // ViewProviders)
  isComponentHost(tNode) && includeViewProviders : // 2) `previousTView != null` which means that we are now walking across the parent nodes.
  // In such a case we are only allowed to look into the ViewProviders if:
  // - We just crossed from child View to Parent View `previousTView != currentTView`
  // - AND the parent TNode is an Element.
  // This means that we just came from the Component's View and therefore are allowed to see
  // into the ViewProviders.
  previousTView != currentTView && (tNode.type & 3
  /* AnyRNode */
  ) !== 0; // This special case happens when there is a @host on the inject and when we are searching
  // on the host element node.

  var isHostSpecialCase = flags & InjectFlags.Host && hostTElementNode === tNode;
  var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);

  if (injectableIdx !== null) {
    return getNodeInjectable(lView, currentTView, injectableIdx, tNode);
  } else {
    return NOT_FOUND;
  }
}
/**
 * Searches for the given token among the node's directives and providers.
 *
 * @param tNode TNode on which directives are present.
 * @param tView The tView we are currently processing
 * @param token Provider token or type of a directive to look for.
 * @param canAccessViewProviders Whether view providers should be considered.
 * @param isHostSpecialCase Whether the host special case applies.
 * @returns Index of a found directive or provider, or null when none found.
 */


function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {
  var nodeProviderIndexes = tNode.providerIndexes;
  var tInjectables = tView.data;
  var injectablesStart = nodeProviderIndexes & 1048575
  /* ProvidersStartIndexMask */
  ;
  var directivesStart = tNode.directiveStart;
  var directiveEnd = tNode.directiveEnd;
  var cptViewProvidersCount = nodeProviderIndexes >> 20
  /* CptViewProvidersCountShift */
  ;
  var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount; // When the host special case applies, only the viewProviders and the component are visible

  var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;

  for (var i = startingIndex; i < endIndex; i++) {
    var providerTokenOrDef = tInjectables[i];

    if (i < directivesStart && token === providerTokenOrDef || i >= directivesStart && providerTokenOrDef.type === token) {
      return i;
    }
  }

  if (isHostSpecialCase) {
    var dirDef = tInjectables[directivesStart];

    if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {
      return directivesStart;
    }
  }

  return null;
}
/**
 * Retrieve or instantiate the injectable from the `LView` at particular `index`.
 *
 * This function checks to see if the value has already been instantiated and if so returns the
 * cached `injectable`. Otherwise if it detects that the value is still a factory it
 * instantiates the `injectable` and caches the value.
 */


function getNodeInjectable(lView, tView, index, tNode) {
  var value = lView[index];
  var tData = tView.data;

  if (isFactory(value)) {
    var factory = value;

    if (factory.resolving) {
      throwCyclicDependencyError(stringifyForError(tData[index]));
    }

    var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);
    factory.resolving = true;
    var previousInjectImplementation = factory.injectImpl ? setInjectImplementation(factory.injectImpl) : null;
    var success = enterDI(lView, tNode, InjectFlags.Default);
    ngDevMode && assertEqual(success, true, 'Because flags do not contain \`SkipSelf\' we expect this to always succeed.');

    try {
      value = lView[index] = factory.factory(undefined, tData, lView, tNode); // This code path is hit for both directives and providers.
      // For perf reasons, we want to avoid searching for hooks on providers.
      // It does no harm to try (the hooks just won't exist), but the extra
      // checks are unnecessary and this is a hot path. So we check to see
      // if the index of the dependency is in the directive range for this
      // tNode. If it's not, we know it's a provider and skip hook registration.

      if (tView.firstCreatePass && index >= tNode.directiveStart) {
        ngDevMode && assertDirectiveDef(tData[index]);
        registerPreOrderHooks(index, tData[index], tView);
      }
    } finally {
      previousInjectImplementation !== null && setInjectImplementation(previousInjectImplementation);
      setIncludeViewProviders(previousIncludeViewProviders);
      factory.resolving = false;
      leaveDI();
    }
  }

  return value;
}
/**
 * Returns the bit in an injector's bloom filter that should be used to determine whether or not
 * the directive might be provided by the injector.
 *
 * When a directive is public, it is added to the bloom filter and given a unique ID that can be
 * retrieved on the Type. When the directive isn't public or the token is not a directive `null`
 * is returned as the node injector can not possibly provide that token.
 *
 * @param token the injection token
 * @returns the matching bit to check in the bloom filter or `null` if the token is not known.
 *   When the returned value is negative then it represents special values such as `Injector`.
 */


function bloomHashBitOrFactory(token) {
  ngDevMode && assertDefined(token, 'token must be defined');

  if (typeof token === 'string') {
    return token.charCodeAt(0) || 0;
  }

  var tokenId = // First check with `hasOwnProperty` so we don't get an inherited ID.
  token.hasOwnProperty(NG_ELEMENT_ID) ? token[NG_ELEMENT_ID] : undefined; // Negative token IDs are used for special objects such as `Injector`

  if (typeof tokenId === 'number') {
    if (tokenId >= 0) {
      return tokenId & BLOOM_MASK;
    } else {
      ngDevMode && assertEqual(tokenId, -1
      /* Injector */
      , 'Expecting to get Special Injector Id');
      return createNodeInjector;
    }
  } else {
    return tokenId;
  }
}

function bloomHasToken(bloomHash, injectorIndex, injectorView) {
  // Create a mask that targets the specific bit associated with the directive we're looking for.
  // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding
  // to bit positions 0 - 31 in a 32 bit integer.
  var mask = 1 << bloomHash;
  var b7 = bloomHash & 0x80;
  var b6 = bloomHash & 0x40;
  var b5 = bloomHash & 0x20; // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:
  // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.
  // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.

  var value;

  if (b7) {
    value = b6 ? b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6] : b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4];
  } else {
    value = b6 ? b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2] : b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex];
  } // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,
  // this injector is a potential match.


  return !!(value & mask);
}
/** Returns true if flags prevent parent injector from being searched for tokens */


function shouldSearchParent(flags, isFirstHostTNode) {
  return !(flags & InjectFlags.Self) && !(flags & InjectFlags.Host && isFirstHostTNode);
}

var NodeInjector = /*#__PURE__*/function () {
  function NodeInjector(_tNode, _lView) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, NodeInjector);

    this._tNode = _tNode;
    this._lView = _lView;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(NodeInjector, [{
    key: "get",
    value: function get(token, notFoundValue) {
      return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);
    }
  }]);

  return NodeInjector;
}();
/**
 * @codeGenApi
 */


function ɵɵgetFactoryOf(type) {
  var typeAny = type;

  if (isForwardRef(type)) {
    return function () {
      var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));
      return factory ? factory() : null;
    };
  }

  var factory = getFactoryDef(typeAny);

  if (factory === null) {
    var injectorDef = getInjectorDef(typeAny);
    factory = injectorDef && injectorDef.factory;
  }

  return factory || null;
}
/**
 * @codeGenApi
 */


function ɵɵgetInheritedFactory(type) {
  return noSideEffects(function () {
    var ownConstructor = type.prototype.constructor;
    var ownFactory = ownConstructor[NG_FACTORY_DEF] || ɵɵgetFactoryOf(ownConstructor);
    var objectPrototype = Object.prototype;
    var parent = Object.getPrototypeOf(type.prototype).constructor; // Go up the prototype until we hit `Object`.

    while (parent && parent !== objectPrototype) {
      var factory = parent[NG_FACTORY_DEF] || ɵɵgetFactoryOf(parent); // If we hit something that has a factory and the factory isn't the same as the type,
      // we've found the inherited factory. Note the check that the factory isn't the type's
      // own factory is redundant in most cases, but if the user has custom decorators on the
      // class, this lookup will start one level down in the prototype chain, causing us to
      // find the own factory first and potentially triggering an infinite loop downstream.

      if (factory && factory !== ownFactory) {
        return factory;
      }

      parent = Object.getPrototypeOf(parent);
    } // There is no factory defined. Either this was improper usage of inheritance
    // (no Angular decorator on the superclass) or there is no constructor at all
    // in the inheritance chain. Since the two cases cannot be distinguished, the
    // latter has to be assumed.


    return function (t) {
      return new t();
    };
  });
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ERROR_TYPE = 'ngType';
var ERROR_DEBUG_CONTEXT = 'ngDebugContext';
var ERROR_ORIGINAL_ERROR = 'ngOriginalError';
var ERROR_LOGGER = 'ngErrorLogger';

function wrappedError(message, originalError) {
  var msg = "".concat(message, " caused by: ").concat(originalError instanceof Error ? originalError.message : originalError);
  var error = Error(msg);
  error[ERROR_ORIGINAL_ERROR] = originalError;
  return error;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function getType(error) {
  return error[ERROR_TYPE];
}

function getDebugContext(error) {
  return error[ERROR_DEBUG_CONTEXT];
}

function getOriginalError(error) {
  return error[ERROR_ORIGINAL_ERROR];
}

function getErrorLogger(error) {
  return error[ERROR_LOGGER] || defaultErrorLogger;
}

function defaultErrorLogger(console) {
  for (var _len8 = arguments.length, values = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {
    values[_key8 - 1] = arguments[_key8];
  }

  console.error.apply(console, values);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Provides a hook for centralized exception handling.
 *
 * The default implementation of `ErrorHandler` prints error messages to the `console`. To
 * intercept error handling, write a custom exception handler that replaces this default as
 * appropriate for your app.
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * class MyErrorHandler implements ErrorHandler {
 *   handleError(error) {
 *     // do something with the exception
 *   }
 * }
 *
 * @NgModule({
 *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]
 * })
 * class MyModule {}
 * ```
 *
 * @publicApi
 */


var ErrorHandler = /*#__PURE__*/function () {
  function ErrorHandler() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ErrorHandler);

    /**
     * @internal
     */
    this._console = console;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ErrorHandler, [{
    key: "handleError",
    value: function handleError(error) {
      var originalError = this._findOriginalError(error);

      var context = this._findContext(error); // Note: Browser consoles show the place from where console.error was called.
      // We can use this to give users additional information about the error.


      var errorLogger = getErrorLogger(error);
      errorLogger(this._console, "ERROR", error);

      if (originalError) {
        errorLogger(this._console, "ORIGINAL ERROR", originalError);
      }

      if (context) {
        errorLogger(this._console, 'ERROR CONTEXT', context);
      }
    }
    /** @internal */

  }, {
    key: "_findContext",
    value: function _findContext(error) {
      if (error) {
        return getDebugContext(error) ? getDebugContext(error) : this._findContext(getOriginalError(error));
      }

      return null;
    }
    /** @internal */

  }, {
    key: "_findOriginalError",
    value: function _findOriginalError(error) {
      var e = getOriginalError(error);

      while (e && getOriginalError(e)) {
        e = getOriginalError(e);
      }

      return e;
    }
  }]);

  return ErrorHandler;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Defines a schema that allows an NgModule to contain the following:
 * - Non-Angular elements named with dash case (`-`).
 * - Element properties named with dash case (`-`).
 * Dash case is the naming convention for custom elements.
 *
 * @publicApi
 */


var CUSTOM_ELEMENTS_SCHEMA = {
  name: 'custom-elements'
};
/**
 * Defines a schema that allows any property on any element.
 *
 * @publicApi
 */

var NO_ERRORS_SCHEMA = {
  name: 'no-errors-schema'
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!
 */

/**
 * Creates an `Array` construction with a given name. This is useful when
 * looking for memory consumption to see what time of array it is.
 *
 *
 * @param name Name to give to the constructor
 * @returns A subclass of `Array` if possible. This can only be done in
 *          environments which support `class` construct.
 */

function createNamedArrayType(name) {
  // This should never be called in prod mode, so let's verify that is the case.
  if (ngDevMode) {
    try {
      // If this function were compromised the following could lead to arbitrary
      // script execution. We bless it with Trusted Types anyway since this
      // function is stripped out of production binaries.
      return newTrustedFunctionForDev('Array', "return class ".concat(name, " extends Array{}"))(Array);
    } catch (e) {
      // If it does not work just give up and fall back to regular Array.
      return Array;
    }
  } else {
    throw new Error('Looks like we are in \'prod mode\', but we are creating a named Array type, which is wrong! Check your code');
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function normalizeDebugBindingName(name) {
  // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers
  name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));
  return "ng-reflect-".concat(name);
}

var CAMEL_CASE_REGEXP = /([A-Z])/g;

function camelCaseToDashCase(input) {
  return input.replace(CAMEL_CASE_REGEXP, function () {
    for (var _len9 = arguments.length, m = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
      m[_key9] = arguments[_key9];
    }

    return '-' + m[1].toLowerCase();
  });
}

function normalizeDebugBindingValue(value) {
  try {
    // Limit the size of the value as otherwise the DOM just gets polluted.
    return value != null ? value.toString().slice(0, 30) : value;
  } catch (e) {
    return '[ERROR] Exception while trying to serialize the value';
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Returns the matching `LContext` data for a given DOM node, directive or component instance.
 *
 * This function will examine the provided DOM element, component, or directive instance\'s
 * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched
 * value will be that of the newly created `LContext`.
 *
 * If the monkey-patched value is the `LView` instance then the context value for that
 * target will be created and the monkey-patch reference will be updated. Therefore when this
 * function is called it may mutate the provided element\'s, component\'s or any of the associated
 * directive\'s monkey-patch values.
 *
 * If the monkey-patch value is not detected then the code will walk up the DOM until an element
 * is found which contains a monkey-patch reference. When that occurs then the provided element
 * will be updated with a new context (which is then returned). If the monkey-patch value is not
 * detected for a component/directive instance then it will throw an error (all components and
 * directives should be automatically monkey-patched by ivy).
 *
 * @param target Component, Directive or DOM Node.
 */


function getLContext(target) {
  var mpValue = readPatchedData(target);

  if (mpValue) {
    // only when it's an array is it considered an LView instance
    // ... otherwise it's an already constructed LContext instance
    if (Array.isArray(mpValue)) {
      var lView = mpValue;
      var nodeIndex;
      var component = undefined;
      var directives = undefined;

      if (isComponentInstance(target)) {
        nodeIndex = findViaComponent(lView, target);

        if (nodeIndex == -1) {
          throw new Error('The provided component was not found in the application');
        }

        component = target;
      } else if (isDirectiveInstance(target)) {
        nodeIndex = findViaDirective(lView, target);

        if (nodeIndex == -1) {
          throw new Error('The provided directive was not found in the application');
        }

        directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);
      } else {
        nodeIndex = findViaNativeElement(lView, target);

        if (nodeIndex == -1) {
          return null;
        }
      } // the goal is not to fill the entire context full of data because the lookups
      // are expensive. Instead, only the target data (the element, component, container, ICU
      // expression or directive details) are filled into the context. If called multiple times
      // with different target values then the missing target data will be filled in.


      var native = unwrapRNode(lView[nodeIndex]);
      var existingCtx = readPatchedData(native);
      var context = existingCtx && !Array.isArray(existingCtx) ? existingCtx : createLContext(lView, nodeIndex, native); // only when the component has been discovered then update the monkey-patch

      if (component && context.component === undefined) {
        context.component = component;
        attachPatchData(context.component, context);
      } // only when the directives have been discovered then update the monkey-patch


      if (directives && context.directives === undefined) {
        context.directives = directives;

        for (var i = 0; i < directives.length; i++) {
          attachPatchData(directives[i], context);
        }
      }

      attachPatchData(context.native, context);
      mpValue = context;
    }
  } else {
    var rElement = target;
    ngDevMode && assertDomNode(rElement); // if the context is not found then we need to traverse upwards up the DOM
    // to find the nearest element that has already been monkey patched with data

    var parent = rElement;

    while (parent = parent.parentNode) {
      var parentContext = readPatchedData(parent);

      if (parentContext) {
        var _lView2 = void 0;

        if (Array.isArray(parentContext)) {
          _lView2 = parentContext;
        } else {
          _lView2 = parentContext.lView;
        } // the edge of the app was also reached here through another means
        // (maybe because the DOM was changed manually).


        if (!_lView2) {
          return null;
        }

        var index = findViaNativeElement(_lView2, rElement);

        if (index >= 0) {
          var _native = unwrapRNode(_lView2[index]);

          var _context = createLContext(_lView2, index, _native);

          attachPatchData(_native, _context);
          mpValue = _context;
          break;
        }
      }
    }
  }

  return mpValue || null;
}
/**
 * Creates an empty instance of a `LContext` context
 */


function createLContext(lView, nodeIndex, native) {
  return {
    lView: lView,
    nodeIndex: nodeIndex,
    native: native,
    component: undefined,
    directives: undefined,
    localRefs: undefined
  };
}
/**
 * Takes a component instance and returns the view for that component.
 *
 * @param componentInstance
 * @returns The component's view
 */


function getComponentViewByInstance(componentInstance) {
  var lView = readPatchedData(componentInstance);
  var view;

  if (Array.isArray(lView)) {
    var nodeIndex = findViaComponent(lView, componentInstance);
    view = getComponentLViewByIndex(nodeIndex, lView);
    var context = createLContext(lView, nodeIndex, view[HOST]);
    context.component = componentInstance;
    attachPatchData(componentInstance, context);
    attachPatchData(context.native, context);
  } else {
    var _context2 = lView;
    view = getComponentLViewByIndex(_context2.nodeIndex, _context2.lView);
  }

  return view;
}
/**
 * Assigns the given data to the given target (which could be a component,
 * directive or DOM node instance) using monkey-patching.
 */


function attachPatchData(target, data) {
  target[MONKEY_PATCH_KEY_NAME] = data;
}

function isComponentInstance(instance) {
  return instance && instance.constructor && instance.constructor.ɵcmp;
}

function isDirectiveInstance(instance) {
  return instance && instance.constructor && instance.constructor.ɵdir;
}
/**
 * Locates the element within the given LView and returns the matching index
 */


function findViaNativeElement(lView, target) {
  var tView = lView[TVIEW];

  for (var i = HEADER_OFFSET; i < tView.bindingStartIndex; i++) {
    if (unwrapRNode(lView[i]) === target) {
      return i;
    }
  }

  return -1;
}
/**
 * Locates the next tNode (child, sibling or parent).
 */


function traverseNextElement(tNode) {
  if (tNode.child) {
    return tNode.child;
  } else if (tNode.next) {
    return tNode.next;
  } else {
    // Let's take the following template: <div><span>text</span></div><component/>
    // After checking the text node, we need to find the next parent that has a "next" TNode,
    // in this case the parent `div`, so that we can find the component.
    while (tNode.parent && !tNode.parent.next) {
      tNode = tNode.parent;
    }

    return tNode.parent && tNode.parent.next;
  }
}
/**
 * Locates the component within the given LView and returns the matching index
 */


function findViaComponent(lView, componentInstance) {
  var componentIndices = lView[TVIEW].components;

  if (componentIndices) {
    for (var i = 0; i < componentIndices.length; i++) {
      var elementComponentIndex = componentIndices[i];
      var componentView = getComponentLViewByIndex(elementComponentIndex, lView);

      if (componentView[CONTEXT] === componentInstance) {
        return elementComponentIndex;
      }
    }
  } else {
    var rootComponentView = getComponentLViewByIndex(HEADER_OFFSET, lView);
    var rootComponent = rootComponentView[CONTEXT];

    if (rootComponent === componentInstance) {
      // we are dealing with the root element here therefore we know that the
      // element is the very first element after the HEADER data in the lView
      return HEADER_OFFSET;
    }
  }

  return -1;
}
/**
 * Locates the directive within the given LView and returns the matching index
 */


function findViaDirective(lView, directiveInstance) {
  // if a directive is monkey patched then it will (by default)
  // have a reference to the LView of the current view. The
  // element bound to the directive being search lives somewhere
  // in the view data. We loop through the nodes and check their
  // list of directives for the instance.
  var tNode = lView[TVIEW].firstChild;

  while (tNode) {
    var directiveIndexStart = tNode.directiveStart;
    var directiveIndexEnd = tNode.directiveEnd;

    for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {
      if (lView[i] === directiveInstance) {
        return tNode.index;
      }
    }

    tNode = traverseNextElement(tNode);
  }

  return -1;
}
/**
 * Returns a list of directives extracted from the given view based on the
 * provided list of directive index values.
 *
 * @param nodeIndex The node index
 * @param lView The target view data
 * @param includeComponents Whether or not to include components in returned directives
 */


function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {
  var tNode = lView[TVIEW].data[nodeIndex];
  var directiveStartIndex = tNode.directiveStart;
  if (directiveStartIndex == 0) return EMPTY_ARRAY;
  var directiveEndIndex = tNode.directiveEnd;
  if (!includeComponents && tNode.flags & 2
  /* isComponentHost */
  ) directiveStartIndex++;
  return lView.slice(directiveStartIndex, directiveEndIndex);
}

function getComponentAtNodeIndex(nodeIndex, lView) {
  var tNode = lView[TVIEW].data[nodeIndex];
  var directiveStartIndex = tNode.directiveStart;
  return tNode.flags & 2
  /* isComponentHost */
  ? lView[directiveStartIndex] : null;
}
/**
 * Returns a map of local references (local reference name => element or directive instance) that
 * exist on a given element.
 */


function discoverLocalRefs(lView, nodeIndex) {
  var tNode = lView[TVIEW].data[nodeIndex];

  if (tNode && tNode.localNames) {
    var result = {};
    var localIndex = tNode.index + 1;

    for (var i = 0; i < tNode.localNames.length; i += 2) {
      result[tNode.localNames[i]] = lView[localIndex];
      localIndex++;
    }

    return result;
  }

  return null;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ɵ0$4 = function ɵ0$4() {
  return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only
  setTimeout // everything else
  ).bind(_global);
};

var defaultScheduler = /*@__PURE__*/ɵ0$4();
/**
 *
 * @codeGenApi
 */

function ɵɵresolveWindow(element) {
  return {
    name: 'window',
    target: element.ownerDocument.defaultView
  };
}
/**
 *
 * @codeGenApi
 */


function ɵɵresolveDocument(element) {
  return {
    name: 'document',
    target: element.ownerDocument
  };
}
/**
 *
 * @codeGenApi
 */


function ɵɵresolveBody(element) {
  return {
    name: 'body',
    target: element.ownerDocument.body
  };
}
/**
 * The special delimiter we use to separate property names, prefixes, and suffixes
 * in property binding metadata. See storeBindingMetadata().
 *
 * We intentionally use the Unicode "REPLACEMENT CHARACTER" (U+FFFD) as a delimiter
 * because it is a very uncommon character that is unlikely to be part of a user's
 * property names or interpolation strings. If it is in fact used in a property
 * binding, DebugElement.properties will not return the correct value for that
 * binding. However, there should be no runtime effect for real applications.
 *
 * This character is typically rendered as a question mark inside of a diamond.
 * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)
 *
 */


var INTERPOLATION_DELIMITER = "\uFFFD";
/**
 * Unwrap a value which might be behind a closure (for forward declaration reasons).
 */

function maybeUnwrapFn(value) {
  if (value instanceof Function) {
    return value();
  } else {
    return value;
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Called when there are multiple component selectors that match a given node */


function throwMultipleComponentError(tNode) {
  throw new RuntimeError("300"
  /* MULTIPLE_COMPONENTS_MATCH */
  , "Multiple components match node with tagname ".concat(tNode.value));
}
/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */


function throwErrorIfNoChangesMode(creationMode, oldValue, currValue, propName) {
  var field = propName ? " for '".concat(propName, "'") : '';
  var msg = "ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value".concat(field, ": '").concat(oldValue, "'. Current value: '").concat(currValue, "'.");

  if (creationMode) {
    msg += " It seems like the view has been created after its parent and its children have been dirty checked." + " Has it been created in a change detection hook?";
  } // TODO: include debug context, see `viewDebugError` function in
  // `packages/core/src/view/errors.ts` for reference.


  throw new RuntimeError("100"
  /* EXPRESSION_CHANGED_AFTER_CHECKED */
  , msg);
}

function constructDetailsForInterpolation(lView, rootIndex, expressionIndex, meta, changedValue) {
  var _meta$split = meta.split(INTERPOLATION_DELIMITER),
      _meta$split2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toArray__WEBPACK_IMPORTED_MODULE_5__["default"])(_meta$split),
      propName = _meta$split2[0],
      prefix = _meta$split2[1],
      chunks = _meta$split2.slice(2);

  var oldValue = prefix,
      newValue = prefix;

  for (var i = 0; i < chunks.length; i++) {
    var slotIdx = rootIndex + i;
    oldValue += "".concat(lView[slotIdx]).concat(chunks[i]);
    newValue += "".concat(slotIdx === expressionIndex ? changedValue : lView[slotIdx]).concat(chunks[i]);
  }

  return {
    propName: propName,
    oldValue: oldValue,
    newValue: newValue
  };
}
/**
 * Constructs an object that contains details for the ExpressionChangedAfterItHasBeenCheckedError:
 * - property name (for property bindings or interpolations)
 * - old and new values, enriched using information from metadata
 *
 * More information on the metadata storage format can be found in `storePropertyBindingMetadata`
 * function description.
 */


function getExpressionChangedErrorDetails(lView, bindingIndex, oldValue, newValue) {
  var tData = lView[TVIEW].data;
  var metadata = tData[bindingIndex];

  if (typeof metadata === 'string') {
    // metadata for property interpolation
    if (metadata.indexOf(INTERPOLATION_DELIMITER) > -1) {
      return constructDetailsForInterpolation(lView, bindingIndex, bindingIndex, metadata, newValue);
    } // metadata for property binding


    return {
      propName: metadata,
      oldValue: oldValue,
      newValue: newValue
    };
  } // metadata is not available for this expression, check if this expression is a part of the
  // property interpolation by going from the current binding index left and look for a string that
  // contains INTERPOLATION_DELIMITER, the layout in tView.data for this case will look like this:
  // [..., 'id�Prefix � and � suffix', null, null, null, ...]


  if (metadata === null) {
    var idx = bindingIndex - 1;

    while (typeof tData[idx] !== 'string' && tData[idx + 1] === null) {
      idx--;
    }

    var meta = tData[idx];

    if (typeof meta === 'string') {
      var matches = meta.match(new RegExp(INTERPOLATION_DELIMITER, 'g')); // first interpolation delimiter separates property name from interpolation parts (in case of
      // property interpolations), so we subtract one from total number of found delimiters

      if (matches && matches.length - 1 > bindingIndex - idx) {
        return constructDetailsForInterpolation(lView, idx, bindingIndex, meta, newValue);
      }
    }
  }

  return {
    propName: undefined,
    oldValue: oldValue,
    newValue: newValue
  };
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Flags for renderer-specific style modifiers.
 * @publicApi
 */


var RendererStyleFlags2 = /*@__PURE__*/function (RendererStyleFlags2) {
  // TODO(misko): This needs to be refactored into a separate file so that it can be imported from
  // `node_manipulation.ts` Currently doing the import cause resolution order to change and fails
  // the tests. The work around is to have hard coded value in `node_manipulation.ts` for now.

  /**
   * Marks a style as important.
   */
  RendererStyleFlags2[RendererStyleFlags2["Important"] = 1] = "Important";
  /**
   * Marks a style as using dash case naming (this-is-dash-case).
   */

  RendererStyleFlags2[RendererStyleFlags2["DashCase"] = 2] = "DashCase";
  return RendererStyleFlags2;
}({});
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var _icuContainerIterate;
/**
 * Iterator which provides ability to visit all of the `TIcuContainerNode` root `RNode`s.
 */


function icuContainerIterate(tIcuContainerNode, lView) {
  return _icuContainerIterate(tIcuContainerNode, lView);
}
/**
 * Ensures that `IcuContainerVisitor`'s implementation is present.
 *
 * This function is invoked when i18n instruction comes across an ICU. The purpose is to allow the
 * bundler to tree shake ICU logic and only load it if ICU instruction is executed.
 */


function ensureIcuContainerVisitorLoaded(loader) {
  if (_icuContainerIterate === undefined) {
    // Do not inline this function. We want to keep `ensureIcuContainerVisitorLoaded` light, so it
    // can be inlined into call-site.
    _icuContainerIterate = loader();
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.


var unusedValueExportToPlacateAjd$5 = 1;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of
 * that LContainer, which is an LView
 * @param lView the lView whose parent to get
 */

function getLViewParent(lView) {
  ngDevMode && assertLView(lView);
  var parent = lView[PARENT];
  return isLContainer(parent) ? parent[PARENT] : parent;
}
/**
 * Retrieve the root view from any component or `LView` by walking the parent `LView` until
 * reaching the root `LView`.
 *
 * @param componentOrLView any component or `LView`
 */


function getRootView(componentOrLView) {
  ngDevMode && assertDefined(componentOrLView, 'component');
  var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);

  while (lView && !(lView[FLAGS] & 512
  /* IsRoot */
  )) {
    lView = getLViewParent(lView);
  }

  ngDevMode && assertLView(lView);
  return lView;
}
/**
 * Returns the `RootContext` instance that is associated with
 * the application where the target is situated. It does this by walking the parent views until it
 * gets to the root view, then getting the context off of that.
 *
 * @param viewOrComponent the `LView` or component to get the root context for.
 */


function getRootContext(viewOrComponent) {
  var rootView = getRootView(viewOrComponent);
  ngDevMode && assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');
  return rootView[CONTEXT];
}
/**
 * Gets the first `LContainer` in the LView or `null` if none exists.
 */


function getFirstLContainer(lView) {
  return getNearestLContainer(lView[CHILD_HEAD]);
}
/**
 * Gets the next `LContainer` that is a sibling of the given container.
 */


function getNextLContainer(container) {
  return getNearestLContainer(container[NEXT]);
}

function getNearestLContainer(viewOrContainer) {
  while (viewOrContainer !== null && !isLContainer(viewOrContainer)) {
    viewOrContainer = viewOrContainer[NEXT];
  }

  return viewOrContainer;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd;
/**
 * NOTE: for performance reasons, the possible actions are inlined within the function instead of
 * being passed as an argument.
 */

function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {
  // If this slot was allocated for a text node dynamically created by i18n, the text node itself
  // won't be created until i18nApply() in the update block, so this node should be skipped.
  // For more info, see "ICU expressions should work inside an ngTemplateOutlet inside an ngFor"
  // in `i18n_spec.ts`.
  if (lNodeToHandle != null) {
    var lContainer;
    var isComponent = false; // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is
    // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if
    // it has LContainer so that we can process all of those cases appropriately.

    if (isLContainer(lNodeToHandle)) {
      lContainer = lNodeToHandle;
    } else if (isLView(lNodeToHandle)) {
      isComponent = true;
      ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');
      lNodeToHandle = lNodeToHandle[HOST];
    }

    var rNode = unwrapRNode(lNodeToHandle);
    ngDevMode && !isProceduralRenderer(renderer) && assertDomNode(rNode);

    if (action === 0
    /* Create */
    && parent !== null) {
      if (beforeNode == null) {
        nativeAppendChild(renderer, parent, rNode);
      } else {
        nativeInsertBefore(renderer, parent, rNode, beforeNode || null, true);
      }
    } else if (action === 1
    /* Insert */
    && parent !== null) {
      nativeInsertBefore(renderer, parent, rNode, beforeNode || null, true);
    } else if (action === 2
    /* Detach */
    ) {
        nativeRemoveNode(renderer, rNode, isComponent);
      } else if (action === 3
    /* Destroy */
    ) {
        ngDevMode && ngDevMode.rendererDestroyNode++;
        renderer.destroyNode(rNode);
      }

    if (lContainer != null) {
      applyContainer(renderer, action, lContainer, parent, beforeNode);
    }
  }
}

function createTextNode(renderer, value) {
  ngDevMode && ngDevMode.rendererCreateTextNode++;
  ngDevMode && ngDevMode.rendererSetText++;
  return isProceduralRenderer(renderer) ? renderer.createText(value) : renderer.createTextNode(value);
}

function updateTextNode(renderer, rNode, value) {
  ngDevMode && ngDevMode.rendererSetText++;
  isProceduralRenderer(renderer) ? renderer.setValue(rNode, value) : rNode.textContent = value;
}

function createCommentNode(renderer, value) {
  ngDevMode && ngDevMode.rendererCreateComment++; // isProceduralRenderer check is not needed because both `Renderer2` and `Renderer3` have the same
  // method name.

  return renderer.createComment(value);
}
/**
 * Creates a native element from a tag name, using a renderer.
 * @param renderer A renderer to use
 * @param name the tag name
 * @param namespace Optional namespace for element.
 * @returns the element created
 */


function createElementNode(renderer, name, namespace) {
  ngDevMode && ngDevMode.rendererCreateElement++;

  if (isProceduralRenderer(renderer)) {
    return renderer.createElement(name, namespace);
  } else {
    return namespace === null ? renderer.createElement(name) : renderer.createElementNS(namespace, name);
  }
}
/**
 * Removes all DOM elements associated with a view.
 *
 * Because some root nodes of the view may be containers, we sometimes need
 * to propagate deeply into the nested containers to remove all elements in the
 * views beneath it.
 *
 * @param tView The `TView' of the `LView` from which elements should be added or removed
 * @param lView The view from which elements should be added or removed
 */


function removeViewFromContainer(tView, lView) {
  var renderer = lView[RENDERER];
  applyView(tView, lView, renderer, 2
  /* Detach */
  , null, null);
  lView[HOST] = null;
  lView[T_HOST] = null;
}
/**
 * Adds all DOM elements associated with a view.
 *
 * Because some root nodes of the view may be containers, we sometimes need
 * to propagate deeply into the nested containers to add all elements in the
 * views beneath it.
 *
 * @param tView The `TView' of the `LView` from which elements should be added or removed
 * @param parentTNode The `TNode` where the `LView` should be attached to.
 * @param renderer Current renderer to use for DOM manipulations.
 * @param lView The view from which elements should be added or removed
 * @param parentNativeNode The parent `RElement` where it should be inserted into.
 * @param beforeNode The node before which elements should be added, if insert mode
 */


function addViewToContainer(tView, parentTNode, renderer, lView, parentNativeNode, beforeNode) {
  lView[HOST] = parentNativeNode;
  lView[T_HOST] = parentTNode;
  applyView(tView, lView, renderer, 1
  /* Insert */
  , parentNativeNode, beforeNode);
}
/**
 * Detach a `LView` from the DOM by detaching its nodes.
 *
 * @param tView The `TView' of the `LView` to be detached
 * @param lView the `LView` to be detached.
 */


function renderDetachView(tView, lView) {
  applyView(tView, lView, lView[RENDERER], 2
  /* Detach */
  , null, null);
}
/**
 * Traverses down and up the tree of views and containers to remove listeners and
 * call onDestroy callbacks.
 *
 * Notes:
 *  - Because it's used for onDestroy calls, it needs to be bottom-up.
 *  - Must process containers instead of their views to avoid splicing
 *  when views are destroyed and re-added.
 *  - Using a while loop because it's faster than recursion
 *  - Destroy only called on movement to sibling or movement to parent (laterally or up)
 *
 *  @param rootView The view to destroy
 */


function destroyViewTree(rootView) {
  // If the view has no children, we can clean it up and return early.
  var lViewOrLContainer = rootView[CHILD_HEAD];

  if (!lViewOrLContainer) {
    return cleanUpView(rootView[TVIEW], rootView);
  }

  while (lViewOrLContainer) {
    var next = null;

    if (isLView(lViewOrLContainer)) {
      // If LView, traverse down to child.
      next = lViewOrLContainer[CHILD_HEAD];
    } else {
      ngDevMode && assertLContainer(lViewOrLContainer); // If container, traverse down to its first LView.

      var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];
      if (firstView) next = firstView;
    }

    if (!next) {
      // Only clean up view when moving to the side or up, as destroy hooks
      // should be called in order from the bottom up.
      while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {
        if (isLView(lViewOrLContainer)) {
          cleanUpView(lViewOrLContainer[TVIEW], lViewOrLContainer);
        }

        lViewOrLContainer = lViewOrLContainer[PARENT];
      }

      if (lViewOrLContainer === null) lViewOrLContainer = rootView;

      if (isLView(lViewOrLContainer)) {
        cleanUpView(lViewOrLContainer[TVIEW], lViewOrLContainer);
      }

      next = lViewOrLContainer && lViewOrLContainer[NEXT];
    }

    lViewOrLContainer = next;
  }
}
/**
 * Inserts a view into a container.
 *
 * This adds the view to the container's array of active views in the correct
 * position. It also adds the view's elements to the DOM if the container isn't a
 * root node of another view (in that case, the view's elements will be added when
 * the container's parent view is added later).
 *
 * @param tView The `TView' of the `LView` to insert
 * @param lView The view to insert
 * @param lContainer The container into which the view should be inserted
 * @param index Which index in the container to insert the child view into
 */


function insertView(tView, lView, lContainer, index) {
  ngDevMode && assertLView(lView);
  ngDevMode && assertLContainer(lContainer);
  var indexInContainer = CONTAINER_HEADER_OFFSET + index;
  var containerLength = lContainer.length;

  if (index > 0) {
    // This is a new view, we need to add it to the children.
    lContainer[indexInContainer - 1][NEXT] = lView;
  }

  if (index < containerLength - CONTAINER_HEADER_OFFSET) {
    lView[NEXT] = lContainer[indexInContainer];
    addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);
  } else {
    lContainer.push(lView);
    lView[NEXT] = null;
  }

  lView[PARENT] = lContainer; // track views where declaration and insertion points are different

  var declarationLContainer = lView[DECLARATION_LCONTAINER];

  if (declarationLContainer !== null && lContainer !== declarationLContainer) {
    trackMovedView(declarationLContainer, lView);
  } // notify query that a new view has been added


  var lQueries = lView[QUERIES];

  if (lQueries !== null) {
    lQueries.insertView(tView);
  } // Sets the attached flag


  lView[FLAGS] |= 128
  /* Attached */
  ;
}
/**
 * Track views created from the declaration container (TemplateRef) and inserted into a
 * different LContainer.
 */


function trackMovedView(declarationContainer, lView) {
  ngDevMode && assertDefined(lView, 'LView required');
  ngDevMode && assertLContainer(declarationContainer);
  var movedViews = declarationContainer[MOVED_VIEWS];
  var insertedLContainer = lView[PARENT];
  ngDevMode && assertLContainer(insertedLContainer);
  var insertedComponentLView = insertedLContainer[PARENT][DECLARATION_COMPONENT_VIEW];
  ngDevMode && assertDefined(insertedComponentLView, 'Missing insertedComponentLView');
  var declaredComponentLView = lView[DECLARATION_COMPONENT_VIEW];
  ngDevMode && assertDefined(declaredComponentLView, 'Missing declaredComponentLView');

  if (declaredComponentLView !== insertedComponentLView) {
    // At this point the declaration-component is not same as insertion-component; this means that
    // this is a transplanted view. Mark the declared lView as having transplanted views so that
    // those views can participate in CD.
    declarationContainer[HAS_TRANSPLANTED_VIEWS] = true;
  }

  if (movedViews === null) {
    declarationContainer[MOVED_VIEWS] = [lView];
  } else {
    movedViews.push(lView);
  }
}

function detachMovedView(declarationContainer, lView) {
  ngDevMode && assertLContainer(declarationContainer);
  ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');
  var movedViews = declarationContainer[MOVED_VIEWS];
  var declarationViewIndex = movedViews.indexOf(lView);
  var insertionLContainer = lView[PARENT];
  ngDevMode && assertLContainer(insertionLContainer); // If the view was marked for refresh but then detached before it was checked (where the flag
  // would be cleared and the counter decremented), we need to decrement the view counter here
  // instead.

  if (lView[FLAGS] & 1024
  /* RefreshTransplantedView */
  ) {
      lView[FLAGS] &= ~1024
      /* RefreshTransplantedView */
      ;
      updateTransplantedViewCount(insertionLContainer, -1);
    }

  movedViews.splice(declarationViewIndex, 1);
}
/**
 * Detaches a view from a container.
 *
 * This method removes the view from the container's array of active views. It also
 * removes the view's elements from the DOM.
 *
 * @param lContainer The container from which to detach a view
 * @param removeIndex The index of the view to detach
 * @returns Detached LView instance.
 */


function detachView(lContainer, removeIndex) {
  if (lContainer.length <= CONTAINER_HEADER_OFFSET) return;
  var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;
  var viewToDetach = lContainer[indexInContainer];

  if (viewToDetach) {
    var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];

    if (declarationLContainer !== null && declarationLContainer !== lContainer) {
      detachMovedView(declarationLContainer, viewToDetach);
    }

    if (removeIndex > 0) {
      lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];
    }

    var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);
    removeViewFromContainer(viewToDetach[TVIEW], viewToDetach); // notify query that a view has been removed

    var lQueries = removedLView[QUERIES];

    if (lQueries !== null) {
      lQueries.detachView(removedLView[TVIEW]);
    }

    viewToDetach[PARENT] = null;
    viewToDetach[NEXT] = null; // Unsets the attached flag

    viewToDetach[FLAGS] &= ~128
    /* Attached */
    ;
  }

  return viewToDetach;
}
/**
 * A standalone function which destroys an LView,
 * conducting clean up (e.g. removing listeners, calling onDestroys).
 *
 * @param tView The `TView' of the `LView` to be destroyed
 * @param lView The view to be destroyed.
 */


function destroyLView(tView, lView) {
  if (!(lView[FLAGS] & 256
  /* Destroyed */
  )) {
    var renderer = lView[RENDERER];

    if (isProceduralRenderer(renderer) && renderer.destroyNode) {
      applyView(tView, lView, renderer, 3
      /* Destroy */
      , null, null);
    }

    destroyViewTree(lView);
  }
}
/**
 * Calls onDestroys hooks for all directives and pipes in a given view and then removes all
 * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks
 * can be propagated to @Output listeners.
 *
 * @param tView `TView` for the `LView` to clean up.
 * @param lView The LView to clean up
 */


function cleanUpView(tView, lView) {
  if (!(lView[FLAGS] & 256
  /* Destroyed */
  )) {
    // Usually the Attached flag is removed when the view is detached from its parent, however
    // if it's a root view, the flag won't be unset hence why we're also removing on destroy.
    lView[FLAGS] &= ~128
    /* Attached */
    ; // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook
    // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If
    // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.
    // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is
    // really more of an "afterDestroy" hook if you think about it.

    lView[FLAGS] |= 256
    /* Destroyed */
    ;
    executeOnDestroys(tView, lView);
    removeListeners(tView, lView); // For component views only, the local renderer is destroyed at clean up time.

    if (lView[TVIEW].type === 1
    /* Component */
    && isProceduralRenderer(lView[RENDERER])) {
      ngDevMode && ngDevMode.rendererDestroy++;
      lView[RENDERER].destroy();
    }

    var declarationContainer = lView[DECLARATION_LCONTAINER]; // we are dealing with an embedded view that is still inserted into a container

    if (declarationContainer !== null && isLContainer(lView[PARENT])) {
      // and this is a projected view
      if (declarationContainer !== lView[PARENT]) {
        detachMovedView(declarationContainer, lView);
      } // For embedded views still attached to a container: remove query result from this view.


      var lQueries = lView[QUERIES];

      if (lQueries !== null) {
        lQueries.detachView(tView);
      }
    }
  }
}
/** Removes listeners and unsubscribes from output subscriptions */


function removeListeners(tView, lView) {
  var tCleanup = tView.cleanup;

  if (tCleanup !== null) {
    var lCleanup = lView[CLEANUP];

    for (var i = 0; i < tCleanup.length - 1; i += 2) {
      if (typeof tCleanup[i] === 'string') {
        // This is a native DOM listener
        var idxOrTargetGetter = tCleanup[i + 1];
        var target = typeof idxOrTargetGetter === 'function' ? idxOrTargetGetter(lView) : unwrapRNode(lView[idxOrTargetGetter]);
        var listener = lCleanup[tCleanup[i + 2]];
        var useCaptureOrSubIdx = tCleanup[i + 3];

        if (typeof useCaptureOrSubIdx === 'boolean') {
          // native DOM listener registered with Renderer3
          target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);
        } else {
          if (useCaptureOrSubIdx >= 0) {
            // unregister
            lCleanup[useCaptureOrSubIdx]();
          } else {
            // Subscription
            lCleanup[-useCaptureOrSubIdx].unsubscribe();
          }
        }

        i += 2;
      } else {
        // This is a cleanup function that is grouped with the index of its context
        var context = lCleanup[tCleanup[i + 1]];
        tCleanup[i].call(context);
      }
    }

    lView[CLEANUP] = null;
  }
}
/** Calls onDestroy hooks for this view */


function executeOnDestroys(tView, lView) {
  var destroyHooks;

  if (tView != null && (destroyHooks = tView.destroyHooks) != null) {
    for (var i = 0; i < destroyHooks.length; i += 2) {
      var context = lView[destroyHooks[i]]; // Only call the destroy hook if the context has been requested.

      if (!(context instanceof NodeInjectorFactory)) {
        var toCall = destroyHooks[i + 1];

        if (Array.isArray(toCall)) {
          for (var j = 0; j < toCall.length; j += 2) {
            toCall[j + 1].call(context[toCall[j]]);
          }
        } else {
          toCall.call(context);
        }
      }
    }
  }
}
/**
 * Returns a native element if a node can be inserted into the given parent.
 *
 * There are two reasons why we may not be able to insert a element immediately.
 * - Projection: When creating a child content element of a component, we have to skip the
 *   insertion because the content of a component will be projected.
 *   `<component><content>delayed due to projection</content></component>`
 * - Parent container is disconnected: This can happen when we are inserting a view into
 *   parent container, which itself is disconnected. For example the parent container is part
 *   of a View which has not be inserted or is made for projection but has not been inserted
 *   into destination.
 *
 * @param tView: Current `TView`.
 * @param tNode: `TNode` for which we wish to retrieve render parent.
 * @param lView: Current `LView`.
 */


function getParentRElement(tView, tNode, lView) {
  return getClosestRElement(tView, tNode.parent, lView);
}
/**
 * Get closest `RElement` or `null` if it can't be found.
 *
 * If `TNode` is `TNodeType.Element` => return `RElement` at `LView[tNode.index]` location.
 * If `TNode` is `TNodeType.ElementContainer|IcuContain` => return the parent (recursively).
 * If `TNode` is `null` then return host `RElement`:
 *   - return `null` if projection
 *   - return `null` if parent container is disconnected (we have no parent.)
 *
 * @param tView: Current `TView`.
 * @param tNode: `TNode` for which we wish to retrieve `RElement` (or `null` if host element is
 *     needed).
 * @param lView: Current `LView`.
 * @returns `null` if the `RElement` can't be determined at this time (no parent / projection)
 */


function getClosestRElement(tView, tNode, lView) {
  var parentTNode = tNode; // Skip over element and ICU containers as those are represented by a comment node and
  // can't be used as a render parent.

  while (parentTNode !== null && parentTNode.type & (8
  /* ElementContainer */
  | 32
  /* Icu */
  )) {
    tNode = parentTNode;
    parentTNode = tNode.parent;
  } // If the parent tNode is null, then we are inserting across views: either into an embedded view
  // or a component view.


  if (parentTNode === null) {
    // We are inserting a root element of the component view into the component host element and
    // it should always be eager.
    return lView[HOST];
  } else {
    ngDevMode && assertTNodeType(parentTNode, 3
    /* AnyRNode */
    | 4
    /* Container */
    );

    if (parentTNode.flags & 2
    /* isComponentHost */
    ) {
        ngDevMode && assertTNodeForLView(parentTNode, lView);
        var encapsulation = tView.data[parentTNode.directiveStart].encapsulation; // We've got a parent which is an element in the current view. We just need to verify if the
        // parent element is not a component. Component's content nodes are not inserted immediately
        // because they will be projected, and so doing insert at this point would be wasteful.
        // Since the projection would then move it to its final destination. Note that we can't
        // make this assumption when using the Shadow DOM, because the native projection placeholders
        // (<content> or <slot>) have to be in place as elements are being inserted.

        if (encapsulation === ViewEncapsulation$1.None || encapsulation === ViewEncapsulation$1.Emulated) {
          return null;
        }
      }

    return getNativeByTNode(parentTNode, lView);
  }
}
/**
 * Inserts a native node before another native node for a given parent using {@link Renderer3}.
 * This is a utility function that can be used when native nodes were determined - it abstracts an
 * actual renderer being used.
 */


function nativeInsertBefore(renderer, parent, child, beforeNode, isMove) {
  ngDevMode && ngDevMode.rendererInsertBefore++;

  if (isProceduralRenderer(renderer)) {
    renderer.insertBefore(parent, child, beforeNode, isMove);
  } else {
    parent.insertBefore(child, beforeNode, isMove);
  }
}

function nativeAppendChild(renderer, parent, child) {
  ngDevMode && ngDevMode.rendererAppendChild++;
  ngDevMode && assertDefined(parent, 'parent node must be defined');

  if (isProceduralRenderer(renderer)) {
    renderer.appendChild(parent, child);
  } else {
    parent.appendChild(child);
  }
}

function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode, isMove) {
  if (beforeNode !== null) {
    nativeInsertBefore(renderer, parent, child, beforeNode, isMove);
  } else {
    nativeAppendChild(renderer, parent, child);
  }
}
/** Removes a node from the DOM given its native parent. */


function nativeRemoveChild(renderer, parent, child, isHostElement) {
  if (isProceduralRenderer(renderer)) {
    renderer.removeChild(parent, child, isHostElement);
  } else {
    parent.removeChild(child);
  }
}
/**
 * Returns a native parent of a given native node.
 */


function nativeParentNode(renderer, node) {
  return isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode;
}
/**
 * Returns a native sibling of a given native node.
 */


function nativeNextSibling(renderer, node) {
  return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;
}
/**
 * Find a node in front of which `currentTNode` should be inserted.
 *
 * This method determines the `RNode` in front of which we should insert the `currentRNode`. This
 * takes `TNode.insertBeforeIndex` into account if i18n code has been invoked.
 *
 * @param parentTNode parent `TNode`
 * @param currentTNode current `TNode` (The node which we would like to insert into the DOM)
 * @param lView current `LView`
 */


function getInsertInFrontOfRNode(parentTNode, currentTNode, lView) {
  return _getInsertInFrontOfRNodeWithI18n(parentTNode, currentTNode, lView);
}
/**
 * Find a node in front of which `currentTNode` should be inserted. (Does not take i18n into
 * account)
 *
 * This method determines the `RNode` in front of which we should insert the `currentRNode`. This
 * does not take `TNode.insertBeforeIndex` into account.
 *
 * @param parentTNode parent `TNode`
 * @param currentTNode current `TNode` (The node which we would like to insert into the DOM)
 * @param lView current `LView`
 */


function getInsertInFrontOfRNodeWithNoI18n(parentTNode, currentTNode, lView) {
  if (parentTNode.type & (8
  /* ElementContainer */
  | 32
  /* Icu */
  )) {
    return getNativeByTNode(parentTNode, lView);
  }

  return null;
}
/**
 * Tree shakable boundary for `getInsertInFrontOfRNodeWithI18n` function.
 *
 * This function will only be set if i18n code runs.
 */


var _getInsertInFrontOfRNodeWithI18n = getInsertInFrontOfRNodeWithNoI18n;
/**
 * Tree shakable boundary for `processI18nInsertBefore` function.
 *
 * This function will only be set if i18n code runs.
 */

var _processI18nInsertBefore;

function setI18nHandling(getInsertInFrontOfRNodeWithI18n, processI18nInsertBefore) {
  _getInsertInFrontOfRNodeWithI18n = getInsertInFrontOfRNodeWithI18n;
  _processI18nInsertBefore = processI18nInsertBefore;
}
/**
 * Appends the `child` native node (or a collection of nodes) to the `parent`.
 *
 * @param tView The `TView' to be appended
 * @param lView The current LView
 * @param childRNode The native child (or children) that should be appended
 * @param childTNode The TNode of the child element
 */


function appendChild(tView, lView, childRNode, childTNode) {
  var parentRNode = getParentRElement(tView, childTNode, lView);
  var renderer = lView[RENDERER];
  var parentTNode = childTNode.parent || lView[T_HOST];
  var anchorNode = getInsertInFrontOfRNode(parentTNode, childTNode, lView);

  if (parentRNode != null) {
    if (Array.isArray(childRNode)) {
      for (var i = 0; i < childRNode.length; i++) {
        nativeAppendOrInsertBefore(renderer, parentRNode, childRNode[i], anchorNode, false);
      }
    } else {
      nativeAppendOrInsertBefore(renderer, parentRNode, childRNode, anchorNode, false);
    }
  }

  _processI18nInsertBefore !== undefined && _processI18nInsertBefore(renderer, childTNode, lView, childRNode, parentRNode);
}
/**
 * Returns the first native node for a given LView, starting from the provided TNode.
 *
 * Native nodes are returned in the order in which those appear in the native tree (DOM).
 */


function getFirstNativeNode(lView, tNode) {
  if (tNode !== null) {
    ngDevMode && assertTNodeType(tNode, 3
    /* AnyRNode */
    | 12
    /* AnyContainer */
    | 32
    /* Icu */
    | 16
    /* Projection */
    );
    var tNodeType = tNode.type;

    if (tNodeType & 3
    /* AnyRNode */
    ) {
        return getNativeByTNode(tNode, lView);
      } else if (tNodeType & 4
    /* Container */
    ) {
        return getBeforeNodeForView(-1, lView[tNode.index]);
      } else if (tNodeType & 8
    /* ElementContainer */
    ) {
        var elIcuContainerChild = tNode.child;

        if (elIcuContainerChild !== null) {
          return getFirstNativeNode(lView, elIcuContainerChild);
        } else {
          var rNodeOrLContainer = lView[tNode.index];

          if (isLContainer(rNodeOrLContainer)) {
            return getBeforeNodeForView(-1, rNodeOrLContainer);
          } else {
            return unwrapRNode(rNodeOrLContainer);
          }
        }
      } else if (tNodeType & 32
    /* Icu */
    ) {
        var nextRNode = icuContainerIterate(tNode, lView);
        var rNode = nextRNode(); // If the ICU container has no nodes, than we use the ICU anchor as the node.

        return rNode || unwrapRNode(lView[tNode.index]);
      } else {
      var componentView = lView[DECLARATION_COMPONENT_VIEW];
      var componentHost = componentView[T_HOST];
      var parentView = getLViewParent(componentView);
      var firstProjectedTNode = componentHost.projection[tNode.projection];

      if (firstProjectedTNode != null) {
        return getFirstNativeNode(parentView, firstProjectedTNode);
      } else {
        return getFirstNativeNode(lView, tNode.next);
      }
    }
  }

  return null;
}

function getBeforeNodeForView(viewIndexInContainer, lContainer) {
  var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;

  if (nextViewIndex < lContainer.length) {
    var lView = lContainer[nextViewIndex];
    var firstTNodeOfView = lView[TVIEW].firstChild;

    if (firstTNodeOfView !== null) {
      return getFirstNativeNode(lView, firstTNodeOfView);
    }
  }

  return lContainer[NATIVE];
}
/**
 * Removes a native node itself using a given renderer. To remove the node we are looking up its
 * parent from the native tree as not all platforms / browsers support the equivalent of
 * node.remove().
 *
 * @param renderer A renderer to be used
 * @param rNode The native node that should be removed
 * @param isHostElement A flag indicating if a node to be removed is a host of a component.
 */


function nativeRemoveNode(renderer, rNode, isHostElement) {
  ngDevMode && ngDevMode.rendererRemoveNode++;
  var nativeParent = nativeParentNode(renderer, rNode);

  if (nativeParent) {
    nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);
  }
}
/**
 * Performs the operation of `action` on the node. Typically this involves inserting or removing
 * nodes on the LView or projection boundary.
 */


function applyNodes(renderer, action, tNode, lView, parentRElement, beforeNode, isProjection) {
  while (tNode != null) {
    ngDevMode && assertTNodeForLView(tNode, lView);
    ngDevMode && assertTNodeType(tNode, 3
    /* AnyRNode */
    | 12
    /* AnyContainer */
    | 16
    /* Projection */
    | 32
    /* Icu */
    );
    var rawSlotValue = lView[tNode.index];
    var tNodeType = tNode.type;

    if (isProjection) {
      if (action === 0
      /* Create */
      ) {
          rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);
          tNode.flags |= 4
          /* isProjected */
          ;
        }
    }

    if ((tNode.flags & 64
    /* isDetached */
    ) !== 64
    /* isDetached */
    ) {
        if (tNodeType & 8
        /* ElementContainer */
        ) {
            applyNodes(renderer, action, tNode.child, lView, parentRElement, beforeNode, false);
            applyToElementOrContainer(action, renderer, parentRElement, rawSlotValue, beforeNode);
          } else if (tNodeType & 32
        /* Icu */
        ) {
            var nextRNode = icuContainerIterate(tNode, lView);
            var rNode = void 0;

            while (rNode = nextRNode()) {
              applyToElementOrContainer(action, renderer, parentRElement, rNode, beforeNode);
            }

            applyToElementOrContainer(action, renderer, parentRElement, rawSlotValue, beforeNode);
          } else if (tNodeType & 16
        /* Projection */
        ) {
            applyProjectionRecursive(renderer, action, lView, tNode, parentRElement, beforeNode);
          } else {
          ngDevMode && assertTNodeType(tNode, 3
          /* AnyRNode */
          | 4
          /* Container */
          );
          applyToElementOrContainer(action, renderer, parentRElement, rawSlotValue, beforeNode);
        }
      }

    tNode = isProjection ? tNode.projectionNext : tNode.next;
  }
}

function applyView(tView, lView, renderer, action, parentRElement, beforeNode) {
  applyNodes(renderer, action, tView.firstChild, lView, parentRElement, beforeNode, false);
}
/**
 * `applyProjection` performs operation on the projection.
 *
 * Inserting a projection requires us to locate the projected nodes from the parent component. The
 * complication is that those nodes themselves could be re-projected from their parent component.
 *
 * @param tView The `TView` of `LView` which needs to be inserted, detached, destroyed
 * @param lView The `LView` which needs to be inserted, detached, destroyed.
 * @param tProjectionNode node to project
 */


function applyProjection(tView, lView, tProjectionNode) {
  var renderer = lView[RENDERER];
  var parentRNode = getParentRElement(tView, tProjectionNode, lView);
  var parentTNode = tProjectionNode.parent || lView[T_HOST];
  var beforeNode = getInsertInFrontOfRNode(parentTNode, tProjectionNode, lView);
  applyProjectionRecursive(renderer, 0
  /* Create */
  , lView, tProjectionNode, parentRNode, beforeNode);
}
/**
 * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,
 * detach, destroy)
 *
 * Inserting a projection requires us to locate the projected nodes from the parent component. The
 * complication is that those nodes themselves could be re-projected from their parent component.
 *
 * @param renderer Render to use
 * @param action action to perform (insert, detach, destroy)
 * @param lView The LView which needs to be inserted, detached, destroyed.
 * @param tProjectionNode node to project
 * @param parentRElement parent DOM element for insertion/removal.
 * @param beforeNode Before which node the insertions should happen.
 */


function applyProjectionRecursive(renderer, action, lView, tProjectionNode, parentRElement, beforeNode) {
  var componentLView = lView[DECLARATION_COMPONENT_VIEW];
  var componentNode = componentLView[T_HOST];
  ngDevMode && assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');
  var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];

  if (Array.isArray(nodeToProjectOrRNodes)) {
    // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we
    // need to support passing projectable nodes, so we cheat and put them in the TNode
    // of the Host TView. (Yes we put instance info at the T Level). We can get away with it
    // because we know that that TView is not shared and therefore it will not be a problem.
    // This should be refactored and cleaned up.
    for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {
      var rNode = nodeToProjectOrRNodes[i];
      applyToElementOrContainer(action, renderer, parentRElement, rNode, beforeNode);
    }
  } else {
    var nodeToProject = nodeToProjectOrRNodes;
    var projectedComponentLView = componentLView[PARENT];
    applyNodes(renderer, action, nodeToProject, projectedComponentLView, parentRElement, beforeNode, true);
  }
}
/**
 * `applyContainer` performs an operation on the container and its views as specified by
 * `action` (insert, detach, destroy)
 *
 * Inserting a Container is complicated by the fact that the container may have Views which
 * themselves have containers or projections.
 *
 * @param renderer Renderer to use
 * @param action action to perform (insert, detach, destroy)
 * @param lContainer The LContainer which needs to be inserted, detached, destroyed.
 * @param parentRElement parent DOM element for insertion/removal.
 * @param beforeNode Before which node the insertions should happen.
 */


function applyContainer(renderer, action, lContainer, parentRElement, beforeNode) {
  ngDevMode && assertLContainer(lContainer);
  var anchor = lContainer[NATIVE]; // LContainer has its own before node.

  var native = unwrapRNode(lContainer); // An LContainer can be created dynamically on any node by injecting ViewContainerRef.
  // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor
  // node (comment in the DOM) that will be different from the LContainer's host node. In this
  // particular case we need to execute action on 2 nodes:
  // - container's host node (this is done in the executeActionOnElementOrContainer)
  // - container's host node (this is done here)

  if (anchor !== native) {
    // This is very strange to me (Misko). I would expect that the native is same as anchor. I
    // don't see a reason why they should be different, but they are.
    //
    // If they are we need to process the second anchor as well.
    applyToElementOrContainer(action, renderer, parentRElement, anchor, beforeNode);
  }

  for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {
    var lView = lContainer[i];
    applyView(lView[TVIEW], lView, renderer, action, parentRElement, anchor);
  }
}
/**
 * Writes class/style to element.
 *
 * @param renderer Renderer to use.
 * @param isClassBased `true` if it should be written to `class` (`false` to write to `style`)
 * @param rNode The Node to write to.
 * @param prop Property to write to. This would be the class/style name.
 * @param value Value to write. If `null`/`undefined`/`false` this is considered a remove (set/add
 *        otherwise).
 */


function applyStyling(renderer, isClassBased, rNode, prop, value) {
  var isProcedural = isProceduralRenderer(renderer);

  if (isClassBased) {
    // We actually want JS true/false here because any truthy value should add the class
    if (!value) {
      ngDevMode && ngDevMode.rendererRemoveClass++;

      if (isProcedural) {
        renderer.removeClass(rNode, prop);
      } else {
        rNode.classList.remove(prop);
      }
    } else {
      ngDevMode && ngDevMode.rendererAddClass++;

      if (isProcedural) {
        renderer.addClass(rNode, prop);
      } else {
        ngDevMode && assertDefined(rNode.classList, 'HTMLElement expected');
        rNode.classList.add(prop);
      }
    }
  } else {
    var flags = prop.indexOf('-') === -1 ? undefined : RendererStyleFlags2.DashCase;

    if (value == null
    /** || value === undefined */
    ) {
        ngDevMode && ngDevMode.rendererRemoveStyle++;

        if (isProcedural) {
          renderer.removeStyle(rNode, prop, flags);
        } else {
          rNode.style.removeProperty(prop);
        }
      } else {
      // A value is important if it ends with `!important`. The style
      // parser strips any semicolons at the end of the value.
      var isImportant = typeof value === 'string' ? value.endsWith('!important') : false;

      if (isImportant) {
        // !important has to be stripped from the value for it to be valid.
        value = value.slice(0, -10);
        flags |= RendererStyleFlags2.Important;
      }

      ngDevMode && ngDevMode.rendererSetStyle++;

      if (isProcedural) {
        renderer.setStyle(rNode, prop, value, flags);
      } else {
        ngDevMode && assertDefined(rNode.style, 'HTMLElement expected');
        rNode.style.setProperty(prop, value, isImportant ? 'important' : '');
      }
    }
  }
}
/**
 * Write `cssText` to `RElement`.
 *
 * This function does direct write without any reconciliation. Used for writing initial values, so
 * that static styling values do not pull in the style parser.
 *
 * @param renderer Renderer to use
 * @param element The element which needs to be updated.
 * @param newValue The new class list to write.
 */


function writeDirectStyle(renderer, element, newValue) {
  ngDevMode && assertString(newValue, '\'newValue\' should be a string');

  if (isProceduralRenderer(renderer)) {
    renderer.setAttribute(element, 'style', newValue);
  } else {
    element.style.cssText = newValue;
  }

  ngDevMode && ngDevMode.rendererSetStyle++;
}
/**
 * Write `className` to `RElement`.
 *
 * This function does direct write without any reconciliation. Used for writing initial values, so
 * that static styling values do not pull in the style parser.
 *
 * @param renderer Renderer to use
 * @param element The element which needs to be updated.
 * @param newValue The new class list to write.
 */


function writeDirectClass(renderer, element, newValue) {
  ngDevMode && assertString(newValue, '\'newValue\' should be a string');

  if (isProceduralRenderer(renderer)) {
    if (newValue === '') {
      // There are tests in `google3` which expect `element.getAttribute('class')` to be `null`.
      renderer.removeAttribute(element, 'class');
    } else {
      renderer.setAttribute(element, 'class', newValue);
    }
  } else {
    element.className = newValue;
  }

  ngDevMode && ngDevMode.rendererSetClassName++;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Returns an index of `classToSearch` in `className` taking token boundaries into account.
 *
 * `classIndexOf('AB A', 'A', 0)` will be 3 (not 0 since `AB!==A`)
 *
 * @param className A string containing classes (whitespace separated)
 * @param classToSearch A class name to locate
 * @param startingIndex Starting location of search
 * @returns an index of the located class (or -1 if not found)
 */


function classIndexOf(className, classToSearch, startingIndex) {
  ngDevMode && assertNotEqual(classToSearch, '', 'can not look for "" string.');
  var end = className.length;

  while (true) {
    var foundIndex = className.indexOf(classToSearch, startingIndex);
    if (foundIndex === -1) return foundIndex;

    if (foundIndex === 0 || className.charCodeAt(foundIndex - 1) <= 32
    /* SPACE */
    ) {
        // Ensure that it has leading whitespace
        var length = classToSearch.length;

        if (foundIndex + length === end || className.charCodeAt(foundIndex + length) <= 32
        /* SPACE */
        ) {
            // Ensure that it has trailing whitespace
            return foundIndex;
          }
      } // False positive, keep searching from where we left off.


    startingIndex = foundIndex + 1;
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;
var NG_TEMPLATE_SELECTOR = 'ng-template';
/**
 * Search the `TAttributes` to see if it contains `cssClassToMatch` (case insensitive)
 *
 * @param attrs `TAttributes` to search through.
 * @param cssClassToMatch class to match (lowercase)
 * @param isProjectionMode Whether or not class matching should look into the attribute `class` in
 *    addition to the `AttributeMarker.Classes`.
 */

function isCssClassMatching(attrs, cssClassToMatch, isProjectionMode) {
  // TODO(misko): The fact that this function needs to know about `isProjectionMode` seems suspect.
  // It is strange to me that sometimes the class information comes in form of `class` attribute
  // and sometimes in form of `AttributeMarker.Classes`. Some investigation is needed to determine
  // if that is the right behavior.
  ngDevMode && assertEqual(cssClassToMatch, cssClassToMatch.toLowerCase(), 'Class name expected to be lowercase.');
  var i = 0;

  while (i < attrs.length) {
    var item = attrs[i++];

    if (isProjectionMode && item === 'class') {
      item = attrs[i];

      if (classIndexOf(item.toLowerCase(), cssClassToMatch, 0) !== -1) {
        return true;
      }
    } else if (item === 1
    /* Classes */
    ) {
        // We found the classes section. Start searching for the class.
        while (i < attrs.length && typeof (item = attrs[i++]) == 'string') {
          // while we have strings
          if (item.toLowerCase() === cssClassToMatch) return true;
        }

        return false;
      }
  }

  return false;
}
/**
 * Checks whether the `tNode` represents an inline template (e.g. `*ngFor`).
 *
 * @param tNode current TNode
 */


function isInlineTemplate(tNode) {
  return tNode.type === 4
  /* Container */
  && tNode.value !== NG_TEMPLATE_SELECTOR;
}
/**
 * Function that checks whether a given tNode matches tag-based selector and has a valid type.
 *
 * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular
 * directive matching mode:
 * - in the "directive matching" mode we do _not_ take TContainer's tagName into account if it is
 * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a
 * tag name was extracted from * syntax so we would match the same directive twice);
 * - in the "projection" mode, we use a tag name potentially extracted from the * syntax processing
 * (applicable to TNodeType.Container only).
 */


function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {
  var tagNameToCompare = tNode.type === 4
  /* Container */
  && !isProjectionMode ? NG_TEMPLATE_SELECTOR : tNode.value;
  return currentSelector === tagNameToCompare;
}
/**
 * A utility function to match an Ivy node static data against a simple CSS selector
 *
 * @param node static data of the node to match
 * @param selector The selector to try matching against the node.
 * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing
 * directive matching.
 * @returns true if node matches the selector.
 */


function isNodeMatchingSelector(tNode, selector, isProjectionMode) {
  ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');
  var mode = 4
  /* ELEMENT */
  ;
  var nodeAttrs = tNode.attrs || []; // Find the index of first attribute that has no value, only a name.

  var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs); // When processing ":not" selectors, we skip to the next ":not" if the
  // current one doesn't match

  var skipToNextSelector = false;

  for (var i = 0; i < selector.length; i++) {
    var current = selector[i];

    if (typeof current === 'number') {
      // If we finish processing a :not selector and it hasn't failed, return false
      if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {
        return false;
      } // If we are skipping to the next :not() and this mode flag is positive,
      // it's a part of the current :not() selector, and we should keep skipping


      if (skipToNextSelector && isPositive(current)) continue;
      skipToNextSelector = false;
      mode = current | mode & 1
      /* NOT */
      ;
      continue;
    }

    if (skipToNextSelector) continue;

    if (mode & 4
    /* ELEMENT */
    ) {
        mode = 2
        /* ATTRIBUTE */
        | mode & 1
        /* NOT */
        ;

        if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) || current === '' && selector.length === 1) {
          if (isPositive(mode)) return false;
          skipToNextSelector = true;
        }
      } else {
      var selectorAttrValue = mode & 8
      /* CLASS */
      ? current : selector[++i]; // special case for matching against classes when a tNode has been instantiated with
      // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])

      if (mode & 8
      /* CLASS */
      && tNode.attrs !== null) {
        if (!isCssClassMatching(tNode.attrs, selectorAttrValue, isProjectionMode)) {
          if (isPositive(mode)) return false;
          skipToNextSelector = true;
        }

        continue;
      }

      var attrName = mode & 8
      /* CLASS */
      ? 'class' : current;
      var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate(tNode), isProjectionMode);

      if (attrIndexInNode === -1) {
        if (isPositive(mode)) return false;
        skipToNextSelector = true;
        continue;
      }

      if (selectorAttrValue !== '') {
        var nodeAttrValue = void 0;

        if (attrIndexInNode > nameOnlyMarkerIdx) {
          nodeAttrValue = '';
        } else {
          ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0
          /* NamespaceURI */
          , 'We do not match directives on namespaced attributes'); // we lowercase the attribute value to be able to match
          // selectors without case-sensitivity
          // (selectors are already in lowercase when generated)

          nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();
        }

        var compareAgainstClassName = mode & 8
        /* CLASS */
        ? nodeAttrValue : null;

        if (compareAgainstClassName && classIndexOf(compareAgainstClassName, selectorAttrValue, 0) !== -1 || mode & 2
        /* ATTRIBUTE */
        && selectorAttrValue !== nodeAttrValue) {
          if (isPositive(mode)) return false;
          skipToNextSelector = true;
        }
      }
    }
  }

  return isPositive(mode) || skipToNextSelector;
}

function isPositive(mode) {
  return (mode & 1
  /* NOT */
  ) === 0;
}
/**
 * Examines the attribute's definition array for a node to find the index of the
 * attribute that matches the given `name`.
 *
 * NOTE: This will not match namespaced attributes.
 *
 * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.
 * The following table summarizes which types of attributes we attempt to match:
 *
 * ===========================================================================================================
 * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n
 * Attributes
 * ===========================================================================================================
 * Inline + Projection     | YES               | YES                 | NO                  | YES
 * -----------------------------------------------------------------------------------------------------------
 * Inline + Directive      | NO                | NO                  | YES                 | NO
 * -----------------------------------------------------------------------------------------------------------
 * Non-inline + Projection | YES               | YES                 | NO                  | YES
 * -----------------------------------------------------------------------------------------------------------
 * Non-inline + Directive  | YES               | YES                 | NO                  | YES
 * ===========================================================================================================
 *
 * @param name the name of the attribute to find
 * @param attrs the attribute array to examine
 * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)
 * rather than a manually expanded template node (e.g `<ng-template>`).
 * @param isProjectionMode true if we are matching against content projection otherwise we are
 * matching against directives.
 */


function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {
  if (attrs === null) return -1;
  var i = 0;

  if (isProjectionMode || !isInlineTemplate) {
    var bindingsMode = false;

    while (i < attrs.length) {
      var maybeAttrName = attrs[i];

      if (maybeAttrName === name) {
        return i;
      } else if (maybeAttrName === 3
      /* Bindings */
      || maybeAttrName === 6
      /* I18n */
      ) {
          bindingsMode = true;
        } else if (maybeAttrName === 1
      /* Classes */
      || maybeAttrName === 2
      /* Styles */
      ) {
          var value = attrs[++i]; // We should skip classes here because we have a separate mechanism for
          // matching classes in projection mode.

          while (typeof value === 'string') {
            value = attrs[++i];
          }

          continue;
        } else if (maybeAttrName === 4
      /* Template */
      ) {
          // We do not care about Template attributes in this scenario.
          break;
        } else if (maybeAttrName === 0
      /* NamespaceURI */
      ) {
          // Skip the whole namespaced attribute and value. This is by design.
          i += 4;
          continue;
        } // In binding mode there are only names, rather than name-value pairs.


      i += bindingsMode ? 1 : 2;
    } // We did not match the attribute


    return -1;
  } else {
    return matchTemplateAttribute(attrs, name);
  }
}

function isNodeMatchingSelectorList(tNode, selector) {
  var isProjectionMode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  for (var i = 0; i < selector.length; i++) {
    if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {
      return true;
    }
  }

  return false;
}

function getProjectAsAttrValue(tNode) {
  var nodeAttrs = tNode.attrs;

  if (nodeAttrs != null) {
    var ngProjectAsAttrIdx = nodeAttrs.indexOf(5
    /* ProjectAs */
    ); // only check for ngProjectAs in attribute names, don't accidentally match attribute's value
    // (attribute names are stored at even indexes)

    if ((ngProjectAsAttrIdx & 1) === 0) {
      return nodeAttrs[ngProjectAsAttrIdx + 1];
    }
  }

  return null;
}

function getNameOnlyMarkerIndex(nodeAttrs) {
  for (var i = 0; i < nodeAttrs.length; i++) {
    var nodeAttr = nodeAttrs[i];

    if (isNameOnlyAttributeMarker(nodeAttr)) {
      return i;
    }
  }

  return nodeAttrs.length;
}

function matchTemplateAttribute(attrs, name) {
  var i = attrs.indexOf(4
  /* Template */
  );

  if (i > -1) {
    i++;

    while (i < attrs.length) {
      var attr = attrs[i]; // Return in case we checked all template attrs and are switching to the next section in the
      // attrs array (that starts with a number that represents an attribute marker).

      if (typeof attr === 'number') return -1;
      if (attr === name) return i;
      i++;
    }
  }

  return -1;
}
/**
 * Checks whether a selector is inside a CssSelectorList
 * @param selector Selector to be checked.
 * @param list List in which to look for the selector.
 */


function isSelectorInSelectorList(selector, list) {
  selectorListLoop: for (var i = 0; i < list.length; i++) {
    var currentSelectorInList = list[i];

    if (selector.length !== currentSelectorInList.length) {
      continue;
    }

    for (var j = 0; j < selector.length; j++) {
      if (selector[j] !== currentSelectorInList[j]) {
        continue selectorListLoop;
      }
    }

    return true;
  }

  return false;
}

function maybeWrapInNotSelector(isNegativeMode, chunk) {
  return isNegativeMode ? ':not(' + chunk.trim() + ')' : chunk;
}

function stringifyCSSSelector(selector) {
  var result = selector[0];
  var i = 1;
  var mode = 2
  /* ATTRIBUTE */
  ;
  var currentChunk = '';
  var isNegativeMode = false;

  while (i < selector.length) {
    var valueOrMarker = selector[i];

    if (typeof valueOrMarker === 'string') {
      if (mode & 2
      /* ATTRIBUTE */
      ) {
          var attrValue = selector[++i];
          currentChunk += '[' + valueOrMarker + (attrValue.length > 0 ? '="' + attrValue + '"' : '') + ']';
        } else if (mode & 8
      /* CLASS */
      ) {
          currentChunk += '.' + valueOrMarker;
        } else if (mode & 4
      /* ELEMENT */
      ) {
          currentChunk += ' ' + valueOrMarker;
        }
    } else {
      //
      // Append current chunk to the final result in case we come across SelectorFlag, which
      // indicates that the previous section of a selector is over. We need to accumulate content
      // between flags to make sure we wrap the chunk later in :not() selector if needed, e.g.
      // ```
      //  ['', Flags.CLASS, '.classA', Flags.CLASS | Flags.NOT, '.classB', '.classC']
      // ```
      // should be transformed to `.classA :not(.classB .classC)`.
      //
      // Note: for negative selector part, we accumulate content between flags until we find the
      // next negative flag. This is needed to support a case where `:not()` rule contains more than
      // one chunk, e.g. the following selector:
      // ```
      //  ['', Flags.ELEMENT | Flags.NOT, 'p', Flags.CLASS, 'foo', Flags.CLASS | Flags.NOT, 'bar']
      // ```
      // should be stringified to `:not(p.foo) :not(.bar)`
      //
      if (currentChunk !== '' && !isPositive(valueOrMarker)) {
        result += maybeWrapInNotSelector(isNegativeMode, currentChunk);
        currentChunk = '';
      }

      mode = valueOrMarker; // According to CssSelector spec, once we come across `SelectorFlags.NOT` flag, the negative
      // mode is maintained for remaining chunks of a selector.

      isNegativeMode = isNegativeMode || !isPositive(mode);
    }

    i++;
  }

  if (currentChunk !== '') {
    result += maybeWrapInNotSelector(isNegativeMode, currentChunk);
  }

  return result;
}
/**
 * Generates string representation of CSS selector in parsed form.
 *
 * ComponentDef and DirectiveDef are generated with the selector in parsed form to avoid doing
 * additional parsing at runtime (for example, for directive matching). However in some cases (for
 * example, while bootstrapping a component), a string version of the selector is required to query
 * for the host element on the page. This function takes the parsed form of a selector and returns
 * its string representation.
 *
 * @param selectorList selector in parsed form
 * @returns string representation of a given selector
 */


function stringifyCSSSelectorList(selectorList) {
  return selectorList.map(stringifyCSSSelector).join(',');
}
/**
 * Extracts attributes and classes information from a given CSS selector.
 *
 * This function is used while creating a component dynamically. In this case, the host element
 * (that is created dynamically) should contain attributes and classes specified in component's CSS
 * selector.
 *
 * @param selector CSS selector in parsed form (in a form of array)
 * @returns object with `attrs` and `classes` fields that contain extracted information
 */


function extractAttrsAndClassesFromSelector(selector) {
  var attrs = [];
  var classes = [];
  var i = 1;
  var mode = 2
  /* ATTRIBUTE */
  ;

  while (i < selector.length) {
    var valueOrMarker = selector[i];

    if (typeof valueOrMarker === 'string') {
      if (mode === 2
      /* ATTRIBUTE */
      ) {
          if (valueOrMarker !== '') {
            attrs.push(valueOrMarker, selector[++i]);
          }
        } else if (mode === 8
      /* CLASS */
      ) {
          classes.push(valueOrMarker);
        }
    } else {
      // According to CssSelector spec, once we come across `SelectorFlags.NOT` flag, the negative
      // mode is maintained for remaining chunks of a selector. Since attributes and classes are
      // extracted only for "positive" part of the selector, we can stop here.
      if (!isPositive(mode)) break;
      mode = valueOrMarker;
    }

    i++;
  }

  return {
    attrs: attrs,
    classes: classes
  };
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** A special value which designates that a value has not changed. */


var NO_CHANGE = typeof ngDevMode === 'undefined' || ngDevMode ? {
  __brand__: 'NO_CHANGE'
} : {};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Advances to an element for later binding instructions.
 *
 * Used in conjunction with instructions like {@link property} to act on elements with specified
 * indices, for example those created with {@link element} or {@link elementStart}.
 *
 * ```ts
 * (rf: RenderFlags, ctx: any) => {
 *   if (rf & 1) {
 *     text(0, 'Hello');
 *     text(1, 'Goodbye')
 *     element(2, 'div');
 *   }
 *   if (rf & 2) {
 *     advance(2); // Advance twice to the <div>.
 *     property('title', 'test');
 *   }
 *  }
 * ```
 * @param delta Number of elements to advance forwards by.
 *
 * @codeGenApi
 */

function ɵɵadvance(delta) {
  ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');
  selectIndexInternal(getTView(), getLView(), getSelectedIndex() + delta, isInCheckNoChangesMode());
}

function selectIndexInternal(tView, lView, index, checkNoChangesMode) {
  ngDevMode && assertIndexInDeclRange(lView, index); // Flush the initial hooks for elements in the view that have been added up to this point.
  // PERF WARNING: do NOT extract this to a separate function without running benchmarks

  if (!checkNoChangesMode) {
    var hooksInitPhaseCompleted = (lView[FLAGS] & 3
    /* InitPhaseStateMask */
    ) === 3
    /* InitPhaseCompleted */
    ;

    if (hooksInitPhaseCompleted) {
      var preOrderCheckHooks = tView.preOrderCheckHooks;

      if (preOrderCheckHooks !== null) {
        executeCheckHooks(lView, preOrderCheckHooks, index);
      }
    } else {
      var preOrderHooks = tView.preOrderHooks;

      if (preOrderHooks !== null) {
        executeInitAndCheckHooks(lView, preOrderHooks, 0
        /* OnInitHooksToBeRun */
        , index);
      }
    }
  } // We must set the selected index *after* running the hooks, because hooks may have side-effects
  // that cause other template functions to run, thus updating the selected index, which is global
  // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index
  // will be altered by the time we leave the `ɵɵadvance` instruction.


  setSelectedIndex(index);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function toTStylingRange(prev, next) {
  ngDevMode && assertNumberInRange(prev, 0, 32767
  /* UNSIGNED_MASK */
  );
  ngDevMode && assertNumberInRange(next, 0, 32767
  /* UNSIGNED_MASK */
  );
  return prev << 17
  /* PREV_SHIFT */
  | next << 2
  /* NEXT_SHIFT */
  ;
}

function getTStylingRangePrev(tStylingRange) {
  ngDevMode && assertNumber(tStylingRange, 'expected number');
  return tStylingRange >> 17
  /* PREV_SHIFT */
  & 32767
  /* UNSIGNED_MASK */
  ;
}

function getTStylingRangePrevDuplicate(tStylingRange) {
  ngDevMode && assertNumber(tStylingRange, 'expected number');
  return (tStylingRange & 2
  /* PREV_DUPLICATE */
  ) == 2
  /* PREV_DUPLICATE */
  ;
}

function setTStylingRangePrev(tStylingRange, previous) {
  ngDevMode && assertNumber(tStylingRange, 'expected number');
  ngDevMode && assertNumberInRange(previous, 0, 32767
  /* UNSIGNED_MASK */
  );
  return tStylingRange & ~4294836224
  /* PREV_MASK */
  | previous << 17
  /* PREV_SHIFT */
  ;
}

function setTStylingRangePrevDuplicate(tStylingRange) {
  ngDevMode && assertNumber(tStylingRange, 'expected number');
  return tStylingRange | 2
  /* PREV_DUPLICATE */
  ;
}

function getTStylingRangeNext(tStylingRange) {
  ngDevMode && assertNumber(tStylingRange, 'expected number');
  return (tStylingRange & 131068
  /* NEXT_MASK */
  ) >> 2
  /* NEXT_SHIFT */
  ;
}

function setTStylingRangeNext(tStylingRange, next) {
  ngDevMode && assertNumber(tStylingRange, 'expected number');
  ngDevMode && assertNumberInRange(next, 0, 32767
  /* UNSIGNED_MASK */
  );
  return tStylingRange & ~131068
  /* NEXT_MASK */
  | //
  next << 2
  /* NEXT_SHIFT */
  ;
}

function getTStylingRangeNextDuplicate(tStylingRange) {
  ngDevMode && assertNumber(tStylingRange, 'expected number');
  return (tStylingRange & 1
  /* NEXT_DUPLICATE */
  ) === 1
  /* NEXT_DUPLICATE */
  ;
}

function setTStylingRangeNextDuplicate(tStylingRange) {
  ngDevMode && assertNumber(tStylingRange, 'expected number');
  return tStylingRange | 1
  /* NEXT_DUPLICATE */
  ;
}

function getTStylingRangeTail(tStylingRange) {
  ngDevMode && assertNumber(tStylingRange, 'expected number');
  var next = getTStylingRangeNext(tStylingRange);
  return next === 0 ? getTStylingRangePrev(tStylingRange) : next;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Patch a `debug` property on top of the existing object.
 *
 * NOTE: always call this method with `ngDevMode && attachDebugObject(...)`
 *
 * @param obj Object to patch
 * @param debug Value to patch
 */


function attachDebugObject(obj, debug) {
  if (ngDevMode) {
    Object.defineProperty(obj, 'debug', {
      value: debug,
      enumerable: false
    });
  } else {
    throw new Error('This method should be guarded with `ngDevMode` so that it can be tree shaken in production!');
  }
}
/**
 * Patch a `debug` property getter on top of the existing object.
 *
 * NOTE: always call this method with `ngDevMode && attachDebugObject(...)`
 *
 * @param obj Object to patch
 * @param debugGetter Getter returning a value to patch
 */


function attachDebugGetter(obj, debugGetter) {
  if (ngDevMode) {
    Object.defineProperty(obj, 'debug', {
      get: debugGetter,
      enumerable: false
    });
  } else {
    throw new Error('This method should be guarded with `ngDevMode` so that it can be tree shaken in production!');
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NG_DEV_MODE = (typeof ngDevMode === 'undefined' || !!ngDevMode) && /*@__PURE__*/initNgDevMode();
/*
 * This file contains conditionally attached classes which provide human readable (debug) level
 * information for `LView`, `LContainer` and other internal data structures. These data structures
 * are stored internally as array which makes it very difficult during debugging to reason about the
 * current state of the system.
 *
 * Patching the array with extra property does change the array's hidden class' but it does not
 * change the cost of access, therefore this patching should not have significant if any impact in
 * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)
 *
 * So instead of seeing:
 * ```
 * Array(30) [Object, 659, null, …]
 * ```
 *
 * You get to see:
 * ```
 * LViewDebug {
 *   views: [...],
 *   flags: {attached: true, ...}
 *   nodes: [
 *     {html: '<div id="123">', ..., nodes: [
 *       {html: '<span>', ..., nodes: null}
 *     ]}
 *   ]
 * }
 * ```
 */

var LVIEW_COMPONENT_CACHE;
var LVIEW_EMBEDDED_CACHE;
var LVIEW_ROOT;
/**
 * This function clones a blueprint and creates LView.
 *
 * Simple slice will keep the same type, and we need it to be LView
 */

function cloneToLViewFromTViewBlueprint(tView) {
  var debugTView = tView;
  var lView = getLViewToClone(debugTView.type, tView.template && tView.template.name);
  return lView.concat(tView.blueprint);
}

function getLViewToClone(type, name) {
  switch (type) {
    case 0
    /* Root */
    :
      if (LVIEW_ROOT === undefined) LVIEW_ROOT = new (createNamedArrayType('LRootView'))();
      return LVIEW_ROOT;

    case 1
    /* Component */
    :
      if (LVIEW_COMPONENT_CACHE === undefined) LVIEW_COMPONENT_CACHE = new Map();
      var componentArray = LVIEW_COMPONENT_CACHE.get(name);

      if (componentArray === undefined) {
        componentArray = new (createNamedArrayType('LComponentView' + nameSuffix(name)))();
        LVIEW_COMPONENT_CACHE.set(name, componentArray);
      }

      return componentArray;

    case 2
    /* Embedded */
    :
      if (LVIEW_EMBEDDED_CACHE === undefined) LVIEW_EMBEDDED_CACHE = new Map();
      var embeddedArray = LVIEW_EMBEDDED_CACHE.get(name);

      if (embeddedArray === undefined) {
        embeddedArray = new (createNamedArrayType('LEmbeddedView' + nameSuffix(name)))();
        LVIEW_EMBEDDED_CACHE.set(name, embeddedArray);
      }

      return embeddedArray;
  }

  throw new Error('unreachable code');
}

function nameSuffix(text) {
  if (text == null) return '';
  var index = text.lastIndexOf('_Template');
  return '_' + (index === -1 ? text : text.substr(0, index));
}
/**
 * This class is a debug version of Object literal so that we can have constructor name show up
 * in
 * debug tools in ngDevMode.
 */


var TViewConstructor = /*#__PURE__*/function () {
  function TView(type, blueprint, template, queries, viewQuery, declTNode, data, bindingStartIndex, expandoStartIndex, hostBindingOpCodes, firstCreatePass, firstUpdatePass, staticViewQueries, staticContentQueries, preOrderHooks, preOrderCheckHooks, contentHooks, contentCheckHooks, viewHooks, viewCheckHooks, destroyHooks, cleanup, contentQueries, components, directiveRegistry, pipeRegistry, firstChild, schemas, consts, incompleteFirstPass, _decls, _vars) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, TView);

    this.type = type;
    this.blueprint = blueprint;
    this.template = template;
    this.queries = queries;
    this.viewQuery = viewQuery;
    this.declTNode = declTNode;
    this.data = data;
    this.bindingStartIndex = bindingStartIndex;
    this.expandoStartIndex = expandoStartIndex;
    this.hostBindingOpCodes = hostBindingOpCodes;
    this.firstCreatePass = firstCreatePass;
    this.firstUpdatePass = firstUpdatePass;
    this.staticViewQueries = staticViewQueries;
    this.staticContentQueries = staticContentQueries;
    this.preOrderHooks = preOrderHooks;
    this.preOrderCheckHooks = preOrderCheckHooks;
    this.contentHooks = contentHooks;
    this.contentCheckHooks = contentCheckHooks;
    this.viewHooks = viewHooks;
    this.viewCheckHooks = viewCheckHooks;
    this.destroyHooks = destroyHooks;
    this.cleanup = cleanup;
    this.contentQueries = contentQueries;
    this.components = components;
    this.directiveRegistry = directiveRegistry;
    this.pipeRegistry = pipeRegistry;
    this.firstChild = firstChild;
    this.schemas = schemas;
    this.consts = consts;
    this.incompleteFirstPass = incompleteFirstPass;
    this._decls = _decls;
    this._vars = _vars;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(TView, [{
    key: "template_",
    get: function get() {
      var buf = [];
      processTNodeChildren(this.firstChild, buf);
      return buf.join('');
    }
  }, {
    key: "type_",
    get: function get() {
      return TViewTypeAsString[this.type] || "TViewType.?".concat(this.type, "?");
    }
  }]);

  return TView;
}();

var TNode = /*#__PURE__*/function () {
  function TNode(tView_, //
  type, //
  index, //
  insertBeforeIndex, //
  injectorIndex, //
  directiveStart, //
  directiveEnd, //
  directiveStylingLast, //
  propertyBindings, //
  flags, //
  providerIndexes, //
  value, //
  attrs, //
  mergedAttrs, //
  localNames, //
  initialInputs, //
  inputs, //
  outputs, //
  tViews, //
  next, //
  projectionNext, //
  child, //
  parent, //
  projection, //
  styles, //
  stylesWithoutHost, //
  residualStyles, //
  classes, //
  classesWithoutHost, //
  residualClasses, //
  classBindings, //
  styleBindings) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, TNode);

    this.tView_ = tView_;
    this.type = type;
    this.index = index;
    this.insertBeforeIndex = insertBeforeIndex;
    this.injectorIndex = injectorIndex;
    this.directiveStart = directiveStart;
    this.directiveEnd = directiveEnd;
    this.directiveStylingLast = directiveStylingLast;
    this.propertyBindings = propertyBindings;
    this.flags = flags;
    this.providerIndexes = providerIndexes;
    this.value = value;
    this.attrs = attrs;
    this.mergedAttrs = mergedAttrs;
    this.localNames = localNames;
    this.initialInputs = initialInputs;
    this.inputs = inputs;
    this.outputs = outputs;
    this.tViews = tViews;
    this.next = next;
    this.projectionNext = projectionNext;
    this.child = child;
    this.parent = parent;
    this.projection = projection;
    this.styles = styles;
    this.stylesWithoutHost = stylesWithoutHost;
    this.residualStyles = residualStyles;
    this.classes = classes;
    this.classesWithoutHost = classesWithoutHost;
    this.residualClasses = residualClasses;
    this.classBindings = classBindings;
    this.styleBindings = styleBindings;
  }
  /**
   * Return a human debug version of the set of `NodeInjector`s which will be consulted when
   * resolving tokens from this `TNode`.
   *
   * When debugging applications, it is often difficult to determine which `NodeInjector`s will be
   * consulted. This method shows a list of `DebugNode`s representing the `TNode`s which will be
   * consulted in order when resolving a token starting at this `TNode`.
   *
   * The original data is stored in `LView` and `TView` with a lot of offset indexes, and so it is
   * difficult to reason about.
   *
   * @param lView The `LView` instance for this `TNode`.
   */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(TNode, [{
    key: "debugNodeInjectorPath",
    value: function debugNodeInjectorPath(lView) {
      var path = [];
      var injectorIndex = getInjectorIndex(this, lView);
      ngDevMode && assertNodeInjector(lView, injectorIndex);

      while (injectorIndex !== -1) {
        var tNode = lView[TVIEW].data[injectorIndex + 8
        /* TNODE */
        ];
        path.push(buildDebugNode(tNode, lView));
        var parentLocation = lView[injectorIndex + 8
        /* PARENT */
        ];

        if (parentLocation === NO_PARENT_INJECTOR) {
          injectorIndex = -1;
        } else {
          injectorIndex = getParentInjectorIndex(parentLocation);
          lView = getParentInjectorView(parentLocation, lView);
        }
      }

      return path;
    }
  }, {
    key: "type_",
    get: function get() {
      return toTNodeTypeAsString(this.type) || "TNodeType.?".concat(this.type, "?");
    }
  }, {
    key: "flags_",
    get: function get() {
      var flags = [];
      if (this.flags & 16
      /* hasClassInput */
      ) flags.push('TNodeFlags.hasClassInput');
      if (this.flags & 8
      /* hasContentQuery */
      ) flags.push('TNodeFlags.hasContentQuery');
      if (this.flags & 32
      /* hasStyleInput */
      ) flags.push('TNodeFlags.hasStyleInput');
      if (this.flags & 128
      /* hasHostBindings */
      ) flags.push('TNodeFlags.hasHostBindings');
      if (this.flags & 2
      /* isComponentHost */
      ) flags.push('TNodeFlags.isComponentHost');
      if (this.flags & 1
      /* isDirectiveHost */
      ) flags.push('TNodeFlags.isDirectiveHost');
      if (this.flags & 64
      /* isDetached */
      ) flags.push('TNodeFlags.isDetached');
      if (this.flags & 4
      /* isProjected */
      ) flags.push('TNodeFlags.isProjected');
      return flags.join('|');
    }
  }, {
    key: "template_",
    get: function get() {
      if (this.type & 1
      /* Text */
      ) return this.value;
      var buf = [];
      var tagName = typeof this.value === 'string' && this.value || this.type_;
      buf.push('<', tagName);

      if (this.flags) {
        buf.push(' ', this.flags_);
      }

      if (this.attrs) {
        for (var i = 0; i < this.attrs.length;) {
          var attrName = this.attrs[i++];

          if (typeof attrName == 'number') {
            break;
          }

          var attrValue = this.attrs[i++];
          buf.push(' ', attrName, '="', attrValue, '"');
        }
      }

      buf.push('>');
      processTNodeChildren(this.child, buf);
      buf.push('</', tagName, '>');
      return buf.join('');
    }
  }, {
    key: "styleBindings_",
    get: function get() {
      return toDebugStyleBinding(this, false);
    }
  }, {
    key: "classBindings_",
    get: function get() {
      return toDebugStyleBinding(this, true);
    }
  }, {
    key: "providerIndexStart_",
    get: function get() {
      return this.providerIndexes & 1048575
      /* ProvidersStartIndexMask */
      ;
    }
  }, {
    key: "providerIndexEnd_",
    get: function get() {
      return this.providerIndexStart_ + (this.providerIndexes >>> 20
      /* CptViewProvidersCountShift */
      );
    }
  }]);

  return TNode;
}();

var TNodeDebug = TNode;

function toDebugStyleBinding(tNode, isClassBased) {
  var tData = tNode.tView_.data;
  var bindings = [];
  var range = isClassBased ? tNode.classBindings : tNode.styleBindings;
  var prev = getTStylingRangePrev(range);
  var next = getTStylingRangeNext(range);
  var isTemplate = next !== 0;
  var cursor = isTemplate ? next : prev;

  while (cursor !== 0) {
    var itemKey = tData[cursor];
    var itemRange = tData[cursor + 1];
    bindings.unshift({
      key: itemKey,
      index: cursor,
      isTemplate: isTemplate,
      prevDuplicate: getTStylingRangePrevDuplicate(itemRange),
      nextDuplicate: getTStylingRangeNextDuplicate(itemRange),
      nextIndex: getTStylingRangeNext(itemRange),
      prevIndex: getTStylingRangePrev(itemRange)
    });
    if (cursor === prev) isTemplate = false;
    cursor = getTStylingRangePrev(itemRange);
  }

  bindings.push((isClassBased ? tNode.residualClasses : tNode.residualStyles) || null);
  return bindings;
}

function processTNodeChildren(tNode, buf) {
  while (tNode) {
    buf.push(tNode.template_);
    tNode = tNode.next;
  }
}

var TViewData = NG_DEV_MODE && /*@__PURE__*/createNamedArrayType('TViewData') || null;
var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because
// `LView` constructor could have side-effects.

/**
 * This function clones a blueprint and creates TData.
 *
 * Simple slice will keep the same type, and we need it to be TData
 */

function cloneToTViewData(list) {
  if (TVIEWDATA_EMPTY === undefined) TVIEWDATA_EMPTY = new TViewData();
  return TVIEWDATA_EMPTY.concat(list);
}

var LViewBlueprint = NG_DEV_MODE && /*@__PURE__*/createNamedArrayType('LViewBlueprint') || null;
var MatchesArray = NG_DEV_MODE && /*@__PURE__*/createNamedArrayType('MatchesArray') || null;
var TViewComponents = NG_DEV_MODE && /*@__PURE__*/createNamedArrayType('TViewComponents') || null;
var TNodeLocalNames = NG_DEV_MODE && /*@__PURE__*/createNamedArrayType('TNodeLocalNames') || null;
var TNodeInitialInputs = NG_DEV_MODE && /*@__PURE__*/createNamedArrayType('TNodeInitialInputs') || null;
var TNodeInitialData = NG_DEV_MODE && /*@__PURE__*/createNamedArrayType('TNodeInitialData') || null;
var LCleanup = NG_DEV_MODE && /*@__PURE__*/createNamedArrayType('LCleanup') || null;
var TCleanup = NG_DEV_MODE && /*@__PURE__*/createNamedArrayType('TCleanup') || null;

function attachLViewDebug(lView) {
  attachDebugObject(lView, new LViewDebug(lView));
}

function attachLContainerDebug(lContainer) {
  attachDebugObject(lContainer, new LContainerDebug(lContainer));
}

function toDebug(obj) {
  if (obj) {
    var debug = obj.debug;
    assertDefined(debug, 'Object does not have a debug representation.');
    return debug;
  } else {
    return obj;
  }
}
/**
 * Use this method to unwrap a native element in `LView` and convert it into HTML for easier
 * reading.
 *
 * @param value possibly wrapped native DOM node.
 * @param includeChildren If `true` then the serialized HTML form will include child elements
 * (same
 * as `outerHTML`). If `false` then the serialized HTML form will only contain the element
 * itself
 * (will not serialize child elements).
 */


function toHtml(value) {
  var includeChildren = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var node = unwrapRNode(value);

  if (node) {
    switch (node.nodeType) {
      case Node.TEXT_NODE:
        return node.textContent;

      case Node.COMMENT_NODE:
        return "<!--".concat(node.textContent, "-->");

      case Node.ELEMENT_NODE:
        var outerHTML = node.outerHTML;

        if (includeChildren) {
          return outerHTML;
        } else {
          var innerHTML = '>' + node.innerHTML + '<';
          return outerHTML.split(innerHTML)[0] + '>';
        }

    }
  }

  return null;
}

var LViewDebug = /*#__PURE__*/function () {
  function LViewDebug(_raw_lView) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, LViewDebug);

    this._raw_lView = _raw_lView;
  }
  /**
   * Flags associated with the `LView` unpacked into a more readable state.
   */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(LViewDebug, [{
    key: "flags",
    get: function get() {
      var flags = this._raw_lView[FLAGS];
      return {
        __raw__flags__: flags,
        initPhaseState: flags & 3
        /* InitPhaseStateMask */
        ,
        creationMode: !!(flags & 4
        /* CreationMode */
        ),
        firstViewPass: !!(flags & 8
        /* FirstLViewPass */
        ),
        checkAlways: !!(flags & 16
        /* CheckAlways */
        ),
        dirty: !!(flags & 64
        /* Dirty */
        ),
        attached: !!(flags & 128
        /* Attached */
        ),
        destroyed: !!(flags & 256
        /* Destroyed */
        ),
        isRoot: !!(flags & 512
        /* IsRoot */
        ),
        indexWithinInitPhase: flags >> 11
        /* IndexWithinInitPhaseShift */

      };
    }
  }, {
    key: "parent",
    get: function get() {
      return toDebug(this._raw_lView[PARENT]);
    }
  }, {
    key: "hostHTML",
    get: function get() {
      return toHtml(this._raw_lView[HOST], true);
    }
  }, {
    key: "html",
    get: function get() {
      return (this.nodes || []).map(mapToHTML).join('');
    }
  }, {
    key: "context",
    get: function get() {
      return this._raw_lView[CONTEXT];
    }
    /**
     * The tree of nodes associated with the current `LView`. The nodes have been normalized into
     * a tree structure with relevant details pulled out for readability.
     */

  }, {
    key: "nodes",
    get: function get() {
      var lView = this._raw_lView;
      var tNode = lView[TVIEW].firstChild;
      return toDebugNodes(tNode, lView);
    }
  }, {
    key: "template",
    get: function get() {
      return this.tView.template_;
    }
  }, {
    key: "tView",
    get: function get() {
      return this._raw_lView[TVIEW];
    }
  }, {
    key: "cleanup",
    get: function get() {
      return this._raw_lView[CLEANUP];
    }
  }, {
    key: "injector",
    get: function get() {
      return this._raw_lView[INJECTOR];
    }
  }, {
    key: "rendererFactory",
    get: function get() {
      return this._raw_lView[RENDERER_FACTORY];
    }
  }, {
    key: "renderer",
    get: function get() {
      return this._raw_lView[RENDERER];
    }
  }, {
    key: "sanitizer",
    get: function get() {
      return this._raw_lView[SANITIZER];
    }
  }, {
    key: "childHead",
    get: function get() {
      return toDebug(this._raw_lView[CHILD_HEAD]);
    }
  }, {
    key: "next",
    get: function get() {
      return toDebug(this._raw_lView[NEXT]);
    }
  }, {
    key: "childTail",
    get: function get() {
      return toDebug(this._raw_lView[CHILD_TAIL]);
    }
  }, {
    key: "declarationView",
    get: function get() {
      return toDebug(this._raw_lView[DECLARATION_VIEW]);
    }
  }, {
    key: "queries",
    get: function get() {
      return this._raw_lView[QUERIES];
    }
  }, {
    key: "tHost",
    get: function get() {
      return this._raw_lView[T_HOST];
    }
  }, {
    key: "decls",
    get: function get() {
      return toLViewRange(this.tView, this._raw_lView, HEADER_OFFSET, this.tView.bindingStartIndex);
    }
  }, {
    key: "vars",
    get: function get() {
      return toLViewRange(this.tView, this._raw_lView, this.tView.bindingStartIndex, this.tView.expandoStartIndex);
    }
  }, {
    key: "expando",
    get: function get() {
      return toLViewRange(this.tView, this._raw_lView, this.tView.expandoStartIndex, this._raw_lView.length);
    }
    /**
     * Normalized view of child views (and containers) attached at this location.
     */

  }, {
    key: "childViews",
    get: function get() {
      var childViews = [];
      var child = this.childHead;

      while (child) {
        childViews.push(child);
        child = child.next;
      }

      return childViews;
    }
  }]);

  return LViewDebug;
}();

function mapToHTML(node) {
  if (node.type === 'ElementContainer') {
    return (node.children || []).map(mapToHTML).join('');
  } else if (node.type === 'IcuContainer') {
    throw new Error('Not implemented');
  } else {
    return toHtml(node.native, true) || '';
  }
}

function toLViewRange(tView, lView, start, end) {
  var content = [];

  for (var index = start; index < end; index++) {
    content.push({
      index: index,
      t: tView.data[index],
      l: lView[index]
    });
  }

  return {
    start: start,
    end: end,
    length: end - start,
    content: content
  };
}
/**
 * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.
 *
 * @param tNode
 * @param lView
 */


function toDebugNodes(tNode, lView) {
  if (tNode) {
    var debugNodes = [];
    var tNodeCursor = tNode;

    while (tNodeCursor) {
      debugNodes.push(buildDebugNode(tNodeCursor, lView));
      tNodeCursor = tNodeCursor.next;
    }

    return debugNodes;
  } else {
    return [];
  }
}

function buildDebugNode(tNode, lView) {
  var rawValue = lView[tNode.index];
  var native = unwrapRNode(rawValue);
  var factories = [];
  var instances = [];
  var tView = lView[TVIEW];

  for (var i = tNode.directiveStart; i < tNode.directiveEnd; i++) {
    var def = tView.data[i];
    factories.push(def.type);
    instances.push(lView[i]);
  }

  return {
    html: toHtml(native),
    type: toTNodeTypeAsString(tNode.type),
    native: native,
    children: toDebugNodes(tNode.child, lView),
    factories: factories,
    instances: instances,
    injector: buildNodeInjectorDebug(tNode, tView, lView)
  };
}

function buildNodeInjectorDebug(tNode, tView, lView) {
  var viewProviders = [];

  for (var i = tNode.providerIndexStart_; i < tNode.providerIndexEnd_; i++) {
    viewProviders.push(tView.data[i]);
  }

  var providers = [];

  for (var _i2 = tNode.providerIndexEnd_; _i2 < tNode.directiveEnd; _i2++) {
    providers.push(tView.data[_i2]);
  }

  var nodeInjectorDebug = {
    bloom: toBloom(lView, tNode.injectorIndex),
    cumulativeBloom: toBloom(tView.data, tNode.injectorIndex),
    providers: providers,
    viewProviders: viewProviders,
    parentInjectorIndex: lView[tNode.providerIndexStart_ - 1]
  };
  return nodeInjectorDebug;
}
/**
 * Convert a number at `idx` location in `array` into binary representation.
 *
 * @param array
 * @param idx
 */


function binary(array, idx) {
  var value = array[idx]; // If not a number we print 8 `?` to retain alignment but let user know that it was called on
  // wrong type.

  if (typeof value !== 'number') return '????????'; // We prefix 0s so that we have constant length number

  var text = '00000000' + value.toString(2);
  return text.substring(text.length - 8);
}
/**
 * Convert a bloom filter at location `idx` in `array` into binary representation.
 *
 * @param array
 * @param idx
 */


function toBloom(array, idx) {
  return "".concat(binary(array, idx + 7), "_").concat(binary(array, idx + 6), "_").concat(binary(array, idx + 5), "_").concat(binary(array, idx + 4), "_").concat(binary(array, idx + 3), "_").concat(binary(array, idx + 2), "_").concat(binary(array, idx + 1), "_").concat(binary(array, idx + 0));
}

var LContainerDebug = /*#__PURE__*/function () {
  function LContainerDebug(_raw_lContainer) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, LContainerDebug);

    this._raw_lContainer = _raw_lContainer;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(LContainerDebug, [{
    key: "hasTransplantedViews",
    get: function get() {
      return this._raw_lContainer[HAS_TRANSPLANTED_VIEWS];
    }
  }, {
    key: "views",
    get: function get() {
      return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET).map(toDebug);
    }
  }, {
    key: "parent",
    get: function get() {
      return toDebug(this._raw_lContainer[PARENT]);
    }
  }, {
    key: "movedViews",
    get: function get() {
      return this._raw_lContainer[MOVED_VIEWS];
    }
  }, {
    key: "host",
    get: function get() {
      return this._raw_lContainer[HOST];
    }
  }, {
    key: "native",
    get: function get() {
      return this._raw_lContainer[NATIVE];
    }
  }, {
    key: "next",
    get: function get() {
      return toDebug(this._raw_lContainer[NEXT]);
    }
  }]);

  return LContainerDebug;
}();

var ɵ0$5 = function ɵ0$5() {
  return Promise.resolve(null);
};
/**
 * A permanent marker promise which signifies that the current CD tree is
 * clean.
 */


var _CLEAN_PROMISE = /*@__PURE__*/ɵ0$5();
/**
 * Invoke `HostBindingsFunction`s for view.
 *
 * This methods executes `TView.hostBindingOpCodes`. It is used to execute the
 * `HostBindingsFunction`s associated with the current `LView`.
 *
 * @param tView Current `TView`.
 * @param lView Current `LView`.
 */


function processHostBindingOpCodes(tView, lView) {
  var hostBindingOpCodes = tView.hostBindingOpCodes;
  if (hostBindingOpCodes === null) return;

  try {
    for (var i = 0; i < hostBindingOpCodes.length; i++) {
      var opCode = hostBindingOpCodes[i];

      if (opCode < 0) {
        // Negative numbers are element indexes.
        setSelectedIndex(~opCode);
      } else {
        // Positive numbers are NumberTuple which store bindingRootIndex and directiveIndex.
        var directiveIdx = opCode;
        var bindingRootIndx = hostBindingOpCodes[++i];
        var hostBindingFn = hostBindingOpCodes[++i];
        setBindingRootForHostBindings(bindingRootIndx, directiveIdx);
        var context = lView[directiveIdx];
        hostBindingFn(2
        /* Update */
        , context);
      }
    }
  } finally {
    setSelectedIndex(-1);
  }
}
/** Refreshes all content queries declared by directives in a given view */


function refreshContentQueries(tView, lView) {
  var contentQueries = tView.contentQueries;

  if (contentQueries !== null) {
    for (var i = 0; i < contentQueries.length; i += 2) {
      var queryStartIdx = contentQueries[i];
      var directiveDefIdx = contentQueries[i + 1];

      if (directiveDefIdx !== -1) {
        var _directiveDef2 = tView.data[directiveDefIdx];
        ngDevMode && assertDefined(_directiveDef2, 'DirectiveDef not found.');
        ngDevMode && assertDefined(_directiveDef2.contentQueries, 'contentQueries function should be defined');
        setCurrentQueryIndex(queryStartIdx);

        _directiveDef2.contentQueries(2
        /* Update */
        , lView[directiveDefIdx], directiveDefIdx);
      }
    }
  }
}
/** Refreshes child components in the current view (update mode). */


function refreshChildComponents(hostLView, components) {
  for (var i = 0; i < components.length; i++) {
    refreshComponent(hostLView, components[i]);
  }
}
/** Renders child components in the current view (creation mode). */


function renderChildComponents(hostLView, components) {
  for (var i = 0; i < components.length; i++) {
    renderComponent(hostLView, components[i]);
  }
}

function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {
  var lView = ngDevMode ? cloneToLViewFromTViewBlueprint(tView) : tView.blueprint.slice();
  lView[HOST] = host;
  lView[FLAGS] = flags | 4
  /* CreationMode */
  | 128
  /* Attached */
  | 8
  /* FirstLViewPass */
  ;
  resetPreOrderHookFlags(lView);
  ngDevMode && tView.declTNode && parentLView && assertTNodeForLView(tView.declTNode, parentLView);
  lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;
  lView[CONTEXT] = context;
  lView[RENDERER_FACTORY] = rendererFactory || parentLView && parentLView[RENDERER_FACTORY];
  ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');
  lView[RENDERER] = renderer || parentLView && parentLView[RENDERER];
  ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');
  lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;
  lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;
  lView[T_HOST] = tHostNode;
  ngDevMode && assertEqual(tView.type == 2
  /* Embedded */
  ? parentLView !== null : true, true, 'Embedded views must have parentLView');
  lView[DECLARATION_COMPONENT_VIEW] = tView.type == 2
  /* Embedded */
  ? parentLView[DECLARATION_COMPONENT_VIEW] : lView;
  ngDevMode && attachLViewDebug(lView);
  return lView;
}

function getOrCreateTNode(tView, index, type, name, attrs) {
  ngDevMode && index !== 0 && // 0 are bogus nodes and they are OK. See `createContainerRef` in
  // `view_engine_compatibility` for additional context.
  assertGreaterThanOrEqual(index, HEADER_OFFSET, 'TNodes can\'t be in the LView header.'); // Keep this function short, so that the VM will inline it.

  ngDevMode && assertPureTNodeType(type);
  var tNode = tView.data[index];

  if (tNode === null) {
    tNode = createTNodeAtIndex(tView, index, type, name, attrs);

    if (isInI18nBlock()) {
      // If we are in i18n block then all elements should be pre declared through `Placeholder`
      // See `TNodeType.Placeholder` and `LFrame.inI18n` for more context.
      // If the `TNode` was not pre-declared than it means it was not mentioned which means it was
      // removed, so we mark it as detached.
      tNode.flags |= 64
      /* isDetached */
      ;
    }
  } else if (tNode.type & 64
  /* Placeholder */
  ) {
      tNode.type = type;
      tNode.value = name;
      tNode.attrs = attrs;
      var parent = getCurrentParentTNode();
      tNode.injectorIndex = parent === null ? -1 : parent.injectorIndex;
      ngDevMode && assertTNodeForTView(tNode, tView);
      ngDevMode && assertEqual(index, tNode.index, 'Expecting same index');
    }

  setCurrentTNode(tNode, true);
  return tNode;
}

function createTNodeAtIndex(tView, index, type, name, attrs) {
  var currentTNode = getCurrentTNodePlaceholderOk();
  var isParent = isCurrentTNodeParent();
  var parent = isParent ? currentTNode : currentTNode && currentTNode.parent; // Parents cannot cross component boundaries because components will be used in multiple places.

  var tNode = tView.data[index] = createTNode(tView, parent, type, index, name, attrs); // Assign a pointer to the first child node of a given view. The first node is not always the one
  // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has
  // the index 1 or more, so we can't just check node index.

  if (tView.firstChild === null) {
    tView.firstChild = tNode;
  }

  if (currentTNode !== null) {
    if (isParent) {
      // FIXME(misko): This logic looks unnecessarily complicated. Could we simplify?
      if (currentTNode.child == null && tNode.parent !== null) {
        // We are in the same view, which means we are adding content node to the parent view.
        currentTNode.child = tNode;
      }
    } else {
      if (currentTNode.next === null) {
        // In the case of i18n the `currentTNode` may already be linked, in which case we don't want
        // to break the links which i18n created.
        currentTNode.next = tNode;
      }
    }
  }

  return tNode;
}
/**
 * When elements are created dynamically after a view blueprint is created (e.g. through
 * i18nApply()), we need to adjust the blueprint for future
 * template passes.
 *
 * @param tView `TView` associated with `LView`
 * @param lView The `LView` containing the blueprint to adjust
 * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0
 * @param initialValue Initial value to store in blueprint
 */


function allocExpando(tView, lView, numSlotsToAlloc, initialValue) {
  if (numSlotsToAlloc === 0) return -1;

  if (ngDevMode) {
    assertFirstCreatePass(tView);
    assertSame(tView, lView[TVIEW], '`LView` must be associated with `TView`!');
    assertEqual(tView.data.length, lView.length, 'Expecting LView to be same size as TView');
    assertEqual(tView.data.length, tView.blueprint.length, 'Expecting Blueprint to be same size as TView');
    assertFirstUpdatePass(tView);
  }

  var allocIdx = lView.length;

  for (var i = 0; i < numSlotsToAlloc; i++) {
    lView.push(initialValue);
    tView.blueprint.push(initialValue);
    tView.data.push(null);
  }

  return allocIdx;
} //////////////////////////
//// Render
//////////////////////////

/**
 * Processes a view in the creation mode. This includes a number of steps in a specific order:
 * - creating view query functions (if any);
 * - executing a template function in the creation mode;
 * - updating static queries (if any);
 * - creating child components defined in a given view.
 */


function renderView(tView, lView, context) {
  ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');
  enterView(lView);

  try {
    var viewQuery = tView.viewQuery;

    if (viewQuery !== null) {
      executeViewQueryFn(1
      /* Create */
      , viewQuery, context);
    } // Execute a template associated with this view, if it exists. A template function might not be
    // defined for the root component views.


    var templateFn = tView.template;

    if (templateFn !== null) {
      executeTemplate(tView, lView, templateFn, 1
      /* Create */
      , context);
    } // This needs to be set before children are processed to support recursive components.
    // This must be set to false immediately after the first creation run because in an
    // ngFor loop, all the views will be created together before update mode runs and turns
    // off firstCreatePass. If we don't set it here, instances will perform directive
    // matching, etc again and again.


    if (tView.firstCreatePass) {
      tView.firstCreatePass = false;
    } // We resolve content queries specifically marked as `static` in creation mode. Dynamic
    // content queries are resolved during change detection (i.e. update mode), after embedded
    // views are refreshed (see block above).


    if (tView.staticContentQueries) {
      refreshContentQueries(tView, lView);
    } // We must materialize query results before child components are processed
    // in case a child component has projected a container. The LContainer needs
    // to exist so the embedded views are properly attached by the container.


    if (tView.staticViewQueries) {
      executeViewQueryFn(2
      /* Update */
      , tView.viewQuery, context);
    } // Render child component views.


    var components = tView.components;

    if (components !== null) {
      renderChildComponents(lView, components);
    }
  } catch (error) {
    // If we didn't manage to get past the first template pass due to
    // an error, mark the view as corrupted so we can try to recover.
    if (tView.firstCreatePass) {
      tView.incompleteFirstPass = true;
    }

    throw error;
  } finally {
    lView[FLAGS] &= ~4
    /* CreationMode */
    ;
    leaveView();
  }
}
/**
 * Processes a view in update mode. This includes a number of steps in a specific order:
 * - executing a template function in update mode;
 * - executing hooks;
 * - refreshing queries;
 * - setting host bindings;
 * - refreshing child (embedded and component) views.
 */


function refreshView(tView, lView, templateFn, context) {
  ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');
  var flags = lView[FLAGS];
  if ((flags & 256
  /* Destroyed */
  ) === 256
  /* Destroyed */
  ) return;
  enterView(lView); // Check no changes mode is a dev only mode used to verify that bindings have not changed
  // since they were assigned. We do not want to execute lifecycle hooks in that mode.

  var isInCheckNoChangesPass = isInCheckNoChangesMode();

  try {
    resetPreOrderHookFlags(lView);
    setBindingIndex(tView.bindingStartIndex);

    if (templateFn !== null) {
      executeTemplate(tView, lView, templateFn, 2
      /* Update */
      , context);
    }

    var hooksInitPhaseCompleted = (flags & 3
    /* InitPhaseStateMask */
    ) === 3
    /* InitPhaseCompleted */
    ; // execute pre-order hooks (OnInit, OnChanges, DoCheck)
    // PERF WARNING: do NOT extract this to a separate function without running benchmarks

    if (!isInCheckNoChangesPass) {
      if (hooksInitPhaseCompleted) {
        var preOrderCheckHooks = tView.preOrderCheckHooks;

        if (preOrderCheckHooks !== null) {
          executeCheckHooks(lView, preOrderCheckHooks, null);
        }
      } else {
        var preOrderHooks = tView.preOrderHooks;

        if (preOrderHooks !== null) {
          executeInitAndCheckHooks(lView, preOrderHooks, 0
          /* OnInitHooksToBeRun */
          , null);
        }

        incrementInitPhaseFlags(lView, 0
        /* OnInitHooksToBeRun */
        );
      }
    } // First mark transplanted views that are declared in this lView as needing a refresh at their
    // insertion points. This is needed to avoid the situation where the template is defined in this
    // `LView` but its declaration appears after the insertion component.


    markTransplantedViewsForRefresh(lView);
    refreshEmbeddedViews(lView); // Content query results must be refreshed before content hooks are called.

    if (tView.contentQueries !== null) {
      refreshContentQueries(tView, lView);
    } // execute content hooks (AfterContentInit, AfterContentChecked)
    // PERF WARNING: do NOT extract this to a separate function without running benchmarks


    if (!isInCheckNoChangesPass) {
      if (hooksInitPhaseCompleted) {
        var contentCheckHooks = tView.contentCheckHooks;

        if (contentCheckHooks !== null) {
          executeCheckHooks(lView, contentCheckHooks);
        }
      } else {
        var contentHooks = tView.contentHooks;

        if (contentHooks !== null) {
          executeInitAndCheckHooks(lView, contentHooks, 1
          /* AfterContentInitHooksToBeRun */
          );
        }

        incrementInitPhaseFlags(lView, 1
        /* AfterContentInitHooksToBeRun */
        );
      }
    }

    processHostBindingOpCodes(tView, lView); // Refresh child component views.

    var components = tView.components;

    if (components !== null) {
      refreshChildComponents(lView, components);
    } // View queries must execute after refreshing child components because a template in this view
    // could be inserted in a child component. If the view query executes before child component
    // refresh, the template might not yet be inserted.


    var viewQuery = tView.viewQuery;

    if (viewQuery !== null) {
      executeViewQueryFn(2
      /* Update */
      , viewQuery, context);
    } // execute view hooks (AfterViewInit, AfterViewChecked)
    // PERF WARNING: do NOT extract this to a separate function without running benchmarks


    if (!isInCheckNoChangesPass) {
      if (hooksInitPhaseCompleted) {
        var viewCheckHooks = tView.viewCheckHooks;

        if (viewCheckHooks !== null) {
          executeCheckHooks(lView, viewCheckHooks);
        }
      } else {
        var viewHooks = tView.viewHooks;

        if (viewHooks !== null) {
          executeInitAndCheckHooks(lView, viewHooks, 2
          /* AfterViewInitHooksToBeRun */
          );
        }

        incrementInitPhaseFlags(lView, 2
        /* AfterViewInitHooksToBeRun */
        );
      }
    }

    if (tView.firstUpdatePass === true) {
      // We need to make sure that we only flip the flag on successful `refreshView` only
      // Don't do this in `finally` block.
      // If we did this in `finally` block then an exception could block the execution of styling
      // instructions which in turn would be unable to insert themselves into the styling linked
      // list. The result of this would be that if the exception would not be throw on subsequent CD
      // the styling would be unable to process it data and reflect to the DOM.
      tView.firstUpdatePass = false;
    } // Do not reset the dirty state when running in check no changes mode. We don't want components
    // to behave differently depending on whether check no changes is enabled or not. For example:
    // Marking an OnPush component as dirty from within the `ngAfterViewInit` hook in order to
    // refresh a `NgClass` binding should work. If we would reset the dirty state in the check
    // no changes cycle, the component would be not be dirty for the next update pass. This would
    // be different in production mode where the component dirty state is not reset.


    if (!isInCheckNoChangesPass) {
      lView[FLAGS] &= ~(64
      /* Dirty */
      | 8
      /* FirstLViewPass */
      );
    }

    if (lView[FLAGS] & 1024
    /* RefreshTransplantedView */
    ) {
        lView[FLAGS] &= ~1024
        /* RefreshTransplantedView */
        ;
        updateTransplantedViewCount(lView[PARENT], -1);
      }
  } finally {
    leaveView();
  }
}

function renderComponentOrTemplate(tView, lView, templateFn, context) {
  var rendererFactory = lView[RENDERER_FACTORY];
  var normalExecutionPath = !isInCheckNoChangesMode();
  var creationModeIsActive = isCreationMode(lView);

  try {
    if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {
      rendererFactory.begin();
    }

    if (creationModeIsActive) {
      renderView(tView, lView, context);
    }

    refreshView(tView, lView, templateFn, context);
  } finally {
    if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {
      rendererFactory.end();
    }
  }
}

function executeTemplate(tView, lView, templateFn, rf, context) {
  var prevSelectedIndex = getSelectedIndex();

  try {
    setSelectedIndex(-1);

    if (rf & 2
    /* Update */
    && lView.length > HEADER_OFFSET) {
      // When we're updating, inherently select 0 so we don't
      // have to generate that instruction for most update blocks.
      selectIndexInternal(tView, lView, HEADER_OFFSET, isInCheckNoChangesMode());
    }

    templateFn(rf, context);
  } finally {
    setSelectedIndex(prevSelectedIndex);
  }
} //////////////////////////
//// Element
//////////////////////////


function executeContentQueries(tView, tNode, lView) {
  if (isContentQueryHost(tNode)) {
    var start = tNode.directiveStart;
    var end = tNode.directiveEnd;

    for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {
      var def = tView.data[directiveIndex];

      if (def.contentQueries) {
        def.contentQueries(1
        /* Create */
        , lView[directiveIndex], directiveIndex);
      }
    }
  }
}
/**
 * Creates directive instances.
 */


function createDirectivesInstances(tView, lView, tNode) {
  if (!getBindingsEnabled()) return;
  instantiateAllDirectives(tView, lView, tNode, getNativeByTNode(tNode, lView));

  if ((tNode.flags & 128
  /* hasHostBindings */
  ) === 128
  /* hasHostBindings */
  ) {
      invokeDirectivesHostBindings(tView, lView, tNode);
    }
}
/**
 * Takes a list of local names and indices and pushes the resolved local variable values
 * to LView in the same order as they are loaded in the template with load().
 */


function saveResolvedLocalsInData(viewData, tNode) {
  var localRefExtractor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getNativeByTNode;
  var localNames = tNode.localNames;

  if (localNames !== null) {
    var localIndex = tNode.index + 1;

    for (var i = 0; i < localNames.length; i += 2) {
      var index = localNames[i + 1];
      var value = index === -1 ? localRefExtractor(tNode, viewData) : viewData[index];
      viewData[localIndex++] = value;
    }
  }
}
/**
 * Gets TView from a template function or creates a new TView
 * if it doesn't already exist.
 *
 * @param def ComponentDef
 * @returns TView
 */


function getOrCreateTComponentView(def) {
  var tView = def.tView; // Create a TView if there isn't one, or recreate it if the first create pass didn't
  // complete successfully since we can't know for sure whether it's in a usable shape.

  if (tView === null || tView.incompleteFirstPass) {
    // Declaration node here is null since this function is called when we dynamically create a
    // component and hence there is no declaration.
    var declTNode = null;
    return def.tView = createTView(1
    /* Component */
    , declTNode, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts);
  }

  return tView;
}
/**
 * Creates a TView instance
 *
 * @param type Type of `TView`.
 * @param declTNode Declaration location of this `TView`.
 * @param templateFn Template function
 * @param decls The number of nodes, local refs, and pipes in this template
 * @param directives Registry of directives for this view
 * @param pipes Registry of pipes for this view
 * @param viewQuery View queries for this view
 * @param schemas Schemas for this view
 * @param consts Constants for this view
 */


function createTView(type, declTNode, templateFn, decls, vars, directives, pipes, viewQuery, schemas, constsOrFactory) {
  ngDevMode && ngDevMode.tView++;
  var bindingStartIndex = HEADER_OFFSET + decls; // This length does not yet contain host bindings from child directives because at this point,
  // we don't know which directives are active on this template. As soon as a directive is matched
  // that has a host binding, we will update the blueprint with that def's hostVars count.

  var initialViewLength = bindingStartIndex + vars;
  var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);
  var consts = typeof constsOrFactory === 'function' ? constsOrFactory() : constsOrFactory;
  var tView = blueprint[TVIEW] = ngDevMode ? new TViewConstructor(type, // type: TViewType,
  blueprint, // blueprint: LView,
  templateFn, // template: ComponentTemplate<{}>|null,
  null, // queries: TQueries|null
  viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,
  declTNode, // declTNode: TNode|null,
  cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,
  bindingStartIndex, // bindingStartIndex: number,
  initialViewLength, // expandoStartIndex: number,
  null, // hostBindingOpCodes: HostBindingOpCodes,
  true, // firstCreatePass: boolean,
  true, // firstUpdatePass: boolean,
  false, // staticViewQueries: boolean,
  false, // staticContentQueries: boolean,
  null, // preOrderHooks: HookData|null,
  null, // preOrderCheckHooks: HookData|null,
  null, // contentHooks: HookData|null,
  null, // contentCheckHooks: HookData|null,
  null, // viewHooks: HookData|null,
  null, // viewCheckHooks: HookData|null,
  null, // destroyHooks: DestroyHookData|null,
  null, // cleanup: any[]|null,
  null, // contentQueries: number[]|null,
  null, // components: number[]|null,
  typeof directives === 'function' ? //
  directives() : //
  directives, // directiveRegistry: DirectiveDefList|null,
  typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,
  null, // firstChild: TNode|null,
  schemas, // schemas: SchemaMetadata[]|null,
  consts, // consts: TConstants|null
  false, // incompleteFirstPass: boolean
  decls, // ngDevMode only: decls
  vars) : {
    type: type,
    blueprint: blueprint,
    template: templateFn,
    queries: null,
    viewQuery: viewQuery,
    declTNode: declTNode,
    data: blueprint.slice().fill(null, bindingStartIndex),
    bindingStartIndex: bindingStartIndex,
    expandoStartIndex: initialViewLength,
    hostBindingOpCodes: null,
    firstCreatePass: true,
    firstUpdatePass: true,
    staticViewQueries: false,
    staticContentQueries: false,
    preOrderHooks: null,
    preOrderCheckHooks: null,
    contentHooks: null,
    contentCheckHooks: null,
    viewHooks: null,
    viewCheckHooks: null,
    destroyHooks: null,
    cleanup: null,
    contentQueries: null,
    components: null,
    directiveRegistry: typeof directives === 'function' ? directives() : directives,
    pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,
    firstChild: null,
    schemas: schemas,
    consts: consts,
    incompleteFirstPass: false
  };

  if (ngDevMode) {
    // For performance reasons it is important that the tView retains the same shape during runtime.
    // (To make sure that all of the code is monomorphic.) For this reason we seal the object to
    // prevent class transitions.
    Object.seal(tView);
  }

  return tView;
}

function createViewBlueprint(bindingStartIndex, initialViewLength) {
  var blueprint = ngDevMode ? new LViewBlueprint() : [];

  for (var i = 0; i < initialViewLength; i++) {
    blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);
  }

  return blueprint;
}

function createError(text, token) {
  return new Error("Renderer: ".concat(text, " [").concat(stringifyForError(token), "]"));
}

function assertHostNodeExists(rElement, elementOrSelector) {
  if (!rElement) {
    if (typeof elementOrSelector === 'string') {
      throw createError('Host node with selector not found:', elementOrSelector);
    } else {
      throw createError('Host node is required:', elementOrSelector);
    }
  }
}
/**
 * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.
 *
 * @param rendererFactory Factory function to create renderer instance.
 * @param elementOrSelector Render element or CSS selector to locate the element.
 * @param encapsulation View Encapsulation defined for component that requests host element.
 */


function locateHostElement(renderer, elementOrSelector, encapsulation) {
  if (isProceduralRenderer(renderer)) {
    // When using native Shadow DOM, do not clear host element to allow native slot projection
    var preserveContent = encapsulation === ViewEncapsulation$1.ShadowDom;
    return renderer.selectRootElement(elementOrSelector, preserveContent);
  }

  var rElement = typeof elementOrSelector === 'string' ? renderer.querySelector(elementOrSelector) : elementOrSelector;
  ngDevMode && assertHostNodeExists(rElement, elementOrSelector); // Always clear host element's content when Renderer3 is in use. For procedural renderer case we
  // make it depend on whether ShadowDom encapsulation is used (in which case the content should be
  // preserved to allow native slot projection). ShadowDom encapsulation requires procedural
  // renderer, and procedural renderer case is handled above.

  rElement.textContent = '';
  return rElement;
}
/**
 * Saves context for this cleanup function in LView.cleanupInstances.
 *
 * On the first template pass, saves in TView:
 * - Cleanup function
 * - Index of context we just saved in LView.cleanupInstances
 */


function storeCleanupWithContext(tView, lView, context, cleanupFn) {
  var lCleanup = getLCleanup(lView);
  lCleanup.push(context);

  if (tView.firstCreatePass) {
    getTViewCleanup(tView).push(cleanupFn, lCleanup.length - 1);
  }
}

function createTNode(tView, tParent, type, index, value, attrs) {
  ngDevMode && index !== 0 && // 0 are bogus nodes and they are OK. See `createContainerRef` in
  // `view_engine_compatibility` for additional context.
  assertGreaterThanOrEqual(index, HEADER_OFFSET, 'TNodes can\'t be in the LView header.');
  ngDevMode && assertNotSame(attrs, undefined, '\'undefined\' is not valid value for \'attrs\'');
  ngDevMode && ngDevMode.tNode++;
  ngDevMode && tParent && assertTNodeForTView(tParent, tView);
  var injectorIndex = tParent ? tParent.injectorIndex : -1;
  var tNode = ngDevMode ? new TNodeDebug(tView, // tView_: TView
  type, // type: TNodeType
  index, // index: number
  null, // insertBeforeIndex: null|-1|number|number[]
  injectorIndex, // injectorIndex: number
  -1, // directiveStart: number
  -1, // directiveEnd: number
  -1, // directiveStylingLast: number
  null, // propertyBindings: number[]|null
  0, // flags: TNodeFlags
  0, // providerIndexes: TNodeProviderIndexes
  value, // value: string|null
  attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null
  null, // mergedAttrs
  null, // localNames: (string|number)[]|null
  undefined, // initialInputs: (string[]|null)[]|null|undefined
  null, // inputs: PropertyAliases|null
  null, // outputs: PropertyAliases|null
  null, // tViews: ITView|ITView[]|null
  null, // next: ITNode|null
  null, // projectionNext: ITNode|null
  null, // child: ITNode|null
  tParent, // parent: TElementNode|TContainerNode|null
  null, // projection: number|(ITNode|RNode[])[]|null
  null, // styles: string|null
  null, // stylesWithoutHost: string|null
  undefined, // residualStyles: string|null
  null, // classes: string|null
  null, // classesWithoutHost: string|null
  undefined, // residualClasses: string|null
  0, // classBindings: TStylingRange;
  0) : {
    type: type,
    index: index,
    insertBeforeIndex: null,
    injectorIndex: injectorIndex,
    directiveStart: -1,
    directiveEnd: -1,
    directiveStylingLast: -1,
    propertyBindings: null,
    flags: 0,
    providerIndexes: 0,
    value: value,
    attrs: attrs,
    mergedAttrs: null,
    localNames: null,
    initialInputs: undefined,
    inputs: null,
    outputs: null,
    tViews: null,
    next: null,
    projectionNext: null,
    child: null,
    parent: tParent,
    projection: null,
    styles: null,
    stylesWithoutHost: null,
    residualStyles: undefined,
    classes: null,
    classesWithoutHost: null,
    residualClasses: undefined,
    classBindings: 0,
    styleBindings: 0
  };

  if (ngDevMode) {
    // For performance reasons it is important that the tNode retains the same shape during runtime.
    // (To make sure that all of the code is monomorphic.) For this reason we seal the object to
    // prevent class transitions.
    Object.seal(tNode);
  }

  return tNode;
}

function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {
  for (var publicName in inputAliasMap) {
    if (inputAliasMap.hasOwnProperty(publicName)) {
      propStore = propStore === null ? {} : propStore;
      var internalName = inputAliasMap[publicName];

      if (propStore.hasOwnProperty(publicName)) {
        propStore[publicName].push(directiveDefIdx, internalName);
      } else {
        propStore[publicName] = [directiveDefIdx, internalName];
      }
    }
  }

  return propStore;
}
/**
 * Initializes data structures required to work with directive inputs and outputs.
 * Initialization is done for all directives matched on a given TNode.
 */


function initializeInputAndOutputAliases(tView, tNode) {
  ngDevMode && assertFirstCreatePass(tView);
  var start = tNode.directiveStart;
  var end = tNode.directiveEnd;
  var tViewData = tView.data;
  var tNodeAttrs = tNode.attrs;
  var inputsFromAttrs = ngDevMode ? new TNodeInitialInputs() : [];
  var inputsStore = null;
  var outputsStore = null;

  for (var i = start; i < end; i++) {
    var _directiveDef3 = tViewData[i];
    var directiveInputs = _directiveDef3.inputs; // Do not use unbound attributes as inputs to structural directives, since structural
    // directive inputs can only be set using microsyntax (e.g. `<div *dir="exp">`).
    // TODO(FW-1930): microsyntax expressions may also contain unbound/static attributes, which
    // should be set for inline templates.

    var initialInputs = tNodeAttrs !== null && !isInlineTemplate(tNode) ? generateInitialInputs(directiveInputs, tNodeAttrs) : null;
    inputsFromAttrs.push(initialInputs);
    inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);
    outputsStore = generatePropertyAliases(_directiveDef3.outputs, i, outputsStore);
  }

  if (inputsStore !== null) {
    if (inputsStore.hasOwnProperty('class')) {
      tNode.flags |= 16
      /* hasClassInput */
      ;
    }

    if (inputsStore.hasOwnProperty('style')) {
      tNode.flags |= 32
      /* hasStyleInput */
      ;
    }
  }

  tNode.initialInputs = inputsFromAttrs;
  tNode.inputs = inputsStore;
  tNode.outputs = outputsStore;
}
/**
 * Mapping between attributes names that don't correspond to their element property names.
 *
 * Performance note: this function is written as a series of if checks (instead of, say, a property
 * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of
 * mapping property names. Do NOT change without benchmarking.
 *
 * Note: this mapping has to be kept in sync with the equally named mapping in the template
 * type-checking machinery of ngtsc.
 */


function mapPropName(name) {
  if (name === 'class') return 'className';
  if (name === 'for') return 'htmlFor';
  if (name === 'formaction') return 'formAction';
  if (name === 'innerHtml') return 'innerHTML';
  if (name === 'readonly') return 'readOnly';
  if (name === 'tabindex') return 'tabIndex';
  return name;
}

function elementPropertyInternal(tView, tNode, lView, propName, value, renderer, sanitizer, nativeOnly) {
  ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');
  var element = getNativeByTNode(tNode, lView);
  var inputData = tNode.inputs;
  var dataValue;

  if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {
    setInputsForProperty(tView, lView, dataValue, propName, value);
    if (isComponentHost(tNode)) markDirtyIfOnPush(lView, tNode.index);

    if (ngDevMode) {
      setNgReflectProperties(lView, element, tNode.type, dataValue, value);
    }
  } else if (tNode.type & 3
  /* AnyRNode */
  ) {
      propName = mapPropName(propName);

      if (ngDevMode) {
        validateAgainstEventProperties(propName);

        if (!validateProperty(tView, element, propName, tNode)) {
          // Return here since we only log warnings for unknown properties.
          logUnknownPropertyError(propName, tNode);
          return;
        }

        ngDevMode.rendererSetProperty++;
      } // It is assumed that the sanitizer is only added when the compiler determines that the
      // property is risky, so sanitization can be done without further checks.


      value = sanitizer != null ? sanitizer(value, tNode.value || '', propName) : value;

      if (isProceduralRenderer(renderer)) {
        renderer.setProperty(element, propName, value);
      } else if (!isAnimationProp(propName)) {
        element.setProperty ? element.setProperty(propName, value) : element[propName] = value;
      }
    } else if (tNode.type & 12
  /* AnyContainer */
  ) {
      // If the node is a container and the property didn't
      // match any of the inputs or schemas we should throw.
      if (ngDevMode && !matchingSchemas(tView, tNode.value)) {
        logUnknownPropertyError(propName, tNode);
      }
    }
}
/** If node is an OnPush component, marks its LView dirty. */


function markDirtyIfOnPush(lView, viewIndex) {
  ngDevMode && assertLView(lView);
  var childComponentLView = getComponentLViewByIndex(viewIndex, lView);

  if (!(childComponentLView[FLAGS] & 16
  /* CheckAlways */
  )) {
    childComponentLView[FLAGS] |= 64
    /* Dirty */
    ;
  }
}

function setNgReflectProperty(lView, element, type, attrName, value) {
  var renderer = lView[RENDERER];
  attrName = normalizeDebugBindingName(attrName);
  var debugValue = normalizeDebugBindingValue(value);

  if (type & 3
  /* AnyRNode */
  ) {
      if (value == null) {
        isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) : element.removeAttribute(attrName);
      } else {
        isProceduralRenderer(renderer) ? renderer.setAttribute(element, attrName, debugValue) : element.setAttribute(attrName, debugValue);
      }
    } else {
    var textContent = "bindings=".concat(JSON.stringify(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__["default"])({}, attrName, debugValue), null, 2));

    if (isProceduralRenderer(renderer)) {
      renderer.setValue(element, textContent);
    } else {
      element.textContent = textContent;
    }
  }
}

function setNgReflectProperties(lView, element, type, dataValue, value) {
  if (type & (3
  /* AnyRNode */
  | 4
  /* Container */
  )) {
    /**
     * dataValue is an array containing runtime input or output names for the directives:
     * i+0: directive instance index
     * i+1: privateName
     *
     * e.g. [0, 'change', 'change-minified']
     * we want to set the reflected property with the privateName: dataValue[i+1]
     */
    for (var i = 0; i < dataValue.length; i += 2) {
      setNgReflectProperty(lView, element, type, dataValue[i + 1], value);
    }
  }
}

function validateProperty(tView, element, propName, tNode) {
  // If `schemas` is set to `null`, that's an indication that this Component was compiled in AOT
  // mode where this check happens at compile time. In JIT mode, `schemas` is always present and
  // defined as an array (as an empty array in case `schemas` field is not defined) and we should
  // execute the check below.
  if (tView.schemas === null) return true; // The property is considered valid if the element matches the schema, it exists on the element
  // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).

  if (matchingSchemas(tView, tNode.value) || propName in element || isAnimationProp(propName)) {
    return true;
  } // Note: `typeof Node` returns 'function' in most browsers, but on IE it is 'object' so we
  // need to account for both here, while being careful for `typeof null` also returning 'object'.


  return typeof Node === 'undefined' || Node === null || !(element instanceof Node);
}

function matchingSchemas(tView, tagName) {
  var schemas = tView.schemas;

  if (schemas !== null) {
    for (var i = 0; i < schemas.length; i++) {
      var schema = schemas[i];

      if (schema === NO_ERRORS_SCHEMA || schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {
        return true;
      }
    }
  }

  return false;
}
/**
 * Logs an error that a property is not supported on an element.
 * @param propName Name of the invalid property.
 * @param tNode Node on which we encountered the property.
 */


function logUnknownPropertyError(propName, tNode) {
  var message = "Can't bind to '".concat(propName, "' since it isn't a known property of '").concat(tNode.value, "'.");
  console.error(formatRuntimeError("303"
  /* UNKNOWN_BINDING */
  , message));
}
/**
 * Instantiate a root component.
 */


function instantiateRootComponent(tView, lView, def) {
  var rootTNode = getCurrentTNode();

  if (tView.firstCreatePass) {
    if (def.providersResolver) def.providersResolver(def);
    var directiveIndex = allocExpando(tView, lView, 1, null);
    ngDevMode && assertEqual(directiveIndex, rootTNode.directiveStart, 'Because this is a root component the allocated expando should match the TNode component.');
    configureViewWithDirective(tView, rootTNode, lView, directiveIndex, def);
  }

  var directive = getNodeInjectable(lView, tView, rootTNode.directiveStart, rootTNode);
  attachPatchData(directive, lView);
  var native = getNativeByTNode(rootTNode, lView);

  if (native) {
    attachPatchData(native, lView);
  }

  return directive;
}
/**
 * Resolve the matched directives on a node.
 */


function resolveDirectives(tView, lView, tNode, localRefs) {
  // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in
  // tsickle.
  ngDevMode && assertFirstCreatePass(tView);
  var hasDirectives = false;

  if (getBindingsEnabled()) {
    var directiveDefs = findDirectiveDefMatches(tView, lView, tNode);
    var exportsMap = localRefs === null ? null : {
      '': -1
    };

    if (directiveDefs !== null) {
      hasDirectives = true;
      initTNodeFlags(tNode, tView.data.length, directiveDefs.length); // When the same token is provided by several directives on the same node, some rules apply in
      // the viewEngine:
      // - viewProviders have priority over providers
      // - the last directive in NgModule.declarations has priority over the previous one
      // So to match these rules, the order in which providers are added in the arrays is very
      // important.

      for (var i = 0; i < directiveDefs.length; i++) {
        var def = directiveDefs[i];
        if (def.providersResolver) def.providersResolver(def);
      }

      var preOrderHooksFound = false;
      var preOrderCheckHooksFound = false;
      var directiveIdx = allocExpando(tView, lView, directiveDefs.length, null);
      ngDevMode && assertSame(directiveIdx, tNode.directiveStart, 'TNode.directiveStart should point to just allocated space');

      for (var _i3 = 0; _i3 < directiveDefs.length; _i3++) {
        var _def2 = directiveDefs[_i3]; // Merge the attrs in the order of matches. This assumes that the first directive is the
        // component itself, so that the component has the least priority.

        tNode.mergedAttrs = mergeHostAttrs(tNode.mergedAttrs, _def2.hostAttrs);
        configureViewWithDirective(tView, tNode, lView, directiveIdx, _def2);
        saveNameToExportMap(directiveIdx, _def2, exportsMap);
        if (_def2.contentQueries !== null) tNode.flags |= 8
        /* hasContentQuery */
        ;
        if (_def2.hostBindings !== null || _def2.hostAttrs !== null || _def2.hostVars !== 0) tNode.flags |= 128
        /* hasHostBindings */
        ;
        var lifeCycleHooks = _def2.type.prototype; // Only push a node index into the preOrderHooks array if this is the first
        // pre-order hook found on this node.

        if (!preOrderHooksFound && (lifeCycleHooks.ngOnChanges || lifeCycleHooks.ngOnInit || lifeCycleHooks.ngDoCheck)) {
          // We will push the actual hook function into this array later during dir instantiation.
          // We cannot do it now because we must ensure hooks are registered in the same
          // order that directives are created (i.e. injection order).
          (tView.preOrderHooks || (tView.preOrderHooks = [])).push(tNode.index);
          preOrderHooksFound = true;
        }

        if (!preOrderCheckHooksFound && (lifeCycleHooks.ngOnChanges || lifeCycleHooks.ngDoCheck)) {
          (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(tNode.index);
          preOrderCheckHooksFound = true;
        }

        directiveIdx++;
      }

      initializeInputAndOutputAliases(tView, tNode);
    }

    if (exportsMap) cacheMatchingLocalNames(tNode, localRefs, exportsMap);
  } // Merge the template attrs last so that they have the highest priority.


  tNode.mergedAttrs = mergeHostAttrs(tNode.mergedAttrs, tNode.attrs);
  return hasDirectives;
}
/**
 * Add `hostBindings` to the `TView.hostBindingOpCodes`.
 *
 * @param tView `TView` to which the `hostBindings` should be added.
 * @param tNode `TNode` the element which contains the directive
 * @param lView `LView` current `LView`
 * @param directiveIdx Directive index in view.
 * @param directiveVarsIdx Where will the directive's vars be stored
 * @param def `ComponentDef`/`DirectiveDef`, which contains the `hostVars`/`hostBindings` to add.
 */


function registerHostBindingOpCodes(tView, tNode, lView, directiveIdx, directiveVarsIdx, def) {
  ngDevMode && assertFirstCreatePass(tView);
  var hostBindings = def.hostBindings;

  if (hostBindings) {
    var hostBindingOpCodes = tView.hostBindingOpCodes;

    if (hostBindingOpCodes === null) {
      hostBindingOpCodes = tView.hostBindingOpCodes = [];
    }

    var elementIndx = ~tNode.index;

    if (lastSelectedElementIdx(hostBindingOpCodes) != elementIndx) {
      // Conditionally add select element so that we are more efficient in execution.
      // NOTE: this is strictly not necessary and it trades code size for runtime perf.
      // (We could just always add it.)
      hostBindingOpCodes.push(elementIndx);
    }

    hostBindingOpCodes.push(directiveIdx, directiveVarsIdx, hostBindings);
  }
}
/**
 * Returns the last selected element index in the `HostBindingOpCodes`
 *
 * For perf reasons we don't need to update the selected element index in `HostBindingOpCodes` only
 * if it changes. This method returns the last index (or '0' if not found.)
 *
 * Selected element index are only the ones which are negative.
 */


function lastSelectedElementIdx(hostBindingOpCodes) {
  var i = hostBindingOpCodes.length;

  while (i > 0) {
    var value = hostBindingOpCodes[--i];

    if (typeof value === 'number' && value < 0) {
      return value;
    }
  }

  return 0;
}
/**
 * Instantiate all the directives that were previously resolved on the current node.
 */


function instantiateAllDirectives(tView, lView, tNode, native) {
  var start = tNode.directiveStart;
  var end = tNode.directiveEnd;

  if (!tView.firstCreatePass) {
    getOrCreateNodeInjectorForNode(tNode, lView);
  }

  attachPatchData(native, lView);
  var initialInputs = tNode.initialInputs;

  for (var i = start; i < end; i++) {
    var def = tView.data[i];
    var isComponent = isComponentDef(def);

    if (isComponent) {
      ngDevMode && assertTNodeType(tNode, 3
      /* AnyRNode */
      );
      addComponentLogic(lView, tNode, def);
    }

    var directive = getNodeInjectable(lView, tView, i, tNode);
    attachPatchData(directive, lView);

    if (initialInputs !== null) {
      setInputsFromAttrs(lView, i - start, directive, def, tNode, initialInputs);
    }

    if (isComponent) {
      var componentView = getComponentLViewByIndex(tNode.index, lView);
      componentView[CONTEXT] = directive;
    }
  }
}

function invokeDirectivesHostBindings(tView, lView, tNode) {
  var start = tNode.directiveStart;
  var end = tNode.directiveEnd;
  var firstCreatePass = tView.firstCreatePass;
  var elementIndex = tNode.index;
  var currentDirectiveIndex = getCurrentDirectiveIndex();

  try {
    setSelectedIndex(elementIndex);

    for (var dirIndex = start; dirIndex < end; dirIndex++) {
      var def = tView.data[dirIndex];
      var directive = lView[dirIndex];
      setCurrentDirectiveIndex(dirIndex);

      if (def.hostBindings !== null || def.hostVars !== 0 || def.hostAttrs !== null) {
        invokeHostBindingsInCreationMode(def, directive);
      }
    }
  } finally {
    setSelectedIndex(-1);
    setCurrentDirectiveIndex(currentDirectiveIndex);
  }
}
/**
 * Invoke the host bindings in creation mode.
 *
 * @param def `DirectiveDef` which may contain the `hostBindings` function.
 * @param directive Instance of directive.
 */


function invokeHostBindingsInCreationMode(def, directive) {
  if (def.hostBindings !== null) {
    def.hostBindings(1
    /* Create */
    , directive);
  }
}
/**
 * Matches the current node against all available selectors.
 * If a component is matched (at most one), it is returned in first position in the array.
 */


function findDirectiveDefMatches(tView, viewData, tNode) {
  ngDevMode && assertFirstCreatePass(tView);
  ngDevMode && assertTNodeType(tNode, 3
  /* AnyRNode */
  | 12
  /* AnyContainer */
  );
  var registry = tView.directiveRegistry;
  var matches = null;

  if (registry) {
    for (var i = 0; i < registry.length; i++) {
      var def = registry[i];

      if (isNodeMatchingSelectorList(tNode, def.selectors,
      /* isProjectionMode */
      false)) {
        matches || (matches = ngDevMode ? new MatchesArray() : []);
        diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);

        if (isComponentDef(def)) {
          if (ngDevMode) {
            assertTNodeType(tNode, 2
            /* Element */
            , "\"".concat(tNode.value, "\" tags cannot be used as component hosts. ") + "Please use a different tag to activate the ".concat(stringify(def.type), " component."));
            if (tNode.flags & 2
            /* isComponentHost */
            ) throwMultipleComponentError(tNode);
          }

          markAsComponentHost(tView, tNode); // The component is always stored first with directives after.

          matches.unshift(def);
        } else {
          matches.push(def);
        }
      }
    }
  }

  return matches;
}
/**
 * Marks a given TNode as a component's host. This consists of:
 * - setting appropriate TNode flags;
 * - storing index of component's host element so it will be queued for view refresh during CD.
 */


function markAsComponentHost(tView, hostTNode) {
  ngDevMode && assertFirstCreatePass(tView);
  hostTNode.flags |= 2
  /* isComponentHost */
  ;
  (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);
}
/** Caches local names and their matching directive indices for query and template lookups. */


function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {
  if (localRefs) {
    var localNames = tNode.localNames = ngDevMode ? new TNodeLocalNames() : []; // Local names must be stored in tNode in the same order that localRefs are defined
    // in the template to ensure the data is loaded in the same slots as their refs
    // in the template (for template queries).

    for (var i = 0; i < localRefs.length; i += 2) {
      var index = exportsMap[localRefs[i + 1]];
      if (index == null) throw new RuntimeError("301"
      /* EXPORT_NOT_FOUND */
      , "Export of name '".concat(localRefs[i + 1], "' not found!"));
      localNames.push(localRefs[i], index);
    }
  }
}
/**
 * Builds up an export map as directives are created, so local refs can be quickly mapped
 * to their directive instances.
 */


function saveNameToExportMap(directiveIdx, def, exportsMap) {
  if (exportsMap) {
    if (def.exportAs) {
      for (var i = 0; i < def.exportAs.length; i++) {
        exportsMap[def.exportAs[i]] = directiveIdx;
      }
    }

    if (isComponentDef(def)) exportsMap[''] = directiveIdx;
  }
}
/**
 * Initializes the flags on the current node, setting all indices to the initial index,
 * the directive count to 0, and adding the isComponent flag.
 * @param index the initial index
 */


function initTNodeFlags(tNode, index, numberOfDirectives) {
  ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');
  tNode.flags |= 1
  /* isDirectiveHost */
  ; // When the first directive is created on a node, save the index

  tNode.directiveStart = index;
  tNode.directiveEnd = index + numberOfDirectives;
  tNode.providerIndexes = index;
}
/**
 * Setup directive for instantiation.
 *
 * We need to create a `NodeInjectorFactory` which is then inserted in both the `Blueprint` as well
 * as `LView`. `TView` gets the `DirectiveDef`.
 *
 * @param tView `TView`
 * @param tNode `TNode`
 * @param lView `LView`
 * @param directiveIndex Index where the directive will be stored in the Expando.
 * @param def `DirectiveDef`
 */


function configureViewWithDirective(tView, tNode, lView, directiveIndex, def) {
  ngDevMode && assertGreaterThanOrEqual(directiveIndex, HEADER_OFFSET, 'Must be in Expando section');
  tView.data[directiveIndex] = def;
  var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));
  var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);
  tView.blueprint[directiveIndex] = nodeInjectorFactory;
  lView[directiveIndex] = nodeInjectorFactory;
  registerHostBindingOpCodes(tView, tNode, lView, directiveIndex, allocExpando(tView, lView, def.hostVars, NO_CHANGE), def);
}

function addComponentLogic(lView, hostTNode, def) {
  var native = getNativeByTNode(hostTNode, lView);
  var tView = getOrCreateTComponentView(def); // Only component views should be added to the view tree directly. Embedded views are
  // accessed through their containers because they may be removed / re-added later.

  var rendererFactory = lView[RENDERER_FACTORY];
  var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64
  /* Dirty */
  : 16
  /* CheckAlways */
  , native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def), null, null)); // Component view will always be created before any injected LContainers,
  // so this is a regular element, wrap it with the component view

  lView[hostTNode.index] = componentView;
}

function elementAttributeInternal(tNode, lView, name, value, sanitizer, namespace) {
  if (ngDevMode) {
    assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');
    validateAgainstEventAttributes(name);
    assertTNodeType(tNode, 2
    /* Element */
    , "Attempted to set attribute `".concat(name, "` on a container node. ") + "Host bindings are not valid on ng-container or ng-template.");
  }

  var element = getNativeByTNode(tNode, lView);
  setElementAttribute(lView[RENDERER], element, namespace, tNode.value, name, value, sanitizer);
}

function setElementAttribute(renderer, element, namespace, tagName, name, value, sanitizer) {
  if (value == null) {
    ngDevMode && ngDevMode.rendererRemoveAttribute++;
    isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) : element.removeAttribute(name);
  } else {
    ngDevMode && ngDevMode.rendererSetAttribute++;
    var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tagName || '', name);

    if (isProceduralRenderer(renderer)) {
      renderer.setAttribute(element, name, strValue, namespace);
    } else {
      namespace ? element.setAttributeNS(namespace, name, strValue) : element.setAttribute(name, strValue);
    }
  }
}
/**
 * Sets initial input properties on directive instances from attribute data
 *
 * @param lView Current LView that is being processed.
 * @param directiveIndex Index of the directive in directives array
 * @param instance Instance of the directive on which to set the initial inputs
 * @param def The directive def that contains the list of inputs
 * @param tNode The static data for this node
 */


function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode, initialInputData) {
  var initialInputs = initialInputData[directiveIndex];

  if (initialInputs !== null) {
    var setInput = def.setInput;

    for (var i = 0; i < initialInputs.length;) {
      var publicName = initialInputs[i++];
      var privateName = initialInputs[i++];
      var value = initialInputs[i++];

      if (setInput !== null) {
        def.setInput(instance, value, publicName, privateName);
      } else {
        instance[privateName] = value;
      }

      if (ngDevMode) {
        var nativeElement = getNativeByTNode(tNode, lView);
        setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);
      }
    }
  }
}
/**
 * Generates initialInputData for a node and stores it in the template's static storage
 * so subsequent template invocations don't have to recalculate it.
 *
 * initialInputData is an array containing values that need to be set as input properties
 * for directives on this node, but only once on creation. We need this array to support
 * the case where you set an @Input property of a directive using attribute-like syntax.
 * e.g. if you have a `name` @Input, you can set it once like this:
 *
 * <my-component name="Bess"></my-component>
 *
 * @param inputs The list of inputs from the directive def
 * @param attrs The static attrs on this node
 */


function generateInitialInputs(inputs, attrs) {
  var inputsToStore = null;
  var i = 0;

  while (i < attrs.length) {
    var attrName = attrs[i];

    if (attrName === 0
    /* NamespaceURI */
    ) {
        // We do not allow inputs on namespaced attributes.
        i += 4;
        continue;
      } else if (attrName === 5
    /* ProjectAs */
    ) {
        // Skip over the `ngProjectAs` value.
        i += 2;
        continue;
      } // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.


    if (typeof attrName === 'number') break;

    if (inputs.hasOwnProperty(attrName)) {
      if (inputsToStore === null) inputsToStore = [];
      inputsToStore.push(attrName, inputs[attrName], attrs[i + 1]);
    }

    i += 2;
  }

  return inputsToStore;
} //////////////////////////
//// ViewContainer & View
//////////////////////////
// Not sure why I need to do `any` here but TS complains later.


var LContainerArray = (typeof ngDevMode === 'undefined' || ngDevMode) && /*@__PURE__*/initNgDevMode() && /*@__PURE__*/createNamedArrayType('LContainer');
/**
 * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.
 *
 * @param hostNative The host element for the LContainer
 * @param hostTNode The host TNode for the LContainer
 * @param currentView The parent view of the LContainer
 * @param native The native comment element
 * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case
 * @returns LContainer
 */

function createLContainer(hostNative, currentView, native, tNode) {
  ngDevMode && assertLView(currentView);
  ngDevMode && !isProceduralRenderer(currentView[RENDERER]) && assertDomNode(native); // https://jsperf.com/array-literal-vs-new-array-really

  var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native
  true, // Boolean `true` in this position signifies that this is an `LContainer`
  false, // has transplanted views
  currentView, // parent
  null, // next
  0, // transplanted views to refresh count
  tNode, // t_host
  native, // native,
  null, // view refs
  null);
  ngDevMode && assertEqual(lContainer.length, CONTAINER_HEADER_OFFSET, 'Should allocate correct number of slots for LContainer header.');
  ngDevMode && attachLContainerDebug(lContainer);
  return lContainer;
}
/**
 * Goes over embedded views (ones created through ViewContainerRef APIs) and refreshes
 * them by executing an associated template function.
 */


function refreshEmbeddedViews(lView) {
  for (var lContainer = getFirstLContainer(lView); lContainer !== null; lContainer = getNextLContainer(lContainer)) {
    for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {
      var embeddedLView = lContainer[i];
      var embeddedTView = embeddedLView[TVIEW];
      ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');

      if (viewAttachedToChangeDetector(embeddedLView)) {
        refreshView(embeddedTView, embeddedLView, embeddedTView.template, embeddedLView[CONTEXT]);
      }
    }
  }
}
/**
 * Mark transplanted views as needing to be refreshed at their insertion points.
 *
 * @param lView The `LView` that may have transplanted views.
 */


function markTransplantedViewsForRefresh(lView) {
  for (var lContainer = getFirstLContainer(lView); lContainer !== null; lContainer = getNextLContainer(lContainer)) {
    if (!lContainer[HAS_TRANSPLANTED_VIEWS]) continue;
    var movedViews = lContainer[MOVED_VIEWS];
    ngDevMode && assertDefined(movedViews, 'Transplanted View flags set but missing MOVED_VIEWS');

    for (var i = 0; i < movedViews.length; i++) {
      var movedLView = movedViews[i];
      var insertionLContainer = movedLView[PARENT];
      ngDevMode && assertLContainer(insertionLContainer); // We don't want to increment the counter if the moved LView was already marked for
      // refresh.

      if ((movedLView[FLAGS] & 1024
      /* RefreshTransplantedView */
      ) === 0) {
        updateTransplantedViewCount(insertionLContainer, 1);
      } // Note, it is possible that the `movedViews` is tracking views that are transplanted *and*
      // those that aren't (declaration component === insertion component). In the latter case,
      // it's fine to add the flag, as we will clear it immediately in
      // `refreshEmbeddedViews` for the view currently being refreshed.


      movedLView[FLAGS] |= 1024
      /* RefreshTransplantedView */
      ;
    }
  }
} /////////////

/**
 * Refreshes components by entering the component view and processing its bindings, queries, etc.
 *
 * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)
 */


function refreshComponent(hostLView, componentHostIdx) {
  ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');
  var componentView = getComponentLViewByIndex(componentHostIdx, hostLView); // Only attached components that are CheckAlways or OnPush and dirty should be refreshed

  if (viewAttachedToChangeDetector(componentView)) {
    var tView = componentView[TVIEW];

    if (componentView[FLAGS] & (16
    /* CheckAlways */
    | 64
    /* Dirty */
    )) {
      refreshView(tView, componentView, tView.template, componentView[CONTEXT]);
    } else if (componentView[TRANSPLANTED_VIEWS_TO_REFRESH] > 0) {
      // Only attached components that are CheckAlways or OnPush and dirty should be refreshed
      refreshContainsDirtyView(componentView);
    }
  }
}
/**
 * Refreshes all transplanted views marked with `LViewFlags.RefreshTransplantedView` that are
 * children or descendants of the given lView.
 *
 * @param lView The lView which contains descendant transplanted views that need to be refreshed.
 */


function refreshContainsDirtyView(lView) {
  for (var lContainer = getFirstLContainer(lView); lContainer !== null; lContainer = getNextLContainer(lContainer)) {
    for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {
      var embeddedLView = lContainer[i];

      if (embeddedLView[FLAGS] & 1024
      /* RefreshTransplantedView */
      ) {
          var embeddedTView = embeddedLView[TVIEW];
          ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');
          refreshView(embeddedTView, embeddedLView, embeddedTView.template, embeddedLView[CONTEXT]);
        } else if (embeddedLView[TRANSPLANTED_VIEWS_TO_REFRESH] > 0) {
        refreshContainsDirtyView(embeddedLView);
      }
    }
  }

  var tView = lView[TVIEW]; // Refresh child component views.

  var components = tView.components;

  if (components !== null) {
    for (var _i4 = 0; _i4 < components.length; _i4++) {
      var componentView = getComponentLViewByIndex(components[_i4], lView); // Only attached components that are CheckAlways or OnPush and dirty should be refreshed

      if (viewAttachedToChangeDetector(componentView) && componentView[TRANSPLANTED_VIEWS_TO_REFRESH] > 0) {
        refreshContainsDirtyView(componentView);
      }
    }
  }
}

function renderComponent(hostLView, componentHostIdx) {
  ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');
  var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);
  var componentTView = componentView[TVIEW];
  syncViewWithBlueprint(componentTView, componentView);
  renderView(componentTView, componentView, componentView[CONTEXT]);
}
/**
 * Syncs an LView instance with its blueprint if they have gotten out of sync.
 *
 * Typically, blueprints and their view instances should always be in sync, so the loop here
 * will be skipped. However, consider this case of two components side-by-side:
 *
 * App template:
 * ```
 * <comp></comp>
 * <comp></comp>
 * ```
 *
 * The following will happen:
 * 1. App template begins processing.
 * 2. First <comp> is matched as a component and its LView is created.
 * 3. Second <comp> is matched as a component and its LView is created.
 * 4. App template completes processing, so it's time to check child templates.
 * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.
 * 6. Second <comp> template is checked. Its blueprint has been updated by the first
 * <comp> template, but its LView was created before this update, so it is out of sync.
 *
 * Note that embedded views inside ngFor loops will never be out of sync because these views
 * are processed as soon as they are created.
 *
 * @param tView The `TView` that contains the blueprint for syncing
 * @param lView The view to sync
 */


function syncViewWithBlueprint(tView, lView) {
  for (var i = lView.length; i < tView.blueprint.length; i++) {
    lView.push(tView.blueprint[i]);
  }
}
/**
 * Adds LView or LContainer to the end of the current view tree.
 *
 * This structure will be used to traverse through nested views to remove listeners
 * and call onDestroy callbacks.
 *
 * @param lView The view where LView or LContainer should be added
 * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header
 * @param lViewOrLContainer The LView or LContainer to add to the view tree
 * @returns The state passed in
 */


function addToViewTree(lView, lViewOrLContainer) {
  // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer
  // to the end of the queue, which means if the developer retrieves the LContainers from RNodes out
  // of order, the change detection will run out of order, as the act of retrieving the the
  // LContainer from the RNode is what adds it to the queue.
  if (lView[CHILD_HEAD]) {
    lView[CHILD_TAIL][NEXT] = lViewOrLContainer;
  } else {
    lView[CHILD_HEAD] = lViewOrLContainer;
  }

  lView[CHILD_TAIL] = lViewOrLContainer;
  return lViewOrLContainer;
} ///////////////////////////////
//// Change detection
///////////////////////////////

/**
 * Marks current view and all ancestors dirty.
 *
 * Returns the root view because it is found as a byproduct of marking the view tree
 * dirty, and can be used by methods that consume markViewDirty() to easily schedule
 * change detection. Otherwise, such methods would need to traverse up the view tree
 * an additional time to get the root view and schedule a tick on it.
 *
 * @param lView The starting LView to mark dirty
 * @returns the root LView
 */


function markViewDirty(lView) {
  while (lView) {
    lView[FLAGS] |= 64
    /* Dirty */
    ;
    var parent = getLViewParent(lView); // Stop traversing up as soon as you find a root view that wasn't attached to any container

    if (isRootView(lView) && !parent) {
      return lView;
    } // continue otherwise


    lView = parent;
  }

  return null;
}
/**
 * Used to schedule change detection on the whole application.
 *
 * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.
 * It is usually called indirectly by calling `markDirty` when the view needs to be
 * re-rendered.
 *
 * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple
 * `scheduleTick` requests. The scheduling function can be overridden in
 * `renderComponent`'s `scheduler` option.
 */


function scheduleTick(rootContext, flags) {
  var nothingScheduled = rootContext.flags === 0
  /* Empty */
  ;

  if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {
    // https://github.com/angular/angular/issues/39296
    // should only attach the flags when really scheduling a tick
    rootContext.flags |= flags;
    var res;
    rootContext.clean = new Promise(function (r) {
      return res = r;
    });
    rootContext.scheduler(function () {
      if (rootContext.flags & 1
      /* DetectChanges */
      ) {
          rootContext.flags &= ~1
          /* DetectChanges */
          ;
          tickRootContext(rootContext);
        }

      if (rootContext.flags & 2
      /* FlushPlayers */
      ) {
          rootContext.flags &= ~2
          /* FlushPlayers */
          ;
          var playerHandler = rootContext.playerHandler;

          if (playerHandler) {
            playerHandler.flushPlayers();
          }
        }

      rootContext.clean = _CLEAN_PROMISE;
      res(null);
    });
  }
}

function tickRootContext(rootContext) {
  for (var i = 0; i < rootContext.components.length; i++) {
    var rootComponent = rootContext.components[i];
    var lView = readPatchedLView(rootComponent);
    var tView = lView[TVIEW];
    renderComponentOrTemplate(tView, lView, tView.template, rootComponent);
  }
}

function detectChangesInternal(tView, lView, context) {
  var rendererFactory = lView[RENDERER_FACTORY];
  if (rendererFactory.begin) rendererFactory.begin();

  try {
    refreshView(tView, lView, tView.template, context);
  } catch (error) {
    handleError(lView, error);
    throw error;
  } finally {
    if (rendererFactory.end) rendererFactory.end();
  }
}
/**
 * Synchronously perform change detection on a root view and its components.
 *
 * @param lView The view which the change detection should be performed on.
 */


function detectChangesInRootView(lView) {
  tickRootContext(lView[CONTEXT]);
}

function checkNoChangesInternal(tView, view, context) {
  setIsInCheckNoChangesMode(true);

  try {
    detectChangesInternal(tView, view, context);
  } finally {
    setIsInCheckNoChangesMode(false);
  }
}
/**
 * Checks the change detector on a root view and its components, and throws if any changes are
 * detected.
 *
 * This is used in development mode to verify that running change detection doesn't
 * introduce other changes.
 *
 * @param lView The view which the change detection should be checked on.
 */


function checkNoChangesInRootView(lView) {
  setIsInCheckNoChangesMode(true);

  try {
    detectChangesInRootView(lView);
  } finally {
    setIsInCheckNoChangesMode(false);
  }
}

function executeViewQueryFn(flags, viewQueryFn, component) {
  ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');
  setCurrentQueryIndex(0);
  viewQueryFn(flags, component);
} ///////////////////////////////
//// Bindings & interpolations
///////////////////////////////

/**
 * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.
 *
 * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:
 * - a bound property name;
 * - a static parts of interpolated strings;
 *
 * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a
 * property binding metadata will be stored in `TView.data` at the same index as a bound value in
 * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the
 * following format:
 * - `propertyName` for bound properties;
 * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for
 * interpolated properties.
 *
 * @param tData `TData` where meta-data will be saved;
 * @param tNode `TNode` that is a target of the binding;
 * @param propertyName bound property name;
 * @param bindingIndex binding index in `LView`
 * @param interpolationParts static interpolation parts (for property interpolations)
 */


function storePropertyBindingMetadata(tData, tNode, propertyName, bindingIndex) {
  // Binding meta-data are stored only the first time a given property instruction is processed.
  // Since we don't have a concept of the "first update pass" we need to check for presence of the
  // binding meta-data to decide if one should be stored (or if was stored already).
  if (tData[bindingIndex] === null) {
    if (tNode.inputs == null || !tNode.inputs[propertyName]) {
      var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);
      propBindingIdxs.push(bindingIndex);
      var bindingMetadata = propertyName;

      for (var _len10 = arguments.length, interpolationParts = new Array(_len10 > 4 ? _len10 - 4 : 0), _key10 = 4; _key10 < _len10; _key10++) {
        interpolationParts[_key10 - 4] = arguments[_key10];
      }

      if (interpolationParts.length > 0) {
        bindingMetadata += INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);
      }

      tData[bindingIndex] = bindingMetadata;
    }
  }
}

var CLEAN_PROMISE = _CLEAN_PROMISE;

function getLCleanup(view) {
  // top level variables should not be exported for performance reasons (PERF_NOTES.md)
  return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);
}

function getTViewCleanup(tView) {
  return tView.cleanup || (tView.cleanup = ngDevMode ? new TCleanup() : []);
}
/**
 * There are cases where the sub component's renderer needs to be included
 * instead of the current renderer (see the componentSyntheticHost* instructions).
 */


function loadComponentRenderer(currentDef, tNode, lView) {
  // TODO(FW-2043): the `currentDef` is null when host bindings are invoked while creating root
  // component (see packages/core/src/render3/component.ts). This is not consistent with the process
  // of creating inner components, when current directive index is available in the state. In order
  // to avoid relying on current def being `null` (thus special-casing root component creation), the
  // process of creating root component should be unified with the process of creating inner
  // components.
  if (currentDef === null || isComponentDef(currentDef)) {
    lView = unwrapLView(lView[tNode.index]);
  }

  return lView[RENDERER];
}
/** Handles an error thrown in an LView. */


function handleError(lView, error) {
  var injector = lView[INJECTOR];
  var errorHandler = injector ? injector.get(ErrorHandler, null) : null;
  errorHandler && errorHandler.handleError(error);
}
/**
 * Set the inputs of directives at the current node to corresponding value.
 *
 * @param tView The current TView
 * @param lView the `LView` which contains the directives.
 * @param inputs mapping between the public "input" name and privately-known,
 *        possibly minified, property names to write to.
 * @param value Value to set.
 */


function setInputsForProperty(tView, lView, inputs, publicName, value) {
  for (var i = 0; i < inputs.length;) {
    var index = inputs[i++];
    var privateName = inputs[i++];
    var instance = lView[index];
    ngDevMode && assertIndexInRange(lView, index);
    var def = tView.data[index];

    if (def.setInput !== null) {
      def.setInput(instance, value, publicName, privateName);
    } else {
      instance[privateName] = value;
    }
  }
}
/**
 * Updates a text binding at a given index in a given LView.
 */


function textBindingInternal(lView, index, value) {
  ngDevMode && assertString(value, 'Value should be a string');
  ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');
  ngDevMode && assertIndexInRange(lView, index);
  var element = getNativeByIndex(index, lView);
  ngDevMode && assertDefined(element, 'native element should exist');
  updateTextNode(lView[RENDERER], element, value);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Compute the static styling (class/style) from `TAttributes`.
 *
 * This function should be called during `firstCreatePass` only.
 *
 * @param tNode The `TNode` into which the styling information should be loaded.
 * @param attrs `TAttributes` containing the styling information.
 * @param writeToHost Where should the resulting static styles be written?
 *   - `false` Write to `TNode.stylesWithoutHost` / `TNode.classesWithoutHost`
 *   - `true` Write to `TNode.styles` / `TNode.classes`
 */


function computeStaticStyling(tNode, attrs, writeToHost) {
  ngDevMode && assertFirstCreatePass(getTView(), 'Expecting to be called in first template pass only');
  var styles = writeToHost ? tNode.styles : null;
  var classes = writeToHost ? tNode.classes : null;
  var mode = 0;

  if (attrs !== null) {
    for (var i = 0; i < attrs.length; i++) {
      var value = attrs[i];

      if (typeof value === 'number') {
        mode = value;
      } else if (mode == 1
      /* Classes */
      ) {
          classes = concatStringsWithSpace(classes, value);
        } else if (mode == 2
      /* Styles */
      ) {
          var style = value;
          var styleValue = attrs[++i];
          styles = concatStringsWithSpace(styles, style + ': ' + styleValue + ';');
        }
    }
  }

  writeToHost ? tNode.styles = styles : tNode.stylesWithoutHost = styles;
  writeToHost ? tNode.classes = classes : tNode.classesWithoutHost = classes;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Synchronously perform change detection on a component (and possibly its sub-components).
 *
 * This function triggers change detection in a synchronous way on a component.
 *
 * @param component The component which the change detection should be performed on.
 */


function detectChanges(component) {
  var view = getComponentViewByInstance(component);
  detectChangesInternal(view[TVIEW], view, component);
}
/**
 * Marks the component as dirty (needing change detection). Marking a component dirty will
 * schedule a change detection on it at some point in the future.
 *
 * Marking an already dirty component as dirty won't do anything. Only one outstanding change
 * detection can be scheduled per component tree.
 *
 * @param component Component to mark as dirty.
 */


function markDirty(component) {
  ngDevMode && assertDefined(component, 'component');
  var rootView = markViewDirty(getComponentViewByInstance(component));
  ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');
  scheduleTick(rootView[CONTEXT], 1
  /* DetectChanges */
  );
}
/**
 * Used to perform change detection on the whole application.
 *
 * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`
 * executes lifecycle hooks and conditionally checks components based on their
 * `ChangeDetectionStrategy` and dirtiness.
 *
 * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally
 * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a
 * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can
 * be changed when calling `renderComponent` and providing the `scheduler` option.
 */


function tick(component) {
  var rootView = getRootView(component);
  var rootContext = rootView[CONTEXT];
  tickRootContext(rootContext);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.
 *
 * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a
 * project.
 *
 * @publicApi
 */


var INJECTOR$1 = /*@__PURE__*/new InjectionToken('INJECTOR', // Dissable tslint because this is const enum which gets inlined not top level prop access.
// tslint:disable-next-line: no-toplevel-property-access
-1
/* Injector */
);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var NullInjector = /*#__PURE__*/function () {
  function NullInjector() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, NullInjector);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(NullInjector, [{
    key: "get",
    value: function get(token) {
      var notFoundValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : THROW_IF_NOT_FOUND;

      if (notFoundValue === THROW_IF_NOT_FOUND) {
        var error = new Error("NullInjectorError: No provider for ".concat(stringify(token), "!"));
        error.name = 'NullInjectorError';
        throw error;
      }

      return notFoundValue;
    }
  }]);

  return NullInjector;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * An internal token whose presence in an injector indicates that the injector should treat itself
 * as a root scoped injector when processing requests for unknown tokens which may indicate
 * they are provided in the root scope.
 */


var INJECTOR_SCOPE = /*@__PURE__*/new InjectionToken('Set Injector scope.');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Marker which indicates that a value has not yet been created from the factory function.
 */

var NOT_YET = {};
/**
 * Marker which indicates that the factory function for a token is in the process of being called.
 *
 * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates
 * injection of a dependency has recursively attempted to inject the original token, and there is
 * a circular dependency among the providers.
 */

var CIRCULAR = {};
var EMPTY_ARRAY$1 = [];
/**
 * A lazily initialized NullInjector.
 */

var NULL_INJECTOR = undefined;

function getNullInjector() {
  if (NULL_INJECTOR === undefined) {
    NULL_INJECTOR = new NullInjector();
  }

  return NULL_INJECTOR;
}
/**
 * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.
 *
 * @publicApi
 */


function createInjector(defType) {
  var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var additionalProviders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var name = arguments.length > 3 ? arguments[3] : undefined;
  var injector = createInjectorWithoutInjectorInstances(defType, parent, additionalProviders, name);

  injector._resolveInjectorDefTypes();

  return injector;
}
/**
 * Creates a new injector without eagerly resolving its injector types. Can be used in places
 * where resolving the injector types immediately can lead to an infinite loop. The injector types
 * should be resolved at a later point by calling `_resolveInjectorDefTypes`.
 */


function createInjectorWithoutInjectorInstances(defType) {
  var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var additionalProviders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var name = arguments.length > 3 ? arguments[3] : undefined;
  return new R3Injector(defType, additionalProviders, parent || getNullInjector(), name);
}

var R3Injector = /*#__PURE__*/function () {
  function R3Injector(def, additionalProviders, parent) {
    var _this2 = this;

    var source = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, R3Injector);

    this.parent = parent;
    /**
     * Map of tokens to records which contain the instances of those tokens.
     * - `null` value implies that we don't have the record. Used by tree-shakable injectors
     * to prevent further searches.
     */

    this.records = new Map();
    /**
     * The transitive set of `InjectorType`s which define this injector.
     */

    this.injectorDefTypes = new Set();
    /**
     * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.
     */

    this.onDestroy = new Set();
    this._destroyed = false;
    var dedupStack = []; // Start off by creating Records for every provider declared in every InjectorType
    // included transitively in additional providers then do the same for `def`. This order is
    // important because `def` may include providers that override ones in additionalProviders.

    additionalProviders && deepForEach(additionalProviders, function (provider) {
      return _this2.processProvider(provider, def, additionalProviders);
    });
    deepForEach([def], function (injectorDef) {
      return _this2.processInjectorType(injectorDef, [], dedupStack);
    }); // Make sure the INJECTOR token provides this injector.

    this.records.set(INJECTOR$1, makeRecord(undefined, this)); // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide
    // any injectable scoped to APP_ROOT_SCOPE.

    var record = this.records.get(INJECTOR_SCOPE);
    this.scope = record != null ? record.value : null; // Source name, used for debugging

    this.source = source || (typeof def === 'object' ? null : stringify(def));
  }
  /**
   * Flag indicating that this injector was previously destroyed.
   */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(R3Injector, [{
    key: "destroy",

    /**
     * Destroy the injector and release references to every instance or provider associated with it.
     *
     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a
     * hook was found.
     */
    value: function destroy() {
      this.assertNotDestroyed(); // Set destroyed = true first, in case lifecycle hooks re-enter destroy().

      this._destroyed = true;

      try {
        // Call all the lifecycle hooks.
        this.onDestroy.forEach(function (service) {
          return service.ngOnDestroy();
        });
      } finally {
        // Release all references.
        this.records.clear();
        this.onDestroy.clear();
        this.injectorDefTypes.clear();
      }
    }
  }, {
    key: "get",
    value: function get(token) {
      var notFoundValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : THROW_IF_NOT_FOUND;
      var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : InjectFlags.Default;
      this.assertNotDestroyed(); // Set the injection context.

      var previousInjector = setCurrentInjector(this);

      try {
        // Check for the SkipSelf flag.
        if (!(flags & InjectFlags.SkipSelf)) {
          // SkipSelf isn't set, check if the record belongs to this injector.
          var record = this.records.get(token);

          if (record === undefined) {
            // No record, but maybe the token is scoped to this injector. Look for an injectable
            // def with a scope matching this injector.
            var def = couldBeInjectableType(token) && getInjectableDef(token);

            if (def && this.injectableDefInScope(def)) {
              // Found an injectable def and it's scoped to this injector. Pretend as if it was here
              // all along.
              record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);
            } else {
              record = null;
            }

            this.records.set(token, record);
          } // If a record was found, get the instance for it and return it.


          if (record != null
          /* NOT null || undefined */
          ) {
              return this.hydrate(token, record);
            }
        } // Select the next injector based on the Self flag - if self is set, the next injector is
        // the NullInjector, otherwise it's the parent.


        var nextInjector = !(flags & InjectFlags.Self) ? this.parent : getNullInjector(); // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue
        // is undefined, the value is null, otherwise it's the notFoundValue.

        notFoundValue = flags & InjectFlags.Optional && notFoundValue === THROW_IF_NOT_FOUND ? null : notFoundValue;
        return nextInjector.get(token, notFoundValue);
      } catch (e) {
        if (e.name === 'NullInjectorError') {
          var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];
          path.unshift(stringify(token));

          if (previousInjector) {
            // We still have a parent injector, keep throwing
            throw e;
          } else {
            // Format & throw the final error message when we don't have any previous injector
            return catchInjectorError(e, token, 'R3InjectorError', this.source);
          }
        } else {
          throw e;
        }
      } finally {
        // Lastly, clean up the state by restoring the previous injector.
        setCurrentInjector(previousInjector);
      }
    }
    /** @internal */

  }, {
    key: "_resolveInjectorDefTypes",
    value: function _resolveInjectorDefTypes() {
      var _this3 = this;

      this.injectorDefTypes.forEach(function (defType) {
        return _this3.get(defType);
      });
    }
  }, {
    key: "toString",
    value: function toString() {
      var tokens = [],
          records = this.records;
      records.forEach(function (v, token) {
        return tokens.push(stringify(token));
      });
      return "R3Injector[".concat(tokens.join(', '), "]");
    }
  }, {
    key: "assertNotDestroyed",
    value: function assertNotDestroyed() {
      if (this._destroyed) {
        throw new Error('Injector has already been destroyed.');
      }
    }
    /**
     * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers
     * to this injector.
     *
     * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,
     * the function will return "true" to indicate that the providers of the type definition need
     * to be processed. This allows us to process providers of injector types after all imports of
     * an injector definition are processed. (following View Engine semantics: see FW-1349)
     */

  }, {
    key: "processInjectorType",
    value: function processInjectorType(defOrWrappedDef, parents, dedupStack) {
      var _this4 = this;

      defOrWrappedDef = resolveForwardRef(defOrWrappedDef);
      if (!defOrWrappedDef) return false; // Either the defOrWrappedDef is an InjectorType (with injector def) or an
      // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic
      // read, so care is taken to only do the read once.
      // First attempt to read the injector def (`ɵinj`).

      var def = getInjectorDef(defOrWrappedDef); // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.

      var ngModule = def == null && defOrWrappedDef.ngModule || undefined; // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,
      // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type
      // is the `ngModule`.

      var defType = ngModule === undefined ? defOrWrappedDef : ngModule; // Check for circular dependencies.

      if (ngDevMode && parents.indexOf(defType) !== -1) {
        var defName = stringify(defType);
        var path = parents.map(stringify);
        throwCyclicDependencyError(defName, path);
      } // Check for multiple imports of the same module


      var isDuplicate = dedupStack.indexOf(defType) !== -1; // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual
      // `InjectorDef` is on its `ngModule`.

      if (ngModule !== undefined) {
        def = getInjectorDef(ngModule);
      } // If no definition was found, it might be from exports. Remove it.


      if (def == null) {
        return false;
      } // Add providers in the same way that @NgModule resolution did:
      // First, include providers from any imports.


      if (def.imports != null && !isDuplicate) {
        // Before processing defType's imports, add it to the set of parents. This way, if it ends
        // up deeply importing itself, this can be detected.
        ngDevMode && parents.push(defType); // Add it to the set of dedups. This way we can detect multiple imports of the same module

        dedupStack.push(defType);
        var importTypesWithProviders;

        try {
          deepForEach(def.imports, function (imported) {
            if (_this4.processInjectorType(imported, parents, dedupStack)) {
              if (importTypesWithProviders === undefined) importTypesWithProviders = []; // If the processed import is an injector type with providers, we store it in the
              // list of import types with providers, so that we can process those afterwards.

              importTypesWithProviders.push(imported);
            }
          });
        } finally {
          // Remove it from the parents set when finished.
          ngDevMode && parents.pop();
        } // Imports which are declared with providers (TypeWithProviders) need to be processed
        // after all imported modules are processed. This is similar to how View Engine
        // processes/merges module imports in the metadata resolver. See: FW-1349.


        if (importTypesWithProviders !== undefined) {
          var _loop = function _loop(i) {
            var _importTypesWithProvi = importTypesWithProviders[i],
                ngModule = _importTypesWithProvi.ngModule,
                providers = _importTypesWithProvi.providers;
            deepForEach(providers, function (provider) {
              return _this4.processProvider(provider, ngModule, providers || EMPTY_ARRAY$1);
            });
          };

          for (var i = 0; i < importTypesWithProviders.length; i++) {
            _loop(i);
          }
        }
      } // Track the InjectorType and add a provider for it. It's important that this is done after the
      // def's imports.


      this.injectorDefTypes.add(defType);
      this.records.set(defType, makeRecord(def.factory, NOT_YET)); // Next, include providers listed on the definition itself.

      var defProviders = def.providers;

      if (defProviders != null && !isDuplicate) {
        var injectorType = defOrWrappedDef;
        deepForEach(defProviders, function (provider) {
          return _this4.processProvider(provider, injectorType, defProviders);
        });
      }

      return ngModule !== undefined && defOrWrappedDef.providers !== undefined;
    }
    /**
     * Process a `SingleProvider` and add it.
     */

  }, {
    key: "processProvider",
    value: function processProvider(provider, ngModuleType, providers) {
      // Determine the token from the provider. Either it's its own token, or has a {provide: ...}
      // property.
      provider = resolveForwardRef(provider);
      var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide); // Construct a `Record` for the provider.

      var record = providerToRecord(provider, ngModuleType, providers);

      if (!isTypeProvider(provider) && provider.multi === true) {
        // If the provider indicates that it's a multi-provider, process it specially.
        // First check whether it's been defined already.
        var multiRecord = this.records.get(token);

        if (multiRecord) {
          // It has. Throw a nice error if
          if (ngDevMode && multiRecord.multi === undefined) {
            throwMixedMultiProviderError();
          }
        } else {
          multiRecord = makeRecord(undefined, NOT_YET, true);

          multiRecord.factory = function () {
            return injectArgs(multiRecord.multi);
          };

          this.records.set(token, multiRecord);
        }

        token = provider;
        multiRecord.multi.push(provider);
      } else {
        var existing = this.records.get(token);

        if (ngDevMode && existing && existing.multi !== undefined) {
          throwMixedMultiProviderError();
        }
      }

      this.records.set(token, record);
    }
  }, {
    key: "hydrate",
    value: function hydrate(token, record) {
      if (ngDevMode && record.value === CIRCULAR) {
        throwCyclicDependencyError(stringify(token));
      } else if (record.value === NOT_YET) {
        record.value = CIRCULAR;
        record.value = record.factory();
      }

      if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {
        this.onDestroy.add(record.value);
      }

      return record.value;
    }
  }, {
    key: "injectableDefInScope",
    value: function injectableDefInScope(def) {
      if (!def.providedIn) {
        return false;
      } else if (typeof def.providedIn === 'string') {
        return def.providedIn === 'any' || def.providedIn === this.scope;
      } else {
        return this.injectorDefTypes.has(def.providedIn);
      }
    }
  }, {
    key: "destroyed",
    get: function get() {
      return this._destroyed;
    }
  }]);

  return R3Injector;
}();

function injectableDefOrInjectorDefFactory(token) {
  // Most tokens will have an injectable def directly on them, which specifies a factory directly.
  var injectableDef = getInjectableDef(token);
  var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);

  if (factory !== null) {
    return factory;
  } // If the token is an NgModule, it's also injectable but the factory is on its injector def
  // (`ɵinj`)


  var injectorDef = getInjectorDef(token);

  if (injectorDef !== null) {
    return injectorDef.factory;
  } // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.
  // If it's missing that, it's an error.


  if (token instanceof InjectionToken) {
    throw new Error("Token ".concat(stringify(token), " is missing a \u0275prov definition."));
  } // Undecorated types can sometimes be created if they have no constructor arguments.


  if (token instanceof Function) {
    return getUndecoratedInjectableFactory(token);
  } // There was no way to resolve a factory for this token.


  throw new Error('unreachable');
}

function getUndecoratedInjectableFactory(token) {
  // If the token has parameters then it has dependencies that we cannot resolve implicitly.
  var paramLength = token.length;

  if (paramLength > 0) {
    var args = newArray(paramLength, '?');
    throw new Error("Can't resolve all parameters for ".concat(stringify(token), ": (").concat(args.join(', '), ")."));
  } // The constructor function appears to have no parameters.
  // This might be because it inherits from a super-class. In which case, use an injectable
  // def from an ancestor if there is one.
  // Otherwise this really is a simple class with no dependencies, so return a factory that
  // just instantiates the zero-arg constructor.


  var inheritedInjectableDef = getInheritedInjectableDef(token);

  if (inheritedInjectableDef !== null) {
    return function () {
      return inheritedInjectableDef.factory(token);
    };
  } else {
    return function () {
      return new token();
    };
  }
}

function providerToRecord(provider, ngModuleType, providers) {
  if (isValueProvider(provider)) {
    return makeRecord(undefined, provider.useValue);
  } else {
    var factory = providerToFactory(provider, ngModuleType, providers);
    return makeRecord(factory, NOT_YET);
  }
}
/**
 * Converts a `SingleProvider` into a factory function.
 *
 * @param provider provider to convert to factory
 */


function providerToFactory(provider, ngModuleType, providers) {
  var factory = undefined;

  if (isTypeProvider(provider)) {
    var unwrappedProvider = resolveForwardRef(provider);
    return getFactoryDef(unwrappedProvider) || injectableDefOrInjectorDefFactory(unwrappedProvider);
  } else {
    if (isValueProvider(provider)) {
      factory = function factory() {
        return resolveForwardRef(provider.useValue);
      };
    } else if (isFactoryProvider(provider)) {
      factory = function factory() {
        return provider.useFactory.apply(provider, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(injectArgs(provider.deps || [])));
      };
    } else if (isExistingProvider(provider)) {
      factory = function factory() {
        return ɵɵinject(resolveForwardRef(provider.useExisting));
      };
    } else {
      var classRef = resolveForwardRef(provider && (provider.useClass || provider.provide));

      if (ngDevMode && !classRef) {
        throwInvalidProviderError(ngModuleType, providers, provider);
      }

      if (hasDeps(provider)) {
        factory = function factory() {
          return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_13__["default"])(classRef, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(injectArgs(provider.deps)));
        };
      } else {
        return getFactoryDef(classRef) || injectableDefOrInjectorDefFactory(classRef);
      }
    }
  }

  return factory;
}

function makeRecord(factory, value) {
  var multi = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  return {
    factory: factory,
    value: value,
    multi: multi ? [] : undefined
  };
}

function isValueProvider(value) {
  return value !== null && typeof value == 'object' && USE_VALUE in value;
}

function isExistingProvider(value) {
  return !!(value && value.useExisting);
}

function isFactoryProvider(value) {
  return !!(value && value.useFactory);
}

function isTypeProvider(value) {
  return typeof value === 'function';
}

function isClassProvider(value) {
  return !!value.useClass;
}

function hasDeps(value) {
  return !!value.deps;
}

function hasOnDestroy(value) {
  return value !== null && typeof value === 'object' && typeof value.ngOnDestroy === 'function';
}

function couldBeInjectableType(value) {
  return typeof value === 'function' || typeof value === 'object' && value instanceof InjectionToken;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {
  return new StaticInjector(providers, parent, name);
}

function INJECTOR_IMPL__POST_R3__(providers, parent, name) {
  return createInjector({
    name: name
  }, parent, providers, name);
}

var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;

var Injector = /*@__PURE__*/function () {
  var Injector = /*#__PURE__*/function () {
    function Injector() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, Injector);
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(Injector, null, [{
      key: "create",
      value: function create(options, parent) {
        if (Array.isArray(options)) {
          return INJECTOR_IMPL(options, parent, '');
        } else {
          return INJECTOR_IMPL(options.providers, options.parent, options.name || '');
        }
      }
    }]);

    return Injector;
  }();

  Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;
  Injector.NULL = /*@__PURE__*/new NullInjector();
  /** @nocollapse */

  Injector.ɵprov = /*@__PURE__*/ɵɵdefineInjectable({
    token: Injector,
    providedIn: 'any',
    factory: function factory() {
      return ɵɵinject(INJECTOR$1);
    }
  });
  /**
   * @internal
   * @nocollapse
   */

  Injector.__NG_ELEMENT_ID__ = -1
  /* Injector */
  ;
  return Injector;
}();

var IDENT = function IDENT(value) {
  return value;
};

var ɵ0$6 = IDENT;
var EMPTY = [];
var CIRCULAR$1 = IDENT;

var MULTI_PROVIDER_FN = function MULTI_PROVIDER_FN() {
  return Array.prototype.slice.call(arguments);
};

var ɵ1$2 = MULTI_PROVIDER_FN;
var NO_NEW_LINE$1 = 'ɵ';

var StaticInjector = /*#__PURE__*/function () {
  function StaticInjector(providers) {
    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Injector.NULL;
    var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, StaticInjector);

    this.parent = parent;
    this.source = source;
    var records = this._records = new Map();
    records.set(Injector, {
      token: Injector,
      fn: IDENT,
      deps: EMPTY,
      value: this,
      useNew: false
    });
    records.set(INJECTOR$1, {
      token: INJECTOR$1,
      fn: IDENT,
      deps: EMPTY,
      value: this,
      useNew: false
    });
    this.scope = recursivelyProcessProviders(records, providers);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(StaticInjector, [{
    key: "get",
    value: function get(token, notFoundValue) {
      var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : InjectFlags.Default;
      var records = this._records;
      var record = records.get(token);

      if (record === undefined) {
        // This means we have never seen this record, see if it is tree shakable provider.
        var injectableDef = getInjectableDef(token);

        if (injectableDef) {
          var providedIn = injectableDef && injectableDef.providedIn;

          if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {
            records.set(token, record = resolveProvider({
              provide: token,
              useFactory: injectableDef.factory,
              deps: EMPTY
            }));
          }
        }

        if (record === undefined) {
          // Set record to null to make sure that we don't go through expensive lookup above again.
          records.set(token, null);
        }
      }

      var lastInjector = setCurrentInjector(this);

      try {
        return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);
      } catch (e) {
        return catchInjectorError(e, token, 'StaticInjectorError', this.source);
      } finally {
        setCurrentInjector(lastInjector);
      }
    }
  }, {
    key: "toString",
    value: function toString() {
      var tokens = [],
          records = this._records;
      records.forEach(function (v, token) {
        return tokens.push(stringify(token));
      });
      return "StaticInjector[".concat(tokens.join(', '), "]");
    }
  }]);

  return StaticInjector;
}();

function resolveProvider(provider) {
  var deps = computeDeps(provider);
  var fn = IDENT;
  var value = EMPTY;
  var useNew = false;
  var provide = resolveForwardRef(provider.provide);

  if (USE_VALUE in provider) {
    // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.
    value = provider.useValue;
  } else if (provider.useFactory) {
    fn = provider.useFactory;
  } else if (provider.useExisting) {// Just use IDENT
  } else if (provider.useClass) {
    useNew = true;
    fn = resolveForwardRef(provider.useClass);
  } else if (typeof provide == 'function') {
    useNew = true;
    fn = provide;
  } else {
    throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);
  }

  return {
    deps: deps,
    fn: fn,
    useNew: useNew,
    value: value
  };
}

function multiProviderMixError(token) {
  return staticError('Cannot mix multi providers and regular providers', token);
}

function recursivelyProcessProviders(records, provider) {
  var scope = null;

  if (provider) {
    provider = resolveForwardRef(provider);

    if (Array.isArray(provider)) {
      // if we have an array recurse into the array
      for (var i = 0; i < provider.length; i++) {
        scope = recursivelyProcessProviders(records, provider[i]) || scope;
      }
    } else if (typeof provider === 'function') {
      // Functions were supported in ReflectiveInjector, but are not here. For safety give useful
      // error messages
      throw staticError('Function/Class not supported', provider);
    } else if (provider && typeof provider === 'object' && provider.provide) {
      // At this point we have what looks like a provider: {provide: ?, ....}
      var token = resolveForwardRef(provider.provide);
      var resolvedProvider = resolveProvider(provider);

      if (provider.multi === true) {
        // This is a multi provider.
        var multiProvider = records.get(token);

        if (multiProvider) {
          if (multiProvider.fn !== MULTI_PROVIDER_FN) {
            throw multiProviderMixError(token);
          }
        } else {
          // Create a placeholder factory which will look up the constituents of the multi provider.
          records.set(token, multiProvider = {
            token: provider.provide,
            deps: [],
            useNew: false,
            fn: MULTI_PROVIDER_FN,
            value: EMPTY
          });
        } // Treat the provider as the token.


        token = provider;
        multiProvider.deps.push({
          token: token,
          options: 6
          /* Default */

        });
      }

      var record = records.get(token);

      if (record && record.fn == MULTI_PROVIDER_FN) {
        throw multiProviderMixError(token);
      }

      if (token === INJECTOR_SCOPE) {
        scope = resolvedProvider.value;
      }

      records.set(token, resolvedProvider);
    } else {
      throw staticError('Unexpected provider', provider);
    }
  }

  return scope;
}

function tryResolveToken(token, record, records, parent, notFoundValue, flags) {
  try {
    return resolveToken(token, record, records, parent, notFoundValue, flags);
  } catch (e) {
    // ensure that 'e' is of type Error.
    if (!(e instanceof Error)) {
      e = new Error(e);
    }

    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];
    path.unshift(token);

    if (record && record.value == CIRCULAR$1) {
      // Reset the Circular flag.
      record.value = EMPTY;
    }

    throw e;
  }
}

function resolveToken(token, record, records, parent, notFoundValue, flags) {
  var value;

  if (record && !(flags & InjectFlags.SkipSelf)) {
    // If we don't have a record, this implies that we don't own the provider hence don't know how
    // to resolve it.
    value = record.value;

    if (value == CIRCULAR$1) {
      throw Error(NO_NEW_LINE$1 + 'Circular dependency');
    } else if (value === EMPTY) {
      record.value = CIRCULAR$1;
      var obj = undefined;
      var useNew = record.useNew;
      var fn = record.fn;
      var depRecords = record.deps;
      var deps = EMPTY;

      if (depRecords.length) {
        deps = [];

        for (var i = 0; i < depRecords.length; i++) {
          var depRecord = depRecords[i];
          var options = depRecord.options;
          var childRecord = options & 2
          /* CheckSelf */
          ? records.get(depRecord.token) : undefined;
          deps.push(tryResolveToken( // Current Token to resolve
          depRecord.token, // A record which describes how to resolve the token.
          // If undefined, this means we don't have such a record
          childRecord, // Other records we know about.
          records, // If we don't know how to resolve dependency and we should not check parent for it,
          // than pass in Null injector.
          !childRecord && !(options & 4
          /* CheckParent */
          ) ? Injector.NULL : parent, options & 1
          /* Optional */
          ? null : Injector.THROW_IF_NOT_FOUND, InjectFlags.Default));
        }
      }

      record.value = value = useNew ? Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_13__["default"])(fn, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(deps)) : fn.apply(obj, deps);
    }
  } else if (!(flags & InjectFlags.Self)) {
    value = parent.get(token, notFoundValue, InjectFlags.Default);
  } else if (!(flags & InjectFlags.Optional)) {
    value = Injector.NULL.get(token, notFoundValue);
  } else {
    value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);
  }

  return value;
}

function computeDeps(provider) {
  var deps = EMPTY;
  var providerDeps = provider.deps;

  if (providerDeps && providerDeps.length) {
    deps = [];

    for (var i = 0; i < providerDeps.length; i++) {
      var options = 6
      /* Default */
      ;
      var token = resolveForwardRef(providerDeps[i]);

      if (Array.isArray(token)) {
        for (var j = 0, annotations = token; j < annotations.length; j++) {
          var annotation = annotations[j];

          if (annotation instanceof Optional || annotation == Optional) {
            options = options | 1
            /* Optional */
            ;
          } else if (annotation instanceof SkipSelf || annotation == SkipSelf) {
            options = options & ~2
            /* CheckSelf */
            ;
          } else if (annotation instanceof Self || annotation == Self) {
            options = options & ~4
            /* CheckParent */
            ;
          } else if (annotation instanceof Inject) {
            token = annotation.token;
          } else {
            token = resolveForwardRef(annotation);
          }
        }
      }

      deps.push({
        token: token,
        options: options
      });
    }
  } else if (provider.useExisting) {
    var _token = resolveForwardRef(provider.useExisting);

    deps = [{
      token: _token,
      options: 6
      /* Default */

    }];
  } else if (!providerDeps && !(USE_VALUE in provider)) {
    // useValue & useExisting are the only ones which are exempt from deps all others need it.
    throw staticError('\'deps\' required', provider);
  }

  return deps;
}

function staticError(text, obj) {
  return new Error(formatError(text, obj, 'StaticInjectorError'));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Retrieves the component instance associated with a given DOM element.
 *
 * @usageNotes
 * Given the following DOM structure:
 * ```html
 * <my-app>
 *   <div>
 *     <child-comp></child-comp>
 *   </div>
 * </my-app>
 * ```
 * Calling `getComponent` on `<child-comp>` will return the instance of `ChildComponent`
 * associated with this DOM element.
 *
 * Calling the function on `<my-app>` will return the `MyApp` instance.
 *
 *
 * @param element DOM element from which the component should be retrieved.
 * @returns Component instance associated with the element or `null` if there
 *    is no component associated with it.
 *
 * @publicApi
 * @globalApi ng
 */


function getComponent(element) {
  assertDomElement(element);
  var context = loadLContext(element, false);
  if (context === null) return null;

  if (context.component === undefined) {
    context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);
  }

  return context.component;
}
/**
 * If inside an embedded view (e.g. `*ngIf` or `*ngFor`), retrieves the context of the embedded
 * view that the element is part of. Otherwise retrieves the instance of the component whose view
 * owns the element (in this case, the result is the same as calling `getOwningComponent`).
 *
 * @param element Element for which to get the surrounding component instance.
 * @returns Instance of the component that is around the element or null if the element isn't
 *    inside any component.
 *
 * @publicApi
 * @globalApi ng
 */


function getContext(element) {
  assertDomElement(element);
  var context = loadLContext(element, false);
  return context === null ? null : context.lView[CONTEXT];
}
/**
 * Retrieves the component instance whose view contains the DOM element.
 *
 * For example, if `<child-comp>` is used in the template of `<app-comp>`
 * (i.e. a `ViewChild` of `<app-comp>`), calling `getOwningComponent` on `<child-comp>`
 * would return `<app-comp>`.
 *
 * @param elementOrDir DOM element, component or directive instance
 *    for which to retrieve the root components.
 * @returns Component instance whose view owns the DOM element or null if the element is not
 *    part of a component view.
 *
 * @publicApi
 * @globalApi ng
 */


function getOwningComponent(elementOrDir) {
  var context = loadLContext(elementOrDir, false);
  if (context === null) return null;
  var lView = context.lView;
  var parent;
  ngDevMode && assertLView(lView);

  while (lView[TVIEW].type === 2
  /* Embedded */
  && (parent = getLViewParent(lView))) {
    lView = parent;
  }

  return lView[FLAGS] & 512
  /* IsRoot */
  ? null : lView[CONTEXT];
}
/**
 * Retrieves all root components associated with a DOM element, directive or component instance.
 * Root components are those which have been bootstrapped by Angular.
 *
 * @param elementOrDir DOM element, component or directive instance
 *    for which to retrieve the root components.
 * @returns Root components associated with the target object.
 *
 * @publicApi
 * @globalApi ng
 */


function getRootComponents(elementOrDir) {
  return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(getRootContext(elementOrDir).components);
}
/**
 * Retrieves an `Injector` associated with an element, component or directive instance.
 *
 * @param elementOrDir DOM element, component or directive instance for which to
 *    retrieve the injector.
 * @returns Injector associated with the element, component or directive instance.
 *
 * @publicApi
 * @globalApi ng
 */


function getInjector(elementOrDir) {
  var context = loadLContext(elementOrDir, false);
  if (context === null) return Injector.NULL;
  var tNode = context.lView[TVIEW].data[context.nodeIndex];
  return new NodeInjector(tNode, context.lView);
}
/**
 * Retrieve a set of injection tokens at a given DOM node.
 *
 * @param element Element for which the injection tokens should be retrieved.
 */


function getInjectionTokens(element) {
  var context = loadLContext(element, false);
  if (context === null) return [];
  var lView = context.lView;
  var tView = lView[TVIEW];
  var tNode = tView.data[context.nodeIndex];
  var providerTokens = [];
  var startIndex = tNode.providerIndexes & 1048575
  /* ProvidersStartIndexMask */
  ;
  var endIndex = tNode.directiveEnd;

  for (var i = startIndex; i < endIndex; i++) {
    var value = tView.data[i];

    if (isDirectiveDefHack(value)) {
      // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a
      // design flaw.  We should always store same type so that we can be monomorphic. The issue
      // is that for Components/Directives we store the def instead the type. The correct behavior
      // is that we should always be storing injectable type in this location.
      value = value.type;
    }

    providerTokens.push(value);
  }

  return providerTokens;
}
/**
 * Retrieves directive instances associated with a given DOM element. Does not include
 * component instances.
 *
 * @usageNotes
 * Given the following DOM structure:
 * ```
 * <my-app>
 *   <button my-button></button>
 *   <my-comp></my-comp>
 * </my-app>
 * ```
 * Calling `getDirectives` on `<button>` will return an array with an instance of the `MyButton`
 * directive that is associated with the DOM element.
 *
 * Calling `getDirectives` on `<my-comp>` will return an empty array.
 *
 * @param element DOM element for which to get the directives.
 * @returns Array of directives associated with the element.
 *
 * @publicApi
 * @globalApi ng
 */


function getDirectives(element) {
  var context = loadLContext(element);

  if (context.directives === undefined) {
    context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);
  } // The `directives` in this case are a named array called `LComponentView`. Clone the
  // result so we don't expose an internal data structure in the user's console.


  return context.directives === null ? [] : Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(context.directives);
}

function loadLContext(target) {
  var throwOnNotFound = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var context = getLContext(target);

  if (!context && throwOnNotFound) {
    throw new Error(ngDevMode ? "Unable to find context associated with ".concat(stringifyForError(target)) : 'Invalid ng target');
  }

  return context;
}
/**
 * Retrieve map of local references.
 *
 * The references are retrieved as a map of local reference name to element or directive instance.
 *
 * @param target DOM element, component or directive instance for which to retrieve
 *    the local references.
 */


function getLocalRefs(target) {
  var context = loadLContext(target, false);
  if (context === null) return {};

  if (context.localRefs === undefined) {
    context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);
  }

  return context.localRefs || {};
}
/**
 * Retrieves the host element of a component or directive instance.
 * The host element is the DOM element that matched the selector of the directive.
 *
 * @param componentOrDirective Component or directive instance for which the host
 *     element should be retrieved.
 * @returns Host element of the target.
 *
 * @publicApi
 * @globalApi ng
 */


function getHostElement(componentOrDirective) {
  return getLContext(componentOrDirective).native;
}
/**
 * Retrieves the rendered text for a given component.
 *
 * This function retrieves the host element of a component and
 * and then returns the `textContent` for that element. This implies
 * that the text returned will include re-projected content of
 * the component as well.
 *
 * @param component The component to return the content text for.
 */


function getRenderedText(component) {
  var hostElement = getHostElement(component);
  return hostElement.textContent || '';
}

function loadLContextFromNode(node) {
  if (!(node instanceof Node)) throw new Error('Expecting instance of DOM Element');
  return loadLContext(node);
}
/**
 * Retrieves a list of event listeners associated with a DOM element. The list does include host
 * listeners, but it does not include event listeners defined outside of the Angular context
 * (e.g. through `addEventListener`).
 *
 * @usageNotes
 * Given the following DOM structure:
 * ```
 * <my-app>
 *   <div (click)="doSomething()"></div>
 * </my-app>
 *
 * ```
 * Calling `getListeners` on `<div>` will return an object that looks as follows:
 * ```
 * {
 *   name: 'click',
 *   element: <div>,
 *   callback: () => doSomething(),
 *   useCapture: false
 * }
 * ```
 *
 * @param element Element for which the DOM listeners should be retrieved.
 * @returns Array of event listeners on the DOM element.
 *
 * @publicApi
 * @globalApi ng
 */


function getListeners(element) {
  assertDomElement(element);
  var lContext = loadLContext(element, false);
  if (lContext === null) return [];
  var lView = lContext.lView;
  var tView = lView[TVIEW];
  var lCleanup = lView[CLEANUP];
  var tCleanup = tView.cleanup;
  var listeners = [];

  if (tCleanup && lCleanup) {
    for (var i = 0; i < tCleanup.length;) {
      var firstParam = tCleanup[i++];
      var secondParam = tCleanup[i++];

      if (typeof firstParam === 'string') {
        var name = firstParam;
        var listenerElement = unwrapRNode(lView[secondParam]);
        var callback = lCleanup[tCleanup[i++]];
        var useCaptureOrIndx = tCleanup[i++]; // if useCaptureOrIndx is boolean then report it as is.
        // if useCaptureOrIndx is positive number then it in unsubscribe method
        // if useCaptureOrIndx is negative number then it is a Subscription

        var type = typeof useCaptureOrIndx === 'boolean' || useCaptureOrIndx >= 0 ? 'dom' : 'output';
        var useCapture = typeof useCaptureOrIndx === 'boolean' ? useCaptureOrIndx : false;

        if (element == listenerElement) {
          listeners.push({
            element: element,
            name: name,
            callback: callback,
            useCapture: useCapture,
            type: type
          });
        }
      }
    }
  }

  listeners.sort(sortListeners);
  return listeners;
}

function sortListeners(a, b) {
  if (a.name == b.name) return 0;
  return a.name < b.name ? -1 : 1;
}
/**
 * This function should not exist because it is megamorphic and only mostly correct.
 *
 * See call site for more info.
 */


function isDirectiveDefHack(obj) {
  return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;
}
/**
 * Returns the attached `DebugNode` instance for an element in the DOM.
 *
 * @param element DOM element which is owned by an existing component's view.
 */


function getDebugNode(element) {
  var debugNode = null;
  var lContext = loadLContextFromNode(element);
  var lView = lContext.lView;
  var nodeIndex = lContext.nodeIndex;

  if (nodeIndex !== -1) {
    var valueInLView = lView[nodeIndex]; // this means that value in the lView is a component with its own
    // data. In this situation the TNode is not accessed at the same spot.

    var tNode = isLView(valueInLView) ? valueInLView[T_HOST] : getTNode(lView[TVIEW], nodeIndex);
    ngDevMode && assertEqual(tNode.index, nodeIndex, 'Expecting that TNode at index is same as index');
    debugNode = buildDebugNode(tNode, lView);
  }

  return debugNode;
}
/**
 * Retrieve the component `LView` from component/element.
 *
 * NOTE: `LView` is a private and should not be leaked outside.
 *       Don't export this method to `ng.*` on window.
 *
 * @param target DOM element or component instance for which to retrieve the LView.
 */


function getComponentLView(target) {
  var lContext = loadLContext(target);
  var nodeIndx = lContext.nodeIndex;
  var lView = lContext.lView;
  var componentLView = lView[nodeIndx];
  ngDevMode && assertLView(componentLView);
  return componentLView;
}
/** Asserts that a value is a DOM Element. */


function assertDomElement(value) {
  if (typeof Element !== 'undefined' && !(value instanceof Element)) {
    throw new Error('Expecting instance of DOM Element');
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Marks a component for check (in case of OnPush components) and synchronously
 * performs change detection on the application this component belongs to.
 *
 * @param component Component to {@link ChangeDetectorRef#markForCheck mark for check}.
 *
 * @publicApi
 * @globalApi ng
 */


function applyChanges(component) {
  markDirty(component);
  getRootComponents(component).forEach(function (rootComponent) {
    return detectChanges(rootComponent);
  });
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * This file introduces series of globally accessible debug tools
 * to allow for the Angular debugging story to function.
 *
 * To see this in action run the following command:
 *
 *   bazel run --config=ivy
 *   //packages/core/test/bundling/todo:devserver
 *
 *  Then load `localhost:5432` and start using the console tools.
 */

/**
 * This value reflects the property on the window where the dev
 * tools are patched (window.ng).
 * */


var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';
var _published = false;
/**
 * Publishes a collection of default debug tools onto`window.ng`.
 *
 * These functions are available globally when Angular is in development
 * mode and are automatically stripped away from prod mode is on.
 */

function publishDefaultGlobalUtils() {
  if (!_published) {
    _published = true;
    publishGlobalUtil('getComponent', getComponent);
    publishGlobalUtil('getContext', getContext);
    publishGlobalUtil('getListeners', getListeners);
    publishGlobalUtil('getOwningComponent', getOwningComponent);
    publishGlobalUtil('getHostElement', getHostElement);
    publishGlobalUtil('getInjector', getInjector);
    publishGlobalUtil('getRootComponents', getRootComponents);
    publishGlobalUtil('getDirectives', getDirectives);
    publishGlobalUtil('applyChanges', applyChanges);
  }
}
/**
 * Publishes the given function to `window.ng` so that it can be
 * used from the browser console when an application is not in production.
 */


function publishGlobalUtil(name, fn) {
  if (typeof COMPILED === 'undefined' || !COMPILED) {
    // Note: we can't export `ng` when using closure enhanced optimization as:
    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global
    // - we can't declare a closure extern as the namespace `ng` is already used within Google
    //   for typings for AngularJS (via `goog.provide('ng....')`).
    var w = _global;
    ngDevMode && assertDefined(fn, 'function not defined');

    if (w) {
      var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];

      if (!container) {
        container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};
      }

      container[name] = fn;
    }
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ɵ0$7 = function ɵ0$7(token, notFoundValue) {
  throwProviderNotFoundError(token, 'NullInjector');
}; // TODO: A hack to not pull in the NullInjector from @angular/core.


var NULL_INJECTOR$1 = {
  get: ɵ0$7
};
/**
 * Bootstraps a Component into an existing host element and returns an instance
 * of the component.
 *
 * Use this function to bootstrap a component into the DOM tree. Each invocation
 * of this function will create a separate tree of components, injectors and
 * change detection cycles and lifetimes. To dynamically insert a new component
 * into an existing tree such that it shares the same injection, change detection
 * and object lifetime, use {@link ViewContainer#createComponent}.
 *
 * @param componentType Component to bootstrap
 * @param options Optional parameters which control bootstrapping
 */

function renderComponent$1(componentType
/* Type as workaround for: Microsoft/TypeScript/issues/4881 */
) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  ngDevMode && publishDefaultGlobalUtils();
  ngDevMode && assertComponentType(componentType);
  var rendererFactory = opts.rendererFactory || domRendererFactory3;
  var sanitizer = opts.sanitizer || null;
  var componentDef = getComponentDef(componentType);
  if (componentDef.type != componentType) componentDef.type = componentType; // The first index of the first selector is the tag name.

  var componentTag = componentDef.selectors[0][0];
  var hostRenderer = rendererFactory.createRenderer(null, null);
  var hostRNode = locateHostElement(hostRenderer, opts.host || componentTag, componentDef.encapsulation);
  var rootFlags = componentDef.onPush ? 64
  /* Dirty */
  | 512
  /* IsRoot */
  : 16
  /* CheckAlways */
  | 512
  /* IsRoot */
  ;
  var rootContext = createRootContext(opts.scheduler, opts.playerHandler);
  var renderer = rendererFactory.createRenderer(hostRNode, componentDef);
  var rootTView = createTView(0
  /* Root */
  , null, null, 1, 0, null, null, null, null, null);
  var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, null, opts.injector || null);
  enterView(rootView);
  var component;

  try {
    if (rendererFactory.begin) rendererFactory.begin();
    var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);
    component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null); // create mode pass

    renderView(rootTView, rootView, null); // update mode pass

    refreshView(rootTView, rootView, null, null);
  } finally {
    leaveView();
    if (rendererFactory.end) rendererFactory.end();
  }

  return component;
}
/**
 * Creates the root component view and the root component node.
 *
 * @param rNode Render host element.
 * @param def ComponentDef
 * @param rootView The parent view where the host node is stored
 * @param rendererFactory Factory to be used for creating child renderers.
 * @param hostRenderer The current renderer
 * @param sanitizer The sanitizer, if provided
 *
 * @returns Component view created
 */


function createRootComponentView(rNode, def, rootView, rendererFactory, hostRenderer, sanitizer) {
  var tView = rootView[TVIEW];
  var index = HEADER_OFFSET;
  ngDevMode && assertIndexInRange(rootView, index);
  rootView[index] = rNode; // '#host' is added here as we don't know the real host DOM name (we don't want to read it) and at
  // the same time we want to communicate the the debug `TNode` that this is a special `TNode`
  // representing a host element.

  var tNode = getOrCreateTNode(tView, index, 2
  /* Element */
  , '#host', null);
  var mergedAttrs = tNode.mergedAttrs = def.hostAttrs;

  if (mergedAttrs !== null) {
    computeStaticStyling(tNode, mergedAttrs, true);

    if (rNode !== null) {
      setUpAttributes(hostRenderer, rNode, mergedAttrs);

      if (tNode.classes !== null) {
        writeDirectClass(hostRenderer, rNode, tNode.classes);
      }

      if (tNode.styles !== null) {
        writeDirectStyle(hostRenderer, rNode, tNode.styles);
      }
    }
  }

  var viewRenderer = rendererFactory.createRenderer(rNode, def);
  var componentView = createLView(rootView, getOrCreateTComponentView(def), null, def.onPush ? 64
  /* Dirty */
  : 16
  /* CheckAlways */
  , rootView[index], tNode, rendererFactory, viewRenderer, sanitizer || null, null);

  if (tView.firstCreatePass) {
    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);
    markAsComponentHost(tView, tNode);
    initTNodeFlags(tNode, rootView.length, 1);
  }

  addToViewTree(rootView, componentView); // Store component view at node index, with node as the HOST

  return rootView[index] = componentView;
}
/**
 * Creates a root component and sets it up with features and host bindings. Shared by
 * renderComponent() and ViewContainerRef.createComponent().
 */


function createRootComponent(componentView, componentDef, rootLView, rootContext, hostFeatures) {
  var tView = rootLView[TVIEW]; // Create directive instance with factory() and store at next index in viewData

  var component = instantiateRootComponent(tView, rootLView, componentDef);
  rootContext.components.push(component);
  componentView[CONTEXT] = component;
  hostFeatures && hostFeatures.forEach(function (feature) {
    return feature(component, componentDef);
  }); // We want to generate an empty QueryList for root content queries for backwards
  // compatibility with ViewEngine.

  if (componentDef.contentQueries) {
    var tNode = getCurrentTNode();
    ngDevMode && assertDefined(tNode, 'TNode expected');
    componentDef.contentQueries(1
    /* Create */
    , component, tNode.directiveStart);
  }

  var rootTNode = getCurrentTNode();
  ngDevMode && assertDefined(rootTNode, 'tNode should have been already created');

  if (tView.firstCreatePass && (componentDef.hostBindings !== null || componentDef.hostAttrs !== null)) {
    setSelectedIndex(rootTNode.index);
    var rootTView = rootLView[TVIEW];
    registerHostBindingOpCodes(rootTView, rootTNode, rootLView, rootTNode.directiveStart, rootTNode.directiveEnd, componentDef);
    invokeHostBindingsInCreationMode(componentDef, component);
  }

  return component;
}

function createRootContext(scheduler, playerHandler) {
  return {
    components: [],
    scheduler: scheduler || defaultScheduler,
    clean: CLEAN_PROMISE,
    playerHandler: playerHandler || null,
    flags: 0
    /* Empty */

  };
}
/**
 * Used to enable lifecycle hooks on the root component.
 *
 * Include this feature when calling `renderComponent` if the root component
 * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't
 * be called properly.
 *
 * Example:
 *
 * ```
 * renderComponent(AppComponent, {hostFeatures: [LifecycleHooksFeature]});
 * ```
 */


function LifecycleHooksFeature(component, def) {
  var lView = readPatchedLView(component);
  ngDevMode && assertDefined(lView, 'LView is required');
  var tView = lView[TVIEW];
  var tNode = getCurrentTNode();
  ngDevMode && assertDefined(tNode, 'TNode is required');
  registerPostOrderHooks(tView, tNode);
}
/**
 * Wait on component until it is rendered.
 *
 * This function returns a `Promise` which is resolved when the component's
 * change detection is executed. This is determined by finding the scheduler
 * associated with the `component`'s render tree and waiting until the scheduler
 * flushes. If nothing is scheduled, the function returns a resolved promise.
 *
 * Example:
 * ```
 * await whenRendered(myComponent);
 * ```
 *
 * @param component Component to wait upon
 * @returns Promise which resolves when the component is rendered.
 */


function whenRendered(component) {
  return getRootContext(component).clean;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function getSuperType(type) {
  return Object.getPrototypeOf(type.prototype).constructor;
}
/**
 * Merges the definition from a super class to a sub class.
 * @param definition The definition that is a SubClass of another directive of component
 *
 * @codeGenApi
 */


function ɵɵInheritDefinitionFeature(definition) {
  var superType = getSuperType(definition.type);
  var shouldInheritFields = true;
  var inheritanceChain = [definition];

  while (superType) {
    var superDef = undefined;

    if (isComponentDef(definition)) {
      // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.
      superDef = superType.ɵcmp || superType.ɵdir;
    } else {
      if (superType.ɵcmp) {
        throw new Error('Directives cannot inherit Components');
      } // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.


      superDef = superType.ɵdir;
    }

    if (superDef) {
      if (shouldInheritFields) {
        inheritanceChain.push(superDef); // Some fields in the definition may be empty, if there were no values to put in them that
        // would've justified object creation. Unwrap them if necessary.

        var writeableDef = definition;
        writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);
        writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);
        writeableDef.outputs = maybeUnwrapEmpty(definition.outputs); // Merge hostBindings

        var superHostBindings = superDef.hostBindings;
        superHostBindings && inheritHostBindings(definition, superHostBindings); // Merge queries

        var superViewQuery = superDef.viewQuery;
        var superContentQueries = superDef.contentQueries;
        superViewQuery && inheritViewQuery(definition, superViewQuery);
        superContentQueries && inheritContentQueries(definition, superContentQueries); // Merge inputs and outputs

        fillProperties(definition.inputs, superDef.inputs);
        fillProperties(definition.declaredInputs, superDef.declaredInputs);
        fillProperties(definition.outputs, superDef.outputs); // Merge animations metadata.
        // If `superDef` is a Component, the `data` field is present (defaults to an empty object).

        if (isComponentDef(superDef) && superDef.data.animation) {
          // If super def is a Component, the `definition` is also a Component, since Directives can
          // not inherit Components (we throw an error above and cannot reach this code).
          var defData = definition.data;
          defData.animation = (defData.animation || []).concat(superDef.data.animation);
        }
      } // Run parent features


      var features = superDef.features;

      if (features) {
        for (var i = 0; i < features.length; i++) {
          var feature = features[i];

          if (feature && feature.ngInherit) {
            feature(definition);
          } // If `InheritDefinitionFeature` is a part of the current `superDef`, it means that this
          // def already has all the necessary information inherited from its super class(es), so we
          // can stop merging fields from super classes. However we need to iterate through the
          // prototype chain to look for classes that might contain other "features" (like
          // NgOnChanges), which we should invoke for the original `definition`. We set the
          // `shouldInheritFields` flag to indicate that, essentially skipping fields inheritance
          // logic and only invoking functions from the "features" list.


          if (feature === ɵɵInheritDefinitionFeature) {
            shouldInheritFields = false;
          }
        }
      }
    }

    superType = Object.getPrototypeOf(superType);
  }

  mergeHostAttrsAcrossInheritance(inheritanceChain);
}
/**
 * Merge the `hostAttrs` and `hostVars` from the inherited parent to the base class.
 *
 * @param inheritanceChain A list of `WritableDefs` starting at the top most type and listing
 * sub-types in order. For each type take the `hostAttrs` and `hostVars` and merge it with the child
 * type.
 */


function mergeHostAttrsAcrossInheritance(inheritanceChain) {
  var hostVars = 0;
  var hostAttrs = null; // We process the inheritance order from the base to the leaves here.

  for (var i = inheritanceChain.length - 1; i >= 0; i--) {
    var def = inheritanceChain[i]; // For each `hostVars`, we need to add the superclass amount.

    def.hostVars = hostVars += def.hostVars; // for each `hostAttrs` we need to merge it with superclass.

    def.hostAttrs = mergeHostAttrs(def.hostAttrs, hostAttrs = mergeHostAttrs(hostAttrs, def.hostAttrs));
  }
}

function maybeUnwrapEmpty(value) {
  if (value === EMPTY_OBJ) {
    return {};
  } else if (value === EMPTY_ARRAY) {
    return [];
  } else {
    return value;
  }
}

function inheritViewQuery(definition, superViewQuery) {
  var prevViewQuery = definition.viewQuery;

  if (prevViewQuery) {
    definition.viewQuery = function (rf, ctx) {
      superViewQuery(rf, ctx);
      prevViewQuery(rf, ctx);
    };
  } else {
    definition.viewQuery = superViewQuery;
  }
}

function inheritContentQueries(definition, superContentQueries) {
  var prevContentQueries = definition.contentQueries;

  if (prevContentQueries) {
    definition.contentQueries = function (rf, ctx, directiveIndex) {
      superContentQueries(rf, ctx, directiveIndex);
      prevContentQueries(rf, ctx, directiveIndex);
    };
  } else {
    definition.contentQueries = superContentQueries;
  }
}

function inheritHostBindings(definition, superHostBindings) {
  var prevHostBindings = definition.hostBindings;

  if (prevHostBindings) {
    definition.hostBindings = function (rf, ctx) {
      superHostBindings(rf, ctx);
      prevHostBindings(rf, ctx);
    };
  } else {
    definition.hostBindings = superHostBindings;
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Fields which exist on either directive or component definitions, and need to be copied from
 * parent to child classes by the `ɵɵCopyDefinitionFeature`.
 */


var COPY_DIRECTIVE_FIELDS = [// The child class should use the providers of its parent.
'providersResolver'];
/**
 * Fields which exist only on component definitions, and need to be copied from parent to child
 * classes by the `ɵɵCopyDefinitionFeature`.
 *
 * The type here allows any field of `ComponentDef` which is not also a property of `DirectiveDef`,
 * since those should go in `COPY_DIRECTIVE_FIELDS` above.
 */

var COPY_COMPONENT_FIELDS = [// The child class should use the template function of its parent, including all template
// semantics.
'template', 'decls', 'consts', 'vars', 'onPush', 'ngContentSelectors', // The child class should use the CSS styles of its parent, including all styling semantics.
'styles', 'encapsulation', // The child class should be checked by the runtime in the same way as its parent.
'schemas'];
/**
 * Copies the fields not handled by the `ɵɵInheritDefinitionFeature` from the supertype of a
 * definition.
 *
 * This exists primarily to support ngcc migration of an existing View Engine pattern, where an
 * entire decorator is inherited from a parent to a child class. When ngcc detects this case, it
 * generates a skeleton definition on the child class, and applies this feature.
 *
 * The `ɵɵCopyDefinitionFeature` then copies any needed fields from the parent class' definition,
 * including things like the component template function.
 *
 * @param definition The definition of a child class which inherits from a parent class with its
 * own definition.
 *
 * @codeGenApi
 */

function ɵɵCopyDefinitionFeature(definition) {
  var superType = getSuperType(definition.type);
  var superDef = undefined;

  if (isComponentDef(definition)) {
    // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.
    superDef = superType.ɵcmp;
  } else {
    // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.
    superDef = superType.ɵdir;
  } // Needed because `definition` fields are readonly.


  var defAny = definition; // Copy over any fields that apply to either directives or components.

  var _iterator2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_7__["default"])(COPY_DIRECTIVE_FIELDS),
      _step2;

  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var _field = _step2.value;
      defAny[_field] = superDef[_field];
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }

  if (isComponentDef(superDef)) {
    // Copy over any component-specific fields.
    var _iterator3 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_7__["default"])(COPY_COMPONENT_FIELDS),
        _step3;

    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var field = _step3.value;
        defAny[field] = superDef[field];
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var _symbolIterator = null;

function getSymbolIterator() {
  if (!_symbolIterator) {
    var _Symbol = _global['Symbol'];

    if (_Symbol && _Symbol.iterator) {
      _symbolIterator = _Symbol.iterator;
    } else {
      // es6-shim specific logic
      var keys = Object.getOwnPropertyNames(Map.prototype);

      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];

        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {
          _symbolIterator = key;
        }
      }
    }
  }

  return _symbolIterator;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function devModeEqual(a, b) {
  var isListLikeIterableA = isListLikeIterable(a);
  var isListLikeIterableB = isListLikeIterable(b);

  if (isListLikeIterableA && isListLikeIterableB) {
    return areIterablesEqual(a, b, devModeEqual);
  } else {
    var isAObject = a && (typeof a === 'object' || typeof a === 'function');
    var isBObject = b && (typeof b === 'object' || typeof b === 'function');

    if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {
      return true;
    } else {
      return Object.is(a, b);
    }
  }
}
/**
 * Indicates that the result of a {@link Pipe} transformation has changed even though the
 * reference has not changed.
 *
 * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value
 * is stored.
 *
 * Example:
 *
 * ```
 * if (this._latestValue === this._latestReturnedValue) {
 *    return this._latestReturnedValue;
 *  } else {
 *    this._latestReturnedValue = this._latestValue;
 *    return WrappedValue.wrap(this._latestValue); // this will force update
 *  }
 * ```
 *
 * @publicApi
 * @deprecated from v10 stop using. (No replacement, deemed unnecessary.)
 */


var WrappedValue = /*#__PURE__*/function () {
  function WrappedValue(value) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, WrappedValue);

    this.wrapped = value;
  }
  /** Creates a wrapped value. */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(WrappedValue, null, [{
    key: "wrap",
    value: function wrap(value) {
      return new WrappedValue(value);
    }
    /**
     * Returns the underlying value of a wrapped value.
     * Returns the given `value` when it is not wrapped.
     **/

  }, {
    key: "unwrap",
    value: function unwrap(value) {
      return WrappedValue.isWrapped(value) ? value.wrapped : value;
    }
    /** Returns true if `value` is a wrapped value. */

  }, {
    key: "isWrapped",
    value: function isWrapped(value) {
      return value instanceof WrappedValue;
    }
  }]);

  return WrappedValue;
}();

function isListLikeIterable(obj) {
  if (!isJsObject(obj)) return false;
  return Array.isArray(obj) || !(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]
  getSymbolIterator() in obj; // JS Iterable have a Symbol.iterator prop
}

function areIterablesEqual(a, b, comparator) {
  var iterator1 = a[getSymbolIterator()]();
  var iterator2 = b[getSymbolIterator()]();

  while (true) {
    var item1 = iterator1.next();
    var item2 = iterator2.next();
    if (item1.done && item2.done) return true;
    if (item1.done || item2.done) return false;
    if (!comparator(item1.value, item2.value)) return false;
  }
}

function iterateListLike(obj, fn) {
  if (Array.isArray(obj)) {
    for (var i = 0; i < obj.length; i++) {
      fn(obj[i]);
    }
  } else {
    var iterator = obj[getSymbolIterator()]();
    var item;

    while (!(item = iterator.next()).done) {
      fn(item.value);
    }
  }
}

function isJsObject(o) {
  return o !== null && (typeof o === 'function' || typeof o === 'object');
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// TODO(misko): consider inlining

/** Updates binding and returns the value. */


function updateBinding(lView, bindingIndex, value) {
  return lView[bindingIndex] = value;
}
/** Gets the current binding value. */


function getBinding(lView, bindingIndex) {
  ngDevMode && assertIndexInRange(lView, bindingIndex);
  ngDevMode && assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');
  return lView[bindingIndex];
}
/**
 * Updates binding if changed, then returns whether it was updated.
 *
 * This function also checks the `CheckNoChangesMode` and throws if changes are made.
 * Some changes (Objects/iterables) during `CheckNoChangesMode` are exempt to comply with VE
 * behavior.
 *
 * @param lView current `LView`
 * @param bindingIndex The binding in the `LView` to check
 * @param value New value to check against `lView[bindingIndex]`
 * @returns `true` if the bindings has changed. (Throws if binding has changed during
 *          `CheckNoChangesMode`)
 */


function bindingUpdated(lView, bindingIndex, value) {
  ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');
  ngDevMode && assertLessThan(bindingIndex, lView.length, "Slot should have been initialized to NO_CHANGE");
  var oldValue = lView[bindingIndex];

  if (Object.is(oldValue, value)) {
    return false;
  } else {
    if (ngDevMode && isInCheckNoChangesMode()) {
      // View engine didn't report undefined values as changed on the first checkNoChanges pass
      // (before the change detection was run).
      var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;

      if (!devModeEqual(oldValueToCompare, value)) {
        var details = getExpressionChangedErrorDetails(lView, bindingIndex, oldValueToCompare, value);
        throwErrorIfNoChangesMode(oldValue === NO_CHANGE, details.oldValue, details.newValue, details.propName);
      } // There was a change, but the `devModeEqual` decided that the change is exempt from an error.
      // For this reason we exit as if no change. The early exit is needed to prevent the changed
      // value to be written into `LView` (If we would write the new value that we would not see it
      // as change on next CD.)


      return false;
    }

    lView[bindingIndex] = value;
    return true;
  }
}
/** Updates 2 bindings if changed, then returns whether either was updated. */


function bindingUpdated2(lView, bindingIndex, exp1, exp2) {
  var different = bindingUpdated(lView, bindingIndex, exp1);
  return bindingUpdated(lView, bindingIndex + 1, exp2) || different;
}
/** Updates 3 bindings if changed, then returns whether any was updated. */


function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {
  var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);
  return bindingUpdated(lView, bindingIndex + 2, exp3) || different;
}
/** Updates 4 bindings if changed, then returns whether any was updated. */


function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {
  var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);
  return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Updates the value of or removes a bound attribute on an Element.
 *
 * Used in the case of `[attr.title]="value"`
 *
 * @param name name The name of the attribute.
 * @param value value The attribute is removed when value is `null` or `undefined`.
 *                  Otherwise the attribute value is set to the stringified value.
 * @param sanitizer An optional function used to sanitize the value.
 * @param namespace Optional namespace to use when setting the attribute.
 *
 * @codeGenApi
 */


function ɵɵattribute(name, value, sanitizer, namespace) {
  var lView = getLView();
  var bindingIndex = nextBindingIndex();

  if (bindingUpdated(lView, bindingIndex, value)) {
    var tView = getTView();
    var tNode = getSelectedTNode();
    elementAttributeInternal(tNode, lView, name, value, sanitizer, namespace);
    ngDevMode && storePropertyBindingMetadata(tView.data, tNode, 'attr.' + name, bindingIndex);
  }

  return ɵɵattribute;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Create interpolation bindings with a variable number of expressions.
 *
 * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.
 * Those are faster because there is no need to create an array of expressions and iterate over it.
 *
 * `values`:
 * - has static text at even indexes,
 * - has evaluated expressions at odd indexes.
 *
 * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.
 */


function interpolationV(lView, values) {
  ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');
  ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');
  var isBindingUpdated = false;
  var bindingIndex = getBindingIndex();

  for (var i = 1; i < values.length; i += 2) {
    // Check if bindings (odd indexes) have changed
    isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;
  }

  setBindingIndex(bindingIndex);

  if (!isBindingUpdated) {
    return NO_CHANGE;
  } // Build the updated content


  var content = values[0];

  for (var _i5 = 1; _i5 < values.length; _i5 += 2) {
    content += renderStringify(values[_i5]) + values[_i5 + 1];
  }

  return content;
}
/**
 * Creates an interpolation binding with 1 expression.
 *
 * @param prefix static value used for concatenation only.
 * @param v0 value checked for change.
 * @param suffix static value used for concatenation only.
 */


function interpolation1(lView, prefix, v0, suffix) {
  var different = bindingUpdated(lView, nextBindingIndex(), v0);
  return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;
}
/**
 * Creates an interpolation binding with 2 expressions.
 */


function interpolation2(lView, prefix, v0, i0, v1, suffix) {
  var bindingIndex = getBindingIndex();
  var different = bindingUpdated2(lView, bindingIndex, v0, v1);
  incrementBindingIndex(2);
  return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;
}
/**
 * Creates an interpolation binding with 3 expressions.
 */


function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {
  var bindingIndex = getBindingIndex();
  var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);
  incrementBindingIndex(3);
  return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix : NO_CHANGE;
}
/**
 * Create an interpolation binding with 4 expressions.
 */


function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {
  var bindingIndex = getBindingIndex();
  var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);
  incrementBindingIndex(4);
  return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 + renderStringify(v3) + suffix : NO_CHANGE;
}
/**
 * Creates an interpolation binding with 5 expressions.
 */


function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {
  var bindingIndex = getBindingIndex();
  var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);
  different = bindingUpdated(lView, bindingIndex + 4, v4) || different;
  incrementBindingIndex(5);
  return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 + renderStringify(v3) + i3 + renderStringify(v4) + suffix : NO_CHANGE;
}
/**
 * Creates an interpolation binding with 6 expressions.
 */


function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {
  var bindingIndex = getBindingIndex();
  var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);
  different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;
  incrementBindingIndex(6);
  return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 + renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix : NO_CHANGE;
}
/**
 * Creates an interpolation binding with 7 expressions.
 */


function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {
  var bindingIndex = getBindingIndex();
  var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);
  different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;
  incrementBindingIndex(7);
  return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 + renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 + renderStringify(v6) + suffix : NO_CHANGE;
}
/**
 * Creates an interpolation binding with 8 expressions.
 */


function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {
  var bindingIndex = getBindingIndex();
  var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);
  different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;
  incrementBindingIndex(8);
  return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 + renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 + renderStringify(v6) + i6 + renderStringify(v7) + suffix : NO_CHANGE;
}
/**
 *
 * Update an interpolated attribute on an element with single bound value surrounded by text.
 *
 * Used when the value passed to a property has 1 interpolated value in it:
 *
 * ```html
 * <div attr.title="prefix{{v0}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');
 * ```
 *
 * @param attrName The name of the attribute to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {
  var lView = getLView();
  var interpolatedValue = interpolation1(lView, prefix, v0, suffix);

  if (interpolatedValue !== NO_CHANGE) {
    var tNode = getSelectedTNode();
    elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);
    ngDevMode && storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 1, prefix, suffix);
  }

  return ɵɵattributeInterpolate1;
}
/**
 *
 * Update an interpolated attribute on an element with 2 bound values surrounded by text.
 *
 * Used when the value passed to a property has 2 interpolated values in it:
 *
 * ```html
 * <div attr.title="prefix{{v0}}-{{v1}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');
 * ```
 *
 * @param attrName The name of the attribute to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {
  var lView = getLView();
  var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);

  if (interpolatedValue !== NO_CHANGE) {
    var tNode = getSelectedTNode();
    elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);
    ngDevMode && storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 2, prefix, i0, suffix);
  }

  return ɵɵattributeInterpolate2;
}
/**
 *
 * Update an interpolated attribute on an element with 3 bound values surrounded by text.
 *
 * Used when the value passed to a property has 3 interpolated values in it:
 *
 * ```html
 * <div attr.title="prefix{{v0}}-{{v1}}-{{v2}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵattributeInterpolate3(
 * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');
 * ```
 *
 * @param attrName The name of the attribute to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {
  var lView = getLView();
  var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);

  if (interpolatedValue !== NO_CHANGE) {
    var tNode = getSelectedTNode();
    elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);
    ngDevMode && storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 3, prefix, i0, i1, suffix);
  }

  return ɵɵattributeInterpolate3;
}
/**
 *
 * Update an interpolated attribute on an element with 4 bound values surrounded by text.
 *
 * Used when the value passed to a property has 4 interpolated values in it:
 *
 * ```html
 * <div attr.title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵattributeInterpolate4(
 * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');
 * ```
 *
 * @param attrName The name of the attribute to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {
  var lView = getLView();
  var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);

  if (interpolatedValue !== NO_CHANGE) {
    var tNode = getSelectedTNode();
    elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);
    ngDevMode && storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);
  }

  return ɵɵattributeInterpolate4;
}
/**
 *
 * Update an interpolated attribute on an element with 5 bound values surrounded by text.
 *
 * Used when the value passed to a property has 5 interpolated values in it:
 *
 * ```html
 * <div attr.title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵattributeInterpolate5(
 * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');
 * ```
 *
 * @param attrName The name of the attribute to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {
  var lView = getLView();
  var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);

  if (interpolatedValue !== NO_CHANGE) {
    var tNode = getSelectedTNode();
    elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);
    ngDevMode && storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);
  }

  return ɵɵattributeInterpolate5;
}
/**
 *
 * Update an interpolated attribute on an element with 6 bound values surrounded by text.
 *
 * Used when the value passed to a property has 6 interpolated values in it:
 *
 * ```html
 * <div attr.title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵattributeInterpolate6(
 *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');
 * ```
 *
 * @param attrName The name of the attribute to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param i4 Static value used for concatenation only.
 * @param v5 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {
  var lView = getLView();
  var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);

  if (interpolatedValue !== NO_CHANGE) {
    var tNode = getSelectedTNode();
    elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);
    ngDevMode && storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);
  }

  return ɵɵattributeInterpolate6;
}
/**
 *
 * Update an interpolated attribute on an element with 7 bound values surrounded by text.
 *
 * Used when the value passed to a property has 7 interpolated values in it:
 *
 * ```html
 * <div attr.title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵattributeInterpolate7(
 *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');
 * ```
 *
 * @param attrName The name of the attribute to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param i4 Static value used for concatenation only.
 * @param v5 Value checked for change.
 * @param i5 Static value used for concatenation only.
 * @param v6 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {
  var lView = getLView();
  var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);

  if (interpolatedValue !== NO_CHANGE) {
    var tNode = getSelectedTNode();
    elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);
    ngDevMode && storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);
  }

  return ɵɵattributeInterpolate7;
}
/**
 *
 * Update an interpolated attribute on an element with 8 bound values surrounded by text.
 *
 * Used when the value passed to a property has 8 interpolated values in it:
 *
 * ```html
 * <div attr.title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵattributeInterpolate8(
 *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');
 * ```
 *
 * @param attrName The name of the attribute to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param i4 Static value used for concatenation only.
 * @param v5 Value checked for change.
 * @param i5 Static value used for concatenation only.
 * @param v6 Value checked for change.
 * @param i6 Static value used for concatenation only.
 * @param v7 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {
  var lView = getLView();
  var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);

  if (interpolatedValue !== NO_CHANGE) {
    var tNode = getSelectedTNode();
    elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);
    ngDevMode && storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);
  }

  return ɵɵattributeInterpolate8;
}
/**
 * Update an interpolated attribute on an element with 9 or more bound values surrounded by text.
 *
 * Used when the number of interpolated values exceeds 8.
 *
 * ```html
 * <div
 *  title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵattributeInterpolateV(
 *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,
 *  'suffix']);
 * ```
 *
 * @param attrName The name of the attribute to update.
 * @param values The collection of values and the strings in-between those values, beginning with
 * a string prefix and ending with a string suffix.
 * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {
  var lView = getLView();
  var interpolated = interpolationV(lView, values);

  if (interpolated !== NO_CHANGE) {
    var tNode = getSelectedTNode();
    elementAttributeInternal(tNode, lView, attrName, interpolated, sanitizer, namespace);

    if (ngDevMode) {
      var interpolationInBetween = [values[0]]; // prefix

      for (var i = 2; i < values.length; i += 2) {
        interpolationInBetween.push(values[i]);
      }

      storePropertyBindingMetadata.apply(void 0, [getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - interpolationInBetween.length + 1].concat(interpolationInBetween));
    }
  }

  return ɵɵattributeInterpolateV;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function templateFirstCreatePass(index, tView, lView, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex) {
  ngDevMode && assertFirstCreatePass(tView);
  ngDevMode && ngDevMode.firstCreatePass++;
  var tViewConsts = tView.consts; // TODO(pk): refactor getOrCreateTNode to have the "create" only version

  var tNode = getOrCreateTNode(tView, index, 4
  /* Container */
  , tagName || null, getConstant(tViewConsts, attrsIndex));
  resolveDirectives(tView, lView, tNode, getConstant(tViewConsts, localRefsIndex));
  registerPostOrderHooks(tView, tNode);
  var embeddedTView = tNode.tViews = createTView(2
  /* Embedded */
  , tNode, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);

  if (tView.queries !== null) {
    tView.queries.template(tView, tNode);
    embeddedTView.queries = tView.queries.embeddedTView(tNode);
  }

  return tNode;
}
/**
 * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.
 *
 * <ng-template #foo>
 *    <div></div>
 * </ng-template>
 *
 * @param index The index of the container in the data array
 * @param templateFn Inline template
 * @param decls The number of nodes, local refs, and pipes for this template
 * @param vars The number of bindings for this template
 * @param tagName The name of the container element, if applicable
 * @param attrsIndex Index of template attributes in the `consts` array.
 * @param localRefs Index of the local references in the `consts` array.
 * @param localRefExtractor A function which extracts local-refs values from the template.
 *        Defaults to the current element associated with the local-ref.
 *
 * @codeGenApi
 */


function ɵɵtemplate(index, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex, localRefExtractor) {
  var lView = getLView();
  var tView = getTView();
  var adjustedIndex = index + HEADER_OFFSET;
  var tNode = tView.firstCreatePass ? templateFirstCreatePass(adjustedIndex, tView, lView, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex) : tView.data[adjustedIndex];
  setCurrentTNode(tNode, false);
  var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');
  appendChild(tView, lView, comment, tNode);
  attachPatchData(comment, lView);
  addToViewTree(lView, lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode));

  if (isDirectiveHost(tNode)) {
    createDirectivesInstances(tView, lView, tNode);
  }

  if (localRefsIndex != null) {
    saveResolvedLocalsInData(lView, tNode, localRefExtractor);
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Store a value in the `data` at a given `index`. */


function store(tView, lView, index, value) {
  // We don't store any static data for local variables, so the first time
  // we see the template, we should store as null to avoid a sparse array
  if (index >= tView.data.length) {
    tView.data[index] = null;
    tView.blueprint[index] = null;
  }

  lView[index] = value;
}
/**
 * Retrieves a local reference from the current contextViewData.
 *
 * If the reference to retrieve is in a parent view, this instruction is used in conjunction
 * with a nextContext() call, which walks up the tree and updates the contextViewData instance.
 *
 * @param index The index of the local ref in contextViewData.
 *
 * @codeGenApi
 */


function ɵɵreference(index) {
  var contextLView = getContextLView();
  return load(contextLView, HEADER_OFFSET + index);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.
 *
 * This should be kept up to date with the public exports of @angular/core.
 */


var angularCoreDiEnv = {
  'ɵɵdefineInjectable': ɵɵdefineInjectable,
  'ɵɵdefineInjector': ɵɵdefineInjector,
  'ɵɵinject': ɵɵinject,
  'ɵɵgetFactoryOf': getFactoryOf,
  'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep
};

function getFactoryOf(type) {
  var typeAny = type;

  if (isForwardRef(type)) {
    return function () {
      var factory = getFactoryOf(resolveForwardRef(typeAny));
      return factory ? factory() : null;
    };
  }

  var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);

  if (!def || def.factory === undefined) {
    return null;
  }

  return def.factory;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting
 * injectable def (`ɵprov`) onto the injectable type.
 */


function compileInjectable(type, srcMeta) {
  var ngInjectableDef = null;
  var ngFactoryDef = null; // if NG_PROV_DEF is already defined on this class then don't overwrite it

  if (!type.hasOwnProperty(NG_PROV_DEF)) {
    Object.defineProperty(type, NG_PROV_DEF, {
      get: function get() {
        if (ngInjectableDef === null) {
          ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, "ng:///".concat(type.name, "/\u0275prov.js"), getInjectableMetadata(type, srcMeta));
        }

        return ngInjectableDef;
      }
    });
  } // if NG_FACTORY_DEF is already defined on this class then don't overwrite it


  if (!type.hasOwnProperty(NG_FACTORY_DEF)) {
    Object.defineProperty(type, NG_FACTORY_DEF, {
      get: function get() {
        if (ngFactoryDef === null) {
          var metadata = getInjectableMetadata(type, srcMeta);
          var compiler = getCompilerFacade();
          ngFactoryDef = compiler.compileFactory(angularCoreDiEnv, "ng:///".concat(type.name, "/\u0275fac.js"), {
            name: metadata.name,
            type: metadata.type,
            typeArgumentCount: metadata.typeArgumentCount,
            deps: reflectDependencies(type),
            injectFn: 'inject',
            target: compiler.R3FactoryTarget.Injectable
          });
        }

        return ngFactoryDef;
      },
      // Leave this configurable so that the factories from directives or pipes can take precedence.
      configurable: true
    });
  }
}

var ɵ0$8 = getClosureSafeProperty;
var USE_VALUE$1 = /*@__PURE__*/getClosureSafeProperty({
  provide: String,
  useValue: ɵ0$8
});

function isUseClassProvider(meta) {
  return meta.useClass !== undefined;
}

function isUseValueProvider(meta) {
  return USE_VALUE$1 in meta;
}

function isUseFactoryProvider(meta) {
  return meta.useFactory !== undefined;
}

function isUseExistingProvider(meta) {
  return meta.useExisting !== undefined;
}

function getInjectableMetadata(type, srcMeta) {
  // Allow the compilation of a class with a `@Injectable()` decorator without parameters
  var meta = srcMeta || {
    providedIn: null
  };
  var compilerMeta = {
    name: type.name,
    type: type,
    typeArgumentCount: 0,
    providedIn: meta.providedIn,
    userDeps: undefined
  };

  if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {
    compilerMeta.userDeps = convertDependencies(meta.deps);
  }

  if (isUseClassProvider(meta)) {
    // The user explicitly specified useClass, and may or may not have provided deps.
    compilerMeta.useClass = resolveForwardRef(meta.useClass);
  } else if (isUseValueProvider(meta)) {
    // The user explicitly specified useValue.
    compilerMeta.useValue = resolveForwardRef(meta.useValue);
  } else if (isUseFactoryProvider(meta)) {
    // The user explicitly specified useFactory.
    compilerMeta.useFactory = meta.useFactory;
  } else if (isUseExistingProvider(meta)) {
    // The user explicitly specified useExisting.
    compilerMeta.useExisting = resolveForwardRef(meta.useExisting);
  }

  return compilerMeta;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ɵ0$9 = getClosureSafeProperty;
var USE_VALUE$2 = /*@__PURE__*/getClosureSafeProperty({
  provide: String,
  useValue: ɵ0$9
});
var EMPTY_ARRAY$2 = [];

function convertInjectableProviderToFactory(type, provider) {
  if (!provider) {
    var reflectionCapabilities = new ReflectionCapabilities();
    var deps = reflectionCapabilities.parameters(type); // TODO - convert to flags.

    return function () {
      return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_13__["default"])(type, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(injectArgs(deps)));
    };
  }

  if (USE_VALUE$2 in provider) {
    var valueProvider = provider;
    return function () {
      return valueProvider.useValue;
    };
  } else if (provider.useExisting) {
    var existingProvider = provider;
    return function () {
      return ɵɵinject(resolveForwardRef(existingProvider.useExisting));
    };
  } else if (provider.useFactory) {
    var factoryProvider = provider;
    return function () {
      return factoryProvider.useFactory.apply(factoryProvider, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(injectArgs(factoryProvider.deps || EMPTY_ARRAY$2)));
    };
  } else if (provider.useClass) {
    var classProvider = provider;
    var _deps = provider.deps;

    if (!_deps) {
      var _reflectionCapabilities = new ReflectionCapabilities();

      _deps = _reflectionCapabilities.parameters(type);
    }

    return function () {
      return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_13__["default"])(resolveForwardRef(classProvider.useClass), Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(injectArgs(_deps)));
    };
  } else {
    var _deps2 = provider.deps;

    if (!_deps2) {
      var _reflectionCapabilities2 = new ReflectionCapabilities();

      _deps2 = _reflectionCapabilities2.parameters(type);
    }

    return function () {
      return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_13__["default"])(type, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(injectArgs(_deps2)));
    };
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ɵ0$a = function ɵ0$a(type, meta) {
  return SWITCH_COMPILE_INJECTABLE(type, meta);
};
/**
 * Injectable decorator and metadata.
 *
 * @Annotation
 * @publicApi
 */


var Injectable = /*@__PURE__*/makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$a);
/**
 * Supports @Injectable() in JIT mode for Render2.
 */

function render2CompileInjectable(injectableType, options) {
  if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {
    injectableType.ɵprov = ɵɵdefineInjectable({
      token: injectableType,
      providedIn: options.providedIn,
      factory: convertInjectableProviderToFactory(injectableType, options)
    });
  }
}

var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;
var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;
var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

function findFirstClosedCycle(keys) {
  var res = [];

  for (var i = 0; i < keys.length; ++i) {
    if (res.indexOf(keys[i]) > -1) {
      res.push(keys[i]);
      return res;
    }

    res.push(keys[i]);
  }

  return res;
}

function constructResolvingPath(keys) {
  if (keys.length > 1) {
    var reversed = findFirstClosedCycle(keys.slice().reverse());
    var tokenStrs = reversed.map(function (k) {
      return stringify(k.token);
    });
    return ' (' + tokenStrs.join(' -> ') + ')';
  }

  return '';
}

function injectionError(injector, key, constructResolvingMessage, originalError) {
  var keys = [key];
  var errMsg = constructResolvingMessage(keys);
  var error = originalError ? wrappedError(errMsg, originalError) : Error(errMsg);
  error.addKey = addKey;
  error.keys = keys;
  error.injectors = [injector];
  error.constructResolvingMessage = constructResolvingMessage;
  error[ERROR_ORIGINAL_ERROR] = originalError;
  return error;
}

function addKey(injector, key) {
  this.injectors.push(injector);
  this.keys.push(key); // Note: This updated message won't be reflected in the `.stack` property

  this.message = this.constructResolvingMessage(this.keys);
}
/**
 * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the
 * {@link Injector} does not have a {@link Provider} for the given key.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * class A {
 *   constructor(b:B) {}
 * }
 *
 * expect(() => Injector.resolveAndCreate([A])).toThrowError();
 * ```
 */


function noProviderError(injector, key) {
  return injectionError(injector, key, function (keys) {
    var first = stringify(keys[0].token);
    return "No provider for ".concat(first, "!").concat(constructResolvingPath(keys));
  });
}
/**
 * Thrown when dependencies form a cycle.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * var injector = Injector.resolveAndCreate([
 *   {provide: "one", useFactory: (two) => "two", deps: [[new Inject("two")]]},
 *   {provide: "two", useFactory: (one) => "one", deps: [[new Inject("one")]]}
 * ]);
 *
 * expect(() => injector.get("one")).toThrowError();
 * ```
 *
 * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.
 */


function cyclicDependencyError(injector, key) {
  return injectionError(injector, key, function (keys) {
    return "Cannot instantiate cyclic dependency!".concat(constructResolvingPath(keys));
  });
}
/**
 * Thrown when a constructing type returns with an Error.
 *
 * The `InstantiationError` class contains the original error plus the dependency graph which caused
 * this object to be instantiated.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * class A {
 *   constructor() {
 *     throw new Error('message');
 *   }
 * }
 *
 * var injector = Injector.resolveAndCreate([A]);

 * try {
 *   injector.get(A);
 * } catch (e) {
 *   expect(e instanceof InstantiationError).toBe(true);
 *   expect(e.originalException.message).toEqual("message");
 *   expect(e.originalStack).toBeDefined();
 * }
 * ```
 */


function instantiationError(injector, originalException, originalStack, key) {
  return injectionError(injector, key, function (keys) {
    var first = stringify(keys[0].token);
    return "".concat(originalException.message, ": Error during instantiation of ").concat(first, "!").concat(constructResolvingPath(keys), ".");
  }, originalException);
}
/**
 * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}
 * creation.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * expect(() => Injector.resolveAndCreate(["not a type"])).toThrowError();
 * ```
 */


function invalidProviderError(provider) {
  return Error("Invalid provider - only instances of Provider and Type are allowed, got: ".concat(provider));
}
/**
 * Thrown when the class has no annotation information.
 *
 * Lack of annotation information prevents the {@link Injector} from determining which dependencies
 * need to be injected into the constructor.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * class A {
 *   constructor(b) {}
 * }
 *
 * expect(() => Injector.resolveAndCreate([A])).toThrowError();
 * ```
 *
 * This error is also thrown when the class not marked with {@link Injectable} has parameter types.
 *
 * ```typescript
 * class B {}
 *
 * class A {
 *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.
 * }
 *
 * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();
 * ```
 *
 */


function noAnnotationError(typeOrFunc, params) {
  var signature = [];

  for (var i = 0, ii = params.length; i < ii; i++) {
    var parameter = params[i];

    if (!parameter || parameter.length == 0) {
      signature.push('?');
    } else {
      signature.push(parameter.map(stringify).join(' '));
    }
  }

  return Error('Cannot resolve all parameters for \'' + stringify(typeOrFunc) + '\'(' + signature.join(', ') + '). ' + 'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \'' + stringify(typeOrFunc) + '\' is decorated with Injectable.');
}
/**
 * Thrown when getting an object by index.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * class A {}
 *
 * var injector = Injector.resolveAndCreate([A]);
 *
 * expect(() => injector.getAt(100)).toThrowError();
 * ```
 *
 */


function outOfBoundsError(index) {
  return Error("Index ".concat(index, " is out-of-bounds."));
} // TODO: add a working example after alpha38 is released

/**
 * Thrown when a multi provider and a regular provider are bound to the same token.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * expect(() => Injector.resolveAndCreate([
 *   { provide: "Strings", useValue: "string1", multi: true},
 *   { provide: "Strings", useValue: "string2", multi: false}
 * ])).toThrowError();
 * ```
 */


function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {
  return Error("Cannot mix multi providers and regular providers, got: ".concat(provider1, " ").concat(provider2));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A unique object used for retrieving items from the {@link ReflectiveInjector}.
 *
 * Keys have:
 * - a system-wide unique `id`.
 * - a `token`.
 *
 * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows
 * the
 * injector to store created objects in a more efficient way.
 *
 * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when
 * resolving
 * providers.
 *
 * @deprecated No replacement
 * @publicApi
 */


var ReflectiveKey = /*#__PURE__*/function () {
  /**
   * Private
   */
  function ReflectiveKey(token, id) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ReflectiveKey);

    this.token = token;
    this.id = id;

    if (!token) {
      throw new Error('Token must be defined!');
    }

    this.displayName = stringify(this.token);
  }
  /**
   * Retrieves a `Key` for a token.
   */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ReflectiveKey, null, [{
    key: "get",
    value: function get(token) {
      return _globalKeyRegistry.get(resolveForwardRef(token));
    }
    /**
     * @returns the number of keys registered in the system.
     */

  }, {
    key: "numberOfKeys",
    get: function get() {
      return _globalKeyRegistry.numberOfKeys;
    }
  }]);

  return ReflectiveKey;
}();

var KeyRegistry = /*#__PURE__*/function () {
  function KeyRegistry() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, KeyRegistry);

    this._allKeys = new Map();
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(KeyRegistry, [{
    key: "get",
    value: function get(token) {
      if (token instanceof ReflectiveKey) return token;

      if (this._allKeys.has(token)) {
        return this._allKeys.get(token);
      }

      var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);

      this._allKeys.set(token, newKey);

      return newKey;
    }
  }, {
    key: "numberOfKeys",
    get: function get() {
      return this._allKeys.size;
    }
  }]);

  return KeyRegistry;
}();

var _globalKeyRegistry = /*@__PURE__*/new KeyRegistry();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Provides access to reflection data about symbols. Used internally by Angular
 * to power dependency injection and compilation.
 */


var Reflector = /*#__PURE__*/function () {
  function Reflector(reflectionCapabilities) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, Reflector);

    this.reflectionCapabilities = reflectionCapabilities;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(Reflector, [{
    key: "updateCapabilities",
    value: function updateCapabilities(caps) {
      this.reflectionCapabilities = caps;
    }
  }, {
    key: "factory",
    value: function factory(type) {
      return this.reflectionCapabilities.factory(type);
    }
  }, {
    key: "parameters",
    value: function parameters(typeOrFunc) {
      return this.reflectionCapabilities.parameters(typeOrFunc);
    }
  }, {
    key: "annotations",
    value: function annotations(typeOrFunc) {
      return this.reflectionCapabilities.annotations(typeOrFunc);
    }
  }, {
    key: "propMetadata",
    value: function propMetadata(typeOrFunc) {
      return this.reflectionCapabilities.propMetadata(typeOrFunc);
    }
  }, {
    key: "hasLifecycleHook",
    value: function hasLifecycleHook(type, lcProperty) {
      return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);
    }
  }, {
    key: "getter",
    value: function getter(name) {
      return this.reflectionCapabilities.getter(name);
    }
  }, {
    key: "setter",
    value: function setter(name) {
      return this.reflectionCapabilities.setter(name);
    }
  }, {
    key: "method",
    value: function method(name) {
      return this.reflectionCapabilities.method(name);
    }
  }, {
    key: "importUri",
    value: function importUri(type) {
      return this.reflectionCapabilities.importUri(type);
    }
  }, {
    key: "resourceUri",
    value: function resourceUri(type) {
      return this.reflectionCapabilities.resourceUri(type);
    }
  }, {
    key: "resolveIdentifier",
    value: function resolveIdentifier(name, moduleUrl, members, runtime) {
      return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);
    }
  }, {
    key: "resolveEnum",
    value: function resolveEnum(identifier, name) {
      return this.reflectionCapabilities.resolveEnum(identifier, name);
    }
  }]);

  return Reflector;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The {@link Reflector} used internally in Angular to access metadata
 * about symbols.
 */


var reflector = /*@__PURE__*/new Reflector( /*@__PURE__*/new ReflectionCapabilities());
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * `Dependency` is used by the framework to extend DI.
 * This is internal to Angular and should not be used directly.
 */

var ReflectiveDependency = /*#__PURE__*/function () {
  function ReflectiveDependency(key, optional, visibility) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ReflectiveDependency);

    this.key = key;
    this.optional = optional;
    this.visibility = visibility;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ReflectiveDependency, null, [{
    key: "fromKey",
    value: function fromKey(key) {
      return new ReflectiveDependency(key, false, null);
    }
  }]);

  return ReflectiveDependency;
}();

var _EMPTY_LIST = [];

var ResolvedReflectiveProvider_ = function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ResolvedReflectiveProvider_);

  this.key = key;
  this.resolvedFactories = resolvedFactories;
  this.multiProvider = multiProvider;
  this.resolvedFactory = this.resolvedFactories[0];
};
/**
 * An internal resolved representation of a factory function created by resolving `Provider`.
 * @publicApi
 */


var ResolvedReflectiveFactory = function ResolvedReflectiveFactory(
/**
 * Factory function which can return an instance of an object represented by a key.
 */
factory,
/**
 * Arguments (dependencies) to the `factory` function.
 */
dependencies) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ResolvedReflectiveFactory);

  this.factory = factory;
  this.dependencies = dependencies;
};
/**
 * Resolve a single provider.
 */


function resolveReflectiveFactory(provider) {
  var factoryFn;
  var resolvedDeps;

  if (provider.useClass) {
    var useClass = resolveForwardRef(provider.useClass);
    factoryFn = reflector.factory(useClass);
    resolvedDeps = _dependenciesFor(useClass);
  } else if (provider.useExisting) {
    factoryFn = function factoryFn(aliasInstance) {
      return aliasInstance;
    };

    resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];
  } else if (provider.useFactory) {
    factoryFn = provider.useFactory;
    resolvedDeps = constructDependencies(provider.useFactory, provider.deps);
  } else {
    factoryFn = function factoryFn() {
      return provider.useValue;
    };

    resolvedDeps = _EMPTY_LIST;
  }

  return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);
}
/**
 * Converts the `Provider` into `ResolvedProvider`.
 *
 * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider
 * syntax.
 */


function resolveReflectiveProvider(provider) {
  return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);
}
/**
 * Resolve a list of Providers.
 */


function resolveReflectiveProviders(providers) {
  var normalized = _normalizeProviders(providers, []);

  var resolved = normalized.map(resolveReflectiveProvider);
  var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());
  return Array.from(resolvedProviderMap.values());
}
/**
 * Merges a list of ResolvedProviders into a list where each key is contained exactly once and
 * multi providers have been merged.
 */


function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {
  for (var i = 0; i < providers.length; i++) {
    var provider = providers[i];
    var existing = normalizedProvidersMap.get(provider.key.id);

    if (existing) {
      if (provider.multiProvider !== existing.multiProvider) {
        throw mixingMultiProvidersWithRegularProvidersError(existing, provider);
      }

      if (provider.multiProvider) {
        for (var j = 0; j < provider.resolvedFactories.length; j++) {
          existing.resolvedFactories.push(provider.resolvedFactories[j]);
        }
      } else {
        normalizedProvidersMap.set(provider.key.id, provider);
      }
    } else {
      var resolvedProvider = void 0;

      if (provider.multiProvider) {
        resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);
      } else {
        resolvedProvider = provider;
      }

      normalizedProvidersMap.set(provider.key.id, resolvedProvider);
    }
  }

  return normalizedProvidersMap;
}

function _normalizeProviders(providers, res) {
  providers.forEach(function (b) {
    if (b instanceof Type) {
      res.push({
        provide: b,
        useClass: b
      });
    } else if (b && typeof b == 'object' && b.provide !== undefined) {
      res.push(b);
    } else if (Array.isArray(b)) {
      _normalizeProviders(b, res);
    } else {
      throw invalidProviderError(b);
    }
  });
  return res;
}

function constructDependencies(typeOrFunc, dependencies) {
  if (!dependencies) {
    return _dependenciesFor(typeOrFunc);
  } else {
    var params = dependencies.map(function (t) {
      return [t];
    });
    return dependencies.map(function (t) {
      return _extractToken(typeOrFunc, t, params);
    });
  }
}

function _dependenciesFor(typeOrFunc) {
  var params = reflector.parameters(typeOrFunc);
  if (!params) return [];

  if (params.some(function (p) {
    return p == null;
  })) {
    throw noAnnotationError(typeOrFunc, params);
  }

  return params.map(function (p) {
    return _extractToken(typeOrFunc, p, params);
  });
}

function _extractToken(typeOrFunc, metadata, params) {
  var token = null;
  var optional = false;

  if (!Array.isArray(metadata)) {
    if (metadata instanceof Inject) {
      return _createDependency(metadata.token, optional, null);
    } else {
      return _createDependency(metadata, optional, null);
    }
  }

  var visibility = null;

  for (var i = 0; i < metadata.length; ++i) {
    var paramMetadata = metadata[i];

    if (paramMetadata instanceof Type) {
      token = paramMetadata;
    } else if (paramMetadata instanceof Inject) {
      token = paramMetadata.token;
    } else if (paramMetadata instanceof Optional) {
      optional = true;
    } else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {
      visibility = paramMetadata;
    } else if (paramMetadata instanceof InjectionToken) {
      token = paramMetadata;
    }
  }

  token = resolveForwardRef(token);

  if (token != null) {
    return _createDependency(token, optional, visibility);
  } else {
    throw noAnnotationError(typeOrFunc, params);
  }
}

function _createDependency(token, optional, visibility) {
  return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Threshold for the dynamic version


var UNDEFINED = {};
/**
 * A ReflectiveDependency injection container used for instantiating objects and resolving
 * dependencies.
 *
 * An `Injector` is a replacement for a `new` operator, which can automatically resolve the
 * constructor dependencies.
 *
 * In typical use, application code asks for the dependencies in the constructor and they are
 * resolved by the `Injector`.
 *
 * @usageNotes
 * ### Example
 *
 * The following example creates an `Injector` configured to create `Engine` and `Car`.
 *
 * ```typescript
 * @Injectable()
 * class Engine {
 * }
 *
 * @Injectable()
 * class Car {
 *   constructor(public engine:Engine) {}
 * }
 *
 * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);
 * var car = injector.get(Car);
 * expect(car instanceof Car).toBe(true);
 * expect(car.engine instanceof Engine).toBe(true);
 * ```
 *
 * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`
 * resolve all of the object's dependencies automatically.
 *
 * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.
 * @publicApi
 */

var ReflectiveInjector = /*#__PURE__*/function () {
  function ReflectiveInjector() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ReflectiveInjector);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ReflectiveInjector, null, [{
    key: "resolve",

    /**
     * Turns an array of provider definitions into an array of resolved providers.
     *
     * A resolution is a process of flattening multiple nested arrays and converting individual
     * providers into an array of `ResolvedReflectiveProvider`s.
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * @Injectable()
     * class Engine {
     * }
     *
     * @Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);
     *
     * expect(providers.length).toEqual(2);
     *
     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);
     * expect(providers[0].key.displayName).toBe("Car");
     * expect(providers[0].dependencies.length).toEqual(1);
     * expect(providers[0].factory).toBeDefined();
     *
     * expect(providers[1].key.displayName).toBe("Engine");
     * });
     * ```
     *
     */
    value: function resolve(providers) {
      return resolveReflectiveProviders(providers);
    }
    /**
     * Resolves an array of providers and creates an injector from those providers.
     *
     * The passed-in providers can be an array of `Type`, `Provider`,
     * or a recursive array of more providers.
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * @Injectable()
     * class Engine {
     * }
     *
     * @Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);
     * expect(injector.get(Car) instanceof Car).toBe(true);
     * ```
     */

  }, {
    key: "resolveAndCreate",
    value: function resolveAndCreate(providers, parent) {
      var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);
      return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);
    }
    /**
     * Creates an injector from previously resolved providers.
     *
     * This API is the recommended way to construct injectors in performance-sensitive parts.
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * @Injectable()
     * class Engine {
     * }
     *
     * @Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var providers = ReflectiveInjector.resolve([Car, Engine]);
     * var injector = ReflectiveInjector.fromResolvedProviders(providers);
     * expect(injector.get(Car) instanceof Car).toBe(true);
     * ```
     */

  }, {
    key: "fromResolvedProviders",
    value: function fromResolvedProviders(providers, parent) {
      return new ReflectiveInjector_(providers, parent);
    }
  }]);

  return ReflectiveInjector;
}();

var ReflectiveInjector_ = /*@__PURE__*/function () {
  var ReflectiveInjector_ = /*#__PURE__*/function () {
    /**
     * Private
     */
    function ReflectiveInjector_(_providers, _parent) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ReflectiveInjector_);

      /** @internal */
      this._constructionCounter = 0;
      this._providers = _providers;
      this.parent = _parent || null;
      var len = _providers.length;
      this.keyIds = [];
      this.objs = [];

      for (var i = 0; i < len; i++) {
        this.keyIds[i] = _providers[i].key.id;
        this.objs[i] = UNDEFINED;
      }
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ReflectiveInjector_, [{
      key: "get",
      value: function get(token) {
        var notFoundValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : THROW_IF_NOT_FOUND;
        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);
      }
    }, {
      key: "resolveAndCreateChild",
      value: function resolveAndCreateChild(providers) {
        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);
        return this.createChildFromResolved(ResolvedReflectiveProviders);
      }
    }, {
      key: "createChildFromResolved",
      value: function createChildFromResolved(providers) {
        var inj = new ReflectiveInjector_(providers);
        inj.parent = this;
        return inj;
      }
    }, {
      key: "resolveAndInstantiate",
      value: function resolveAndInstantiate(provider) {
        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);
      }
    }, {
      key: "instantiateResolved",
      value: function instantiateResolved(provider) {
        return this._instantiateProvider(provider);
      }
    }, {
      key: "getProviderAtIndex",
      value: function getProviderAtIndex(index) {
        if (index < 0 || index >= this._providers.length) {
          throw outOfBoundsError(index);
        }

        return this._providers[index];
      }
      /** @internal */

    }, {
      key: "_new",
      value: function _new(provider) {
        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {
          throw cyclicDependencyError(this, provider.key);
        }

        return this._instantiateProvider(provider);
      }
    }, {
      key: "_getMaxNumberOfObjects",
      value: function _getMaxNumberOfObjects() {
        return this.objs.length;
      }
    }, {
      key: "_instantiateProvider",
      value: function _instantiateProvider(provider) {
        if (provider.multiProvider) {
          var res = [];

          for (var i = 0; i < provider.resolvedFactories.length; ++i) {
            res[i] = this._instantiate(provider, provider.resolvedFactories[i]);
          }

          return res;
        } else {
          return this._instantiate(provider, provider.resolvedFactories[0]);
        }
      }
    }, {
      key: "_instantiate",
      value: function _instantiate(provider, ResolvedReflectiveFactory) {
        var _this5 = this;

        var factory = ResolvedReflectiveFactory.factory;
        var deps;

        try {
          deps = ResolvedReflectiveFactory.dependencies.map(function (dep) {
            return _this5._getByReflectiveDependency(dep);
          });
        } catch (e) {
          if (e.addKey) {
            e.addKey(this, provider.key);
          }

          throw e;
        }

        var obj;

        try {
          obj = factory.apply(void 0, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(deps));
        } catch (e) {
          throw instantiationError(this, e, e.stack, provider.key);
        }

        return obj;
      }
    }, {
      key: "_getByReflectiveDependency",
      value: function _getByReflectiveDependency(dep) {
        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);
      }
    }, {
      key: "_getByKey",
      value: function _getByKey(key, visibility, notFoundValue) {
        if (key === ReflectiveInjector_.INJECTOR_KEY) {
          return this;
        }

        if (visibility instanceof Self) {
          return this._getByKeySelf(key, notFoundValue);
        } else {
          return this._getByKeyDefault(key, notFoundValue, visibility);
        }
      }
    }, {
      key: "_getObjByKeyId",
      value: function _getObjByKeyId(keyId) {
        for (var i = 0; i < this.keyIds.length; i++) {
          if (this.keyIds[i] === keyId) {
            if (this.objs[i] === UNDEFINED) {
              this.objs[i] = this._new(this._providers[i]);
            }

            return this.objs[i];
          }
        }

        return UNDEFINED;
      }
      /** @internal */

    }, {
      key: "_throwOrNull",
      value: function _throwOrNull(key, notFoundValue) {
        if (notFoundValue !== THROW_IF_NOT_FOUND) {
          return notFoundValue;
        } else {
          throw noProviderError(this, key);
        }
      }
      /** @internal */

    }, {
      key: "_getByKeySelf",
      value: function _getByKeySelf(key, notFoundValue) {
        var obj = this._getObjByKeyId(key.id);

        return obj !== UNDEFINED ? obj : this._throwOrNull(key, notFoundValue);
      }
      /** @internal */

    }, {
      key: "_getByKeyDefault",
      value: function _getByKeyDefault(key, notFoundValue, visibility) {
        var inj;

        if (visibility instanceof SkipSelf) {
          inj = this.parent;
        } else {
          inj = this;
        }

        while (inj instanceof ReflectiveInjector_) {
          var inj_ = inj;

          var obj = inj_._getObjByKeyId(key.id);

          if (obj !== UNDEFINED) return obj;
          inj = inj_.parent;
        }

        if (inj !== null) {
          return inj.get(key.token, notFoundValue);
        } else {
          return this._throwOrNull(key, notFoundValue);
        }
      }
    }, {
      key: "toString",
      value: function toString() {
        return this.displayName;
      }
    }, {
      key: "displayName",
      get: function get() {
        var providers = _mapProviders(this, function (b) {
          return ' "' + b.key.displayName + '" ';
        }).join(', ');

        return "ReflectiveInjector(providers: [".concat(providers, "])");
      }
    }]);

    return ReflectiveInjector_;
  }();

  ReflectiveInjector_.INJECTOR_KEY = /*@__PURE__*/ReflectiveKey.get(Injector);
  return ReflectiveInjector_;
}();

function _mapProviders(injector, fn) {
  var res = [];

  for (var i = 0; i < injector._providers.length; ++i) {
    res[i] = fn(injector.getProviderAtIndex(i));
  }

  return res;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function ɵɵdirectiveInject(token) {
  var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : InjectFlags.Default;
  var lView = getLView(); // Fall back to inject() if view hasn't been created. This situation can happen in tests
  // if inject utilities are used before bootstrapping.

  if (lView === null) {
    // Verify that we will not get into infinite loop.
    ngDevMode && assertInjectImplementationNotEqual(ɵɵdirectiveInject);
    return ɵɵinject(token, flags);
  }

  var tNode = getCurrentTNode();
  return getOrCreateInjectable(tNode, lView, resolveForwardRef(token), flags);
}
/**
 * Facade for the attribute injection from DI.
 *
 * @codeGenApi
 */


function ɵɵinjectAttribute(attrNameToInject) {
  return injectAttributeImpl(getCurrentTNode(), attrNameToInject);
}
/**
 * Throws an error indicating that a factory function could not be generated by the compiler for a
 * particular class.
 *
 * This instruction allows the actual error message to be optimized away when ngDevMode is turned
 * off, saving bytes of generated code while still providing a good experience in dev mode.
 *
 * The name of the class is not mentioned here, but will be in the generated factory function name
 * and thus in the stack trace.
 *
 * @codeGenApi
 */


function ɵɵinvalidFactory() {
  var msg = ngDevMode ? "This constructor was not compatible with Dependency Injection." : 'invalid';
  throw new Error(msg);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Update a property on a selected element.
 *
 * Operates on the element selected by index via the {@link select} instruction.
 *
 * If the property name also exists as an input property on one of the element's directives,
 * the component property will be set instead of the element property. This check must
 * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled
 *
 * @param propName Name of property. Because it is going to DOM, this is not subject to
 *        renaming as part of minification.
 * @param value New value to write.
 * @param sanitizer An optional function used to sanitize the value.
 * @returns This function returns itself so that it may be chained
 * (e.g. `property('name', ctx.name)('title', ctx.title)`)
 *
 * @codeGenApi
 */


function ɵɵproperty(propName, value, sanitizer) {
  var lView = getLView();
  var bindingIndex = nextBindingIndex();

  if (bindingUpdated(lView, bindingIndex, value)) {
    var tView = getTView();
    var tNode = getSelectedTNode();
    elementPropertyInternal(tView, tNode, lView, propName, value, lView[RENDERER], sanitizer, false);
    ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, bindingIndex);
  }

  return ɵɵproperty;
}
/**
 * Given `<div style="..." my-dir>` and `MyDir` with `@Input('style')` we need to write to
 * directive input.
 */


function setDirectiveInputsWhichShadowsStyling(tView, tNode, lView, value, isClassBased) {
  var inputs = tNode.inputs;
  var property = isClassBased ? 'class' : 'style'; // We support both 'class' and `className` hence the fallback.

  setInputsForProperty(tView, lView, inputs[property], property, value);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function elementStartFirstCreatePass(index, tView, lView, native, name, attrsIndex, localRefsIndex) {
  ngDevMode && assertFirstCreatePass(tView);
  ngDevMode && ngDevMode.firstCreatePass++;
  var tViewConsts = tView.consts;
  var attrs = getConstant(tViewConsts, attrsIndex);
  var tNode = getOrCreateTNode(tView, index, 2
  /* Element */
  , name, attrs);
  var hasDirectives = resolveDirectives(tView, lView, tNode, getConstant(tViewConsts, localRefsIndex));
  ngDevMode && logUnknownElementError(tView, native, tNode, hasDirectives);

  if (tNode.attrs !== null) {
    computeStaticStyling(tNode, tNode.attrs, false);
  }

  if (tNode.mergedAttrs !== null) {
    computeStaticStyling(tNode, tNode.mergedAttrs, true);
  }

  if (tView.queries !== null) {
    tView.queries.elementStart(tView, tNode);
  }

  return tNode;
}
/**
 * Create DOM element. The instruction must later be followed by `elementEnd()` call.
 *
 * @param index Index of the element in the LView array
 * @param name Name of the DOM Node
 * @param attrsIndex Index of the element's attributes in the `consts` array.
 * @param localRefsIndex Index of the element's local references in the `consts` array.
 *
 * Attributes and localRefs are passed as an array of strings where elements with an even index
 * hold an attribute name and elements with an odd index hold an attribute value, ex.:
 * ['id', 'warning5', 'class', 'alert']
 *
 * @codeGenApi
 */


function ɵɵelementStart(index, name, attrsIndex, localRefsIndex) {
  var lView = getLView();
  var tView = getTView();
  var adjustedIndex = HEADER_OFFSET + index;
  ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'elements should be created before any bindings');
  ngDevMode && assertIndexInRange(lView, adjustedIndex);
  var renderer = lView[RENDERER];
  var native = lView[adjustedIndex] = createElementNode(renderer, name, getNamespace());
  var tNode = tView.firstCreatePass ? elementStartFirstCreatePass(adjustedIndex, tView, lView, native, name, attrsIndex, localRefsIndex) : tView.data[adjustedIndex];
  setCurrentTNode(tNode, true);
  var mergedAttrs = tNode.mergedAttrs;

  if (mergedAttrs !== null) {
    setUpAttributes(renderer, native, mergedAttrs);
  }

  var classes = tNode.classes;

  if (classes !== null) {
    writeDirectClass(renderer, native, classes);
  }

  var styles = tNode.styles;

  if (styles !== null) {
    writeDirectStyle(renderer, native, styles);
  }

  if ((tNode.flags & 64
  /* isDetached */
  ) !== 64
  /* isDetached */
  ) {
      // In the i18n case, the translation may have removed this element, so only add it if it is not
      // detached. See `TNodeType.Placeholder` and `LFrame.inI18n` for more context.
      appendChild(tView, lView, native, tNode);
    } // any immediate children of a component or template container must be pre-emptively
  // monkey-patched with the component view data so that the element can be inspected
  // later on using any element discovery utility methods (see `element_discovery.ts`)


  if (getElementDepthCount() === 0) {
    attachPatchData(native, lView);
  }

  increaseElementDepthCount();

  if (isDirectiveHost(tNode)) {
    createDirectivesInstances(tView, lView, tNode);
    executeContentQueries(tView, tNode, lView);
  }

  if (localRefsIndex !== null) {
    saveResolvedLocalsInData(lView, tNode);
  }
}
/**
 * Mark the end of the element.
 *
 * @codeGenApi
 */


function ɵɵelementEnd() {
  var currentTNode = getCurrentTNode();
  ngDevMode && assertDefined(currentTNode, 'No parent node to close.');

  if (isCurrentTNodeParent()) {
    setCurrentTNodeAsNotParent();
  } else {
    ngDevMode && assertHasParent(getCurrentTNode());
    currentTNode = currentTNode.parent;
    setCurrentTNode(currentTNode, false);
  }

  var tNode = currentTNode;
  ngDevMode && assertTNodeType(tNode, 3
  /* AnyRNode */
  );
  decreaseElementDepthCount();
  var tView = getTView();

  if (tView.firstCreatePass) {
    registerPostOrderHooks(tView, currentTNode);

    if (isContentQueryHost(currentTNode)) {
      tView.queries.elementEnd(currentTNode);
    }
  }

  if (tNode.classesWithoutHost != null && hasClassInput(tNode)) {
    setDirectiveInputsWhichShadowsStyling(tView, tNode, getLView(), tNode.classesWithoutHost, true);
  }

  if (tNode.stylesWithoutHost != null && hasStyleInput(tNode)) {
    setDirectiveInputsWhichShadowsStyling(tView, tNode, getLView(), tNode.stylesWithoutHost, false);
  }
}
/**
 * Creates an empty element using {@link elementStart} and {@link elementEnd}
 *
 * @param index Index of the element in the data array
 * @param name Name of the DOM Node
 * @param attrsIndex Index of the element's attributes in the `consts` array.
 * @param localRefsIndex Index of the element's local references in the `consts` array.
 *
 * @codeGenApi
 */


function ɵɵelement(index, name, attrsIndex, localRefsIndex) {
  ɵɵelementStart(index, name, attrsIndex, localRefsIndex);
  ɵɵelementEnd();
}

function logUnknownElementError(tView, element, tNode, hasDirectives) {
  var schemas = tView.schemas; // If `schemas` is set to `null`, that's an indication that this Component was compiled in AOT
  // mode where this check happens at compile time. In JIT mode, `schemas` is always present and
  // defined as an array (as an empty array in case `schemas` field is not defined) and we should
  // execute the check below.

  if (schemas === null) return;
  var tagName = tNode.value; // If the element matches any directive, it's considered as valid.

  if (!hasDirectives && tagName !== null) {
    // The element is unknown if it's an instance of HTMLUnknownElement or it isn't registered
    // as a custom element. Note that unknown elements with a dash in their name won't be instances
    // of HTMLUnknownElement in browsers that support web components.
    var isUnknown = // Note that we can't check for `typeof HTMLUnknownElement === 'function'`,
    // because while most browsers return 'function', IE returns 'object'.
    typeof HTMLUnknownElement !== 'undefined' && HTMLUnknownElement && element instanceof HTMLUnknownElement || typeof customElements !== 'undefined' && tagName.indexOf('-') > -1 && !customElements.get(tagName);

    if (isUnknown && !matchingSchemas(tView, tagName)) {
      var message = "'".concat(tagName, "' is not a known element:\n");
      message += "1. If '".concat(tagName, "' is an Angular component, then verify that it is part of this module.\n");

      if (tagName && tagName.indexOf('-') > -1) {
        message += "2. If '".concat(tagName, "' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.");
      } else {
        message += "2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.";
      }

      console.error(formatRuntimeError("304"
      /* UNKNOWN_ELEMENT */
      , message));
    }
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function elementContainerStartFirstCreatePass(index, tView, lView, attrsIndex, localRefsIndex) {
  ngDevMode && ngDevMode.firstCreatePass++;
  var tViewConsts = tView.consts;
  var attrs = getConstant(tViewConsts, attrsIndex);
  var tNode = getOrCreateTNode(tView, index, 8
  /* ElementContainer */
  , 'ng-container', attrs); // While ng-container doesn't necessarily support styling, we use the style context to identify
  // and execute directives on the ng-container.

  if (attrs !== null) {
    computeStaticStyling(tNode, attrs, true);
  }

  var localRefs = getConstant(tViewConsts, localRefsIndex);
  resolveDirectives(tView, lView, tNode, localRefs);

  if (tView.queries !== null) {
    tView.queries.elementStart(tView, tNode);
  }

  return tNode;
}
/**
 * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.
 * The instruction must later be followed by `elementContainerEnd()` call.
 *
 * @param index Index of the element in the LView array
 * @param attrsIndex Index of the container attributes in the `consts` array.
 * @param localRefsIndex Index of the container's local references in the `consts` array.
 *
 * Even if this instruction accepts a set of attributes no actual attribute values are propagated to
 * the DOM (as a comment node can't have attributes). Attributes are here only for directive
 * matching purposes and setting initial inputs of directives.
 *
 * @codeGenApi
 */


function ɵɵelementContainerStart(index, attrsIndex, localRefsIndex) {
  var lView = getLView();
  var tView = getTView();
  var adjustedIndex = index + HEADER_OFFSET;
  ngDevMode && assertIndexInRange(lView, adjustedIndex);
  ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'element containers should be created before any bindings');
  var tNode = tView.firstCreatePass ? elementContainerStartFirstCreatePass(adjustedIndex, tView, lView, attrsIndex, localRefsIndex) : tView.data[adjustedIndex];
  setCurrentTNode(tNode, true);
  ngDevMode && ngDevMode.rendererCreateComment++;
  var native = lView[adjustedIndex] = lView[RENDERER].createComment(ngDevMode ? 'ng-container' : '');
  appendChild(tView, lView, native, tNode);
  attachPatchData(native, lView);

  if (isDirectiveHost(tNode)) {
    createDirectivesInstances(tView, lView, tNode);
    executeContentQueries(tView, tNode, lView);
  }

  if (localRefsIndex != null) {
    saveResolvedLocalsInData(lView, tNode);
  }
}
/**
 * Mark the end of the <ng-container>.
 *
 * @codeGenApi
 */


function ɵɵelementContainerEnd() {
  var currentTNode = getCurrentTNode();
  var tView = getTView();

  if (isCurrentTNodeParent()) {
    setCurrentTNodeAsNotParent();
  } else {
    ngDevMode && assertHasParent(currentTNode);
    currentTNode = currentTNode.parent;
    setCurrentTNode(currentTNode, false);
  }

  ngDevMode && assertTNodeType(currentTNode, 8
  /* ElementContainer */
  );

  if (tView.firstCreatePass) {
    registerPostOrderHooks(tView, currentTNode);

    if (isContentQueryHost(currentTNode)) {
      tView.queries.elementEnd(currentTNode);
    }
  }
}
/**
 * Creates an empty logical container using {@link elementContainerStart}
 * and {@link elementContainerEnd}
 *
 * @param index Index of the element in the LView array
 * @param attrsIndex Index of the container attributes in the `consts` array.
 * @param localRefsIndex Index of the container's local references in the `consts` array.
 *
 * @codeGenApi
 */


function ɵɵelementContainer(index, attrsIndex, localRefsIndex) {
  ɵɵelementContainerStart(index, attrsIndex, localRefsIndex);
  ɵɵelementContainerEnd();
}
/**
 * Returns the current OpaqueViewState instance.
 *
 * Used in conjunction with the restoreView() instruction to save a snapshot
 * of the current view and restore it when listeners are invoked. This allows
 * walking the declaration view tree in listeners to get vars from parent views.
 *
 * @codeGenApi
 */


function ɵɵgetCurrentView() {
  return getLView();
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Determine if the argument is shaped like a Promise
 */


function isPromise(obj) {
  // allow any Promise/A+ compliant thenable.
  // It's up to the caller to ensure that obj.then conforms to the spec
  return !!obj && typeof obj.then === 'function';
}
/**
 * Determine if the argument is an Observable
 *
 * Strictly this tests that the `obj` is `Subscribable`, since `Observable`
 * types need additional methods, such as `lift()`. But it is adequate for our
 * needs since within the Angular framework code we only ever need to use the
 * `subscribe()` method, and RxJS has mechanisms to wrap `Subscribable` objects
 * into `Observable` as needed.
 */


function isObservable(obj) {
  return !!obj && typeof obj.subscribe === 'function';
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Adds an event listener to the current node.
 *
 * If an output exists on one of the node's directives, it also subscribes to the output
 * and saves the subscription for later cleanup.
 *
 * @param eventName Name of the event
 * @param listenerFn The function to be called when event emits
 * @param useCapture Whether or not to use capture in event listener
 * @param eventTargetResolver Function that returns global target information in case this listener
 * should be attached to a global object like window, document or body
 *
 * @codeGenApi
 */


function ɵɵlistener(eventName, listenerFn) {
  var useCapture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var eventTargetResolver = arguments.length > 3 ? arguments[3] : undefined;
  var lView = getLView();
  var tView = getTView();
  var tNode = getCurrentTNode();
  listenerInternal(tView, lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);
  return ɵɵlistener;
}
/**
 * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component or directive.
 *
 * This instruction is for compatibility purposes and is designed to ensure that a
 * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered
 * in the component's renderer. Normally all host listeners are evaluated with the
 * parent component's renderer, but, in the case of animation @triggers, they need
 * to be evaluated with the sub component's renderer (because that's where the
 * animation triggers are defined).
 *
 * Do not use this instruction as a replacement for `listener`. This instruction
 * only exists to ensure compatibility with the ViewEngine's host binding behavior.
 *
 * @param eventName Name of the event
 * @param listenerFn The function to be called when event emits
 * @param useCapture Whether or not to use capture in event listener
 * @param eventTargetResolver Function that returns global target information in case this listener
 * should be attached to a global object like window, document or body
 *
 * @codeGenApi
 */


function ɵɵsyntheticHostListener(eventName, listenerFn) {
  var useCapture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var eventTargetResolver = arguments.length > 3 ? arguments[3] : undefined;
  var tNode = getCurrentTNode();
  var lView = getLView();
  var tView = getTView();
  var currentDef = getCurrentDirectiveDef(tView.data);
  var renderer = loadComponentRenderer(currentDef, tNode, lView);
  listenerInternal(tView, lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);
  return ɵɵsyntheticHostListener;
}
/**
 * A utility function that checks if a given element has already an event handler registered for an
 * event with a specified name. The TView.cleanup data structure is used to find out which events
 * are registered for a given element.
 */


function findExistingListener(tView, lView, eventName, tNodeIdx) {
  var tCleanup = tView.cleanup;

  if (tCleanup != null) {
    for (var i = 0; i < tCleanup.length - 1; i += 2) {
      var cleanupEventName = tCleanup[i];

      if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {
        // We have found a matching event name on the same node but it might not have been
        // registered yet, so we must explicitly verify entries in the LView cleanup data
        // structures.
        var lCleanup = lView[CLEANUP];
        var listenerIdxInLCleanup = tCleanup[i + 2];
        return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;
      } // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or
      // 2-element entries (for directive and queries destroy hooks). As such we can encounter
      // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements
      // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check
      // documentation of TView.cleanup for more details of this data structure layout.


      if (typeof cleanupEventName === 'string') {
        i += 2;
      }
    }
  }

  return null;
}

function listenerInternal(tView, lView, renderer, tNode, eventName, listenerFn) {
  var useCapture = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
  var eventTargetResolver = arguments.length > 7 ? arguments[7] : undefined;
  var isTNodeDirectiveHost = isDirectiveHost(tNode);
  var firstCreatePass = tView.firstCreatePass;
  var tCleanup = firstCreatePass && (tView.cleanup || (tView.cleanup = [])); // When the ɵɵlistener instruction was generated and is executed we know that there is either a
  // native listener or a directive output on this element. As such we we know that we will have to
  // register a listener and store its cleanup function on LView.

  var lCleanup = getLCleanup(lView);
  ngDevMode && assertTNodeType(tNode, 3
  /* AnyRNode */
  | 12
  /* AnyContainer */
  );
  var processOutputs = true; // add native event listener - applicable to elements only

  if (tNode.type & 3
  /* AnyRNode */
  ) {
      var native = getNativeByTNode(tNode, lView);
      var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;
      var target = resolved.target || native;
      var lCleanupIndex = lCleanup.length;
      var idxOrTargetGetter = eventTargetResolver ? function (_lView) {
        return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target;
      } : tNode.index; // In order to match current behavior, native DOM event listeners must be added for all
      // events (including outputs).

      if (isProceduralRenderer(renderer)) {
        // There might be cases where multiple directives on the same element try to register an event
        // handler function for the same event. In this situation we want to avoid registration of
        // several native listeners as each registration would be intercepted by NgZone and
        // trigger change detection. This would mean that a single user action would result in several
        // change detections being invoked. To avoid this situation we want to have only one call to
        // native handler registration (for the same element and same type of event).
        //
        // In order to have just one native event handler in presence of multiple handler functions,
        // we just register a first handler function as a native event listener and then chain
        // (coalesce) other handler functions on top of the first native handler function.
        var existingListener = null; // Please note that the coalescing described here doesn't happen for events specifying an
        // alternative target (ex. (document:click)) - this is to keep backward compatibility with the
        // view engine.
        // Also, we don't have to search for existing listeners is there are no directives
        // matching on a given node as we can't register multiple event handlers for the same event in
        // a template (this would mean having duplicate attributes).

        if (!eventTargetResolver && isTNodeDirectiveHost) {
          existingListener = findExistingListener(tView, lView, eventName, tNode.index);
        }

        if (existingListener !== null) {
          // Attach a new listener to coalesced listeners list, maintaining the order in which
          // listeners are registered. For performance reasons, we keep a reference to the last
          // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through
          // the entire set each time we need to add a new listener.
          var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;
          lastListenerFn.__ngNextListenerFn__ = listenerFn;
          existingListener.__ngLastListenerFn__ = listenerFn;
          processOutputs = false;
        } else {
          // The first argument of `listen` function in Procedural Renderer is:
          // - either a target name (as a string) in case of global target (window, document, body)
          // - or element reference (in all other cases)
          listenerFn = wrapListener(tNode, lView, listenerFn, false
          /** preventDefault */
          );
          var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);
          ngDevMode && ngDevMode.rendererAddEventListener++;
          lCleanup.push(listenerFn, cleanupFn);
          tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);
        }
      } else {
        listenerFn = wrapListener(tNode, lView, listenerFn, true
        /** preventDefault */
        );
        target.addEventListener(eventName, listenerFn, useCapture);
        ngDevMode && ngDevMode.rendererAddEventListener++;
        lCleanup.push(listenerFn);
        tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);
      }
    } // subscribe to directive outputs


  var outputs = tNode.outputs;
  var props;

  if (processOutputs && outputs !== null && (props = outputs[eventName])) {
    var propsLength = props.length;

    if (propsLength) {
      for (var i = 0; i < propsLength; i += 2) {
        var index = props[i];
        ngDevMode && assertIndexInRange(lView, index);
        var minifiedName = props[i + 1];
        var directiveInstance = lView[index];
        var output = directiveInstance[minifiedName];

        if (ngDevMode && !isObservable(output)) {
          throw new Error("@Output ".concat(minifiedName, " not initialized in '").concat(directiveInstance.constructor.name, "'."));
        }

        var subscription = output.subscribe(listenerFn);
        var idx = lCleanup.length;
        lCleanup.push(listenerFn, subscription);
        tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));
      }
    }
  }
}

function executeListenerWithErrorHandling(lView, listenerFn, e) {
  try {
    // Only explicitly returning false from a listener should preventDefault
    return listenerFn(e) !== false;
  } catch (error) {
    handleError(lView, error);
    return false;
  }
}
/**
 * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,
 * if applicable.
 *
 * @param tNode The TNode associated with this listener
 * @param lView The LView that contains this listener
 * @param listenerFn The listener function to call
 * @param wrapWithPreventDefault Whether or not to prevent default behavior
 * (the procedural renderer does this already, so in those cases, we should skip)
 */


function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {
  // Note: we are performing most of the work in the listener function itself
  // to optimize listener registration.
  return function wrapListenerIn_markDirtyAndPreventDefault(e) {
    // Ivy uses `Function` as a special token that allows us to unwrap the function
    // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.
    if (e === Function) {
      return listenerFn;
    } // In order to be backwards compatible with View Engine, events on component host nodes
    // must also mark the component view itself dirty (i.e. the view that it owns).


    var startView = tNode.flags & 2
    /* isComponentHost */
    ? getComponentLViewByIndex(tNode.index, lView) : lView; // See interfaces/view.ts for more on LViewFlags.ManualOnPush

    if ((lView[FLAGS] & 32
    /* ManualOnPush */
    ) === 0) {
      markViewDirty(startView);
    }

    var result = executeListenerWithErrorHandling(lView, listenerFn, e); // A just-invoked listener function might have coalesced listeners so we need to check for
    // their presence and invoke as needed.

    var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;

    while (nextListenerFn) {
      // We should prevent default if any of the listeners explicitly return false
      result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;
      nextListenerFn = nextListenerFn.__ngNextListenerFn__;
    }

    if (wrapWithPreventDefault && result === false) {
      e.preventDefault(); // Necessary for legacy browsers that don't support preventDefault (e.g. IE)

      e.returnValue = false;
    }

    return result;
  };
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Retrieves a context at the level specified and saves it as the global, contextViewData.
 * Will get the next level up if level is not specified.
 *
 * This is used to save contexts of parent views so they can be bound in embedded views, or
 * in conjunction with reference() to bind a ref from a parent view.
 *
 * @param level The relative level of the view from which to grab context compared to contextVewData
 * @returns context
 *
 * @codeGenApi
 */


function ɵɵnextContext() {
  var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
  return nextContextImpl(level);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Checks a given node against matching projection slots and returns the
 * determined slot index. Returns "null" if no slot matched the given node.
 *
 * This function takes into account the parsed ngProjectAs selector from the
 * node's attributes. If present, it will check whether the ngProjectAs selector
 * matches any of the projection slot selectors.
 */


function matchingProjectionSlotIndex(tNode, projectionSlots) {
  var wildcardNgContentIndex = null;
  var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);

  for (var i = 0; i < projectionSlots.length; i++) {
    var slotValue = projectionSlots[i]; // The last wildcard projection slot should match all nodes which aren't matching
    // any selector. This is necessary to be backwards compatible with view engine.

    if (slotValue === '*') {
      wildcardNgContentIndex = i;
      continue;
    } // If we ran into an `ngProjectAs` attribute, we should match its parsed selector
    // to the list of selectors, otherwise we fall back to matching against the node.


    if (ngProjectAsAttrVal === null ? isNodeMatchingSelectorList(tNode, slotValue,
    /* isProjectionMode */
    true) : isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {
      return i; // first matching selector "captures" a given node
    }
  }

  return wildcardNgContentIndex;
}
/**
 * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.
 * It takes all the selectors from the entire component's template and decides where
 * each projected node belongs (it re-distributes nodes among "buckets" where each "bucket" is
 * backed by a selector).
 *
 * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,
 * un-parsed form.
 *
 * The parsed form is needed for efficient matching of a node against a given CSS selector.
 * The un-parsed, textual form is needed for support of the ngProjectAs attribute.
 *
 * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more
 * drawbacks:
 * - having only a textual form would require runtime parsing of CSS selectors;
 * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a
 * template author).
 *
 * @param projectionSlots? A collection of projection slots. A projection slot can be based
 *        on a parsed CSS selectors or set to the wildcard selector ("*") in order to match
 *        all nodes which do not match any selector. If not specified, a single wildcard
 *        selector projection slot will be defined.
 *
 * @codeGenApi
 */


function ɵɵprojectionDef(projectionSlots) {
  var componentNode = getLView()[DECLARATION_COMPONENT_VIEW][T_HOST];

  if (!componentNode.projection) {
    // If no explicit projection slots are defined, fall back to a single
    // projection slot with the wildcard selector.
    var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;
    var projectionHeads = componentNode.projection = newArray(numProjectionSlots, null);
    var tails = projectionHeads.slice();
    var componentChild = componentNode.child;

    while (componentChild !== null) {
      var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;

      if (slotIndex !== null) {
        if (tails[slotIndex]) {
          tails[slotIndex].projectionNext = componentChild;
        } else {
          projectionHeads[slotIndex] = componentChild;
        }

        tails[slotIndex] = componentChild;
      }

      componentChild = componentChild.next;
    }
  }
}
/**
 * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call
 * to the projectionDef instruction.
 *
 * @param nodeIndex
 * @param selectorIndex:
 *        - 0 when the selector is `*` (or unspecified as this is the default value),
 *        - 1 based index of the selector from the {@link projectionDef}
 *
 * @codeGenApi
 */


function ɵɵprojection(nodeIndex) {
  var selectorIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var attrs = arguments.length > 2 ? arguments[2] : undefined;
  var lView = getLView();
  var tView = getTView();
  var tProjectionNode = getOrCreateTNode(tView, HEADER_OFFSET + nodeIndex, 16
  /* Projection */
  , null, attrs || null); // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.

  if (tProjectionNode.projection === null) tProjectionNode.projection = selectorIndex; // `<ng-content>` has no content

  setCurrentTNodeAsNotParent();

  if ((tProjectionNode.flags & 64
  /* isDetached */
  ) !== 64
  /* isDetached */
  ) {
      // re-distribution of projectable nodes is stored on a component's view level
      applyProjection(tView, lView, tProjectionNode);
    }
}
/**
 *
 * Update an interpolated property on an element with a lone bound value
 *
 * Used when the value passed to a property has 1 interpolated value in it, an no additional text
 * surrounds that interpolated value:
 *
 * ```html
 * <div title="{{v0}}"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵpropertyInterpolate('title', v0);
 * ```
 *
 * If the property name also exists as an input property on one of the element's directives,
 * the component property will be set instead of the element property. This check must
 * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
 *
 * @param propName The name of the property to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵpropertyInterpolate(propName, v0, sanitizer) {
  ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);
  return ɵɵpropertyInterpolate;
}
/**
 *
 * Update an interpolated property on an element with single bound value surrounded by text.
 *
 * Used when the value passed to a property has 1 interpolated value in it:
 *
 * ```html
 * <div title="prefix{{v0}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');
 * ```
 *
 * If the property name also exists as an input property on one of the element's directives,
 * the component property will be set instead of the element property. This check must
 * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
 *
 * @param propName The name of the property to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {
  var lView = getLView();
  var interpolatedValue = interpolation1(lView, prefix, v0, suffix);

  if (interpolatedValue !== NO_CHANGE) {
    var tView = getTView();
    var tNode = getSelectedTNode();
    elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);
    ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 1, prefix, suffix);
  }

  return ɵɵpropertyInterpolate1;
}
/**
 *
 * Update an interpolated property on an element with 2 bound values surrounded by text.
 *
 * Used when the value passed to a property has 2 interpolated values in it:
 *
 * ```html
 * <div title="prefix{{v0}}-{{v1}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');
 * ```
 *
 * If the property name also exists as an input property on one of the element's directives,
 * the component property will be set instead of the element property. This check must
 * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
 *
 * @param propName The name of the property to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {
  var lView = getLView();
  var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);

  if (interpolatedValue !== NO_CHANGE) {
    var tView = getTView();
    var tNode = getSelectedTNode();
    elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);
    ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 2, prefix, i0, suffix);
  }

  return ɵɵpropertyInterpolate2;
}
/**
 *
 * Update an interpolated property on an element with 3 bound values surrounded by text.
 *
 * Used when the value passed to a property has 3 interpolated values in it:
 *
 * ```html
 * <div title="prefix{{v0}}-{{v1}}-{{v2}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵpropertyInterpolate3(
 * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');
 * ```
 *
 * If the property name also exists as an input property on one of the element's directives,
 * the component property will be set instead of the element property. This check must
 * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
 *
 * @param propName The name of the property to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {
  var lView = getLView();
  var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);

  if (interpolatedValue !== NO_CHANGE) {
    var tView = getTView();
    var tNode = getSelectedTNode();
    elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);
    ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 3, prefix, i0, i1, suffix);
  }

  return ɵɵpropertyInterpolate3;
}
/**
 *
 * Update an interpolated property on an element with 4 bound values surrounded by text.
 *
 * Used when the value passed to a property has 4 interpolated values in it:
 *
 * ```html
 * <div title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵpropertyInterpolate4(
 * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');
 * ```
 *
 * If the property name also exists as an input property on one of the element's directives,
 * the component property will be set instead of the element property. This check must
 * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
 *
 * @param propName The name of the property to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {
  var lView = getLView();
  var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);

  if (interpolatedValue !== NO_CHANGE) {
    var tView = getTView();
    var tNode = getSelectedTNode();
    elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);
    ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);
  }

  return ɵɵpropertyInterpolate4;
}
/**
 *
 * Update an interpolated property on an element with 5 bound values surrounded by text.
 *
 * Used when the value passed to a property has 5 interpolated values in it:
 *
 * ```html
 * <div title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵpropertyInterpolate5(
 * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');
 * ```
 *
 * If the property name also exists as an input property on one of the element's directives,
 * the component property will be set instead of the element property. This check must
 * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
 *
 * @param propName The name of the property to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {
  var lView = getLView();
  var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);

  if (interpolatedValue !== NO_CHANGE) {
    var tView = getTView();
    var tNode = getSelectedTNode();
    elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);
    ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);
  }

  return ɵɵpropertyInterpolate5;
}
/**
 *
 * Update an interpolated property on an element with 6 bound values surrounded by text.
 *
 * Used when the value passed to a property has 6 interpolated values in it:
 *
 * ```html
 * <div title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵpropertyInterpolate6(
 *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');
 * ```
 *
 * If the property name also exists as an input property on one of the element's directives,
 * the component property will be set instead of the element property. This check must
 * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
 *
 * @param propName The name of the property to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param i4 Static value used for concatenation only.
 * @param v5 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {
  var lView = getLView();
  var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);

  if (interpolatedValue !== NO_CHANGE) {
    var tView = getTView();
    var tNode = getSelectedTNode();
    elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);
    ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);
  }

  return ɵɵpropertyInterpolate6;
}
/**
 *
 * Update an interpolated property on an element with 7 bound values surrounded by text.
 *
 * Used when the value passed to a property has 7 interpolated values in it:
 *
 * ```html
 * <div title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵpropertyInterpolate7(
 *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');
 * ```
 *
 * If the property name also exists as an input property on one of the element's directives,
 * the component property will be set instead of the element property. This check must
 * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
 *
 * @param propName The name of the property to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param i4 Static value used for concatenation only.
 * @param v5 Value checked for change.
 * @param i5 Static value used for concatenation only.
 * @param v6 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {
  var lView = getLView();
  var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);

  if (interpolatedValue !== NO_CHANGE) {
    var tView = getTView();
    var tNode = getSelectedTNode();
    elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);
    ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);
  }

  return ɵɵpropertyInterpolate7;
}
/**
 *
 * Update an interpolated property on an element with 8 bound values surrounded by text.
 *
 * Used when the value passed to a property has 8 interpolated values in it:
 *
 * ```html
 * <div title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵpropertyInterpolate8(
 *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');
 * ```
 *
 * If the property name also exists as an input property on one of the element's directives,
 * the component property will be set instead of the element property. This check must
 * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
 *
 * @param propName The name of the property to update
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param i4 Static value used for concatenation only.
 * @param v5 Value checked for change.
 * @param i5 Static value used for concatenation only.
 * @param v6 Value checked for change.
 * @param i6 Static value used for concatenation only.
 * @param v7 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {
  var lView = getLView();
  var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);

  if (interpolatedValue !== NO_CHANGE) {
    var tView = getTView();
    var tNode = getSelectedTNode();
    elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);
    ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);
  }

  return ɵɵpropertyInterpolate8;
}
/**
 * Update an interpolated property on an element with 9 or more bound values surrounded by text.
 *
 * Used when the number of interpolated values exceeds 8.
 *
 * ```html
 * <div
 *  title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix"></div>
 * ```
 *
 * Its compiled representation is::
 *
 * ```ts
 * ɵɵpropertyInterpolateV(
 *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,
 *  'suffix']);
 * ```
 *
 * If the property name also exists as an input property on one of the element's directives,
 * the component property will be set instead of the element property. This check must
 * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
 *
 * @param propName The name of the property to update.
 * @param values The collection of values and the strings inbetween those values, beginning with a
 * string prefix and ending with a string suffix.
 * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)
 * @param sanitizer An optional sanitizer function
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵpropertyInterpolateV(propName, values, sanitizer) {
  var lView = getLView();
  var interpolatedValue = interpolationV(lView, values);

  if (interpolatedValue !== NO_CHANGE) {
    var tView = getTView();
    var tNode = getSelectedTNode();
    elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);

    if (ngDevMode) {
      var interpolationInBetween = [values[0]]; // prefix

      for (var i = 2; i < values.length; i += 2) {
        interpolationInBetween.push(values[i]);
      }

      storePropertyBindingMetadata.apply(void 0, [tView.data, tNode, propName, getBindingIndex() - interpolationInBetween.length + 1].concat(interpolationInBetween));
    }
  }

  return ɵɵpropertyInterpolateV;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * This file contains reuseable "empty" symbols that can be used as default return values
 * in different parts of the rendering code. Because the same symbols are returned, this
 * allows for identity checks against these values to be consistently used by the framework
 * code.
 */


var EMPTY_OBJ$1 = {};
var EMPTY_ARRAY$3 = []; // freezing the values prevents any code from accidentally inserting new values in

if ((typeof ngDevMode === 'undefined' || ngDevMode) && /*@__PURE__*/initNgDevMode()) {
  // These property accesses can be ignored because ngDevMode will be set to false
  // when optimizing code and the whole if statement will be dropped.
  // tslint:disable-next-line:no-toplevel-property-access

  /*@__PURE__*/
  Object.freeze(EMPTY_OBJ$1); // tslint:disable-next-line:no-toplevel-property-access

  /*@__PURE__*/

  Object.freeze(EMPTY_ARRAY$3);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * NOTE: The word `styling` is used interchangeably as style or class styling.
 *
 * This file contains code to link styling instructions together so that they can be replayed in
 * priority order. The file exists because Ivy styling instruction execution order does not match
 * that of the priority order. The purpose of this code is to create a linked list so that the
 * instructions can be traversed in priority order when computing the styles.
 *
 * Assume we are dealing with the following code:
 * ```
 * @Component({
 *   template: `
 *     <my-cmp [style]=" {color: '#001'} "
 *             [style.color]=" #002 "
 *             dir-style-color-1
 *             dir-style-color-2> `
 * })
 * class ExampleComponent {
 *   static ngComp = ... {
 *     ...
 *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`
 *     ɵɵstyleMap({color: '#001'});
 *     ɵɵstyleProp('color', '#002');
 *     ...
 *   }
 * }
 *
 * @Directive({
 *   selector: `[dir-style-color-1]',
 * })
 * class Style1Directive {
 *   @HostBinding('style') style = {color: '#005'};
 *   @HostBinding('style.color') color = '#006';
 *
 *   static ngDir = ... {
 *     ...
 *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`
 *     ɵɵstyleMap({color: '#005'});
 *     ɵɵstyleProp('color', '#006');
 *     ...
 *   }
 * }
 *
 * @Directive({
 *   selector: `[dir-style-color-2]',
 * })
 * class Style2Directive {
 *   @HostBinding('style') style = {color: '#007'};
 *   @HostBinding('style.color') color = '#008';
 *
 *   static ngDir = ... {
 *     ...
 *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`
 *     ɵɵstyleMap({color: '#007'});
 *     ɵɵstyleProp('color', '#008');
 *     ...
 *   }
 * }
 *
 * @Directive({
 *   selector: `my-cmp',
 * })
 * class MyComponent {
 *   @HostBinding('style') style = {color: '#003'};
 *   @HostBinding('style.color') color = '#004';
 *
 *   static ngComp = ... {
 *     ...
 *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`
 *     ɵɵstyleMap({color: '#003'});
 *     ɵɵstyleProp('color', '#004');
 *     ...
 *   }
 * }
 * ```
 *
 * The Order of instruction execution is:
 *
 * NOTE: the comment binding location is for illustrative purposes only.
 *
 * ```
 * // Template: (ExampleComponent)
 *     ɵɵstyleMap({color: '#001'});   // Binding index: 10
 *     ɵɵstyleProp('color', '#002');  // Binding index: 12
 * // MyComponent
 *     ɵɵstyleMap({color: '#003'});   // Binding index: 20
 *     ɵɵstyleProp('color', '#004');  // Binding index: 22
 * // Style1Directive
 *     ɵɵstyleMap({color: '#005'});   // Binding index: 24
 *     ɵɵstyleProp('color', '#006');  // Binding index: 26
 * // Style2Directive
 *     ɵɵstyleMap({color: '#007'});   // Binding index: 28
 *     ɵɵstyleProp('color', '#008');  // Binding index: 30
 * ```
 *
 * The correct priority order of concatenation is:
 *
 * ```
 * // MyComponent
 *     ɵɵstyleMap({color: '#003'});   // Binding index: 20
 *     ɵɵstyleProp('color', '#004');  // Binding index: 22
 * // Style1Directive
 *     ɵɵstyleMap({color: '#005'});   // Binding index: 24
 *     ɵɵstyleProp('color', '#006');  // Binding index: 26
 * // Style2Directive
 *     ɵɵstyleMap({color: '#007'});   // Binding index: 28
 *     ɵɵstyleProp('color', '#008');  // Binding index: 30
 * // Template: (ExampleComponent)
 *     ɵɵstyleMap({color: '#001'});   // Binding index: 10
 *     ɵɵstyleProp('color', '#002');  // Binding index: 12
 * ```
 *
 * What color should be rendered?
 *
 * Once the items are correctly sorted in the list, the answer is simply the last item in the
 * concatenation list which is `#002`.
 *
 * To do so we keep a linked list of all of the bindings which pertain to this element.
 * Notice that the bindings are inserted in the order of execution, but the `TView.data` allows
 * us to traverse them in the order of priority.
 *
 * |Idx|`TView.data`|`LView`          | Notes
 * |---|------------|-----------------|--------------
 * |...|            |                 |
 * |10 |`null`      |`{color: '#001'}`| `ɵɵstyleMap('color', {color: '#001'})`
 * |11 |`30 | 12`   | ...             |
 * |12 |`color`     |`'#002'`         | `ɵɵstyleProp('color', '#002')`
 * |13 |`10 | 0`    | ...             |
 * |...|            |                 |
 * |20 |`null`      |`{color: '#003'}`| `ɵɵstyleMap('color', {color: '#003'})`
 * |21 |`0 | 22`    | ...             |
 * |22 |`color`     |`'#004'`         | `ɵɵstyleProp('color', '#004')`
 * |23 |`20 | 24`   | ...             |
 * |24 |`null`      |`{color: '#005'}`| `ɵɵstyleMap('color', {color: '#005'})`
 * |25 |`22 | 26`   | ...             |
 * |26 |`color`     |`'#006'`         | `ɵɵstyleProp('color', '#006')`
 * |27 |`24 | 28`   | ...             |
 * |28 |`null`      |`{color: '#007'}`| `ɵɵstyleMap('color', {color: '#007'})`
 * |29 |`26 | 30`   | ...             |
 * |30 |`color`     |`'#008'`         | `ɵɵstyleProp('color', '#008')`
 * |31 |`28 | 10`   | ...             |
 *
 * The above data structure allows us to re-concatenate the styling no matter which data binding
 * changes.
 *
 * NOTE: in addition to keeping track of next/previous index the `TView.data` also stores prev/next
 * duplicate bit. The duplicate bit if true says there either is a binding with the same name or
 * there is a map (which may contain the name). This information is useful in knowing if other
 * styles with higher priority need to be searched for overwrites.
 *
 * NOTE: See `should support example in 'tnode_linked_list.ts' documentation` in
 * `tnode_linked_list_spec.ts` for working example.
 */


var __unused_const_as_closure_does_not_like_standalone_comment_blocks__;
/**
 * Insert new `tStyleValue` at `TData` and link existing style bindings such that we maintain linked
 * list of styles and compute the duplicate flag.
 *
 * Note: this function is executed during `firstUpdatePass` only to populate the `TView.data`.
 *
 * The function works by keeping track of `tStylingRange` which contains two pointers pointing to
 * the head/tail of the template portion of the styles.
 *  - if `isHost === false` (we are template) then insertion is at tail of `TStylingRange`
 *  - if `isHost === true` (we are host binding) then insertion is at head of `TStylingRange`
 *
 * @param tData The `TData` to insert into.
 * @param tNode `TNode` associated with the styling element.
 * @param tStylingKey See `TStylingKey`.
 * @param index location of where `tStyleValue` should be stored (and linked into list.)
 * @param isHostBinding `true` if the insertion is for a `hostBinding`. (insertion is in front of
 *               template.)
 * @param isClassBinding True if the associated `tStylingKey` as a `class` styling.
 *                       `tNode.classBindings` should be used (or `tNode.styleBindings` otherwise.)
 */


function insertTStylingBinding(tData, tNode, tStylingKeyWithStatic, index, isHostBinding, isClassBinding) {
  ngDevMode && assertFirstUpdatePass(getTView());
  var tBindings = isClassBinding ? tNode.classBindings : tNode.styleBindings;
  var tmplHead = getTStylingRangePrev(tBindings);
  var tmplTail = getTStylingRangeNext(tBindings);
  tData[index] = tStylingKeyWithStatic;
  var isKeyDuplicateOfStatic = false;
  var tStylingKey;

  if (Array.isArray(tStylingKeyWithStatic)) {
    // We are case when the `TStylingKey` contains static fields as well.
    var staticKeyValueArray = tStylingKeyWithStatic;
    tStylingKey = staticKeyValueArray[1]; // unwrap.
    // We need to check if our key is present in the static so that we can mark it as duplicate.

    if (tStylingKey === null || keyValueArrayIndexOf(staticKeyValueArray, tStylingKey) > 0) {
      // tStylingKey is present in the statics, need to mark it as duplicate.
      isKeyDuplicateOfStatic = true;
    }
  } else {
    tStylingKey = tStylingKeyWithStatic;
  }

  if (isHostBinding) {
    // We are inserting host bindings
    // If we don't have template bindings then `tail` is 0.
    var hasTemplateBindings = tmplTail !== 0; // This is important to know because that means that the `head` can't point to the first
    // template bindings (there are none.) Instead the head points to the tail of the template.

    if (hasTemplateBindings) {
      // template head's "prev" will point to last host binding or to 0 if no host bindings yet
      var previousNode = getTStylingRangePrev(tData[tmplHead + 1]);
      tData[index + 1] = toTStylingRange(previousNode, tmplHead); // if a host binding has already been registered, we need to update the next of that host
      // binding to point to this one

      if (previousNode !== 0) {
        // We need to update the template-tail value to point to us.
        tData[previousNode + 1] = setTStylingRangeNext(tData[previousNode + 1], index);
      } // The "previous" of the template binding head should point to this host binding


      tData[tmplHead + 1] = setTStylingRangePrev(tData[tmplHead + 1], index);
    } else {
      tData[index + 1] = toTStylingRange(tmplHead, 0); // if a host binding has already been registered, we need to update the next of that host
      // binding to point to this one

      if (tmplHead !== 0) {
        // We need to update the template-tail value to point to us.
        tData[tmplHead + 1] = setTStylingRangeNext(tData[tmplHead + 1], index);
      } // if we don't have template, the head points to template-tail, and needs to be advanced.


      tmplHead = index;
    }
  } else {
    // We are inserting in template section.
    // We need to set this binding's "previous" to the current template tail
    tData[index + 1] = toTStylingRange(tmplTail, 0);
    ngDevMode && assertEqual(tmplHead !== 0 && tmplTail === 0, false, 'Adding template bindings after hostBindings is not allowed.');

    if (tmplHead === 0) {
      tmplHead = index;
    } else {
      // We need to update the previous value "next" to point to this binding
      tData[tmplTail + 1] = setTStylingRangeNext(tData[tmplTail + 1], index);
    }

    tmplTail = index;
  } // Now we need to update / compute the duplicates.
  // Starting with our location search towards head (least priority)


  if (isKeyDuplicateOfStatic) {
    tData[index + 1] = setTStylingRangePrevDuplicate(tData[index + 1]);
  }

  markDuplicates(tData, tStylingKey, index, true, isClassBinding);
  markDuplicates(tData, tStylingKey, index, false, isClassBinding);
  markDuplicateOfResidualStyling(tNode, tStylingKey, tData, index, isClassBinding);
  tBindings = toTStylingRange(tmplHead, tmplTail);

  if (isClassBinding) {
    tNode.classBindings = tBindings;
  } else {
    tNode.styleBindings = tBindings;
  }
}
/**
 * Look into the residual styling to see if the current `tStylingKey` is duplicate of residual.
 *
 * @param tNode `TNode` where the residual is stored.
 * @param tStylingKey `TStylingKey` to store.
 * @param tData `TData` associated with the current `LView`.
 * @param index location of where `tStyleValue` should be stored (and linked into list.)
 * @param isClassBinding True if the associated `tStylingKey` as a `class` styling.
 *                       `tNode.classBindings` should be used (or `tNode.styleBindings` otherwise.)
 */


function markDuplicateOfResidualStyling(tNode, tStylingKey, tData, index, isClassBinding) {
  var residual = isClassBinding ? tNode.residualClasses : tNode.residualStyles;

  if (residual != null
  /* or undefined */
  && typeof tStylingKey == 'string' && keyValueArrayIndexOf(residual, tStylingKey) >= 0) {
    // We have duplicate in the residual so mark ourselves as duplicate.
    tData[index + 1] = setTStylingRangeNextDuplicate(tData[index + 1]);
  }
}
/**
 * Marks `TStyleValue`s as duplicates if another style binding in the list has the same
 * `TStyleValue`.
 *
 * NOTE: this function is intended to be called twice once with `isPrevDir` set to `true` and once
 * with it set to `false` to search both the previous as well as next items in the list.
 *
 * No duplicate case
 * ```
 *   [style.color]
 *   [style.width.px] <<- index
 *   [style.height.px]
 * ```
 *
 * In the above case adding `[style.width.px]` to the existing `[style.color]` produces no
 * duplicates because `width` is not found in any other part of the linked list.
 *
 * Duplicate case
 * ```
 *   [style.color]
 *   [style.width.em]
 *   [style.width.px] <<- index
 * ```
 * In the above case adding `[style.width.px]` will produce a duplicate with `[style.width.em]`
 * because `width` is found in the chain.
 *
 * Map case 1
 * ```
 *   [style.width.px]
 *   [style.color]
 *   [style]  <<- index
 * ```
 * In the above case adding `[style]` will produce a duplicate with any other bindings because
 * `[style]` is a Map and as such is fully dynamic and could produce `color` or `width`.
 *
 * Map case 2
 * ```
 *   [style]
 *   [style.width.px]
 *   [style.color]  <<- index
 * ```
 * In the above case adding `[style.color]` will produce a duplicate because there is already a
 * `[style]` binding which is a Map and as such is fully dynamic and could produce `color` or
 * `width`.
 *
 * NOTE: Once `[style]` (Map) is added into the system all things are mapped as duplicates.
 * NOTE: We use `style` as example, but same logic is applied to `class`es as well.
 *
 * @param tData `TData` where the linked list is stored.
 * @param tStylingKey `TStylingKeyPrimitive` which contains the value to compare to other keys in
 *        the linked list.
 * @param index Starting location in the linked list to search from
 * @param isPrevDir Direction.
 *        - `true` for previous (lower priority);
 *        - `false` for next (higher priority).
 */


function markDuplicates(tData, tStylingKey, index, isPrevDir, isClassBinding) {
  var tStylingAtIndex = tData[index + 1];
  var isMap = tStylingKey === null;
  var cursor = isPrevDir ? getTStylingRangePrev(tStylingAtIndex) : getTStylingRangeNext(tStylingAtIndex);
  var foundDuplicate = false; // We keep iterating as long as we have a cursor
  // AND either:
  // - we found what we are looking for, OR
  // - we are a map in which case we have to continue searching even after we find what we were
  //   looking for since we are a wild card and everything needs to be flipped to duplicate.

  while (cursor !== 0 && (foundDuplicate === false || isMap)) {
    ngDevMode && assertIndexInRange(tData, cursor);
    var tStylingValueAtCursor = tData[cursor];
    var tStyleRangeAtCursor = tData[cursor + 1];

    if (isStylingMatch(tStylingValueAtCursor, tStylingKey)) {
      foundDuplicate = true;
      tData[cursor + 1] = isPrevDir ? setTStylingRangeNextDuplicate(tStyleRangeAtCursor) : setTStylingRangePrevDuplicate(tStyleRangeAtCursor);
    }

    cursor = isPrevDir ? getTStylingRangePrev(tStyleRangeAtCursor) : getTStylingRangeNext(tStyleRangeAtCursor);
  }

  if (foundDuplicate) {
    // if we found a duplicate, than mark ourselves.
    tData[index + 1] = isPrevDir ? setTStylingRangePrevDuplicate(tStylingAtIndex) : setTStylingRangeNextDuplicate(tStylingAtIndex);
  }
}
/**
 * Determines if two `TStylingKey`s are a match.
 *
 * When computing whether a binding contains a duplicate, we need to compare if the instruction
 * `TStylingKey` has a match.
 *
 * Here are examples of `TStylingKey`s which match given `tStylingKeyCursor` is:
 * - `color`
 *    - `color`    // Match another color
 *    - `null`     // That means that `tStylingKey` is a `classMap`/`styleMap` instruction
 *    - `['', 'color', 'other', true]` // wrapped `color` so match
 *    - `['', null, 'other', true]`       // wrapped `null` so match
 *    - `['', 'width', 'color', 'value']` // wrapped static value contains a match on `'color'`
 * - `null`       // `tStylingKeyCursor` always match as it is `classMap`/`styleMap` instruction
 *
 * @param tStylingKeyCursor
 * @param tStylingKey
 */


function isStylingMatch(tStylingKeyCursor, tStylingKey) {
  ngDevMode && assertNotEqual(Array.isArray(tStylingKey), true, 'Expected that \'tStylingKey\' has been unwrapped');

  if (tStylingKeyCursor === null || // If the cursor is `null` it means that we have map at that
  // location so we must assume that we have a match.
  tStylingKey == null || // If `tStylingKey` is `null` then it is a map therefor assume that it
  // contains a match.
  (Array.isArray(tStylingKeyCursor) ? tStylingKeyCursor[1] : tStylingKeyCursor) === tStylingKey // If the keys match explicitly than we are a match.
  ) {
      return true;
    } else if (Array.isArray(tStylingKeyCursor) && typeof tStylingKey === 'string') {
    // if we did not find a match, but `tStylingKeyCursor` is `KeyValueArray` that means cursor has
    // statics and we need to check those as well.
    return keyValueArrayIndexOf(tStylingKeyCursor, tStylingKey) >= 0; // see if we are matching the key
  }

  return false;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Global state of the parser. (This makes parser non-reentrant, but that is not an issue)


var parserState = {
  textEnd: 0,
  key: 0,
  keyEnd: 0,
  value: 0,
  valueEnd: 0
};
/**
 * Retrieves the last parsed `key` of style.
 * @param text the text to substring the key from.
 */

function getLastParsedKey(text) {
  return text.substring(parserState.key, parserState.keyEnd);
}
/**
 * Retrieves the last parsed `value` of style.
 * @param text the text to substring the key from.
 */


function getLastParsedValue(text) {
  return text.substring(parserState.value, parserState.valueEnd);
}
/**
 * Initializes `className` string for parsing and parses the first token.
 *
 * This function is intended to be used in this format:
 * ```
 * for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {
 *   const key = getLastParsedKey();
 *   ...
 * }
 * ```
 * @param text `className` to parse
 * @returns index where the next invocation of `parseClassNameNext` should resume.
 */


function parseClassName(text) {
  resetParserState(text);
  return parseClassNameNext(text, consumeWhitespace(text, 0, parserState.textEnd));
}
/**
 * Parses next `className` token.
 *
 * This function is intended to be used in this format:
 * ```
 * for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {
 *   const key = getLastParsedKey();
 *   ...
 * }
 * ```
 *
 * @param text `className` to parse
 * @param index where the parsing should resume.
 * @returns index where the next invocation of `parseClassNameNext` should resume.
 */


function parseClassNameNext(text, index) {
  var end = parserState.textEnd;

  if (end === index) {
    return -1;
  }

  index = parserState.keyEnd = consumeClassToken(text, parserState.key = index, end);
  return consumeWhitespace(text, index, end);
}
/**
 * Initializes `cssText` string for parsing and parses the first key/values.
 *
 * This function is intended to be used in this format:
 * ```
 * for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i))) {
 *   const key = getLastParsedKey();
 *   const value = getLastParsedValue();
 *   ...
 * }
 * ```
 * @param text `cssText` to parse
 * @returns index where the next invocation of `parseStyleNext` should resume.
 */


function parseStyle(text) {
  resetParserState(text);
  return parseStyleNext(text, consumeWhitespace(text, 0, parserState.textEnd));
}
/**
 * Parses the next `cssText` key/values.
 *
 * This function is intended to be used in this format:
 * ```
 * for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i))) {
 *   const key = getLastParsedKey();
 *   const value = getLastParsedValue();
 *   ...
 * }
 *
 * @param text `cssText` to parse
 * @param index where the parsing should resume.
 * @returns index where the next invocation of `parseStyleNext` should resume.
 */


function parseStyleNext(text, startIndex) {
  var end = parserState.textEnd;
  var index = parserState.key = consumeWhitespace(text, startIndex, end);

  if (end === index) {
    // we reached an end so just quit
    return -1;
  }

  index = parserState.keyEnd = consumeStyleKey(text, index, end);
  index = consumeSeparator(text, index, end, 58
  /* COLON */
  );
  index = parserState.value = consumeWhitespace(text, index, end);
  index = parserState.valueEnd = consumeStyleValue(text, index, end);
  return consumeSeparator(text, index, end, 59
  /* SEMI_COLON */
  );
}
/**
 * Reset the global state of the styling parser.
 * @param text The styling text to parse.
 */


function resetParserState(text) {
  parserState.key = 0;
  parserState.keyEnd = 0;
  parserState.value = 0;
  parserState.valueEnd = 0;
  parserState.textEnd = text.length;
}
/**
 * Returns index of next non-whitespace character.
 *
 * @param text Text to scan
 * @param startIndex Starting index of character where the scan should start.
 * @param endIndex Ending index of character where the scan should end.
 * @returns Index of next non-whitespace character (May be the same as `start` if no whitespace at
 *          that location.)
 */


function consumeWhitespace(text, startIndex, endIndex) {
  while (startIndex < endIndex && text.charCodeAt(startIndex) <= 32
  /* SPACE */
  ) {
    startIndex++;
  }

  return startIndex;
}
/**
 * Returns index of last char in class token.
 *
 * @param text Text to scan
 * @param startIndex Starting index of character where the scan should start.
 * @param endIndex Ending index of character where the scan should end.
 * @returns Index after last char in class token.
 */


function consumeClassToken(text, startIndex, endIndex) {
  while (startIndex < endIndex && text.charCodeAt(startIndex) > 32
  /* SPACE */
  ) {
    startIndex++;
  }

  return startIndex;
}
/**
 * Consumes all of the characters belonging to style key and token.
 *
 * @param text Text to scan
 * @param startIndex Starting index of character where the scan should start.
 * @param endIndex Ending index of character where the scan should end.
 * @returns Index after last style key character.
 */


function consumeStyleKey(text, startIndex, endIndex) {
  var ch;

  while (startIndex < endIndex && ((ch = text.charCodeAt(startIndex)) === 45
  /* DASH */
  || ch === 95
  /* UNDERSCORE */
  || (ch & -33
  /* UPPER_CASE */
  ) >= 65
  /* A */
  && (ch & -33
  /* UPPER_CASE */
  ) <= 90
  /* Z */
  || ch >= 48
  /* ZERO */
  && ch <= 57
  /* NINE */
  )) {
    startIndex++;
  }

  return startIndex;
}
/**
 * Consumes all whitespace and the separator `:` after the style key.
 *
 * @param text Text to scan
 * @param startIndex Starting index of character where the scan should start.
 * @param endIndex Ending index of character where the scan should end.
 * @returns Index after separator and surrounding whitespace.
 */


function consumeSeparator(text, startIndex, endIndex, separator) {
  startIndex = consumeWhitespace(text, startIndex, endIndex);

  if (startIndex < endIndex) {
    if (ngDevMode && text.charCodeAt(startIndex) !== separator) {
      malformedStyleError(text, String.fromCharCode(separator), startIndex);
    }

    startIndex++;
  }

  return startIndex;
}
/**
 * Consumes style value honoring `url()` and `""` text.
 *
 * @param text Text to scan
 * @param startIndex Starting index of character where the scan should start.
 * @param endIndex Ending index of character where the scan should end.
 * @returns Index after last style value character.
 */


function consumeStyleValue(text, startIndex, endIndex) {
  var ch1 = -1; // 1st previous character

  var ch2 = -1; // 2nd previous character

  var ch3 = -1; // 3rd previous character

  var i = startIndex;
  var lastChIndex = i;

  while (i < endIndex) {
    var ch = text.charCodeAt(i++);

    if (ch === 59
    /* SEMI_COLON */
    ) {
        return lastChIndex;
      } else if (ch === 34
    /* DOUBLE_QUOTE */
    || ch === 39
    /* SINGLE_QUOTE */
    ) {
        lastChIndex = i = consumeQuotedText(text, ch, i, endIndex);
      } else if (startIndex === i - 4 && // We have seen only 4 characters so far "URL(" (Ignore "foo_URL()")
    ch3 === 85
    /* U */
    && ch2 === 82
    /* R */
    && ch1 === 76
    /* L */
    && ch === 40
    /* OPEN_PAREN */
    ) {
        lastChIndex = i = consumeQuotedText(text, 41
        /* CLOSE_PAREN */
        , i, endIndex);
      } else if (ch > 32
    /* SPACE */
    ) {
        // if we have a non-whitespace character then capture its location
        lastChIndex = i;
      }

    ch3 = ch2;
    ch2 = ch1;
    ch1 = ch & -33
    /* UPPER_CASE */
    ;
  }

  return lastChIndex;
}
/**
 * Consumes all of the quoted characters.
 *
 * @param text Text to scan
 * @param quoteCharCode CharCode of either `"` or `'` quote or `)` for `url(...)`.
 * @param startIndex Starting index of character where the scan should start.
 * @param endIndex Ending index of character where the scan should end.
 * @returns Index after quoted characters.
 */


function consumeQuotedText(text, quoteCharCode, startIndex, endIndex) {
  var ch1 = -1; // 1st previous character

  var index = startIndex;

  while (index < endIndex) {
    var ch = text.charCodeAt(index++);

    if (ch == quoteCharCode && ch1 !== 92
    /* BACK_SLASH */
    ) {
        return index;
      }

    if (ch == 92
    /* BACK_SLASH */
    && ch1 === 92
    /* BACK_SLASH */
    ) {
        // two back slashes cancel each other out. For example `"\\"` should properly end the
        // quotation. (It should not assume that the last `"` is escaped.)
        ch1 = 0;
      } else {
      ch1 = ch;
    }
  }

  throw ngDevMode ? malformedStyleError(text, String.fromCharCode(quoteCharCode), endIndex) : new Error();
}

function malformedStyleError(text, expecting, index) {
  ngDevMode && assertEqual(typeof text === 'string', true, 'String expected here');
  throw throwError("Malformed style at location ".concat(index, " in string '") + text.substring(0, index) + '[>>' + text.substring(index, index + 1) + '<<]' + text.substr(index + 1) + "'. Expecting '".concat(expecting, "'."));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Update a style binding on an element with the provided value.
 *
 * If the style value is falsy then it will be removed from the element
 * (or assigned a different value depending if there are any styles placed
 * on the element with `styleMap` or any static styles that are
 * present from when the element was created with `styling`).
 *
 * Note that the styling element is updated as part of `stylingApply`.
 *
 * @param prop A valid CSS property.
 * @param value New value to write (`null` or an empty string to remove).
 * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.
 *
 * Note that this will apply the provided style value to the host element if this function is called
 * within a host binding function.
 *
 * @codeGenApi
 */


function ɵɵstyleProp(prop, value, suffix) {
  checkStylingProperty(prop, value, suffix, false);
  return ɵɵstyleProp;
}
/**
 * Update a class binding on an element with the provided value.
 *
 * This instruction is meant to handle the `[class.foo]="exp"` case and,
 * therefore, the class binding itself must already be allocated using
 * `styling` within the creation block.
 *
 * @param prop A valid CSS class (only one).
 * @param value A true/false value which will turn the class on or off.
 *
 * Note that this will apply the provided class value to the host element if this function
 * is called within a host binding function.
 *
 * @codeGenApi
 */


function ɵɵclassProp(className, value) {
  checkStylingProperty(className, value, null, true);
  return ɵɵclassProp;
}
/**
 * Update style bindings using an object literal on an element.
 *
 * This instruction is meant to apply styling via the `[style]="exp"` template bindings.
 * When styles are applied to the element they will then be updated with respect to
 * any styles/classes set via `styleProp`. If any styles are set to falsy
 * then they will be removed from the element.
 *
 * Note that the styling instruction will not be applied until `stylingApply` is called.
 *
 * @param styles A key/value style map of the styles that will be applied to the given element.
 *        Any missing styles (that have already been applied to the element beforehand) will be
 *        removed (unset) from the element's styling.
 *
 * Note that this will apply the provided styleMap value to the host element if this function
 * is called within a host binding.
 *
 * @codeGenApi
 */


function ɵɵstyleMap(styles) {
  checkStylingMap(styleKeyValueArraySet, styleStringParser, styles, false);
}
/**
 * Parse text as style and add values to KeyValueArray.
 *
 * This code is pulled out to a separate function so that it can be tree shaken away if it is not
 * needed. It is only referenced from `ɵɵstyleMap`.
 *
 * @param keyValueArray KeyValueArray to add parsed values to.
 * @param text text to parse.
 */


function styleStringParser(keyValueArray, text) {
  for (var i = parseStyle(text); i >= 0; i = parseStyleNext(text, i)) {
    styleKeyValueArraySet(keyValueArray, getLastParsedKey(text), getLastParsedValue(text));
  }
}
/**
 * Update class bindings using an object literal or class-string on an element.
 *
 * This instruction is meant to apply styling via the `[class]="exp"` template bindings.
 * When classes are applied to the element they will then be updated with
 * respect to any styles/classes set via `classProp`. If any
 * classes are set to falsy then they will be removed from the element.
 *
 * Note that the styling instruction will not be applied until `stylingApply` is called.
 * Note that this will the provided classMap value to the host element if this function is called
 * within a host binding.
 *
 * @param classes A key/value map or string of CSS classes that will be added to the
 *        given element. Any missing classes (that have already been applied to the element
 *        beforehand) will be removed (unset) from the element's list of CSS classes.
 *
 * @codeGenApi
 */


function ɵɵclassMap(classes) {
  checkStylingMap(keyValueArraySet, classStringParser, classes, true);
}
/**
 * Parse text as class and add values to KeyValueArray.
 *
 * This code is pulled out to a separate function so that it can be tree shaken away if it is not
 * needed. It is only referenced from `ɵɵclassMap`.
 *
 * @param keyValueArray KeyValueArray to add parsed values to.
 * @param text text to parse.
 */


function classStringParser(keyValueArray, text) {
  for (var i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {
    keyValueArraySet(keyValueArray, getLastParsedKey(text), true);
  }
}
/**
 * Common code between `ɵɵclassProp` and `ɵɵstyleProp`.
 *
 * @param prop property name.
 * @param value binding value.
 * @param suffix suffix for the property (e.g. `em` or `px`)
 * @param isClassBased `true` if `class` change (`false` if `style`)
 */


function checkStylingProperty(prop, value, suffix, isClassBased) {
  var lView = getLView();
  var tView = getTView(); // Styling instructions use 2 slots per binding.
  // 1. one for the value / TStylingKey
  // 2. one for the intermittent-value / TStylingRange

  var bindingIndex = incrementBindingIndex(2);

  if (tView.firstUpdatePass) {
    stylingFirstUpdatePass(tView, prop, bindingIndex, isClassBased);
  }

  if (value !== NO_CHANGE && bindingUpdated(lView, bindingIndex, value)) {
    var tNode = tView.data[getSelectedIndex()];
    updateStyling(tView, tNode, lView, lView[RENDERER], prop, lView[bindingIndex + 1] = normalizeSuffix(value, suffix), isClassBased, bindingIndex);
  }
}
/**
 * Common code between `ɵɵclassMap` and `ɵɵstyleMap`.
 *
 * @param keyValueArraySet (See `keyValueArraySet` in "util/array_utils") Gets passed in as a
 *        function so that `style` can be processed. This is done for tree shaking purposes.
 * @param stringParser Parser used to parse `value` if `string`. (Passed in as `style` and `class`
 *        have different parsers.)
 * @param value bound value from application
 * @param isClassBased `true` if `class` change (`false` if `style`)
 */


function checkStylingMap(keyValueArraySet, stringParser, value, isClassBased) {
  var tView = getTView();
  var bindingIndex = incrementBindingIndex(2);

  if (tView.firstUpdatePass) {
    stylingFirstUpdatePass(tView, null, bindingIndex, isClassBased);
  }

  var lView = getLView();

  if (value !== NO_CHANGE && bindingUpdated(lView, bindingIndex, value)) {
    // `getSelectedIndex()` should be here (rather than in instruction) so that it is guarded by the
    // if so as not to read unnecessarily.
    var tNode = tView.data[getSelectedIndex()];

    if (hasStylingInputShadow(tNode, isClassBased) && !isInHostBindings(tView, bindingIndex)) {
      if (ngDevMode) {
        // verify that if we are shadowing then `TData` is appropriately marked so that we skip
        // processing this binding in styling resolution.
        var tStylingKey = tView.data[bindingIndex];
        assertEqual(Array.isArray(tStylingKey) ? tStylingKey[1] : tStylingKey, false, 'Styling linked list shadow input should be marked as \'false\'');
      } // VE does not concatenate the static portion like we are doing here.
      // Instead VE just ignores the static completely if dynamic binding is present.
      // Because of locality we have already set the static portion because we don't know if there
      // is a dynamic portion until later. If we would ignore the static portion it would look like
      // the binding has removed it. This would confuse `[ngStyle]`/`[ngClass]` to do the wrong
      // thing as it would think that the static portion was removed. For this reason we
      // concatenate it so that `[ngStyle]`/`[ngClass]`  can continue to work on changed.


      var staticPrefix = isClassBased ? tNode.classesWithoutHost : tNode.stylesWithoutHost;
      ngDevMode && isClassBased === false && staticPrefix !== null && assertEqual(staticPrefix.endsWith(';'), true, 'Expecting static portion to end with \';\'');

      if (staticPrefix !== null) {
        // We want to make sure that falsy values of `value` become empty strings.
        value = concatStringsWithSpace(staticPrefix, value ? value : '');
      } // Given `<div [style] my-dir>` such that `my-dir` has `@Input('style')`.
      // This takes over the `[style]` binding. (Same for `[class]`)


      setDirectiveInputsWhichShadowsStyling(tView, tNode, lView, value, isClassBased);
    } else {
      updateStylingMap(tView, tNode, lView, lView[RENDERER], lView[bindingIndex + 1], lView[bindingIndex + 1] = toStylingKeyValueArray(keyValueArraySet, stringParser, value), isClassBased, bindingIndex);
    }
  }
}
/**
 * Determines when the binding is in `hostBindings` section
 *
 * @param tView Current `TView`
 * @param bindingIndex index of binding which we would like if it is in `hostBindings`
 */


function isInHostBindings(tView, bindingIndex) {
  // All host bindings are placed after the expando section.
  return bindingIndex >= tView.expandoStartIndex;
}
/**
 * Collects the necessary information to insert the binding into a linked list of style bindings
 * using `insertTStylingBinding`.
 *
 * @param tView `TView` where the binding linked list will be stored.
 * @param tStylingKey Property/key of the binding.
 * @param bindingIndex Index of binding associated with the `prop`
 * @param isClassBased `true` if `class` change (`false` if `style`)
 */


function stylingFirstUpdatePass(tView, tStylingKey, bindingIndex, isClassBased) {
  ngDevMode && assertFirstUpdatePass(tView);
  var tData = tView.data;

  if (tData[bindingIndex + 1] === null) {
    // The above check is necessary because we don't clear first update pass until first successful
    // (no exception) template execution. This prevents the styling instruction from double adding
    // itself to the list.
    // `getSelectedIndex()` should be here (rather than in instruction) so that it is guarded by the
    // if so as not to read unnecessarily.
    var tNode = tData[getSelectedIndex()];
    ngDevMode && assertDefined(tNode, 'TNode expected');
    var isHostBindings = isInHostBindings(tView, bindingIndex);

    if (hasStylingInputShadow(tNode, isClassBased) && tStylingKey === null && !isHostBindings) {
      // `tStylingKey === null` implies that we are either `[style]` or `[class]` binding.
      // If there is a directive which uses `@Input('style')` or `@Input('class')` than
      // we need to neutralize this binding since that directive is shadowing it.
      // We turn this into a noop by setting the key to `false`
      tStylingKey = false;
    }

    tStylingKey = wrapInStaticStylingKey(tData, tNode, tStylingKey, isClassBased);
    insertTStylingBinding(tData, tNode, tStylingKey, bindingIndex, isHostBindings, isClassBased);
  }
}
/**
 * Adds static styling information to the binding if applicable.
 *
 * The linked list of styles not only stores the list and keys, but also stores static styling
 * information on some of the keys. This function determines if the key should contain the styling
 * information and computes it.
 *
 * See `TStylingStatic` for more details.
 *
 * @param tData `TData` where the linked list is stored.
 * @param tNode `TNode` for which the styling is being computed.
 * @param stylingKey `TStylingKeyPrimitive` which may need to be wrapped into `TStylingKey`
 * @param isClassBased `true` if `class` (`false` if `style`)
 */


function wrapInStaticStylingKey(tData, tNode, stylingKey, isClassBased) {
  var hostDirectiveDef = getCurrentDirectiveDef(tData);
  var residual = isClassBased ? tNode.residualClasses : tNode.residualStyles;

  if (hostDirectiveDef === null) {
    // We are in template node.
    // If template node already had styling instruction then it has already collected the static
    // styling and there is no need to collect them again. We know that we are the first styling
    // instruction because the `TNode.*Bindings` points to 0 (nothing has been inserted yet).
    var isFirstStylingInstructionInTemplate = (isClassBased ? tNode.classBindings : tNode.styleBindings) === 0;

    if (isFirstStylingInstructionInTemplate) {
      // It would be nice to be able to get the statics from `mergeAttrs`, however, at this point
      // they are already merged and it would not be possible to figure which property belongs where
      // in the priority.
      stylingKey = collectStylingFromDirectives(null, tData, tNode, stylingKey, isClassBased);
      stylingKey = collectStylingFromTAttrs(stylingKey, tNode.attrs, isClassBased); // We know that if we have styling binding in template we can't have residual.

      residual = null;
    }
  } else {
    // We are in host binding node and there was no binding instruction in template node.
    // This means that we need to compute the residual.
    var directiveStylingLast = tNode.directiveStylingLast;
    var isFirstStylingInstructionInHostBinding = directiveStylingLast === -1 || tData[directiveStylingLast] !== hostDirectiveDef;

    if (isFirstStylingInstructionInHostBinding) {
      stylingKey = collectStylingFromDirectives(hostDirectiveDef, tData, tNode, stylingKey, isClassBased);

      if (residual === null) {
        // - If `null` than either:
        //    - Template styling instruction already ran and it has consumed the static
        //      styling into its `TStylingKey` and so there is no need to update residual. Instead
        //      we need to update the `TStylingKey` associated with the first template node
        //      instruction. OR
        //    - Some other styling instruction ran and determined that there are no residuals
        var templateStylingKey = getTemplateHeadTStylingKey(tData, tNode, isClassBased);

        if (templateStylingKey !== undefined && Array.isArray(templateStylingKey)) {
          // Only recompute if `templateStylingKey` had static values. (If no static value found
          // then there is nothing to do since this operation can only produce less static keys, not
          // more.)
          templateStylingKey = collectStylingFromDirectives(null, tData, tNode, templateStylingKey[1]
          /* unwrap previous statics */
          , isClassBased);
          templateStylingKey = collectStylingFromTAttrs(templateStylingKey, tNode.attrs, isClassBased);
          setTemplateHeadTStylingKey(tData, tNode, isClassBased, templateStylingKey);
        }
      } else {
        // We only need to recompute residual if it is not `null`.
        // - If existing residual (implies there was no template styling). This means that some of
        //   the statics may have moved from the residual to the `stylingKey` and so we have to
        //   recompute.
        // - If `undefined` this is the first time we are running.
        residual = collectResidual(tData, tNode, isClassBased);
      }
    }
  }

  if (residual !== undefined) {
    isClassBased ? tNode.residualClasses = residual : tNode.residualStyles = residual;
  }

  return stylingKey;
}
/**
 * Retrieve the `TStylingKey` for the template styling instruction.
 *
 * This is needed since `hostBinding` styling instructions are inserted after the template
 * instruction. While the template instruction needs to update the residual in `TNode` the
 * `hostBinding` instructions need to update the `TStylingKey` of the template instruction because
 * the template instruction is downstream from the `hostBindings` instructions.
 *
 * @param tData `TData` where the linked list is stored.
 * @param tNode `TNode` for which the styling is being computed.
 * @param isClassBased `true` if `class` (`false` if `style`)
 * @return `TStylingKey` if found or `undefined` if not found.
 */


function getTemplateHeadTStylingKey(tData, tNode, isClassBased) {
  var bindings = isClassBased ? tNode.classBindings : tNode.styleBindings;

  if (getTStylingRangeNext(bindings) === 0) {
    // There does not seem to be a styling instruction in the `template`.
    return undefined;
  }

  return tData[getTStylingRangePrev(bindings)];
}
/**
 * Update the `TStylingKey` of the first template instruction in `TNode`.
 *
 * Logically `hostBindings` styling instructions are of lower priority than that of the template.
 * However, they execute after the template styling instructions. This means that they get inserted
 * in front of the template styling instructions.
 *
 * If we have a template styling instruction and a new `hostBindings` styling instruction is
 * executed it means that it may need to steal static fields from the template instruction. This
 * method allows us to update the first template instruction `TStylingKey` with a new value.
 *
 * Assume:
 * ```
 * <div my-dir style="color: red" [style.color]="tmplExp"></div>
 *
 * @Directive({
 *   host: {
 *     'style': 'width: 100px',
 *     '[style.color]': 'dirExp',
 *   }
 * })
 * class MyDir {}
 * ```
 *
 * when `[style.color]="tmplExp"` executes it creates this data structure.
 * ```
 *  ['', 'color', 'color', 'red', 'width', '100px'],
 * ```
 *
 * The reason for this is that the template instruction does not know if there are styling
 * instructions and must assume that there are none and must collect all of the static styling.
 * (both
 * `color' and 'width`)
 *
 * When `'[style.color]': 'dirExp',` executes we need to insert a new data into the linked list.
 * ```
 *  ['', 'color', 'width', '100px'],  // newly inserted
 *  ['', 'color', 'color', 'red', 'width', '100px'], // this is wrong
 * ```
 *
 * Notice that the template statics is now wrong as it incorrectly contains `width` so we need to
 * update it like so:
 * ```
 *  ['', 'color', 'width', '100px'],
 *  ['', 'color', 'color', 'red'],    // UPDATE
 * ```
 *
 * @param tData `TData` where the linked list is stored.
 * @param tNode `TNode` for which the styling is being computed.
 * @param isClassBased `true` if `class` (`false` if `style`)
 * @param tStylingKey New `TStylingKey` which is replacing the old one.
 */


function setTemplateHeadTStylingKey(tData, tNode, isClassBased, tStylingKey) {
  var bindings = isClassBased ? tNode.classBindings : tNode.styleBindings;
  ngDevMode && assertNotEqual(getTStylingRangeNext(bindings), 0, 'Expecting to have at least one template styling binding.');
  tData[getTStylingRangePrev(bindings)] = tStylingKey;
}
/**
 * Collect all static values after the current `TNode.directiveStylingLast` index.
 *
 * Collect the remaining styling information which has not yet been collected by an existing
 * styling instruction.
 *
 * @param tData `TData` where the `DirectiveDefs` are stored.
 * @param tNode `TNode` which contains the directive range.
 * @param isClassBased `true` if `class` (`false` if `style`)
 */


function collectResidual(tData, tNode, isClassBased) {
  var residual = undefined;
  var directiveEnd = tNode.directiveEnd;
  ngDevMode && assertNotEqual(tNode.directiveStylingLast, -1, 'By the time this function gets called at least one hostBindings-node styling instruction must have executed.'); // We add `1 + tNode.directiveStart` because we need to skip the current directive (as we are
  // collecting things after the last `hostBindings` directive which had a styling instruction.)

  for (var i = 1 + tNode.directiveStylingLast; i < directiveEnd; i++) {
    var attrs = tData[i].hostAttrs;
    residual = collectStylingFromTAttrs(residual, attrs, isClassBased);
  }

  return collectStylingFromTAttrs(residual, tNode.attrs, isClassBased);
}
/**
 * Collect the static styling information with lower priority than `hostDirectiveDef`.
 *
 * (This is opposite of residual styling.)
 *
 * @param hostDirectiveDef `DirectiveDef` for which we want to collect lower priority static
 *        styling. (Or `null` if template styling)
 * @param tData `TData` where the linked list is stored.
 * @param tNode `TNode` for which the styling is being computed.
 * @param stylingKey Existing `TStylingKey` to update or wrap.
 * @param isClassBased `true` if `class` (`false` if `style`)
 */


function collectStylingFromDirectives(hostDirectiveDef, tData, tNode, stylingKey, isClassBased) {
  // We need to loop because there can be directives which have `hostAttrs` but don't have
  // `hostBindings` so this loop catches up to the current directive..
  var currentDirective = null;
  var directiveEnd = tNode.directiveEnd;
  var directiveStylingLast = tNode.directiveStylingLast;

  if (directiveStylingLast === -1) {
    directiveStylingLast = tNode.directiveStart;
  } else {
    directiveStylingLast++;
  }

  while (directiveStylingLast < directiveEnd) {
    currentDirective = tData[directiveStylingLast];
    ngDevMode && assertDefined(currentDirective, 'expected to be defined');
    stylingKey = collectStylingFromTAttrs(stylingKey, currentDirective.hostAttrs, isClassBased);
    if (currentDirective === hostDirectiveDef) break;
    directiveStylingLast++;
  }

  if (hostDirectiveDef !== null) {
    // we only advance the styling cursor if we are collecting data from host bindings.
    // Template executes before host bindings and so if we would update the index,
    // host bindings would not get their statics.
    tNode.directiveStylingLast = directiveStylingLast;
  }

  return stylingKey;
}
/**
 * Convert `TAttrs` into `TStylingStatic`.
 *
 * @param stylingKey existing `TStylingKey` to update or wrap.
 * @param attrs `TAttributes` to process.
 * @param isClassBased `true` if `class` (`false` if `style`)
 */


function collectStylingFromTAttrs(stylingKey, attrs, isClassBased) {
  var desiredMarker = isClassBased ? 1
  /* Classes */
  : 2
  /* Styles */
  ;
  var currentMarker = -1
  /* ImplicitAttributes */
  ;

  if (attrs !== null) {
    for (var i = 0; i < attrs.length; i++) {
      var item = attrs[i];

      if (typeof item === 'number') {
        currentMarker = item;
      } else {
        if (currentMarker === desiredMarker) {
          if (!Array.isArray(stylingKey)) {
            stylingKey = stylingKey === undefined ? [] : ['', stylingKey];
          }

          keyValueArraySet(stylingKey, item, isClassBased ? true : attrs[++i]);
        }
      }
    }
  }

  return stylingKey === undefined ? null : stylingKey;
}
/**
 * Convert user input to `KeyValueArray`.
 *
 * This function takes user input which could be `string`, Object literal, or iterable and converts
 * it into a consistent representation. The output of this is `KeyValueArray` (which is an array
 * where
 * even indexes contain keys and odd indexes contain values for those keys).
 *
 * The advantage of converting to `KeyValueArray` is that we can perform diff in an input
 * independent
 * way.
 * (ie we can compare `foo bar` to `['bar', 'baz'] and determine a set of changes which need to be
 * applied)
 *
 * The fact that `KeyValueArray` is sorted is very important because it allows us to compute the
 * difference in linear fashion without the need to allocate any additional data.
 *
 * For example if we kept this as a `Map` we would have to iterate over previous `Map` to determine
 * which values need to be deleted, over the new `Map` to determine additions, and we would have to
 * keep additional `Map` to keep track of duplicates or items which have not yet been visited.
 *
 * @param keyValueArraySet (See `keyValueArraySet` in "util/array_utils") Gets passed in as a
 *        function so that `style` can be processed. This is done
 *        for tree shaking purposes.
 * @param stringParser The parser is passed in so that it will be tree shakable. See
 *        `styleStringParser` and `classStringParser`
 * @param value The value to parse/convert to `KeyValueArray`
 */


function toStylingKeyValueArray(keyValueArraySet, stringParser, value) {
  if (value == null
  /*|| value === undefined */
  || value === '') return EMPTY_ARRAY$3;
  var styleKeyValueArray = [];
  var unwrappedValue = unwrapSafeValue(value);

  if (Array.isArray(unwrappedValue)) {
    for (var i = 0; i < unwrappedValue.length; i++) {
      keyValueArraySet(styleKeyValueArray, unwrappedValue[i], true);
    }
  } else if (typeof unwrappedValue === 'object') {
    for (var key in unwrappedValue) {
      if (unwrappedValue.hasOwnProperty(key)) {
        keyValueArraySet(styleKeyValueArray, key, unwrappedValue[key]);
      }
    }
  } else if (typeof unwrappedValue === 'string') {
    stringParser(styleKeyValueArray, unwrappedValue);
  } else {
    ngDevMode && throwError('Unsupported styling type ' + typeof unwrappedValue + ': ' + unwrappedValue);
  }

  return styleKeyValueArray;
}
/**
 * Set a `value` for a `key`.
 *
 * See: `keyValueArraySet` for details
 *
 * @param keyValueArray KeyValueArray to add to.
 * @param key Style key to add.
 * @param value The value to set.
 */


function styleKeyValueArraySet(keyValueArray, key, value) {
  keyValueArraySet(keyValueArray, key, unwrapSafeValue(value));
}
/**
 * Update map based styling.
 *
 * Map based styling could be anything which contains more than one binding. For example `string`,
 * or object literal. Dealing with all of these types would complicate the logic so
 * instead this function expects that the complex input is first converted into normalized
 * `KeyValueArray`. The advantage of normalization is that we get the values sorted, which makes it
 * very cheap to compute deltas between the previous and current value.
 *
 * @param tView Associated `TView.data` contains the linked list of binding priorities.
 * @param tNode `TNode` where the binding is located.
 * @param lView `LView` contains the values associated with other styling binding at this `TNode`.
 * @param renderer Renderer to use if any updates.
 * @param oldKeyValueArray Previous value represented as `KeyValueArray`
 * @param newKeyValueArray Current value represented as `KeyValueArray`
 * @param isClassBased `true` if `class` (`false` if `style`)
 * @param bindingIndex Binding index of the binding.
 */


function updateStylingMap(tView, tNode, lView, renderer, oldKeyValueArray, newKeyValueArray, isClassBased, bindingIndex) {
  if (oldKeyValueArray === NO_CHANGE) {
    // On first execution the oldKeyValueArray is NO_CHANGE => treat it as empty KeyValueArray.
    oldKeyValueArray = EMPTY_ARRAY$3;
  }

  var oldIndex = 0;
  var newIndex = 0;
  var oldKey = 0 < oldKeyValueArray.length ? oldKeyValueArray[0] : null;
  var newKey = 0 < newKeyValueArray.length ? newKeyValueArray[0] : null;

  while (oldKey !== null || newKey !== null) {
    ngDevMode && assertLessThan(oldIndex, 999, 'Are we stuck in infinite loop?');
    ngDevMode && assertLessThan(newIndex, 999, 'Are we stuck in infinite loop?');
    var oldValue = oldIndex < oldKeyValueArray.length ? oldKeyValueArray[oldIndex + 1] : undefined;
    var newValue = newIndex < newKeyValueArray.length ? newKeyValueArray[newIndex + 1] : undefined;
    var setKey = null;
    var setValue = undefined;

    if (oldKey === newKey) {
      // UPDATE: Keys are equal => new value is overwriting old value.
      oldIndex += 2;
      newIndex += 2;

      if (oldValue !== newValue) {
        setKey = newKey;
        setValue = newValue;
      }
    } else if (newKey === null || oldKey !== null && oldKey < newKey) {
      // DELETE: oldKey key is missing or we did not find the oldKey in the newValue
      // (because the keyValueArray is sorted and `newKey` is found later alphabetically).
      // `"background" < "color"` so we need to delete `"background"` because it is not found in the
      // new array.
      oldIndex += 2;
      setKey = oldKey;
    } else {
      // CREATE: newKey's is earlier alphabetically than oldKey's (or no oldKey) => we have new key.
      // `"color" > "background"` so we need to add `color` because it is in new array but not in
      // old array.
      ngDevMode && assertDefined(newKey, 'Expecting to have a valid key');
      newIndex += 2;
      setKey = newKey;
      setValue = newValue;
    }

    if (setKey !== null) {
      updateStyling(tView, tNode, lView, renderer, setKey, setValue, isClassBased, bindingIndex);
    }

    oldKey = oldIndex < oldKeyValueArray.length ? oldKeyValueArray[oldIndex] : null;
    newKey = newIndex < newKeyValueArray.length ? newKeyValueArray[newIndex] : null;
  }
}
/**
 * Update a simple (property name) styling.
 *
 * This function takes `prop` and updates the DOM to that value. The function takes the binding
 * value as well as binding priority into consideration to determine which value should be written
 * to DOM. (For example it may be determined that there is a higher priority overwrite which blocks
 * the DOM write, or if the value goes to `undefined` a lower priority overwrite may be consulted.)
 *
 * @param tView Associated `TView.data` contains the linked list of binding priorities.
 * @param tNode `TNode` where the binding is located.
 * @param lView `LView` contains the values associated with other styling binding at this `TNode`.
 * @param renderer Renderer to use if any updates.
 * @param prop Either style property name or a class name.
 * @param value Either style value for `prop` or `true`/`false` if `prop` is class.
 * @param isClassBased `true` if `class` (`false` if `style`)
 * @param bindingIndex Binding index of the binding.
 */


function updateStyling(tView, tNode, lView, renderer, prop, value, isClassBased, bindingIndex) {
  if (!(tNode.type & 3
  /* AnyRNode */
  )) {
    // It is possible to have styling on non-elements (such as ng-container).
    // This is rare, but it does happen. In such a case, just ignore the binding.
    return;
  }

  var tData = tView.data;
  var tRange = tData[bindingIndex + 1];
  var higherPriorityValue = getTStylingRangeNextDuplicate(tRange) ? findStylingValue(tData, tNode, lView, prop, getTStylingRangeNext(tRange), isClassBased) : undefined;

  if (!isStylingValuePresent(higherPriorityValue)) {
    // We don't have a next duplicate, or we did not find a duplicate value.
    if (!isStylingValuePresent(value)) {
      // We should delete current value or restore to lower priority value.
      if (getTStylingRangePrevDuplicate(tRange)) {
        // We have a possible prev duplicate, let's retrieve it.
        value = findStylingValue(tData, null, lView, prop, bindingIndex, isClassBased);
      }
    }

    var rNode = getNativeByIndex(getSelectedIndex(), lView);
    applyStyling(renderer, isClassBased, rNode, prop, value);
  }
}
/**
 * Search for styling value with higher priority which is overwriting current value, or a
 * value of lower priority to which we should fall back if the value is `undefined`.
 *
 * When value is being applied at a location, related values need to be consulted.
 * - If there is a higher priority binding, we should be using that one instead.
 *   For example `<div  [style]="{color:exp1}" [style.color]="exp2">` change to `exp1`
 *   requires that we check `exp2` to see if it is set to value other than `undefined`.
 * - If there is a lower priority binding and we are changing to `undefined`
 *   For example `<div  [style]="{color:exp1}" [style.color]="exp2">` change to `exp2` to
 *   `undefined` requires that we check `exp1` (and static values) and use that as new value.
 *
 * NOTE: The styling stores two values.
 * 1. The raw value which came from the application is stored at `index + 0` location. (This value
 *    is used for dirty checking).
 * 2. The normalized value is stored at `index + 1`.
 *
 * @param tData `TData` used for traversing the priority.
 * @param tNode `TNode` to use for resolving static styling. Also controls search direction.
 *   - `TNode` search next and quit as soon as `isStylingValuePresent(value)` is true.
 *      If no value found consult `tNode.residualStyle`/`tNode.residualClass` for default value.
 *   - `null` search prev and go all the way to end. Return last value where
 *     `isStylingValuePresent(value)` is true.
 * @param lView `LView` used for retrieving the actual values.
 * @param prop Property which we are interested in.
 * @param index Starting index in the linked list of styling bindings where the search should start.
 * @param isClassBased `true` if `class` (`false` if `style`)
 */


function findStylingValue(tData, tNode, lView, prop, index, isClassBased) {
  // `TNode` to use for resolving static styling. Also controls search direction.
  //   - `TNode` search next and quit as soon as `isStylingValuePresent(value)` is true.
  //      If no value found consult `tNode.residualStyle`/`tNode.residualClass` for default value.
  //   - `null` search prev and go all the way to end. Return last value where
  //     `isStylingValuePresent(value)` is true.
  var isPrevDirection = tNode === null;
  var value = undefined;

  while (index > 0) {
    var rawKey = tData[index];
    var containsStatics = Array.isArray(rawKey); // Unwrap the key if we contain static values.

    var key = containsStatics ? rawKey[1] : rawKey;
    var isStylingMap = key === null;
    var valueAtLViewIndex = lView[index + 1];

    if (valueAtLViewIndex === NO_CHANGE) {
      // In firstUpdatePass the styling instructions create a linked list of styling.
      // On subsequent passes it is possible for a styling instruction to try to read a binding
      // which
      // has not yet executed. In that case we will find `NO_CHANGE` and we should assume that
      // we have `undefined` (or empty array in case of styling-map instruction) instead. This
      // allows the resolution to apply the value (which may later be overwritten when the
      // binding actually executes.)
      valueAtLViewIndex = isStylingMap ? EMPTY_ARRAY$3 : undefined;
    }

    var currentValue = isStylingMap ? keyValueArrayGet(valueAtLViewIndex, prop) : key === prop ? valueAtLViewIndex : undefined;

    if (containsStatics && !isStylingValuePresent(currentValue)) {
      currentValue = keyValueArrayGet(rawKey, prop);
    }

    if (isStylingValuePresent(currentValue)) {
      value = currentValue;

      if (isPrevDirection) {
        return value;
      }
    }

    var tRange = tData[index + 1];
    index = isPrevDirection ? getTStylingRangePrev(tRange) : getTStylingRangeNext(tRange);
  }

  if (tNode !== null) {
    // in case where we are going in next direction AND we did not find anything, we need to
    // consult residual styling
    var residual = isClassBased ? tNode.residualClasses : tNode.residualStyles;

    if (residual != null
    /** OR residual !=== undefined */
    ) {
        value = keyValueArrayGet(residual, prop);
      }
  }

  return value;
}
/**
 * Determines if the binding value should be used (or if the value is 'undefined' and hence priority
 * resolution should be used.)
 *
 * @param value Binding style value.
 */


function isStylingValuePresent(value) {
  // Currently only `undefined` value is considered non-binding. That is `undefined` says I don't
  // have an opinion as to what this binding should be and you should consult other bindings by
  // priority to determine the valid value.
  // This is extracted into a single function so that we have a single place to control this.
  return value !== undefined;
}
/**
 * Normalizes and/or adds a suffix to the value.
 *
 * If value is `null`/`undefined` no suffix is added
 * @param value
 * @param suffix
 */


function normalizeSuffix(value, suffix) {
  if (value == null
  /** || value === undefined */
  ) {// do nothing
    } else if (typeof suffix === 'string') {
    value = value + suffix;
  } else if (typeof value === 'object') {
    value = stringify(unwrapSafeValue(value));
  }

  return value;
}
/**
 * Tests if the `TNode` has input shadow.
 *
 * An input shadow is when a directive steals (shadows) the input by using `@Input('style')` or
 * `@Input('class')` as input.
 *
 * @param tNode `TNode` which we would like to see if it has shadow.
 * @param isClassBased `true` if `class` (`false` if `style`)
 */


function hasStylingInputShadow(tNode, isClassBased) {
  return (tNode.flags & (isClassBased ? 16
  /* hasClassInput */
  : 32
  /* hasStyleInput */
  )) !== 0;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Create static text node
 *
 * @param index Index of the node in the data array
 * @param value Static string value to write.
 *
 * @codeGenApi
 */


function ɵɵtext(index) {
  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var lView = getLView();
  var tView = getTView();
  var adjustedIndex = index + HEADER_OFFSET;
  ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'text nodes should be created before any bindings');
  ngDevMode && assertIndexInRange(lView, adjustedIndex);
  var tNode = tView.firstCreatePass ? getOrCreateTNode(tView, adjustedIndex, 1
  /* Text */
  , value, null) : tView.data[adjustedIndex];
  var textNative = lView[adjustedIndex] = createTextNode(lView[RENDERER], value);
  appendChild(tView, lView, textNative, tNode); // Text nodes are self closing.

  setCurrentTNode(tNode, false);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 *
 * Update text content with a lone bound value
 *
 * Used when a text node has 1 interpolated value in it, an no additional text
 * surrounds that interpolated value:
 *
 * ```html
 * <div>{{v0}}</div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵtextInterpolate(v0);
 * ```
 * @returns itself, so that it may be chained.
 * @see textInterpolateV
 * @codeGenApi
 */


function ɵɵtextInterpolate(v0) {
  ɵɵtextInterpolate1('', v0, '');
  return ɵɵtextInterpolate;
}
/**
 *
 * Update text content with single bound value surrounded by other text.
 *
 * Used when a text node has 1 interpolated value in it:
 *
 * ```html
 * <div>prefix{{v0}}suffix</div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵtextInterpolate1('prefix', v0, 'suffix');
 * ```
 * @returns itself, so that it may be chained.
 * @see textInterpolateV
 * @codeGenApi
 */


function ɵɵtextInterpolate1(prefix, v0, suffix) {
  var lView = getLView();
  var interpolated = interpolation1(lView, prefix, v0, suffix);

  if (interpolated !== NO_CHANGE) {
    textBindingInternal(lView, getSelectedIndex(), interpolated);
  }

  return ɵɵtextInterpolate1;
}
/**
 *
 * Update text content with 2 bound values surrounded by other text.
 *
 * Used when a text node has 2 interpolated values in it:
 *
 * ```html
 * <div>prefix{{v0}}-{{v1}}suffix</div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');
 * ```
 * @returns itself, so that it may be chained.
 * @see textInterpolateV
 * @codeGenApi
 */


function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {
  var lView = getLView();
  var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);

  if (interpolated !== NO_CHANGE) {
    textBindingInternal(lView, getSelectedIndex(), interpolated);
  }

  return ɵɵtextInterpolate2;
}
/**
 *
 * Update text content with 3 bound values surrounded by other text.
 *
 * Used when a text node has 3 interpolated values in it:
 *
 * ```html
 * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵtextInterpolate3(
 * 'prefix', v0, '-', v1, '-', v2, 'suffix');
 * ```
 * @returns itself, so that it may be chained.
 * @see textInterpolateV
 * @codeGenApi
 */


function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {
  var lView = getLView();
  var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);

  if (interpolated !== NO_CHANGE) {
    textBindingInternal(lView, getSelectedIndex(), interpolated);
  }

  return ɵɵtextInterpolate3;
}
/**
 *
 * Update text content with 4 bound values surrounded by other text.
 *
 * Used when a text node has 4 interpolated values in it:
 *
 * ```html
 * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵtextInterpolate4(
 * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');
 * ```
 * @returns itself, so that it may be chained.
 * @see ɵɵtextInterpolateV
 * @codeGenApi
 */


function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {
  var lView = getLView();
  var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);

  if (interpolated !== NO_CHANGE) {
    textBindingInternal(lView, getSelectedIndex(), interpolated);
  }

  return ɵɵtextInterpolate4;
}
/**
 *
 * Update text content with 5 bound values surrounded by other text.
 *
 * Used when a text node has 5 interpolated values in it:
 *
 * ```html
 * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵtextInterpolate5(
 * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');
 * ```
 * @returns itself, so that it may be chained.
 * @see textInterpolateV
 * @codeGenApi
 */


function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {
  var lView = getLView();
  var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);

  if (interpolated !== NO_CHANGE) {
    textBindingInternal(lView, getSelectedIndex(), interpolated);
  }

  return ɵɵtextInterpolate5;
}
/**
 *
 * Update text content with 6 bound values surrounded by other text.
 *
 * Used when a text node has 6 interpolated values in it:
 *
 * ```html
 * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵtextInterpolate6(
 *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');
 * ```
 *
 * @param i4 Static value used for concatenation only.
 * @param v5 Value checked for change. @returns itself, so that it may be chained.
 * @see textInterpolateV
 * @codeGenApi
 */


function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {
  var lView = getLView();
  var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);

  if (interpolated !== NO_CHANGE) {
    textBindingInternal(lView, getSelectedIndex(), interpolated);
  }

  return ɵɵtextInterpolate6;
}
/**
 *
 * Update text content with 7 bound values surrounded by other text.
 *
 * Used when a text node has 7 interpolated values in it:
 *
 * ```html
 * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵtextInterpolate7(
 *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');
 * ```
 * @returns itself, so that it may be chained.
 * @see textInterpolateV
 * @codeGenApi
 */


function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {
  var lView = getLView();
  var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);

  if (interpolated !== NO_CHANGE) {
    textBindingInternal(lView, getSelectedIndex(), interpolated);
  }

  return ɵɵtextInterpolate7;
}
/**
 *
 * Update text content with 8 bound values surrounded by other text.
 *
 * Used when a text node has 8 interpolated values in it:
 *
 * ```html
 * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵtextInterpolate8(
 *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');
 * ```
 * @returns itself, so that it may be chained.
 * @see textInterpolateV
 * @codeGenApi
 */


function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {
  var lView = getLView();
  var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);

  if (interpolated !== NO_CHANGE) {
    textBindingInternal(lView, getSelectedIndex(), interpolated);
  }

  return ɵɵtextInterpolate8;
}
/**
 * Update text content with 9 or more bound values other surrounded by text.
 *
 * Used when the number of interpolated values exceeds 8.
 *
 * ```html
 * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵtextInterpolateV(
 *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,
 *  'suffix']);
 * ```
 *.
 * @param values The collection of values and the strings in between those values, beginning with
 * a string prefix and ending with a string suffix.
 * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)
 *
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵtextInterpolateV(values) {
  var lView = getLView();
  var interpolated = interpolationV(lView, values);

  if (interpolated !== NO_CHANGE) {
    textBindingInternal(lView, getSelectedIndex(), interpolated);
  }

  return ɵɵtextInterpolateV;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 *
 * Update an interpolated class on an element with single bound value surrounded by text.
 *
 * Used when the value passed to a property has 1 interpolated value in it:
 *
 * ```html
 * <div class="prefix{{v0}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');
 * ```
 *
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @codeGenApi
 */


function ɵɵclassMapInterpolate1(prefix, v0, suffix) {
  var lView = getLView();
  var interpolatedValue = interpolation1(lView, prefix, v0, suffix);
  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);
}
/**
 *
 * Update an interpolated class on an element with 2 bound values surrounded by text.
 *
 * Used when the value passed to a property has 2 interpolated values in it:
 *
 * ```html
 * <div class="prefix{{v0}}-{{v1}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');
 * ```
 *
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @codeGenApi
 */


function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {
  var lView = getLView();
  var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);
  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);
}
/**
 *
 * Update an interpolated class on an element with 3 bound values surrounded by text.
 *
 * Used when the value passed to a property has 3 interpolated values in it:
 *
 * ```html
 * <div class="prefix{{v0}}-{{v1}}-{{v2}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵclassMapInterpolate3(
 * 'prefix', v0, '-', v1, '-', v2, 'suffix');
 * ```
 *
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @codeGenApi
 */


function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {
  var lView = getLView();
  var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);
  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);
}
/**
 *
 * Update an interpolated class on an element with 4 bound values surrounded by text.
 *
 * Used when the value passed to a property has 4 interpolated values in it:
 *
 * ```html
 * <div class="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵclassMapInterpolate4(
 * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');
 * ```
 *
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @codeGenApi
 */


function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {
  var lView = getLView();
  var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);
  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);
}
/**
 *
 * Update an interpolated class on an element with 5 bound values surrounded by text.
 *
 * Used when the value passed to a property has 5 interpolated values in it:
 *
 * ```html
 * <div class="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵclassMapInterpolate5(
 * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');
 * ```
 *
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @codeGenApi
 */


function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {
  var lView = getLView();
  var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);
  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);
}
/**
 *
 * Update an interpolated class on an element with 6 bound values surrounded by text.
 *
 * Used when the value passed to a property has 6 interpolated values in it:
 *
 * ```html
 * <div class="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵclassMapInterpolate6(
 *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');
 * ```
 *
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param i4 Static value used for concatenation only.
 * @param v5 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @codeGenApi
 */


function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {
  var lView = getLView();
  var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);
  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);
}
/**
 *
 * Update an interpolated class on an element with 7 bound values surrounded by text.
 *
 * Used when the value passed to a property has 7 interpolated values in it:
 *
 * ```html
 * <div class="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵclassMapInterpolate7(
 *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');
 * ```
 *
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param i4 Static value used for concatenation only.
 * @param v5 Value checked for change.
 * @param i5 Static value used for concatenation only.
 * @param v6 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @codeGenApi
 */


function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {
  var lView = getLView();
  var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);
  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);
}
/**
 *
 * Update an interpolated class on an element with 8 bound values surrounded by text.
 *
 * Used when the value passed to a property has 8 interpolated values in it:
 *
 * ```html
 * <div class="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵclassMapInterpolate8(
 *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');
 * ```
 *
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param i4 Static value used for concatenation only.
 * @param v5 Value checked for change.
 * @param i5 Static value used for concatenation only.
 * @param v6 Value checked for change.
 * @param i6 Static value used for concatenation only.
 * @param v7 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @codeGenApi
 */


function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {
  var lView = getLView();
  var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);
  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);
}
/**
 * Update an interpolated class on an element with 9 or more bound values surrounded by text.
 *
 * Used when the number of interpolated values exceeds 8.
 *
 * ```html
 * <div
 *  class="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵclassMapInterpolateV(
 *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,
 *  'suffix']);
 * ```
 *.
 * @param values The collection of values and the strings in-between those values, beginning with
 * a string prefix and ending with a string suffix.
 * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)
 * @codeGenApi
 */


function ɵɵclassMapInterpolateV(values) {
  var lView = getLView();
  var interpolatedValue = interpolationV(lView, values);
  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 *
 * Update an interpolated style on an element with single bound value surrounded by text.
 *
 * Used when the value passed to a property has 1 interpolated value in it:
 *
 * ```html
 * <div style="key: {{v0}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstyleMapInterpolate1('key: ', v0, 'suffix');
 * ```
 *
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @codeGenApi
 */


function ɵɵstyleMapInterpolate1(prefix, v0, suffix) {
  var lView = getLView();
  var interpolatedValue = interpolation1(lView, prefix, v0, suffix);
  ɵɵstyleMap(interpolatedValue);
}
/**
 *
 * Update an interpolated style on an element with 2 bound values surrounded by text.
 *
 * Used when the value passed to a property has 2 interpolated values in it:
 *
 * ```html
 * <div style="key: {{v0}}; key1: {{v1}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstyleMapInterpolate2('key: ', v0, '; key1: ', v1, 'suffix');
 * ```
 *
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @codeGenApi
 */


function ɵɵstyleMapInterpolate2(prefix, v0, i0, v1, suffix) {
  var lView = getLView();
  var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);
  ɵɵstyleMap(interpolatedValue);
}
/**
 *
 * Update an interpolated style on an element with 3 bound values surrounded by text.
 *
 * Used when the value passed to a property has 3 interpolated values in it:
 *
 * ```html
 * <div style="key: {{v0}}; key2: {{v1}}; key2: {{v2}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstyleMapInterpolate3(
 *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, 'suffix');
 * ```
 *
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @codeGenApi
 */


function ɵɵstyleMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {
  var lView = getLView();
  var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);
  ɵɵstyleMap(interpolatedValue);
}
/**
 *
 * Update an interpolated style on an element with 4 bound values surrounded by text.
 *
 * Used when the value passed to a property has 4 interpolated values in it:
 *
 * ```html
 * <div style="key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstyleMapInterpolate4(
 *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, 'suffix');
 * ```
 *
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @codeGenApi
 */


function ɵɵstyleMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {
  var lView = getLView();
  var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);
  ɵɵstyleMap(interpolatedValue);
}
/**
 *
 * Update an interpolated style on an element with 5 bound values surrounded by text.
 *
 * Used when the value passed to a property has 5 interpolated values in it:
 *
 * ```html
 * <div style="key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstyleMapInterpolate5(
 *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, 'suffix');
 * ```
 *
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @codeGenApi
 */


function ɵɵstyleMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {
  var lView = getLView();
  var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);
  ɵɵstyleMap(interpolatedValue);
}
/**
 *
 * Update an interpolated style on an element with 6 bound values surrounded by text.
 *
 * Used when the value passed to a property has 6 interpolated values in it:
 *
 * ```html
 * <div style="key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}};
 *             key5: {{v5}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstyleMapInterpolate6(
 *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,
 *    'suffix');
 * ```
 *
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param i4 Static value used for concatenation only.
 * @param v5 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @codeGenApi
 */


function ɵɵstyleMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {
  var lView = getLView();
  var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);
  ɵɵstyleMap(interpolatedValue);
}
/**
 *
 * Update an interpolated style on an element with 7 bound values surrounded by text.
 *
 * Used when the value passed to a property has 7 interpolated values in it:
 *
 * ```html
 * <div style="key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};
 *             key6: {{v6}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstyleMapInterpolate7(
 *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,
 *    '; key6: ', v6, 'suffix');
 * ```
 *
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param i4 Static value used for concatenation only.
 * @param v5 Value checked for change.
 * @param i5 Static value used for concatenation only.
 * @param v6 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @codeGenApi
 */


function ɵɵstyleMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {
  var lView = getLView();
  var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);
  ɵɵstyleMap(interpolatedValue);
}
/**
 *
 * Update an interpolated style on an element with 8 bound values surrounded by text.
 *
 * Used when the value passed to a property has 8 interpolated values in it:
 *
 * ```html
 * <div style="key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};
 *             key6: {{v6}}; key7: {{v7}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstyleMapInterpolate8(
 *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,
 *    '; key6: ', v6, '; key7: ', v7, 'suffix');
 * ```
 *
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param i4 Static value used for concatenation only.
 * @param v5 Value checked for change.
 * @param i5 Static value used for concatenation only.
 * @param v6 Value checked for change.
 * @param i6 Static value used for concatenation only.
 * @param v7 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @codeGenApi
 */


function ɵɵstyleMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {
  var lView = getLView();
  var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);
  ɵɵstyleMap(interpolatedValue);
}
/**
 * Update an interpolated style on an element with 9 or more bound values surrounded by text.
 *
 * Used when the number of interpolated values exceeds 8.
 *
 * ```html
 * <div
 *  class="key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};
 *         key6: {{v6}}; key7: {{v7}}; key8: {{v8}}; key9: {{v9}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstyleMapInterpolateV(
 *    ['key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,
 *     '; key6: ', v6, '; key7: ', v7, '; key8: ', v8, '; key9: ', v9, 'suffix']);
 * ```
 *.
 * @param values The collection of values and the strings in-between those values, beginning with
 * a string prefix and ending with a string suffix.
 * (e.g. `['prefix', value0, '; key2: ', value1, '; key2: ', value2, ..., value99, 'suffix']`)
 * @codeGenApi
 */


function ɵɵstyleMapInterpolateV(values) {
  var lView = getLView();
  var interpolatedValue = interpolationV(lView, values);
  ɵɵstyleMap(interpolatedValue);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 *
 * Update an interpolated style property on an element with single bound value surrounded by text.
 *
 * Used when the value passed to a property has 1 interpolated value in it:
 *
 * ```html
 * <div style.color="prefix{{v0}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');
 * ```
 *
 * @param styleIndex Index of style to update. This index value refers to the
 *        index of the style in the style bindings array that was passed into
 *        `styling`.
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {
  var lView = getLView();
  var interpolatedValue = interpolation1(lView, prefix, v0, suffix);
  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);
  return ɵɵstylePropInterpolate1;
}
/**
 *
 * Update an interpolated style property on an element with 2 bound values surrounded by text.
 *
 * Used when the value passed to a property has 2 interpolated values in it:
 *
 * ```html
 * <div style.color="prefix{{v0}}-{{v1}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');
 * ```
 *
 * @param styleIndex Index of style to update. This index value refers to the
 *        index of the style in the style bindings array that was passed into
 *        `styling`.
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {
  var lView = getLView();
  var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);
  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);
  return ɵɵstylePropInterpolate2;
}
/**
 *
 * Update an interpolated style property on an element with 3 bound values surrounded by text.
 *
 * Used when the value passed to a property has 3 interpolated values in it:
 *
 * ```html
 * <div style.color="prefix{{v0}}-{{v1}}-{{v2}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');
 * ```
 *
 * @param styleIndex Index of style to update. This index value refers to the
 *        index of the style in the style bindings array that was passed into
 *        `styling`.
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {
  var lView = getLView();
  var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);
  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);
  return ɵɵstylePropInterpolate3;
}
/**
 *
 * Update an interpolated style property on an element with 4 bound values surrounded by text.
 *
 * Used when the value passed to a property has 4 interpolated values in it:
 *
 * ```html
 * <div style.color="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');
 * ```
 *
 * @param styleIndex Index of style to update. This index value refers to the
 *        index of the style in the style bindings array that was passed into
 *        `styling`.
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {
  var lView = getLView();
  var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);
  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);
  return ɵɵstylePropInterpolate4;
}
/**
 *
 * Update an interpolated style property on an element with 5 bound values surrounded by text.
 *
 * Used when the value passed to a property has 5 interpolated values in it:
 *
 * ```html
 * <div style.color="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');
 * ```
 *
 * @param styleIndex Index of style to update. This index value refers to the
 *        index of the style in the style bindings array that was passed into
 *        `styling`.
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {
  var lView = getLView();
  var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);
  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);
  return ɵɵstylePropInterpolate5;
}
/**
 *
 * Update an interpolated style property on an element with 6 bound values surrounded by text.
 *
 * Used when the value passed to a property has 6 interpolated values in it:
 *
 * ```html
 * <div style.color="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');
 * ```
 *
 * @param styleIndex Index of style to update. This index value refers to the
 *        index of the style in the style bindings array that was passed into
 *        `styling`.
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param i4 Static value used for concatenation only.
 * @param v5 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {
  var lView = getLView();
  var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);
  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);
  return ɵɵstylePropInterpolate6;
}
/**
 *
 * Update an interpolated style property on an element with 7 bound values surrounded by text.
 *
 * Used when the value passed to a property has 7 interpolated values in it:
 *
 * ```html
 * <div style.color="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstylePropInterpolate7(
 *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');
 * ```
 *
 * @param styleIndex Index of style to update. This index value refers to the
 *        index of the style in the style bindings array that was passed into
 *        `styling`.
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param i4 Static value used for concatenation only.
 * @param v5 Value checked for change.
 * @param i5 Static value used for concatenation only.
 * @param v6 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {
  var lView = getLView();
  var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);
  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);
  return ɵɵstylePropInterpolate7;
}
/**
 *
 * Update an interpolated style property on an element with 8 bound values surrounded by text.
 *
 * Used when the value passed to a property has 8 interpolated values in it:
 *
 * ```html
 * <div style.color="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix"></div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,
 * '-', v7, 'suffix');
 * ```
 *
 * @param styleIndex Index of style to update. This index value refers to the
 *        index of the style in the style bindings array that was passed into
 *        `styling`.
 * @param prefix Static value used for concatenation only.
 * @param v0 Value checked for change.
 * @param i0 Static value used for concatenation only.
 * @param v1 Value checked for change.
 * @param i1 Static value used for concatenation only.
 * @param v2 Value checked for change.
 * @param i2 Static value used for concatenation only.
 * @param v3 Value checked for change.
 * @param i3 Static value used for concatenation only.
 * @param v4 Value checked for change.
 * @param i4 Static value used for concatenation only.
 * @param v5 Value checked for change.
 * @param i5 Static value used for concatenation only.
 * @param v6 Value checked for change.
 * @param i6 Static value used for concatenation only.
 * @param v7 Value checked for change.
 * @param suffix Static value used for concatenation only.
 * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {
  var lView = getLView();
  var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);
  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);
  return ɵɵstylePropInterpolate8;
}
/**
 * Update an interpolated style property on an element with 9 or more bound values surrounded by
 * text.
 *
 * Used when the number of interpolated values exceeds 8.
 *
 * ```html
 * <div
 *  style.color="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix">
 * </div>
 * ```
 *
 * Its compiled representation is:
 *
 * ```ts
 * ɵɵstylePropInterpolateV(
 *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,
 *  'suffix']);
 * ```
 *
 * @param styleIndex Index of style to update. This index value refers to the
 *        index of the style in the style bindings array that was passed into
 *        `styling`..
 * @param values The collection of values and the strings in-between those values, beginning with
 * a string prefix and ending with a string suffix.
 * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)
 * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
 * @returns itself, so that it may be chained.
 * @codeGenApi
 */


function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {
  var lView = getLView();
  var interpolatedValue = interpolationV(lView, values);
  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);
  return ɵɵstylePropInterpolateV;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Update a property on a host element. Only applies to native node properties, not inputs.
 *
 * Operates on the element selected by index via the {@link select} instruction.
 *
 * @param propName Name of property. Because it is going to DOM, this is not subject to
 *        renaming as part of minification.
 * @param value New value to write.
 * @param sanitizer An optional function used to sanitize the value.
 * @returns This function returns itself so that it may be chained
 * (e.g. `property('name', ctx.name)('title', ctx.title)`)
 *
 * @codeGenApi
 */


function ɵɵhostProperty(propName, value, sanitizer) {
  var lView = getLView();
  var bindingIndex = nextBindingIndex();

  if (bindingUpdated(lView, bindingIndex, value)) {
    var tView = getTView();
    var tNode = getSelectedTNode();
    elementPropertyInternal(tView, tNode, lView, propName, value, lView[RENDERER], sanitizer, true);
    ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, bindingIndex);
  }

  return ɵɵhostProperty;
}
/**
 * Updates a synthetic host binding (e.g. `[@foo]`) on a component or directive.
 *
 * This instruction is for compatibility purposes and is designed to ensure that a
 * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in
 * the component's renderer. Normally all host bindings are evaluated with the parent
 * component's renderer, but, in the case of animation @triggers, they need to be
 * evaluated with the sub component's renderer (because that's where the animation
 * triggers are defined).
 *
 * Do not use this instruction as a replacement for `elementProperty`. This instruction
 * only exists to ensure compatibility with the ViewEngine's host binding behavior.
 *
 * @param index The index of the element to update in the data array
 * @param propName Name of property. Because it is going to DOM, this is not subject to
 *        renaming as part of minification.
 * @param value New value to write.
 * @param sanitizer An optional function used to sanitize the value.
 *
 * @codeGenApi
 */


function ɵɵsyntheticHostProperty(propName, value, sanitizer) {
  var lView = getLView();
  var bindingIndex = nextBindingIndex();

  if (bindingUpdated(lView, bindingIndex, value)) {
    var tView = getTView();
    var tNode = getSelectedTNode();
    var currentDef = getCurrentDirectiveDef(tView.data);
    var renderer = loadComponentRenderer(currentDef, tNode, lView);
    elementPropertyInternal(tView, tNode, lView, propName, value, renderer, sanitizer, true);
    ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, bindingIndex);
  }

  return ɵɵsyntheticHostProperty;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.
 */


if (typeof ngI18nClosureMode === 'undefined') {
  // These property accesses can be ignored because ngI18nClosureMode will be set to false
  // when optimizing code and the whole if statement will be dropped.
  // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.
  // NOTE: we need to have it in IIFE so that the tree-shaker is happy.

  /*@__PURE__*/
  (function () {
    // tslint:disable-next-line:no-toplevel-property-access
    _global['ngI18nClosureMode'] = // TODO(FW-1250): validate that this actually, you know, works.
    // tslint:disable-next-line:no-toplevel-property-access
    typeof goog !== 'undefined' && typeof goog.getMsg === 'function';
  })();
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// THIS CODE IS GENERATED - DO NOT MODIFY
// See angular/tools/gulp-tasks/cldr/extract.js


var u = undefined;

function plural(n) {
  var i = Math.floor(Math.abs(n)),
      v = n.toString().replace(/^[^.]*\.?/, '').length;
  if (i === 1 && v === 0) return 1;
  return 5;
}

var localeEn = ['en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u], [['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'], ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'], ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']], u, [['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'], ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'], ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']], u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0], ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'], ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \'at\' {0}', u], ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'], ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], 'USD', '$', 'US Dollar', {}, 'ltr', plural];
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * This const is used to store the locale data registered with `registerLocaleData`
 */

var LOCALE_DATA = {};
/**
 * Register locale data to be used internally by Angular. See the
 * ["I18n guide"](guide/i18n#i18n-pipes) to know how to import additional locale data.
 *
 * The signature `registerLocaleData(data: any, extraData?: any)` is deprecated since v5.1
 */

function registerLocaleData(data, localeId, extraData) {
  if (typeof localeId !== 'string') {
    extraData = localeId;
    localeId = data[LocaleDataIndex.LocaleId];
  }

  localeId = localeId.toLowerCase().replace(/_/g, '-');
  LOCALE_DATA[localeId] = data;

  if (extraData) {
    LOCALE_DATA[localeId][LocaleDataIndex.ExtraData] = extraData;
  }
}
/**
 * Finds the locale data for a given locale.
 *
 * @param locale The locale code.
 * @returns The locale data.
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 */


function findLocaleData(locale) {
  var normalizedLocale = normalizeLocale(locale);
  var match = getLocaleData(normalizedLocale);

  if (match) {
    return match;
  } // let's try to find a parent locale


  var parentLocale = normalizedLocale.split('-')[0];
  match = getLocaleData(parentLocale);

  if (match) {
    return match;
  }

  if (parentLocale === 'en') {
    return localeEn;
  }

  throw new Error("Missing locale data for the locale \"".concat(locale, "\"."));
}
/**
 * Retrieves the default currency code for the given locale.
 *
 * The default is defined as the first currency which is still in use.
 *
 * @param locale The code of the locale whose currency code we want.
 * @returns The code of the default currency for the given locale.
 *
 */


function getLocaleCurrencyCode(locale) {
  var data = findLocaleData(locale);
  return data[LocaleDataIndex.CurrencyCode] || null;
}
/**
 * Retrieves the plural function used by ICU expressions to determine the plural case to use
 * for a given locale.
 * @param locale A locale code for the locale format rules to use.
 * @returns The plural function for the locale.
 * @see `NgPlural`
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 */


function getLocalePluralCase(locale) {
  var data = findLocaleData(locale);
  return data[LocaleDataIndex.PluralCase];
}
/**
 * Helper function to get the given `normalizedLocale` from `LOCALE_DATA`
 * or from the global `ng.common.locale`.
 */


function getLocaleData(normalizedLocale) {
  if (!(normalizedLocale in LOCALE_DATA)) {
    LOCALE_DATA[normalizedLocale] = _global.ng && _global.ng.common && _global.ng.common.locales && _global.ng.common.locales[normalizedLocale];
  }

  return LOCALE_DATA[normalizedLocale];
}
/**
 * Helper function to remove all the locale data from `LOCALE_DATA`.
 */


function unregisterAllLocaleData() {
  LOCALE_DATA = {};
}
/**
 * Index of each type of locale data from the locale data array
 */


var LocaleDataIndex = /*@__PURE__*/function (LocaleDataIndex) {
  LocaleDataIndex[LocaleDataIndex["LocaleId"] = 0] = "LocaleId";
  LocaleDataIndex[LocaleDataIndex["DayPeriodsFormat"] = 1] = "DayPeriodsFormat";
  LocaleDataIndex[LocaleDataIndex["DayPeriodsStandalone"] = 2] = "DayPeriodsStandalone";
  LocaleDataIndex[LocaleDataIndex["DaysFormat"] = 3] = "DaysFormat";
  LocaleDataIndex[LocaleDataIndex["DaysStandalone"] = 4] = "DaysStandalone";
  LocaleDataIndex[LocaleDataIndex["MonthsFormat"] = 5] = "MonthsFormat";
  LocaleDataIndex[LocaleDataIndex["MonthsStandalone"] = 6] = "MonthsStandalone";
  LocaleDataIndex[LocaleDataIndex["Eras"] = 7] = "Eras";
  LocaleDataIndex[LocaleDataIndex["FirstDayOfWeek"] = 8] = "FirstDayOfWeek";
  LocaleDataIndex[LocaleDataIndex["WeekendRange"] = 9] = "WeekendRange";
  LocaleDataIndex[LocaleDataIndex["DateFormat"] = 10] = "DateFormat";
  LocaleDataIndex[LocaleDataIndex["TimeFormat"] = 11] = "TimeFormat";
  LocaleDataIndex[LocaleDataIndex["DateTimeFormat"] = 12] = "DateTimeFormat";
  LocaleDataIndex[LocaleDataIndex["NumberSymbols"] = 13] = "NumberSymbols";
  LocaleDataIndex[LocaleDataIndex["NumberFormats"] = 14] = "NumberFormats";
  LocaleDataIndex[LocaleDataIndex["CurrencyCode"] = 15] = "CurrencyCode";
  LocaleDataIndex[LocaleDataIndex["CurrencySymbol"] = 16] = "CurrencySymbol";
  LocaleDataIndex[LocaleDataIndex["CurrencyName"] = 17] = "CurrencyName";
  LocaleDataIndex[LocaleDataIndex["Currencies"] = 18] = "Currencies";
  LocaleDataIndex[LocaleDataIndex["Directionality"] = 19] = "Directionality";
  LocaleDataIndex[LocaleDataIndex["PluralCase"] = 20] = "PluralCase";
  LocaleDataIndex[LocaleDataIndex["ExtraData"] = 21] = "ExtraData";
  return LocaleDataIndex;
}({});
/**
 * Returns the canonical form of a locale name - lowercase with `_` replaced with `-`.
 */


function normalizeLocale(locale) {
  return locale.toLowerCase().replace(/_/g, '-');
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var pluralMapping = ['zero', 'one', 'two', 'few', 'many'];
/**
 * Returns the plural case based on the locale
 */

function getPluralCase(value, locale) {
  var plural = getLocalePluralCase(locale)(parseInt(value, 10));
  var result = pluralMapping[plural];
  return result !== undefined ? result : 'other';
}
/**
 * The locale id that the application is using by default (for translations and ICU expressions).
 */


var DEFAULT_LOCALE_ID = 'en-US';
/**
 * USD currency code that the application uses by default for CurrencyPipe when no
 * DEFAULT_CURRENCY_CODE is provided.
 */

var USD_CURRENCY_CODE = 'USD';
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Marks that the next string is an element name.
 *
 * See `I18nMutateOpCodes` documentation.
 */

var ELEMENT_MARKER = {
  marker: 'element'
};
/**
 * Marks that the next string is comment text need for ICU.
 *
 * See `I18nMutateOpCodes` documentation.
 */

var ICU_MARKER = {
  marker: 'ICU'
};
/**
 * See `I18nCreateOpCodes`
 */

var I18nCreateOpCode = /*@__PURE__*/function (I18nCreateOpCode) {
  /**
   * Number of bits to shift index so that it can be combined with the `APPEND_EAGERLY` and
   * `COMMENT`.
   */
  I18nCreateOpCode[I18nCreateOpCode["SHIFT"] = 2] = "SHIFT";
  /**
   * Should the node be appended to parent imedditatly after creation.
   */

  I18nCreateOpCode[I18nCreateOpCode["APPEND_EAGERLY"] = 1] = "APPEND_EAGERLY";
  /**
   * If set the node should be comment (rather than a text) node.
   */

  I18nCreateOpCode[I18nCreateOpCode["COMMENT"] = 2] = "COMMENT";
  return I18nCreateOpCode;
}({}); // Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.


var unusedValueExportToPlacateAjd$6 = 1;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The locale id that the application is currently using (for translations and ICU expressions).
 * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine
 * but is now defined as a global value.
 */

var LOCALE_ID = DEFAULT_LOCALE_ID;
/**
 * Sets the locale id that will be used for translations and ICU expressions.
 * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine
 * but is now defined as a global value.
 *
 * @param localeId
 */

function setLocaleId(localeId) {
  assertDefined(localeId, "Expected localeId to be defined");

  if (typeof localeId === 'string') {
    LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');
  }
}
/**
 * Gets the locale id that will be used for translations and ICU expressions.
 * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine
 * but is now defined as a global value.
 */


function getLocaleId() {
  return LOCALE_ID;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Find a node in front of which `currentTNode` should be inserted (takes i18n into account).
 *
 * This method determines the `RNode` in front of which we should insert the `currentRNode`. This
 * takes `TNode.insertBeforeIndex` into account.
 *
 * @param parentTNode parent `TNode`
 * @param currentTNode current `TNode` (The node which we would like to insert into the DOM)
 * @param lView current `LView`
 */


function getInsertInFrontOfRNodeWithI18n(parentTNode, currentTNode, lView) {
  var tNodeInsertBeforeIndex = currentTNode.insertBeforeIndex;
  var insertBeforeIndex = Array.isArray(tNodeInsertBeforeIndex) ? tNodeInsertBeforeIndex[0] : tNodeInsertBeforeIndex;

  if (insertBeforeIndex === null) {
    return getInsertInFrontOfRNodeWithNoI18n(parentTNode, currentTNode, lView);
  } else {
    ngDevMode && assertIndexInRange(lView, insertBeforeIndex);
    return unwrapRNode(lView[insertBeforeIndex]);
  }
}
/**
 * Process `TNode.insertBeforeIndex` by adding i18n text nodes.
 *
 * See `TNode.insertBeforeIndex`
 */


function processI18nInsertBefore(renderer, childTNode, lView, childRNode, parentRElement) {
  var tNodeInsertBeforeIndex = childTNode.insertBeforeIndex;

  if (Array.isArray(tNodeInsertBeforeIndex)) {
    // An array indicates that there are i18n nodes that need to be added as children of this
    // `childRNode`. These i18n nodes were created before this `childRNode` was available and so
    // only now can be added. The first element of the array is the normal index where we should
    // insert the `childRNode`. Additional elements are the extra nodes to be added as children of
    // `childRNode`.
    ngDevMode && assertDomNode(childRNode);
    var i18nParent = childRNode;
    var anchorRNode = null;

    if (!(childTNode.type & 3
    /* AnyRNode */
    )) {
      anchorRNode = i18nParent;
      i18nParent = parentRElement;
    }

    if (i18nParent !== null && (childTNode.flags & 2
    /* isComponentHost */
    ) === 0) {
      for (var i = 1; i < tNodeInsertBeforeIndex.length; i++) {
        // No need to `unwrapRNode` because all of the indexes point to i18n text nodes.
        // see `assertDomNode` below.
        var i18nChild = lView[tNodeInsertBeforeIndex[i]];
        nativeInsertBefore(renderer, i18nParent, i18nChild, anchorRNode, false);
      }
    }
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Add `tNode` to `previousTNodes` list and update relevant `TNode`s in `previousTNodes` list
 * `tNode.insertBeforeIndex`.
 *
 * Things to keep in mind:
 * 1. All i18n text nodes are encoded as `TNodeType.Element` and are created eagerly by the
 *    `ɵɵi18nStart` instruction.
 * 2. All `TNodeType.Placeholder` `TNodes` are elements which will be created later by
 *    `ɵɵelementStart` instruction.
 * 3. `ɵɵelementStart` instruction will create `TNode`s in the ascending `TNode.index` order. (So a
 *    smaller index `TNode` is guaranteed to be created before a larger one)
 *
 * We use the above three invariants to determine `TNode.insertBeforeIndex`.
 *
 * In an ideal world `TNode.insertBeforeIndex` would always be `TNode.next.index`. However,
 * this will not work because `TNode.next.index` may be larger than `TNode.index` which means that
 * the next node is not yet created and therefore we can't insert in front of it.
 *
 * Rule1: `TNode.insertBeforeIndex = null` if `TNode.next === null` (Initial condition, as we don't
 *        know if there will be further `TNode`s inserted after.)
 * Rule2: If `previousTNode` is created after the `tNode` being inserted, then
 *        `previousTNode.insertBeforeNode = tNode.index` (So when a new `tNode` is added we check
 *        previous to see if we can update its `insertBeforeTNode`)
 *
 * See `TNode.insertBeforeIndex` for more context.
 *
 * @param previousTNodes A list of previous TNodes so that we can easily traverse `TNode`s in
 *     reverse order. (If `TNode` would have `previous` this would not be necessary.)
 * @param newTNode A TNode to add to the `previousTNodes` list.
 */


function addTNodeAndUpdateInsertBeforeIndex(previousTNodes, newTNode) {
  // Start with Rule1
  ngDevMode && assertEqual(newTNode.insertBeforeIndex, null, 'We expect that insertBeforeIndex is not set');
  previousTNodes.push(newTNode);

  if (previousTNodes.length > 1) {
    for (var i = previousTNodes.length - 2; i >= 0; i--) {
      var existingTNode = previousTNodes[i]; // Text nodes are created eagerly and so they don't need their `indexBeforeIndex` updated.
      // It is safe to ignore them.

      if (!isI18nText(existingTNode)) {
        if (isNewTNodeCreatedBefore(existingTNode, newTNode) && getInsertBeforeIndex(existingTNode) === null) {
          // If it was created before us in time, (and it does not yet have `insertBeforeIndex`)
          // then add the `insertBeforeIndex`.
          setInsertBeforeIndex(existingTNode, newTNode.index);
        }
      }
    }
  }
}

function isI18nText(tNode) {
  return !(tNode.type & 64
  /* Placeholder */
  );
}

function isNewTNodeCreatedBefore(existingTNode, newTNode) {
  return isI18nText(newTNode) || existingTNode.index > newTNode.index;
}

function getInsertBeforeIndex(tNode) {
  var index = tNode.insertBeforeIndex;
  return Array.isArray(index) ? index[0] : index;
}

function setInsertBeforeIndex(tNode, value) {
  var index = tNode.insertBeforeIndex;

  if (Array.isArray(index)) {
    // Array is stored if we have to insert child nodes. See `TNode.insertBeforeIndex`
    index[0] = value;
  } else {
    setI18nHandling(getInsertInFrontOfRNodeWithI18n, processI18nInsertBefore);
    tNode.insertBeforeIndex = value;
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Retrieve `TIcu` at a given `index`.
 *
 * The `TIcu` can be stored either directly (if it is nested ICU) OR
 * it is stored inside tho `TIcuContainer` if it is top level ICU.
 *
 * The reason for this is that the top level ICU need a `TNode` so that they are part of the render
 * tree, but nested ICU's have no TNode, because we don't know ahead of time if the nested ICU is
 * expressed (parent ICU may have selected a case which does not contain it.)
 *
 * @param tView Current `TView`.
 * @param index Index where the value should be read from.
 */


function getTIcu(tView, index) {
  var value = tView.data[index];
  if (value === null || typeof value === 'string') return null;

  if (ngDevMode && !(value.hasOwnProperty('tViews') || value.hasOwnProperty('currentCaseLViewIndex'))) {
    throwError('We expect to get \'null\'|\'TIcu\'|\'TIcuContainer\', but got: ' + value);
  } // Here the `value.hasOwnProperty('currentCaseLViewIndex')` is a polymorphic read as it can be
  // either TIcu or TIcuContainerNode. This is not ideal, but we still think it is OK because it
  // will be just two cases which fits into the browser inline cache (inline cache can take up to
  // 4)


  var tIcu = value.hasOwnProperty('currentCaseLViewIndex') ? value : value.value;
  ngDevMode && assertTIcu(tIcu);
  return tIcu;
}
/**
 * Store `TIcu` at a give `index`.
 *
 * The `TIcu` can be stored either directly (if it is nested ICU) OR
 * it is stored inside tho `TIcuContainer` if it is top level ICU.
 *
 * The reason for this is that the top level ICU need a `TNode` so that they are part of the render
 * tree, but nested ICU's have no TNode, because we don't know ahead of time if the nested ICU is
 * expressed (parent ICU may have selected a case which does not contain it.)
 *
 * @param tView Current `TView`.
 * @param index Index where the value should be stored at in `Tview.data`
 * @param tIcu The TIcu to store.
 */


function setTIcu(tView, index, tIcu) {
  var tNode = tView.data[index];
  ngDevMode && assertEqual(tNode === null || tNode.hasOwnProperty('tViews'), true, 'We expect to get \'null\'|\'TIcuContainer\'');

  if (tNode === null) {
    tView.data[index] = tIcu;
  } else {
    ngDevMode && assertTNodeType(tNode, 32
    /* Icu */
    );
    tNode.value = tIcu;
  }
}
/**
 * Set `TNode.insertBeforeIndex` taking the `Array` into account.
 *
 * See `TNode.insertBeforeIndex`
 */


function setTNodeInsertBeforeIndex(tNode, index) {
  ngDevMode && assertTNode(tNode);
  var insertBeforeIndex = tNode.insertBeforeIndex;

  if (insertBeforeIndex === null) {
    setI18nHandling(getInsertInFrontOfRNodeWithI18n, processI18nInsertBefore);
    insertBeforeIndex = tNode.insertBeforeIndex = [null
    /* may be updated to number later */
    , index];
  } else {
    assertEqual(Array.isArray(insertBeforeIndex), true, 'Expecting array here');
    insertBeforeIndex.push(index);
  }
}
/**
 * Create `TNode.type=TNodeType.Placeholder` node.
 *
 * See `TNodeType.Placeholder` for more information.
 */


function createTNodePlaceholder(tView, previousTNodes, index) {
  var tNode = createTNodeAtIndex(tView, index, 64
  /* Placeholder */
  , null, null);
  addTNodeAndUpdateInsertBeforeIndex(previousTNodes, tNode);
  return tNode;
}
/**
 * Returns current ICU case.
 *
 * ICU cases are stored as index into the `TIcu.cases`.
 * At times it is necessary to communicate that the ICU case just switched and that next ICU update
 * should update all bindings regardless of the mask. In such a case the we store negative numbers
 * for cases which have just been switched. This function removes the negative flag.
 */


function getCurrentICUCaseIndex(tIcu, lView) {
  var currentCase = lView[tIcu.currentCaseLViewIndex];
  return currentCase === null ? currentCase : currentCase < 0 ? ~currentCase : currentCase;
}

function getParentFromIcuCreateOpCode(mergedCode) {
  return mergedCode >>> 17
  /* SHIFT_PARENT */
  ;
}

function getRefFromIcuCreateOpCode(mergedCode) {
  return (mergedCode & 131070
  /* MASK_REF */
  ) >>> 1
  /* SHIFT_REF */
  ;
}

function getInstructionFromIcuCreateOpCode(mergedCode) {
  return mergedCode & 1
  /* MASK_INSTRUCTION */
  ;
}

function icuCreateOpCode(opCode, parentIdx, refIdx) {
  ngDevMode && assertGreaterThanOrEqual(parentIdx, 0, 'Missing parent index');
  ngDevMode && assertGreaterThan(refIdx, 0, 'Missing ref index');
  return opCode | parentIdx << 17
  /* SHIFT_PARENT */
  | refIdx << 1
  /* SHIFT_REF */
  ;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Keep track of which input bindings in `ɵɵi18nExp` have changed.
 *
 * This is used to efficiently update expressions in i18n only when the corresponding input has
 * changed.
 *
 * 1) Each bit represents which of the `ɵɵi18nExp` has changed.
 * 2) There are 32 bits allowed in JS.
 * 3) Bit 32 is special as it is shared for all changes past 32. (In other words if you have more
 * than 32 `ɵɵi18nExp` then all changes past 32nd `ɵɵi18nExp` will be mapped to same bit. This means
 * that we may end up changing more than we need to. But i18n expressions with 32 bindings is rare
 * so in practice it should not be an issue.)
 */


var changeMask = 0;
/**
 * Keeps track of which bit needs to be updated in `changeMask`
 *
 * This value gets incremented on every call to `ɵɵi18nExp`
 */

var changeMaskCounter = 0;
/**
 * Keep track of which input bindings in `ɵɵi18nExp` have changed.
 *
 * `setMaskBit` gets invoked by each call to `ɵɵi18nExp`.
 *
 * @param hasChange did `ɵɵi18nExp` detect a change.
 */

function setMaskBit(hasChange) {
  if (hasChange) {
    changeMask = changeMask | 1 << Math.min(changeMaskCounter, 31);
  }

  changeMaskCounter++;
}

function applyI18n(tView, lView, index) {
  if (changeMaskCounter > 0) {
    ngDevMode && assertDefined(tView, "tView should be defined");
    var tI18n = tView.data[index]; // When `index` points to an `ɵɵi18nAttributes` then we have an array otherwise `TI18n`

    var updateOpCodes = Array.isArray(tI18n) ? tI18n : tI18n.update;
    var bindingsStartIndex = getBindingIndex() - changeMaskCounter - 1;
    applyUpdateOpCodes(tView, lView, updateOpCodes, bindingsStartIndex, changeMask);
  } // Reset changeMask & maskBit to default for the next update cycle


  changeMask = 0;
  changeMaskCounter = 0;
}
/**
 * Apply `I18nCreateOpCodes` op-codes as stored in `TI18n.create`.
 *
 * Creates text (and comment) nodes which are internationalized.
 *
 * @param lView Current lView
 * @param createOpCodes Set of op-codes to apply
 * @param parentRNode Parent node (so that direct children can be added eagerly) or `null` if it is
 *     a root node.
 * @param insertInFrontOf DOM node that should be used as an anchor.
 */


function applyCreateOpCodes(lView, createOpCodes, parentRNode, insertInFrontOf) {
  var renderer = lView[RENDERER];

  for (var i = 0; i < createOpCodes.length; i++) {
    var opCode = createOpCodes[i++];
    var text = createOpCodes[i];
    var isComment = (opCode & I18nCreateOpCode.COMMENT) === I18nCreateOpCode.COMMENT;
    var appendNow = (opCode & I18nCreateOpCode.APPEND_EAGERLY) === I18nCreateOpCode.APPEND_EAGERLY;
    var index = opCode >>> I18nCreateOpCode.SHIFT;
    var rNode = lView[index];

    if (rNode === null) {
      // We only create new DOM nodes if they don't already exist: If ICU switches case back to a
      // case which was already instantiated, no need to create new DOM nodes.
      rNode = lView[index] = isComment ? renderer.createComment(text) : createTextNode(renderer, text);
    }

    if (appendNow && parentRNode !== null) {
      nativeInsertBefore(renderer, parentRNode, rNode, insertInFrontOf, false);
    }
  }
}
/**
 * Apply `I18nMutateOpCodes` OpCodes.
 *
 * @param tView Current `TView`
 * @param mutableOpCodes Mutable OpCodes to process
 * @param lView Current `LView`
 * @param anchorRNode place where the i18n node should be inserted.
 */


function applyMutableOpCodes(tView, mutableOpCodes, lView, anchorRNode) {
  ngDevMode && assertDomNode(anchorRNode);
  var renderer = lView[RENDERER]; // `rootIdx` represents the node into which all inserts happen.

  var rootIdx = null; // `rootRNode` represents the real node into which we insert. This can be different from
  // `lView[rootIdx]` if we have projection.
  //  - null we don't have a parent (as can be the case in when we are inserting into a root of
  //    LView which has no parent.)
  //  - `RElement` The element representing the root after taking projection into account.

  var rootRNode;

  for (var i = 0; i < mutableOpCodes.length; i++) {
    var opCode = mutableOpCodes[i];

    if (typeof opCode == 'string') {
      var textNodeIndex = mutableOpCodes[++i];

      if (lView[textNodeIndex] === null) {
        ngDevMode && ngDevMode.rendererCreateTextNode++;
        ngDevMode && assertIndexInRange(lView, textNodeIndex);
        lView[textNodeIndex] = createTextNode(renderer, opCode);
      }
    } else if (typeof opCode == 'number') {
      switch (opCode & 1
      /* MASK_INSTRUCTION */
      ) {
        case 0
        /* AppendChild */
        :
          var parentIdx = getParentFromIcuCreateOpCode(opCode);

          if (rootIdx === null) {
            // The first operation should save the `rootIdx` because the first operation
            // must insert into the root. (Only subsequent operations can insert into a dynamic
            // parent)
            rootIdx = parentIdx;
            rootRNode = nativeParentNode(renderer, anchorRNode);
          }

          var insertInFrontOf = void 0;
          var parentRNode = void 0;

          if (parentIdx === rootIdx) {
            insertInFrontOf = anchorRNode;
            parentRNode = rootRNode;
          } else {
            insertInFrontOf = null;
            parentRNode = unwrapRNode(lView[parentIdx]);
          } // FIXME(misko): Refactor with `processI18nText`


          if (parentRNode !== null) {
            // This can happen if the `LView` we are adding to is not attached to a parent `LView`.
            // In such a case there is no "root" we can attach to. This is fine, as we still need to
            // create the elements. When the `LView` gets later added to a parent these "root" nodes
            // get picked up and added.
            ngDevMode && assertDomNode(parentRNode);
            var refIdx = getRefFromIcuCreateOpCode(opCode);
            ngDevMode && assertGreaterThan(refIdx, HEADER_OFFSET, 'Missing ref'); // `unwrapRNode` is not needed here as all of these point to RNodes as part of the i18n
            // which can't have components.

            var child = lView[refIdx];
            ngDevMode && assertDomNode(child);
            nativeInsertBefore(renderer, parentRNode, child, insertInFrontOf, false);
            var tIcu = getTIcu(tView, refIdx);

            if (tIcu !== null && typeof tIcu === 'object') {
              // If we just added a comment node which has ICU then that ICU may have already been
              // rendered and therefore we need to re-add it here.
              ngDevMode && assertTIcu(tIcu);
              var caseIndex = getCurrentICUCaseIndex(tIcu, lView);

              if (caseIndex !== null) {
                applyMutableOpCodes(tView, tIcu.create[caseIndex], lView, lView[tIcu.anchorIdx]);
              }
            }
          }

          break;

        case 1
        /* Attr */
        :
          var elementNodeIndex = opCode >>> 1
          /* SHIFT_REF */
          ;
          var attrName = mutableOpCodes[++i];
          var attrValue = mutableOpCodes[++i]; // This code is used for ICU expressions only, since we don't support
          // directives/components in ICUs, we don't need to worry about inputs here

          setElementAttribute(renderer, getNativeByIndex(elementNodeIndex, lView), null, null, attrName, attrValue, null);
          break;

        default:
          throw new Error("Unable to determine the type of mutate operation for \"".concat(opCode, "\""));
      }
    } else {
      switch (opCode) {
        case ICU_MARKER:
          var commentValue = mutableOpCodes[++i];
          var commentNodeIndex = mutableOpCodes[++i];

          if (lView[commentNodeIndex] === null) {
            ngDevMode && assertEqual(typeof commentValue, 'string', "Expected \"".concat(commentValue, "\" to be a comment node value"));
            ngDevMode && ngDevMode.rendererCreateComment++;
            ngDevMode && assertIndexInExpandoRange(lView, commentNodeIndex);
            var commentRNode = lView[commentNodeIndex] = createCommentNode(renderer, commentValue); // FIXME(misko): Attaching patch data is only needed for the root (Also add tests)

            attachPatchData(commentRNode, lView);
          }

          break;

        case ELEMENT_MARKER:
          var tagName = mutableOpCodes[++i];
          var _elementNodeIndex = mutableOpCodes[++i];

          if (lView[_elementNodeIndex] === null) {
            ngDevMode && assertEqual(typeof tagName, 'string', "Expected \"".concat(tagName, "\" to be an element node tag name"));
            ngDevMode && ngDevMode.rendererCreateElement++;
            ngDevMode && assertIndexInExpandoRange(lView, _elementNodeIndex);
            var elementRNode = lView[_elementNodeIndex] = createElementNode(renderer, tagName, null); // FIXME(misko): Attaching patch data is only needed for the root (Also add tests)

            attachPatchData(elementRNode, lView);
          }

          break;

        default:
          ngDevMode && throwError("Unable to determine the type of mutate operation for \"".concat(opCode, "\""));
      }
    }
  }
}
/**
 * Apply `I18nUpdateOpCodes` OpCodes
 *
 * @param tView Current `TView`
 * @param lView Current `LView`
 * @param updateOpCodes OpCodes to process
 * @param bindingsStartIndex Location of the first `ɵɵi18nApply`
 * @param changeMask Each bit corresponds to a `ɵɵi18nExp` (Counting backwards from
 *     `bindingsStartIndex`)
 */


function applyUpdateOpCodes(tView, lView, updateOpCodes, bindingsStartIndex, changeMask) {
  for (var i = 0; i < updateOpCodes.length; i++) {
    // bit code to check if we should apply the next update
    var checkBit = updateOpCodes[i]; // Number of opCodes to skip until next set of update codes

    var skipCodes = updateOpCodes[++i];

    if (checkBit & changeMask) {
      // The value has been updated since last checked
      var value = '';

      for (var j = i + 1; j <= i + skipCodes; j++) {
        var opCode = updateOpCodes[j];

        if (typeof opCode == 'string') {
          value += opCode;
        } else if (typeof opCode == 'number') {
          if (opCode < 0) {
            // Negative opCode represent `i18nExp` values offset.
            value += renderStringify(lView[bindingsStartIndex - opCode]);
          } else {
            var nodeIndex = opCode >>> 2
            /* SHIFT_REF */
            ;

            switch (opCode & 3
            /* MASK_OPCODE */
            ) {
              case 1
              /* Attr */
              :
                var propName = updateOpCodes[++j];
                var sanitizeFn = updateOpCodes[++j];
                var tNodeOrTagName = tView.data[nodeIndex];
                ngDevMode && assertDefined(tNodeOrTagName, 'Experting TNode or string');

                if (typeof tNodeOrTagName === 'string') {
                  // IF we don't have a `TNode`, then we are an element in ICU (as ICU content does
                  // not have TNode), in which case we know that there are no directives, and hence
                  // we use attribute setting.
                  setElementAttribute(lView[RENDERER], lView[nodeIndex], null, tNodeOrTagName, propName, value, sanitizeFn);
                } else {
                  elementPropertyInternal(tView, tNodeOrTagName, lView, propName, value, lView[RENDERER], sanitizeFn, false);
                }

                break;

              case 0
              /* Text */
              :
                var rText = lView[nodeIndex];
                rText !== null && updateTextNode(lView[RENDERER], rText, value);
                break;

              case 2
              /* IcuSwitch */
              :
                applyIcuSwitchCase(tView, getTIcu(tView, nodeIndex), lView, value);
                break;

              case 3
              /* IcuUpdate */
              :
                applyIcuUpdateCase(tView, getTIcu(tView, nodeIndex), bindingsStartIndex, lView);
                break;
            }
          }
        }
      }
    } else {
      var _opCode = updateOpCodes[i + 1];

      if (_opCode > 0 && (_opCode & 3
      /* MASK_OPCODE */
      ) === 3
      /* IcuUpdate */
      ) {
          // Special case for the `icuUpdateCase`. It could be that the mask did not match, but
          // we still need to execute `icuUpdateCase` because the case has changed recently due to
          // previous `icuSwitchCase` instruction. (`icuSwitchCase` and `icuUpdateCase` always come in
          // pairs.)
          var _nodeIndex = _opCode >>> 2
          /* SHIFT_REF */
          ;

          var tIcu = getTIcu(tView, _nodeIndex);
          var currentIndex = lView[tIcu.currentCaseLViewIndex];

          if (currentIndex < 0) {
            applyIcuUpdateCase(tView, tIcu, bindingsStartIndex, lView);
          }
        }
    }

    i += skipCodes;
  }
}
/**
 * Apply OpCodes associated with updating an existing ICU.
 *
 * @param tView Current `TView`
 * @param tIcu Current `TIcu`
 * @param bindingsStartIndex Location of the first `ɵɵi18nApply`
 * @param lView Current `LView`
 */


function applyIcuUpdateCase(tView, tIcu, bindingsStartIndex, lView) {
  ngDevMode && assertIndexInRange(lView, tIcu.currentCaseLViewIndex);
  var activeCaseIndex = lView[tIcu.currentCaseLViewIndex];

  if (activeCaseIndex !== null) {
    var mask = changeMask;

    if (activeCaseIndex < 0) {
      // Clear the flag.
      // Negative number means that the ICU was freshly created and we need to force the update.
      activeCaseIndex = lView[tIcu.currentCaseLViewIndex] = ~activeCaseIndex; // -1 is same as all bits on, which simulates creation since it marks all bits dirty

      mask = -1;
    }

    applyUpdateOpCodes(tView, lView, tIcu.update[activeCaseIndex], bindingsStartIndex, mask);
  }
}
/**
 * Apply OpCodes associated with switching a case on ICU.
 *
 * This involves tearing down existing case and than building up a new case.
 *
 * @param tView Current `TView`
 * @param tIcu Current `TIcu`
 * @param lView Current `LView`
 * @param value Value of the case to update to.
 */


function applyIcuSwitchCase(tView, tIcu, lView, value) {
  // Rebuild a new case for this ICU
  var caseIndex = getCaseIndex(tIcu, value);
  var activeCaseIndex = getCurrentICUCaseIndex(tIcu, lView);

  if (activeCaseIndex !== caseIndex) {
    applyIcuSwitchCaseRemove(tView, tIcu, lView);
    lView[tIcu.currentCaseLViewIndex] = caseIndex === null ? null : ~caseIndex;

    if (caseIndex !== null) {
      // Add the nodes for the new case
      var anchorRNode = lView[tIcu.anchorIdx];

      if (anchorRNode) {
        ngDevMode && assertDomNode(anchorRNode);
        applyMutableOpCodes(tView, tIcu.create[caseIndex], lView, anchorRNode);
      }
    }
  }
}
/**
 * Apply OpCodes associated with tearing ICU case.
 *
 * This involves tearing down existing case and than building up a new case.
 *
 * @param tView Current `TView`
 * @param tIcu Current `TIcu`
 * @param lView Current `LView`
 */


function applyIcuSwitchCaseRemove(tView, tIcu, lView) {
  var activeCaseIndex = getCurrentICUCaseIndex(tIcu, lView);

  if (activeCaseIndex !== null) {
    var removeCodes = tIcu.remove[activeCaseIndex];

    for (var i = 0; i < removeCodes.length; i++) {
      var nodeOrIcuIndex = removeCodes[i];

      if (nodeOrIcuIndex > 0) {
        // Positive numbers are `RNode`s.
        var rNode = getNativeByIndex(nodeOrIcuIndex, lView);
        rNode !== null && nativeRemoveNode(lView[RENDERER], rNode);
      } else {
        // Negative numbers are ICUs
        applyIcuSwitchCaseRemove(tView, getTIcu(tView, ~nodeOrIcuIndex), lView);
      }
    }
  }
}
/**
 * Returns the index of the current case of an ICU expression depending on the main binding value
 *
 * @param icuExpression
 * @param bindingValue The value of the main binding used by this ICU expression
 */


function getCaseIndex(icuExpression, bindingValue) {
  var index = icuExpression.cases.indexOf(bindingValue);

  if (index === -1) {
    switch (icuExpression.type) {
      case 1
      /* plural */
      :
        {
          var resolvedCase = getPluralCase(bindingValue, getLocaleId());
          index = icuExpression.cases.indexOf(resolvedCase);

          if (index === -1 && resolvedCase !== 'other') {
            index = icuExpression.cases.indexOf('other');
          }

          break;
        }

      case 0
      /* select */
      :
        {
          index = icuExpression.cases.indexOf('other');
          break;
        }
    }
  }

  return index === -1 ? null : index;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function loadIcuContainerVisitor() {
  var _stack = [];

  var _index = -1;

  var _lView;

  var _removes;
  /**
   * Retrieves a set of root nodes from `TIcu.remove`. Used by `TNodeType.ICUContainer`
   * to determine which root belong to the ICU.
   *
   * Example of usage.
   * ```
   * const nextRNode = icuContainerIteratorStart(tIcuContainerNode, lView);
   * let rNode: RNode|null;
   * while(rNode = nextRNode()) {
   *   console.log(rNode);
   * }
   * ```
   *
   * @param tIcuContainerNode Current `TIcuContainerNode`
   * @param lView `LView` where the `RNode`s should be looked up.
   */


  function icuContainerIteratorStart(tIcuContainerNode, lView) {
    _lView = lView;

    while (_stack.length) {
      _stack.pop();
    }

    ngDevMode && assertTNodeForLView(tIcuContainerNode, lView);
    enterIcu(tIcuContainerNode.value, lView);
    return icuContainerIteratorNext;
  }

  function enterIcu(tIcu, lView) {
    _index = 0;
    var currentCase = getCurrentICUCaseIndex(tIcu, lView);

    if (currentCase !== null) {
      ngDevMode && assertNumberInRange(currentCase, 0, tIcu.cases.length - 1);
      _removes = tIcu.remove[currentCase];
    } else {
      _removes = EMPTY_ARRAY;
    }
  }

  function icuContainerIteratorNext() {
    if (_index < _removes.length) {
      var removeOpCode = _removes[_index++];
      ngDevMode && assertNumber(removeOpCode, 'Expecting OpCode number');

      if (removeOpCode > 0) {
        var rNode = _lView[removeOpCode];
        ngDevMode && assertDomNode(rNode);
        return rNode;
      } else {
        _stack.push(_index, _removes); // ICUs are represented by negative indices


        var tIcuIndex = ~removeOpCode;
        var tIcu = _lView[TVIEW].data[tIcuIndex];
        ngDevMode && assertTIcu(tIcu);
        enterIcu(tIcu, _lView);
        return icuContainerIteratorNext();
      }
    } else {
      if (_stack.length === 0) {
        return null;
      } else {
        _removes = _stack.pop();
        _index = _stack.pop();
        return icuContainerIteratorNext();
      }
    }
  }

  return icuContainerIteratorStart;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Converts `I18nCreateOpCodes` array into a human readable format.
 *
 * This function is attached to the `I18nCreateOpCodes.debug` property if `ngDevMode` is enabled.
 * This function provides a human readable view of the opcodes. This is useful when debugging the
 * application as well as writing more readable tests.
 *
 * @param this `I18nCreateOpCodes` if attached as a method.
 * @param opcodes `I18nCreateOpCodes` if invoked as a function.
 */


function i18nCreateOpCodesToString(opcodes) {
  var createOpCodes = opcodes || (Array.isArray(this) ? this : []);
  var lines = [];

  for (var i = 0; i < createOpCodes.length; i++) {
    var opCode = createOpCodes[i++];
    var text = createOpCodes[i];
    var isComment = (opCode & I18nCreateOpCode.COMMENT) === I18nCreateOpCode.COMMENT;
    var appendNow = (opCode & I18nCreateOpCode.APPEND_EAGERLY) === I18nCreateOpCode.APPEND_EAGERLY;
    var index = opCode >>> I18nCreateOpCode.SHIFT;
    lines.push("lView[".concat(index, "] = document.").concat(isComment ? 'createComment' : 'createText', "(").concat(JSON.stringify(text), ");"));

    if (appendNow) {
      lines.push("parent.appendChild(lView[".concat(index, "]);"));
    }
  }

  return lines;
}
/**
 * Converts `I18nUpdateOpCodes` array into a human readable format.
 *
 * This function is attached to the `I18nUpdateOpCodes.debug` property if `ngDevMode` is enabled.
 * This function provides a human readable view of the opcodes. This is useful when debugging the
 * application as well as writing more readable tests.
 *
 * @param this `I18nUpdateOpCodes` if attached as a method.
 * @param opcodes `I18nUpdateOpCodes` if invoked as a function.
 */


function i18nUpdateOpCodesToString(opcodes) {
  var parser = new OpCodeParser(opcodes || (Array.isArray(this) ? this : []));
  var lines = [];

  function consumeOpCode(value) {
    var ref = value >>> 2
    /* SHIFT_REF */
    ;
    var opCode = value & 3
    /* MASK_OPCODE */
    ;

    switch (opCode) {
      case 0
      /* Text */
      :
        return "(lView[".concat(ref, "] as Text).textContent = $$$");

      case 1
      /* Attr */
      :
        var attrName = parser.consumeString();
        var sanitizationFn = parser.consumeFunction();

        var _value = sanitizationFn ? "(".concat(sanitizationFn, ")($$$)") : '$$$';

        return "(lView[".concat(ref, "] as Element).setAttribute('").concat(attrName, "', ").concat(_value, ")");

      case 2
      /* IcuSwitch */
      :
        return "icuSwitchCase(".concat(ref, ", $$$)");

      case 3
      /* IcuUpdate */
      :
        return "icuUpdateCase(".concat(ref, ")");
    }

    throw new Error('unexpected OpCode');
  }

  while (parser.hasMore()) {
    var mask = parser.consumeNumber();
    var size = parser.consumeNumber();
    var end = parser.i + size;
    var statements = [];
    var statement = '';

    while (parser.i < end) {
      var value = parser.consumeNumberOrString();

      if (typeof value === 'string') {
        statement += value;
      } else if (value < 0) {
        // Negative numbers are ref indexes
        // Here `i` refers to current binding index. It is to signify that the value is relative,
        // rather than absolute.
        statement += '${lView[i' + value + ']}';
      } else {
        // Positive numbers are operations.
        var opCodeText = consumeOpCode(value);
        statements.push(opCodeText.replace('$$$', '`' + statement + '`') + ';');
        statement = '';
      }
    }

    lines.push("if (mask & 0b".concat(mask.toString(2), ") { ").concat(statements.join(' '), " }"));
  }

  return lines;
}
/**
 * Converts `I18nCreateOpCodes` array into a human readable format.
 *
 * This function is attached to the `I18nCreateOpCodes.debug` if `ngDevMode` is enabled. This
 * function provides a human readable view of the opcodes. This is useful when debugging the
 * application as well as writing more readable tests.
 *
 * @param this `I18nCreateOpCodes` if attached as a method.
 * @param opcodes `I18nCreateOpCodes` if invoked as a function.
 */


function icuCreateOpCodesToString(opcodes) {
  var parser = new OpCodeParser(opcodes || (Array.isArray(this) ? this : []));
  var lines = [];

  function consumeOpCode(opCode) {
    var parent = getParentFromIcuCreateOpCode(opCode);
    var ref = getRefFromIcuCreateOpCode(opCode);

    switch (getInstructionFromIcuCreateOpCode(opCode)) {
      case 0
      /* AppendChild */
      :
        return "(lView[".concat(parent, "] as Element).appendChild(lView[").concat(lastRef, "])");

      case 1
      /* Attr */
      :
        return "(lView[".concat(ref, "] as Element).setAttribute(\"").concat(parser.consumeString(), "\", \"").concat(parser.consumeString(), "\")");
    }

    throw new Error('Unexpected OpCode: ' + getInstructionFromIcuCreateOpCode(opCode));
  }

  var lastRef = -1;

  while (parser.hasMore()) {
    var value = parser.consumeNumberStringOrMarker();

    if (value === ICU_MARKER) {
      var text = parser.consumeString();
      lastRef = parser.consumeNumber();
      lines.push("lView[".concat(lastRef, "] = document.createComment(\"").concat(text, "\")"));
    } else if (value === ELEMENT_MARKER) {
      var _text = parser.consumeString();

      lastRef = parser.consumeNumber();
      lines.push("lView[".concat(lastRef, "] = document.createElement(\"").concat(_text, "\")"));
    } else if (typeof value === 'string') {
      lastRef = parser.consumeNumber();
      lines.push("lView[".concat(lastRef, "] = document.createTextNode(\"").concat(value, "\")"));
    } else if (typeof value === 'number') {
      var line = consumeOpCode(value);
      line && lines.push(line);
    } else {
      throw new Error('Unexpected value');
    }
  }

  return lines;
}
/**
 * Converts `I18nRemoveOpCodes` array into a human readable format.
 *
 * This function is attached to the `I18nRemoveOpCodes.debug` if `ngDevMode` is enabled. This
 * function provides a human readable view of the opcodes. This is useful when debugging the
 * application as well as writing more readable tests.
 *
 * @param this `I18nRemoveOpCodes` if attached as a method.
 * @param opcodes `I18nRemoveOpCodes` if invoked as a function.
 */


function i18nRemoveOpCodesToString(opcodes) {
  var removeCodes = opcodes || (Array.isArray(this) ? this : []);
  var lines = [];

  for (var i = 0; i < removeCodes.length; i++) {
    var nodeOrIcuIndex = removeCodes[i];

    if (nodeOrIcuIndex > 0) {
      // Positive numbers are `RNode`s.
      lines.push("remove(lView[".concat(nodeOrIcuIndex, "])"));
    } else {
      // Negative numbers are ICUs
      lines.push("removeNestedICU(".concat(~nodeOrIcuIndex, ")"));
    }
  }

  return lines;
}

var OpCodeParser = /*#__PURE__*/function () {
  function OpCodeParser(codes) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, OpCodeParser);

    this.i = 0;
    this.codes = codes;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(OpCodeParser, [{
    key: "hasMore",
    value: function hasMore() {
      return this.i < this.codes.length;
    }
  }, {
    key: "consumeNumber",
    value: function consumeNumber() {
      var value = this.codes[this.i++];
      assertNumber(value, 'expecting number in OpCode');
      return value;
    }
  }, {
    key: "consumeString",
    value: function consumeString() {
      var value = this.codes[this.i++];
      assertString(value, 'expecting string in OpCode');
      return value;
    }
  }, {
    key: "consumeFunction",
    value: function consumeFunction() {
      var value = this.codes[this.i++];

      if (value === null || typeof value === 'function') {
        return value;
      }

      throw new Error('expecting function in OpCode');
    }
  }, {
    key: "consumeNumberOrString",
    value: function consumeNumberOrString() {
      var value = this.codes[this.i++];

      if (typeof value === 'string') {
        return value;
      }

      assertNumber(value, 'expecting number or string in OpCode');
      return value;
    }
  }, {
    key: "consumeNumberStringOrMarker",
    value: function consumeNumberStringOrMarker() {
      var value = this.codes[this.i++];

      if (typeof value === 'string' || typeof value === 'number' || value == ICU_MARKER || value == ELEMENT_MARKER) {
        return value;
      }

      assertNumber(value, 'expecting number, string, ICU_MARKER or ELEMENT_MARKER in OpCode');
      return value;
    }
  }]);

  return OpCodeParser;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var BINDING_REGEXP = /�(\d+):?\d*�/gi;
var ICU_REGEXP = /({\s*�\d+:?\d*�\s*,\s*\S{6}\s*,[\s\S]*})/gi;
var NESTED_ICU = /�(\d+)�/;
var ICU_BLOCK_REGEXP = /^\s*(�\d+:?\d*�)\s*,\s*(select|plural)\s*,/;
var MARKER = "\uFFFD";
var SUBTEMPLATE_REGEXP = /�\/?\*(\d+:\d+)�/gi;
var PH_REGEXP = /�(\/?[#*]\d+):?\d*�/gi;
/**
 * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:
 * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32
 * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character
 * and later on replaced by a space. We are re-implementing the same idea here, since translations
 * might contain this special character.
 */

var NGSP_UNICODE_REGEXP = /\uE500/g;

function replaceNgsp(value) {
  return value.replace(NGSP_UNICODE_REGEXP, ' ');
}
/**
 * Create dynamic nodes from i18n translation block.
 *
 * - Text nodes are created synchronously
 * - TNodes are linked into tree lazily
 *
 * @param tView Current `TView`
 * @parentTNodeIndex index to the parent TNode of this i18n block
 * @param lView Current `LView`
 * @param index Index of `ɵɵi18nStart` instruction.
 * @param message Message to translate.
 * @param subTemplateIndex Index into the sub template of message translation. (ie in case of
 *     `ngIf`) (-1 otherwise)
 */


function i18nStartFirstCreatePass(tView, parentTNodeIndex, lView, index, message, subTemplateIndex) {
  var rootTNode = getCurrentParentTNode();
  var createOpCodes = [];
  var updateOpCodes = [];
  var existingTNodeStack = [[]];

  if (ngDevMode) {
    attachDebugGetter(createOpCodes, i18nCreateOpCodesToString);
    attachDebugGetter(updateOpCodes, i18nUpdateOpCodesToString);
  }

  message = getTranslationForTemplate(message, subTemplateIndex);
  var msgParts = replaceNgsp(message).split(PH_REGEXP);

  for (var i = 0; i < msgParts.length; i++) {
    var value = msgParts[i];

    if ((i & 1) === 0) {
      // Even indexes are text (including bindings & ICU expressions)
      var parts = i18nParseTextIntoPartsAndICU(value);

      for (var j = 0; j < parts.length; j++) {
        var part = parts[j];

        if ((j & 1) === 0) {
          // `j` is odd therefore `part` is string
          var text = part;
          ngDevMode && assertString(text, 'Parsed ICU part should be string');

          if (text !== '') {
            i18nStartFirstCreatePassProcessTextNode(tView, rootTNode, existingTNodeStack[0], createOpCodes, updateOpCodes, lView, text);
          }
        } else {
          // `j` is Even therefor `part` is an `ICUExpression`
          var icuExpression = part; // Verify that ICU expression has the right shape. Translations might contain invalid
          // constructions (while original messages were correct), so ICU parsing at runtime may
          // not succeed (thus `icuExpression` remains a string).
          // Note: we intentionally retain the error here by not using `ngDevMode`, because
          // the value can change based on the locale and users aren't guaranteed to hit
          // an invalid string while they're developing.

          if (typeof icuExpression !== 'object') {
            throw new Error("Unable to parse ICU expression in \"".concat(message, "\" message."));
          }

          var icuContainerTNode = createTNodeAndAddOpCode(tView, rootTNode, existingTNodeStack[0], lView, createOpCodes, ngDevMode ? "ICU ".concat(index, ":").concat(icuExpression.mainBinding) : '', true);
          var icuNodeIndex = icuContainerTNode.index;
          ngDevMode && assertGreaterThanOrEqual(icuNodeIndex, HEADER_OFFSET, 'Index must be in absolute LView offset');
          icuStart(tView, lView, updateOpCodes, parentTNodeIndex, icuExpression, icuNodeIndex);
        }
      }
    } else {
      // Odd indexes are placeholders (elements and sub-templates)
      // At this point value is something like: '/#1:2' (originally coming from '�/#1:2�')
      var isClosing = value.charCodeAt(0) === 47
      /* SLASH */
      ;
      var type = value.charCodeAt(isClosing ? 1 : 0);
      ngDevMode && assertOneOf(type, 42
      /* STAR */
      , 35
      /* HASH */
      );

      var _index2 = HEADER_OFFSET + Number.parseInt(value.substring(isClosing ? 2 : 1));

      if (isClosing) {
        existingTNodeStack.shift();
        setCurrentTNode(getCurrentParentTNode(), false);
      } else {
        var tNode = createTNodePlaceholder(tView, existingTNodeStack[0], _index2);
        existingTNodeStack.unshift([]);
        setCurrentTNode(tNode, true);
      }
    }
  }

  tView.data[index] = {
    create: createOpCodes,
    update: updateOpCodes
  };
}
/**
 * Allocate space in i18n Range add create OpCode instruction to crete a text or comment node.
 *
 * @param tView Current `TView` needed to allocate space in i18n range.
 * @param rootTNode Root `TNode` of the i18n block. This node determines if the new TNode will be
 *     added as part of the `i18nStart` instruction or as part of the `TNode.insertBeforeIndex`.
 * @param existingTNodes internal state for `addTNodeAndUpdateInsertBeforeIndex`.
 * @param lView Current `LView` needed to allocate space in i18n range.
 * @param createOpCodes Array storing `I18nCreateOpCodes` where new opCodes will be added.
 * @param text Text to be added when the `Text` or `Comment` node will be created.
 * @param isICU true if a `Comment` node for ICU (instead of `Text`) node should be created.
 */


function createTNodeAndAddOpCode(tView, rootTNode, existingTNodes, lView, createOpCodes, text, isICU) {
  var i18nNodeIdx = allocExpando(tView, lView, 1, null);
  var opCode = i18nNodeIdx << I18nCreateOpCode.SHIFT;
  var parentTNode = getCurrentParentTNode();

  if (rootTNode === parentTNode) {
    // FIXME(misko): A null `parentTNode` should represent when we fall of the `LView` boundary.
    // (there is no parent), but in some circumstances (because we are inconsistent about how we set
    // `previousOrParentTNode`) it could point to `rootTNode` So this is a work around.
    parentTNode = null;
  }

  if (parentTNode === null) {
    // If we don't have a parent that means that we can eagerly add nodes.
    // If we have a parent than these nodes can't be added now (as the parent has not been created
    // yet) and instead the `parentTNode` is responsible for adding it. See
    // `TNode.insertBeforeIndex`
    opCode |= I18nCreateOpCode.APPEND_EAGERLY;
  }

  if (isICU) {
    opCode |= I18nCreateOpCode.COMMENT;
    ensureIcuContainerVisitorLoaded(loadIcuContainerVisitor);
  }

  createOpCodes.push(opCode, text === null ? '' : text); // We store `{{?}}` so that when looking at debug `TNodeType.template` we can see where the
  // bindings are.

  var tNode = createTNodeAtIndex(tView, i18nNodeIdx, isICU ? 32
  /* Icu */
  : 1
  /* Text */
  , text === null ? ngDevMode ? '{{?}}' : '' : text, null);
  addTNodeAndUpdateInsertBeforeIndex(existingTNodes, tNode);
  var tNodeIdx = tNode.index;
  setCurrentTNode(tNode, false
  /* Text nodes are self closing */
  );

  if (parentTNode !== null && rootTNode !== parentTNode) {
    // We are a child of deeper node (rather than a direct child of `i18nStart` instruction.)
    // We have to make sure to add ourselves to the parent.
    setTNodeInsertBeforeIndex(parentTNode, tNodeIdx);
  }

  return tNode;
}
/**
 * Processes text node in i18n block.
 *
 * Text nodes can have:
 * - Create instruction in `createOpCodes` for creating the text node.
 * - Allocate spec for text node in i18n range of `LView`
 * - If contains binding:
 *    - bindings => allocate space in i18n range of `LView` to store the binding value.
 *    - populate `updateOpCodes` with update instructions.
 *
 * @param tView Current `TView`
 * @param rootTNode Root `TNode` of the i18n block. This node determines if the new TNode will
 *     be added as part of the `i18nStart` instruction or as part of the
 *     `TNode.insertBeforeIndex`.
 * @param existingTNodes internal state for `addTNodeAndUpdateInsertBeforeIndex`.
 * @param createOpCodes Location where the creation OpCodes will be stored.
 * @param lView Current `LView`
 * @param text The translated text (which may contain binding)
 */


function i18nStartFirstCreatePassProcessTextNode(tView, rootTNode, existingTNodes, createOpCodes, updateOpCodes, lView, text) {
  var hasBinding = text.match(BINDING_REGEXP);
  var tNode = createTNodeAndAddOpCode(tView, rootTNode, existingTNodes, lView, createOpCodes, hasBinding ? null : text, false);

  if (hasBinding) {
    generateBindingUpdateOpCodes(updateOpCodes, text, tNode.index);
  }
}
/**
 * See `i18nAttributes` above.
 */


function i18nAttributesFirstPass(tView, index, values) {
  var previousElement = getCurrentTNode();
  var previousElementIndex = previousElement.index;
  var updateOpCodes = [];

  if (ngDevMode) {
    attachDebugGetter(updateOpCodes, i18nUpdateOpCodesToString);
  }

  if (tView.firstCreatePass && tView.data[index] === null) {
    for (var i = 0; i < values.length; i += 2) {
      var attrName = values[i];
      var message = values[i + 1];

      if (message !== '') {
        // Check if attribute value contains an ICU and throw an error if that's the case.
        // ICUs in element attributes are not supported.
        // Note: we intentionally retain the error here by not using `ngDevMode`, because
        // the `value` can change based on the locale and users aren't guaranteed to hit
        // an invalid string while they're developing.
        if (ICU_REGEXP.test(message)) {
          throw new Error("ICU expressions are not supported in attributes. Message: \"".concat(message, "\"."));
        } // i18n attributes that hit this code path are guaranteed to have bindings, because
        // the compiler treats static i18n attributes as regular attribute bindings.


        generateBindingUpdateOpCodes(updateOpCodes, message, previousElementIndex, attrName);
      }
    }

    tView.data[index] = updateOpCodes;
  }
}
/**
 * Generate the OpCodes to update the bindings of a string.
 *
 * @param updateOpCodes Place where the update opcodes will be stored.
 * @param str The string containing the bindings.
 * @param destinationNode Index of the destination node which will receive the binding.
 * @param attrName Name of the attribute, if the string belongs to an attribute.
 * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.
 */


function generateBindingUpdateOpCodes(updateOpCodes, str, destinationNode, attrName) {
  var sanitizeFn = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
  ngDevMode && assertGreaterThanOrEqual(destinationNode, HEADER_OFFSET, 'Index must be in absolute LView offset');
  var maskIndex = updateOpCodes.length; // Location of mask

  var sizeIndex = maskIndex + 1; // location of size for skipping

  updateOpCodes.push(null, null); // Alloc space for mask and size

  var startIndex = maskIndex + 2; // location of first allocation.

  if (ngDevMode) {
    attachDebugGetter(updateOpCodes, i18nUpdateOpCodesToString);
  }

  var textParts = str.split(BINDING_REGEXP);
  var mask = 0;

  for (var j = 0; j < textParts.length; j++) {
    var textValue = textParts[j];

    if (j & 1) {
      // Odd indexes are bindings
      var bindingIndex = parseInt(textValue, 10);
      updateOpCodes.push(-1 - bindingIndex);
      mask = mask | toMaskBit(bindingIndex);
    } else if (textValue !== '') {
      // Even indexes are text
      updateOpCodes.push(textValue);
    }
  }

  updateOpCodes.push(destinationNode << 2
  /* SHIFT_REF */
  | (attrName ? 1
  /* Attr */
  : 0
  /* Text */
  ));

  if (attrName) {
    updateOpCodes.push(attrName, sanitizeFn);
  }

  updateOpCodes[maskIndex] = mask;
  updateOpCodes[sizeIndex] = updateOpCodes.length - startIndex;
  return mask;
}
/**
 * Convert binding index to mask bit.
 *
 * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make
 * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to
 * have more than 32 bindings this will be hit very rarely. The downside of hitting this corner
 * case is that we will execute binding code more often than necessary. (penalty of performance)
 */


function toMaskBit(bindingIndex) {
  return 1 << Math.min(bindingIndex, 31);
}

function isRootTemplateMessage(subTemplateIndex) {
  return subTemplateIndex === -1;
}
/**
 * Removes everything inside the sub-templates of a message.
 */


function removeInnerTemplateTranslation(message) {
  var match;
  var res = '';
  var index = 0;
  var inTemplate = false;
  var tagMatched;

  while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {
    if (!inTemplate) {
      res += message.substring(index, match.index + match[0].length);
      tagMatched = match[1];
      inTemplate = true;
    } else {
      if (match[0] === "".concat(MARKER, "/*").concat(tagMatched).concat(MARKER)) {
        index = match.index;
        inTemplate = false;
      }
    }
  }

  ngDevMode && assertEqual(inTemplate, false, "Tag mismatch: unable to find the end of the sub-template in the translation \"".concat(message, "\""));
  res += message.substr(index);
  return res;
}
/**
 * Extracts a part of a message and removes the rest.
 *
 * This method is used for extracting a part of the message associated with a template. A
 * translated message can span multiple templates.
 *
 * Example:
 * ```
 * <div i18n>Translate <span *ngIf>me</span>!</div>
 * ```
 *
 * @param message The message to crop
 * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the
 * external template and removes all sub-templates.
 */


function getTranslationForTemplate(message, subTemplateIndex) {
  if (isRootTemplateMessage(subTemplateIndex)) {
    // We want the root template message, ignore all sub-templates
    return removeInnerTemplateTranslation(message);
  } else {
    // We want a specific sub-template
    var start = message.indexOf(":".concat(subTemplateIndex).concat(MARKER)) + 2 + subTemplateIndex.toString().length;
    var end = message.search(new RegExp("".concat(MARKER, "\\/\\*\\d+:").concat(subTemplateIndex).concat(MARKER)));
    return removeInnerTemplateTranslation(message.substring(start, end));
  }
}
/**
 * Generate the OpCodes for ICU expressions.
 *
 * @param icuExpression
 * @param index Index where the anchor is stored and an optional `TIcuContainerNode`
 *   - `lView[anchorIdx]` points to a `Comment` node representing the anchor for the ICU.
 *   - `tView.data[anchorIdx]` points to the `TIcuContainerNode` if ICU is root (`null` otherwise)
 */


function icuStart(tView, lView, updateOpCodes, parentIdx, icuExpression, anchorIdx) {
  ngDevMode && assertDefined(icuExpression, 'ICU expression must be defined');
  var bindingMask = 0;
  var tIcu = {
    type: icuExpression.type,
    currentCaseLViewIndex: allocExpando(tView, lView, 1, null),
    anchorIdx: anchorIdx,
    cases: [],
    create: [],
    remove: [],
    update: []
  };
  addUpdateIcuSwitch(updateOpCodes, icuExpression, anchorIdx);
  setTIcu(tView, anchorIdx, tIcu);
  var values = icuExpression.values;

  for (var i = 0; i < values.length; i++) {
    // Each value is an array of strings & other ICU expressions
    var valueArr = values[i];
    var nestedIcus = [];

    for (var j = 0; j < valueArr.length; j++) {
      var value = valueArr[j];

      if (typeof value !== 'string') {
        // It is an nested ICU expression
        var icuIndex = nestedIcus.push(value) - 1; // Replace nested ICU expression by a comment node

        valueArr[j] = "<!--\uFFFD".concat(icuIndex, "\uFFFD-->");
      }
    }

    bindingMask = parseIcuCase(tView, tIcu, lView, updateOpCodes, parentIdx, icuExpression.cases[i], valueArr.join(''), nestedIcus) | bindingMask;
  }

  if (bindingMask) {
    addUpdateIcuUpdate(updateOpCodes, bindingMask, anchorIdx);
  }
}
/**
 * Parses text containing an ICU expression and produces a JSON object for it.
 * Original code from closure library, modified for Angular.
 *
 * @param pattern Text containing an ICU expression that needs to be parsed.
 *
 */


function parseICUBlock(pattern) {
  var cases = [];
  var values = [];
  var icuType = 1
  /* plural */
  ;
  var mainBinding = 0;
  pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {
    if (type === 'select') {
      icuType = 0
      /* select */
      ;
    } else {
      icuType = 1
      /* plural */
      ;
    }

    mainBinding = parseInt(binding.substr(1), 10);
    return '';
  });
  var parts = i18nParseTextIntoPartsAndICU(pattern); // Looking for (key block)+ sequence. One of the keys has to be "other".

  for (var pos = 0; pos < parts.length;) {
    var key = parts[pos++].trim();

    if (icuType === 1
    /* plural */
    ) {
        // Key can be "=x", we just want "x"
        key = key.replace(/\s*(?:=)?(\w+)\s*/, '$1');
      }

    if (key.length) {
      cases.push(key);
    }

    var blocks = i18nParseTextIntoPartsAndICU(parts[pos++]);

    if (cases.length > values.length) {
      values.push(blocks);
    }
  } // TODO(ocombe): support ICU expressions in attributes, see #21615


  return {
    type: icuType,
    mainBinding: mainBinding,
    cases: cases,
    values: values
  };
}
/**
 * Breaks pattern into strings and top level {...} blocks.
 * Can be used to break a message into text and ICU expressions, or to break an ICU expression
 * into keys and cases. Original code from closure library, modified for Angular.
 *
 * @param pattern (sub)Pattern to be broken.
 * @returns An `Array<string|IcuExpression>` where:
 *   - odd positions: `string` => text between ICU expressions
 *   - even positions: `ICUExpression` => ICU expression parsed into `ICUExpression` record.
 */


function i18nParseTextIntoPartsAndICU(pattern) {
  if (!pattern) {
    return [];
  }

  var prevPos = 0;
  var braceStack = [];
  var results = [];
  var braces = /[{}]/g; // lastIndex doesn't get set to 0 so we have to.

  braces.lastIndex = 0;
  var match;

  while (match = braces.exec(pattern)) {
    var pos = match.index;

    if (match[0] == '}') {
      braceStack.pop();

      if (braceStack.length == 0) {
        // End of the block.
        var block = pattern.substring(prevPos, pos);

        if (ICU_BLOCK_REGEXP.test(block)) {
          results.push(parseICUBlock(block));
        } else {
          results.push(block);
        }

        prevPos = pos + 1;
      }
    } else {
      if (braceStack.length == 0) {
        var _substring = pattern.substring(prevPos, pos);

        results.push(_substring);
        prevPos = pos + 1;
      }

      braceStack.push('{');
    }
  }

  var substring = pattern.substring(prevPos);
  results.push(substring);
  return results;
}
/**
 * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.
 *
 */


function parseIcuCase(tView, tIcu, lView, updateOpCodes, parentIdx, caseName, unsafeCaseHtml, nestedIcus) {
  var create = [];
  var remove = [];
  var update = [];

  if (ngDevMode) {
    attachDebugGetter(create, icuCreateOpCodesToString);
    attachDebugGetter(remove, i18nRemoveOpCodesToString);
    attachDebugGetter(update, i18nUpdateOpCodesToString);
  }

  tIcu.cases.push(caseName);
  tIcu.create.push(create);
  tIcu.remove.push(remove);
  tIcu.update.push(update);
  var inertBodyHelper = getInertBodyHelper(getDocument());
  var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeCaseHtml);
  ngDevMode && assertDefined(inertBodyElement, 'Unable to generate inert body element');
  var inertRootNode = getTemplateContent(inertBodyElement) || inertBodyElement;

  if (inertRootNode) {
    return walkIcuTree(tView, tIcu, lView, updateOpCodes, create, remove, update, inertRootNode, parentIdx, nestedIcus, 0);
  } else {
    return 0;
  }
}

function walkIcuTree(tView, tIcu, lView, sharedUpdateOpCodes, create, remove, update, parentNode, parentIdx, nestedIcus, depth) {
  var bindingMask = 0;
  var currentNode = parentNode.firstChild;

  while (currentNode) {
    var newIndex = allocExpando(tView, lView, 1, null);

    switch (currentNode.nodeType) {
      case Node.ELEMENT_NODE:
        var element = currentNode;
        var tagName = element.tagName.toLowerCase();

        if (VALID_ELEMENTS.hasOwnProperty(tagName)) {
          addCreateNodeAndAppend(create, ELEMENT_MARKER, tagName, parentIdx, newIndex);
          tView.data[newIndex] = tagName;
          var elAttrs = element.attributes;

          for (var i = 0; i < elAttrs.length; i++) {
            var attr = elAttrs.item(i);
            var lowerAttrName = attr.name.toLowerCase();

            var _hasBinding = !!attr.value.match(BINDING_REGEXP); // we assume the input string is safe, unless it's using a binding


            if (_hasBinding) {
              if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {
                if (URI_ATTRS[lowerAttrName]) {
                  generateBindingUpdateOpCodes(update, attr.value, newIndex, attr.name, _sanitizeUrl);
                } else if (SRCSET_ATTRS[lowerAttrName]) {
                  generateBindingUpdateOpCodes(update, attr.value, newIndex, attr.name, sanitizeSrcset);
                } else {
                  generateBindingUpdateOpCodes(update, attr.value, newIndex, attr.name);
                }
              } else {
                ngDevMode && console.warn("WARNING: ignoring unsafe attribute value " + "".concat(lowerAttrName, " on element ").concat(tagName, " (see http://g.co/ng/security#xss)"));
              }
            } else {
              addCreateAttribute(create, newIndex, attr);
            }
          } // Parse the children of this node (if any)


          bindingMask = walkIcuTree(tView, tIcu, lView, sharedUpdateOpCodes, create, remove, update, currentNode, newIndex, nestedIcus, depth + 1) | bindingMask;
          addRemoveNode(remove, newIndex, depth);
        }

        break;

      case Node.TEXT_NODE:
        var value = currentNode.textContent || '';
        var hasBinding = value.match(BINDING_REGEXP);
        addCreateNodeAndAppend(create, null, hasBinding ? '' : value, parentIdx, newIndex);
        addRemoveNode(remove, newIndex, depth);

        if (hasBinding) {
          bindingMask = generateBindingUpdateOpCodes(update, value, newIndex) | bindingMask;
        }

        break;

      case Node.COMMENT_NODE:
        // Check if the comment node is a placeholder for a nested ICU
        var isNestedIcu = NESTED_ICU.exec(currentNode.textContent || '');

        if (isNestedIcu) {
          var nestedIcuIndex = parseInt(isNestedIcu[1], 10);
          var icuExpression = nestedIcus[nestedIcuIndex]; // Create the comment node that will anchor the ICU expression

          addCreateNodeAndAppend(create, ICU_MARKER, ngDevMode ? "nested ICU ".concat(nestedIcuIndex) : '', parentIdx, newIndex);
          icuStart(tView, lView, sharedUpdateOpCodes, parentIdx, icuExpression, newIndex);
          addRemoveNestedIcu(remove, newIndex, depth);
        }

        break;
    }

    currentNode = currentNode.nextSibling;
  }

  return bindingMask;
}

function addRemoveNode(remove, index, depth) {
  if (depth === 0) {
    remove.push(index);
  }
}

function addRemoveNestedIcu(remove, index, depth) {
  if (depth === 0) {
    remove.push(~index); // remove ICU at `index`

    remove.push(index); // remove ICU comment at `index`
  }
}

function addUpdateIcuSwitch(update, icuExpression, index) {
  update.push(toMaskBit(icuExpression.mainBinding), 2, -1 - icuExpression.mainBinding, index << 2
  /* SHIFT_REF */
  | 2
  /* IcuSwitch */
  );
}

function addUpdateIcuUpdate(update, bindingMask, index) {
  update.push(bindingMask, 1, index << 2
  /* SHIFT_REF */
  | 3
  /* IcuUpdate */
  );
}

function addCreateNodeAndAppend(create, marker, text, appendToParentIdx, createAtIdx) {
  if (marker !== null) {
    create.push(marker);
  }

  create.push(text, createAtIdx, icuCreateOpCode(0
  /* AppendChild */
  , appendToParentIdx, createAtIdx));
}

function addCreateAttribute(create, newIndex, attr) {
  create.push(newIndex << 1
  /* SHIFT_REF */
  | 1
  /* Attr */
  , attr.name, attr.value);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// i18nPostprocess consts


var ROOT_TEMPLATE_ID = 0;
var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\[(�.+?�?)\]/;
var PP_PLACEHOLDERS_REGEXP = /\[(�.+?�?)\]|(�\/?\*\d+:\d+�)/g;
var PP_ICU_VARS_REGEXP = /({\s*)(VAR_(PLURAL|SELECT)(_\d+)?)(\s*,)/g;
var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;
var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\d+)?)�/g;
var PP_CLOSE_TEMPLATE_REGEXP = /\/\*/;
var PP_TEMPLATE_ID_REGEXP = /\d+\:(\d+)/;
/**
 * Handles message string post-processing for internationalization.
 *
 * Handles message string post-processing by transforming it from intermediate
 * format (that might contain some markers that we need to replace) to the final
 * form, consumable by i18nStart instruction. Post processing steps include:
 *
 * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])
 * 2. Replace all ICU vars (like "VAR_PLURAL")
 * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}
 * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)
 *    in case multiple ICUs have the same placeholder name
 *
 * @param message Raw translation string for post processing
 * @param replacements Set of replacements that should be applied
 *
 * @returns Transformed string that can be consumed by i18nStart instruction
 *
 * @codeGenApi
 */

function i18nPostprocess(message) {
  var replacements = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  /**
   * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]
   *
   * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically
   * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root
   * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index
   * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in
   * front of �#6�. The post processing step restores the right order by keeping track of the
   * template id stack and looks for placeholders that belong to the currently active template.
   */
  var result = message;

  if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {
    var matches = {};
    var templateIdsStack = [ROOT_TEMPLATE_ID];
    result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {
      var content = phs || tmpl;
      var placeholders = matches[content] || [];

      if (!placeholders.length) {
        content.split('|').forEach(function (placeholder) {
          var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);
          var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;
          var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);
          placeholders.push([templateId, isCloseTemplateTag, placeholder]);
        });
        matches[content] = placeholders;
      }

      if (!placeholders.length) {
        throw new Error("i18n postprocess: unmatched placeholder - ".concat(content));
      }

      var currentTemplateId = templateIdsStack[templateIdsStack.length - 1];
      var idx = 0; // find placeholder index that matches current template id

      for (var i = 0; i < placeholders.length; i++) {
        if (placeholders[i][0] === currentTemplateId) {
          idx = i;
          break;
        }
      } // update template id stack based on the current tag extracted


      var _placeholders$idx = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(placeholders[idx], 3),
          templateId = _placeholders$idx[0],
          isCloseTemplateTag = _placeholders$idx[1],
          placeholder = _placeholders$idx[2];

      if (isCloseTemplateTag) {
        templateIdsStack.pop();
      } else if (currentTemplateId !== templateId) {
        templateIdsStack.push(templateId);
      } // remove processed tag from the list


      placeholders.splice(idx, 1);
      return placeholder;
    });
  } // return current result if no replacements specified


  if (!Object.keys(replacements).length) {
    return result;
  }
  /**
   * Step 2: replace all ICU vars (like "VAR_PLURAL")
   */


  result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {
    return replacements.hasOwnProperty(key) ? "".concat(start).concat(replacements[key]).concat(end) : match;
  });
  /**
   * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}
   */

  result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {
    return replacements.hasOwnProperty(key) ? replacements[key] : match;
  });
  /**
   * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case
   * multiple ICUs have the same placeholder name
   */

  result = result.replace(PP_ICUS_REGEXP, function (match, key) {
    if (replacements.hasOwnProperty(key)) {
      var list = replacements[key];

      if (!list.length) {
        throw new Error("i18n postprocess: unmatched ICU - ".concat(match, " with key: ").concat(key));
      }

      return list.shift();
    }

    return match;
  });
  return result;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Marks a block of text as translatable.
 *
 * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.
 * The translation `message` is the value which is locale specific. The translation string may
 * contain placeholders which associate inner elements and sub-templates within the translation.
 *
 * The translation `message` placeholders are:
 * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be
 *   interpolated into. The placeholder `index` points to the expression binding index. An optional
 *   `block` that matches the sub-template in which it was declared.
 * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning
 *   and end of DOM element that were embedded in the original translation block. The placeholder
 *   `index` points to the element index in the template instructions set. An optional `block` that
 *   matches the sub-template in which it was declared.
 * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be
 *   split up and translated separately in each angular template function. The `index` points to the
 *   `template` instruction index. A `block` that matches the sub-template in which it was declared.
 *
 * @param index A unique index of the translation in the static block.
 * @param messageIndex An index of the translation message from the `def.consts` array.
 * @param subTemplateIndex Optional sub-template index in the `message`.
 *
 * @codeGenApi
 */


function ɵɵi18nStart(index, messageIndex) {
  var subTemplateIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;
  var tView = getTView();
  var lView = getLView();
  var adjustedIndex = HEADER_OFFSET + index;
  ngDevMode && assertDefined(tView, "tView should be defined");
  var message = getConstant(tView.consts, messageIndex);
  var parentTNode = getCurrentParentTNode();

  if (tView.firstCreatePass) {
    i18nStartFirstCreatePass(tView, parentTNode === null ? 0 : parentTNode.index, lView, adjustedIndex, message, subTemplateIndex);
  }

  var tI18n = tView.data[adjustedIndex];
  var sameViewParentTNode = parentTNode === lView[T_HOST] ? null : parentTNode;
  var parentRNode = getClosestRElement(tView, sameViewParentTNode, lView); // If `parentTNode` is an `ElementContainer` than it has `<!--ng-container--->`.
  // When we do inserts we have to make sure to insert in front of `<!--ng-container--->`.

  var insertInFrontOf = parentTNode && parentTNode.type & 8
  /* ElementContainer */
  ? lView[parentTNode.index] : null;
  applyCreateOpCodes(lView, tI18n.create, parentRNode, insertInFrontOf);
  setInI18nBlock(true);
}
/**
 * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes
 * into the render tree, moves the placeholder nodes and removes the deleted nodes.
 *
 * @codeGenApi
 */


function ɵɵi18nEnd() {
  setInI18nBlock(false);
}
/**
 *
 * Use this instruction to create a translation block that doesn't contain any placeholder.
 * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.
 *
 * The translation `message` is the value which is locale specific. The translation string may
 * contain placeholders which associate inner elements and sub-templates within the translation.
 *
 * The translation `message` placeholders are:
 * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be
 *   interpolated into. The placeholder `index` points to the expression binding index. An optional
 *   `block` that matches the sub-template in which it was declared.
 * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning
 *   and end of DOM element that were embedded in the original translation block. The placeholder
 *   `index` points to the element index in the template instructions set. An optional `block` that
 *   matches the sub-template in which it was declared.
 * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be
 *   split up and translated separately in each angular template function. The `index` points to the
 *   `template` instruction index. A `block` that matches the sub-template in which it was declared.
 *
 * @param index A unique index of the translation in the static block.
 * @param messageIndex An index of the translation message from the `def.consts` array.
 * @param subTemplateIndex Optional sub-template index in the `message`.
 *
 * @codeGenApi
 */


function ɵɵi18n(index, messageIndex, subTemplateIndex) {
  ɵɵi18nStart(index, messageIndex, subTemplateIndex);
  ɵɵi18nEnd();
}
/**
 * Marks a list of attributes as translatable.
 *
 * @param index A unique index in the static block
 * @param values
 *
 * @codeGenApi
 */


function ɵɵi18nAttributes(index, attrsIndex) {
  var tView = getTView();
  ngDevMode && assertDefined(tView, "tView should be defined");
  var attrs = getConstant(tView.consts, attrsIndex);
  i18nAttributesFirstPass(tView, index + HEADER_OFFSET, attrs);
}
/**
 * Stores the values of the bindings during each update cycle in order to determine if we need to
 * update the translated nodes.
 *
 * @param value The binding's value
 * @returns This function returns itself so that it may be chained
 * (e.g. `i18nExp(ctx.name)(ctx.title)`)
 *
 * @codeGenApi
 */


function ɵɵi18nExp(value) {
  var lView = getLView();
  setMaskBit(bindingUpdated(lView, nextBindingIndex(), value));
  return ɵɵi18nExp;
}
/**
 * Updates a translation block or an i18n attribute when the bindings have changed.
 *
 * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}
 * (i18n attribute) on which it should update the content.
 *
 * @codeGenApi
 */


function ɵɵi18nApply(index) {
  applyI18n(getTView(), getLView(), index + HEADER_OFFSET);
}
/**
 * Handles message string post-processing for internationalization.
 *
 * Handles message string post-processing by transforming it from intermediate
 * format (that might contain some markers that we need to replace) to the final
 * form, consumable by i18nStart instruction. Post processing steps include:
 *
 * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])
 * 2. Replace all ICU vars (like "VAR_PLURAL")
 * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}
 * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)
 *    in case multiple ICUs have the same placeholder name
 *
 * @param message Raw translation string for post processing
 * @param replacements Set of replacements that should be applied
 *
 * @returns Transformed string that can be consumed by i18nStart instruction
 *
 * @codeGenApi
 */


function ɵɵi18nPostprocess(message) {
  var replacements = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return i18nPostprocess(message, replacements);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Resolves the providers which are defined in the DirectiveDef.
 *
 * When inserting the tokens and the factories in their respective arrays, we can assume that
 * this method is called first for the component (if any), and then for other directives on the same
 * node.
 * As a consequence,the providers are always processed in that order:
 * 1) The view providers of the component
 * 2) The providers of the component
 * 3) The providers of the other directives
 * This matches the structure of the injectables arrays of a view (for each node).
 * So the tokens and the factories can be pushed at the end of the arrays, except
 * in one case for multi providers.
 *
 * @param def the directive definition
 * @param providers: Array of `providers`.
 * @param viewProviders: Array of `viewProviders`.
 */


function providersResolver(def, providers, viewProviders) {
  var tView = getTView();

  if (tView.firstCreatePass) {
    var isComponent = isComponentDef(def); // The list of view providers is processed first, and the flags are updated

    resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true); // Then, the list of providers is processed, and the flags are updated

    resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);
  }
}
/**
 * Resolves a provider and publishes it to the DI system.
 */


function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {
  provider = resolveForwardRef(provider);

  if (Array.isArray(provider)) {
    // Recursively call `resolveProvider`
    // Recursion is OK in this case because this code will not be in hot-path once we implement
    // cloning of the initial state.
    for (var i = 0; i < provider.length; i++) {
      resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);
    }
  } else {
    var tView = getTView();
    var lView = getLView();
    var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);
    var providerFactory = providerToFactory(provider);
    var tNode = getCurrentTNode();
    var beginIndex = tNode.providerIndexes & 1048575
    /* ProvidersStartIndexMask */
    ;
    var endIndex = tNode.directiveStart;
    var cptViewProvidersCount = tNode.providerIndexes >> 20
    /* CptViewProvidersCountShift */
    ;

    if (isTypeProvider(provider) || !provider.multi) {
      // Single provider case: the factory is created and pushed immediately
      var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);
      var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);

      if (existingFactoryIndex === -1) {
        diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);
        registerDestroyHooksIfSupported(tView, provider, tInjectables.length);
        tInjectables.push(token);
        tNode.directiveStart++;
        tNode.directiveEnd++;

        if (isViewProvider) {
          tNode.providerIndexes += 1048576
          /* CptViewProvidersCountShifter */
          ;
        }

        lInjectablesBlueprint.push(factory);
        lView.push(factory);
      } else {
        lInjectablesBlueprint[existingFactoryIndex] = factory;
        lView[existingFactoryIndex] = factory;
      }
    } else {
      // Multi provider case:
      // We create a multi factory which is going to aggregate all the values.
      // Since the output of such a factory depends on content or view injection,
      // we create two of them, which are linked together.
      //
      // The first one (for view providers) is always in the first block of the injectables array,
      // and the second one (for providers) is always in the second block.
      // This is important because view providers have higher priority. When a multi token
      // is being looked up, the view providers should be found first.
      // Note that it is not possible to have a multi factory in the third block (directive block).
      //
      // The algorithm to process multi providers is as follows:
      // 1) If the multi provider comes from the `viewProviders` of the component:
      //   a) If the special view providers factory doesn't exist, it is created and pushed.
      //   b) Else, the multi provider is added to the existing multi factory.
      // 2) If the multi provider comes from the `providers` of the component or of another
      // directive:
      //   a) If the multi factory doesn't exist, it is created and provider pushed into it.
      //      It is also linked to the multi factory for view providers, if it exists.
      //   b) Else, the multi provider is added to the existing multi factory.
      var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);
      var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);
      var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 && lInjectablesBlueprint[existingProvidersFactoryIndex];
      var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 && lInjectablesBlueprint[existingViewProvidersFactoryIndex];

      if (isViewProvider && !doesViewProvidersFactoryExist || !isViewProvider && !doesProvidersFactoryExist) {
        // Cases 1.a and 2.a
        diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);

        var _factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);

        if (!isViewProvider && doesViewProvidersFactoryExist) {
          lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = _factory;
        }

        registerDestroyHooksIfSupported(tView, provider, tInjectables.length, 0);
        tInjectables.push(token);
        tNode.directiveStart++;
        tNode.directiveEnd++;

        if (isViewProvider) {
          tNode.providerIndexes += 1048576
          /* CptViewProvidersCountShifter */
          ;
        }

        lInjectablesBlueprint.push(_factory);
        lView.push(_factory);
      } else {
        // Cases 1.b and 2.b
        var indexInFactory = multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);
        registerDestroyHooksIfSupported(tView, provider, existingProvidersFactoryIndex > -1 ? existingProvidersFactoryIndex : existingViewProvidersFactoryIndex, indexInFactory);
      }

      if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {
        lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;
      }
    }
  }
}
/**
 * Registers the `ngOnDestroy` hook of a provider, if the provider supports destroy hooks.
 * @param tView `TView` in which to register the hook.
 * @param provider Provider whose hook should be registered.
 * @param contextIndex Index under which to find the context for the hook when it's being invoked.
 * @param indexInFactory Only required for `multi` providers. Index of the provider in the multi
 * provider factory.
 */


function registerDestroyHooksIfSupported(tView, provider, contextIndex, indexInFactory) {
  var providerIsTypeProvider = isTypeProvider(provider);

  if (providerIsTypeProvider || isClassProvider(provider)) {
    var prototype = (provider.useClass || provider).prototype;
    var ngOnDestroy = prototype.ngOnDestroy;

    if (ngOnDestroy) {
      var hooks = tView.destroyHooks || (tView.destroyHooks = []);

      if (!providerIsTypeProvider && provider.multi) {
        ngDevMode && assertDefined(indexInFactory, 'indexInFactory when registering multi factory destroy hook');
        var existingCallbacksIndex = hooks.indexOf(contextIndex);

        if (existingCallbacksIndex === -1) {
          hooks.push(contextIndex, [indexInFactory, ngOnDestroy]);
        } else {
          hooks[existingCallbacksIndex + 1].push(indexInFactory, ngOnDestroy);
        }
      } else {
        hooks.push(contextIndex, ngOnDestroy);
      }
    }
  }
}
/**
 * Add a factory in a multi factory.
 * @returns Index at which the factory was inserted.
 */


function multiFactoryAdd(multiFactory, factory, isComponentProvider) {
  if (isComponentProvider) {
    multiFactory.componentProviders++;
  }

  return multiFactory.multi.push(factory) - 1;
}
/**
 * Returns the index of item in the array, but only in the begin to end range.
 */


function indexOf(item, arr, begin, end) {
  for (var i = begin; i < end; i++) {
    if (arr[i] === item) return i;
  }

  return -1;
}
/**
 * Use this with `multi` `providers`.
 */


function multiProvidersFactoryResolver(_, tData, lData, tNode) {
  return multiResolve(this.multi, []);
}
/**
 * Use this with `multi` `viewProviders`.
 *
 * This factory knows how to concatenate itself with the existing `multi` `providers`.
 */


function multiViewProvidersFactoryResolver(_, tData, lView, tNode) {
  var factories = this.multi;
  var result;

  if (this.providerFactory) {
    var componentCount = this.providerFactory.componentProviders;
    var multiProviders = getNodeInjectable(lView, lView[TVIEW], this.providerFactory.index, tNode); // Copy the section of the array which contains `multi` `providers` from the component

    result = multiProviders.slice(0, componentCount); // Insert the `viewProvider` instances.

    multiResolve(factories, result); // Copy the section of the array which contains `multi` `providers` from other directives

    for (var i = componentCount; i < multiProviders.length; i++) {
      result.push(multiProviders[i]);
    }
  } else {
    result = []; // Insert the `viewProvider` instances.

    multiResolve(factories, result);
  }

  return result;
}
/**
 * Maps an array of factories into an array of values.
 */


function multiResolve(factories, result) {
  for (var i = 0; i < factories.length; i++) {
    var factory = factories[i];
    result.push(factory());
  }

  return result;
}
/**
 * Creates a multi factory.
 */


function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {
  var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);
  factory.multi = [];
  factory.index = index;
  factory.componentProviders = 0;
  multiFactoryAdd(factory, f, isComponent && !isViewProvider);
  return factory;
}
/**
 * This feature resolves the providers of a directive (or component),
 * and publish them into the DI system, making it visible to others for injection.
 *
 * For example:
 * ```ts
 * class ComponentWithProviders {
 *   constructor(private greeter: GreeterDE) {}
 *
 *   static ɵcmp = defineComponent({
 *     type: ComponentWithProviders,
 *     selectors: [['component-with-providers']],
 *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),
 *    decls: 1,
 *    vars: 1,
 *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {
 *      if (fs & RenderFlags.Create) {
 *        ɵɵtext(0);
 *      }
 *      if (fs & RenderFlags.Update) {
 *        ɵɵtextInterpolate(ctx.greeter.greet());
 *      }
 *    },
 *    features: [ɵɵProvidersFeature([GreeterDE])]
 *  });
 * }
 * ```
 *
 * @param definition
 *
 * @codeGenApi
 */


function ɵɵProvidersFeature(providers) {
  var viewProviders = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return function (definition) {
    definition.providersResolver = function (def, processProvidersFn) {
      return providersResolver(def, //
      processProvidersFn ? processProvidersFn(providers) : providers, //
      viewProviders);
    };
  };
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Represents a component created by a `ComponentFactory`.
 * Provides access to the component instance and related objects,
 * and provides the means of destroying the instance.
 *
 * @publicApi
 */


var ComponentRef = function ComponentRef() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ComponentRef);
};
/**
 * Base class for a factory that can create a component dynamically.
 * Instantiate a factory for a given type of component with `resolveComponentFactory()`.
 * Use the resulting `ComponentFactory.create()` method to create a component of that type.
 *
 * @see [Dynamic Components](guide/dynamic-component-loader)
 *
 * @publicApi
 */


var ComponentFactory = function ComponentFactory() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ComponentFactory);
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function noComponentFactoryError(component) {
  var error = Error("No component factory found for ".concat(stringify(component), ". Did you add it to @NgModule.entryComponents?"));
  error[ERROR_COMPONENT] = component;
  return error;
}

var ERROR_COMPONENT = 'ngComponent';

function getComponent$1(error) {
  return error[ERROR_COMPONENT];
}

var _NullComponentFactoryResolver = /*#__PURE__*/function () {
  function _NullComponentFactoryResolver() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, _NullComponentFactoryResolver);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(_NullComponentFactoryResolver, [{
    key: "resolveComponentFactory",
    value: function resolveComponentFactory(component) {
      throw noComponentFactoryError(component);
    }
  }]);

  return _NullComponentFactoryResolver;
}();

var ComponentFactoryResolver = /*@__PURE__*/function () {
  var ComponentFactoryResolver = function ComponentFactoryResolver() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ComponentFactoryResolver);
  };

  ComponentFactoryResolver.NULL = /*@__PURE__*/new _NullComponentFactoryResolver();
  return ComponentFactoryResolver;
}();

var CodegenComponentFactoryResolver = /*#__PURE__*/function () {
  function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, CodegenComponentFactoryResolver);

    this._parent = _parent;
    this._ngModule = _ngModule;
    this._factories = new Map();

    for (var i = 0; i < factories.length; i++) {
      var factory = factories[i];

      this._factories.set(factory.componentType, factory);
    }
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(CodegenComponentFactoryResolver, [{
    key: "resolveComponentFactory",
    value: function resolveComponentFactory(component) {
      var factory = this._factories.get(component);

      if (!factory && this._parent) {
        factory = this._parent.resolveComponentFactory(component);
      }

      if (!factory) {
        throw noComponentFactoryError(component);
      }

      return new ComponentFactoryBoundToModule(factory, this._ngModule);
    }
  }]);

  return CodegenComponentFactoryResolver;
}();

var ComponentFactoryBoundToModule = /*#__PURE__*/function (_ComponentFactory) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(ComponentFactoryBoundToModule, _ComponentFactory);

  var _super7 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(ComponentFactoryBoundToModule);

  function ComponentFactoryBoundToModule(factory, ngModule) {
    var _this6;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ComponentFactoryBoundToModule);

    _this6 = _super7.call(this);
    _this6.factory = factory;
    _this6.ngModule = ngModule;
    _this6.selector = factory.selector;
    _this6.componentType = factory.componentType;
    _this6.ngContentSelectors = factory.ngContentSelectors;
    _this6.inputs = factory.inputs;
    _this6.outputs = factory.outputs;
    return _this6;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ComponentFactoryBoundToModule, [{
    key: "create",
    value: function create(injector, projectableNodes, rootSelectorOrNode, ngModule) {
      return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);
    }
  }]);

  return ComponentFactoryBoundToModule;
}(ComponentFactory);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function noop() {// Do nothing.
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Creates an ElementRef from the most recent node.
 *
 * @returns The ElementRef instance to use
 */


function injectElementRef() {
  return createElementRef(getCurrentTNode(), getLView());
}
/**
 * Creates an ElementRef given a node.
 *
 * @param tNode The node for which you'd like an ElementRef
 * @param lView The view to which the node belongs
 * @returns The ElementRef instance to use
 */


function createElementRef(tNode, lView) {
  return new ElementRef(getNativeByTNode(tNode, lView));
}

var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;
var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;
var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;

var ElementRef = /*@__PURE__*/function () {
  var ElementRef = function ElementRef(nativeElement) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ElementRef);

    this.nativeElement = nativeElement;
  };
  /**
   * @internal
   * @nocollapse
   */


  ElementRef.__NG_ELEMENT_ID__ = SWITCH_ELEMENT_REF_FACTORY;
  return ElementRef;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var Renderer2Interceptor = /*@__PURE__*/new InjectionToken('Renderer2Interceptor');
/**
 * Creates and initializes a custom renderer that implements the `Renderer2` base class.
 *
 * @publicApi
 */

var RendererFactory2 = function RendererFactory2() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, RendererFactory2);
};

var Renderer2 = /*@__PURE__*/function () {
  var Renderer2 = function Renderer2() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, Renderer2);
  };
  /**
   * @internal
   * @nocollapse
   */


  Renderer2.__NG_ELEMENT_ID__ = function () {
    return SWITCH_RENDERER2_FACTORY();
  };

  return Renderer2;
}();

var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;
var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;
var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;
/** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */

function getOrCreateRenderer2(lView) {
  var renderer = lView[RENDERER];

  if (ngDevMode && !isProceduralRenderer(renderer)) {
    throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');
  }

  return renderer;
}
/** Injects a Renderer2 for the current component. */


function injectRenderer2() {
  // We need the Renderer to be based on the component that it's being injected into, however since
  // DI happens before we've entered its view, `getLView` will return the parent view instead.
  var lView = getLView();
  var tNode = getCurrentTNode();
  var nodeAtIndex = getComponentLViewByIndex(tNode.index, lView);
  return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);
}

var Sanitizer = /*@__PURE__*/function () {
  var Sanitizer = function Sanitizer() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, Sanitizer);
  };
  /** @nocollapse */


  Sanitizer.ɵprov = /*@__PURE__*/ɵɵdefineInjectable({
    token: Sanitizer,
    providedIn: 'root',
    factory: function factory() {
      return null;
    }
  });
  return Sanitizer;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description Represents the version of Angular
 *
 * @publicApi
 */


var Version = function Version(full) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, Version);

  this.full = full;
  this.major = full.split('.')[0];
  this.minor = full.split('.')[1];
  this.patch = full.split('.').slice(2).join('.');
};
/**
 * @publicApi
 */


var VERSION = /*@__PURE__*/new Version('11.0.2');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var DefaultIterableDifferFactory = /*#__PURE__*/function () {
  function DefaultIterableDifferFactory() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, DefaultIterableDifferFactory);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(DefaultIterableDifferFactory, [{
    key: "supports",
    value: function supports(obj) {
      return isListLikeIterable(obj);
    }
  }, {
    key: "create",
    value: function create(trackByFn) {
      return new DefaultIterableDiffer(trackByFn);
    }
  }]);

  return DefaultIterableDifferFactory;
}();

var trackByIdentity = function trackByIdentity(index, item) {
  return item;
};

var ɵ0$b = trackByIdentity;
/**
 * @deprecated v4.0.0 - Should not be part of public API.
 * @publicApi
 */

var DefaultIterableDiffer = /*#__PURE__*/function () {
  function DefaultIterableDiffer(trackByFn) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, DefaultIterableDiffer);

    this.length = 0; // Keeps track of the used records at any point in time (during & across `_check()` calls)

    this._linkedRecords = null; // Keeps track of the removed records at any point in time during `_check()` calls.

    this._unlinkedRecords = null;
    this._previousItHead = null;
    this._itHead = null;
    this._itTail = null;
    this._additionsHead = null;
    this._additionsTail = null;
    this._movesHead = null;
    this._movesTail = null;
    this._removalsHead = null;
    this._removalsTail = null; // Keeps track of records where custom track by is the same, but item identity has changed

    this._identityChangesHead = null;
    this._identityChangesTail = null;
    this._trackByFn = trackByFn || trackByIdentity;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(DefaultIterableDiffer, [{
    key: "forEachItem",
    value: function forEachItem(fn) {
      var record;

      for (record = this._itHead; record !== null; record = record._next) {
        fn(record);
      }
    }
  }, {
    key: "forEachOperation",
    value: function forEachOperation(fn) {
      var nextIt = this._itHead;
      var nextRemove = this._removalsHead;
      var addRemoveOffset = 0;
      var moveOffsets = null;

      while (nextIt || nextRemove) {
        // Figure out which is the next record to process
        // Order: remove, add, move
        var record = !nextRemove || nextIt && nextIt.currentIndex < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? nextIt : nextRemove;
        var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);
        var currentIndex = record.currentIndex; // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary

        if (record === nextRemove) {
          addRemoveOffset--;
          nextRemove = nextRemove._nextRemoved;
        } else {
          nextIt = nextIt._next;

          if (record.previousIndex == null) {
            addRemoveOffset++;
          } else {
            // INVARIANT:  currentIndex < previousIndex
            if (!moveOffsets) moveOffsets = [];
            var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;
            var localCurrentIndex = currentIndex - addRemoveOffset;

            if (localMovePreviousIndex != localCurrentIndex) {
              for (var i = 0; i < localMovePreviousIndex; i++) {
                var offset = i < moveOffsets.length ? moveOffsets[i] : moveOffsets[i] = 0;
                var index = offset + i;

                if (localCurrentIndex <= index && index < localMovePreviousIndex) {
                  moveOffsets[i] = offset + 1;
                }
              }

              var previousIndex = record.previousIndex;
              moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;
            }
          }
        }

        if (adjPreviousIndex !== currentIndex) {
          fn(record, adjPreviousIndex, currentIndex);
        }
      }
    }
  }, {
    key: "forEachPreviousItem",
    value: function forEachPreviousItem(fn) {
      var record;

      for (record = this._previousItHead; record !== null; record = record._nextPrevious) {
        fn(record);
      }
    }
  }, {
    key: "forEachAddedItem",
    value: function forEachAddedItem(fn) {
      var record;

      for (record = this._additionsHead; record !== null; record = record._nextAdded) {
        fn(record);
      }
    }
  }, {
    key: "forEachMovedItem",
    value: function forEachMovedItem(fn) {
      var record;

      for (record = this._movesHead; record !== null; record = record._nextMoved) {
        fn(record);
      }
    }
  }, {
    key: "forEachRemovedItem",
    value: function forEachRemovedItem(fn) {
      var record;

      for (record = this._removalsHead; record !== null; record = record._nextRemoved) {
        fn(record);
      }
    }
  }, {
    key: "forEachIdentityChange",
    value: function forEachIdentityChange(fn) {
      var record;

      for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {
        fn(record);
      }
    }
  }, {
    key: "diff",
    value: function diff(collection) {
      if (collection == null) collection = [];

      if (!isListLikeIterable(collection)) {
        throw new Error("Error trying to diff '".concat(stringify(collection), "'. Only arrays and iterables are allowed"));
      }

      if (this.check(collection)) {
        return this;
      } else {
        return null;
      }
    }
  }, {
    key: "onDestroy",
    value: function onDestroy() {}
  }, {
    key: "check",
    value: function check(collection) {
      var _this7 = this;

      this._reset();

      var record = this._itHead;
      var mayBeDirty = false;
      var index;
      var item;
      var itemTrackBy;

      if (Array.isArray(collection)) {
        this.length = collection.length;

        for (var _index3 = 0; _index3 < this.length; _index3++) {
          item = collection[_index3];
          itemTrackBy = this._trackByFn(_index3, item);

          if (record === null || !Object.is(record.trackById, itemTrackBy)) {
            record = this._mismatch(record, item, itemTrackBy, _index3);
            mayBeDirty = true;
          } else {
            if (mayBeDirty) {
              // TODO(misko): can we limit this to duplicates only?
              record = this._verifyReinsertion(record, item, itemTrackBy, _index3);
            }

            if (!Object.is(record.item, item)) this._addIdentityChange(record, item);
          }

          record = record._next;
        }
      } else {
        index = 0;
        iterateListLike(collection, function (item) {
          itemTrackBy = _this7._trackByFn(index, item);

          if (record === null || !Object.is(record.trackById, itemTrackBy)) {
            record = _this7._mismatch(record, item, itemTrackBy, index);
            mayBeDirty = true;
          } else {
            if (mayBeDirty) {
              // TODO(misko): can we limit this to duplicates only?
              record = _this7._verifyReinsertion(record, item, itemTrackBy, index);
            }

            if (!Object.is(record.item, item)) _this7._addIdentityChange(record, item);
          }

          record = record._next;
          index++;
        });
        this.length = index;
      }

      this._truncate(record);

      this.collection = collection;
      return this.isDirty;
    }
    /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity
     * changes.
     */

  }, {
    key: "_reset",

    /**
     * Reset the state of the change objects to show no changes. This means set previousKey to
     * currentKey, and clear all of the queues (additions, moves, removals).
     * Set the previousIndexes of moved and added items to their currentIndexes
     * Reset the list of additions, moves and removals
     *
     * @internal
     */
    value: function _reset() {
      if (this.isDirty) {
        var record;

        for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {
          record._nextPrevious = record._next;
        }

        for (record = this._additionsHead; record !== null; record = record._nextAdded) {
          record.previousIndex = record.currentIndex;
        }

        this._additionsHead = this._additionsTail = null;

        for (record = this._movesHead; record !== null; record = record._nextMoved) {
          record.previousIndex = record.currentIndex;
        }

        this._movesHead = this._movesTail = null;
        this._removalsHead = this._removalsTail = null;
        this._identityChangesHead = this._identityChangesTail = null; // TODO(vicb): when assert gets supported
        // assert(!this.isDirty);
      }
    }
    /**
     * This is the core function which handles differences between collections.
     *
     * - `record` is the record which we saw at this position last time. If null then it is a new
     *   item.
     * - `item` is the current item in the collection
     * - `index` is the position of the item in the collection
     *
     * @internal
     */

  }, {
    key: "_mismatch",
    value: function _mismatch(record, item, itemTrackBy, index) {
      // The previous record after which we will append the current one.
      var previousRecord;

      if (record === null) {
        previousRecord = this._itTail;
      } else {
        previousRecord = record._prev; // Remove the record from the collection since we know it does not match the item.

        this._remove(record);
      } // Attempt to see if we have seen the item before.


      record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);

      if (record !== null) {
        // We have seen this before, we need to move it forward in the collection.
        // But first we need to check if identity changed, so we can update in view if necessary
        if (!Object.is(record.item, item)) this._addIdentityChange(record, item);

        this._moveAfter(record, previousRecord, index);
      } else {
        // Never seen it, check evicted list.
        record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);

        if (record !== null) {
          // It is an item which we have evicted earlier: reinsert it back into the list.
          // But first we need to check if identity changed, so we can update in view if necessary
          if (!Object.is(record.item, item)) this._addIdentityChange(record, item);

          this._reinsertAfter(record, previousRecord, index);
        } else {
          // It is a new item: add it.
          record = this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);
        }
      }

      return record;
    }
    /**
     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)
     *
     * Use case: `[a, a]` => `[b, a, a]`
     *
     * If we did not have this check then the insertion of `b` would:
     *   1) evict first `a`
     *   2) insert `b` at `0` index.
     *   3) leave `a` at index `1` as is. <-- this is wrong!
     *   3) reinsert `a` at index 2. <-- this is wrong!
     *
     * The correct behavior is:
     *   1) evict first `a`
     *   2) insert `b` at `0` index.
     *   3) reinsert `a` at index 1.
     *   3) move `a` at from `1` to `2`.
     *
     *
     * Double check that we have not evicted a duplicate item. We need to check if the item type may
     * have already been removed:
     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted
     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a
     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'
     * at the end.
     *
     * @internal
     */

  }, {
    key: "_verifyReinsertion",
    value: function _verifyReinsertion(record, item, itemTrackBy, index) {
      var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);

      if (reinsertRecord !== null) {
        record = this._reinsertAfter(reinsertRecord, record._prev, index);
      } else if (record.currentIndex != index) {
        record.currentIndex = index;

        this._addToMoves(record, index);
      }

      return record;
    }
    /**
     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection
     *
     * - `record` The first excess {@link IterableChangeRecord_}.
     *
     * @internal
     */

  }, {
    key: "_truncate",
    value: function _truncate(record) {
      // Anything after that needs to be removed;
      while (record !== null) {
        var nextRecord = record._next;

        this._addToRemovals(this._unlink(record));

        record = nextRecord;
      }

      if (this._unlinkedRecords !== null) {
        this._unlinkedRecords.clear();
      }

      if (this._additionsTail !== null) {
        this._additionsTail._nextAdded = null;
      }

      if (this._movesTail !== null) {
        this._movesTail._nextMoved = null;
      }

      if (this._itTail !== null) {
        this._itTail._next = null;
      }

      if (this._removalsTail !== null) {
        this._removalsTail._nextRemoved = null;
      }

      if (this._identityChangesTail !== null) {
        this._identityChangesTail._nextIdentityChange = null;
      }
    }
    /** @internal */

  }, {
    key: "_reinsertAfter",
    value: function _reinsertAfter(record, prevRecord, index) {
      if (this._unlinkedRecords !== null) {
        this._unlinkedRecords.remove(record);
      }

      var prev = record._prevRemoved;
      var next = record._nextRemoved;

      if (prev === null) {
        this._removalsHead = next;
      } else {
        prev._nextRemoved = next;
      }

      if (next === null) {
        this._removalsTail = prev;
      } else {
        next._prevRemoved = prev;
      }

      this._insertAfter(record, prevRecord, index);

      this._addToMoves(record, index);

      return record;
    }
    /** @internal */

  }, {
    key: "_moveAfter",
    value: function _moveAfter(record, prevRecord, index) {
      this._unlink(record);

      this._insertAfter(record, prevRecord, index);

      this._addToMoves(record, index);

      return record;
    }
    /** @internal */

  }, {
    key: "_addAfter",
    value: function _addAfter(record, prevRecord, index) {
      this._insertAfter(record, prevRecord, index);

      if (this._additionsTail === null) {
        // TODO(vicb):
        // assert(this._additionsHead === null);
        this._additionsTail = this._additionsHead = record;
      } else {
        // TODO(vicb):
        // assert(_additionsTail._nextAdded === null);
        // assert(record._nextAdded === null);
        this._additionsTail = this._additionsTail._nextAdded = record;
      }

      return record;
    }
    /** @internal */

  }, {
    key: "_insertAfter",
    value: function _insertAfter(record, prevRecord, index) {
      // TODO(vicb):
      // assert(record != prevRecord);
      // assert(record._next === null);
      // assert(record._prev === null);
      var next = prevRecord === null ? this._itHead : prevRecord._next; // TODO(vicb):
      // assert(next != record);
      // assert(prevRecord != record);

      record._next = next;
      record._prev = prevRecord;

      if (next === null) {
        this._itTail = record;
      } else {
        next._prev = record;
      }

      if (prevRecord === null) {
        this._itHead = record;
      } else {
        prevRecord._next = record;
      }

      if (this._linkedRecords === null) {
        this._linkedRecords = new _DuplicateMap();
      }

      this._linkedRecords.put(record);

      record.currentIndex = index;
      return record;
    }
    /** @internal */

  }, {
    key: "_remove",
    value: function _remove(record) {
      return this._addToRemovals(this._unlink(record));
    }
    /** @internal */

  }, {
    key: "_unlink",
    value: function _unlink(record) {
      if (this._linkedRecords !== null) {
        this._linkedRecords.remove(record);
      }

      var prev = record._prev;
      var next = record._next; // TODO(vicb):
      // assert((record._prev = null) === null);
      // assert((record._next = null) === null);

      if (prev === null) {
        this._itHead = next;
      } else {
        prev._next = next;
      }

      if (next === null) {
        this._itTail = prev;
      } else {
        next._prev = prev;
      }

      return record;
    }
    /** @internal */

  }, {
    key: "_addToMoves",
    value: function _addToMoves(record, toIndex) {
      // TODO(vicb):
      // assert(record._nextMoved === null);
      if (record.previousIndex === toIndex) {
        return record;
      }

      if (this._movesTail === null) {
        // TODO(vicb):
        // assert(_movesHead === null);
        this._movesTail = this._movesHead = record;
      } else {
        // TODO(vicb):
        // assert(_movesTail._nextMoved === null);
        this._movesTail = this._movesTail._nextMoved = record;
      }

      return record;
    }
  }, {
    key: "_addToRemovals",
    value: function _addToRemovals(record) {
      if (this._unlinkedRecords === null) {
        this._unlinkedRecords = new _DuplicateMap();
      }

      this._unlinkedRecords.put(record);

      record.currentIndex = null;
      record._nextRemoved = null;

      if (this._removalsTail === null) {
        // TODO(vicb):
        // assert(_removalsHead === null);
        this._removalsTail = this._removalsHead = record;
        record._prevRemoved = null;
      } else {
        // TODO(vicb):
        // assert(_removalsTail._nextRemoved === null);
        // assert(record._nextRemoved === null);
        record._prevRemoved = this._removalsTail;
        this._removalsTail = this._removalsTail._nextRemoved = record;
      }

      return record;
    }
    /** @internal */

  }, {
    key: "_addIdentityChange",
    value: function _addIdentityChange(record, item) {
      record.item = item;

      if (this._identityChangesTail === null) {
        this._identityChangesTail = this._identityChangesHead = record;
      } else {
        this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;
      }

      return record;
    }
  }, {
    key: "isDirty",
    get: function get() {
      return this._additionsHead !== null || this._movesHead !== null || this._removalsHead !== null || this._identityChangesHead !== null;
    }
  }]);

  return DefaultIterableDiffer;
}();

var IterableChangeRecord_ = function IterableChangeRecord_(item, trackById) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, IterableChangeRecord_);

  this.item = item;
  this.trackById = trackById;
  this.currentIndex = null;
  this.previousIndex = null;
  /** @internal */

  this._nextPrevious = null;
  /** @internal */

  this._prev = null;
  /** @internal */

  this._next = null;
  /** @internal */

  this._prevDup = null;
  /** @internal */

  this._nextDup = null;
  /** @internal */

  this._prevRemoved = null;
  /** @internal */

  this._nextRemoved = null;
  /** @internal */

  this._nextAdded = null;
  /** @internal */

  this._nextMoved = null;
  /** @internal */

  this._nextIdentityChange = null;
}; // A linked list of IterableChangeRecords with the same IterableChangeRecord_.item


var _DuplicateItemRecordList = /*#__PURE__*/function () {
  function _DuplicateItemRecordList() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, _DuplicateItemRecordList);

    /** @internal */
    this._head = null;
    /** @internal */

    this._tail = null;
  }
  /**
   * Append the record to the list of duplicates.
   *
   * Note: by design all records in the list of duplicates hold the same value in record.item.
   */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(_DuplicateItemRecordList, [{
    key: "add",
    value: function add(record) {
      if (this._head === null) {
        this._head = this._tail = record;
        record._nextDup = null;
        record._prevDup = null;
      } else {
        // TODO(vicb):
        // assert(record.item ==  _head.item ||
        //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);
        this._tail._nextDup = record;
        record._prevDup = this._tail;
        record._nextDup = null;
        this._tail = record;
      }
    } // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and
    // IterableChangeRecord_.currentIndex >= atOrAfterIndex

  }, {
    key: "get",
    value: function get(trackById, atOrAfterIndex) {
      var record;

      for (record = this._head; record !== null; record = record._nextDup) {
        if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) && Object.is(record.trackById, trackById)) {
          return record;
        }
      }

      return null;
    }
    /**
     * Remove one {@link IterableChangeRecord_} from the list of duplicates.
     *
     * Returns whether the list of duplicates is empty.
     */

  }, {
    key: "remove",
    value: function remove(record) {
      // TODO(vicb):
      // assert(() {
      //  // verify that the record being removed is in the list.
      //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {
      //    if (identical(cursor, record)) return true;
      //  }
      //  return false;
      //});
      var prev = record._prevDup;
      var next = record._nextDup;

      if (prev === null) {
        this._head = next;
      } else {
        prev._nextDup = next;
      }

      if (next === null) {
        this._tail = prev;
      } else {
        next._prevDup = prev;
      }

      return this._head === null;
    }
  }]);

  return _DuplicateItemRecordList;
}();

var _DuplicateMap = /*#__PURE__*/function () {
  function _DuplicateMap() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, _DuplicateMap);

    this.map = new Map();
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(_DuplicateMap, [{
    key: "put",
    value: function put(record) {
      var key = record.trackById;
      var duplicates = this.map.get(key);

      if (!duplicates) {
        duplicates = new _DuplicateItemRecordList();
        this.map.set(key, duplicates);
      }

      duplicates.add(record);
    }
    /**
     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we
     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.
     *
     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we
     * have any more `a`s needs to return the second `a`.
     */

  }, {
    key: "get",
    value: function get(trackById, atOrAfterIndex) {
      var key = trackById;
      var recordList = this.map.get(key);
      return recordList ? recordList.get(trackById, atOrAfterIndex) : null;
    }
    /**
     * Removes a {@link IterableChangeRecord_} from the list of duplicates.
     *
     * The list of duplicates also is removed from the map if it gets empty.
     */

  }, {
    key: "remove",
    value: function remove(record) {
      var key = record.trackById;
      var recordList = this.map.get(key); // Remove the list of duplicates when it gets empty

      if (recordList.remove(record)) {
        this.map.delete(key);
      }

      return record;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.map.clear();
    }
  }, {
    key: "isEmpty",
    get: function get() {
      return this.map.size === 0;
    }
  }]);

  return _DuplicateMap;
}();

function getPreviousIndex(item, addRemoveOffset, moveOffsets) {
  var previousIndex = item.previousIndex;
  if (previousIndex === null) return previousIndex;
  var moveOffset = 0;

  if (moveOffsets && previousIndex < moveOffsets.length) {
    moveOffset = moveOffsets[previousIndex];
  }

  return previousIndex + addRemoveOffset + moveOffset;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var DefaultKeyValueDifferFactory = /*#__PURE__*/function () {
  function DefaultKeyValueDifferFactory() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, DefaultKeyValueDifferFactory);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(DefaultKeyValueDifferFactory, [{
    key: "supports",
    value: function supports(obj) {
      return obj instanceof Map || isJsObject(obj);
    }
  }, {
    key: "create",
    value: function create() {
      return new DefaultKeyValueDiffer();
    }
  }]);

  return DefaultKeyValueDifferFactory;
}();

var DefaultKeyValueDiffer = /*#__PURE__*/function () {
  function DefaultKeyValueDiffer() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, DefaultKeyValueDiffer);

    this._records = new Map();
    this._mapHead = null; // _appendAfter is used in the check loop

    this._appendAfter = null;
    this._previousMapHead = null;
    this._changesHead = null;
    this._changesTail = null;
    this._additionsHead = null;
    this._additionsTail = null;
    this._removalsHead = null;
    this._removalsTail = null;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(DefaultKeyValueDiffer, [{
    key: "forEachItem",
    value: function forEachItem(fn) {
      var record;

      for (record = this._mapHead; record !== null; record = record._next) {
        fn(record);
      }
    }
  }, {
    key: "forEachPreviousItem",
    value: function forEachPreviousItem(fn) {
      var record;

      for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {
        fn(record);
      }
    }
  }, {
    key: "forEachChangedItem",
    value: function forEachChangedItem(fn) {
      var record;

      for (record = this._changesHead; record !== null; record = record._nextChanged) {
        fn(record);
      }
    }
  }, {
    key: "forEachAddedItem",
    value: function forEachAddedItem(fn) {
      var record;

      for (record = this._additionsHead; record !== null; record = record._nextAdded) {
        fn(record);
      }
    }
  }, {
    key: "forEachRemovedItem",
    value: function forEachRemovedItem(fn) {
      var record;

      for (record = this._removalsHead; record !== null; record = record._nextRemoved) {
        fn(record);
      }
    }
  }, {
    key: "diff",
    value: function diff(map) {
      if (!map) {
        map = new Map();
      } else if (!(map instanceof Map || isJsObject(map))) {
        throw new Error("Error trying to diff '".concat(stringify(map), "'. Only maps and objects are allowed"));
      }

      return this.check(map) ? this : null;
    }
  }, {
    key: "onDestroy",
    value: function onDestroy() {}
    /**
     * Check the current state of the map vs the previous.
     * The algorithm is optimised for when the keys do no change.
     */

  }, {
    key: "check",
    value: function check(map) {
      var _this8 = this;

      this._reset();

      var insertBefore = this._mapHead;
      this._appendAfter = null;

      this._forEach(map, function (value, key) {
        if (insertBefore && insertBefore.key === key) {
          _this8._maybeAddToChanges(insertBefore, value);

          _this8._appendAfter = insertBefore;
          insertBefore = insertBefore._next;
        } else {
          var record = _this8._getOrCreateRecordForKey(key, value);

          insertBefore = _this8._insertBeforeOrAppend(insertBefore, record);
        }
      }); // Items remaining at the end of the list have been deleted


      if (insertBefore) {
        if (insertBefore._prev) {
          insertBefore._prev._next = null;
        }

        this._removalsHead = insertBefore;

        for (var record = insertBefore; record !== null; record = record._nextRemoved) {
          if (record === this._mapHead) {
            this._mapHead = null;
          }

          this._records.delete(record.key);

          record._nextRemoved = record._next;
          record.previousValue = record.currentValue;
          record.currentValue = null;
          record._prev = null;
          record._next = null;
        }
      } // Make sure tails have no next records from previous runs


      if (this._changesTail) this._changesTail._nextChanged = null;
      if (this._additionsTail) this._additionsTail._nextAdded = null;
      return this.isDirty;
    }
    /**
     * Inserts a record before `before` or append at the end of the list when `before` is null.
     *
     * Notes:
     * - This method appends at `this._appendAfter`,
     * - This method updates `this._appendAfter`,
     * - The return value is the new value for the insertion pointer.
     */

  }, {
    key: "_insertBeforeOrAppend",
    value: function _insertBeforeOrAppend(before, record) {
      if (before) {
        var prev = before._prev;
        record._next = before;
        record._prev = prev;
        before._prev = record;

        if (prev) {
          prev._next = record;
        }

        if (before === this._mapHead) {
          this._mapHead = record;
        }

        this._appendAfter = before;
        return before;
      }

      if (this._appendAfter) {
        this._appendAfter._next = record;
        record._prev = this._appendAfter;
      } else {
        this._mapHead = record;
      }

      this._appendAfter = record;
      return null;
    }
  }, {
    key: "_getOrCreateRecordForKey",
    value: function _getOrCreateRecordForKey(key, value) {
      if (this._records.has(key)) {
        var _record = this._records.get(key);

        this._maybeAddToChanges(_record, value);

        var prev = _record._prev;
        var next = _record._next;

        if (prev) {
          prev._next = next;
        }

        if (next) {
          next._prev = prev;
        }

        _record._next = null;
        _record._prev = null;
        return _record;
      }

      var record = new KeyValueChangeRecord_(key);

      this._records.set(key, record);

      record.currentValue = value;

      this._addToAdditions(record);

      return record;
    }
    /** @internal */

  }, {
    key: "_reset",
    value: function _reset() {
      if (this.isDirty) {
        var record; // let `_previousMapHead` contain the state of the map before the changes

        this._previousMapHead = this._mapHead;

        for (record = this._previousMapHead; record !== null; record = record._next) {
          record._nextPrevious = record._next;
        } // Update `record.previousValue` with the value of the item before the changes
        // We need to update all changed items (that's those which have been added and changed)


        for (record = this._changesHead; record !== null; record = record._nextChanged) {
          record.previousValue = record.currentValue;
        }

        for (record = this._additionsHead; record != null; record = record._nextAdded) {
          record.previousValue = record.currentValue;
        }

        this._changesHead = this._changesTail = null;
        this._additionsHead = this._additionsTail = null;
        this._removalsHead = null;
      }
    } // Add the record or a given key to the list of changes only when the value has actually changed

  }, {
    key: "_maybeAddToChanges",
    value: function _maybeAddToChanges(record, newValue) {
      if (!Object.is(newValue, record.currentValue)) {
        record.previousValue = record.currentValue;
        record.currentValue = newValue;

        this._addToChanges(record);
      }
    }
  }, {
    key: "_addToAdditions",
    value: function _addToAdditions(record) {
      if (this._additionsHead === null) {
        this._additionsHead = this._additionsTail = record;
      } else {
        this._additionsTail._nextAdded = record;
        this._additionsTail = record;
      }
    }
  }, {
    key: "_addToChanges",
    value: function _addToChanges(record) {
      if (this._changesHead === null) {
        this._changesHead = this._changesTail = record;
      } else {
        this._changesTail._nextChanged = record;
        this._changesTail = record;
      }
    }
    /** @internal */

  }, {
    key: "_forEach",
    value: function _forEach(obj, fn) {
      if (obj instanceof Map) {
        obj.forEach(fn);
      } else {
        Object.keys(obj).forEach(function (k) {
          return fn(obj[k], k);
        });
      }
    }
  }, {
    key: "isDirty",
    get: function get() {
      return this._additionsHead !== null || this._changesHead !== null || this._removalsHead !== null;
    }
  }]);

  return DefaultKeyValueDiffer;
}();

var KeyValueChangeRecord_ = function KeyValueChangeRecord_(key) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, KeyValueChangeRecord_);

  this.key = key;
  this.previousValue = null;
  this.currentValue = null;
  /** @internal */

  this._nextPrevious = null;
  /** @internal */

  this._next = null;
  /** @internal */

  this._prev = null;
  /** @internal */

  this._nextAdded = null;
  /** @internal */

  this._nextRemoved = null;
  /** @internal */

  this._nextChanged = null;
};

var IterableDiffers = /*@__PURE__*/function () {
  var IterableDiffers = /*#__PURE__*/function () {
    function IterableDiffers(factories) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, IterableDiffers);

      this.factories = factories;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(IterableDiffers, [{
      key: "find",
      value: function find(iterable) {
        var factory = this.factories.find(function (f) {
          return f.supports(iterable);
        });

        if (factory != null) {
          return factory;
        } else {
          throw new Error("Cannot find a differ supporting object '".concat(iterable, "' of type '").concat(getTypeNameForDebugging(iterable), "'"));
        }
      }
    }], [{
      key: "create",
      value: function create(factories, parent) {
        if (parent != null) {
          var copied = parent.factories.slice();
          factories = factories.concat(copied);
        }

        return new IterableDiffers(factories);
      }
      /**
       * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the
       * inherited {@link IterableDiffers} instance with the provided factories and return a new
       * {@link IterableDiffers} instance.
       *
       * @usageNotes
       * ### Example
       *
       * The following example shows how to extend an existing list of factories,
       * which will only be applied to the injector for this component and its children.
       * This step is all that's required to make a new {@link IterableDiffer} available.
       *
       * ```
       * @Component({
       *   viewProviders: [
       *     IterableDiffers.extend([new ImmutableListDiffer()])
       *   ]
       * })
       * ```
       */

    }, {
      key: "extend",
      value: function extend(factories) {
        return {
          provide: IterableDiffers,
          useFactory: function useFactory(parent) {
            if (!parent) {
              // Typically would occur when calling IterableDiffers.extend inside of dependencies passed
              // to
              // bootstrap(), which would override default pipes instead of extending them.
              throw new Error('Cannot extend IterableDiffers without a parent injector');
            }

            return IterableDiffers.create(factories, parent);
          },
          // Dependency technically isn't optional, but we can provide a better error message this way.
          deps: [[IterableDiffers, new SkipSelf(), new Optional()]]
        };
      }
    }]);

    return IterableDiffers;
  }();
  /** @nocollapse */


  IterableDiffers.ɵprov = /*@__PURE__*/ɵɵdefineInjectable({
    token: IterableDiffers,
    providedIn: 'root',
    factory: function factory() {
      return new IterableDiffers([new DefaultIterableDifferFactory()]);
    }
  });
  return IterableDiffers;
}();

function getTypeNameForDebugging(type) {
  return type['name'] || typeof type;
}

var KeyValueDiffers = /*@__PURE__*/function () {
  var KeyValueDiffers = /*#__PURE__*/function () {
    function KeyValueDiffers(factories) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, KeyValueDiffers);

      this.factories = factories;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(KeyValueDiffers, [{
      key: "find",
      value: function find(kv) {
        var factory = this.factories.find(function (f) {
          return f.supports(kv);
        });

        if (factory) {
          return factory;
        }

        throw new Error("Cannot find a differ supporting object '".concat(kv, "'"));
      }
    }], [{
      key: "create",
      value: function create(factories, parent) {
        if (parent) {
          var copied = parent.factories.slice();
          factories = factories.concat(copied);
        }

        return new KeyValueDiffers(factories);
      }
      /**
       * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the
       * inherited {@link KeyValueDiffers} instance with the provided factories and return a new
       * {@link KeyValueDiffers} instance.
       *
       * @usageNotes
       * ### Example
       *
       * The following example shows how to extend an existing list of factories,
       * which will only be applied to the injector for this component and its children.
       * This step is all that's required to make a new {@link KeyValueDiffer} available.
       *
       * ```
       * @Component({
       *   viewProviders: [
       *     KeyValueDiffers.extend([new ImmutableMapDiffer()])
       *   ]
       * })
       * ```
       */

    }, {
      key: "extend",
      value: function extend(factories) {
        return {
          provide: KeyValueDiffers,
          useFactory: function useFactory(parent) {
            if (!parent) {
              // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed
              // to bootstrap(), which would override default pipes instead of extending them.
              throw new Error('Cannot extend KeyValueDiffers without a parent injector');
            }

            return KeyValueDiffers.create(factories, parent);
          },
          // Dependency technically isn't optional, but we can provide a better error message this way.
          deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]
        };
      }
    }]);

    return KeyValueDiffers;
  }();
  /** @nocollapse */


  KeyValueDiffers.ɵprov = /*@__PURE__*/ɵɵdefineInjectable({
    token: KeyValueDiffers,
    providedIn: 'root',
    factory: function factory() {
      return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]);
    }
  });
  return KeyValueDiffers;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function collectNativeNodes(tView, lView, tNode, result) {
  var isProjection = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  while (tNode !== null) {
    ngDevMode && assertTNodeType(tNode, 3
    /* AnyRNode */
    | 12
    /* AnyContainer */
    | 16
    /* Projection */
    | 32
    /* Icu */
    );
    var lNode = lView[tNode.index];

    if (lNode !== null) {
      result.push(unwrapRNode(lNode));
    } // A given lNode can represent either a native node or a LContainer (when it is a host of a
    // ViewContainerRef). When we find a LContainer we need to descend into it to collect root nodes
    // from the views in this container.


    if (isLContainer(lNode)) {
      for (var i = CONTAINER_HEADER_OFFSET; i < lNode.length; i++) {
        var lViewInAContainer = lNode[i];
        var lViewFirstChildTNode = lViewInAContainer[TVIEW].firstChild;

        if (lViewFirstChildTNode !== null) {
          collectNativeNodes(lViewInAContainer[TVIEW], lViewInAContainer, lViewFirstChildTNode, result);
        }
      }
    }

    var tNodeType = tNode.type;

    if (tNodeType & 8
    /* ElementContainer */
    ) {
        collectNativeNodes(tView, lView, tNode.child, result);
      } else if (tNodeType & 32
    /* Icu */
    ) {
        var nextRNode = icuContainerIterate(tNode, lView);
        var rNode = void 0;

        while (rNode = nextRNode()) {
          result.push(rNode);
        }
      } else if (tNodeType & 16
    /* Projection */
    ) {
        var componentView = lView[DECLARATION_COMPONENT_VIEW];
        var componentHost = componentView[T_HOST];
        var slotIdx = tNode.projection;
        ngDevMode && assertDefined(componentHost.projection, 'Components with projection nodes (<ng-content>) must have projection slots defined.');
        var nodesInSlot = componentHost.projection[slotIdx];

        if (Array.isArray(nodesInSlot)) {
          result.push.apply(result, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(nodesInSlot));
        } else {
          var parentView = getLViewParent(componentView);
          ngDevMode && assertDefined(parentView, 'Component views should always have a parent view (component\'s host view)');
          collectNativeNodes(parentView[TVIEW], parentView, nodesInSlot, result, true);
        }
      }

    tNode = isProjection ? tNode.projectionNext : tNode.next;
  }

  return result;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ViewRef = /*#__PURE__*/function () {
  function ViewRef(
  /**
   * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.
   *
   * When ViewRef is created for a dynamic component, this also represents the `LView` for the
   * component.
   *
   * For a "regular" ViewRef created for an embedded view, this is the `LView` for the embedded
   * view.
   *
   * @internal
   */
  _lView,
  /**
   * This represents the `LView` associated with the point where `ChangeDetectorRef` was
   * requested.
   *
   * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.
   */
  _cdRefInjectingView) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ViewRef);

    this._lView = _lView;
    this._cdRefInjectingView = _cdRefInjectingView;
    this._appRef = null;
    this._viewContainerRef = null;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ViewRef, [{
    key: "destroy",
    value: function destroy() {
      if (this._appRef) {
        this._appRef.detachView(this);
      } else if (this._viewContainerRef) {
        var index = this._viewContainerRef.indexOf(this);

        if (index > -1) {
          this._viewContainerRef.detach(index);
        }

        this._viewContainerRef = null;
      }

      destroyLView(this._lView[TVIEW], this._lView);
    }
  }, {
    key: "onDestroy",
    value: function onDestroy(callback) {
      storeCleanupWithContext(this._lView[TVIEW], this._lView, null, callback);
    }
    /**
     * Marks a view and all of its ancestors dirty.
     *
     * It also triggers change detection by calling `scheduleTick` internally, which coalesces
     * multiple `markForCheck` calls to into one change detection run.
     *
     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is
     * checked when it needs to be re-rendered but the two normal triggers haven't marked it
     * dirty (i.e. inputs haven't changed and events haven't fired in the view).
     *
     * <!-- TODO: Add a link to a chapter on OnPush components -->
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * @Component({
     *   selector: 'my-app',
     *   template: `Number of ticks: {{numberOfTicks}}`
     *   changeDetection: ChangeDetectionStrategy.OnPush,
     * })
     * class AppComponent {
     *   numberOfTicks = 0;
     *
     *   constructor(private ref: ChangeDetectorRef) {
     *     setInterval(() => {
     *       this.numberOfTicks++;
     *       // the following is required, otherwise the view will not be updated
     *       this.ref.markForCheck();
     *     }, 1000);
     *   }
     * }
     * ```
     */

  }, {
    key: "markForCheck",
    value: function markForCheck() {
      markViewDirty(this._cdRefInjectingView || this._lView);
    }
    /**
     * Detaches the view from the change detection tree.
     *
     * Detached views will not be checked during change detection runs until they are
     * re-attached, even if they are dirty. `detach` can be used in combination with
     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change
     * detection checks.
     *
     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->
     *
     * @usageNotes
     * ### Example
     *
     * The following example defines a component with a large list of readonly data.
     * Imagine the data changes constantly, many times per second. For performance reasons,
     * we want to check and update the list every five seconds. We can do that by detaching
     * the component's change detector and doing a local check every five seconds.
     *
     * ```typescript
     * class DataProvider {
     *   // in a real application the returned data will be different every time
     *   get data() {
     *     return [1,2,3,4,5];
     *   }
     * }
     *
     * @Component({
     *   selector: 'giant-list',
     *   template: `
     *     <li *ngFor="let d of dataProvider.data">Data {{d}}</li>
     *   `,
     * })
     * class GiantList {
     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {
     *     ref.detach();
     *     setInterval(() => {
     *       this.ref.detectChanges();
     *     }, 5000);
     *   }
     * }
     *
     * @Component({
     *   selector: 'app',
     *   providers: [DataProvider],
     *   template: `
     *     <giant-list><giant-list>
     *   `,
     * })
     * class App {
     * }
     * ```
     */

  }, {
    key: "detach",
    value: function detach() {
      this._lView[FLAGS] &= ~128
      /* Attached */
      ;
    }
    /**
     * Re-attaches a view to the change detection tree.
     *
     * This can be used to re-attach views that were previously detached from the tree
     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.
     *
     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
     *
     * @usageNotes
     * ### Example
     *
     * The following example creates a component displaying `live` data. The component will detach
     * its change detector from the main change detector tree when the component's live property
     * is set to false.
     *
     * ```typescript
     * class DataProvider {
     *   data = 1;
     *
     *   constructor() {
     *     setInterval(() => {
     *       this.data = this.data * 2;
     *     }, 500);
     *   }
     * }
     *
     * @Component({
     *   selector: 'live-data',
     *   inputs: ['live'],
     *   template: 'Data: {{dataProvider.data}}'
     * })
     * class LiveData {
     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}
     *
     *   set live(value) {
     *     if (value) {
     *       this.ref.reattach();
     *     } else {
     *       this.ref.detach();
     *     }
     *   }
     * }
     *
     * @Component({
     *   selector: 'my-app',
     *   providers: [DataProvider],
     *   template: `
     *     Live Update: <input type="checkbox" [(ngModel)]="live">
     *     <live-data [live]="live"><live-data>
     *   `,
     * })
     * class AppComponent {
     *   live = true;
     * }
     * ```
     */

  }, {
    key: "reattach",
    value: function reattach() {
      this._lView[FLAGS] |= 128
      /* Attached */
      ;
    }
    /**
     * Checks the view and its children.
     *
     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement
     * local change detection checks.
     *
     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->
     *
     * @usageNotes
     * ### Example
     *
     * The following example defines a component with a large list of readonly data.
     * Imagine, the data changes constantly, many times per second. For performance reasons,
     * we want to check and update the list every five seconds.
     *
     * We can do that by detaching the component's change detector and doing a local change detection
     * check every five seconds.
     *
     * See {@link ChangeDetectorRef#detach detach} for more information.
     */

  }, {
    key: "detectChanges",
    value: function detectChanges() {
      detectChangesInternal(this._lView[TVIEW], this._lView, this.context);
    }
    /**
     * Checks the change detector and its children, and throws if any changes are detected.
     *
     * This is used in development mode to verify that running change detection doesn't
     * introduce other changes.
     */

  }, {
    key: "checkNoChanges",
    value: function checkNoChanges() {
      checkNoChangesInternal(this._lView[TVIEW], this._lView, this.context);
    }
  }, {
    key: "attachToViewContainerRef",
    value: function attachToViewContainerRef(vcRef) {
      if (this._appRef) {
        throw new Error('This view is already attached directly to the ApplicationRef!');
      }

      this._viewContainerRef = vcRef;
    }
  }, {
    key: "detachFromAppRef",
    value: function detachFromAppRef() {
      this._appRef = null;
      renderDetachView(this._lView[TVIEW], this._lView);
    }
  }, {
    key: "attachToAppRef",
    value: function attachToAppRef(appRef) {
      if (this._viewContainerRef) {
        throw new Error('This view is already attached to a ViewContainer!');
      }

      this._appRef = appRef;
    }
  }, {
    key: "rootNodes",
    get: function get() {
      var lView = this._lView;
      var tView = lView[TVIEW];
      return collectNativeNodes(tView, lView, tView.firstChild, []);
    }
  }, {
    key: "context",
    get: function get() {
      return this._lView[CONTEXT];
    }
  }, {
    key: "destroyed",
    get: function get() {
      return (this._lView[FLAGS] & 256
      /* Destroyed */
      ) === 256
      /* Destroyed */
      ;
    }
  }]);

  return ViewRef;
}();
/** @internal */


var RootViewRef = /*#__PURE__*/function (_ViewRef) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(RootViewRef, _ViewRef);

  var _super8 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(RootViewRef);

  function RootViewRef(_view) {
    var _this9;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, RootViewRef);

    _this9 = _super8.call(this, _view);
    _this9._view = _view;
    return _this9;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(RootViewRef, [{
    key: "detectChanges",
    value: function detectChanges() {
      detectChangesInRootView(this._view);
    }
  }, {
    key: "checkNoChanges",
    value: function checkNoChanges() {
      checkNoChangesInRootView(this._view);
    }
  }, {
    key: "context",
    get: function get() {
      return null;
    }
  }]);

  return RootViewRef;
}(ViewRef);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;
var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = noop;
var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;

var ChangeDetectorRef = /*@__PURE__*/function () {
  var ChangeDetectorRef = function ChangeDetectorRef() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ChangeDetectorRef);
  };
  /**
   * @internal
   * @nocollapse
   */


  ChangeDetectorRef.__NG_ELEMENT_ID__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY;
  /**
   * This marker is need so that the JIT compiler can correctly identify this class as special.
   *
   * @internal
   * @nocollapse
   */

  ChangeDetectorRef.__ChangeDetectorRef__ = true;
  return ChangeDetectorRef;
}();
/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */


function injectChangeDetectorRef() {
  var isPipe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return createViewRef(getCurrentTNode(), getLView(), isPipe);
}
/**
 * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).
 *
 * @param tNode The node that is requesting a ChangeDetectorRef
 * @param lView The view to which the node belongs
 * @param isPipe Whether the view is being injected into a pipe.
 * @returns The ChangeDetectorRef to use
 */


function createViewRef(tNode, lView, isPipe) {
  // `isComponentView` will be true for Component and Directives (but not for Pipes).
  // See https://github.com/angular/angular/pull/33072 for proper fix
  var isComponentView = !isPipe && isComponentHost(tNode);

  if (isComponentView) {
    // The LView represents the location where the component is declared.
    // Instead we want the LView for the component View and so we need to look it up.
    var componentView = getComponentLViewByIndex(tNode.index, lView); // look down

    return new ViewRef(componentView, componentView);
  } else if (tNode.type & (3
  /* AnyRNode */
  | 12
  /* AnyContainer */
  | 32
  /* Icu */
  )) {
    // The LView represents the location where the injection is requested from.
    // We need to locate the containing LView (in case where the `lView` is an embedded view)
    var hostComponentView = lView[DECLARATION_COMPONENT_VIEW]; // look up

    return new ViewRef(hostComponentView, lView);
  }

  return null;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Structural diffing for `Object`s and `Map`s.
 */


var keyValDiff = [/*@__PURE__*/new DefaultKeyValueDifferFactory()];
/**
 * Structural diffing for `Iterable` types such as `Array`s.
 */

var iterableDiff = [/*@__PURE__*/new DefaultIterableDifferFactory()];
var defaultIterableDiffers = /*@__PURE__*/new IterableDiffers(iterableDiff);
var defaultKeyValueDiffers = /*@__PURE__*/new KeyValueDiffers(keyValDiff);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;
var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;
var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;

var TemplateRef = /*@__PURE__*/function () {
  var TemplateRef = function TemplateRef() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, TemplateRef);
  };
  /**
   * @internal
   * @nocollapse
   */


  TemplateRef.__NG_ELEMENT_ID__ = SWITCH_TEMPLATE_REF_FACTORY;
  return TemplateRef;
}();

var ViewEngineTemplateRef = TemplateRef;

var R3TemplateRef = /*#__PURE__*/function (_ViewEngineTemplateRe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(TemplateRef, _ViewEngineTemplateRe);

  var _super9 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(TemplateRef);

  function TemplateRef(_declarationLView, _declarationTContainer, elementRef) {
    var _this10;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, TemplateRef);

    _this10 = _super9.call(this);
    _this10._declarationLView = _declarationLView;
    _this10._declarationTContainer = _declarationTContainer;
    _this10.elementRef = elementRef;
    return _this10;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(TemplateRef, [{
    key: "createEmbeddedView",
    value: function createEmbeddedView(context) {
      var embeddedTView = this._declarationTContainer.tViews;
      var embeddedLView = createLView(this._declarationLView, embeddedTView, context, 16
      /* CheckAlways */
      , null, embeddedTView.declTNode, null, null, null, null);
      var declarationLContainer = this._declarationLView[this._declarationTContainer.index];
      ngDevMode && assertLContainer(declarationLContainer);
      embeddedLView[DECLARATION_LCONTAINER] = declarationLContainer;
      var declarationViewLQueries = this._declarationLView[QUERIES];

      if (declarationViewLQueries !== null) {
        embeddedLView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);
      }

      renderView(embeddedTView, embeddedLView, context);
      return new ViewRef(embeddedLView);
    }
  }]);

  return TemplateRef;
}(ViewEngineTemplateRef);
/**
 * Creates a TemplateRef given a node.
 *
 * @returns The TemplateRef instance to use
 */


function injectTemplateRef() {
  return createTemplateRef(getCurrentTNode(), getLView());
}
/**
 * Creates a TemplateRef and stores it on the injector.
 *
 * @param hostTNode The node on which a TemplateRef is requested
 * @param hostLView The `LView` to which the node belongs
 * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type
 */


function createTemplateRef(hostTNode, hostLView) {
  if (hostTNode.type & 4
  /* Container */
  ) {
      ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');
      return new R3TemplateRef(hostLView, hostTNode, createElementRef(hostTNode, hostLView));
    }

  return null;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Represents an instance of an `NgModule` created by an `NgModuleFactory`.
 * Provides access to the `NgModule` instance and related objects.
 *
 * @publicApi
 */


var NgModuleRef = function NgModuleRef() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, NgModuleRef);
};
/**
 * @publicApi
 */


var NgModuleFactory = function NgModuleFactory() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, NgModuleFactory);
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;
var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;
var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;

var ViewContainerRef = /*@__PURE__*/function () {
  var ViewContainerRef = function ViewContainerRef() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ViewContainerRef);
  };
  /**
   * @internal
   * @nocollapse
   */


  ViewContainerRef.__NG_ELEMENT_ID__ = SWITCH_VIEW_CONTAINER_REF_FACTORY;
  return ViewContainerRef;
}();
/**
 * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef
 * already exists, retrieves the existing ViewContainerRef.
 *
 * @returns The ViewContainerRef instance to use
 */


function injectViewContainerRef() {
  var previousTNode = getCurrentTNode();
  return createContainerRef(previousTNode, getLView());
}

var VE_ViewContainerRef = ViewContainerRef;

var R3ViewContainerRef = /*#__PURE__*/function (_VE_ViewContainerRef) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(ViewContainerRef, _VE_ViewContainerRef);

  var _super10 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(ViewContainerRef);

  function ViewContainerRef(_lContainer, _hostTNode, _hostLView) {
    var _this11;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ViewContainerRef);

    _this11 = _super10.call(this);
    _this11._lContainer = _lContainer;
    _this11._hostTNode = _hostTNode;
    _this11._hostLView = _hostLView;
    return _this11;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ViewContainerRef, [{
    key: "clear",
    value: function clear() {
      while (this.length > 0) {
        this.remove(this.length - 1);
      }
    }
  }, {
    key: "get",
    value: function get(index) {
      var viewRefs = getViewRefs(this._lContainer);
      return viewRefs !== null && viewRefs[index] || null;
    }
  }, {
    key: "createEmbeddedView",
    value: function createEmbeddedView(templateRef, context, index) {
      var viewRef = templateRef.createEmbeddedView(context || {});
      this.insert(viewRef, index);
      return viewRef;
    }
  }, {
    key: "createComponent",
    value: function createComponent(componentFactory, index, injector, projectableNodes, ngModuleRef) {
      var contextInjector = injector || this.parentInjector;

      if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {
        // DO NOT REFACTOR. The code here used to have a `value || undefined` expression
        // which seems to cause internal google apps to fail. This is documented in the
        // following internal bug issue: go/b/142967802
        var result = contextInjector.get(NgModuleRef, null);

        if (result) {
          ngModuleRef = result;
        }
      }

      var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);
      this.insert(componentRef.hostView, index);
      return componentRef;
    }
  }, {
    key: "insert",
    value: function insert(viewRef, index) {
      var lView = viewRef._lView;
      var tView = lView[TVIEW];

      if (ngDevMode && viewRef.destroyed) {
        throw new Error('Cannot insert a destroyed View in a ViewContainer!');
      }

      if (viewAttachedToContainer(lView)) {
        // If view is already attached, detach it first so we clean up references appropriately.
        var prevIdx = this.indexOf(viewRef); // A view might be attached either to this or a different container. The `prevIdx` for
        // those cases will be:
        // equal to -1 for views attached to this ViewContainerRef
        // >= 0 for views attached to a different ViewContainerRef

        if (prevIdx !== -1) {
          this.detach(prevIdx);
        } else {
          var prevLContainer = lView[PARENT];
          ngDevMode && assertEqual(isLContainer(prevLContainer), true, 'An attached view should have its PARENT point to a container.'); // We need to re-create a R3ViewContainerRef instance since those are not stored on
          // LView (nor anywhere else).

          var prevVCRef = new R3ViewContainerRef(prevLContainer, prevLContainer[T_HOST], prevLContainer[PARENT]);
          prevVCRef.detach(prevVCRef.indexOf(viewRef));
        }
      } // Logical operation of adding `LView` to `LContainer`


      var adjustedIdx = this._adjustIndex(index);

      var lContainer = this._lContainer;
      insertView(tView, lView, lContainer, adjustedIdx); // Physical operation of adding the DOM nodes.

      var beforeNode = getBeforeNodeForView(adjustedIdx, lContainer);
      var renderer = lView[RENDERER];
      var parentRNode = nativeParentNode(renderer, lContainer[NATIVE]);

      if (parentRNode !== null) {
        addViewToContainer(tView, lContainer[T_HOST], renderer, lView, parentRNode, beforeNode);
      }

      viewRef.attachToViewContainerRef(this);
      addToArray(getOrCreateViewRefs(lContainer), adjustedIdx, viewRef);
      return viewRef;
    }
  }, {
    key: "move",
    value: function move(viewRef, newIndex) {
      if (ngDevMode && viewRef.destroyed) {
        throw new Error('Cannot move a destroyed View in a ViewContainer!');
      }

      return this.insert(viewRef, newIndex);
    }
  }, {
    key: "indexOf",
    value: function indexOf(viewRef) {
      var viewRefsArr = getViewRefs(this._lContainer);
      return viewRefsArr !== null ? viewRefsArr.indexOf(viewRef) : -1;
    }
  }, {
    key: "remove",
    value: function remove(index) {
      var adjustedIdx = this._adjustIndex(index, -1);

      var detachedView = detachView(this._lContainer, adjustedIdx);

      if (detachedView) {
        // Before destroying the view, remove it from the container's array of `ViewRef`s.
        // This ensures the view container length is updated before calling
        // `destroyLView`, which could recursively call view container methods that
        // rely on an accurate container length.
        // (e.g. a method on this view container being called by a child directive's OnDestroy
        // lifecycle hook)
        removeFromArray(getOrCreateViewRefs(this._lContainer), adjustedIdx);
        destroyLView(detachedView[TVIEW], detachedView);
      }
    }
  }, {
    key: "detach",
    value: function detach(index) {
      var adjustedIdx = this._adjustIndex(index, -1);

      var view = detachView(this._lContainer, adjustedIdx);
      var wasDetached = view && removeFromArray(getOrCreateViewRefs(this._lContainer), adjustedIdx) != null;
      return wasDetached ? new ViewRef(view) : null;
    }
  }, {
    key: "_adjustIndex",
    value: function _adjustIndex(index) {
      var shift = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      if (index == null) {
        return this.length + shift;
      }

      if (ngDevMode) {
        assertGreaterThan(index, -1, "ViewRef index must be positive, got ".concat(index)); // +1 because it's legal to insert at the end.

        assertLessThan(index, this.length + 1 + shift, 'index');
      }

      return index;
    }
  }, {
    key: "element",
    get: function get() {
      return createElementRef(this._hostTNode, this._hostLView);
    }
  }, {
    key: "injector",
    get: function get() {
      return new NodeInjector(this._hostTNode, this._hostLView);
    }
    /** @deprecated No replacement */

  }, {
    key: "parentInjector",
    get: function get() {
      var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostLView);

      if (hasParentInjector(parentLocation)) {
        var parentView = getParentInjectorView(parentLocation, this._hostLView);
        var injectorIndex = getParentInjectorIndex(parentLocation);
        ngDevMode && assertNodeInjector(parentView, injectorIndex);
        var parentTNode = parentView[TVIEW].data[injectorIndex + 8
        /* TNODE */
        ];
        return new NodeInjector(parentTNode, parentView);
      } else {
        return new NodeInjector(null, this._hostLView);
      }
    }
  }, {
    key: "length",
    get: function get() {
      return this._lContainer.length - CONTAINER_HEADER_OFFSET;
    }
  }]);

  return ViewContainerRef;
}(VE_ViewContainerRef);

function getViewRefs(lContainer) {
  return lContainer[VIEW_REFS];
}

function getOrCreateViewRefs(lContainer) {
  return lContainer[VIEW_REFS] || (lContainer[VIEW_REFS] = []);
}
/**
 * Creates a ViewContainerRef and stores it on the injector.
 *
 * @param ViewContainerRefToken The ViewContainerRef type
 * @param ElementRefToken The ElementRef type
 * @param hostTNode The node that is requesting a ViewContainerRef
 * @param hostLView The view to which the node belongs
 * @returns The ViewContainerRef instance to use
 */


function createContainerRef(hostTNode, hostLView) {
  ngDevMode && assertTNodeType(hostTNode, 12
  /* AnyContainer */
  | 3
  /* AnyRNode */
  );
  var lContainer;
  var slotValue = hostLView[hostTNode.index];

  if (isLContainer(slotValue)) {
    // If the host is a container, we don't need to create a new LContainer
    lContainer = slotValue;
  } else {
    var commentNode; // If the host is an element container, the native host element is guaranteed to be a
    // comment and we can reuse that comment as anchor element for the new LContainer.
    // The comment node in question is already part of the DOM structure so we don't need to append
    // it again.

    if (hostTNode.type & 8
    /* ElementContainer */
    ) {
        commentNode = unwrapRNode(slotValue);
      } else {
      // If the host is a regular element, we have to insert a comment node manually which will
      // be used as an anchor when inserting elements. In this specific case we use low-level DOM
      // manipulation to insert it.
      var renderer = hostLView[RENDERER];
      ngDevMode && ngDevMode.rendererCreateComment++;
      commentNode = renderer.createComment(ngDevMode ? 'container' : '');
      var hostNative = getNativeByTNode(hostTNode, hostLView);
      var parentOfHostNative = nativeParentNode(renderer, hostNative);
      nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative), false);
    }

    hostLView[hostTNode.index] = lContainer = createLContainer(slotValue, hostLView, commentNode, hostTNode);
    addToViewTree(hostLView, lContainer);
  }

  return new R3ViewContainerRef(lContainer, hostTNode, hostLView);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {
  var msg = "ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '".concat(oldValue, "'. Current value: '").concat(currValue, "'.");

  if (isFirstCheck) {
    msg += " It seems like the view has been created after its parent and its children have been dirty checked." + " Has it been created in a change detection hook ?";
  }

  return viewDebugError(msg, context);
}

function viewWrappedDebugError(err, context) {
  if (!(err instanceof Error)) {
    // errors that are not Error instances don't have a stack,
    // so it is ok to wrap them into a new Error object...
    err = new Error(err.toString());
  }

  _addDebugContext(err, context);

  return err;
}

function viewDebugError(msg, context) {
  var err = new Error(msg);

  _addDebugContext(err, context);

  return err;
}

function _addDebugContext(err, context) {
  err[ERROR_DEBUG_CONTEXT] = context;
  err[ERROR_LOGGER] = context.logError.bind(context);
}

function isViewDebugError(err) {
  return !!getDebugContext(err);
}

function viewDestroyedError(action) {
  return new Error("ViewDestroyedError: Attempt to use a destroyed view: ".concat(action));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Called before each cycle of a view's check to detect whether this is in the
// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit
// lifecycle methods. Returns true if this check cycle should call lifecycle
// methods.


function shiftInitState(view, priorInitState, newInitState) {
  // Only update the InitState if we are currently in the prior state.
  // For example, only move into CallingInit if we are in BeforeInit. Only
  // move into CallingContentInit if we are in CallingInit. Normally this will
  // always be true because of how checkCycle is called in checkAndUpdateView.
  // However, if checkAndUpdateView is called recursively or if an exception is
  // thrown while checkAndUpdateView is running, checkAndUpdateView starts over
  // from the beginning. This ensures the state is monotonically increasing,
  // terminating in the AfterInit state, which ensures the Init methods are called
  // at least once and only once.
  var state = view.state;
  var initState = state & 1792
  /* InitState_Mask */
  ;

  if (initState === priorInitState) {
    view.state = state & ~1792
    /* InitState_Mask */
    | newInitState;
    view.initIndex = -1;
    return true;
  }

  return initState === newInitState;
} // Returns true if the lifecycle init method should be called for the node with
// the given init index.


function shouldCallLifecycleInitHook(view, initState, index) {
  if ((view.state & 1792
  /* InitState_Mask */
  ) === initState && view.initIndex <= index) {
    view.initIndex = index + 1;
    return true;
  }

  return false;
}
/**
 * Node instance data.
 *
 * We have a separate type per NodeType to save memory
 * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)
 *
 * To keep our code monomorphic,
 * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).
 * This way, no usage site can get a `NodeData` from view.nodes and then use it for different
 * purposes.
 */


var NodeData = function NodeData() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, NodeData);
};
/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 */


function asTextData(view, index) {
  return view.nodes[index];
}
/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 */


function asElementData(view, index) {
  return view.nodes[index];
}
/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 */


function asProviderData(view, index) {
  return view.nodes[index];
}
/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 */


function asPureExpressionData(view, index) {
  return view.nodes[index];
}
/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 */


function asQueryList(view, index) {
  return view.nodes[index];
}

var DebugContext = function DebugContext() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, DebugContext);
};
/**
 * This object is used to prevent cycles in the source files and to have a place where
 * debug mode can hook it. It is lazily filled when `isDevMode` is known.
 */


var Services = {
  setCurrentNode: undefined,
  createRootView: undefined,
  createEmbeddedView: undefined,
  createComponentView: undefined,
  createNgModuleRef: undefined,
  overrideProvider: undefined,
  overrideComponentView: undefined,
  clearOverrides: undefined,
  checkAndUpdateView: undefined,
  checkNoChangesView: undefined,
  destroyView: undefined,
  resolveDep: undefined,
  createDebugContext: undefined,
  handleEvent: undefined,
  updateDirectives: undefined,
  updateRenderer: undefined,
  dirtyParentQueries: undefined
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var NOOP = function NOOP() {};

var _tokenKeyCache = /*@__PURE__*/new Map();

function tokenKey(token) {
  var key = _tokenKeyCache.get(token);

  if (!key) {
    key = stringify(token) + '_' + _tokenKeyCache.size;

    _tokenKeyCache.set(token, key);
  }

  return key;
}

function unwrapValue(view, nodeIdx, bindingIdx, value) {
  if (WrappedValue.isWrapped(value)) {
    value = WrappedValue.unwrap(value);
    var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;
    var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);
    view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);
  }

  return value;
}

var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';
var EMPTY_RENDERER_TYPE_ID = '$$empty'; // Attention: this function is called as top level function.
// Putting any logic in here will destroy closure tree shaking!

function createRendererType2(values) {
  return {
    id: UNDEFINED_RENDERER_TYPE_ID,
    styles: values.styles,
    encapsulation: values.encapsulation,
    data: values.data
  };
}

var _renderCompCount$1 = 0;

function resolveRendererType2(type) {
  if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {
    // first time we see this RendererType2. Initialize it...
    var isFilled = type.encapsulation != null && type.encapsulation !== ViewEncapsulation$1.None || type.styles.length || Object.keys(type.data).length;

    if (isFilled) {
      type.id = "c".concat(_renderCompCount$1++);
    } else {
      type.id = EMPTY_RENDERER_TYPE_ID;
    }
  }

  if (type && type.id === EMPTY_RENDERER_TYPE_ID) {
    type = null;
  }

  return type || null;
}

function checkBinding(view, def, bindingIdx, value) {
  var oldValues = view.oldValues;

  if (view.state & 2
  /* FirstCheck */
  || !Object.is(oldValues[def.bindingIndex + bindingIdx], value)) {
    return true;
  }

  return false;
}

function checkAndUpdateBinding(view, def, bindingIdx, value) {
  if (checkBinding(view, def, bindingIdx, value)) {
    view.oldValues[def.bindingIndex + bindingIdx] = value;
    return true;
  }

  return false;
}

function checkBindingNoChanges(view, def, bindingIdx, value) {
  var oldValue = view.oldValues[def.bindingIndex + bindingIdx];

  if (view.state & 1
  /* BeforeFirstCheck */
  || !devModeEqual(oldValue, value)) {
    var bindingName = def.bindings[bindingIdx].name;
    throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), "".concat(bindingName, ": ").concat(oldValue), "".concat(bindingName, ": ").concat(value), (view.state & 1
    /* BeforeFirstCheck */
    ) !== 0);
  }
}

function markParentViewsForCheck(view) {
  var currView = view;

  while (currView) {
    if (currView.def.flags & 2
    /* OnPush */
    ) {
        currView.state |= 8
        /* ChecksEnabled */
        ;
      }

    currView = currView.viewContainerParent || currView.parent;
  }
}

function markParentViewsForCheckProjectedViews(view, endView) {
  var currView = view;

  while (currView && currView !== endView) {
    currView.state |= 64
    /* CheckProjectedViews */
    ;
    currView = currView.viewContainerParent || currView.parent;
  }
}

function dispatchEvent(view, nodeIndex, eventName, event) {
  try {
    var nodeDef = view.def.nodes[nodeIndex];
    var startView = nodeDef.flags & 33554432
    /* ComponentView */
    ? asElementData(view, nodeIndex).componentView : view;
    markParentViewsForCheck(startView);
    return Services.handleEvent(view, nodeIndex, eventName, event);
  } catch (e) {
    // Attention: Don't rethrow, as it would cancel Observable subscriptions!
    view.root.errorHandler.handleError(e);
  }
}

function declaredViewContainer(view) {
  if (view.parent) {
    var parentView = view.parent;
    return asElementData(parentView, view.parentNodeDef.nodeIndex);
  }

  return null;
}
/**
 * for component views, this is the host element.
 * for embedded views, this is the index of the parent node
 * that contains the view container.
 */


function viewParentEl(view) {
  var parentView = view.parent;

  if (parentView) {
    return view.parentNodeDef.parent;
  } else {
    return null;
  }
}

function renderNode(view, def) {
  switch (def.flags & 201347067
  /* Types */
  ) {
    case 1
    /* TypeElement */
    :
      return asElementData(view, def.nodeIndex).renderElement;

    case 2
    /* TypeText */
    :
      return asTextData(view, def.nodeIndex).renderText;
  }
}

function elementEventFullName(target, name) {
  return target ? "".concat(target, ":").concat(name) : name;
}

function isComponentView(view) {
  return !!view.parent && !!(view.parentNodeDef.flags & 32768
  /* Component */
  );
}

function isEmbeddedView(view) {
  return !!view.parent && !(view.parentNodeDef.flags & 32768
  /* Component */
  );
}

function filterQueryId(queryId) {
  return 1 << queryId % 32;
}

function splitMatchedQueriesDsl(matchedQueriesDsl) {
  var matchedQueries = {};
  var matchedQueryIds = 0;
  var references = {};

  if (matchedQueriesDsl) {
    matchedQueriesDsl.forEach(function (_ref) {
      var _ref2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(_ref, 2),
          queryId = _ref2[0],
          valueType = _ref2[1];

      if (typeof queryId === 'number') {
        matchedQueries[queryId] = valueType;
        matchedQueryIds |= filterQueryId(queryId);
      } else {
        references[queryId] = valueType;
      }
    });
  }

  return {
    matchedQueries: matchedQueries,
    references: references,
    matchedQueryIds: matchedQueryIds
  };
}

function splitDepsDsl(deps, sourceName) {
  return deps.map(function (value) {
    var token;
    var flags;

    if (Array.isArray(value)) {
      var _value2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(value, 2);

      flags = _value2[0];
      token = _value2[1];
    } else {
      flags = 0
      /* None */
      ;
      token = value;
    }

    if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {
      Object.defineProperty(token, SOURCE, {
        value: sourceName,
        configurable: true
      });
    }

    return {
      flags: flags,
      token: token,
      tokenKey: tokenKey(token)
    };
  });
}

function getParentRenderElement(view, renderHost, def) {
  var renderParent = def.renderParent;

  if (renderParent) {
    if ((renderParent.flags & 1
    /* TypeElement */
    ) === 0 || (renderParent.flags & 33554432
    /* ComponentView */
    ) === 0 || renderParent.element.componentRendererType && (renderParent.element.componentRendererType.encapsulation === ViewEncapsulation$1.ShadowDom || // TODO(FW-2290): remove the `encapsulation === 1` fallback logic in v12.
    renderParent.element.componentRendererType.encapsulation === 1)) {
      // only children of non components, or children of components with native encapsulation should
      // be attached.
      return asElementData(view, def.renderParent.nodeIndex).renderElement;
    }
  } else {
    return renderHost;
  }
}

var DEFINITION_CACHE = /*@__PURE__*/new WeakMap();

function resolveDefinition(factory) {
  var value = DEFINITION_CACHE.get(factory);

  if (!value) {
    value = factory(function () {
      return NOOP;
    });
    value.factory = factory;
    DEFINITION_CACHE.set(factory, value);
  }

  return value;
}

function rootRenderNodes(view) {
  var renderNodes = [];
  visitRootRenderNodes(view, 0
  /* Collect */
  , undefined, undefined, renderNodes);
  return renderNodes;
}

function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {
  // We need to re-compute the parent node in case the nodes have been moved around manually
  if (action === 3
  /* RemoveChild */
  ) {
      parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));
    }

  visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);
}

function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {
  for (var i = startIndex; i <= endIndex; i++) {
    var nodeDef = view.def.nodes[i];

    if (nodeDef.flags & (1
    /* TypeElement */
    | 2
    /* TypeText */
    | 8
    /* TypeNgContent */
    )) {
      visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);
    } // jump to next sibling


    i += nodeDef.childCount;
  }
}

function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {
  var compView = view;

  while (compView && !isComponentView(compView)) {
    compView = compView.parent;
  }

  var hostView = compView.parent;
  var hostElDef = viewParentEl(compView);
  var startIndex = hostElDef.nodeIndex + 1;
  var endIndex = hostElDef.nodeIndex + hostElDef.childCount;

  for (var i = startIndex; i <= endIndex; i++) {
    var nodeDef = hostView.def.nodes[i];

    if (nodeDef.ngContentIndex === ngContentIndex) {
      visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);
    } // jump to next sibling


    i += nodeDef.childCount;
  }

  if (!hostView.parent) {
    // a root view
    var projectedNodes = view.root.projectableNodes[ngContentIndex];

    if (projectedNodes) {
      for (var _i6 = 0; _i6 < projectedNodes.length; _i6++) {
        execRenderNodeAction(view, projectedNodes[_i6], action, parentNode, nextSibling, target);
      }
    }
  }
}

function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {
  if (nodeDef.flags & 8
  /* TypeNgContent */
  ) {
      visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);
    } else {
    var rn = renderNode(view, nodeDef);

    if (action === 3
    /* RemoveChild */
    && nodeDef.flags & 33554432
    /* ComponentView */
    && nodeDef.bindingFlags & 48
    /* CatSyntheticProperty */
    ) {
      // Note: we might need to do both actions.
      if (nodeDef.bindingFlags & 16
      /* SyntheticProperty */
      ) {
        execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);
      }

      if (nodeDef.bindingFlags & 32
      /* SyntheticHostProperty */
      ) {
        var compView = asElementData(view, nodeDef.nodeIndex).componentView;
        execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);
      }
    } else {
      execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);
    }

    if (nodeDef.flags & 16777216
    /* EmbeddedViews */
    ) {
        var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;

        for (var k = 0; k < embeddedViews.length; k++) {
          visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);
        }
      }

    if (nodeDef.flags & 1
    /* TypeElement */
    && !nodeDef.element.name) {
      visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);
    }
  }
}

function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {
  var renderer = view.renderer;

  switch (action) {
    case 1
    /* AppendChild */
    :
      renderer.appendChild(parentNode, renderNode);
      break;

    case 2
    /* InsertBefore */
    :
      renderer.insertBefore(parentNode, renderNode, nextSibling);
      break;

    case 3
    /* RemoveChild */
    :
      renderer.removeChild(parentNode, renderNode);
      break;

    case 0
    /* Collect */
    :
      target.push(renderNode);
      break;
  }
}

var NS_PREFIX_RE = /^:([^:]+):(.+)$/;

function splitNamespace(name) {
  if (name[0] === ':') {
    var match = name.match(NS_PREFIX_RE);
    return [match[1], match[2]];
  }

  return ['', name];
}

function calcBindingFlags(bindings) {
  var flags = 0;

  for (var i = 0; i < bindings.length; i++) {
    flags |= bindings[i].flags;
  }

  return flags;
}

function interpolate(valueCount, constAndInterp) {
  var result = '';

  for (var i = 0; i < valueCount * 2; i = i + 2) {
    result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);
  }

  return result + constAndInterp[valueCount * 2];
}

function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {
  switch (valueCount) {
    case 1:
      return c0 + _toStringWithNull(a1) + c1;

    case 2:
      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;

    case 3:
      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3;

    case 4:
      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4;

    case 5:
      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;

    case 6:
      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;

    case 7:
      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6 + _toStringWithNull(a7) + c7;

    case 8:
      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;

    case 9:
      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;

    default:
      throw new Error("Does not support more than 9 expressions");
  }
}

function _toStringWithNull(v) {
  return v != null ? v.toString() : '';
}

var EMPTY_ARRAY$4 = [];
var EMPTY_MAP = {};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var UNDEFINED_VALUE = {};
var InjectorRefTokenKey = /*@__PURE__*/tokenKey(Injector);
var INJECTORRefTokenKey = /*@__PURE__*/tokenKey(INJECTOR$1);
var NgModuleRefTokenKey = /*@__PURE__*/tokenKey(NgModuleRef);

function moduleProvideDef(flags, token, value, deps) {
  // Need to resolve forwardRefs as e.g. for `useValue` we
  // lowered the expression and then stopped evaluating it,
  // i.e. also didn't unwrap it.
  value = resolveForwardRef(value);
  var depDefs = splitDepsDsl(deps, stringify(token));
  return {
    // will bet set by the module definition
    index: -1,
    deps: depDefs,
    flags: flags,
    token: token,
    value: value
  };
}

function moduleDef(providers) {
  var providersByKey = {};
  var modules = [];
  var scope = null;

  for (var i = 0; i < providers.length; i++) {
    var provider = providers[i];

    if (provider.token === INJECTOR_SCOPE) {
      scope = provider.value;
    }

    if (provider.flags & 1073741824
    /* TypeNgModule */
    ) {
        modules.push(provider.token);
      }

    provider.index = i;
    providersByKey[tokenKey(provider.token)] = provider;
  }

  return {
    // Will be filled later...
    factory: null,
    providersByKey: providersByKey,
    providers: providers,
    modules: modules,
    scope: scope
  };
}

function initNgModule(data) {
  var def = data._def;
  var providers = data._providers = newArray(def.providers.length);

  for (var i = 0; i < def.providers.length; i++) {
    var provDef = def.providers[i];

    if (!(provDef.flags & 4096
    /* LazyProvider */
    )) {
      // Make sure the provider has not been already initialized outside this loop.
      if (providers[i] === undefined) {
        providers[i] = _createProviderInstance(data, provDef);
      }
    }
  }
}

function resolveNgModuleDep(data, depDef) {
  var notFoundValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Injector.THROW_IF_NOT_FOUND;
  var former = setCurrentInjector(data);

  try {
    if (depDef.flags & 8
    /* Value */
    ) {
        return depDef.token;
      }

    if (depDef.flags & 2
    /* Optional */
    ) {
        notFoundValue = null;
      }

    if (depDef.flags & 1
    /* SkipSelf */
    ) {
        return data._parent.get(depDef.token, notFoundValue);
      }

    var _tokenKey = depDef.tokenKey;

    switch (_tokenKey) {
      case InjectorRefTokenKey:
      case INJECTORRefTokenKey:
      case NgModuleRefTokenKey:
        return data;
    }

    var _providerDef = data._def.providersByKey[_tokenKey];
    var injectableDef;

    if (_providerDef) {
      var providerInstance = data._providers[_providerDef.index];

      if (providerInstance === undefined) {
        providerInstance = data._providers[_providerDef.index] = _createProviderInstance(data, _providerDef);
      }

      return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;
    } else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {
      var index = data._providers.length;
      data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {
        flags: 1024
        /* TypeFactoryProvider */
        | 4096
        /* LazyProvider */
        ,
        value: injectableDef.factory,
        deps: [],
        index: index,
        token: depDef.token
      };
      data._providers[index] = UNDEFINED_VALUE;
      return data._providers[index] = _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]);
    } else if (depDef.flags & 4
    /* Self */
    ) {
        return notFoundValue;
      }

    return data._parent.get(depDef.token, notFoundValue);
  } finally {
    setCurrentInjector(former);
  }
}

function moduleTransitivelyPresent(ngModule, scope) {
  return ngModule._def.modules.indexOf(scope) > -1;
}

function targetsModule(ngModule, def) {
  var providedIn = def.providedIn;
  return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope || moduleTransitivelyPresent(ngModule, providedIn));
}

function _createProviderInstance(ngModule, providerDef) {
  var injectable;

  switch (providerDef.flags & 201347067
  /* Types */
  ) {
    case 512
    /* TypeClassProvider */
    :
      injectable = _createClass(ngModule, providerDef.value, providerDef.deps);
      break;

    case 1024
    /* TypeFactoryProvider */
    :
      injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);
      break;

    case 2048
    /* TypeUseExistingProvider */
    :
      injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);
      break;

    case 256
    /* TypeValueProvider */
    :
      injectable = providerDef.value;
      break;
  } // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be
  // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be
  // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already
  // set (ngOnDestroy was detected statically).


  if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' && !(providerDef.flags & 131072
  /* OnDestroy */
  ) && typeof injectable.ngOnDestroy === 'function') {
    providerDef.flags |= 131072
    /* OnDestroy */
    ;
  }

  return injectable === undefined ? UNDEFINED_VALUE : injectable;
}

function _createClass(ngModule, ctor, deps) {
  var len = deps.length;

  switch (len) {
    case 0:
      return new ctor();

    case 1:
      return new ctor(resolveNgModuleDep(ngModule, deps[0]));

    case 2:
      return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));

    case 3:
      return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));

    default:
      var depValues = [];

      for (var i = 0; i < len; i++) {
        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);
      }

      return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_13__["default"])(ctor, depValues);
  }
}

function _callFactory(ngModule, factory, deps) {
  var len = deps.length;

  switch (len) {
    case 0:
      return factory();

    case 1:
      return factory(resolveNgModuleDep(ngModule, deps[0]));

    case 2:
      return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));

    case 3:
      return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));

    default:
      var depValues = [];

      for (var i = 0; i < len; i++) {
        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);
      }

      return factory.apply(void 0, depValues);
  }
}

function callNgModuleLifecycle(ngModule, lifecycles) {
  var def = ngModule._def;
  var destroyed = new Set();

  for (var i = 0; i < def.providers.length; i++) {
    var provDef = def.providers[i];

    if (provDef.flags & 131072
    /* OnDestroy */
    ) {
        var instance = ngModule._providers[i];

        if (instance && instance !== UNDEFINED_VALUE) {
          var onDestroy = instance.ngOnDestroy;

          if (typeof onDestroy === 'function' && !destroyed.has(instance)) {
            onDestroy.apply(instance);
            destroyed.add(instance);
          }
        }
      }
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function attachEmbeddedView(parentView, elementData, viewIndex, view) {
  var embeddedViews = elementData.viewContainer._embeddedViews;

  if (viewIndex === null || viewIndex === undefined) {
    viewIndex = embeddedViews.length;
  }

  view.viewContainerParent = parentView;
  addToArray(embeddedViews, viewIndex, view);
  attachProjectedView(elementData, view);
  Services.dirtyParentQueries(view);
  var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;
  renderAttachEmbeddedView(elementData, prevView, view);
}

function attachProjectedView(vcElementData, view) {
  var dvcElementData = declaredViewContainer(view);

  if (!dvcElementData || dvcElementData === vcElementData || view.state & 16
  /* IsProjectedView */
  ) {
      return;
    } // Note: For performance reasons, we
  // - add a view to template._projectedViews only 1x throughout its lifetime,
  //   and remove it not until the view is destroyed.
  //   (hard, as when a parent view is attached/detached we would need to attach/detach all
  //    nested projected views as well, even across component boundaries).
  // - don't track the insertion order of views in the projected views array
  //   (hard, as when the views of the same template are inserted different view containers)


  view.state |= 16
  /* IsProjectedView */
  ;
  var projectedViews = dvcElementData.template._projectedViews;

  if (!projectedViews) {
    projectedViews = dvcElementData.template._projectedViews = [];
  }

  projectedViews.push(view); // Note: we are changing the NodeDef here as we cannot calculate
  // the fact whether a template is used for projection during compilation.

  markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);
}

function markNodeAsProjectedTemplate(viewDef, nodeDef) {
  if (nodeDef.flags & 4
  /* ProjectedTemplate */
  ) {
      return;
    }

  viewDef.nodeFlags |= 4
  /* ProjectedTemplate */
  ;
  nodeDef.flags |= 4
  /* ProjectedTemplate */
  ;
  var parentNodeDef = nodeDef.parent;

  while (parentNodeDef) {
    parentNodeDef.childFlags |= 4
    /* ProjectedTemplate */
    ;
    parentNodeDef = parentNodeDef.parent;
  }
}

function detachEmbeddedView(elementData, viewIndex) {
  var embeddedViews = elementData.viewContainer._embeddedViews;

  if (viewIndex == null || viewIndex >= embeddedViews.length) {
    viewIndex = embeddedViews.length - 1;
  }

  if (viewIndex < 0) {
    return null;
  }

  var view = embeddedViews[viewIndex];
  view.viewContainerParent = null;
  removeFromArray(embeddedViews, viewIndex); // See attachProjectedView for why we don't update projectedViews here.

  Services.dirtyParentQueries(view);
  renderDetachView$1(view);
  return view;
}

function detachProjectedView(view) {
  if (!(view.state & 16
  /* IsProjectedView */
  )) {
    return;
  }

  var dvcElementData = declaredViewContainer(view);

  if (dvcElementData) {
    var projectedViews = dvcElementData.template._projectedViews;

    if (projectedViews) {
      removeFromArray(projectedViews, projectedViews.indexOf(view));
      Services.dirtyParentQueries(view);
    }
  }
}

function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {
  var embeddedViews = elementData.viewContainer._embeddedViews;
  var view = embeddedViews[oldViewIndex];
  removeFromArray(embeddedViews, oldViewIndex);

  if (newViewIndex == null) {
    newViewIndex = embeddedViews.length;
  }

  addToArray(embeddedViews, newViewIndex, view); // Note: Don't need to change projectedViews as the order in there
  // as always invalid...

  Services.dirtyParentQueries(view);
  renderDetachView$1(view);
  var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;
  renderAttachEmbeddedView(elementData, prevView, view);
  return view;
}

function renderAttachEmbeddedView(elementData, prevView, view) {
  var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) : elementData.renderElement;
  var parentNode = view.renderer.parentNode(prevRenderNode);
  var nextSibling = view.renderer.nextSibling(prevRenderNode); // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!
  // However, browsers automatically do `appendChild` when there is no `nextSibling`.

  visitRootRenderNodes(view, 2
  /* InsertBefore */
  , parentNode, nextSibling, undefined);
}

function renderDetachView$1(view) {
  visitRootRenderNodes(view, 3
  /* RemoveChild */
  , null, null, undefined);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var EMPTY_CONTEXT = {}; // Attention: this function is called as top level function.
// Putting any logic in here will destroy closure tree shaking!

function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {
  return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);
}

function getComponentViewDefinitionFactory(componentFactory) {
  return componentFactory.viewDefFactory;
}

var ComponentFactory_ = /*#__PURE__*/function (_ComponentFactory2) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(ComponentFactory_, _ComponentFactory2);

  var _super11 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(ComponentFactory_);

  function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {
    var _this12;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ComponentFactory_);

    // Attention: this ctor is called as top level function.
    // Putting any logic in here will destroy closure tree shaking!
    _this12 = _super11.call(this);
    _this12.selector = selector;
    _this12.componentType = componentType;
    _this12._inputs = _inputs;
    _this12._outputs = _outputs;
    _this12.ngContentSelectors = ngContentSelectors;
    _this12.viewDefFactory = viewDefFactory;
    return _this12;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ComponentFactory_, [{
    key: "create",

    /**
     * Creates a new component.
     */
    value: function create(injector, projectableNodes, rootSelectorOrNode, ngModule) {
      if (!ngModule) {
        throw new Error('ngModule should be provided');
      }

      var viewDef = resolveDefinition(this.viewDefFactory);
      var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;
      var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);
      var component = asProviderData(view, componentNodeIndex).instance;

      if (rootSelectorOrNode) {
        view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);
      }

      return new ComponentRef_(view, new ViewRef_(view), component);
    }
  }, {
    key: "inputs",
    get: function get() {
      var inputsArr = [];
      var inputs = this._inputs;

      for (var propName in inputs) {
        var templateName = inputs[propName];
        inputsArr.push({
          propName: propName,
          templateName: templateName
        });
      }

      return inputsArr;
    }
  }, {
    key: "outputs",
    get: function get() {
      var outputsArr = [];

      for (var propName in this._outputs) {
        var templateName = this._outputs[propName];
        outputsArr.push({
          propName: propName,
          templateName: templateName
        });
      }

      return outputsArr;
    }
  }]);

  return ComponentFactory_;
}(ComponentFactory);

var ComponentRef_ = /*#__PURE__*/function (_ComponentRef) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(ComponentRef_, _ComponentRef);

  var _super12 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(ComponentRef_);

  function ComponentRef_(_view, _viewRef, _component) {
    var _this13;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ComponentRef_);

    _this13 = _super12.call(this);
    _this13._view = _view;
    _this13._viewRef = _viewRef;
    _this13._component = _component;
    _this13._elDef = _this13._view.def.nodes[0];
    _this13.hostView = _viewRef;
    _this13.changeDetectorRef = _viewRef;
    _this13.instance = _component;
    return _this13;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ComponentRef_, [{
    key: "destroy",
    value: function destroy() {
      this._viewRef.destroy();
    }
  }, {
    key: "onDestroy",
    value: function onDestroy(callback) {
      this._viewRef.onDestroy(callback);
    }
  }, {
    key: "location",
    get: function get() {
      return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);
    }
  }, {
    key: "injector",
    get: function get() {
      return new Injector_(this._view, this._elDef);
    }
  }, {
    key: "componentType",
    get: function get() {
      return this._component.constructor;
    }
  }]);

  return ComponentRef_;
}(ComponentRef);

function createViewContainerData(view, elDef, elData) {
  return new ViewContainerRef_(view, elDef, elData);
}

var ViewContainerRef_ = /*#__PURE__*/function () {
  function ViewContainerRef_(_view, _elDef, _data) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ViewContainerRef_);

    this._view = _view;
    this._elDef = _elDef;
    this._data = _data;
    /**
     * @internal
     */

    this._embeddedViews = [];
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ViewContainerRef_, [{
    key: "clear",
    value: function clear() {
      var len = this._embeddedViews.length;

      for (var i = len - 1; i >= 0; i--) {
        var view = detachEmbeddedView(this._data, i);
        Services.destroyView(view);
      }
    }
  }, {
    key: "get",
    value: function get(index) {
      var view = this._embeddedViews[index];

      if (view) {
        var ref = new ViewRef_(view);
        ref.attachToViewContainerRef(this);
        return ref;
      }

      return null;
    }
  }, {
    key: "createEmbeddedView",
    value: function createEmbeddedView(templateRef, context, index) {
      var viewRef = templateRef.createEmbeddedView(context || {});
      this.insert(viewRef, index);
      return viewRef;
    }
  }, {
    key: "createComponent",
    value: function createComponent(componentFactory, index, injector, projectableNodes, ngModuleRef) {
      var contextInjector = injector || this.parentInjector;

      if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {
        ngModuleRef = contextInjector.get(NgModuleRef);
      }

      var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);
      this.insert(componentRef.hostView, index);
      return componentRef;
    }
  }, {
    key: "insert",
    value: function insert(viewRef, index) {
      if (viewRef.destroyed) {
        throw new Error('Cannot insert a destroyed View in a ViewContainer!');
      }

      var viewRef_ = viewRef;
      var viewData = viewRef_._view;
      attachEmbeddedView(this._view, this._data, index, viewData);
      viewRef_.attachToViewContainerRef(this);
      return viewRef;
    }
  }, {
    key: "move",
    value: function move(viewRef, currentIndex) {
      if (viewRef.destroyed) {
        throw new Error('Cannot move a destroyed View in a ViewContainer!');
      }

      var previousIndex = this._embeddedViews.indexOf(viewRef._view);

      moveEmbeddedView(this._data, previousIndex, currentIndex);
      return viewRef;
    }
  }, {
    key: "indexOf",
    value: function indexOf(viewRef) {
      return this._embeddedViews.indexOf(viewRef._view);
    }
  }, {
    key: "remove",
    value: function remove(index) {
      var viewData = detachEmbeddedView(this._data, index);

      if (viewData) {
        Services.destroyView(viewData);
      }
    }
  }, {
    key: "detach",
    value: function detach(index) {
      var view = detachEmbeddedView(this._data, index);
      return view ? new ViewRef_(view) : null;
    }
  }, {
    key: "element",
    get: function get() {
      return new ElementRef(this._data.renderElement);
    }
  }, {
    key: "injector",
    get: function get() {
      return new Injector_(this._view, this._elDef);
    }
    /** @deprecated No replacement */

  }, {
    key: "parentInjector",
    get: function get() {
      var view = this._view;
      var elDef = this._elDef.parent;

      while (!elDef && view) {
        elDef = viewParentEl(view);
        view = view.parent;
      }

      return view ? new Injector_(view, elDef) : new Injector_(this._view, null);
    }
  }, {
    key: "length",
    get: function get() {
      return this._embeddedViews.length;
    }
  }]);

  return ViewContainerRef_;
}();

function createChangeDetectorRef(view) {
  return new ViewRef_(view);
}

var ViewRef_ = /*#__PURE__*/function () {
  function ViewRef_(_view) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ViewRef_);

    this._view = _view;
    this._viewContainerRef = null;
    this._appRef = null;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ViewRef_, [{
    key: "markForCheck",
    value: function markForCheck() {
      markParentViewsForCheck(this._view);
    }
  }, {
    key: "detach",
    value: function detach() {
      this._view.state &= ~4
      /* Attached */
      ;
    }
  }, {
    key: "detectChanges",
    value: function detectChanges() {
      var fs = this._view.root.rendererFactory;

      if (fs.begin) {
        fs.begin();
      }

      try {
        Services.checkAndUpdateView(this._view);
      } finally {
        if (fs.end) {
          fs.end();
        }
      }
    }
  }, {
    key: "checkNoChanges",
    value: function checkNoChanges() {
      Services.checkNoChangesView(this._view);
    }
  }, {
    key: "reattach",
    value: function reattach() {
      this._view.state |= 4
      /* Attached */
      ;
    }
  }, {
    key: "onDestroy",
    value: function onDestroy(callback) {
      if (!this._view.disposables) {
        this._view.disposables = [];
      }

      this._view.disposables.push(callback);
    }
  }, {
    key: "destroy",
    value: function destroy() {
      if (this._appRef) {
        this._appRef.detachView(this);
      } else if (this._viewContainerRef) {
        this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));
      }

      Services.destroyView(this._view);
    }
  }, {
    key: "detachFromAppRef",
    value: function detachFromAppRef() {
      this._appRef = null;
      renderDetachView$1(this._view);
      Services.dirtyParentQueries(this._view);
    }
  }, {
    key: "attachToAppRef",
    value: function attachToAppRef(appRef) {
      if (this._viewContainerRef) {
        throw new Error('This view is already attached to a ViewContainer!');
      }

      this._appRef = appRef;
    }
  }, {
    key: "attachToViewContainerRef",
    value: function attachToViewContainerRef(vcRef) {
      if (this._appRef) {
        throw new Error('This view is already attached directly to the ApplicationRef!');
      }

      this._viewContainerRef = vcRef;
    }
  }, {
    key: "rootNodes",
    get: function get() {
      return rootRenderNodes(this._view);
    }
  }, {
    key: "context",
    get: function get() {
      return this._view.context;
    }
  }, {
    key: "destroyed",
    get: function get() {
      return (this._view.state & 128
      /* Destroyed */
      ) !== 0;
    }
  }]);

  return ViewRef_;
}();

function createTemplateData(view, def) {
  return new TemplateRef_(view, def);
}

var TemplateRef_ = /*#__PURE__*/function (_TemplateRef) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(TemplateRef_, _TemplateRef);

  var _super13 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(TemplateRef_);

  function TemplateRef_(_parentView, _def) {
    var _this14;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, TemplateRef_);

    _this14 = _super13.call(this);
    _this14._parentView = _parentView;
    _this14._def = _def;
    return _this14;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(TemplateRef_, [{
    key: "createEmbeddedView",
    value: function createEmbeddedView(context) {
      return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));
    }
  }, {
    key: "elementRef",
    get: function get() {
      return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);
    }
  }]);

  return TemplateRef_;
}(TemplateRef);

function createInjector$1(view, elDef) {
  return new Injector_(view, elDef);
}

var Injector_ = /*#__PURE__*/function () {
  function Injector_(view, elDef) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, Injector_);

    this.view = view;
    this.elDef = elDef;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(Injector_, [{
    key: "get",
    value: function get(token) {
      var notFoundValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Injector.THROW_IF_NOT_FOUND;
      var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432
      /* ComponentView */
      ) !== 0 : false;
      return Services.resolveDep(this.view, this.elDef, allowPrivateServices, {
        flags: 0
        /* None */
        ,
        token: token,
        tokenKey: tokenKey(token)
      }, notFoundValue);
    }
  }]);

  return Injector_;
}();

function nodeValue(view, index) {
  var def = view.def.nodes[index];

  if (def.flags & 1
  /* TypeElement */
  ) {
      var elData = asElementData(view, def.nodeIndex);
      return def.element.template ? elData.template : elData.renderElement;
    } else if (def.flags & 2
  /* TypeText */
  ) {
      return asTextData(view, def.nodeIndex).renderText;
    } else if (def.flags & (20224
  /* CatProvider */
  | 16
  /* TypePipe */
  )) {
    return asProviderData(view, def.nodeIndex).instance;
  }

  throw new Error("Illegal state: read nodeValue for node index ".concat(index));
}

function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {
  return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);
}

var NgModuleRef_ = /*#__PURE__*/function () {
  function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, NgModuleRef_);

    this._moduleType = _moduleType;
    this._parent = _parent;
    this._bootstrapComponents = _bootstrapComponents;
    this._def = _def;
    this._destroyListeners = [];
    this._destroyed = false;
    this.injector = this;
    initNgModule(this);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(NgModuleRef_, [{
    key: "get",
    value: function get(token) {
      var notFoundValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Injector.THROW_IF_NOT_FOUND;
      var injectFlags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : InjectFlags.Default;
      var flags = 0
      /* None */
      ;

      if (injectFlags & InjectFlags.SkipSelf) {
        flags |= 1
        /* SkipSelf */
        ;
      } else if (injectFlags & InjectFlags.Self) {
        flags |= 4
        /* Self */
        ;
      }

      return resolveNgModuleDep(this, {
        token: token,
        tokenKey: tokenKey(token),
        flags: flags
      }, notFoundValue);
    }
  }, {
    key: "destroy",
    value: function destroy() {
      if (this._destroyed) {
        throw new Error("The ng module ".concat(stringify(this.instance.constructor), " has already been destroyed."));
      }

      this._destroyed = true;
      callNgModuleLifecycle(this, 131072
      /* OnDestroy */
      );

      this._destroyListeners.forEach(function (listener) {
        return listener();
      });
    }
  }, {
    key: "onDestroy",
    value: function onDestroy(callback) {
      this._destroyListeners.push(callback);
    }
  }, {
    key: "instance",
    get: function get() {
      return this.get(this._moduleType);
    }
  }, {
    key: "componentFactoryResolver",
    get: function get() {
      return this.get(ComponentFactoryResolver);
    }
  }]);

  return NgModuleRef_;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var Renderer2TokenKey = /*@__PURE__*/tokenKey(Renderer2);
var ElementRefTokenKey = /*@__PURE__*/tokenKey(ElementRef);
var ViewContainerRefTokenKey = /*@__PURE__*/tokenKey(ViewContainerRef);
var TemplateRefTokenKey = /*@__PURE__*/tokenKey(TemplateRef);
var ChangeDetectorRefTokenKey = /*@__PURE__*/tokenKey(ChangeDetectorRef);
var InjectorRefTokenKey$1 = /*@__PURE__*/tokenKey(Injector);
var INJECTORRefTokenKey$1 = /*@__PURE__*/tokenKey(INJECTOR$1);

function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {
  var bindings = [];

  if (props) {
    for (var prop in props) {
      var _props$prop = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(props[prop], 2),
          bindingIndex = _props$prop[0],
          nonMinifiedName = _props$prop[1];

      bindings[bindingIndex] = {
        flags: 8
        /* TypeProperty */
        ,
        name: prop,
        nonMinifiedName: nonMinifiedName,
        ns: null,
        securityContext: null,
        suffix: null
      };
    }
  }

  var outputDefs = [];

  if (outputs) {
    for (var propName in outputs) {
      outputDefs.push({
        type: 1
        /* DirectiveOutput */
        ,
        propName: propName,
        target: null,
        eventName: outputs[propName]
      });
    }
  }

  flags |= 16384
  /* TypeDirective */
  ;
  return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);
}

function pipeDef(flags, ctor, deps) {
  flags |= 16
  /* TypePipe */
  ;
  return _def(-1, flags, null, 0, ctor, ctor, deps);
}

function providerDef(flags, matchedQueries, token, value, deps) {
  return _def(-1, flags, matchedQueries, 0, token, value, deps);
}

function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {
  var _splitMatchedQueriesD = splitMatchedQueriesDsl(matchedQueriesDsl),
      matchedQueries = _splitMatchedQueriesD.matchedQueries,
      references = _splitMatchedQueriesD.references,
      matchedQueryIds = _splitMatchedQueriesD.matchedQueryIds;

  if (!outputs) {
    outputs = [];
  }

  if (!bindings) {
    bindings = [];
  } // Need to resolve forwardRefs as e.g. for `useValue` we
  // lowered the expression and then stopped evaluating it,
  // i.e. also didn't unwrap it.


  value = resolveForwardRef(value);
  var depDefs = splitDepsDsl(deps, stringify(token));
  return {
    // will bet set by the view definition
    nodeIndex: -1,
    parent: null,
    renderParent: null,
    bindingIndex: -1,
    outputIndex: -1,
    // regular values
    checkIndex: checkIndex,
    flags: flags,
    childFlags: 0,
    directChildFlags: 0,
    childMatchedQueries: 0,
    matchedQueries: matchedQueries,
    matchedQueryIds: matchedQueryIds,
    references: references,
    ngContentIndex: -1,
    childCount: childCount,
    bindings: bindings,
    bindingFlags: calcBindingFlags(bindings),
    outputs: outputs,
    element: null,
    provider: {
      token: token,
      value: value,
      deps: depDefs
    },
    text: null,
    query: null,
    ngContent: null
  };
}

function createProviderInstance(view, def) {
  return _createProviderInstance$1(view, def);
}

function createPipeInstance(view, def) {
  // deps are looked up from component.
  var compView = view;

  while (compView.parent && !isComponentView(compView)) {
    compView = compView.parent;
  } // pipes can see the private services of the component


  var allowPrivateServices = true; // pipes are always eager and classes!

  return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);
}

function createDirectiveInstance(view, def) {
  // components can see other private services, other directives can't.
  var allowPrivateServices = (def.flags & 32768
  /* Component */
  ) > 0; // directives are always eager and classes!

  var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);

  if (def.outputs.length) {
    for (var i = 0; i < def.outputs.length; i++) {
      var output = def.outputs[i];
      var outputObservable = instance[output.propName];

      if (isObservable(outputObservable)) {
        var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));
        view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);
      } else {
        throw new Error("@Output ".concat(output.propName, " not initialized in '").concat(instance.constructor.name, "'."));
      }
    }
  }

  return instance;
}

function eventHandlerClosure(view, index, eventName) {
  return function (event) {
    return dispatchEvent(view, index, eventName, event);
  };
}

function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {
  var providerData = asProviderData(view, def.nodeIndex);
  var directive = providerData.instance;
  var changed = false;
  var changes = undefined;
  var bindLen = def.bindings.length;

  if (bindLen > 0 && checkBinding(view, def, 0, v0)) {
    changed = true;
    changes = updateProp(view, providerData, def, 0, v0, changes);
  }

  if (bindLen > 1 && checkBinding(view, def, 1, v1)) {
    changed = true;
    changes = updateProp(view, providerData, def, 1, v1, changes);
  }

  if (bindLen > 2 && checkBinding(view, def, 2, v2)) {
    changed = true;
    changes = updateProp(view, providerData, def, 2, v2, changes);
  }

  if (bindLen > 3 && checkBinding(view, def, 3, v3)) {
    changed = true;
    changes = updateProp(view, providerData, def, 3, v3, changes);
  }

  if (bindLen > 4 && checkBinding(view, def, 4, v4)) {
    changed = true;
    changes = updateProp(view, providerData, def, 4, v4, changes);
  }

  if (bindLen > 5 && checkBinding(view, def, 5, v5)) {
    changed = true;
    changes = updateProp(view, providerData, def, 5, v5, changes);
  }

  if (bindLen > 6 && checkBinding(view, def, 6, v6)) {
    changed = true;
    changes = updateProp(view, providerData, def, 6, v6, changes);
  }

  if (bindLen > 7 && checkBinding(view, def, 7, v7)) {
    changed = true;
    changes = updateProp(view, providerData, def, 7, v7, changes);
  }

  if (bindLen > 8 && checkBinding(view, def, 8, v8)) {
    changed = true;
    changes = updateProp(view, providerData, def, 8, v8, changes);
  }

  if (bindLen > 9 && checkBinding(view, def, 9, v9)) {
    changed = true;
    changes = updateProp(view, providerData, def, 9, v9, changes);
  }

  if (changes) {
    directive.ngOnChanges(changes);
  }

  if (def.flags & 65536
  /* OnInit */
  && shouldCallLifecycleInitHook(view, 256
  /* InitState_CallingOnInit */
  , def.nodeIndex)) {
    directive.ngOnInit();
  }

  if (def.flags & 262144
  /* DoCheck */
  ) {
      directive.ngDoCheck();
    }

  return changed;
}

function checkAndUpdateDirectiveDynamic(view, def, values) {
  var providerData = asProviderData(view, def.nodeIndex);
  var directive = providerData.instance;
  var changed = false;
  var changes = undefined;

  for (var i = 0; i < values.length; i++) {
    if (checkBinding(view, def, i, values[i])) {
      changed = true;
      changes = updateProp(view, providerData, def, i, values[i], changes);
    }
  }

  if (changes) {
    directive.ngOnChanges(changes);
  }

  if (def.flags & 65536
  /* OnInit */
  && shouldCallLifecycleInitHook(view, 256
  /* InitState_CallingOnInit */
  , def.nodeIndex)) {
    directive.ngOnInit();
  }

  if (def.flags & 262144
  /* DoCheck */
  ) {
      directive.ngDoCheck();
    }

  return changed;
}

function _createProviderInstance$1(view, def) {
  // private services can see other private services
  var allowPrivateServices = (def.flags & 8192
  /* PrivateProvider */
  ) > 0;
  var providerDef = def.provider;

  switch (def.flags & 201347067
  /* Types */
  ) {
    case 512
    /* TypeClassProvider */
    :
      return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);

    case 1024
    /* TypeFactoryProvider */
    :
      return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);

    case 2048
    /* TypeUseExistingProvider */
    :
      return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);

    case 256
    /* TypeValueProvider */
    :
      return providerDef.value;
  }
}

function createClass(view, elDef, allowPrivateServices, ctor, deps) {
  var len = deps.length;

  switch (len) {
    case 0:
      return new ctor();

    case 1:
      return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));

    case 2:
      return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));

    case 3:
      return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));

    default:
      var depValues = [];

      for (var i = 0; i < len; i++) {
        depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));
      }

      return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_13__["default"])(ctor, depValues);
  }
}

function callFactory(view, elDef, allowPrivateServices, factory, deps) {
  var len = deps.length;

  switch (len) {
    case 0:
      return factory();

    case 1:
      return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));

    case 2:
      return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));

    case 3:
      return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));

    default:
      var depValues = [];

      for (var i = 0; i < len; i++) {
        depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));
      }

      return factory.apply(void 0, depValues);
  }
} // This default value is when checking the hierarchy for a token.
//
// It means both:
// - the token is not provided by the current injector,
// - only the element injectors should be checked (ie do not check module injectors
//
//          mod1
//         /
//       el1   mod2
//         \  /
//         el2
//
// When requesting el2.injector.get(token), we should check in the following order and return the
// first found value:
// - el2.injector.get(token, default)
// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module
// - mod2.injector.get(token, default)


var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};

function resolveDep(view, elDef, allowPrivateServices, depDef) {
  var notFoundValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Injector.THROW_IF_NOT_FOUND;

  if (depDef.flags & 8
  /* Value */
  ) {
      return depDef.token;
    }

  var startView = view;

  if (depDef.flags & 2
  /* Optional */
  ) {
      notFoundValue = null;
    }

  var tokenKey = depDef.tokenKey;

  if (tokenKey === ChangeDetectorRefTokenKey) {
    // directives on the same element as a component should be able to control the change detector
    // of that component as well.
    allowPrivateServices = !!(elDef && elDef.element.componentView);
  }

  if (elDef && depDef.flags & 1
  /* SkipSelf */
  ) {
    allowPrivateServices = false;
    elDef = elDef.parent;
  }

  var searchView = view;

  while (searchView) {
    if (elDef) {
      switch (tokenKey) {
        case Renderer2TokenKey:
          {
            var compView = findCompView(searchView, elDef, allowPrivateServices);
            return compView.renderer;
          }

        case ElementRefTokenKey:
          return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);

        case ViewContainerRefTokenKey:
          return asElementData(searchView, elDef.nodeIndex).viewContainer;

        case TemplateRefTokenKey:
          {
            if (elDef.element.template) {
              return asElementData(searchView, elDef.nodeIndex).template;
            }

            break;
          }

        case ChangeDetectorRefTokenKey:
          {
            var cdView = findCompView(searchView, elDef, allowPrivateServices);
            return createChangeDetectorRef(cdView);
          }

        case InjectorRefTokenKey$1:
        case INJECTORRefTokenKey$1:
          return createInjector$1(searchView, elDef);

        default:
          var _providerDef2 = (allowPrivateServices ? elDef.element.allProviders : elDef.element.publicProviders)[tokenKey];

          if (_providerDef2) {
            var providerData = asProviderData(searchView, _providerDef2.nodeIndex);

            if (!providerData) {
              providerData = {
                instance: _createProviderInstance$1(searchView, _providerDef2)
              };
              searchView.nodes[_providerDef2.nodeIndex] = providerData;
            }

            return providerData.instance;
          }

      }
    }

    allowPrivateServices = isComponentView(searchView);
    elDef = viewParentEl(searchView);
    searchView = searchView.parent;

    if (depDef.flags & 4
    /* Self */
    ) {
        searchView = null;
      }
  }

  var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);

  if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR || notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {
    // Return the value from the root element injector when
    // - it provides it
    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)
    // - the module injector should not be checked
    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)
    return value;
  }

  return startView.root.ngModule.injector.get(depDef.token, notFoundValue);
}

function findCompView(view, elDef, allowPrivateServices) {
  var compView;

  if (allowPrivateServices) {
    compView = asElementData(view, elDef.nodeIndex).componentView;
  } else {
    compView = view;

    while (compView.parent && !isComponentView(compView)) {
      compView = compView.parent;
    }
  }

  return compView;
}

function updateProp(view, providerData, def, bindingIdx, value, changes) {
  if (def.flags & 32768
  /* Component */
  ) {
      var compView = asElementData(view, def.parent.nodeIndex).componentView;

      if (compView.def.flags & 2
      /* OnPush */
      ) {
          compView.state |= 8
          /* ChecksEnabled */
          ;
        }
    }

  var binding = def.bindings[bindingIdx];
  var propName = binding.name; // Note: This is still safe with Closure Compiler as
  // the user passed in the property name as an object has to `providerDef`,
  // so Closure Compiler will have renamed the property correctly already.

  providerData.instance[propName] = value;

  if (def.flags & 524288
  /* OnChanges */
  ) {
      changes = changes || {};
      var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);
      var _binding = def.bindings[bindingIdx];
      changes[_binding.nonMinifiedName] = new SimpleChange(oldValue, value, (view.state & 2
      /* FirstCheck */
      ) !== 0);
    }

  view.oldValues[def.bindingIndex + bindingIdx] = value;
  return changes;
} // This function calls the ngAfterContentCheck, ngAfterContentInit,
// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node
// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are
// called during a pre-order traversal of the view tree (that is calling the
// parent hooks before the child hooks) these events are sent in using a
// post-order traversal of the tree (children before parents). This changes the
// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the
// expected nodeIndex which a ngOnInit should be called. When sending
// ngAfterContentInit and ngAfterViewInit it is the expected count of
// ngAfterContentInit or ngAfterViewInit methods that have been called. This
// ensure that despite being called recursively or after picking up after an
// exception, the ngAfterContentInit or ngAfterViewInit will be called on the
// correct nodes. Consider for example, the following (where E is an element
// and D is a directive)
//  Tree:       pre-order index  post-order index
//    E1        0                6
//      E2      1                1
//       D3     2                0
//      E4      3                5
//       E5     4                4
//        E6    5                2
//        E7    6                3
// As can be seen, the post-order index has an unclear relationship to the
// pre-order index (postOrderIndex === preOrderIndex - parentCount +
// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit
// are stable (will be the same for the same view regardless of exceptions or
// recursion) we just need to count them which will roughly correspond to the
// post-order index (it skips elements and directives that do not have
// lifecycle hooks).
//
// For example, if an exception is raised in the E6.onAfterViewInit() the
// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to
// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will
// not have their ngAfterViewInit() called but, starting with E7, the rest of
// the view will begin getting ngAfterViewInit() called until a check and
// pass is complete.
//
// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()
// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected
// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.
// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.
// When the recursion returns the initIndex will be 7 so E1 is skipped as it
// has already been called in the recursively called checkAnUpdateView().


function callLifecycleHooksChildrenFirst(view, lifecycles) {
  if (!(view.def.nodeFlags & lifecycles)) {
    return;
  }

  var nodes = view.def.nodes;
  var initIndex = 0;

  for (var i = 0; i < nodes.length; i++) {
    var nodeDef = nodes[i];
    var parent = nodeDef.parent;

    if (!parent && nodeDef.flags & lifecycles) {
      // matching root node (e.g. a pipe)
      callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);
    }

    if ((nodeDef.childFlags & lifecycles) === 0) {
      // no child matches one of the lifecycles
      i += nodeDef.childCount;
    }

    while (parent && parent.flags & 1
    /* TypeElement */
    && i === parent.nodeIndex + parent.childCount) {
      // last child of an element
      if (parent.directChildFlags & lifecycles) {
        initIndex = callElementProvidersLifecycles(view, parent, lifecycles, initIndex);
      }

      parent = parent.parent;
    }
  }
}

function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {
  for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {
    var nodeDef = view.def.nodes[i];

    if (nodeDef.flags & lifecycles) {
      callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);
    } // only visit direct children


    i += nodeDef.childCount;
  }

  return initIndex;
}

function callProviderLifecycles(view, index, lifecycles, initIndex) {
  var providerData = asProviderData(view, index);

  if (!providerData) {
    return;
  }

  var provider = providerData.instance;

  if (!provider) {
    return;
  }

  Services.setCurrentNode(view, index);

  if (lifecycles & 1048576
  /* AfterContentInit */
  && shouldCallLifecycleInitHook(view, 512
  /* InitState_CallingAfterContentInit */
  , initIndex)) {
    provider.ngAfterContentInit();
  }

  if (lifecycles & 2097152
  /* AfterContentChecked */
  ) {
      provider.ngAfterContentChecked();
    }

  if (lifecycles & 4194304
  /* AfterViewInit */
  && shouldCallLifecycleInitHook(view, 768
  /* InitState_CallingAfterViewInit */
  , initIndex)) {
    provider.ngAfterViewInit();
  }

  if (lifecycles & 8388608
  /* AfterViewChecked */
  ) {
      provider.ngAfterViewChecked();
    }

  if (lifecycles & 131072
  /* OnDestroy */
  ) {
      provider.ngOnDestroy();
    }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ComponentFactoryResolver$1 = /*#__PURE__*/function (_ComponentFactoryReso) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(ComponentFactoryResolver$1, _ComponentFactoryReso);

  var _super14 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(ComponentFactoryResolver$1);

  /**
   * @param ngModule The NgModuleRef to which all resolved factories are bound.
   */
  function ComponentFactoryResolver$1(ngModule) {
    var _this15;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ComponentFactoryResolver$1);

    _this15 = _super14.call(this);
    _this15.ngModule = ngModule;
    return _this15;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ComponentFactoryResolver$1, [{
    key: "resolveComponentFactory",
    value: function resolveComponentFactory(component) {
      ngDevMode && assertComponentType(component);
      var componentDef = getComponentDef(component);
      return new ComponentFactory$1(componentDef, this.ngModule);
    }
  }]);

  return ComponentFactoryResolver$1;
}(ComponentFactoryResolver);

function toRefArray(map) {
  var array = [];

  for (var nonMinified in map) {
    if (map.hasOwnProperty(nonMinified)) {
      var minified = map[nonMinified];
      array.push({
        propName: minified,
        templateName: nonMinified
      });
    }
  }

  return array;
}

function getNamespace$1(elementName) {
  var name = elementName.toLowerCase();
  return name === 'svg' ? SVG_NAMESPACE : name === 'math' ? MATH_ML_NAMESPACE : null;
}
/**
 * A change detection scheduler token for {@link RootContext}. This token is the default value used
 * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.
 */


var SCHEDULER = /*@__PURE__*/new InjectionToken('SCHEDULER_TOKEN', {
  providedIn: 'root',
  factory: function factory() {
    return defaultScheduler;
  }
});

function createChainedInjector(rootViewInjector, moduleInjector) {
  return {
    get: function get(token, notFoundValue, flags) {
      var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);

      if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR || notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {
        // Return the value from the root element injector when
        // - it provides it
        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)
        // - the module injector should not be checked
        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)
        return value;
      }

      return moduleInjector.get(token, notFoundValue, flags);
    }
  };
}
/**
 * Render3 implementation of {@link viewEngine_ComponentFactory}.
 */


var ComponentFactory$1 = /*#__PURE__*/function (_ComponentFactory3) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(ComponentFactory$1, _ComponentFactory3);

  var _super15 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(ComponentFactory$1);

  /**
   * @param componentDef The component definition.
   * @param ngModule The NgModuleRef to which the factory is bound.
   */
  function ComponentFactory$1(componentDef, ngModule) {
    var _this16;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ComponentFactory$1);

    _this16 = _super15.call(this);
    _this16.componentDef = componentDef;
    _this16.ngModule = ngModule;
    _this16.componentType = componentDef.type;
    _this16.selector = stringifyCSSSelectorList(componentDef.selectors);
    _this16.ngContentSelectors = componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];
    _this16.isBoundToModule = !!ngModule;
    return _this16;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ComponentFactory$1, [{
    key: "create",
    value: function create(injector, projectableNodes, rootSelectorOrNode, ngModule) {
      ngModule = ngModule || this.ngModule;
      var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;
      var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);
      var sanitizer = rootViewInjector.get(Sanitizer, null);
      var hostRenderer = rendererFactory.createRenderer(null, this.componentDef); // Determine a tag name used for creating host elements when this component is created
      // dynamically. Default to 'div' if this component did not specify any tag name in its selector.

      var elementName = this.componentDef.selectors[0][0] || 'div';
      var hostRNode = rootSelectorOrNode ? locateHostElement(hostRenderer, rootSelectorOrNode, this.componentDef.encapsulation) : createElementNode(rendererFactory.createRenderer(null, this.componentDef), elementName, getNamespace$1(elementName));
      var rootFlags = this.componentDef.onPush ? 64
      /* Dirty */
      | 512
      /* IsRoot */
      : 16
      /* CheckAlways */
      | 512
      /* IsRoot */
      ;
      var rootContext = createRootContext(); // Create the root view. Uses empty TView and ContentTemplate.

      var rootTView = createTView(0
      /* Root */
      , null, null, 1, 0, null, null, null, null, null);
      var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, hostRenderer, sanitizer, rootViewInjector); // rootView is the parent when bootstrapping
      // TODO(misko): it looks like we are entering view here but we don't really need to as
      // `renderView` does that. However as the code is written it is needed because
      // `createRootComponentView` and `createRootComponent` both read global state. Fixing those
      // issues would allow us to drop this.

      enterView(rootLView);
      var component;
      var tElementNode;

      try {
        var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, hostRenderer);

        if (hostRNode) {
          if (rootSelectorOrNode) {
            setUpAttributes(hostRenderer, hostRNode, ['ng-version', VERSION.full]);
          } else {
            // If host element is created as a part of this function call (i.e. `rootSelectorOrNode`
            // is not defined), also apply attributes and classes extracted from component selector.
            // Extract attributes and classes from the first selector only to match VE behavior.
            var _extractAttrsAndClass = extractAttrsAndClassesFromSelector(this.componentDef.selectors[0]),
                attrs = _extractAttrsAndClass.attrs,
                classes = _extractAttrsAndClass.classes;

            if (attrs) {
              setUpAttributes(hostRenderer, hostRNode, attrs);
            }

            if (classes && classes.length > 0) {
              writeDirectClass(hostRenderer, hostRNode, classes.join(' '));
            }
          }
        }

        tElementNode = getTNode(rootTView, HEADER_OFFSET);

        if (projectableNodes !== undefined) {
          var projection = tElementNode.projection = [];

          for (var i = 0; i < this.ngContentSelectors.length; i++) {
            var nodesforSlot = projectableNodes[i]; // Projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade
            // case). Here we do normalize passed data structure to be an array of arrays to avoid
            // complex checks down the line.
            // We also normalize the length of the passed in projectable nodes (to match the number of
            // <ng-container> slots defined by a component).

            projection.push(nodesforSlot != null ? Array.from(nodesforSlot) : null);
          }
        } // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and
        // executed here?
        // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref


        component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);
        renderView(rootTView, rootLView, null);
      } finally {
        leaveView();
      }

      return new ComponentRef$1(this.componentType, component, createElementRef(tElementNode, rootLView), rootLView, tElementNode);
    }
  }, {
    key: "inputs",
    get: function get() {
      return toRefArray(this.componentDef.inputs);
    }
  }, {
    key: "outputs",
    get: function get() {
      return toRefArray(this.componentDef.outputs);
    }
  }]);

  return ComponentFactory$1;
}(ComponentFactory);

var componentFactoryResolver = /*@__PURE__*/new ComponentFactoryResolver$1();
/**
 * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the
 * ComponentFactoryResolver
 * already exists, retrieves the existing ComponentFactoryResolver.
 *
 * @returns The ComponentFactoryResolver instance to use
 */

function injectComponentFactoryResolver() {
  return componentFactoryResolver;
}
/**
 * Represents an instance of a Component created via a {@link ComponentFactory}.
 *
 * `ComponentRef` provides access to the Component Instance as well other objects related to this
 * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}
 * method.
 *
 */


var ComponentRef$1 = /*#__PURE__*/function (_ComponentRef2) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(ComponentRef$1, _ComponentRef2);

  var _super16 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(ComponentRef$1);

  function ComponentRef$1(componentType, instance, location, _rootLView, _tNode) {
    var _this17;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ComponentRef$1);

    _this17 = _super16.call(this);
    _this17.location = location;
    _this17._rootLView = _rootLView;
    _this17._tNode = _tNode;
    _this17.destroyCbs = [];
    _this17.instance = instance;
    _this17.hostView = _this17.changeDetectorRef = new RootViewRef(_rootLView);
    _this17.componentType = componentType;
    return _this17;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ComponentRef$1, [{
    key: "destroy",
    value: function destroy() {
      if (this.destroyCbs) {
        this.destroyCbs.forEach(function (fn) {
          return fn();
        });
        this.destroyCbs = null;
        !this.hostView.destroyed && this.hostView.destroy();
      }
    }
  }, {
    key: "onDestroy",
    value: function onDestroy(callback) {
      if (this.destroyCbs) {
        this.destroyCbs.push(callback);
      }
    }
  }, {
    key: "injector",
    get: function get() {
      return new NodeInjector(this._tNode, this._rootLView);
    }
  }]);

  return ComponentRef$1;
}(ComponentRef);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Adds decorator, constructor, and property metadata to a given type via static metadata fields
 * on the type.
 *
 * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.
 *
 * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being
 * tree-shaken away during production builds.
 */


function setClassMetadata(type, decorators, ctorParameters, propDecorators) {
  return noSideEffects(function () {
    var clazz = type;

    if (decorators !== null) {
      if (clazz.hasOwnProperty('decorators') && clazz.decorators !== undefined) {
        var _clazz$decorators;

        (_clazz$decorators = clazz.decorators).push.apply(_clazz$decorators, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(decorators));
      } else {
        clazz.decorators = decorators;
      }
    }

    if (ctorParameters !== null) {
      // Rather than merging, clobber the existing parameters. If other projects exist which
      // use tsickle-style annotations and reflect over them in the same way, this could
      // cause issues, but that is vanishingly unlikely.
      clazz.ctorParameters = ctorParameters;
    }

    if (propDecorators !== null) {
      // The property decorator objects are merged as it is possible different fields have
      // different decorator types. Decorators on individual fields are not merged, as it's
      // also incredibly unlikely that a field will be decorated both with an Angular
      // decorator and a non-Angular decorator that's also been downleveled.
      if (clazz.hasOwnProperty('propDecorators') && clazz.propDecorators !== undefined) {
        clazz.propDecorators = Object.assign(Object.assign({}, clazz.propDecorators), propDecorators);
      } else {
        clazz.propDecorators = propDecorators;
      }
    }
  });
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Map of module-id to the corresponding NgModule.
 * - In pre Ivy we track NgModuleFactory,
 * - In post Ivy we track the NgModuleType
 */


var modules = /*@__PURE__*/new Map();
/**
 * Registers a loaded module. Should only be called from generated NgModuleFactory code.
 * @publicApi
 */

function registerModuleFactory(id, factory) {
  var existing = modules.get(id);
  assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);
  modules.set(id, factory);
}

function assertSameOrNotExisting(id, type, incoming) {
  if (type && type !== incoming) {
    throw new Error("Duplicate module registered for ".concat(id, " - ").concat(stringify(type), " vs ").concat(stringify(type.name)));
  }
}

function registerNgModuleType(ngModuleType) {
  var visited = new Set();
  recurse(ngModuleType);

  function recurse(ngModuleType) {
    // The imports array of an NgModule must refer to other NgModules,
    // so an error is thrown if no module definition is available.
    var def = getNgModuleDef(ngModuleType,
    /* throwNotFound */
    true);
    var id = def.id;

    if (id !== null) {
      var existing = modules.get(id);
      assertSameOrNotExisting(id, existing, ngModuleType);
      modules.set(id, ngModuleType);
    }

    var imports = maybeUnwrapFn(def.imports);

    var _iterator4 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_7__["default"])(imports),
        _step4;

    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var i = _step4.value;

        if (!visited.has(i)) {
          visited.add(i);
          recurse(i);
        }
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
  }
}

function clearModulesForTest() {
  modules.clear();
}

function getRegisteredNgModuleType(id) {
  return modules.get(id) || autoRegisterModuleById[id];
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NgModuleRef$1 = /*#__PURE__*/function (_NgModuleRef) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(NgModuleRef$1, _NgModuleRef);

  var _super17 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(NgModuleRef$1);

  function NgModuleRef$1(ngModuleType, _parent) {
    var _this18;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, NgModuleRef$1);

    _this18 = _super17.call(this);
    _this18._parent = _parent; // tslint:disable-next-line:require-internal-with-underscore

    _this18._bootstrapComponents = [];
    _this18.injector = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this18);
    _this18.destroyCbs = []; // When bootstrapping a module we have a dependency graph that looks like this:
    // ApplicationRef -> ComponentFactoryResolver -> NgModuleRef. The problem is that if the
    // module being resolved tries to inject the ComponentFactoryResolver, it'll create a
    // circular dependency which will result in a runtime error, because the injector doesn't
    // exist yet. We work around the issue by creating the ComponentFactoryResolver ourselves
    // and providing it, rather than letting the injector resolve it.

    _this18.componentFactoryResolver = new ComponentFactoryResolver$1(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this18));
    var ngModuleDef = getNgModuleDef(ngModuleType);
    ngDevMode && assertDefined(ngModuleDef, "NgModule '".concat(stringify(ngModuleType), "' is not a subtype of 'NgModuleType'."));
    var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);
    ngLocaleIdDef && setLocaleId(ngLocaleIdDef);
    _this18._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);
    _this18._r3Injector = createInjectorWithoutInjectorInstances(ngModuleType, _parent, [{
      provide: NgModuleRef,
      useValue: Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this18)
    }, {
      provide: ComponentFactoryResolver,
      useValue: _this18.componentFactoryResolver
    }], stringify(ngModuleType)); // We need to resolve the injector types separately from the injector creation, because
    // the module might be trying to use this ref in its contructor for DI which will cause a
    // circular error that will eventually error out, because the injector isn't created yet.

    _this18._r3Injector._resolveInjectorDefTypes();

    _this18.instance = _this18.get(ngModuleType);
    return _this18;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(NgModuleRef$1, [{
    key: "get",
    value: function get(token) {
      var notFoundValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Injector.THROW_IF_NOT_FOUND;
      var injectFlags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : InjectFlags.Default;

      if (token === Injector || token === NgModuleRef || token === INJECTOR$1) {
        return this;
      }

      return this._r3Injector.get(token, notFoundValue, injectFlags);
    }
  }, {
    key: "destroy",
    value: function destroy() {
      ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');
      var injector = this._r3Injector;
      !injector.destroyed && injector.destroy();
      this.destroyCbs.forEach(function (fn) {
        return fn();
      });
      this.destroyCbs = null;
    }
  }, {
    key: "onDestroy",
    value: function onDestroy(callback) {
      ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');
      this.destroyCbs.push(callback);
    }
  }]);

  return NgModuleRef$1;
}(NgModuleRef);

var NgModuleFactory$1 = /*#__PURE__*/function (_NgModuleFactory) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(NgModuleFactory$1, _NgModuleFactory);

  var _super18 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(NgModuleFactory$1);

  function NgModuleFactory$1(moduleType) {
    var _this19;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, NgModuleFactory$1);

    _this19 = _super18.call(this);
    _this19.moduleType = moduleType;
    var ngModuleDef = getNgModuleDef(moduleType);

    if (ngModuleDef !== null) {
      // Register the NgModule with Angular's module registry. The location (and hence timing) of
      // this call is critical to ensure this works correctly (modules get registered when expected)
      // without bloating bundles (modules are registered when otherwise not referenced).
      //
      // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has
      // several practical consequences:
      //
      // - If an .ngfactory file is not imported from, the module won't be registered (and can be
      //   tree shaken).
      // - If an .ngfactory file is imported from, the module will be registered even if an instance
      //   is not actually created (via `create` below).
      // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's
      //   imports,
      //
      // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are
      // not a required API to use - there are other ways to obtain an NgModuleFactory for a given
      // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,
      // the side effect of registration is added here, in the constructor of NgModuleFactory,
      // ensuring no matter how a factory is created, the module is registered correctly.
      //
      // An alternative would be to include the registration side effect inline following the actual
      // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules
      // will be registered and retained even if they're otherwise never referenced.
      registerNgModuleType(moduleType);
    }

    return _this19;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(NgModuleFactory$1, [{
    key: "create",
    value: function create(parentInjector) {
      return new NgModuleRef$1(this.moduleType, parentInjector);
    }
  }]);

  return NgModuleFactory$1;
}(NgModuleFactory);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Bindings for pure functions are stored after regular bindings.
 *
 * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|
 * ------------------------------------------------------------------------------------------
 * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |
 * ------------------------------------------------------------------------------------------
 *                    ^                      ^
 *      TView.bindingStartIndex      TView.expandoStartIndex
 *
 * Pure function instructions are given an offset from the binding root. Adding the offset to the
 * binding root gives the first index where the bindings are stored. In component views, the binding
 * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +
 * any directive instances + any hostVars in directives evaluated before it.
 *
 * See VIEW_DATA.md for more information about host binding resolution.
 */

/**
 * If the value hasn't been saved, calls the pure function to store and return the
 * value. If it has been saved, returns the saved value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn Function that returns a value
 * @param thisArg Optional calling context of pureFn
 * @returns value
 *
 * @codeGenApi
 */


function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {
  var bindingIndex = getBindingRoot() + slotOffset;
  var lView = getLView();
  return lView[bindingIndex] === NO_CHANGE ? updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) : getBinding(lView, bindingIndex);
}
/**
 * If the value of the provided exp has changed, calls the pure function to return
 * an updated value. Or if the value has not changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn Function that returns an updated value
 * @param exp Updated expression value
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 *
 * @codeGenApi
 */


function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {
  return pureFunction1Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp, thisArg);
}
/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 *
 * @codeGenApi
 */


function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {
  return pureFunction2Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, thisArg);
}
/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 *
 * @codeGenApi
 */


function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {
  return pureFunction3Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, exp3, thisArg);
}
/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param exp4
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 *
 * @codeGenApi
 */


function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {
  return pureFunction4Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg);
}
/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param exp4
 * @param exp5
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 *
 * @codeGenApi
 */


function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {
  var bindingIndex = getBindingRoot() + slotOffset;
  var lView = getLView();
  var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);
  return bindingUpdated(lView, bindingIndex + 4, exp5) || different ? updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) : pureFn(exp1, exp2, exp3, exp4, exp5)) : getBinding(lView, bindingIndex + 5);
}
/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param exp4
 * @param exp5
 * @param exp6
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 *
 * @codeGenApi
 */


function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {
  var bindingIndex = getBindingRoot() + slotOffset;
  var lView = getLView();
  var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);
  return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ? updateBinding(lView, bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) : pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) : getBinding(lView, bindingIndex + 6);
}
/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param exp4
 * @param exp5
 * @param exp6
 * @param exp7
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 *
 * @codeGenApi
 */


function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {
  var bindingIndex = getBindingRoot() + slotOffset;
  var lView = getLView();
  var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);
  return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ? updateBinding(lView, bindingIndex + 7, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) : pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) : getBinding(lView, bindingIndex + 7);
}
/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param exp4
 * @param exp5
 * @param exp6
 * @param exp7
 * @param exp8
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 *
 * @codeGenApi
 */


function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {
  var bindingIndex = getBindingRoot() + slotOffset;
  var lView = getLView();
  var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);
  return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ? updateBinding(lView, bindingIndex + 8, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) : pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) : getBinding(lView, bindingIndex + 8);
}
/**
 * pureFunction instruction that can support any number of bindings.
 *
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn A pure function that takes binding values and builds an object or array
 * containing those values.
 * @param exps An array of binding values
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 *
 * @codeGenApi
 */


function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {
  return pureFunctionVInternal(getLView(), getBindingRoot(), slotOffset, pureFn, exps, thisArg);
}
/**
 * Results of a pure function invocation are stored in LView in a dedicated slot that is initialized
 * to NO_CHANGE. In rare situations a pure pipe might throw an exception on the very first
 * invocation and not produce any valid results. In this case LView would keep holding the NO_CHANGE
 * value. The NO_CHANGE is not something that we can use in expressions / bindings thus we convert
 * it to `undefined`.
 */


function getPureFunctionReturnValue(lView, returnValueIndex) {
  ngDevMode && assertIndexInRange(lView, returnValueIndex);
  var lastReturnValue = lView[returnValueIndex];
  return lastReturnValue === NO_CHANGE ? undefined : lastReturnValue;
}
/**
 * If the value of the provided exp has changed, calls the pure function to return
 * an updated value. Or if the value has not changed, returns cached value.
 *
 * @param lView LView in which the function is being executed.
 * @param bindingRoot Binding root index.
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn Function that returns an updated value
 * @param exp Updated expression value
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 */


function pureFunction1Internal(lView, bindingRoot, slotOffset, pureFn, exp, thisArg) {
  var bindingIndex = bindingRoot + slotOffset;
  return bindingUpdated(lView, bindingIndex, exp) ? updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) : getPureFunctionReturnValue(lView, bindingIndex + 1);
}
/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param lView LView in which the function is being executed.
 * @param bindingRoot Binding root index.
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 */


function pureFunction2Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, thisArg) {
  var bindingIndex = bindingRoot + slotOffset;
  return bindingUpdated2(lView, bindingIndex, exp1, exp2) ? updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) : getPureFunctionReturnValue(lView, bindingIndex + 2);
}
/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param lView LView in which the function is being executed.
 * @param bindingRoot Binding root index.
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 */


function pureFunction3Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, exp3, thisArg) {
  var bindingIndex = bindingRoot + slotOffset;
  return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ? updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) : getPureFunctionReturnValue(lView, bindingIndex + 3);
}
/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param lView LView in which the function is being executed.
 * @param bindingRoot Binding root index.
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param exp4
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 *
 */


function pureFunction4Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {
  var bindingIndex = bindingRoot + slotOffset;
  return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ? updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) : getPureFunctionReturnValue(lView, bindingIndex + 4);
}
/**
 * pureFunction instruction that can support any number of bindings.
 *
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param lView LView in which the function is being executed.
 * @param bindingRoot Binding root index.
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn A pure function that takes binding values and builds an object or array
 * containing those values.
 * @param exps An array of binding values
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 */


function pureFunctionVInternal(lView, bindingRoot, slotOffset, pureFn, exps, thisArg) {
  var bindingIndex = bindingRoot + slotOffset;
  var different = false;

  for (var i = 0; i < exps.length; i++) {
    bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);
  }

  return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) : getPureFunctionReturnValue(lView, bindingIndex);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Create a pipe.
 *
 * @param index Pipe index where the pipe will be stored.
 * @param pipeName The name of the pipe
 * @returns T the instance of the pipe.
 *
 * @codeGenApi
 */


function ɵɵpipe(index, pipeName) {
  var tView = getTView();
  var pipeDef;
  var adjustedIndex = index + HEADER_OFFSET;

  if (tView.firstCreatePass) {
    pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);
    tView.data[adjustedIndex] = pipeDef;

    if (pipeDef.onDestroy) {
      (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);
    }
  } else {
    pipeDef = tView.data[adjustedIndex];
  }

  var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));
  var previousInjectImplementation = setInjectImplementation(ɵɵdirectiveInject);

  try {
    // DI for pipes is supposed to behave like directives when placed on a component
    // host node, which means that we have to disable access to `viewProviders`.
    var previousIncludeViewProviders = setIncludeViewProviders(false);
    var pipeInstance = pipeFactory();
    setIncludeViewProviders(previousIncludeViewProviders);
    store(tView, getLView(), adjustedIndex, pipeInstance);
    return pipeInstance;
  } finally {
    // we have to restore the injector implementation in finally, just in case the creation of the
    // pipe throws an error.
    setInjectImplementation(previousInjectImplementation);
  }
}
/**
 * Searches the pipe registry for a pipe with the given name. If one is found,
 * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.
 *
 * @param name Name of pipe to resolve
 * @param registry Full list of available pipes
 * @returns Matching PipeDef
 */


function getPipeDef$1(name, registry) {
  if (registry) {
    for (var i = registry.length - 1; i >= 0; i--) {
      var _pipeDef = registry[i];

      if (name === _pipeDef.name) {
        return _pipeDef;
      }
    }
  }

  throw new RuntimeError("302"
  /* PIPE_NOT_FOUND */
  , "The pipe '".concat(name, "' could not be found!"));
}
/**
 * Invokes a pipe with 1 arguments.
 *
 * This instruction acts as a guard to {@link PipeTransform#transform} invoking
 * the pipe only when an input to the pipe changes.
 *
 * @param index Pipe index where the pipe was stored on creation.
 * @param slotOffset the offset in the reserved slot space
 * @param v1 1st argument to {@link PipeTransform#transform}.
 *
 * @codeGenApi
 */


function ɵɵpipeBind1(index, slotOffset, v1) {
  var adjustedIndex = index + HEADER_OFFSET;
  var lView = getLView();
  var pipeInstance = load(lView, adjustedIndex);
  return unwrapValue$1(lView, isPure(lView, adjustedIndex) ? pureFunction1Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, pipeInstance) : pipeInstance.transform(v1));
}
/**
 * Invokes a pipe with 2 arguments.
 *
 * This instruction acts as a guard to {@link PipeTransform#transform} invoking
 * the pipe only when an input to the pipe changes.
 *
 * @param index Pipe index where the pipe was stored on creation.
 * @param slotOffset the offset in the reserved slot space
 * @param v1 1st argument to {@link PipeTransform#transform}.
 * @param v2 2nd argument to {@link PipeTransform#transform}.
 *
 * @codeGenApi
 */


function ɵɵpipeBind2(index, slotOffset, v1, v2) {
  var adjustedIndex = index + HEADER_OFFSET;
  var lView = getLView();
  var pipeInstance = load(lView, adjustedIndex);
  return unwrapValue$1(lView, isPure(lView, adjustedIndex) ? pureFunction2Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, pipeInstance) : pipeInstance.transform(v1, v2));
}
/**
 * Invokes a pipe with 3 arguments.
 *
 * This instruction acts as a guard to {@link PipeTransform#transform} invoking
 * the pipe only when an input to the pipe changes.
 *
 * @param index Pipe index where the pipe was stored on creation.
 * @param slotOffset the offset in the reserved slot space
 * @param v1 1st argument to {@link PipeTransform#transform}.
 * @param v2 2nd argument to {@link PipeTransform#transform}.
 * @param v3 4rd argument to {@link PipeTransform#transform}.
 *
 * @codeGenApi
 */


function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {
  var adjustedIndex = index + HEADER_OFFSET;
  var lView = getLView();
  var pipeInstance = load(lView, adjustedIndex);
  return unwrapValue$1(lView, isPure(lView, adjustedIndex) ? pureFunction3Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) : pipeInstance.transform(v1, v2, v3));
}
/**
 * Invokes a pipe with 4 arguments.
 *
 * This instruction acts as a guard to {@link PipeTransform#transform} invoking
 * the pipe only when an input to the pipe changes.
 *
 * @param index Pipe index where the pipe was stored on creation.
 * @param slotOffset the offset in the reserved slot space
 * @param v1 1st argument to {@link PipeTransform#transform}.
 * @param v2 2nd argument to {@link PipeTransform#transform}.
 * @param v3 3rd argument to {@link PipeTransform#transform}.
 * @param v4 4th argument to {@link PipeTransform#transform}.
 *
 * @codeGenApi
 */


function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {
  var adjustedIndex = index + HEADER_OFFSET;
  var lView = getLView();
  var pipeInstance = load(lView, adjustedIndex);
  return unwrapValue$1(lView, isPure(lView, adjustedIndex) ? pureFunction4Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) : pipeInstance.transform(v1, v2, v3, v4));
}
/**
 * Invokes a pipe with variable number of arguments.
 *
 * This instruction acts as a guard to {@link PipeTransform#transform} invoking
 * the pipe only when an input to the pipe changes.
 *
 * @param index Pipe index where the pipe was stored on creation.
 * @param slotOffset the offset in the reserved slot space
 * @param values Array of arguments to pass to {@link PipeTransform#transform} method.
 *
 * @codeGenApi
 */


function ɵɵpipeBindV(index, slotOffset, values) {
  var adjustedIndex = index + HEADER_OFFSET;
  var lView = getLView();
  var pipeInstance = load(lView, adjustedIndex);
  return unwrapValue$1(lView, isPure(lView, adjustedIndex) ? pureFunctionVInternal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, values, pipeInstance) : pipeInstance.transform.apply(pipeInstance, values));
}

function isPure(lView, index) {
  return lView[TVIEW].data[index].pure;
}
/**
 * Unwrap the output of a pipe transformation.
 * In order to trick change detection into considering that the new value is always different from
 * the old one, the old value is overwritten by NO_CHANGE.
 *
 * @param newValue the pipe transformation output.
 */


function unwrapValue$1(lView, newValue) {
  if (WrappedValue.isWrapped(newValue)) {
    newValue = WrappedValue.unwrap(newValue); // The NO_CHANGE value needs to be written at the index where the impacted binding value is
    // stored

    var bindingToInvalidateIdx = getBindingIndex();
    lView[bindingToInvalidateIdx] = NO_CHANGE;
  }

  return newValue;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var EventEmitter_ = /*#__PURE__*/function (_Subject) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(EventEmitter_, _Subject);

  var _super19 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(EventEmitter_);

  function EventEmitter_() {
    var _this20;

    var isAsync = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, EventEmitter_);

    _this20 = _super19.call(this);
    _this20.__isAsync = isAsync;
    return _this20;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(EventEmitter_, [{
    key: "emit",
    value: function emit(value) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(EventEmitter_.prototype), "next", this).call(this, value);
    }
  }, {
    key: "subscribe",
    value: function subscribe(generatorOrNext, error, complete) {
      var schedulerFn;

      var errorFn = function errorFn(err) {
        return null;
      };

      var completeFn = function completeFn() {
        return null;
      };

      if (generatorOrNext && typeof generatorOrNext === 'object') {
        schedulerFn = this.__isAsync ? function (value) {
          setTimeout(function () {
            return generatorOrNext.next(value);
          });
        } : function (value) {
          generatorOrNext.next(value);
        };

        if (generatorOrNext.error) {
          errorFn = this.__isAsync ? function (err) {
            setTimeout(function () {
              return generatorOrNext.error(err);
            });
          } : function (err) {
            generatorOrNext.error(err);
          };
        }

        if (generatorOrNext.complete) {
          completeFn = this.__isAsync ? function () {
            setTimeout(function () {
              return generatorOrNext.complete();
            });
          } : function () {
            generatorOrNext.complete();
          };
        }
      } else {
        schedulerFn = this.__isAsync ? function (value) {
          setTimeout(function () {
            return generatorOrNext(value);
          });
        } : function (value) {
          generatorOrNext(value);
        };

        if (error) {
          errorFn = this.__isAsync ? function (err) {
            setTimeout(function () {
              return error(err);
            });
          } : function (err) {
            error(err);
          };
        }

        if (complete) {
          completeFn = this.__isAsync ? function () {
            setTimeout(function () {
              return complete();
            });
          } : function () {
            complete();
          };
        }
      }

      var sink = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(EventEmitter_.prototype), "subscribe", this).call(this, schedulerFn, errorFn, completeFn);

      if (generatorOrNext instanceof rxjs__WEBPACK_IMPORTED_MODULE_14__["Subscription"]) {
        generatorOrNext.add(sink);
      }

      return sink;
    }
  }]);

  return EventEmitter_;
}(rxjs__WEBPACK_IMPORTED_MODULE_14__["Subject"]);
/**
 * @publicApi
 */


var EventEmitter = EventEmitter_;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

function symbolIterator() {
  return this._results[getSymbolIterator()]();
}
/**
 * An unmodifiable list of items that Angular keeps up to date when the state
 * of the application changes.
 *
 * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}
 * provide.
 *
 * Implements an iterable interface, therefore it can be used in both ES6
 * javascript `for (var i of items)` loops as well as in Angular templates with
 * `*ngFor="let i of myList"`.
 *
 * Changes can be observed by subscribing to the changes `Observable`.
 *
 * NOTE: In the future this class will implement an `Observable` interface.
 *
 * @usageNotes
 * ### Example
 * ```typescript
 * @Component({...})
 * class Container {
 *   @ViewChildren(Item) items:QueryList<Item>;
 * }
 * ```
 *
 * @publicApi
 */


var QueryList = /*#__PURE__*/function () {
  function QueryList() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, QueryList);

    this.dirty = true;
    this._results = [];
    this.changes = new EventEmitter();
    this.length = 0; // This function should be declared on the prototype, but doing so there will cause the class
    // declaration to have side-effects and become not tree-shakable. For this reason we do it in
    // the constructor.
    // [getSymbolIterator()](): Iterator<T> { ... }

    var symbol = getSymbolIterator();
    var proto = QueryList.prototype;
    if (!proto[symbol]) proto[symbol] = symbolIterator;
  }
  /**
   * See
   * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)
   */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(QueryList, [{
    key: "map",
    value: function map(fn) {
      return this._results.map(fn);
    }
    /**
     * See
     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)
     */

  }, {
    key: "filter",
    value: function filter(fn) {
      return this._results.filter(fn);
    }
    /**
     * See
     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)
     */

  }, {
    key: "find",
    value: function find(fn) {
      return this._results.find(fn);
    }
    /**
     * See
     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)
     */

  }, {
    key: "reduce",
    value: function reduce(fn, init) {
      return this._results.reduce(fn, init);
    }
    /**
     * See
     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)
     */

  }, {
    key: "forEach",
    value: function forEach(fn) {
      this._results.forEach(fn);
    }
    /**
     * See
     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)
     */

  }, {
    key: "some",
    value: function some(fn) {
      return this._results.some(fn);
    }
    /**
     * Returns a copy of the internal results list as an Array.
     */

  }, {
    key: "toArray",
    value: function toArray() {
      return this._results.slice();
    }
  }, {
    key: "toString",
    value: function toString() {
      return this._results.toString();
    }
    /**
     * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that
     * on change detection, it will not notify of changes to the queries, unless a new change
     * occurs.
     *
     * @param resultsTree The query results to store
     */

  }, {
    key: "reset",
    value: function reset(resultsTree) {
      this._results = flatten(resultsTree);
      this.dirty = false;
      this.length = this._results.length;
      this.last = this._results[this.length - 1];
      this.first = this._results[0];
    }
    /**
     * Triggers a change event by emitting on the `changes` {@link EventEmitter}.
     */

  }, {
    key: "notifyOnChanges",
    value: function notifyOnChanges() {
      this.changes.emit(this);
    }
    /** internal */

  }, {
    key: "setDirty",
    value: function setDirty() {
      this.dirty = true;
    }
    /** internal */

  }, {
    key: "destroy",
    value: function destroy() {
      this.changes.complete();
      this.changes.unsubscribe();
    }
  }]);

  return QueryList;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.


var unusedValueExportToPlacateAjd$7 = 1;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.

var unusedValueExportToPlacateAjd$8 = 1;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;

var LQuery_ = /*#__PURE__*/function () {
  function LQuery_(queryList) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, LQuery_);

    this.queryList = queryList;
    this.matches = null;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(LQuery_, [{
    key: "clone",
    value: function clone() {
      return new LQuery_(this.queryList);
    }
  }, {
    key: "setDirty",
    value: function setDirty() {
      this.queryList.setDirty();
    }
  }]);

  return LQuery_;
}();

var LQueries_ = /*#__PURE__*/function () {
  function LQueries_() {
    var queries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, LQueries_);

    this.queries = queries;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(LQueries_, [{
    key: "createEmbeddedView",
    value: function createEmbeddedView(tView) {
      var tQueries = tView.queries;

      if (tQueries !== null) {
        var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;
        var viewLQueries = []; // An embedded view has queries propagated from a declaration view at the beginning of the
        // TQueries collection and up until a first content query declared in the embedded view. Only
        // propagated LQueries are created at this point (LQuery corresponding to declared content
        // queries will be instantiated from the content query instructions for each directive).

        for (var i = 0; i < noOfInheritedQueries; i++) {
          var tQuery = tQueries.getByIndex(i);
          var parentLQuery = this.queries[tQuery.indexInDeclarationView];
          viewLQueries.push(parentLQuery.clone());
        }

        return new LQueries_(viewLQueries);
      }

      return null;
    }
  }, {
    key: "insertView",
    value: function insertView(tView) {
      this.dirtyQueriesWithMatches(tView);
    }
  }, {
    key: "detachView",
    value: function detachView(tView) {
      this.dirtyQueriesWithMatches(tView);
    }
  }, {
    key: "dirtyQueriesWithMatches",
    value: function dirtyQueriesWithMatches(tView) {
      for (var i = 0; i < this.queries.length; i++) {
        if (getTQuery(tView, i).matches !== null) {
          this.queries[i].setDirty();
        }
      }
    }
  }]);

  return LQueries_;
}();

var TQueryMetadata_ = function TQueryMetadata_(predicate, descendants, isStatic) {
  var read = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, TQueryMetadata_);

  this.predicate = predicate;
  this.descendants = descendants;
  this.isStatic = isStatic;
  this.read = read;
};

var TQueries_ = /*#__PURE__*/function () {
  function TQueries_() {
    var queries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, TQueries_);

    this.queries = queries;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(TQueries_, [{
    key: "elementStart",
    value: function elementStart(tView, tNode) {
      ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');

      for (var i = 0; i < this.queries.length; i++) {
        this.queries[i].elementStart(tView, tNode);
      }
    }
  }, {
    key: "elementEnd",
    value: function elementEnd(tNode) {
      for (var i = 0; i < this.queries.length; i++) {
        this.queries[i].elementEnd(tNode);
      }
    }
  }, {
    key: "embeddedTView",
    value: function embeddedTView(tNode) {
      var queriesForTemplateRef = null;

      for (var i = 0; i < this.length; i++) {
        var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;
        var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);

        if (tqueryClone) {
          tqueryClone.indexInDeclarationView = i;

          if (queriesForTemplateRef !== null) {
            queriesForTemplateRef.push(tqueryClone);
          } else {
            queriesForTemplateRef = [tqueryClone];
          }
        }
      }

      return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;
    }
  }, {
    key: "template",
    value: function template(tView, tNode) {
      ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');

      for (var i = 0; i < this.queries.length; i++) {
        this.queries[i].template(tView, tNode);
      }
    }
  }, {
    key: "getByIndex",
    value: function getByIndex(index) {
      ngDevMode && assertIndexInRange(this.queries, index);
      return this.queries[index];
    }
  }, {
    key: "track",
    value: function track(tquery) {
      this.queries.push(tquery);
    }
  }, {
    key: "length",
    get: function get() {
      return this.queries.length;
    }
  }]);

  return TQueries_;
}();

var TQuery_ = /*#__PURE__*/function () {
  function TQuery_(metadata) {
    var nodeIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, TQuery_);

    this.metadata = metadata;
    this.matches = null;
    this.indexInDeclarationView = -1;
    this.crossesNgTemplate = false;
    /**
     * A flag indicating if a given query still applies to nodes it is crossing. We use this flag
     * (alongside with _declarationNodeIndex) to know when to stop applying content queries to
     * elements in a template.
     */

    this._appliesToNextNode = true;
    this._declarationNodeIndex = nodeIndex;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(TQuery_, [{
    key: "elementStart",
    value: function elementStart(tView, tNode) {
      if (this.isApplyingToNode(tNode)) {
        this.matchTNode(tView, tNode);
      }
    }
  }, {
    key: "elementEnd",
    value: function elementEnd(tNode) {
      if (this._declarationNodeIndex === tNode.index) {
        this._appliesToNextNode = false;
      }
    }
  }, {
    key: "template",
    value: function template(tView, tNode) {
      this.elementStart(tView, tNode);
    }
  }, {
    key: "embeddedTView",
    value: function embeddedTView(tNode, childQueryIndex) {
      if (this.isApplyingToNode(tNode)) {
        this.crossesNgTemplate = true; // A marker indicating a `<ng-template>` element (a placeholder for query results from
        // embedded views created based on this `<ng-template>`).

        this.addMatch(-tNode.index, childQueryIndex);
        return new TQuery_(this.metadata);
      }

      return null;
    }
  }, {
    key: "isApplyingToNode",
    value: function isApplyingToNode(tNode) {
      if (this._appliesToNextNode && this.metadata.descendants === false) {
        var declarationNodeIdx = this._declarationNodeIndex;
        var parent = tNode.parent; // Determine if a given TNode is a "direct" child of a node on which a content query was
        // declared (only direct children of query's host node can match with the descendants: false
        // option). There are 3 main use-case / conditions to consider here:
        // - <needs-target><i #target></i></needs-target>: here <i #target> parent node is a query
        // host node;
        // - <needs-target><ng-template [ngIf]="true"><i #target></i></ng-template></needs-target>:
        // here <i #target> parent node is null;
        // - <needs-target><ng-container><i #target></i></ng-container></needs-target>: here we need
        // to go past `<ng-container>` to determine <i #target> parent node (but we shouldn't traverse
        // up past the query's host node!).

        while (parent !== null && parent.type & 8
        /* ElementContainer */
        && parent.index !== declarationNodeIdx) {
          parent = parent.parent;
        }

        return declarationNodeIdx === (parent !== null ? parent.index : -1);
      }

      return this._appliesToNextNode;
    }
  }, {
    key: "matchTNode",
    value: function matchTNode(tView, tNode) {
      var predicate = this.metadata.predicate;

      if (Array.isArray(predicate)) {
        for (var i = 0; i < predicate.length; i++) {
          var name = predicate[i];
          this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, name)); // Also try matching the name to a provider since strings can be used as DI tokens too.

          this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, name, false, false));
        }
      } else {
        if (predicate === TemplateRef) {
          if (tNode.type & 4
          /* Container */
          ) {
              this.matchTNodeWithReadOption(tView, tNode, -1);
            }
        } else {
          this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, predicate, false, false));
        }
      }
    }
  }, {
    key: "matchTNodeWithReadOption",
    value: function matchTNodeWithReadOption(tView, tNode, nodeMatchIdx) {
      if (nodeMatchIdx !== null) {
        var read = this.metadata.read;

        if (read !== null) {
          if (read === ElementRef || read === ViewContainerRef || read === TemplateRef && tNode.type & 4
          /* Container */
          ) {
            this.addMatch(tNode.index, -2);
          } else {
            var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);

            if (directiveOrProviderIdx !== null) {
              this.addMatch(tNode.index, directiveOrProviderIdx);
            }
          }
        } else {
          this.addMatch(tNode.index, nodeMatchIdx);
        }
      }
    }
  }, {
    key: "addMatch",
    value: function addMatch(tNodeIdx, matchIdx) {
      if (this.matches === null) {
        this.matches = [tNodeIdx, matchIdx];
      } else {
        this.matches.push(tNodeIdx, matchIdx);
      }
    }
  }]);

  return TQuery_;
}();
/**
 * Iterates over local names for a given node and returns directive index
 * (or -1 if a local name points to an element).
 *
 * @param tNode static data of a node to check
 * @param selector selector to match
 * @returns directive index, -1 or null if a selector didn't match any of the local names
 */


function getIdxOfMatchingSelector(tNode, selector) {
  var localNames = tNode.localNames;

  if (localNames !== null) {
    for (var i = 0; i < localNames.length; i += 2) {
      if (localNames[i] === selector) {
        return localNames[i + 1];
      }
    }
  }

  return null;
}

function createResultByTNodeType(tNode, currentView) {
  if (tNode.type & (3
  /* AnyRNode */
  | 8
  /* ElementContainer */
  )) {
    return createElementRef(tNode, currentView);
  } else if (tNode.type & 4
  /* Container */
  ) {
      return createTemplateRef(tNode, currentView);
    }

  return null;
}

function createResultForNode(lView, tNode, matchingIdx, read) {
  if (matchingIdx === -1) {
    // if read token and / or strategy is not specified, detect it using appropriate tNode type
    return createResultByTNodeType(tNode, lView);
  } else if (matchingIdx === -2) {
    // read a special token from a node injector
    return createSpecialToken(lView, tNode, read);
  } else {
    // read a token
    return getNodeInjectable(lView, lView[TVIEW], matchingIdx, tNode);
  }
}

function createSpecialToken(lView, tNode, read) {
  if (read === ElementRef) {
    return createElementRef(tNode, lView);
  } else if (read === TemplateRef) {
    return createTemplateRef(tNode, lView);
  } else if (read === ViewContainerRef) {
    ngDevMode && assertTNodeType(tNode, 3
    /* AnyRNode */
    | 12
    /* AnyContainer */
    );
    return createContainerRef(tNode, lView);
  } else {
    ngDevMode && throwError("Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got ".concat(stringify(read), "."));
  }
}
/**
 * A helper function that creates query results for a given view. This function is meant to do the
 * processing once and only once for a given view instance (a set of results for a given view
 * doesn't change).
 */


function materializeViewResults(tView, lView, tQuery, queryIndex) {
  var lQuery = lView[QUERIES].queries[queryIndex];

  if (lQuery.matches === null) {
    var tViewData = tView.data;
    var tQueryMatches = tQuery.matches;
    var result = [];

    for (var i = 0; i < tQueryMatches.length; i += 2) {
      var matchedNodeIdx = tQueryMatches[i];

      if (matchedNodeIdx < 0) {
        // we at the <ng-template> marker which might have results in views created based on this
        // <ng-template> - those results will be in separate views though, so here we just leave
        // null as a placeholder
        result.push(null);
      } else {
        ngDevMode && assertIndexInRange(tViewData, matchedNodeIdx);
        var tNode = tViewData[matchedNodeIdx];
        result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));
      }
    }

    lQuery.matches = result;
  }

  return lQuery.matches;
}
/**
 * A helper function that collects (already materialized) query results from a tree of views,
 * starting with a provided LView.
 */


function collectQueryResults(tView, lView, queryIndex, result) {
  var tQuery = tView.queries.getByIndex(queryIndex);
  var tQueryMatches = tQuery.matches;

  if (tQueryMatches !== null) {
    var lViewResults = materializeViewResults(tView, lView, tQuery, queryIndex);

    for (var i = 0; i < tQueryMatches.length; i += 2) {
      var tNodeIdx = tQueryMatches[i];

      if (tNodeIdx > 0) {
        result.push(lViewResults[i / 2]);
      } else {
        var childQueryIndex = tQueryMatches[i + 1];
        var declarationLContainer = lView[-tNodeIdx];
        ngDevMode && assertLContainer(declarationLContainer); // collect matches for views inserted in this container

        for (var _i7 = CONTAINER_HEADER_OFFSET; _i7 < declarationLContainer.length; _i7++) {
          var embeddedLView = declarationLContainer[_i7];

          if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {
            collectQueryResults(embeddedLView[TVIEW], embeddedLView, childQueryIndex, result);
          }
        } // collect matches for views created from this declaration container and inserted into
        // different containers


        if (declarationLContainer[MOVED_VIEWS] !== null) {
          var embeddedLViews = declarationLContainer[MOVED_VIEWS];

          for (var _i8 = 0; _i8 < embeddedLViews.length; _i8++) {
            var _embeddedLView = embeddedLViews[_i8];
            collectQueryResults(_embeddedLView[TVIEW], _embeddedLView, childQueryIndex, result);
          }
        }
      }
    }
  }

  return result;
}
/**
 * Refreshes a query by combining matches from all active views and removing matches from deleted
 * views.
 *
 * @returns `true` if a query got dirty during change detection or if this is a static query
 * resolving in creation mode, `false` otherwise.
 *
 * @codeGenApi
 */


function ɵɵqueryRefresh(queryList) {
  var lView = getLView();
  var tView = getTView();
  var queryIndex = getCurrentQueryIndex();
  setCurrentQueryIndex(queryIndex + 1);
  var tQuery = getTQuery(tView, queryIndex);

  if (queryList.dirty && isCreationMode(lView) === tQuery.metadata.isStatic) {
    if (tQuery.matches === null) {
      queryList.reset([]);
    } else {
      var result = tQuery.crossesNgTemplate ? collectQueryResults(tView, lView, queryIndex, []) : materializeViewResults(tView, lView, tQuery, queryIndex);
      queryList.reset(result);
      queryList.notifyOnChanges();
    }

    return true;
  }

  return false;
}
/**
 * Creates new QueryList for a static view query.
 *
 * @param predicate The type for which the query will search
 * @param descend Whether or not to descend into children
 * @param read What to save in the query
 *
 * @codeGenApi
 */


function ɵɵstaticViewQuery(predicate, descend, read) {
  viewQueryInternal(getTView(), getLView(), predicate, descend, read, true);
}
/**
 * Creates new QueryList, stores the reference in LView and returns QueryList.
 *
 * @param predicate The type for which the query will search
 * @param descend Whether or not to descend into children
 * @param read What to save in the query
 *
 * @codeGenApi
 */


function ɵɵviewQuery(predicate, descend, read) {
  viewQueryInternal(getTView(), getLView(), predicate, descend, read, false);
}

function viewQueryInternal(tView, lView, predicate, descend, read, isStatic) {
  if (tView.firstCreatePass) {
    createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);

    if (isStatic) {
      tView.staticViewQueries = true;
    }
  }

  createLQuery(tView, lView);
}
/**
 * Registers a QueryList, associated with a content query, for later refresh (part of a view
 * refresh).
 *
 * @param directiveIndex Current directive index
 * @param predicate The type for which the query will search
 * @param descend Whether or not to descend into children
 * @param read What to save in the query
 * @returns QueryList<T>
 *
 * @codeGenApi
 */


function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {
  contentQueryInternal(getTView(), getLView(), predicate, descend, read, false, getCurrentTNode(), directiveIndex);
}
/**
 * Registers a QueryList, associated with a static content query, for later refresh
 * (part of a view refresh).
 *
 * @param directiveIndex Current directive index
 * @param predicate The type for which the query will search
 * @param descend Whether or not to descend into children
 * @param read What to save in the query
 * @returns QueryList<T>
 *
 * @codeGenApi
 */


function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {
  contentQueryInternal(getTView(), getLView(), predicate, descend, read, true, getCurrentTNode(), directiveIndex);
}

function contentQueryInternal(tView, lView, predicate, descend, read, isStatic, tNode, directiveIndex) {
  if (tView.firstCreatePass) {
    createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);
    saveContentQueryAndDirectiveIndex(tView, directiveIndex);

    if (isStatic) {
      tView.staticContentQueries = true;
    }
  }

  createLQuery(tView, lView);
}
/**
 * Loads a QueryList corresponding to the current view or content query.
 *
 * @codeGenApi
 */


function ɵɵloadQuery() {
  return loadQueryInternal(getLView(), getCurrentQueryIndex());
}

function loadQueryInternal(lView, queryIndex) {
  ngDevMode && assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');
  ngDevMode && assertIndexInRange(lView[QUERIES].queries, queryIndex);
  return lView[QUERIES].queries[queryIndex].queryList;
}

function createLQuery(tView, lView) {
  var queryList = new QueryList();
  storeCleanupWithContext(tView, lView, queryList, queryList.destroy);
  if (lView[QUERIES] === null) lView[QUERIES] = new LQueries_();
  lView[QUERIES].queries.push(new LQuery_(queryList));
}

function createTQuery(tView, metadata, nodeIndex) {
  if (tView.queries === null) tView.queries = new TQueries_();
  tView.queries.track(new TQuery_(metadata, nodeIndex));
}

function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {
  var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);
  var lastSavedDirectiveIndex = tViewContentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;

  if (directiveIndex !== lastSavedDirectiveIndex) {
    tViewContentQueries.push(tView.queries.length - 1, directiveIndex);
  }
}

function getTQuery(tView, index) {
  ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');
  return tView.queries.getByIndex(index);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the
 * `<ng-template>` element.
 *
 * @codeGenApi
 */


function ɵɵtemplateRefExtractor(tNode, lView) {
  return createTemplateRef(tNode, lView);
}
/**
 * Returns the appropriate `ChangeDetectorRef` for a pipe.
 *
 * @codeGenApi
 */


function ɵɵinjectPipeChangeDetectorRef() {
  var flags = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : InjectFlags.Default;
  var value = injectChangeDetectorRef(true);

  if (value == null && !(flags & InjectFlags.Optional)) {
    throwProviderNotFoundError('ChangeDetectorRef');
  } else {
    return value;
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ɵ0$c = function ɵ0$c() {
  return {
    'ɵɵattribute': ɵɵattribute,
    'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,
    'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,
    'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,
    'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,
    'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,
    'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,
    'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,
    'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,
    'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,
    'ɵɵdefineComponent': ɵɵdefineComponent,
    'ɵɵdefineDirective': ɵɵdefineDirective,
    'ɵɵdefineInjectable': ɵɵdefineInjectable,
    'ɵɵdefineInjector': ɵɵdefineInjector,
    'ɵɵdefineNgModule': ɵɵdefineNgModule,
    'ɵɵdefinePipe': ɵɵdefinePipe,
    'ɵɵdirectiveInject': ɵɵdirectiveInject,
    'ɵɵgetFactoryOf': ɵɵgetFactoryOf,
    'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,
    'ɵɵinject': ɵɵinject,
    'ɵɵinjectAttribute': ɵɵinjectAttribute,
    'ɵɵinvalidFactory': ɵɵinvalidFactory,
    'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,
    'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,
    'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,
    'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,
    'ɵɵProvidersFeature': ɵɵProvidersFeature,
    'ɵɵCopyDefinitionFeature': ɵɵCopyDefinitionFeature,
    'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,
    'ɵɵnextContext': ɵɵnextContext,
    'ɵɵnamespaceHTML': ɵɵnamespaceHTML,
    'ɵɵnamespaceMathML': ɵɵnamespaceMathML,
    'ɵɵnamespaceSVG': ɵɵnamespaceSVG,
    'ɵɵenableBindings': ɵɵenableBindings,
    'ɵɵdisableBindings': ɵɵdisableBindings,
    'ɵɵelementStart': ɵɵelementStart,
    'ɵɵelementEnd': ɵɵelementEnd,
    'ɵɵelement': ɵɵelement,
    'ɵɵelementContainerStart': ɵɵelementContainerStart,
    'ɵɵelementContainerEnd': ɵɵelementContainerEnd,
    'ɵɵelementContainer': ɵɵelementContainer,
    'ɵɵpureFunction0': ɵɵpureFunction0,
    'ɵɵpureFunction1': ɵɵpureFunction1,
    'ɵɵpureFunction2': ɵɵpureFunction2,
    'ɵɵpureFunction3': ɵɵpureFunction3,
    'ɵɵpureFunction4': ɵɵpureFunction4,
    'ɵɵpureFunction5': ɵɵpureFunction5,
    'ɵɵpureFunction6': ɵɵpureFunction6,
    'ɵɵpureFunction7': ɵɵpureFunction7,
    'ɵɵpureFunction8': ɵɵpureFunction8,
    'ɵɵpureFunctionV': ɵɵpureFunctionV,
    'ɵɵgetCurrentView': ɵɵgetCurrentView,
    'ɵɵrestoreView': ɵɵrestoreView,
    'ɵɵlistener': ɵɵlistener,
    'ɵɵprojection': ɵɵprojection,
    'ɵɵsyntheticHostProperty': ɵɵsyntheticHostProperty,
    'ɵɵsyntheticHostListener': ɵɵsyntheticHostListener,
    'ɵɵpipeBind1': ɵɵpipeBind1,
    'ɵɵpipeBind2': ɵɵpipeBind2,
    'ɵɵpipeBind3': ɵɵpipeBind3,
    'ɵɵpipeBind4': ɵɵpipeBind4,
    'ɵɵpipeBindV': ɵɵpipeBindV,
    'ɵɵprojectionDef': ɵɵprojectionDef,
    'ɵɵhostProperty': ɵɵhostProperty,
    'ɵɵproperty': ɵɵproperty,
    'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,
    'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,
    'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,
    'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,
    'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,
    'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,
    'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,
    'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,
    'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,
    'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,
    'ɵɵpipe': ɵɵpipe,
    'ɵɵqueryRefresh': ɵɵqueryRefresh,
    'ɵɵviewQuery': ɵɵviewQuery,
    'ɵɵstaticViewQuery': ɵɵstaticViewQuery,
    'ɵɵstaticContentQuery': ɵɵstaticContentQuery,
    'ɵɵloadQuery': ɵɵloadQuery,
    'ɵɵcontentQuery': ɵɵcontentQuery,
    'ɵɵreference': ɵɵreference,
    'ɵɵclassMap': ɵɵclassMap,
    'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,
    'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,
    'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,
    'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,
    'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,
    'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,
    'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,
    'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,
    'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,
    'ɵɵstyleMap': ɵɵstyleMap,
    'ɵɵstyleMapInterpolate1': ɵɵstyleMapInterpolate1,
    'ɵɵstyleMapInterpolate2': ɵɵstyleMapInterpolate2,
    'ɵɵstyleMapInterpolate3': ɵɵstyleMapInterpolate3,
    'ɵɵstyleMapInterpolate4': ɵɵstyleMapInterpolate4,
    'ɵɵstyleMapInterpolate5': ɵɵstyleMapInterpolate5,
    'ɵɵstyleMapInterpolate6': ɵɵstyleMapInterpolate6,
    'ɵɵstyleMapInterpolate7': ɵɵstyleMapInterpolate7,
    'ɵɵstyleMapInterpolate8': ɵɵstyleMapInterpolate8,
    'ɵɵstyleMapInterpolateV': ɵɵstyleMapInterpolateV,
    'ɵɵstyleProp': ɵɵstyleProp,
    'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,
    'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,
    'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,
    'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,
    'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,
    'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,
    'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,
    'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,
    'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,
    'ɵɵclassProp': ɵɵclassProp,
    'ɵɵadvance': ɵɵadvance,
    'ɵɵtemplate': ɵɵtemplate,
    'ɵɵtext': ɵɵtext,
    'ɵɵtextInterpolate': ɵɵtextInterpolate,
    'ɵɵtextInterpolate1': ɵɵtextInterpolate1,
    'ɵɵtextInterpolate2': ɵɵtextInterpolate2,
    'ɵɵtextInterpolate3': ɵɵtextInterpolate3,
    'ɵɵtextInterpolate4': ɵɵtextInterpolate4,
    'ɵɵtextInterpolate5': ɵɵtextInterpolate5,
    'ɵɵtextInterpolate6': ɵɵtextInterpolate6,
    'ɵɵtextInterpolate7': ɵɵtextInterpolate7,
    'ɵɵtextInterpolate8': ɵɵtextInterpolate8,
    'ɵɵtextInterpolateV': ɵɵtextInterpolateV,
    'ɵɵi18n': ɵɵi18n,
    'ɵɵi18nAttributes': ɵɵi18nAttributes,
    'ɵɵi18nExp': ɵɵi18nExp,
    'ɵɵi18nStart': ɵɵi18nStart,
    'ɵɵi18nEnd': ɵɵi18nEnd,
    'ɵɵi18nApply': ɵɵi18nApply,
    'ɵɵi18nPostprocess': ɵɵi18nPostprocess,
    'ɵɵresolveWindow': ɵɵresolveWindow,
    'ɵɵresolveDocument': ɵɵresolveDocument,
    'ɵɵresolveBody': ɵɵresolveBody,
    'ɵɵsetComponentScope': ɵɵsetComponentScope,
    'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,
    'ɵɵsanitizeHtml': ɵɵsanitizeHtml,
    'ɵɵsanitizeStyle': ɵɵsanitizeStyle,
    'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,
    'ɵɵsanitizeScript': ɵɵsanitizeScript,
    'ɵɵsanitizeUrl': ɵɵsanitizeUrl,
    'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,
    'ɵɵtrustConstantHtml': ɵɵtrustConstantHtml,
    'ɵɵtrustConstantScript': ɵɵtrustConstantScript,
    'ɵɵtrustConstantResourceUrl': ɵɵtrustConstantResourceUrl
  };
};
/**
 * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.
 *
 * This should be kept up to date with the public exports of @angular/core.
 */


var angularCoreEnv = /*@__PURE__*/ɵ0$c();
var jitOptions = null;

function setJitOptions(options) {
  if (jitOptions !== null) {
    if (options.defaultEncapsulation !== jitOptions.defaultEncapsulation) {
      ngDevMode && console.error('Provided value for `defaultEncapsulation` can not be changed once it has been set.');
      return;
    }

    if (options.preserveWhitespaces !== jitOptions.preserveWhitespaces) {
      ngDevMode && console.error('Provided value for `preserveWhitespaces` can not be changed once it has been set.');
      return;
    }
  }

  jitOptions = options;
}

function getJitOptions() {
  return jitOptions;
}

function resetJitOptions() {
  jitOptions = null;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var EMPTY_ARRAY$5 = [];
var moduleQueue = [];
/**
 * Enqueues moduleDef to be checked later to see if scope can be set on its
 * component declarations.
 */

function enqueueModuleForDelayedScoping(moduleType, ngModule) {
  moduleQueue.push({
    moduleType: moduleType,
    ngModule: ngModule
  });
}

var flushingModuleQueue = false;
/**
 * Loops over queued module definitions, if a given module definition has all of its
 * declarations resolved, it dequeues that module definition and sets the scope on
 * its declarations.
 */

function flushModuleScopingQueueAsMuchAsPossible() {
  if (!flushingModuleQueue) {
    flushingModuleQueue = true;

    try {
      for (var i = moduleQueue.length - 1; i >= 0; i--) {
        var _moduleQueue$i = moduleQueue[i],
            moduleType = _moduleQueue$i.moduleType,
            ngModule = _moduleQueue$i.ngModule;

        if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {
          // dequeue
          moduleQueue.splice(i, 1);
          setScopeOnDeclaredComponents(moduleType, ngModule);
        }
      }
    } finally {
      flushingModuleQueue = false;
    }
  }
}
/**
 * Returns truthy if a declaration has resolved. If the declaration happens to be
 * an array of declarations, it will recurse to check each declaration in that array
 * (which may also be arrays).
 */


function isResolvedDeclaration(declaration) {
  if (Array.isArray(declaration)) {
    return declaration.every(isResolvedDeclaration);
  }

  return !!resolveForwardRef(declaration);
}
/**
 * Compiles a module in JIT mode.
 *
 * This function automatically gets called when a class has a `@NgModule` decorator.
 */


function compileNgModule(moduleType) {
  var ngModule = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  compileNgModuleDefs(moduleType, ngModule); // Because we don't know if all declarations have resolved yet at the moment the
  // NgModule decorator is executing, we're enqueueing the setting of module scope
  // on its declarations to be run at a later time when all declarations for the module,
  // including forward refs, have resolved.

  enqueueModuleForDelayedScoping(moduleType, ngModule);
}
/**
 * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.
 *
 * It's possible to compile a module via this API which will allow duplicate declarations in its
 * root.
 */


function compileNgModuleDefs(moduleType, ngModule) {
  var allowDuplicateDeclarationsInRoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  ngDevMode && assertDefined(moduleType, 'Required value moduleType');
  ngDevMode && assertDefined(ngModule, 'Required value ngModule');
  var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$5);
  var ngModuleDef = null;
  Object.defineProperty(moduleType, NG_MOD_DEF, {
    configurable: true,
    get: function get() {
      if (ngModuleDef === null) {
        if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {
          // We need to assert this immediately, because allowing it to continue will cause it to
          // go into an infinite loop before we've reached the point where we throw all the errors.
          throw new Error("'".concat(stringifyForError(moduleType), "' module can't import itself"));
        }

        ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, "ng:///".concat(moduleType.name, "/\u0275mod.js"), {
          type: moduleType,
          bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$5).map(resolveForwardRef),
          declarations: declarations.map(resolveForwardRef),
          imports: flatten(ngModule.imports || EMPTY_ARRAY$5).map(resolveForwardRef).map(expandModuleWithProviders),
          exports: flatten(ngModule.exports || EMPTY_ARRAY$5).map(resolveForwardRef).map(expandModuleWithProviders),
          schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,
          id: ngModule.id || null
        }); // Set `schemas` on ngModuleDef to an empty array in JIT mode to indicate that runtime
        // should verify that there are no unknown elements in a template. In AOT mode, that check
        // happens at compile time and `schemas` information is not present on Component and Module
        // defs after compilation (so the check doesn't happen the second time at runtime).

        if (!ngModuleDef.schemas) {
          ngModuleDef.schemas = [];
        }
      }

      return ngModuleDef;
    }
  });
  var ngInjectorDef = null;
  Object.defineProperty(moduleType, NG_INJ_DEF, {
    get: function get() {
      if (ngInjectorDef === null) {
        ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);
        var meta = {
          name: moduleType.name,
          type: moduleType,
          deps: reflectDependencies(moduleType),
          providers: ngModule.providers || EMPTY_ARRAY$5,
          imports: [(ngModule.imports || EMPTY_ARRAY$5).map(resolveForwardRef), (ngModule.exports || EMPTY_ARRAY$5).map(resolveForwardRef)]
        };
        ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, "ng:///".concat(moduleType.name, "/\u0275inj.js"), meta);
      }

      return ngInjectorDef;
    },
    // Make the property configurable in dev mode to allow overriding in tests
    configurable: !!ngDevMode
  });
}

function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {
  if (verifiedNgModule.get(moduleType)) return;
  verifiedNgModule.set(moduleType, true);
  moduleType = resolveForwardRef(moduleType);
  var ngModuleDef;

  if (importingModule) {
    ngModuleDef = getNgModuleDef(moduleType);

    if (!ngModuleDef) {
      throw new Error("Unexpected value '".concat(moduleType.name, "' imported by the module '").concat(importingModule.name, "'. Please add an @NgModule annotation."));
    }
  } else {
    ngModuleDef = getNgModuleDef(moduleType, true);
  }

  var errors = [];
  var declarations = maybeUnwrapFn(ngModuleDef.declarations);
  var imports = maybeUnwrapFn(ngModuleDef.imports);
  flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {
    verifySemanticsOfNgModuleImport(mod, moduleType);
    verifySemanticsOfNgModuleDef(mod, false, moduleType);
  });
  var exports = maybeUnwrapFn(ngModuleDef.exports);
  declarations.forEach(verifyDeclarationsHaveDefinitions);
  declarations.forEach(verifyDirectivesHaveSelector);
  var combinedDeclarations = [].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(declarations.map(resolveForwardRef)), Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(flatten(imports.map(computeCombinedExports)).map(resolveForwardRef)));
  exports.forEach(verifyExportsAreDeclaredOrReExported);
  declarations.forEach(function (decl) {
    return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot);
  });
  declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);
  var ngModule = getAnnotation(moduleType, 'NgModule');

  if (ngModule) {
    ngModule.imports && flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {
      verifySemanticsOfNgModuleImport(mod, moduleType);
      verifySemanticsOfNgModuleDef(mod, false, moduleType);
    });
    ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);
    ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);
    ngModule.entryComponents && deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);
  } // Throw Error if any errors were detected.


  if (errors.length) {
    throw new Error(errors.join('\n'));
  } ////////////////////////////////////////////////////////////////////////////////////////////////


  function verifyDeclarationsHaveDefinitions(type) {
    type = resolveForwardRef(type);
    var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);

    if (!def) {
      errors.push("Unexpected value '".concat(stringifyForError(type), "' declared by the module '").concat(stringifyForError(moduleType), "'. Please add a @Pipe/@Directive/@Component annotation."));
    }
  }

  function verifyDirectivesHaveSelector(type) {
    type = resolveForwardRef(type);
    var def = getDirectiveDef(type);

    if (!getComponentDef(type) && def && def.selectors.length == 0) {
      errors.push("Directive ".concat(stringifyForError(type), " has no selector, please add it!"));
    }
  }

  function verifyExportsAreDeclaredOrReExported(type) {
    type = resolveForwardRef(type);
    var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' || getPipeDef(type) && 'pipe';

    if (kind) {
      // only checked if we are declared as Component, Directive, or Pipe
      // Modules don't need to be declared or imported.
      if (combinedDeclarations.lastIndexOf(type) === -1) {
        // We are exporting something which we don't explicitly declare or import.
        errors.push("Can't export ".concat(kind, " ").concat(stringifyForError(type), " from ").concat(stringifyForError(moduleType), " as it was neither declared nor imported!"));
      }
    }
  }

  function verifyDeclarationIsUnique(type, suppressErrors) {
    type = resolveForwardRef(type);
    var existingModule = ownerNgModule.get(type);

    if (existingModule && existingModule !== moduleType) {
      if (!suppressErrors) {
        var _modules = [existingModule, moduleType].map(stringifyForError).sort();

        errors.push("Type ".concat(stringifyForError(type), " is part of the declarations of 2 modules: ").concat(_modules[0], " and ").concat(_modules[1], "! ") + "Please consider moving ".concat(stringifyForError(type), " to a higher module that imports ").concat(_modules[0], " and ").concat(_modules[1], ". ") + "You can also create a new NgModule that exports and includes ".concat(stringifyForError(type), " then import that NgModule in ").concat(_modules[0], " and ").concat(_modules[1], "."));
      }
    } else {
      // Mark type as having owner.
      ownerNgModule.set(type, moduleType);
    }
  }

  function verifyComponentIsPartOfNgModule(type) {
    type = resolveForwardRef(type);
    var existingModule = ownerNgModule.get(type);

    if (!existingModule) {
      errors.push("Component ".concat(stringifyForError(type), " is not part of any NgModule or the module has not been imported into your module."));
    }
  }

  function verifyCorrectBootstrapType(type) {
    type = resolveForwardRef(type);

    if (!getComponentDef(type)) {
      errors.push("".concat(stringifyForError(type), " cannot be used as an entry component."));
    }
  }

  function verifyComponentEntryComponentsIsPartOfNgModule(type) {
    type = resolveForwardRef(type);

    if (getComponentDef(type)) {
      // We know we are component
      var component = getAnnotation(type, 'Component');

      if (component && component.entryComponents) {
        deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);
      }
    }
  }

  function verifySemanticsOfNgModuleImport(type, importingModule) {
    type = resolveForwardRef(type);

    if (getComponentDef(type) || getDirectiveDef(type)) {
      throw new Error("Unexpected directive '".concat(type.name, "' imported by the module '").concat(importingModule.name, "'. Please add an @NgModule annotation."));
    }

    if (getPipeDef(type)) {
      throw new Error("Unexpected pipe '".concat(type.name, "' imported by the module '").concat(importingModule.name, "'. Please add an @NgModule annotation."));
    }
  }
}

function unwrapModuleWithProvidersImports(typeOrWithProviders) {
  typeOrWithProviders = resolveForwardRef(typeOrWithProviders);
  return typeOrWithProviders.ngModule || typeOrWithProviders;
}

function getAnnotation(type, name) {
  var annotation = null;
  collect(type.__annotations__);
  collect(type.decorators);
  return annotation;

  function collect(annotations) {
    if (annotations) {
      annotations.forEach(readAnnotation);
    }
  }

  function readAnnotation(decorator) {
    if (!annotation) {
      var proto = Object.getPrototypeOf(decorator);

      if (proto.ngMetadataName == name) {
        annotation = decorator;
      } else if (decorator.type) {
        var _proto = Object.getPrototypeOf(decorator.type);

        if (_proto.ngMetadataName == name) {
          annotation = decorator.args[0];
        }
      }
    }
  }
}
/**
 * Keep track of compiled components. This is needed because in tests we often want to compile the
 * same component with more than one NgModule. This would cause an error unless we reset which
 * NgModule the component belongs to. We keep the list of compiled components here so that the
 * TestBed can reset it later.
 */


var ownerNgModule = /*@__PURE__*/new Map();
var verifiedNgModule = /*@__PURE__*/new Map();

function resetCompiledComponents() {
  ownerNgModule = new Map();
  verifiedNgModule = new Map();
  moduleQueue.length = 0;
}
/**
 * Computes the combined declarations of explicit declarations, as well as declarations inherited by
 * traversing the exports of imported modules.
 * @param type
 */


function computeCombinedExports(type) {
  type = resolveForwardRef(type);
  var ngModuleDef = getNgModuleDef(type, true);
  return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {
    var ngModuleDef = getNgModuleDef(type);

    if (ngModuleDef) {
      verifySemanticsOfNgModuleDef(type, false);
      return computeCombinedExports(type);
    } else {
      return type;
    }
  })));
}
/**
 * Some declared components may be compiled asynchronously, and thus may not have their
 * ɵcmp set yet. If this is the case, then a reference to the module is written into
 * the `ngSelectorScope` property of the declared type.
 */


function setScopeOnDeclaredComponents(moduleType, ngModule) {
  var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$5);
  var transitiveScopes = transitiveScopesFor(moduleType);
  declarations.forEach(function (declaration) {
    if (declaration.hasOwnProperty(NG_COMP_DEF)) {
      // A `ɵcmp` field exists - go ahead and patch the component directly.
      var component = declaration;
      var componentDef = getComponentDef(component);
      patchComponentDefWithScope(componentDef, transitiveScopes);
    } else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {
      // Set `ngSelectorScope` for future reference when the component compilation finishes.
      declaration.ngSelectorScope = moduleType;
    }
  });
}
/**
 * Patch the definition of a component with directives and pipes from the compilation scope of
 * a given module.
 */


function patchComponentDefWithScope(componentDef, transitiveScopes) {
  componentDef.directiveDefs = function () {
    return Array.from(transitiveScopes.compilation.directives).map(function (dir) {
      return dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir);
    }).filter(function (def) {
      return !!def;
    });
  };

  componentDef.pipeDefs = function () {
    return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) {
      return getPipeDef(pipe);
    });
  };

  componentDef.schemas = transitiveScopes.schemas; // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we
  // may face a problem where previously compiled defs available to a given Component/Directive
  // are cached in TView and may become stale (in case any of these defs gets recompiled). In
  // order to avoid this problem, we force fresh TView to be created.

  componentDef.tView = null;
}
/**
 * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.
 *
 * This operation is memoized and the result is cached on the module's definition. This function can
 * be called on modules with components that have not fully compiled yet, but the result should not
 * be used until they have.
 *
 * @param moduleType module that transitive scope should be calculated for.
 */


function transitiveScopesFor(moduleType) {
  if (!isNgModule(moduleType)) {
    throw new Error("".concat(moduleType.name, " does not have a module def (\u0275mod property)"));
  }

  var def = getNgModuleDef(moduleType);

  if (def.transitiveCompileScopes !== null) {
    return def.transitiveCompileScopes;
  }

  var scopes = {
    schemas: def.schemas || null,
    compilation: {
      directives: new Set(),
      pipes: new Set()
    },
    exported: {
      directives: new Set(),
      pipes: new Set()
    }
  };
  maybeUnwrapFn(def.imports).forEach(function (imported) {
    var importedType = imported;

    if (!isNgModule(importedType)) {
      throw new Error("Importing ".concat(importedType.name, " which does not have a \u0275mod property"));
    } // When this module imports another, the imported module's exported directives and pipes are
    // added to the compilation scope of this module.


    var importedScope = transitiveScopesFor(importedType);
    importedScope.exported.directives.forEach(function (entry) {
      return scopes.compilation.directives.add(entry);
    });
    importedScope.exported.pipes.forEach(function (entry) {
      return scopes.compilation.pipes.add(entry);
    });
  });
  maybeUnwrapFn(def.declarations).forEach(function (declared) {
    var declaredWithDefs = declared;

    if (getPipeDef(declaredWithDefs)) {
      scopes.compilation.pipes.add(declared);
    } else {
      // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't
      // had its template compiled yet. In either case, it gets added to the compilation's
      // directives.
      scopes.compilation.directives.add(declared);
    }
  });
  maybeUnwrapFn(def.exports).forEach(function (exported) {
    var exportedType = exported; // Either the type is a module, a pipe, or a component/directive (which may not have a
    // ɵcmp as it might be compiled asynchronously).

    if (isNgModule(exportedType)) {
      // When this module exports another, the exported module's exported directives and pipes are
      // added to both the compilation and exported scopes of this module.
      var exportedScope = transitiveScopesFor(exportedType);
      exportedScope.exported.directives.forEach(function (entry) {
        scopes.compilation.directives.add(entry);
        scopes.exported.directives.add(entry);
      });
      exportedScope.exported.pipes.forEach(function (entry) {
        scopes.compilation.pipes.add(entry);
        scopes.exported.pipes.add(entry);
      });
    } else if (getPipeDef(exportedType)) {
      scopes.exported.pipes.add(exportedType);
    } else {
      scopes.exported.directives.add(exportedType);
    }
  });
  def.transitiveCompileScopes = scopes;
  return scopes;
}

function expandModuleWithProviders(value) {
  if (isModuleWithProviders(value)) {
    return value.ngModule;
  }

  return value;
}

function isModuleWithProviders(value) {
  return value.ngModule !== undefined;
}

function isNgModule(value) {
  return !!getNgModuleDef(value);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Keep track of the compilation depth to avoid reentrancy issues during JIT compilation. This
 * matters in the following scenario:
 *
 * Consider a component 'A' that extends component 'B', both declared in module 'M'. During
 * the compilation of 'A' the definition of 'B' is requested to capture the inheritance chain,
 * potentially triggering compilation of 'B'. If this nested compilation were to trigger
 * `flushModuleScopingQueueAsMuchAsPossible` it may happen that module 'M' is still pending in the
 * queue, resulting in 'A' and 'B' to be patched with the NgModule scope. As the compilation of
 * 'A' is still in progress, this would introduce a circular dependency on its compilation. To avoid
 * this issue, the module scope queue is only flushed for compilations at the depth 0, to ensure
 * all compilations have finished.
 */


var compilationDepth = 0;
/**
 * Compile an Angular component according to its decorator metadata, and patch the resulting
 * component def (ɵcmp) onto the component type.
 *
 * Compilation may be asynchronous (due to the need to resolve URLs for the component template or
 * other resources, for example). In the event that compilation is not immediate, `compileComponent`
 * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`
 * until the global queue has been resolved with a call to `resolveComponentResources`.
 */

function compileComponent(type, metadata) {
  // Initialize ngDevMode. This must be the first statement in compileComponent.
  // See the `initNgDevMode` docstring for more information.
  (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();
  var ngComponentDef = null; // Metadata may have resources which need to be resolved.

  maybeQueueResolutionOfComponentResources(type, metadata); // Note that we're using the same function as `Directive`, because that's only subset of metadata
  // that we need to create the ngFactoryDef. We're avoiding using the component metadata
  // because we'd have to resolve the asynchronous templates.

  addDirectiveFactoryDef(type, metadata);
  Object.defineProperty(type, NG_COMP_DEF, {
    get: function get() {
      if (ngComponentDef === null) {
        var compiler = getCompilerFacade();

        if (componentNeedsResolution(metadata)) {
          var error = ["Component '".concat(type.name, "' is not resolved:")];

          if (metadata.templateUrl) {
            error.push(" - templateUrl: ".concat(metadata.templateUrl));
          }

          if (metadata.styleUrls && metadata.styleUrls.length) {
            error.push(" - styleUrls: ".concat(JSON.stringify(metadata.styleUrls)));
          }

          error.push("Did you run and wait for 'resolveComponentResources()'?");
          throw new Error(error.join('\n'));
        } // This const was called `jitOptions` previously but had to be renamed to `options` because
        // of a bug with Terser that caused optimized JIT builds to throw a `ReferenceError`.
        // This bug was investigated in https://github.com/angular/angular-cli/issues/17264.
        // We should not rename it back until https://github.com/terser/terser/issues/615 is fixed.


        var options = getJitOptions();
        var preserveWhitespaces = metadata.preserveWhitespaces;

        if (preserveWhitespaces === undefined) {
          if (options !== null && options.preserveWhitespaces !== undefined) {
            preserveWhitespaces = options.preserveWhitespaces;
          } else {
            preserveWhitespaces = false;
          }
        }

        var encapsulation = metadata.encapsulation;

        if (encapsulation === undefined) {
          if (options !== null && options.defaultEncapsulation !== undefined) {
            encapsulation = options.defaultEncapsulation;
          } else {
            encapsulation = ViewEncapsulation$1.Emulated;
          }
        }

        var templateUrl = metadata.templateUrl || "ng:///".concat(type.name, "/template.html");
        var meta = Object.assign(Object.assign({}, directiveMetadata(type, metadata)), {
          typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl),
          template: metadata.template || '',
          preserveWhitespaces: preserveWhitespaces,
          styles: metadata.styles || EMPTY_ARRAY,
          animations: metadata.animations,
          directives: [],
          changeDetection: metadata.changeDetection,
          pipes: new Map(),
          encapsulation: encapsulation,
          interpolation: metadata.interpolation,
          viewProviders: metadata.viewProviders || null
        });
        compilationDepth++;

        try {
          if (meta.usesInheritance) {
            addDirectiveDefToUndecoratedParents(type);
          }

          ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);
        } finally {
          // Ensure that the compilation depth is decremented even when the compilation failed.
          compilationDepth--;
        }

        if (compilationDepth === 0) {
          // When NgModule decorator executed, we enqueued the module definition such that
          // it would only dequeue and add itself as module scope to all of its declarations,
          // but only if  if all of its declarations had resolved. This call runs the check
          // to see if any modules that are in the queue can be dequeued and add scope to
          // their declarations.
          flushModuleScopingQueueAsMuchAsPossible();
        } // If component compilation is async, then the @NgModule annotation which declares the
        // component may execute and set an ngSelectorScope property on the component type. This
        // allows the component to patch itself with directiveDefs from the module after it
        // finishes compiling.


        if (hasSelectorScope(type)) {
          var scopes = transitiveScopesFor(type.ngSelectorScope);
          patchComponentDefWithScope(ngComponentDef, scopes);
        }
      }

      return ngComponentDef;
    },
    // Make the property configurable in dev mode to allow overriding in tests
    configurable: !!ngDevMode
  });
}

function hasSelectorScope(component) {
  return component.ngSelectorScope !== undefined;
}
/**
 * Compile an Angular directive according to its decorator metadata, and patch the resulting
 * directive def onto the component type.
 *
 * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which
 * will resolve when compilation completes and the directive becomes usable.
 */


function compileDirective(type, directive) {
  var ngDirectiveDef = null;
  addDirectiveFactoryDef(type, directive || {});
  Object.defineProperty(type, NG_DIR_DEF, {
    get: function get() {
      if (ngDirectiveDef === null) {
        // `directive` can be null in the case of abstract directives as a base class
        // that use `@Directive()` with no selector. In that case, pass empty object to the
        // `directiveMetadata` function instead of null.
        var meta = getDirectiveMetadata(type, directive || {});
        ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);
      }

      return ngDirectiveDef;
    },
    // Make the property configurable in dev mode to allow overriding in tests
    configurable: !!ngDevMode
  });
}

function getDirectiveMetadata(type, metadata) {
  var name = type && type.name;
  var sourceMapUrl = "ng:///".concat(name, "/\u0275dir.js");
  var compiler = getCompilerFacade();
  var facade = directiveMetadata(type, metadata);
  facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);

  if (facade.usesInheritance) {
    addDirectiveDefToUndecoratedParents(type);
  }

  return {
    metadata: facade,
    sourceMapUrl: sourceMapUrl
  };
}

function addDirectiveFactoryDef(type, metadata) {
  var ngFactoryDef = null;
  Object.defineProperty(type, NG_FACTORY_DEF, {
    get: function get() {
      if (ngFactoryDef === null) {
        var meta = getDirectiveMetadata(type, metadata);
        var compiler = getCompilerFacade();
        ngFactoryDef = compiler.compileFactory(angularCoreEnv, "ng:///".concat(type.name, "/\u0275fac.js"), Object.assign(Object.assign({}, meta.metadata), {
          injectFn: 'directiveInject',
          target: compiler.R3FactoryTarget.Directive
        }));
      }

      return ngFactoryDef;
    },
    // Make the property configurable in dev mode to allow overriding in tests
    configurable: !!ngDevMode
  });
}

function extendsDirectlyFromObject(type) {
  return Object.getPrototypeOf(type.prototype) === Object.prototype;
}
/**
 * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a
 * `Component`).
 */


function directiveMetadata(type, metadata) {
  // Reflect inputs and outputs.
  var reflect = getReflect();
  var propMetadata = reflect.ownPropMetadata(type);
  return {
    name: type.name,
    type: type,
    typeArgumentCount: 0,
    selector: metadata.selector !== undefined ? metadata.selector : null,
    deps: reflectDependencies(type),
    host: metadata.host || EMPTY_OBJ,
    propMetadata: propMetadata,
    inputs: metadata.inputs || EMPTY_ARRAY,
    outputs: metadata.outputs || EMPTY_ARRAY,
    queries: extractQueriesMetadata(type, propMetadata, isContentQuery),
    lifecycle: {
      usesOnChanges: reflect.hasLifecycleHook(type, 'ngOnChanges')
    },
    typeSourceSpan: null,
    usesInheritance: !extendsDirectlyFromObject(type),
    exportAs: extractExportAs(metadata.exportAs),
    providers: metadata.providers || null,
    viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)
  };
}
/**
 * Adds a directive definition to all parent classes of a type that don't have an Angular decorator.
 */


function addDirectiveDefToUndecoratedParents(type) {
  var objPrototype = Object.prototype;
  var parent = Object.getPrototypeOf(type.prototype).constructor; // Go up the prototype until we hit `Object`.

  while (parent && parent !== objPrototype) {
    // Since inheritance works if the class was annotated already, we only need to add
    // the def if there are no annotations and the def hasn't been created already.
    if (!getDirectiveDef(parent) && !getComponentDef(parent) && shouldAddAbstractDirective(parent)) {
      compileDirective(parent, null);
    }

    parent = Object.getPrototypeOf(parent);
  }
}

function convertToR3QueryPredicate(selector) {
  return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);
}

function convertToR3QueryMetadata(propertyName, ann) {
  return {
    propertyName: propertyName,
    predicate: convertToR3QueryPredicate(ann.selector),
    descendants: ann.descendants,
    first: ann.first,
    read: ann.read ? ann.read : null,
    static: !!ann.static
  };
}

function extractQueriesMetadata(type, propMetadata, isQueryAnn) {
  var queriesMeta = [];

  var _loop2 = function _loop2(field) {
    if (propMetadata.hasOwnProperty(field)) {
      var annotations = propMetadata[field];
      annotations.forEach(function (ann) {
        if (isQueryAnn(ann)) {
          if (!ann.selector) {
            throw new Error("Can't construct a query for the property \"".concat(field, "\" of ") + "\"".concat(stringifyForError(type), "\" since the query selector wasn't defined."));
          }

          if (annotations.some(isInputAnnotation)) {
            throw new Error("Cannot combine @Input decorators with query decorators");
          }

          queriesMeta.push(convertToR3QueryMetadata(field, ann));
        }
      });
    }
  };

  for (var field in propMetadata) {
    _loop2(field);
  }

  return queriesMeta;
}

function extractExportAs(exportAs) {
  return exportAs === undefined ? null : splitByComma(exportAs);
}

function isContentQuery(value) {
  var name = value.ngMetadataName;
  return name === 'ContentChild' || name === 'ContentChildren';
}

function isViewQuery(value) {
  var name = value.ngMetadataName;
  return name === 'ViewChild' || name === 'ViewChildren';
}

function isInputAnnotation(value) {
  return value.ngMetadataName === 'Input';
}

function splitByComma(value) {
  return value.split(',').map(function (piece) {
    return piece.trim();
  });
}

var LIFECYCLE_HOOKS = ['ngOnChanges', 'ngOnInit', 'ngOnDestroy', 'ngDoCheck', 'ngAfterViewInit', 'ngAfterViewChecked', 'ngAfterContentInit', 'ngAfterContentChecked'];

function shouldAddAbstractDirective(type) {
  var reflect = getReflect();

  if (LIFECYCLE_HOOKS.some(function (hookName) {
    return reflect.hasLifecycleHook(type, hookName);
  })) {
    return true;
  }

  var propMetadata = reflect.propMetadata(type);

  for (var field in propMetadata) {
    var annotations = propMetadata[field];

    for (var i = 0; i < annotations.length; i++) {
      var current = annotations[i];
      var metadataName = current.ngMetadataName;

      if (isInputAnnotation(current) || isContentQuery(current) || isViewQuery(current) || metadataName === 'Output' || metadataName === 'HostBinding' || metadataName === 'HostListener') {
        return true;
      }
    }
  }

  return false;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function compilePipe(type, meta) {
  var ngPipeDef = null;
  var ngFactoryDef = null;
  Object.defineProperty(type, NG_FACTORY_DEF, {
    get: function get() {
      if (ngFactoryDef === null) {
        var metadata = getPipeMetadata(type, meta);
        var compiler = getCompilerFacade();
        ngFactoryDef = compiler.compileFactory(angularCoreEnv, "ng:///".concat(metadata.name, "/\u0275fac.js"), Object.assign(Object.assign({}, metadata), {
          injectFn: 'directiveInject',
          target: compiler.R3FactoryTarget.Pipe
        }));
      }

      return ngFactoryDef;
    },
    // Make the property configurable in dev mode to allow overriding in tests
    configurable: !!ngDevMode
  });
  Object.defineProperty(type, NG_PIPE_DEF, {
    get: function get() {
      if (ngPipeDef === null) {
        var metadata = getPipeMetadata(type, meta);
        ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, "ng:///".concat(metadata.name, "/\u0275pipe.js"), metadata);
      }

      return ngPipeDef;
    },
    // Make the property configurable in dev mode to allow overriding in tests
    configurable: !!ngDevMode
  });
}

function getPipeMetadata(type, meta) {
  return {
    type: type,
    typeArgumentCount: 0,
    name: type.name,
    deps: reflectDependencies(type),
    pipeName: meta.name,
    pure: meta.pure !== undefined ? meta.pure : true
  };
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ɵ0$d = function ɵ0$d() {
  var dir = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return dir;
},
    ɵ1$3 = function ɵ1$3(type, meta) {
  return SWITCH_COMPILE_DIRECTIVE(type, meta);
};
/**
 * Type of the Directive metadata.
 *
 * @publicApi
 */


var Directive = /*@__PURE__*/makeDecorator('Directive', ɵ0$d, undefined, undefined, ɵ1$3);

var ɵ2$1 = function ɵ2$1() {
  var c = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return Object.assign({
    changeDetection: ChangeDetectionStrategy.Default
  }, c);
},
    ɵ3$1 = function ɵ3$1(type, meta) {
  return SWITCH_COMPILE_COMPONENT(type, meta);
};
/**
 * Component decorator and metadata.
 *
 * @Annotation
 * @publicApi
 */


var Component = /*@__PURE__*/makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);

var ɵ4 = function ɵ4(p) {
  return Object.assign({
    pure: true
  }, p);
},
    ɵ5 = function ɵ5(type, meta) {
  return SWITCH_COMPILE_PIPE(type, meta);
};
/**
 * @Annotation
 * @publicApi
 */


var Pipe = /*@__PURE__*/makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);

var ɵ6 = function ɵ6(bindingPropertyName) {
  return {
    bindingPropertyName: bindingPropertyName
  };
};
/**
 * @Annotation
 * @publicApi
 */


var Input = /*@__PURE__*/makePropDecorator('Input', ɵ6);

var ɵ7 = function ɵ7(bindingPropertyName) {
  return {
    bindingPropertyName: bindingPropertyName
  };
};
/**
 * @Annotation
 * @publicApi
 */


var Output = /*@__PURE__*/makePropDecorator('Output', ɵ7);

var ɵ8 = function ɵ8(hostPropertyName) {
  return {
    hostPropertyName: hostPropertyName
  };
};
/**
 * @Annotation
 * @publicApi
 */


var HostBinding = /*@__PURE__*/makePropDecorator('HostBinding', ɵ8);

var ɵ9 = function ɵ9(eventName, args) {
  return {
    eventName: eventName,
    args: args
  };
};
/**
 * Decorator that binds a DOM event to a host listener and supplies configuration metadata.
 * Angular invokes the supplied handler method when the host element emits the specified event,
 * and updates the bound element with the result.
 *
 * If the handler method returns false, applies `preventDefault` on the bound element.
 *
 * @usageNotes
 *
 * The following example declares a directive
 * that attaches a click listener to a button and counts clicks.
 *
 * ```ts
 * @Directive({selector: 'button[counting]'})
 * class CountClicks {
 *   numberOfClicks = 0;
 *
 *   @HostListener('click', ['$event.target'])
 *   onClick(btn) {
 *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);
 *  }
 * }
 *
 * @Component({
 *   selector: 'app',
 *   template: '<button counting>Increment</button>',
 * })
 * class App {}
 *
 * ```
 *
 * The following example registers another DOM event handler that listens for key-press events.
 * ``` ts
 * import { HostListener, Component } from "@angular/core";
 *
 * @Component({
 *   selector: 'app',
 *   template: `<h1>Hello, you have pressed keys {{counter}} number of times!</h1> Press any key to
 * increment the counter.
 *   <button (click)="resetCounter()">Reset Counter</button>`
 * })
 * class AppComponent {
 *   counter = 0;
 *   @HostListener('window:keydown', ['$event'])
 *   handleKeyDown(event: KeyboardEvent) {
 *     this.counter++;
 *   }
 *   resetCounter() {
 *     this.counter = 0;
 *   }
 * }
 * ```
 *
 * @Annotation
 * @publicApi
 */


var HostListener = /*@__PURE__*/makePropDecorator('HostListener', ɵ9);
var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;
var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;
var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;
var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;
var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;
var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;
var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;
var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;
var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var ɵ0$e = function ɵ0$e(ngModule) {
  return ngModule;
},
    ɵ1$4 =
/**
 * Decorator that marks the following class as an NgModule, and supplies
 * configuration metadata for it.
 *
 * * The `declarations` and `entryComponents` options configure the compiler
 * with information about what belongs to the NgModule.
 * * The `providers` options configures the NgModule's injector to provide
 * dependencies the NgModule members.
 * * The `imports` and `exports` options bring in members from other modules, and make
 * this module's members available to others.
 */
function ɵ1$4(type, meta) {
  return SWITCH_COMPILE_NGMODULE(type, meta);
};
/**
 * @Annotation
 * @publicApi
 */


var NgModule = /*@__PURE__*/makeDecorator('NgModule', ɵ0$e, undefined, undefined, ɵ1$4);

function preR3NgModuleCompile(moduleType, metadata) {
  var imports = metadata && metadata.imports || [];

  if (metadata && metadata.exports) {
    imports = [].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(imports), [metadata.exports]);
  }

  moduleType.ɵinj = ɵɵdefineInjector({
    factory: convertInjectableProviderToFactory(moduleType, {
      useClass: moduleType
    }),
    providers: metadata && metadata.providers,
    imports: imports
  });
}

var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;
var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;
var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A [DI token](guide/glossary#di-token "DI token definition") that you can use to provide
 * one or more initialization functions.
 *
 * The provided functions are injected at application startup and executed during
 * app initialization. If any of these functions returns a Promise, initialization
 * does not complete until the Promise is resolved.
 *
 * You can, for example, create a factory function that loads language data
 * or an external configuration, and provide that function to the `APP_INITIALIZER` token.
 * The function is executed during the application bootstrap process,
 * and the needed data is available on startup.
 *
 * @see `ApplicationInitStatus`
 *
 * @publicApi
 */

var APP_INITIALIZER = /*@__PURE__*/new InjectionToken('Application Initializer');

var ApplicationInitStatus = /*@__PURE__*/function () {
  var ApplicationInitStatus = /*#__PURE__*/function () {
    function ApplicationInitStatus(appInits) {
      var _this21 = this;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ApplicationInitStatus);

      this.appInits = appInits;
      this.resolve = noop;
      this.reject = noop;
      this.initialized = false;
      this.done = false;
      this.donePromise = new Promise(function (res, rej) {
        _this21.resolve = res;
        _this21.reject = rej;
      });
    }
    /** @internal */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ApplicationInitStatus, [{
      key: "runInitializers",
      value: function runInitializers() {
        var _this22 = this;

        if (this.initialized) {
          return;
        }

        var asyncInitPromises = [];

        var complete = function complete() {
          _this22.done = true;

          _this22.resolve();
        };

        if (this.appInits) {
          for (var i = 0; i < this.appInits.length; i++) {
            var initResult = this.appInits[i]();

            if (isPromise(initResult)) {
              asyncInitPromises.push(initResult);
            }
          }
        }

        Promise.all(asyncInitPromises).then(function () {
          complete();
        }).catch(function (e) {
          _this22.reject(e);
        });

        if (asyncInitPromises.length === 0) {
          complete();
        }

        this.initialized = true;
      }
    }]);

    return ApplicationInitStatus;
  }();

  ApplicationInitStatus.ɵfac = function ApplicationInitStatus_Factory(t) {
    return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8));
  };

  ApplicationInitStatus.ɵprov = /*@__PURE__*/ɵɵdefineInjectable({
    token: ApplicationInitStatus,
    factory: ApplicationInitStatus.ɵfac
  });
  return ApplicationInitStatus;
}();
/*@__PURE__*/

/*@__PURE__*/


(function () {
  setClassMetadata(ApplicationInitStatus, [{
    type: Injectable
  }], function () {
    return [{
      type: Array,
      decorators: [{
        type: Inject,
        args: [APP_INITIALIZER]
      }, {
        type: Optional
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A [DI token](guide/glossary#di-token "DI token definition") representing a unique string ID, used
 * primarily for prefixing application attributes and CSS styles when
 * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.
 *
 * BY default, the value is randomly generated and assigned to the application by Angular.
 * To provide a custom ID value, use a DI provider <!-- TODO: provider --> to configure
 * the root {@link Injector} that uses this token.
 *
 * @publicApi
 */


var APP_ID = /*@__PURE__*/new InjectionToken('AppId');

function _appIdRandomProviderFactory() {
  return "".concat(_randomChar()).concat(_randomChar()).concat(_randomChar());
}
/**
 * Providers that generate a random `APP_ID_TOKEN`.
 * @publicApi
 */


var APP_ID_RANDOM_PROVIDER = {
  provide: APP_ID,
  useFactory: _appIdRandomProviderFactory,
  deps: []
};

function _randomChar() {
  return String.fromCharCode(97 + Math.floor(Math.random() * 25));
}
/**
 * A function that is executed when a platform is initialized.
 * @publicApi
 */


var PLATFORM_INITIALIZER = /*@__PURE__*/new InjectionToken('Platform Initializer');
/**
 * A token that indicates an opaque platform ID.
 * @publicApi
 */

var PLATFORM_ID = /*@__PURE__*/new InjectionToken('Platform ID');
/**
 * A [DI token](guide/glossary#di-token "DI token definition") that provides a set of callbacks to
 * be called for every component that is bootstrapped.
 *
 * Each callback must take a `ComponentRef` instance and return nothing.
 *
 * `(componentRef: ComponentRef) => void`
 *
 * @publicApi
 */

var APP_BOOTSTRAP_LISTENER = /*@__PURE__*/new InjectionToken('appBootstrapListener');
/**
 * A [DI token](guide/glossary#di-token "DI token definition") that indicates the root directory of
 * the application
 * @publicApi
 */

var PACKAGE_ROOT_URL = /*@__PURE__*/new InjectionToken('Application Packages Root URL');

var Console = /*@__PURE__*/function () {
  var Console = /*#__PURE__*/function () {
    function Console() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, Console);
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(Console, [{
      key: "log",
      value: function log(message) {
        // tslint:disable-next-line:no-console
        console.log(message);
      } // Note: for reporting errors use `DOM.logError()` as it is platform specific

    }, {
      key: "warn",
      value: function warn(message) {
        // tslint:disable-next-line:no-console
        console.warn(message);
      }
    }]);

    return Console;
  }();

  Console.ɵfac = function Console_Factory(t) {
    return new (t || Console)();
  };

  Console.ɵprov = /*@__PURE__*/ɵɵdefineInjectable({
    token: Console,
    factory: Console.ɵfac
  });
  return Console;
}();
/*@__PURE__*/

/*@__PURE__*/


(function () {
  setClassMetadata(Console, [{
    type: Injectable
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Provide this token to set the locale of your application.
 * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,
 * DecimalPipe and PercentPipe) and by ICU expressions.
 *
 * See the [i18n guide](guide/i18n#setting-up-locale) for more information.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * import { LOCALE_ID } from '@angular/core';
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { AppModule } from './app/app.module';
 *
 * platformBrowserDynamic().bootstrapModule(AppModule, {
 *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]
 * });
 * ```
 *
 * @publicApi
 */


var LOCALE_ID$1 = /*@__PURE__*/new InjectionToken('LocaleId');
/**
 * Provide this token to set the default currency code your application uses for
 * CurrencyPipe when there is no currency code passed into it. This is only used by
 * CurrencyPipe and has no relation to locale currency. Defaults to USD if not configured.
 *
 * See the [i18n guide](guide/i18n#setting-up-locale) for more information.
 *
 * <div class="alert is-helpful">
 *
 * **Deprecation notice:**
 *
 * The default currency code is currently always `USD` but this is deprecated from v9.
 *
 * **In v10 the default currency code will be taken from the current locale.**
 *
 * If you need the previous behavior then set it by creating a `DEFAULT_CURRENCY_CODE` provider in
 * your application `NgModule`:
 *
 * ```ts
 * {provide: DEFAULT_CURRENCY_CODE, useValue: 'USD'}
 * ```
 *
 * </div>
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { AppModule } from './app/app.module';
 *
 * platformBrowserDynamic().bootstrapModule(AppModule, {
 *   providers: [{provide: DEFAULT_CURRENCY_CODE, useValue: 'EUR' }]
 * });
 * ```
 *
 * @publicApi
 */

var DEFAULT_CURRENCY_CODE = /*@__PURE__*/new InjectionToken('DefaultCurrencyCode');
/**
 * Use this token at bootstrap to provide the content of your translation file (`xtb`,
 * `xlf` or `xlf2`) when you want to translate your application in another language.
 *
 * See the [i18n guide](guide/i18n#merge) for more information.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * import { TRANSLATIONS } from '@angular/core';
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { AppModule } from './app/app.module';
 *
 * // content of your translation file
 * const translations = '....';
 *
 * platformBrowserDynamic().bootstrapModule(AppModule, {
 *   providers: [{provide: TRANSLATIONS, useValue: translations }]
 * });
 * ```
 *
 * @publicApi
 */

var TRANSLATIONS = /*@__PURE__*/new InjectionToken('Translations');
/**
 * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,
 * `xlf` or `xlf2`.
 *
 * See the [i18n guide](guide/i18n#merge) for more information.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * import { TRANSLATIONS_FORMAT } from '@angular/core';
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { AppModule } from './app/app.module';
 *
 * platformBrowserDynamic().bootstrapModule(AppModule, {
 *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]
 * });
 * ```
 *
 * @publicApi
 */

var TRANSLATIONS_FORMAT = /*@__PURE__*/new InjectionToken('TranslationsFormat');
/**
 * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy
 * that the compiler should use in case of missing translations:
 * - Error: throw if you have missing translations.
 * - Warning (default): show a warning in the console and/or shell.
 * - Ignore: do nothing.
 *
 * See the [i18n guide](guide/i18n#missing-translation) for more information.
 *
 * @usageNotes
 * ### Example
 * ```typescript
 * import { MissingTranslationStrategy } from '@angular/core';
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { AppModule } from './app/app.module';
 *
 * platformBrowserDynamic().bootstrapModule(AppModule, {
 *   missingTranslation: MissingTranslationStrategy.Error
 * });
 * ```
 *
 * @publicApi
 */

var MissingTranslationStrategy = /*@__PURE__*/function (MissingTranslationStrategy) {
  MissingTranslationStrategy[MissingTranslationStrategy["Error"] = 0] = "Error";
  MissingTranslationStrategy[MissingTranslationStrategy["Warning"] = 1] = "Warning";
  MissingTranslationStrategy[MissingTranslationStrategy["Ignore"] = 2] = "Ignore";
  return MissingTranslationStrategy;
}({});
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SWITCH_IVY_ENABLED__POST_R3__ = true;
var SWITCH_IVY_ENABLED__PRE_R3__ = false;
var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Combination of NgModuleFactory and ComponentFactorys.
 *
 * @publicApi
 */

var ModuleWithComponentFactories = function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ModuleWithComponentFactories);

  this.ngModuleFactory = ngModuleFactory;
  this.componentFactories = componentFactories;
};

function _throwError() {
  throw new Error("Runtime compiler is not loaded");
}

var Compiler_compileModuleSync__PRE_R3__ = _throwError;

var Compiler_compileModuleSync__POST_R3__ = function Compiler_compileModuleSync__POST_R3__(moduleType) {
  return new NgModuleFactory$1(moduleType);
};

var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;
var Compiler_compileModuleAsync__PRE_R3__ = _throwError;

var Compiler_compileModuleAsync__POST_R3__ = function Compiler_compileModuleAsync__POST_R3__(moduleType) {
  return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));
};

var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;
var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;

var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType) {
  var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);
  var moduleDef = getNgModuleDef(moduleType);
  var componentFactories = maybeUnwrapFn(moduleDef.declarations).reduce(function (factories, declaration) {
    var componentDef = getComponentDef(declaration);
    componentDef && factories.push(new ComponentFactory$1(componentDef));
    return factories;
  }, []);
  return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);
};

var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;
var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;

var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function Compiler_compileModuleAndAllComponentsAsync__POST_R3__(moduleType) {
  return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));
};

var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;

var Compiler = /*@__PURE__*/function () {
  var Compiler = /*#__PURE__*/function () {
    function Compiler() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, Compiler);

      /**
       * Compiles the given NgModule and all of its components. All templates of the components listed
       * in `entryComponents` have to be inlined.
       */
      this.compileModuleSync = Compiler_compileModuleSync;
      /**
       * Compiles the given NgModule and all of its components
       */

      this.compileModuleAsync = Compiler_compileModuleAsync;
      /**
       * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.
       */

      this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;
      /**
       * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.
       */

      this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;
    }
    /**
     * Clears all caches.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(Compiler, [{
      key: "clearCache",
      value: function clearCache() {}
      /**
       * Clears the cache for the given component/ngModule.
       */

    }, {
      key: "clearCacheFor",
      value: function clearCacheFor(type) {}
      /**
       * Returns the id for a given NgModule, if one is defined and known to the compiler.
       */

    }, {
      key: "getModuleId",
      value: function getModuleId(moduleType) {
        return undefined;
      }
    }]);

    return Compiler;
  }();

  Compiler.ɵfac = function Compiler_Factory(t) {
    return new (t || Compiler)();
  };

  Compiler.ɵprov = /*@__PURE__*/ɵɵdefineInjectable({
    token: Compiler,
    factory: Compiler.ɵfac
  });
  return Compiler;
}();
/*@__PURE__*/

/*@__PURE__*/


(function () {
  setClassMetadata(Compiler, [{
    type: Injectable
  }], function () {
    return [];
  }, null);
})();
/**
 * Token to provide CompilerOptions in the platform injector.
 *
 * @publicApi
 */


var COMPILER_OPTIONS = /*@__PURE__*/new InjectionToken('compilerOptions');
/**
 * A factory for creating a Compiler
 *
 * @publicApi
 */

var CompilerFactory = function CompilerFactory() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, CompilerFactory);
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var promise = /*@__PURE__*/function () {
  return Promise.resolve(0);
}();

function scheduleMicroTask(fn) {
  if (typeof Zone === 'undefined') {
    // use promise to schedule microTask instead of use Zone
    promise.then(function () {
      fn && fn.apply(null, null);
    });
  } else {
    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function getNativeRequestAnimationFrame() {
  var nativeRequestAnimationFrame = _global['requestAnimationFrame'];
  var nativeCancelAnimationFrame = _global['cancelAnimationFrame'];

  if (typeof Zone !== 'undefined' && nativeRequestAnimationFrame && nativeCancelAnimationFrame) {
    // use unpatched version of requestAnimationFrame(native delegate) if possible
    // to avoid another Change detection
    var unpatchedRequestAnimationFrame = nativeRequestAnimationFrame[Zone.__symbol__('OriginalDelegate')];

    if (unpatchedRequestAnimationFrame) {
      nativeRequestAnimationFrame = unpatchedRequestAnimationFrame;
    }

    var unpatchedCancelAnimationFrame = nativeCancelAnimationFrame[Zone.__symbol__('OriginalDelegate')];

    if (unpatchedCancelAnimationFrame) {
      nativeCancelAnimationFrame = unpatchedCancelAnimationFrame;
    }
  }

  return {
    nativeRequestAnimationFrame: nativeRequestAnimationFrame,
    nativeCancelAnimationFrame: nativeCancelAnimationFrame
  };
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * An injectable service for executing work inside or outside of the Angular zone.
 *
 * The most common use of this service is to optimize performance when starting a work consisting of
 * one or more asynchronous tasks that don't require UI updates or error handling to be handled by
 * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks
 * can reenter the Angular zone via {@link #run}.
 *
 * <!-- TODO: add/fix links to:
 *   - docs explaining zones and the use of zones in Angular and change-detection
 *   - link to runOutsideAngular/run (throughout this file!)
 *   -->
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * import {Component, NgZone} from '@angular/core';
 * import {NgIf} from '@angular/common';
 *
 * @Component({
 *   selector: 'ng-zone-demo',
 *   template: `
 *     <h2>Demo: NgZone</h2>
 *
 *     <p>Progress: {{progress}}%</p>
 *     <p *ngIf="progress >= 100">Done processing {{label}} of Angular zone!</p>
 *
 *     <button (click)="processWithinAngularZone()">Process within Angular zone</button>
 *     <button (click)="processOutsideOfAngularZone()">Process outside of Angular zone</button>
 *   `,
 * })
 * export class NgZoneDemo {
 *   progress: number = 0;
 *   label: string;
 *
 *   constructor(private _ngZone: NgZone) {}
 *
 *   // Loop inside the Angular zone
 *   // so the UI DOES refresh after each setTimeout cycle
 *   processWithinAngularZone() {
 *     this.label = 'inside';
 *     this.progress = 0;
 *     this._increaseProgress(() => console.log('Inside Done!'));
 *   }
 *
 *   // Loop outside of the Angular zone
 *   // so the UI DOES NOT refresh after each setTimeout cycle
 *   processOutsideOfAngularZone() {
 *     this.label = 'outside';
 *     this.progress = 0;
 *     this._ngZone.runOutsideAngular(() => {
 *       this._increaseProgress(() => {
 *         // reenter the Angular zone and display done
 *         this._ngZone.run(() => { console.log('Outside Done!'); });
 *       });
 *     });
 *   }
 *
 *   _increaseProgress(doneCallback: () => void) {
 *     this.progress += 1;
 *     console.log(`Current progress: ${this.progress}%`);
 *
 *     if (this.progress < 100) {
 *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);
 *     } else {
 *       doneCallback();
 *     }
 *   }
 * }
 * ```
 *
 * @publicApi
 */


var NgZone = /*#__PURE__*/function () {
  function NgZone(_ref3) {
    var _ref3$enableLongStack = _ref3.enableLongStackTrace,
        enableLongStackTrace = _ref3$enableLongStack === void 0 ? false : _ref3$enableLongStack,
        _ref3$shouldCoalesceE = _ref3.shouldCoalesceEventChangeDetection,
        shouldCoalesceEventChangeDetection = _ref3$shouldCoalesceE === void 0 ? false : _ref3$shouldCoalesceE;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, NgZone);

    this.hasPendingMacrotasks = false;
    this.hasPendingMicrotasks = false;
    /**
     * Whether there are no outstanding microtasks or macrotasks.
     */

    this.isStable = true;
    /**
     * Notifies when code enters Angular Zone. This gets fired first on VM Turn.
     */

    this.onUnstable = new EventEmitter(false);
    /**
     * Notifies when there is no more microtasks enqueued in the current VM Turn.
     * This is a hint for Angular to do change detection, which may enqueue more microtasks.
     * For this reason this event can fire multiple times per VM Turn.
     */

    this.onMicrotaskEmpty = new EventEmitter(false);
    /**
     * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which
     * implies we are about to relinquish VM turn.
     * This event gets called just once.
     */

    this.onStable = new EventEmitter(false);
    /**
     * Notifies that an error has been delivered.
     */

    this.onError = new EventEmitter(false);

    if (typeof Zone == 'undefined') {
      throw new Error("In this configuration Angular requires Zone.js");
    }

    Zone.assertZonePatched();
    var self = this;
    self._nesting = 0;
    self._outer = self._inner = Zone.current;

    if (Zone['TaskTrackingZoneSpec']) {
      self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']());
    }

    if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {
      self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);
    }

    self.shouldCoalesceEventChangeDetection = shouldCoalesceEventChangeDetection;
    self.lastRequestAnimationFrameId = -1;
    self.nativeRequestAnimationFrame = getNativeRequestAnimationFrame().nativeRequestAnimationFrame;
    forkInnerZoneWithAngularBehavior(self);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(NgZone, [{
    key: "run",

    /**
     * Executes the `fn` function synchronously within the Angular zone and returns value returned by
     * the function.
     *
     * Running functions via `run` allows you to reenter Angular zone from a task that was executed
     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).
     *
     * Any future tasks or microtasks scheduled from within this function will continue executing from
     * within the Angular zone.
     *
     * If a synchronous error happens it will be rethrown and not reported via `onError`.
     */
    value: function run(fn, applyThis, applyArgs) {
      return this._inner.run(fn, applyThis, applyArgs);
    }
    /**
     * Executes the `fn` function synchronously within the Angular zone as a task and returns value
     * returned by the function.
     *
     * Running functions via `run` allows you to reenter Angular zone from a task that was executed
     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).
     *
     * Any future tasks or microtasks scheduled from within this function will continue executing from
     * within the Angular zone.
     *
     * If a synchronous error happens it will be rethrown and not reported via `onError`.
     */

  }, {
    key: "runTask",
    value: function runTask(fn, applyThis, applyArgs, name) {
      var zone = this._inner;
      var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);

      try {
        return zone.runTask(task, applyThis, applyArgs);
      } finally {
        zone.cancelTask(task);
      }
    }
    /**
     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not
     * rethrown.
     */

  }, {
    key: "runGuarded",
    value: function runGuarded(fn, applyThis, applyArgs) {
      return this._inner.runGuarded(fn, applyThis, applyArgs);
    }
    /**
     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by
     * the function.
     *
     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do
     * work that
     * doesn't trigger Angular change-detection or is subject to Angular's error handling.
     *
     * Any future tasks or microtasks scheduled from within this function will continue executing from
     * outside of the Angular zone.
     *
     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.
     */

  }, {
    key: "runOutsideAngular",
    value: function runOutsideAngular(fn) {
      return this._outer.run(fn);
    }
  }], [{
    key: "isInAngularZone",
    value: function isInAngularZone() {
      return Zone.current.get('isAngularZone') === true;
    }
  }, {
    key: "assertInAngularZone",
    value: function assertInAngularZone() {
      if (!NgZone.isInAngularZone()) {
        throw new Error('Expected to be in Angular Zone, but it is not!');
      }
    }
  }, {
    key: "assertNotInAngularZone",
    value: function assertNotInAngularZone() {
      if (NgZone.isInAngularZone()) {
        throw new Error('Expected to not be in Angular Zone, but it is!');
      }
    }
  }]);

  return NgZone;
}();

function noop$1() {}

var EMPTY_PAYLOAD = {};

function checkStable(zone) {
  if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {
    try {
      zone._nesting++;
      zone.onMicrotaskEmpty.emit(null);
    } finally {
      zone._nesting--;

      if (!zone.hasPendingMicrotasks) {
        try {
          zone.runOutsideAngular(function () {
            return zone.onStable.emit(null);
          });
        } finally {
          zone.isStable = true;
        }
      }
    }
  }
}

function delayChangeDetectionForEvents(zone) {
  if (zone.lastRequestAnimationFrameId !== -1) {
    return;
  }

  zone.lastRequestAnimationFrameId = zone.nativeRequestAnimationFrame.call(_global, function () {
    // This is a work around for https://github.com/angular/angular/issues/36839.
    // The core issue is that when event coalescing is enabled it is possible for microtasks
    // to get flushed too early (As is the case with `Promise.then`) between the
    // coalescing eventTasks.
    //
    // To workaround this we schedule a "fake" eventTask before we process the
    // coalescing eventTasks. The benefit of this is that the "fake" container eventTask
    //  will prevent the microtasks queue from getting drained in between the coalescing
    // eventTask execution.
    if (!zone.fakeTopEventTask) {
      zone.fakeTopEventTask = Zone.root.scheduleEventTask('fakeTopEventTask', function () {
        zone.lastRequestAnimationFrameId = -1;
        updateMicroTaskStatus(zone);
        checkStable(zone);
      }, undefined, function () {}, function () {});
    }

    zone.fakeTopEventTask.invoke();
  });
  updateMicroTaskStatus(zone);
}

function forkInnerZoneWithAngularBehavior(zone) {
  var delayChangeDetectionForEventsDelegate = function delayChangeDetectionForEventsDelegate() {
    delayChangeDetectionForEvents(zone);
  };

  var maybeDelayChangeDetection = !!zone.shouldCoalesceEventChangeDetection && zone.nativeRequestAnimationFrame && delayChangeDetectionForEventsDelegate;
  zone._inner = zone._inner.fork({
    name: 'angular',
    properties: {
      'isAngularZone': true,
      'maybeDelayChangeDetection': maybeDelayChangeDetection
    },
    onInvokeTask: function onInvokeTask(delegate, current, target, task, applyThis, applyArgs) {
      try {
        onEnter(zone);
        return delegate.invokeTask(target, task, applyThis, applyArgs);
      } finally {
        if (maybeDelayChangeDetection && task.type === 'eventTask') {
          maybeDelayChangeDetection();
        }

        onLeave(zone);
      }
    },
    onInvoke: function onInvoke(delegate, current, target, callback, applyThis, applyArgs, source) {
      try {
        onEnter(zone);
        return delegate.invoke(target, callback, applyThis, applyArgs, source);
      } finally {
        onLeave(zone);
      }
    },
    onHasTask: function onHasTask(delegate, current, target, hasTaskState) {
      delegate.hasTask(target, hasTaskState);

      if (current === target) {
        // We are only interested in hasTask events which originate from our zone
        // (A child hasTask event is not interesting to us)
        if (hasTaskState.change == 'microTask') {
          zone._hasPendingMicrotasks = hasTaskState.microTask;
          updateMicroTaskStatus(zone);
          checkStable(zone);
        } else if (hasTaskState.change == 'macroTask') {
          zone.hasPendingMacrotasks = hasTaskState.macroTask;
        }
      }
    },
    onHandleError: function onHandleError(delegate, current, target, error) {
      delegate.handleError(target, error);
      zone.runOutsideAngular(function () {
        return zone.onError.emit(error);
      });
      return false;
    }
  });
}

function updateMicroTaskStatus(zone) {
  if (zone._hasPendingMicrotasks || zone.shouldCoalesceEventChangeDetection && zone.lastRequestAnimationFrameId !== -1) {
    zone.hasPendingMicrotasks = true;
  } else {
    zone.hasPendingMicrotasks = false;
  }
}

function onEnter(zone) {
  zone._nesting++;

  if (zone.isStable) {
    zone.isStable = false;
    zone.onUnstable.emit(null);
  }
}

function onLeave(zone) {
  zone._nesting--;
  checkStable(zone);
}
/**
 * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls
 * to framework to perform rendering.
 */


var NoopNgZone = /*#__PURE__*/function () {
  function NoopNgZone() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, NoopNgZone);

    this.hasPendingMicrotasks = false;
    this.hasPendingMacrotasks = false;
    this.isStable = true;
    this.onUnstable = new EventEmitter();
    this.onMicrotaskEmpty = new EventEmitter();
    this.onStable = new EventEmitter();
    this.onError = new EventEmitter();
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(NoopNgZone, [{
    key: "run",
    value: function run(fn, applyThis, applyArgs) {
      return fn.apply(applyThis, applyArgs);
    }
  }, {
    key: "runGuarded",
    value: function runGuarded(fn, applyThis, applyArgs) {
      return fn.apply(applyThis, applyArgs);
    }
  }, {
    key: "runOutsideAngular",
    value: function runOutsideAngular(fn) {
      return fn();
    }
  }, {
    key: "runTask",
    value: function runTask(fn, applyThis, applyArgs, name) {
      return fn.apply(applyThis, applyArgs);
    }
  }]);

  return NoopNgZone;
}();

var Testability = /*@__PURE__*/function () {
  var Testability = /*#__PURE__*/function () {
    function Testability(_ngZone) {
      var _this23 = this;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, Testability);

      this._ngZone = _ngZone;
      this._pendingCount = 0;
      this._isZoneStable = true;
      /**
       * Whether any work was done since the last 'whenStable' callback. This is
       * useful to detect if this could have potentially destabilized another
       * component while it is stabilizing.
       * @internal
       */

      this._didWork = false;
      this._callbacks = [];
      this.taskTrackingZone = null;

      this._watchAngularEvents();

      _ngZone.run(function () {
        _this23.taskTrackingZone = typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');
      });
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(Testability, [{
      key: "_watchAngularEvents",
      value: function _watchAngularEvents() {
        var _this24 = this;

        this._ngZone.onUnstable.subscribe({
          next: function next() {
            _this24._didWork = true;
            _this24._isZoneStable = false;
          }
        });

        this._ngZone.runOutsideAngular(function () {
          _this24._ngZone.onStable.subscribe({
            next: function next() {
              NgZone.assertNotInAngularZone();
              scheduleMicroTask(function () {
                _this24._isZoneStable = true;

                _this24._runCallbacksIfReady();
              });
            }
          });
        });
      }
      /**
       * Increases the number of pending request
       * @deprecated pending requests are now tracked with zones.
       */

    }, {
      key: "increasePendingRequestCount",
      value: function increasePendingRequestCount() {
        this._pendingCount += 1;
        this._didWork = true;
        return this._pendingCount;
      }
      /**
       * Decreases the number of pending request
       * @deprecated pending requests are now tracked with zones
       */

    }, {
      key: "decreasePendingRequestCount",
      value: function decreasePendingRequestCount() {
        this._pendingCount -= 1;

        if (this._pendingCount < 0) {
          throw new Error('pending async requests below zero');
        }

        this._runCallbacksIfReady();

        return this._pendingCount;
      }
      /**
       * Whether an associated application is stable
       */

    }, {
      key: "isStable",
      value: function isStable() {
        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;
      }
    }, {
      key: "_runCallbacksIfReady",
      value: function _runCallbacksIfReady() {
        var _this25 = this;

        if (this.isStable()) {
          // Schedules the call backs in a new frame so that it is always async.
          scheduleMicroTask(function () {
            while (_this25._callbacks.length !== 0) {
              var cb = _this25._callbacks.pop();

              clearTimeout(cb.timeoutId);
              cb.doneCb(_this25._didWork);
            }

            _this25._didWork = false;
          });
        } else {
          // Still not stable, send updates.
          var pending = this.getPendingTasks();
          this._callbacks = this._callbacks.filter(function (cb) {
            if (cb.updateCb && cb.updateCb(pending)) {
              clearTimeout(cb.timeoutId);
              return false;
            }

            return true;
          });
          this._didWork = true;
        }
      }
    }, {
      key: "getPendingTasks",
      value: function getPendingTasks() {
        if (!this.taskTrackingZone) {
          return [];
        } // Copy the tasks data so that we don't leak tasks.


        return this.taskTrackingZone.macroTasks.map(function (t) {
          return {
            source: t.source,
            // From TaskTrackingZone:
            // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40
            creationLocation: t.creationLocation,
            data: t.data
          };
        });
      }
    }, {
      key: "addCallback",
      value: function addCallback(cb, timeout, updateCb) {
        var _this26 = this;

        var timeoutId = -1;

        if (timeout && timeout > 0) {
          timeoutId = setTimeout(function () {
            _this26._callbacks = _this26._callbacks.filter(function (cb) {
              return cb.timeoutId !== timeoutId;
            });
            cb(_this26._didWork, _this26.getPendingTasks());
          }, timeout);
        }

        this._callbacks.push({
          doneCb: cb,
          timeoutId: timeoutId,
          updateCb: updateCb
        });
      }
      /**
       * Wait for the application to be stable with a timeout. If the timeout is reached before that
       * happens, the callback receives a list of the macro tasks that were pending, otherwise null.
       *
       * @param doneCb The callback to invoke when Angular is stable or the timeout expires
       *    whichever comes first.
       * @param timeout Optional. The maximum time to wait for Angular to become stable. If not
       *    specified, whenStable() will wait forever.
       * @param updateCb Optional. If specified, this callback will be invoked whenever the set of
       *    pending macrotasks changes. If this callback returns true doneCb will not be invoked
       *    and no further updates will be issued.
       */

    }, {
      key: "whenStable",
      value: function whenStable(doneCb, timeout, updateCb) {
        if (updateCb && !this.taskTrackingZone) {
          throw new Error('Task tracking zone is required when passing an update callback to ' + 'whenStable(). Is "zone.js/dist/task-tracking.js" loaded?');
        } // These arguments are 'Function' above to keep the public API simple.


        this.addCallback(doneCb, timeout, updateCb);

        this._runCallbacksIfReady();
      }
      /**
       * Get the number of pending requests
       * @deprecated pending requests are now tracked with zones
       */

    }, {
      key: "getPendingRequestCount",
      value: function getPendingRequestCount() {
        return this._pendingCount;
      }
      /**
       * Find providers by name
       * @param using The root element to search from
       * @param provider The name of binding variable
       * @param exactMatch Whether using exactMatch
       */

    }, {
      key: "findProviders",
      value: function findProviders(using, provider, exactMatch) {
        // TODO(juliemr): implement.
        return [];
      }
    }]);

    return Testability;
  }();

  Testability.ɵfac = function Testability_Factory(t) {
    return new (t || Testability)(ɵɵinject(NgZone));
  };

  Testability.ɵprov = /*@__PURE__*/ɵɵdefineInjectable({
    token: Testability,
    factory: Testability.ɵfac
  });
  return Testability;
}();
/*@__PURE__*/

/*@__PURE__*/


(function () {
  setClassMetadata(Testability, [{
    type: Injectable
  }], function () {
    return [{
      type: NgZone
    }];
  }, null);
})();

var TestabilityRegistry = /*@__PURE__*/function () {
  var TestabilityRegistry = /*#__PURE__*/function () {
    function TestabilityRegistry() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, TestabilityRegistry);

      /** @internal */
      this._applications = new Map();

      _testabilityGetter.addToWindow(this);
    }
    /**
     * Registers an application with a testability hook so that it can be tracked
     * @param token token of application, root element
     * @param testability Testability hook
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(TestabilityRegistry, [{
      key: "registerApplication",
      value: function registerApplication(token, testability) {
        this._applications.set(token, testability);
      }
      /**
       * Unregisters an application.
       * @param token token of application, root element
       */

    }, {
      key: "unregisterApplication",
      value: function unregisterApplication(token) {
        this._applications.delete(token);
      }
      /**
       * Unregisters all applications
       */

    }, {
      key: "unregisterAllApplications",
      value: function unregisterAllApplications() {
        this._applications.clear();
      }
      /**
       * Get a testability hook associated with the application
       * @param elem root element
       */

    }, {
      key: "getTestability",
      value: function getTestability(elem) {
        return this._applications.get(elem) || null;
      }
      /**
       * Get all registered testabilities
       */

    }, {
      key: "getAllTestabilities",
      value: function getAllTestabilities() {
        return Array.from(this._applications.values());
      }
      /**
       * Get all registered applications(root elements)
       */

    }, {
      key: "getAllRootElements",
      value: function getAllRootElements() {
        return Array.from(this._applications.keys());
      }
      /**
       * Find testability of a node in the Tree
       * @param elem node
       * @param findInAncestors whether finding testability in ancestors if testability was not found in
       * current node
       */

    }, {
      key: "findTestabilityInTree",
      value: function findTestabilityInTree(elem) {
        var findInAncestors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);
      }
    }]);

    return TestabilityRegistry;
  }();

  TestabilityRegistry.ɵfac = function TestabilityRegistry_Factory(t) {
    return new (t || TestabilityRegistry)();
  };

  TestabilityRegistry.ɵprov = /*@__PURE__*/ɵɵdefineInjectable({
    token: TestabilityRegistry,
    factory: TestabilityRegistry.ɵfac
  });
  return TestabilityRegistry;
}();
/*@__PURE__*/

/*@__PURE__*/


(function () {
  setClassMetadata(TestabilityRegistry, [{
    type: Injectable
  }], function () {
    return [];
  }, null);
})();

var _NoopGetTestability = /*#__PURE__*/function () {
  function _NoopGetTestability() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, _NoopGetTestability);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(_NoopGetTestability, [{
    key: "addToWindow",
    value: function addToWindow(registry) {}
  }, {
    key: "findTestabilityInTree",
    value: function findTestabilityInTree(registry, elem, findInAncestors) {
      return null;
    }
  }]);

  return _NoopGetTestability;
}();
/**
 * Set the {@link GetTestability} implementation used by the Angular testing framework.
 * @publicApi
 */


function setTestabilityGetter(getter) {
  _testabilityGetter = getter;
}

var _testabilityGetter = /*@__PURE__*/new _NoopGetTestability();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var _platform;

var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;

function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {
  var compilerFactory = injector.get(CompilerFactory);
  var compiler = compilerFactory.createCompiler([options]);
  return compiler.compileModuleAsync(moduleType);
}

function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {
  ngDevMode && assertNgModuleType(moduleType);
  var moduleFactory = new NgModuleFactory$1(moduleType); // All of the logic below is irrelevant for AOT-compiled code.

  if (typeof ngJitMode !== 'undefined' && !ngJitMode) {
    return Promise.resolve(moduleFactory);
  }

  var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options); // Configure the compiler to use the provided options. This call may fail when multiple modules
  // are bootstrapped with incompatible options, as a component can only be compiled according to
  // a single set of options.

  setJitOptions({
    defaultEncapsulation: _lastDefined(compilerOptions.map(function (opts) {
      return opts.defaultEncapsulation;
    })),
    preserveWhitespaces: _lastDefined(compilerOptions.map(function (opts) {
      return opts.preserveWhitespaces;
    }))
  });

  if (isComponentResourceResolutionQueueEmpty()) {
    return Promise.resolve(moduleFactory);
  }

  var compilerProviders = _mergeArrays(compilerOptions.map(function (o) {
    return o.providers;
  })); // In case there are no compiler providers, we just return the module factory as
  // there won't be any resource loader. This can happen with Ivy, because AOT compiled
  // modules can be still passed through "bootstrapModule". In that case we shouldn't
  // unnecessarily require the JIT compiler.


  if (compilerProviders.length === 0) {
    return Promise.resolve(moduleFactory);
  }

  var compiler = getCompilerFacade();
  var compilerInjector = Injector.create({
    providers: compilerProviders
  });
  var resourceLoader = compilerInjector.get(compiler.ResourceLoader); // The resource loader can also return a string while the "resolveComponentResources"
  // always expects a promise. Therefore we need to wrap the returned value in a promise.

  return resolveComponentResources(function (url) {
    return Promise.resolve(resourceLoader.get(url));
  }).then(function () {
    return moduleFactory;
  });
} // the `window.ng` global utilities are only available in non-VE versions of
// Angular. The function switch below will make sure that the code is not
// included into Angular when PRE mode is active.


function publishDefaultGlobalUtils__PRE_R3__() {}

function publishDefaultGlobalUtils__POST_R3__() {
  ngDevMode && publishDefaultGlobalUtils();
}

var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__POST_R3__;
var isBoundToModule = isBoundToModule__POST_R3__;

function isBoundToModule__PRE_R3__(cf) {
  return cf instanceof ComponentFactoryBoundToModule;
}

function isBoundToModule__POST_R3__(cf) {
  return cf.isBoundToModule;
}

var ALLOW_MULTIPLE_PLATFORMS = /*@__PURE__*/new InjectionToken('AllowMultipleToken');
/**
 * A token for third-party components that can register themselves with NgProbe.
 *
 * @publicApi
 */

var NgProbeToken = function NgProbeToken(name, token) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, NgProbeToken);

  this.name = name;
  this.token = token;
};
/**
 * Creates a platform.
 * Platforms must be created on launch using this function.
 *
 * @publicApi
 */


function createPlatform(injector) {
  if (_platform && !_platform.destroyed && !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {
    throw new Error('There can be only one platform. Destroy the previous one to create a new one.');
  }

  publishDefaultGlobalUtils$1();
  _platform = injector.get(PlatformRef);
  var inits = injector.get(PLATFORM_INITIALIZER, null);
  if (inits) inits.forEach(function (init) {
    return init();
  });
  return _platform;
}
/**
 * Creates a factory for a platform. Can be used to provide or override `Providers` specific to
 * your applciation's runtime needs, such as `PLATFORM_INITIALIZER` and `PLATFORM_ID`.
 * @param parentPlatformFactory Another platform factory to modify. Allows you to compose factories
 * to build up configurations that might be required by different libraries or parts of the
 * application.
 * @param name Identifies the new platform factory.
 * @param providers A set of dependency providers for platforms created with the new factory.
 *
 * @publicApi
 */


function createPlatformFactory(parentPlatformFactory, name) {
  var providers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var desc = "Platform: ".concat(name);
  var marker = new InjectionToken(desc);
  return function () {
    var extraProviders = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var platform = getPlatform();

    if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {
      if (parentPlatformFactory) {
        parentPlatformFactory(providers.concat(extraProviders).concat({
          provide: marker,
          useValue: true
        }));
      } else {
        var injectedProviders = providers.concat(extraProviders).concat({
          provide: marker,
          useValue: true
        }, {
          provide: INJECTOR_SCOPE,
          useValue: 'platform'
        });
        createPlatform(Injector.create({
          providers: injectedProviders,
          name: desc
        }));
      }
    }

    return assertPlatform(marker);
  };
}
/**
 * Checks that there is currently a platform that contains the given token as a provider.
 *
 * @publicApi
 */


function assertPlatform(requiredToken) {
  var platform = getPlatform();

  if (!platform) {
    throw new Error('No platform exists!');
  }

  if (!platform.injector.get(requiredToken, null)) {
    throw new Error('A platform with a different configuration has been created. Please destroy it first.');
  }

  return platform;
}
/**
 * Destroys the current Angular platform and all Angular applications on the page.
 * Destroys all modules and listeners registered with the platform.
 *
 * @publicApi
 */


function destroyPlatform() {
  if (_platform && !_platform.destroyed) {
    _platform.destroy();
  }
}
/**
 * Returns the current platform.
 *
 * @publicApi
 */


function getPlatform() {
  return _platform && !_platform.destroyed ? _platform : null;
}

var PlatformRef = /*@__PURE__*/function () {
  var PlatformRef = /*#__PURE__*/function () {
    /** @internal */
    function PlatformRef(_injector) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, PlatformRef);

      this._injector = _injector;
      this._modules = [];
      this._destroyListeners = [];
      this._destroyed = false;
    }
    /**
     * Creates an instance of an `@NgModule` for the given platform for offline compilation.
     *
     * @usageNotes
     *
     * The following example creates the NgModule for a browser platform.
     *
     * ```typescript
     * my_module.ts:
     *
     * @NgModule({
     *   imports: [BrowserModule]
     * })
     * class MyModule {}
     *
     * main.ts:
     * import {MyModuleNgFactory} from './my_module.ngfactory';
     * import {platformBrowser} from '@angular/platform-browser';
     *
     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);
     * ```
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(PlatformRef, [{
      key: "bootstrapModuleFactory",
      value: function bootstrapModuleFactory(moduleFactory, options) {
        var _this27 = this;

        // Note: We need to create the NgZone _before_ we instantiate the module,
        // as instantiating the module creates some providers eagerly.
        // So we create a mini parent injector that just contains the new NgZone and
        // pass that as parent to the NgModuleFactory.
        var ngZoneOption = options ? options.ngZone : undefined;
        var ngZoneEventCoalescing = options && options.ngZoneEventCoalescing || false;
        var ngZone = getNgZone(ngZoneOption, ngZoneEventCoalescing);
        var providers = [{
          provide: NgZone,
          useValue: ngZone
        }]; // Attention: Don't use ApplicationRef.run here,
        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!

        return ngZone.run(function () {
          var ngZoneInjector = Injector.create({
            providers: providers,
            parent: _this27.injector,
            name: moduleFactory.moduleType.name
          });
          var moduleRef = moduleFactory.create(ngZoneInjector);
          var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);

          if (!exceptionHandler) {
            throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');
          }

          moduleRef.onDestroy(function () {
            return remove(_this27._modules, moduleRef);
          });
          ngZone.runOutsideAngular(function () {
            return ngZone.onError.subscribe({
              next: function next(error) {
                exceptionHandler.handleError(error);
              }
            });
          });
          return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {
            var initStatus = moduleRef.injector.get(ApplicationInitStatus);
            initStatus.runInitializers();
            return initStatus.donePromise.then(function () {
              if (ivyEnabled) {
                // If the `LOCALE_ID` provider is defined at bootstrap then we set the value for ivy
                var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);
                setLocaleId(localeId || DEFAULT_LOCALE_ID);
              }

              _this27._moduleDoBootstrap(moduleRef);

              return moduleRef;
            });
          });
        });
      }
      /**
       * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.
       *
       * @usageNotes
       * ### Simple Example
       *
       * ```typescript
       * @NgModule({
       *   imports: [BrowserModule]
       * })
       * class MyModule {}
       *
       * let moduleRef = platformBrowser().bootstrapModule(MyModule);
       * ```
       *
       */

    }, {
      key: "bootstrapModule",
      value: function bootstrapModule(moduleType) {
        var _this28 = this;

        var compilerOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var options = optionsReducer({}, compilerOptions);
        return compileNgModuleFactory(this.injector, options, moduleType).then(function (moduleFactory) {
          return _this28.bootstrapModuleFactory(moduleFactory, options);
        });
      }
    }, {
      key: "_moduleDoBootstrap",
      value: function _moduleDoBootstrap(moduleRef) {
        var appRef = moduleRef.injector.get(ApplicationRef);

        if (moduleRef._bootstrapComponents.length > 0) {
          moduleRef._bootstrapComponents.forEach(function (f) {
            return appRef.bootstrap(f);
          });
        } else if (moduleRef.instance.ngDoBootstrap) {
          moduleRef.instance.ngDoBootstrap(appRef);
        } else {
          throw new Error("The module ".concat(stringify(moduleRef.instance.constructor), " was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ") + "Please define one of these.");
        }

        this._modules.push(moduleRef);
      }
      /**
       * Registers a listener to be called when the platform is destroyed.
       */

    }, {
      key: "onDestroy",
      value: function onDestroy(callback) {
        this._destroyListeners.push(callback);
      }
      /**
       * Retrieves the platform {@link Injector}, which is the parent injector for
       * every Angular application on the page and provides singleton providers.
       */

    }, {
      key: "destroy",

      /**
       * Destroys the current Angular platform and all Angular applications on the page.
       * Destroys all modules and listeners registered with the platform.
       */
      value: function destroy() {
        if (this._destroyed) {
          throw new Error('The platform has already been destroyed!');
        }

        this._modules.slice().forEach(function (module) {
          return module.destroy();
        });

        this._destroyListeners.forEach(function (listener) {
          return listener();
        });

        this._destroyed = true;
      }
    }, {
      key: "injector",
      get: function get() {
        return this._injector;
      }
    }, {
      key: "destroyed",
      get: function get() {
        return this._destroyed;
      }
    }]);

    return PlatformRef;
  }();

  PlatformRef.ɵfac = function PlatformRef_Factory(t) {
    return new (t || PlatformRef)(ɵɵinject(Injector));
  };

  PlatformRef.ɵprov = /*@__PURE__*/ɵɵdefineInjectable({
    token: PlatformRef,
    factory: PlatformRef.ɵfac
  });
  return PlatformRef;
}();
/*@__PURE__*/

/*@__PURE__*/


(function () {
  setClassMetadata(PlatformRef, [{
    type: Injectable
  }], function () {
    return [{
      type: Injector
    }];
  }, null);
})();

function getNgZone(ngZoneOption, ngZoneEventCoalescing) {
  var ngZone;

  if (ngZoneOption === 'noop') {
    ngZone = new NoopNgZone();
  } else {
    ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) || new NgZone({
      enableLongStackTrace: isDevMode(),
      shouldCoalesceEventChangeDetection: ngZoneEventCoalescing
    });
  }

  return ngZone;
}

function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {
  try {
    var result = callback();

    if (isPromise(result)) {
      return result.catch(function (e) {
        ngZone.runOutsideAngular(function () {
          return errorHandler.handleError(e);
        }); // rethrow as the exception handler might not do it

        throw e;
      });
    }

    return result;
  } catch (e) {
    ngZone.runOutsideAngular(function () {
      return errorHandler.handleError(e);
    }); // rethrow as the exception handler might not do it

    throw e;
  }
}

function optionsReducer(dst, objs) {
  if (Array.isArray(objs)) {
    dst = objs.reduce(optionsReducer, dst);
  } else {
    dst = Object.assign(Object.assign({}, dst), objs);
  }

  return dst;
}

var ApplicationRef = /*@__PURE__*/function () {
  var ApplicationRef = /*#__PURE__*/function () {
    /** @internal */
    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {
      var _this29 = this;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ApplicationRef);

      this._zone = _zone;
      this._console = _console;
      this._injector = _injector;
      this._exceptionHandler = _exceptionHandler;
      this._componentFactoryResolver = _componentFactoryResolver;
      this._initStatus = _initStatus;
      /** @internal */

      this._bootstrapListeners = [];
      this._views = [];
      this._runningTick = false;
      this._enforceNoNewChanges = false;
      this._stable = true;
      /**
       * Get a list of component types registered to this application.
       * This list is populated even before the component is created.
       */

      this.componentTypes = [];
      /**
       * Get a list of components registered to this application.
       */

      this.components = [];
      this._enforceNoNewChanges = isDevMode();

      this._zone.onMicrotaskEmpty.subscribe({
        next: function next() {
          _this29._zone.run(function () {
            _this29.tick();
          });
        }
      });

      var isCurrentlyStable = new rxjs__WEBPACK_IMPORTED_MODULE_14__["Observable"](function (observer) {
        _this29._stable = _this29._zone.isStable && !_this29._zone.hasPendingMacrotasks && !_this29._zone.hasPendingMicrotasks;

        _this29._zone.runOutsideAngular(function () {
          observer.next(_this29._stable);
          observer.complete();
        });
      });
      var isStable = new rxjs__WEBPACK_IMPORTED_MODULE_14__["Observable"](function (observer) {
        // Create the subscription to onStable outside the Angular Zone so that
        // the callback is run outside the Angular Zone.
        var stableSub;

        _this29._zone.runOutsideAngular(function () {
          stableSub = _this29._zone.onStable.subscribe(function () {
            NgZone.assertNotInAngularZone(); // Check whether there are no pending macro/micro tasks in the next tick
            // to allow for NgZone to update the state.

            scheduleMicroTask(function () {
              if (!_this29._stable && !_this29._zone.hasPendingMacrotasks && !_this29._zone.hasPendingMicrotasks) {
                _this29._stable = true;
                observer.next(true);
              }
            });
          });
        });

        var unstableSub = _this29._zone.onUnstable.subscribe(function () {
          NgZone.assertInAngularZone();

          if (_this29._stable) {
            _this29._stable = false;

            _this29._zone.runOutsideAngular(function () {
              observer.next(false);
            });
          }
        });

        return function () {
          stableSub.unsubscribe();
          unstableSub.unsubscribe();
        };
      });
      this.isStable = Object(rxjs__WEBPACK_IMPORTED_MODULE_14__["merge"])(isCurrentlyStable, isStable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_15__["share"])()));
    }
    /**
     * Bootstrap a new component at the root level of the application.
     *
     * @usageNotes
     * ### Bootstrap process
     *
     * When bootstrapping a new root component into an application, Angular mounts the
     * specified application component onto DOM elements identified by the componentType's
     * selector and kicks off automatic change detection to finish initializing the component.
     *
     * Optionally, a component can be mounted onto a DOM element that does not match the
     * componentType's selector.
     *
     * ### Example
     * {@example core/ts/platform/platform.ts region='longform'}
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(ApplicationRef, [{
      key: "bootstrap",
      value: function bootstrap(componentOrFactory, rootSelectorOrNode) {
        var _this30 = this;

        if (!this._initStatus.done) {
          throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');
        }

        var componentFactory;

        if (componentOrFactory instanceof ComponentFactory) {
          componentFactory = componentOrFactory;
        } else {
          componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);
        }

        this.componentTypes.push(componentFactory.componentType); // Create a factory associated with the current module if it's not bound to some other

        var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);
        var selectorOrNode = rootSelectorOrNode || componentFactory.selector;
        var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);
        compRef.onDestroy(function () {
          _this30._unloadComponent(compRef);
        });
        var testability = compRef.injector.get(Testability, null);

        if (testability) {
          compRef.injector.get(TestabilityRegistry).registerApplication(compRef.location.nativeElement, testability);
        }

        this._loadComponent(compRef);

        if (isDevMode()) {
          this._console.log("Angular is running in development mode. Call enableProdMode() to enable production mode.");
        }

        return compRef;
      }
      /**
       * Invoke this method to explicitly process change detection and its side-effects.
       *
       * In development mode, `tick()` also performs a second change detection cycle to ensure that no
       * further changes are detected. If additional changes are picked up during this second cycle,
       * bindings in the app have side-effects that cannot be resolved in a single change detection
       * pass.
       * In this case, Angular throws an error, since an Angular application can only have one change
       * detection pass during which all change detection must complete.
       */

    }, {
      key: "tick",
      value: function tick() {
        var _this31 = this;

        if (this._runningTick) {
          throw new Error('ApplicationRef.tick is called recursively');
        }

        try {
          this._runningTick = true;

          var _iterator5 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_7__["default"])(this._views),
              _step5;

          try {
            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
              var _view2 = _step5.value;

              _view2.detectChanges();
            }
          } catch (err) {
            _iterator5.e(err);
          } finally {
            _iterator5.f();
          }

          if (this._enforceNoNewChanges) {
            var _iterator6 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_7__["default"])(this._views),
                _step6;

            try {
              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
                var view = _step6.value;
                view.checkNoChanges();
              }
            } catch (err) {
              _iterator6.e(err);
            } finally {
              _iterator6.f();
            }
          }
        } catch (e) {
          // Attention: Don't rethrow as it could cancel subscriptions to Observables!
          this._zone.runOutsideAngular(function () {
            return _this31._exceptionHandler.handleError(e);
          });
        } finally {
          this._runningTick = false;
        }
      }
      /**
       * Attaches a view so that it will be dirty checked.
       * The view will be automatically detached when it is destroyed.
       * This will throw if the view is already attached to a ViewContainer.
       */

    }, {
      key: "attachView",
      value: function attachView(viewRef) {
        var view = viewRef;

        this._views.push(view);

        view.attachToAppRef(this);
      }
      /**
       * Detaches a view from dirty checking again.
       */

    }, {
      key: "detachView",
      value: function detachView(viewRef) {
        var view = viewRef;
        remove(this._views, view);
        view.detachFromAppRef();
      }
    }, {
      key: "_loadComponent",
      value: function _loadComponent(componentRef) {
        this.attachView(componentRef.hostView);
        this.tick();
        this.components.push(componentRef); // Get the listeners lazily to prevent DI cycles.

        var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);

        listeners.forEach(function (listener) {
          return listener(componentRef);
        });
      }
    }, {
      key: "_unloadComponent",
      value: function _unloadComponent(componentRef) {
        this.detachView(componentRef.hostView);
        remove(this.components, componentRef);
      }
      /** @internal */

    }, {
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        // TODO(alxhub): Dispose of the NgZone.
        this._views.slice().forEach(function (view) {
          return view.destroy();
        });
      }
      /**
       * Returns the number of attached views.
       */

    }, {
      key: "viewCount",
      get: function get() {
        return this._views.length;
      }
    }]);

    return ApplicationRef;
  }();

  ApplicationRef.ɵfac = function ApplicationRef_Factory(t) {
    return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus));
  };

  ApplicationRef.ɵprov = /*@__PURE__*/ɵɵdefineInjectable({
    token: ApplicationRef,
    factory: ApplicationRef.ɵfac
  });
  return ApplicationRef;
}();
/*@__PURE__*/

/*@__PURE__*/


(function () {
  setClassMetadata(ApplicationRef, [{
    type: Injectable
  }], function () {
    return [{
      type: NgZone
    }, {
      type: Console
    }, {
      type: Injector
    }, {
      type: ErrorHandler
    }, {
      type: ComponentFactoryResolver
    }, {
      type: ApplicationInitStatus
    }];
  }, null);
})();

function remove(list, el) {
  var index = list.indexOf(el);

  if (index > -1) {
    list.splice(index, 1);
  }
}

function _lastDefined(args) {
  for (var i = args.length - 1; i >= 0; i--) {
    if (args[i] !== undefined) {
      return args[i];
    }
  }

  return undefined;
}

function _mergeArrays(parts) {
  var result = [];
  parts.forEach(function (part) {
    return part && result.push.apply(result, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(part));
  });
  return result;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Used to load ng module factories.
 *
 * @publicApi
 * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is
 * part of its implementation. See `LoadChildren` for more details.
 */


var NgModuleFactoryLoader = function NgModuleFactoryLoader() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, NgModuleFactoryLoader);
};

function getModuleFactory__PRE_R3__(id) {
  var factory = getRegisteredNgModuleType(id);
  if (!factory) throw noModuleError(id);
  return factory;
}

function getModuleFactory__POST_R3__(id) {
  var type = getRegisteredNgModuleType(id);
  if (!type) throw noModuleError(id);
  return new NgModuleFactory$1(type);
}
/**
 * Returns the NgModuleFactory with the given id, if it exists and has been loaded.
 * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module
 * cannot be found.
 * @publicApi
 */


var getModuleFactory = getModuleFactory__POST_R3__;

function noModuleError(id) {
  return new Error("No module with ID ".concat(id, " loaded"));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var _SEPARATOR = '#';
var FACTORY_CLASS_SUFFIX = 'NgFactory';
/**
 * Configuration for SystemJsNgModuleLoader.
 * token.
 *
 * @publicApi
 * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`
 * is part of its implementation. See `LoadChildren` for more details.
 */

var SystemJsNgModuleLoaderConfig = function SystemJsNgModuleLoaderConfig() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, SystemJsNgModuleLoaderConfig);
};

var DEFAULT_CONFIG = {
  factoryPathPrefix: '',
  factoryPathSuffix: '.ngfactory'
};

var SystemJsNgModuleLoader = /*@__PURE__*/function () {
  var SystemJsNgModuleLoader = /*#__PURE__*/function () {
    function SystemJsNgModuleLoader(_compiler, config) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, SystemJsNgModuleLoader);

      this._compiler = _compiler;
      this._config = config || DEFAULT_CONFIG;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(SystemJsNgModuleLoader, [{
      key: "load",
      value: function load(path) {
        var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;
        return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);
      }
    }, {
      key: "loadAndCompile",
      value: function loadAndCompile(path) {
        var _this32 = this;

        var _path$split = path.split(_SEPARATOR),
            _path$split2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(_path$split, 2),
            module = _path$split2[0],
            exportName = _path$split2[1];

        if (exportName === undefined) {
          exportName = 'default';
        }

        return __webpack_require__("crnd")(module).then(function (module) {
          return module[exportName];
        }).then(function (type) {
          return checkNotEmpty(type, module, exportName);
        }).then(function (type) {
          return _this32._compiler.compileModuleAsync(type);
        });
      }
    }, {
      key: "loadFactory",
      value: function loadFactory(path) {
        var _path$split3 = path.split(_SEPARATOR),
            _path$split4 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(_path$split3, 2),
            module = _path$split4[0],
            exportName = _path$split4[1];

        var factoryClassSuffix = FACTORY_CLASS_SUFFIX;

        if (exportName === undefined) {
          exportName = 'default';
          factoryClassSuffix = '';
        }

        return __webpack_require__("crnd")(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix).then(function (module) {
          return module[exportName + factoryClassSuffix];
        }).then(function (factory) {
          return checkNotEmpty(factory, module, exportName);
        });
      }
    }]);

    return SystemJsNgModuleLoader;
  }();

  SystemJsNgModuleLoader.ɵfac = function SystemJsNgModuleLoader_Factory(t) {
    return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8));
  };

  SystemJsNgModuleLoader.ɵprov = /*@__PURE__*/ɵɵdefineInjectable({
    token: SystemJsNgModuleLoader,
    factory: SystemJsNgModuleLoader.ɵfac
  });
  return SystemJsNgModuleLoader;
}();
/*@__PURE__*/

/*@__PURE__*/


(function () {
  setClassMetadata(SystemJsNgModuleLoader, [{
    type: Injectable
  }], function () {
    return [{
      type: Compiler
    }, {
      type: SystemJsNgModuleLoaderConfig,
      decorators: [{
        type: Optional
      }]
    }];
  }, null);
})();

function checkNotEmpty(value, modulePath, exportName) {
  if (!value) {
    throw new Error("Cannot find '".concat(exportName, "' in '").concat(modulePath, "'"));
  }

  return value;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Represents an Angular [view](guide/glossary#view "Definition").
 *
 * @see {@link ChangeDetectorRef#usage-notes Change detection usage}
 *
 * @publicApi
 */


var ViewRef$1 = /*#__PURE__*/function (_ChangeDetectorRef) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(ViewRef$1, _ChangeDetectorRef);

  var _super20 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(ViewRef$1);

  function ViewRef$1() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ViewRef$1);

    return _super20.apply(this, arguments);
  }

  return ViewRef$1;
}(ChangeDetectorRef);
/**
 * Represents an Angular [view](guide/glossary#view) in a view container.
 * An [embedded view](guide/glossary#view-tree) can be referenced from a component
 * other than the hosting component whose template defines it, or it can be defined
 * independently by a `TemplateRef`.
 *
 * Properties of elements in a view can change, but the structure (number and order) of elements in
 * a view cannot. Change the structure of elements by inserting, moving, or
 * removing nested views in a view container.
 *
 * @see `ViewContainerRef`
 *
 * @usageNotes
 *
 * The following template breaks down into two separate `TemplateRef` instances,
 * an outer one and an inner one.
 *
 * ```
 * Count: {{items.length}}
 * <ul>
 *   <li *ngFor="let  item of items">{{item}}</li>
 * </ul>
 * ```
 *
 * This is the outer `TemplateRef`:
 *
 * ```
 * Count: {{items.length}}
 * <ul>
 *   <ng-template ngFor let-item [ngForOf]="items"></ng-template>
 * </ul>
 * ```
 *
 * This is the inner `TemplateRef`:
 *
 * ```
 *   <li>{{item}}</li>
 * ```
 *
 * The outer and inner `TemplateRef` instances are assembled into views as follows:
 *
 * ```
 * <!-- ViewRef: outer-0 -->
 * Count: 2
 * <ul>
 *   <ng-template view-container-ref></ng-template>
 *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->
 *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->
 * </ul>
 * <!-- /ViewRef: outer-0 -->
 * ```
 * @publicApi
 */


var EmbeddedViewRef = /*#__PURE__*/function (_ViewRef$) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(EmbeddedViewRef, _ViewRef$);

  var _super21 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(EmbeddedViewRef);

  function EmbeddedViewRef() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, EmbeddedViewRef);

    return _super21.apply(this, arguments);
  }

  return EmbeddedViewRef;
}(ViewRef$1);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @publicApi
 */


var DebugEventListener = function DebugEventListener(name, callback) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, DebugEventListener);

  this.name = name;
  this.callback = callback;
};

var DebugNode__PRE_R3__ = /*#__PURE__*/function () {
  function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, DebugNode__PRE_R3__);

    this.listeners = [];
    this.parent = null;
    this._debugContext = _debugContext;
    this.nativeNode = nativeNode;

    if (parent && parent instanceof DebugElement__PRE_R3__) {
      parent.addChild(this);
    }
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(DebugNode__PRE_R3__, [{
    key: "injector",
    get: function get() {
      return this._debugContext.injector;
    }
  }, {
    key: "componentInstance",
    get: function get() {
      return this._debugContext.component;
    }
  }, {
    key: "context",
    get: function get() {
      return this._debugContext.context;
    }
  }, {
    key: "references",
    get: function get() {
      return this._debugContext.references;
    }
  }, {
    key: "providerTokens",
    get: function get() {
      return this._debugContext.providerTokens;
    }
  }]);

  return DebugNode__PRE_R3__;
}();

var DebugElement__PRE_R3__ = /*#__PURE__*/function (_DebugNode__PRE_R3__) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(DebugElement__PRE_R3__, _DebugNode__PRE_R3__);

  var _super22 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(DebugElement__PRE_R3__);

  function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {
    var _this33;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, DebugElement__PRE_R3__);

    _this33 = _super22.call(this, nativeNode, parent, _debugContext);
    _this33.properties = {};
    _this33.attributes = {};
    _this33.classes = {};
    _this33.styles = {};
    _this33.childNodes = [];
    _this33.nativeElement = nativeNode;
    return _this33;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(DebugElement__PRE_R3__, [{
    key: "addChild",
    value: function addChild(child) {
      if (child) {
        this.childNodes.push(child);
        child.parent = this;
      }
    }
  }, {
    key: "removeChild",
    value: function removeChild(child) {
      var childIndex = this.childNodes.indexOf(child);

      if (childIndex !== -1) {
        child.parent = null;
        this.childNodes.splice(childIndex, 1);
      }
    }
  }, {
    key: "insertChildrenAfter",
    value: function insertChildrenAfter(child, newChildren) {
      var _this34 = this;

      var siblingIndex = this.childNodes.indexOf(child);

      if (siblingIndex !== -1) {
        var _this$childNodes;

        (_this$childNodes = this.childNodes).splice.apply(_this$childNodes, [siblingIndex + 1, 0].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(newChildren)));

        newChildren.forEach(function (c) {
          if (c.parent) {
            c.parent.removeChild(c);
          }

          child.parent = _this34;
        });
      }
    }
  }, {
    key: "insertBefore",
    value: function insertBefore(refChild, newChild) {
      var refIndex = this.childNodes.indexOf(refChild);

      if (refIndex === -1) {
        this.addChild(newChild);
      } else {
        if (newChild.parent) {
          newChild.parent.removeChild(newChild);
        }

        newChild.parent = this;
        this.childNodes.splice(refIndex, 0, newChild);
      }
    }
  }, {
    key: "query",
    value: function query(predicate) {
      var results = this.queryAll(predicate);
      return results[0] || null;
    }
  }, {
    key: "queryAll",
    value: function queryAll(predicate) {
      var matches = [];

      _queryElementChildren(this, predicate, matches);

      return matches;
    }
  }, {
    key: "queryAllNodes",
    value: function queryAllNodes(predicate) {
      var matches = [];

      _queryNodeChildren(this, predicate, matches);

      return matches;
    }
  }, {
    key: "triggerEventHandler",
    value: function triggerEventHandler(eventName, eventObj) {
      this.listeners.forEach(function (listener) {
        if (listener.name == eventName) {
          listener.callback(eventObj);
        }
      });
    }
  }, {
    key: "children",
    get: function get() {
      return this.childNodes //
      .filter(function (node) {
        return node instanceof DebugElement__PRE_R3__;
      });
    }
  }]);

  return DebugElement__PRE_R3__;
}(DebugNode__PRE_R3__);
/**
 * @publicApi
 */


function asNativeElements(debugEls) {
  return debugEls.map(function (el) {
    return el.nativeElement;
  });
}

function _queryElementChildren(element, predicate, matches) {
  element.childNodes.forEach(function (node) {
    if (node instanceof DebugElement__PRE_R3__) {
      if (predicate(node)) {
        matches.push(node);
      }

      _queryElementChildren(node, predicate, matches);
    }
  });
}

function _queryNodeChildren(parentNode, predicate, matches) {
  if (parentNode instanceof DebugElement__PRE_R3__) {
    parentNode.childNodes.forEach(function (node) {
      if (predicate(node)) {
        matches.push(node);
      }

      if (node instanceof DebugElement__PRE_R3__) {
        _queryNodeChildren(node, predicate, matches);
      }
    });
  }
}

var DebugNode__POST_R3__ = /*#__PURE__*/function () {
  function DebugNode__POST_R3__(nativeNode) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, DebugNode__POST_R3__);

    this.nativeNode = nativeNode;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(DebugNode__POST_R3__, [{
    key: "parent",
    get: function get() {
      var parent = this.nativeNode.parentNode;
      return parent ? new DebugElement__POST_R3__(parent) : null;
    }
  }, {
    key: "injector",
    get: function get() {
      return getInjector(this.nativeNode);
    }
  }, {
    key: "componentInstance",
    get: function get() {
      var nativeElement = this.nativeNode;
      return nativeElement && (getComponent(nativeElement) || getOwningComponent(nativeElement));
    }
  }, {
    key: "context",
    get: function get() {
      return getComponent(this.nativeNode) || getContext(this.nativeNode);
    }
  }, {
    key: "listeners",
    get: function get() {
      return getListeners(this.nativeNode).filter(function (listener) {
        return listener.type === 'dom';
      });
    }
  }, {
    key: "references",
    get: function get() {
      return getLocalRefs(this.nativeNode);
    }
  }, {
    key: "providerTokens",
    get: function get() {
      return getInjectionTokens(this.nativeNode);
    }
  }]);

  return DebugNode__POST_R3__;
}();

var DebugElement__POST_R3__ = /*#__PURE__*/function (_DebugNode__POST_R3__) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(DebugElement__POST_R3__, _DebugNode__POST_R3__);

  var _super23 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(DebugElement__POST_R3__);

  function DebugElement__POST_R3__(nativeNode) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, DebugElement__POST_R3__);

    ngDevMode && assertDomNode(nativeNode);
    return _super23.call(this, nativeNode);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(DebugElement__POST_R3__, [{
    key: "query",
    value: function query(predicate) {
      var results = this.queryAll(predicate);
      return results[0] || null;
    }
  }, {
    key: "queryAll",
    value: function queryAll(predicate) {
      var matches = [];

      _queryAllR3(this, predicate, matches, true);

      return matches;
    }
  }, {
    key: "queryAllNodes",
    value: function queryAllNodes(predicate) {
      var matches = [];

      _queryAllR3(this, predicate, matches, false);

      return matches;
    }
  }, {
    key: "triggerEventHandler",
    value: function triggerEventHandler(eventName, eventObj) {
      var node = this.nativeNode;
      var invokedListeners = [];
      this.listeners.forEach(function (listener) {
        if (listener.name === eventName) {
          var callback = listener.callback;
          callback.call(node, eventObj);
          invokedListeners.push(callback);
        }
      }); // We need to check whether `eventListeners` exists, because it's something
      // that Zone.js only adds to `EventTarget` in browser environments.

      if (typeof node.eventListeners === 'function') {
        // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some
        // cases. We use '__ngUnwrap__' as a special token that gives us access to the actual event
        // listener.
        node.eventListeners(eventName).forEach(function (listener) {
          // In order to ensure that we can detect the special __ngUnwrap__ token described above, we
          // use `toString` on the listener and see if it contains the token. We use this approach to
          // ensure that it still worked with compiled code since it cannot remove or rename string
          // literals. We also considered using a special function name (i.e. if(listener.name ===
          // special)) but that was more cumbersome and we were also concerned the compiled code could
          // strip the name, turning the condition in to ("" === "") and always returning true.
          if (listener.toString().indexOf('__ngUnwrap__') !== -1) {
            var unwrappedListener = listener('__ngUnwrap__');
            return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener.call(node, eventObj);
          }
        });
      }
    }
  }, {
    key: "nativeElement",
    get: function get() {
      return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;
    }
  }, {
    key: "name",
    get: function get() {
      try {
        var context = loadLContext(this.nativeNode);
        var lView = context.lView;
        var tData = lView[TVIEW].data;
        var tNode = tData[context.nodeIndex];
        return tNode.value;
      } catch (e) {
        return this.nativeNode.nodeName;
      }
    }
    /**
     *  Gets a map of property names to property values for an element.
     *
     *  This map includes:
     *  - Regular property bindings (e.g. `[id]="id"`)
     *  - Host property bindings (e.g. `host: { '[id]': "id" }`)
     *  - Interpolated property bindings (e.g. `id="{{ value }}")
     *
     *  It does not include:
     *  - input property bindings (e.g. `[myCustomInput]="value"`)
     *  - attribute bindings (e.g. `[attr.role]="menu"`)
     */

  }, {
    key: "properties",
    get: function get() {
      var context = loadLContext(this.nativeNode, false);

      if (context == null) {
        return {};
      }

      var lView = context.lView;
      var tData = lView[TVIEW].data;
      var tNode = tData[context.nodeIndex];
      var properties = {}; // Collect properties from the DOM.

      copyDomProperties(this.nativeElement, properties); // Collect properties from the bindings. This is needed for animation renderer which has
      // synthetic properties which don't get reflected into the DOM.

      collectPropertyBindings(properties, tNode, lView, tData);
      return properties;
    }
  }, {
    key: "attributes",
    get: function get() {
      var attributes = {};
      var element = this.nativeElement;

      if (!element) {
        return attributes;
      }

      var context = loadLContext(element, false);

      if (context == null) {
        return {};
      }

      var lView = context.lView;
      var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;
      var lowercaseTNodeAttrs = []; // For debug nodes we take the element's attribute directly from the DOM since it allows us
      // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones
      // that are set through `Renderer2`). The problem is that the browser will lowercase all names,
      // however since we have the attributes already on the TNode, we can preserve the case by going
      // through them once, adding them to the `attributes` map and putting their lower-cased name
      // into an array. Afterwards when we're going through the native DOM attributes, we can check
      // whether we haven't run into an attribute already through the TNode.

      if (tNodeAttrs) {
        var i = 0;

        while (i < tNodeAttrs.length) {
          var attrName = tNodeAttrs[i]; // Stop as soon as we hit a marker. We only care about the regular attributes. Everything
          // else will be handled below when we read the final attributes off the DOM.

          if (typeof attrName !== 'string') break;
          var attrValue = tNodeAttrs[i + 1];
          attributes[attrName] = attrValue;
          lowercaseTNodeAttrs.push(attrName.toLowerCase());
          i += 2;
        }
      }

      var eAttrs = element.attributes;

      for (var _i9 = 0; _i9 < eAttrs.length; _i9++) {
        var attr = eAttrs[_i9];
        var lowercaseName = attr.name.toLowerCase(); // Make sure that we don't assign the same attribute both in its
        // case-sensitive form and the lower-cased one from the browser.

        if (lowercaseTNodeAttrs.indexOf(lowercaseName) === -1) {
          // Save the lowercase name to align the behavior between browsers.
          // IE preserves the case, while all other browser convert it to lower case.
          attributes[lowercaseName] = attr.value;
        }
      }

      return attributes;
    }
  }, {
    key: "styles",
    get: function get() {
      if (this.nativeElement && this.nativeElement.style) {
        return this.nativeElement.style;
      }

      return {};
    }
  }, {
    key: "classes",
    get: function get() {
      var result = {};
      var element = this.nativeElement; // SVG elements return an `SVGAnimatedString` instead of a plain string for the `className`.

      var className = element.className;
      var classes = className && typeof className !== 'string' ? className.baseVal.split(' ') : className.split(' ');
      classes.forEach(function (value) {
        return result[value] = true;
      });
      return result;
    }
  }, {
    key: "childNodes",
    get: function get() {
      var childNodes = this.nativeNode.childNodes;
      var children = [];

      for (var i = 0; i < childNodes.length; i++) {
        var element = childNodes[i];
        children.push(getDebugNode__POST_R3__(element));
      }

      return children;
    }
  }, {
    key: "children",
    get: function get() {
      var nativeElement = this.nativeElement;
      if (!nativeElement) return [];
      var childNodes = nativeElement.children;
      var children = [];

      for (var i = 0; i < childNodes.length; i++) {
        var element = childNodes[i];
        children.push(getDebugNode__POST_R3__(element));
      }

      return children;
    }
  }]);

  return DebugElement__POST_R3__;
}(DebugNode__POST_R3__);

function copyDomProperties(element, properties) {
  if (element) {
    // Skip own properties (as those are patched)
    var obj = Object.getPrototypeOf(element);
    var NodePrototype = Node.prototype;

    while (obj !== null && obj !== NodePrototype) {
      var descriptors = Object.getOwnPropertyDescriptors(obj);

      for (var key in descriptors) {
        if (!key.startsWith('__') && !key.startsWith('on')) {
          // don't include properties starting with `__` and `on`.
          // `__` are patched values which should not be included.
          // `on` are listeners which also should not be included.
          var value = element[key];

          if (isPrimitiveValue(value)) {
            properties[key] = value;
          }
        }
      }

      obj = Object.getPrototypeOf(obj);
    }
  }
}

function isPrimitiveValue(value) {
  return typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number' || value === null;
}

function _queryAllR3(parentElement, predicate, matches, elementsOnly) {
  var context = loadLContext(parentElement.nativeNode, false);

  if (context !== null) {
    var parentTNode = context.lView[TVIEW].data[context.nodeIndex];

    _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);
  } else {
    // If the context is null, then `parentElement` was either created with Renderer2 or native DOM
    // APIs.
    _queryNativeNodeDescendants(parentElement.nativeNode, predicate, matches, elementsOnly);
  }
}
/**
 * Recursively match the current TNode against the predicate, and goes on with the next ones.
 *
 * @param tNode the current TNode
 * @param lView the LView of this TNode
 * @param predicate the predicate to match
 * @param matches the list of positive matches
 * @param elementsOnly whether only elements should be searched
 * @param rootNativeNode the root native node on which predicate should not be matched
 */


function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {
  ngDevMode && assertTNodeForLView(tNode, lView);
  var nativeNode = getNativeByTNodeOrNull(tNode, lView); // For each type of TNode, specific logic is executed.

  if (tNode.type & (3
  /* AnyRNode */
  | 8
  /* ElementContainer */
  )) {
    // Case 1: the TNode is an element
    // The native node has to be checked.
    _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);

    if (isComponentHost(tNode)) {
      // If the element is the host of a component, then all nodes in its view have to be processed.
      // Note: the component's content (tNode.child) will be processed from the insertion points.
      var componentView = getComponentLViewByIndex(tNode.index, lView);

      if (componentView && componentView[TVIEW].firstChild) {
        _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);
      }
    } else {
      if (tNode.child) {
        // Otherwise, its children have to be processed.
        _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);
      } // We also have to query the DOM directly in order to catch elements inserted through
      // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple
      // times. ViewEngine could do it more efficiently, because all the insertions go through
      // Renderer2, however that's not the case in Ivy. This approach is being used because:
      // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency
      //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.
      // 2. We would have to make `Renderer3` "know" about debug nodes.
      // 3. It allows us to capture nodes that were inserted directly via the DOM.


      nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);
    } // In all cases, if a dynamic container exists for this node, each view inside it has to be
    // processed.


    var nodeOrContainer = lView[tNode.index];

    if (isLContainer(nodeOrContainer)) {
      _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);
    }
  } else if (tNode.type & 4
  /* Container */
  ) {
      // Case 2: the TNode is a container
      // The native node has to be checked.
      var lContainer = lView[tNode.index];

      _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode); // Each view inside the container has to be processed.


      _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);
    } else if (tNode.type & 16
  /* Projection */
  ) {
      // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).
      // The nodes projected at this location all need to be processed.
      var _componentView = lView[DECLARATION_COMPONENT_VIEW];
      var componentHost = _componentView[T_HOST];
      var head = componentHost.projection[tNode.projection];

      if (Array.isArray(head)) {
        var _iterator7 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_7__["default"])(head),
            _step7;

        try {
          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
            var _nativeNode2 = _step7.value;

            _addQueryMatchR3(_nativeNode2, predicate, matches, elementsOnly, rootNativeNode);
          }
        } catch (err) {
          _iterator7.e(err);
        } finally {
          _iterator7.f();
        }
      } else if (head) {
        var nextLView = _componentView[PARENT];
        var nextTNode = nextLView[TVIEW].data[head.index];

        _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);
      }
    } else if (tNode.child) {
    // Case 4: the TNode is a view.
    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);
  } // We don't want to go to the next sibling of the root node.


  if (rootNativeNode !== nativeNode) {
    // To determine the next node to be processed, we need to use the next or the projectionNext
    // link, depending on whether the current node has been projected.
    var _nextTNode = tNode.flags & 4
    /* isProjected */
    ? tNode.projectionNext : tNode.next;

    if (_nextTNode) {
      _queryNodeChildrenR3(_nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);
    }
  }
}
/**
 * Process all TNodes in a given container.
 *
 * @param lContainer the container to be processed
 * @param predicate the predicate to match
 * @param matches the list of positive matches
 * @param elementsOnly whether only elements should be searched
 * @param rootNativeNode the root native node on which predicate should not be matched
 */


function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {
  for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {
    var childView = lContainer[i];
    var firstChild = childView[TVIEW].firstChild;

    if (firstChild) {
      _queryNodeChildrenR3(firstChild, childView, predicate, matches, elementsOnly, rootNativeNode);
    }
  }
}
/**
 * Match the current native node against the predicate.
 *
 * @param nativeNode the current native node
 * @param predicate the predicate to match
 * @param matches the list of positive matches
 * @param elementsOnly whether only elements should be searched
 * @param rootNativeNode the root native node on which predicate should not be matched
 */


function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {
  if (rootNativeNode !== nativeNode) {
    var debugNode = getDebugNode$1(nativeNode);

    if (!debugNode) {
      return;
    } // Type of the "predicate and "matches" array are set based on the value of
    // the "elementsOnly" parameter. TypeScript is not able to properly infer these
    // types with generics, so we manually cast the parameters accordingly.


    if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) && matches.indexOf(debugNode) === -1) {
      matches.push(debugNode);
    } else if (!elementsOnly && predicate(debugNode) && matches.indexOf(debugNode) === -1) {
      matches.push(debugNode);
    }
  }
}
/**
 * Match all the descendants of a DOM node against a predicate.
 *
 * @param nativeNode the current native node
 * @param predicate the predicate to match
 * @param matches the list where matches are stored
 * @param elementsOnly whether only elements should be searched
 */


function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {
  var nodes = parentNode.childNodes;
  var length = nodes.length;

  for (var i = 0; i < length; i++) {
    var node = nodes[i];
    var debugNode = getDebugNode$1(node);

    if (debugNode) {
      if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) && matches.indexOf(debugNode) === -1) {
        matches.push(debugNode);
      } else if (!elementsOnly && predicate(debugNode) && matches.indexOf(debugNode) === -1) {
        matches.push(debugNode);
      }

      _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);
    }
  }
}
/**
 * Iterates through the property bindings for a given node and generates
 * a map of property names to values. This map only contains property bindings
 * defined in templates, not in host bindings.
 */


function collectPropertyBindings(properties, tNode, lView, tData) {
  var bindingIndexes = tNode.propertyBindings;

  if (bindingIndexes !== null) {
    for (var i = 0; i < bindingIndexes.length; i++) {
      var bindingIndex = bindingIndexes[i];
      var propMetadata = tData[bindingIndex];
      var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);
      var propertyName = metadataParts[0];

      if (metadataParts.length > 1) {
        var value = metadataParts[1];

        for (var j = 1; j < metadataParts.length - 1; j++) {
          value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];
        }

        properties[propertyName] = value;
      } else {
        properties[propertyName] = lView[bindingIndex];
      }
    }
  }
} // Need to keep the nodes in a global Map so that multiple angular apps are supported.


var _nativeNodeToDebugNode = /*@__PURE__*/new Map();

function getDebugNode__PRE_R3__(nativeNode) {
  return _nativeNodeToDebugNode.get(nativeNode) || null;
}

var NG_DEBUG_PROPERTY = '__ng_debug__';

function getDebugNode__POST_R3__(nativeNode) {
  if (nativeNode instanceof Node) {
    if (!nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY)) {
      nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ? new DebugElement__POST_R3__(nativeNode) : new DebugNode__POST_R3__(nativeNode);
    }

    return nativeNode[NG_DEBUG_PROPERTY];
  }

  return null;
}
/**
 * @publicApi
 */


var getDebugNode$1 = getDebugNode__POST_R3__;

function getDebugNodeR2__PRE_R3__(nativeNode) {
  return getDebugNode__PRE_R3__(nativeNode);
}

function getDebugNodeR2__POST_R3__(_nativeNode) {
  return null;
}

var getDebugNodeR2 = getDebugNodeR2__POST_R3__;

function getAllDebugNodes() {
  return Array.from(_nativeNodeToDebugNode.values());
}

function indexDebugNode(node) {
  _nativeNodeToDebugNode.set(node.nativeNode, node);
}

function removeDebugNodeFromIndex(node) {
  _nativeNodeToDebugNode.delete(node.nativeNode);
}
/**
 * @publicApi
 */


var DebugNode = DebugNode__POST_R3__;
/**
 * @publicApi
 */

var DebugElement = DebugElement__POST_R3__;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var _CORE_PLATFORM_PROVIDERS = [// Set a default platform name for platforms that don't set it explicitly.
{
  provide: PLATFORM_ID,
  useValue: 'unknown'
}, {
  provide: PlatformRef,
  deps: [Injector]
}, {
  provide: TestabilityRegistry,
  deps: []
}, {
  provide: Console,
  deps: []
}];
/**
 * This platform has to be included in any other platform
 *
 * @publicApi
 */

var platformCore = /*@__PURE__*/createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

function _iterableDiffersFactory() {
  return defaultIterableDiffers;
}

function _keyValueDiffersFactory() {
  return defaultKeyValueDiffers;
}

function _localeFactory(locale) {
  locale = locale || getGlobalLocale();

  if (ivyEnabled) {
    setLocaleId(locale);
  }

  return locale;
}
/**
 * Work out the locale from the potential global properties.
 *
 * * Closure Compiler: use `goog.LOCALE`.
 * * Ivy enabled: use `$localize.locale`
 */


function getGlobalLocale() {
  if (typeof ngI18nClosureMode !== 'undefined' && ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {
    // * The default `goog.LOCALE` value is `en`, while Angular used `en-US`.
    // * In order to preserve backwards compatibility, we use Angular default value over
    //   Closure Compiler's one.
    return goog.LOCALE;
  } else {
    // KEEP `typeof $localize !== 'undefined' && $localize.locale` IN SYNC WITH THE LOCALIZE
    // COMPILE-TIME INLINER.
    //
    // * During compile time inlining of translations the expression will be replaced
    //   with a string literal that is the current locale. Other forms of this expression are not
    //   guaranteed to be replaced.
    //
    // * During runtime translation evaluation, the developer is required to set `$localize.locale`
    //   if required, or just to provide their own `LOCALE_ID` provider.
    return ivyEnabled && typeof $localize !== 'undefined' && $localize.locale || DEFAULT_LOCALE_ID;
  }
}

var ɵ0$f = USD_CURRENCY_CODE;
/**
 * A built-in [dependency injection token](guide/glossary#di-token)
 * that is used to configure the root injector for bootstrapping.
 */

var APPLICATION_MODULE_PROVIDERS = [{
  provide: ApplicationRef,
  useClass: ApplicationRef,
  deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]
}, {
  provide: SCHEDULER,
  deps: [NgZone],
  useFactory: zoneSchedulerFactory
}, {
  provide: ApplicationInitStatus,
  useClass: ApplicationInitStatus,
  deps: [[/*@__PURE__*/new Optional(), APP_INITIALIZER]]
}, {
  provide: Compiler,
  useClass: Compiler,
  deps: []
}, APP_ID_RANDOM_PROVIDER, {
  provide: IterableDiffers,
  useFactory: _iterableDiffersFactory,
  deps: []
}, {
  provide: KeyValueDiffers,
  useFactory: _keyValueDiffersFactory,
  deps: []
}, {
  provide: LOCALE_ID$1,
  useFactory: _localeFactory,
  deps: [[/*@__PURE__*/new Inject(LOCALE_ID$1), /*@__PURE__*/new Optional(), /*@__PURE__*/new SkipSelf()]]
}, {
  provide: DEFAULT_CURRENCY_CODE,
  useValue: ɵ0$f
}];
/**
 * Schedule work at next available slot.
 *
 * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped
 * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.
 * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.
 *
 * @param ngZone NgZone to use for scheduling.
 */

function zoneSchedulerFactory(ngZone) {
  var queue = [];
  ngZone.onStable.subscribe(function () {
    while (queue.length) {
      queue.pop()();
    }
  });
  return function (fn) {
    queue.push(fn);
  };
}

var ApplicationModule = /*@__PURE__*/function () {
  var ApplicationModule = // Inject ApplicationRef to make it eager...
  function ApplicationModule(appRef) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, ApplicationModule);
  };

  ApplicationModule.ɵmod = /*@__PURE__*/ɵɵdefineNgModule({
    type: ApplicationModule
  });
  ApplicationModule.ɵinj = /*@__PURE__*/ɵɵdefineInjector({
    factory: function ApplicationModule_Factory(t) {
      return new (t || ApplicationModule)(ɵɵinject(ApplicationRef));
    },
    providers: APPLICATION_MODULE_PROVIDERS
  });
  return ApplicationModule;
}();
/*@__PURE__*/

/*@__PURE__*/


(function () {
  setClassMetadata(ApplicationModule, [{
    type: NgModule,
    args: [{
      providers: APPLICATION_MODULE_PROVIDERS
    }]
  }], function () {
    return [{
      type: ApplicationRef
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {
  flags |= 1
  /* TypeElement */
  ;

  var _splitMatchedQueriesD2 = splitMatchedQueriesDsl(matchedQueriesDsl),
      matchedQueries = _splitMatchedQueriesD2.matchedQueries,
      references = _splitMatchedQueriesD2.references,
      matchedQueryIds = _splitMatchedQueriesD2.matchedQueryIds;

  var template = templateFactory ? resolveDefinition(templateFactory) : null;
  return {
    // will bet set by the view definition
    nodeIndex: -1,
    parent: null,
    renderParent: null,
    bindingIndex: -1,
    outputIndex: -1,
    // regular values
    flags: flags,
    checkIndex: -1,
    childFlags: 0,
    directChildFlags: 0,
    childMatchedQueries: 0,
    matchedQueries: matchedQueries,
    matchedQueryIds: matchedQueryIds,
    references: references,
    ngContentIndex: ngContentIndex,
    childCount: childCount,
    bindings: [],
    bindingFlags: 0,
    outputs: [],
    element: {
      ns: null,
      name: null,
      attrs: null,
      template: template,
      componentProvider: null,
      componentView: null,
      componentRendererType: null,
      publicProviders: null,
      allProviders: null,
      handleEvent: handleEvent || NOOP
    },
    provider: null,
    text: null,
    query: null,
    ngContent: null
  };
}

function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName) {
  var fixedAttrs = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];
  var bindings = arguments.length > 7 ? arguments[7] : undefined;
  var outputs = arguments.length > 8 ? arguments[8] : undefined;
  var handleEvent = arguments.length > 9 ? arguments[9] : undefined;
  var componentView = arguments.length > 10 ? arguments[10] : undefined;
  var componentRendererType = arguments.length > 11 ? arguments[11] : undefined;

  if (!handleEvent) {
    handleEvent = NOOP;
  }

  var _splitMatchedQueriesD3 = splitMatchedQueriesDsl(matchedQueriesDsl),
      matchedQueries = _splitMatchedQueriesD3.matchedQueries,
      references = _splitMatchedQueriesD3.references,
      matchedQueryIds = _splitMatchedQueriesD3.matchedQueryIds;

  var ns = null;
  var name = null;

  if (namespaceAndName) {
    var _splitNamespace = splitNamespace(namespaceAndName);

    var _splitNamespace2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(_splitNamespace, 2);

    ns = _splitNamespace2[0];
    name = _splitNamespace2[1];
  }

  bindings = bindings || [];
  var bindingDefs = [];

  for (var i = 0; i < bindings.length; i++) {
    var _bindings$i = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(bindings[i], 3),
        bindingFlags = _bindings$i[0],
        _namespaceAndName = _bindings$i[1],
        suffixOrSecurityContext = _bindings$i[2];

    var _splitNamespace3 = splitNamespace(_namespaceAndName),
        _splitNamespace4 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(_splitNamespace3, 2),
        _ns = _splitNamespace4[0],
        _name = _splitNamespace4[1];

    var securityContext = undefined;
    var suffix = undefined;

    switch (bindingFlags & 15
    /* Types */
    ) {
      case 4
      /* TypeElementStyle */
      :
        suffix = suffixOrSecurityContext;
        break;

      case 1
      /* TypeElementAttribute */
      :
      case 8
      /* TypeProperty */
      :
        securityContext = suffixOrSecurityContext;
        break;
    }

    bindingDefs[i] = {
      flags: bindingFlags,
      ns: _ns,
      name: _name,
      nonMinifiedName: _name,
      securityContext: securityContext,
      suffix: suffix
    };
  }

  outputs = outputs || [];
  var outputDefs = [];

  for (var _i10 = 0; _i10 < outputs.length; _i10++) {
    var _outputs$_i = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(outputs[_i10], 2),
        target = _outputs$_i[0],
        eventName = _outputs$_i[1];

    outputDefs[_i10] = {
      type: 0
      /* ElementOutput */
      ,
      target: target,
      eventName: eventName,
      propName: null
    };
  }

  fixedAttrs = fixedAttrs || [];
  var attrs = fixedAttrs.map(function (_ref4) {
    var _ref5 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(_ref4, 2),
        namespaceAndName = _ref5[0],
        value = _ref5[1];

    var _splitNamespace5 = splitNamespace(namespaceAndName),
        _splitNamespace6 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(_splitNamespace5, 2),
        ns = _splitNamespace6[0],
        name = _splitNamespace6[1];

    return [ns, name, value];
  });
  componentRendererType = resolveRendererType2(componentRendererType);

  if (componentView) {
    flags |= 33554432
    /* ComponentView */
    ;
  }

  flags |= 1
  /* TypeElement */
  ;
  return {
    // will bet set by the view definition
    nodeIndex: -1,
    parent: null,
    renderParent: null,
    bindingIndex: -1,
    outputIndex: -1,
    // regular values
    checkIndex: checkIndex,
    flags: flags,
    childFlags: 0,
    directChildFlags: 0,
    childMatchedQueries: 0,
    matchedQueries: matchedQueries,
    matchedQueryIds: matchedQueryIds,
    references: references,
    ngContentIndex: ngContentIndex,
    childCount: childCount,
    bindings: bindingDefs,
    bindingFlags: calcBindingFlags(bindingDefs),
    outputs: outputDefs,
    element: {
      ns: ns,
      name: name,
      attrs: attrs,
      template: null,
      // will bet set by the view definition
      componentProvider: null,
      componentView: componentView || null,
      componentRendererType: componentRendererType,
      publicProviders: null,
      allProviders: null,
      handleEvent: handleEvent || NOOP
    },
    provider: null,
    text: null,
    query: null,
    ngContent: null
  };
}

function createElement(view, renderHost, def) {
  var elDef = def.element;
  var rootSelectorOrNode = view.root.selectorOrNode;
  var renderer = view.renderer;
  var el;

  if (view.parent || !rootSelectorOrNode) {
    if (elDef.name) {
      el = renderer.createElement(elDef.name, elDef.ns);
    } else {
      el = renderer.createComment('');
    }

    var parentEl = getParentRenderElement(view, renderHost, def);

    if (parentEl) {
      renderer.appendChild(parentEl, el);
    }
  } else {
    // when using native Shadow DOM, do not clear the root element contents to allow slot projection
    var preserveContent = !!elDef.componentRendererType && elDef.componentRendererType.encapsulation === ViewEncapsulation$1.ShadowDom;
    el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);
  }

  if (elDef.attrs) {
    for (var i = 0; i < elDef.attrs.length; i++) {
      var _elDef$attrs$i = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(elDef.attrs[i], 3),
          ns = _elDef$attrs$i[0],
          name = _elDef$attrs$i[1],
          value = _elDef$attrs$i[2];

      renderer.setAttribute(el, name, value, ns);
    }
  }

  return el;
}

function listenToElementOutputs(view, compView, def, el) {
  for (var i = 0; i < def.outputs.length; i++) {
    var output = def.outputs[i];
    var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));
    var listenTarget = output.target;
    var listenerView = view;

    if (output.target === 'component') {
      listenTarget = null;
      listenerView = compView;
    }

    var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);
    view.disposables[def.outputIndex + i] = disposable;
  }
}

function renderEventHandlerClosure(view, index, eventName) {
  return function (event) {
    return dispatchEvent(view, index, eventName, event);
  };
}

function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {
  var bindLen = def.bindings.length;
  var changed = false;
  if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0)) changed = true;
  if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1)) changed = true;
  if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2)) changed = true;
  if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3)) changed = true;
  if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4)) changed = true;
  if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5)) changed = true;
  if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6)) changed = true;
  if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7)) changed = true;
  if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8)) changed = true;
  if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9)) changed = true;
  return changed;
}

function checkAndUpdateElementDynamic(view, def, values) {
  var changed = false;

  for (var i = 0; i < values.length; i++) {
    if (checkAndUpdateElementValue(view, def, i, values[i])) changed = true;
  }

  return changed;
}

function checkAndUpdateElementValue(view, def, bindingIdx, value) {
  if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {
    return false;
  }

  var binding = def.bindings[bindingIdx];
  var elData = asElementData(view, def.nodeIndex);
  var renderNode = elData.renderElement;
  var name = binding.name;

  switch (binding.flags & 15
  /* Types */
  ) {
    case 1
    /* TypeElementAttribute */
    :
      setElementAttribute$1(view, binding, renderNode, binding.ns, name, value);
      break;

    case 2
    /* TypeElementClass */
    :
      setElementClass(view, renderNode, name, value);
      break;

    case 4
    /* TypeElementStyle */
    :
      setElementStyle(view, binding, renderNode, name, value);
      break;

    case 8
    /* TypeProperty */
    :
      var bindView = def.flags & 33554432
      /* ComponentView */
      && binding.flags & 32
      /* SyntheticHostProperty */
      ? elData.componentView : view;
      setElementProperty(bindView, binding, renderNode, name, value);
      break;
  }

  return true;
}

function setElementAttribute$1(view, binding, renderNode, ns, name, value) {
  var securityContext = binding.securityContext;
  var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;
  renderValue = renderValue != null ? renderValue.toString() : null;
  var renderer = view.renderer;

  if (value != null) {
    renderer.setAttribute(renderNode, name, renderValue, ns);
  } else {
    renderer.removeAttribute(renderNode, name, ns);
  }
}

function setElementClass(view, renderNode, name, value) {
  var renderer = view.renderer;

  if (value) {
    renderer.addClass(renderNode, name);
  } else {
    renderer.removeClass(renderNode, name);
  }
}

function setElementStyle(view, binding, renderNode, name, value) {
  var renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, value);

  if (renderValue != null) {
    renderValue = renderValue.toString();
    var unit = binding.suffix;

    if (unit != null) {
      renderValue = renderValue + unit;
    }
  } else {
    renderValue = null;
  }

  var renderer = view.renderer;

  if (renderValue != null) {
    renderer.setStyle(renderNode, name, renderValue);
  } else {
    renderer.removeStyle(renderNode, name);
  }
}

function setElementProperty(view, binding, renderNode, name, value) {
  var securityContext = binding.securityContext;
  var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;
  view.renderer.setProperty(renderNode, name, renderValue);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function queryDef(flags, id, bindings) {
  var bindingDefs = [];

  for (var propName in bindings) {
    var bindingType = bindings[propName];
    bindingDefs.push({
      propName: propName,
      bindingType: bindingType
    });
  }

  return {
    // will bet set by the view definition
    nodeIndex: -1,
    parent: null,
    renderParent: null,
    bindingIndex: -1,
    outputIndex: -1,
    // regular values
    // TODO(vicb): check
    checkIndex: -1,
    flags: flags,
    childFlags: 0,
    directChildFlags: 0,
    childMatchedQueries: 0,
    ngContentIndex: -1,
    matchedQueries: {},
    matchedQueryIds: 0,
    references: {},
    childCount: 0,
    bindings: [],
    bindingFlags: 0,
    outputs: [],
    element: null,
    provider: null,
    text: null,
    query: {
      id: id,
      filterId: filterQueryId(id),
      bindings: bindingDefs
    },
    ngContent: null
  };
}

function createQuery() {
  return new QueryList();
}

function dirtyParentQueries(view) {
  var queryIds = view.def.nodeMatchedQueries;

  while (view.parent && isEmbeddedView(view)) {
    var tplDef = view.parentNodeDef;
    view = view.parent; // content queries

    var end = tplDef.nodeIndex + tplDef.childCount;

    for (var i = 0; i <= end; i++) {
      var nodeDef = view.def.nodes[i];

      if (nodeDef.flags & 67108864
      /* TypeContentQuery */
      && nodeDef.flags & 536870912
      /* DynamicQuery */
      && (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {
        asQueryList(view, i).setDirty();
      }

      if (nodeDef.flags & 1
      /* TypeElement */
      && i + nodeDef.childCount < tplDef.nodeIndex || !(nodeDef.childFlags & 67108864
      /* TypeContentQuery */
      ) || !(nodeDef.childFlags & 536870912
      /* DynamicQuery */
      )) {
        // skip elements that don't contain the template element or no query.
        i += nodeDef.childCount;
      }
    }
  } // view queries


  if (view.def.nodeFlags & 134217728
  /* TypeViewQuery */
  ) {
      for (var _i11 = 0; _i11 < view.def.nodes.length; _i11++) {
        var _nodeDef = view.def.nodes[_i11];

        if (_nodeDef.flags & 134217728
        /* TypeViewQuery */
        && _nodeDef.flags & 536870912
        /* DynamicQuery */
        ) {
          asQueryList(view, _i11).setDirty();
        } // only visit the root nodes


        _i11 += _nodeDef.childCount;
      }
    }
}

function checkAndUpdateQuery(view, nodeDef) {
  var queryList = asQueryList(view, nodeDef.nodeIndex);

  if (!queryList.dirty) {
    return;
  }

  var directiveInstance;
  var newValues = undefined;

  if (nodeDef.flags & 67108864
  /* TypeContentQuery */
  ) {
      var _elementDef = nodeDef.parent.parent;
      newValues = calcQueryValues(view, _elementDef.nodeIndex, _elementDef.nodeIndex + _elementDef.childCount, nodeDef.query, []);
      directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;
    } else if (nodeDef.flags & 134217728
  /* TypeViewQuery */
  ) {
      newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);
      directiveInstance = view.component;
    }

  queryList.reset(newValues);
  var bindings = nodeDef.query.bindings;
  var notify = false;

  for (var i = 0; i < bindings.length; i++) {
    var binding = bindings[i];
    var boundValue = void 0;

    switch (binding.bindingType) {
      case 0
      /* First */
      :
        boundValue = queryList.first;
        break;

      case 1
      /* All */
      :
        boundValue = queryList;
        notify = true;
        break;
    }

    directiveInstance[binding.propName] = boundValue;
  }

  if (notify) {
    queryList.notifyOnChanges();
  }
}

function calcQueryValues(view, startIndex, endIndex, queryDef, values) {
  for (var i = startIndex; i <= endIndex; i++) {
    var nodeDef = view.def.nodes[i];
    var valueType = nodeDef.matchedQueries[queryDef.id];

    if (valueType != null) {
      values.push(getQueryValue(view, nodeDef, valueType));
    }

    if (nodeDef.flags & 1
    /* TypeElement */
    && nodeDef.element.template && (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) === queryDef.filterId) {
      var elementData = asElementData(view, i); // check embedded views that were attached at the place of their template,
      // but process child nodes first if some match the query (see issue #16568)

      if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {
        calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);
        i += nodeDef.childCount;
      }

      if (nodeDef.flags & 16777216
      /* EmbeddedViews */
      ) {
          var embeddedViews = elementData.viewContainer._embeddedViews;

          for (var k = 0; k < embeddedViews.length; k++) {
            var embeddedView = embeddedViews[k];
            var dvc = declaredViewContainer(embeddedView);

            if (dvc && dvc === elementData) {
              calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);
            }
          }
        }

      var projectedViews = elementData.template._projectedViews;

      if (projectedViews) {
        for (var _k = 0; _k < projectedViews.length; _k++) {
          var projectedView = projectedViews[_k];
          calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);
        }
      }
    }

    if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {
      // if no child matches the query, skip the children.
      i += nodeDef.childCount;
    }
  }

  return values;
}

function getQueryValue(view, nodeDef, queryValueType) {
  if (queryValueType != null) {
    // a match
    switch (queryValueType) {
      case 1
      /* RenderElement */
      :
        return asElementData(view, nodeDef.nodeIndex).renderElement;

      case 0
      /* ElementRef */
      :
        return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);

      case 2
      /* TemplateRef */
      :
        return asElementData(view, nodeDef.nodeIndex).template;

      case 3
      /* ViewContainerRef */
      :
        return asElementData(view, nodeDef.nodeIndex).viewContainer;

      case 4
      /* Provider */
      :
        return asProviderData(view, nodeDef.nodeIndex).instance;
    }
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function ngContentDef(ngContentIndex, index) {
  return {
    // will bet set by the view definition
    nodeIndex: -1,
    parent: null,
    renderParent: null,
    bindingIndex: -1,
    outputIndex: -1,
    // regular values
    checkIndex: -1,
    flags: 8
    /* TypeNgContent */
    ,
    childFlags: 0,
    directChildFlags: 0,
    childMatchedQueries: 0,
    matchedQueries: {},
    matchedQueryIds: 0,
    references: {},
    ngContentIndex: ngContentIndex,
    childCount: 0,
    bindings: [],
    bindingFlags: 0,
    outputs: [],
    element: null,
    provider: null,
    text: null,
    query: null,
    ngContent: {
      index: index
    }
  };
}

function appendNgContent(view, renderHost, def) {
  var parentEl = getParentRenderElement(view, renderHost, def);

  if (!parentEl) {
    // Nothing to do if there is no parent element.
    return;
  }

  var ngContentIndex = def.ngContent.index;
  visitProjectedRenderNodes(view, ngContentIndex, 1
  /* AppendChild */
  , parentEl, null, undefined);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function purePipeDef(checkIndex, argCount) {
  // argCount + 1 to include the pipe as first arg
  return _pureExpressionDef(128
  /* TypePurePipe */
  , checkIndex, newArray(argCount + 1));
}

function pureArrayDef(checkIndex, argCount) {
  return _pureExpressionDef(32
  /* TypePureArray */
  , checkIndex, newArray(argCount));
}

function pureObjectDef(checkIndex, propToIndex) {
  var keys = Object.keys(propToIndex);
  var nbKeys = keys.length;
  var propertyNames = [];

  for (var i = 0; i < nbKeys; i++) {
    var key = keys[i];
    var index = propToIndex[key];
    propertyNames.push(key);
  }

  return _pureExpressionDef(64
  /* TypePureObject */
  , checkIndex, propertyNames);
}

function _pureExpressionDef(flags, checkIndex, propertyNames) {
  var bindings = [];

  for (var i = 0; i < propertyNames.length; i++) {
    var prop = propertyNames[i];
    bindings.push({
      flags: 8
      /* TypeProperty */
      ,
      name: prop,
      ns: null,
      nonMinifiedName: prop,
      securityContext: null,
      suffix: null
    });
  }

  return {
    // will bet set by the view definition
    nodeIndex: -1,
    parent: null,
    renderParent: null,
    bindingIndex: -1,
    outputIndex: -1,
    // regular values
    checkIndex: checkIndex,
    flags: flags,
    childFlags: 0,
    directChildFlags: 0,
    childMatchedQueries: 0,
    matchedQueries: {},
    matchedQueryIds: 0,
    references: {},
    ngContentIndex: -1,
    childCount: 0,
    bindings: bindings,
    bindingFlags: calcBindingFlags(bindings),
    outputs: [],
    element: null,
    provider: null,
    text: null,
    query: null,
    ngContent: null
  };
}

function createPureExpression(view, def) {
  return {
    value: undefined
  };
}

function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {
  var bindings = def.bindings;
  var changed = false;
  var bindLen = bindings.length;
  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;
  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;
  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;
  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;
  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;
  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;
  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;
  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;
  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;
  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;

  if (changed) {
    var data = asPureExpressionData(view, def.nodeIndex);
    var value;

    switch (def.flags & 201347067
    /* Types */
    ) {
      case 32
      /* TypePureArray */
      :
        value = [];
        if (bindLen > 0) value.push(v0);
        if (bindLen > 1) value.push(v1);
        if (bindLen > 2) value.push(v2);
        if (bindLen > 3) value.push(v3);
        if (bindLen > 4) value.push(v4);
        if (bindLen > 5) value.push(v5);
        if (bindLen > 6) value.push(v6);
        if (bindLen > 7) value.push(v7);
        if (bindLen > 8) value.push(v8);
        if (bindLen > 9) value.push(v9);
        break;

      case 64
      /* TypePureObject */
      :
        value = {};
        if (bindLen > 0) value[bindings[0].name] = v0;
        if (bindLen > 1) value[bindings[1].name] = v1;
        if (bindLen > 2) value[bindings[2].name] = v2;
        if (bindLen > 3) value[bindings[3].name] = v3;
        if (bindLen > 4) value[bindings[4].name] = v4;
        if (bindLen > 5) value[bindings[5].name] = v5;
        if (bindLen > 6) value[bindings[6].name] = v6;
        if (bindLen > 7) value[bindings[7].name] = v7;
        if (bindLen > 8) value[bindings[8].name] = v8;
        if (bindLen > 9) value[bindings[9].name] = v9;
        break;

      case 128
      /* TypePurePipe */
      :
        var pipe = v0;

        switch (bindLen) {
          case 1:
            value = pipe.transform(v0);
            break;

          case 2:
            value = pipe.transform(v1);
            break;

          case 3:
            value = pipe.transform(v1, v2);
            break;

          case 4:
            value = pipe.transform(v1, v2, v3);
            break;

          case 5:
            value = pipe.transform(v1, v2, v3, v4);
            break;

          case 6:
            value = pipe.transform(v1, v2, v3, v4, v5);
            break;

          case 7:
            value = pipe.transform(v1, v2, v3, v4, v5, v6);
            break;

          case 8:
            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);
            break;

          case 9:
            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);
            break;

          case 10:
            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);
            break;
        }

        break;
    }

    data.value = value;
  }

  return changed;
}

function checkAndUpdatePureExpressionDynamic(view, def, values) {
  var bindings = def.bindings;
  var changed = false;

  for (var i = 0; i < values.length; i++) {
    // Note: We need to loop over all values, so that
    // the old values are updates as well!
    if (checkAndUpdateBinding(view, def, i, values[i])) {
      changed = true;
    }
  }

  if (changed) {
    var data = asPureExpressionData(view, def.nodeIndex);
    var value;

    switch (def.flags & 201347067
    /* Types */
    ) {
      case 32
      /* TypePureArray */
      :
        value = values;
        break;

      case 64
      /* TypePureObject */
      :
        value = {};

        for (var _i12 = 0; _i12 < values.length; _i12++) {
          value[bindings[_i12].name] = values[_i12];
        }

        break;

      case 128
      /* TypePurePipe */
      :
        var pipe = values[0];
        var params = values.slice(1);
        value = pipe.transform.apply(pipe, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(params));
        break;
    }

    data.value = value;
  }

  return changed;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function textDef(checkIndex, ngContentIndex, staticText) {
  var bindings = [];

  for (var i = 1; i < staticText.length; i++) {
    bindings[i - 1] = {
      flags: 8
      /* TypeProperty */
      ,
      name: null,
      ns: null,
      nonMinifiedName: null,
      securityContext: null,
      suffix: staticText[i]
    };
  }

  return {
    // will bet set by the view definition
    nodeIndex: -1,
    parent: null,
    renderParent: null,
    bindingIndex: -1,
    outputIndex: -1,
    // regular values
    checkIndex: checkIndex,
    flags: 2
    /* TypeText */
    ,
    childFlags: 0,
    directChildFlags: 0,
    childMatchedQueries: 0,
    matchedQueries: {},
    matchedQueryIds: 0,
    references: {},
    ngContentIndex: ngContentIndex,
    childCount: 0,
    bindings: bindings,
    bindingFlags: 8
    /* TypeProperty */
    ,
    outputs: [],
    element: null,
    provider: null,
    text: {
      prefix: staticText[0]
    },
    query: null,
    ngContent: null
  };
}

function createText(view, renderHost, def) {
  var renderNode;
  var renderer = view.renderer;
  renderNode = renderer.createText(def.text.prefix);
  var parentEl = getParentRenderElement(view, renderHost, def);

  if (parentEl) {
    renderer.appendChild(parentEl, renderNode);
  }

  return {
    renderText: renderNode
  };
}

function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {
  var changed = false;
  var bindings = def.bindings;
  var bindLen = bindings.length;
  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;
  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;
  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;
  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;
  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;
  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;
  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;
  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;
  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;
  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;

  if (changed) {
    var value = def.text.prefix;
    if (bindLen > 0) value += _addInterpolationPart(v0, bindings[0]);
    if (bindLen > 1) value += _addInterpolationPart(v1, bindings[1]);
    if (bindLen > 2) value += _addInterpolationPart(v2, bindings[2]);
    if (bindLen > 3) value += _addInterpolationPart(v3, bindings[3]);
    if (bindLen > 4) value += _addInterpolationPart(v4, bindings[4]);
    if (bindLen > 5) value += _addInterpolationPart(v5, bindings[5]);
    if (bindLen > 6) value += _addInterpolationPart(v6, bindings[6]);
    if (bindLen > 7) value += _addInterpolationPart(v7, bindings[7]);
    if (bindLen > 8) value += _addInterpolationPart(v8, bindings[8]);
    if (bindLen > 9) value += _addInterpolationPart(v9, bindings[9]);
    var _renderNode = asTextData(view, def.nodeIndex).renderText;
    view.renderer.setValue(_renderNode, value);
  }

  return changed;
}

function checkAndUpdateTextDynamic(view, def, values) {
  var bindings = def.bindings;
  var changed = false;

  for (var i = 0; i < values.length; i++) {
    // Note: We need to loop over all values, so that
    // the old values are updates as well!
    if (checkAndUpdateBinding(view, def, i, values[i])) {
      changed = true;
    }
  }

  if (changed) {
    var value = '';

    for (var _i13 = 0; _i13 < values.length; _i13++) {
      value = value + _addInterpolationPart(values[_i13], bindings[_i13]);
    }

    value = def.text.prefix + value;
    var _renderNode2 = asTextData(view, def.nodeIndex).renderText;
    view.renderer.setValue(_renderNode2, value);
  }

  return changed;
}

function _addInterpolationPart(value, binding) {
  var valueStr = value != null ? value.toString() : '';
  return valueStr + binding.suffix;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function viewDef(flags, nodes, updateDirectives, updateRenderer) {
  // clone nodes and set auto calculated values
  var viewBindingCount = 0;
  var viewDisposableCount = 0;
  var viewNodeFlags = 0;
  var viewRootNodeFlags = 0;
  var viewMatchedQueries = 0;
  var currentParent = null;
  var currentRenderParent = null;
  var currentElementHasPublicProviders = false;
  var currentElementHasPrivateProviders = false;
  var lastRenderRootNode = null;

  for (var i = 0; i < nodes.length; i++) {
    var node = nodes[i];
    node.nodeIndex = i;
    node.parent = currentParent;
    node.bindingIndex = viewBindingCount;
    node.outputIndex = viewDisposableCount;
    node.renderParent = currentRenderParent;
    viewNodeFlags |= node.flags;
    viewMatchedQueries |= node.matchedQueryIds;

    if (node.element) {
      var elDef = node.element;
      elDef.publicProviders = currentParent ? currentParent.element.publicProviders : Object.create(null);
      elDef.allProviders = elDef.publicProviders; // Note: We assume that all providers of an element are before any child element!

      currentElementHasPublicProviders = false;
      currentElementHasPrivateProviders = false;

      if (node.element.template) {
        viewMatchedQueries |= node.element.template.nodeMatchedQueries;
      }
    }

    validateNode(currentParent, node, nodes.length);
    viewBindingCount += node.bindings.length;
    viewDisposableCount += node.outputs.length;

    if (!currentRenderParent && node.flags & 3
    /* CatRenderNode */
    ) {
      lastRenderRootNode = node;
    }

    if (node.flags & 20224
    /* CatProvider */
    ) {
        if (!currentElementHasPublicProviders) {
          currentElementHasPublicProviders = true; // Use prototypical inheritance to not get O(n^2) complexity...

          currentParent.element.publicProviders = Object.create(currentParent.element.publicProviders);
          currentParent.element.allProviders = currentParent.element.publicProviders;
        }

        var isPrivateService = (node.flags & 8192
        /* PrivateProvider */
        ) !== 0;
        var isComponent = (node.flags & 32768
        /* Component */
        ) !== 0;

        if (!isPrivateService || isComponent) {
          currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;
        } else {
          if (!currentElementHasPrivateProviders) {
            currentElementHasPrivateProviders = true; // Use prototypical inheritance to not get O(n^2) complexity...

            currentParent.element.allProviders = Object.create(currentParent.element.publicProviders);
          }

          currentParent.element.allProviders[tokenKey(node.provider.token)] = node;
        }

        if (isComponent) {
          currentParent.element.componentProvider = node;
        }
      }

    if (currentParent) {
      currentParent.childFlags |= node.flags;
      currentParent.directChildFlags |= node.flags;
      currentParent.childMatchedQueries |= node.matchedQueryIds;

      if (node.element && node.element.template) {
        currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;
      }
    } else {
      viewRootNodeFlags |= node.flags;
    }

    if (node.childCount > 0) {
      currentParent = node;

      if (!isNgContainer(node)) {
        currentRenderParent = node;
      }
    } else {
      // When the current node has no children, check if it is the last children of its parent.
      // When it is, propagate the flags up.
      // The loop is required because an element could be the last transitive children of several
      // elements. We loop to either the root or the highest opened element (= with remaining
      // children)
      while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {
        var newParent = currentParent.parent;

        if (newParent) {
          newParent.childFlags |= currentParent.childFlags;
          newParent.childMatchedQueries |= currentParent.childMatchedQueries;
        }

        currentParent = newParent; // We also need to update the render parent & account for ng-container

        if (currentParent && isNgContainer(currentParent)) {
          currentRenderParent = currentParent.renderParent;
        } else {
          currentRenderParent = currentParent;
        }
      }
    }
  }

  var handleEvent = function handleEvent(view, nodeIndex, eventName, event) {
    return nodes[nodeIndex].element.handleEvent(view, eventName, event);
  };

  return {
    // Will be filled later...
    factory: null,
    nodeFlags: viewNodeFlags,
    rootNodeFlags: viewRootNodeFlags,
    nodeMatchedQueries: viewMatchedQueries,
    flags: flags,
    nodes: nodes,
    updateDirectives: updateDirectives || NOOP,
    updateRenderer: updateRenderer || NOOP,
    handleEvent: handleEvent,
    bindingCount: viewBindingCount,
    outputCount: viewDisposableCount,
    lastRenderRootNode: lastRenderRootNode
  };
}

function isNgContainer(node) {
  return (node.flags & 1
  /* TypeElement */
  ) !== 0 && node.element.name === null;
}

function validateNode(parent, node, nodeCount) {
  var template = node.element && node.element.template;

  if (template) {
    if (!template.lastRenderRootNode) {
      throw new Error("Illegal State: Embedded templates without nodes are not allowed!");
    }

    if (template.lastRenderRootNode && template.lastRenderRootNode.flags & 16777216
    /* EmbeddedViews */
    ) {
        throw new Error("Illegal State: Last root node of a template can't have embedded views, at index ".concat(node.nodeIndex, "!"));
      }
  }

  if (node.flags & 20224
  /* CatProvider */
  ) {
      var parentFlags = parent ? parent.flags : 0;

      if ((parentFlags & 1
      /* TypeElement */
      ) === 0) {
        throw new Error("Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ".concat(node.nodeIndex, "!"));
      }
    }

  if (node.query) {
    if (node.flags & 67108864
    /* TypeContentQuery */
    && (!parent || (parent.flags & 16384
    /* TypeDirective */
    ) === 0)) {
      throw new Error("Illegal State: Content Query nodes need to be children of directives, at index ".concat(node.nodeIndex, "!"));
    }

    if (node.flags & 134217728
    /* TypeViewQuery */
    && parent) {
      throw new Error("Illegal State: View Query nodes have to be top level nodes, at index ".concat(node.nodeIndex, "!"));
    }
  }

  if (node.childCount) {
    var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;

    if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {
      throw new Error("Illegal State: childCount of node leads outside of parent, at index ".concat(node.nodeIndex, "!"));
    }
  }
}

function createEmbeddedView(parent, anchorDef, viewDef, context) {
  // embedded views are seen as siblings to the anchor, so we need
  // to get the parent of the anchor and use it as parentIndex.
  var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);
  initView(view, parent.component, context);
  createViewNodes(view);
  return view;
}

function createRootView(root, def, context) {
  var view = createView(root, root.renderer, null, null, def);
  initView(view, context, context);
  createViewNodes(view);
  return view;
}

function createComponentView(parentView, nodeDef, viewDef, hostElement) {
  var rendererType = nodeDef.element.componentRendererType;
  var compRenderer;

  if (!rendererType) {
    compRenderer = parentView.root.renderer;
  } else {
    compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);
  }

  return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);
}

function createView(root, renderer, parent, parentNodeDef, def) {
  var nodes = new Array(def.nodes.length);
  var disposables = def.outputCount ? new Array(def.outputCount) : null;
  var view = {
    def: def,
    parent: parent,
    viewContainerParent: null,
    parentNodeDef: parentNodeDef,
    context: null,
    component: null,
    nodes: nodes,
    state: 13
    /* CatInit */
    ,
    root: root,
    renderer: renderer,
    oldValues: new Array(def.bindingCount),
    disposables: disposables,
    initIndex: -1
  };
  return view;
}

function initView(view, component, context) {
  view.component = component;
  view.context = context;
}

function createViewNodes(view) {
  var renderHost;

  if (isComponentView(view)) {
    var hostDef = view.parentNodeDef;
    renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;
  }

  var def = view.def;
  var nodes = view.nodes;

  for (var i = 0; i < def.nodes.length; i++) {
    var nodeDef = def.nodes[i];
    Services.setCurrentNode(view, i);
    var nodeData = void 0;

    switch (nodeDef.flags & 201347067
    /* Types */
    ) {
      case 1
      /* TypeElement */
      :
        var el = createElement(view, renderHost, nodeDef);
        var componentView = undefined;

        if (nodeDef.flags & 33554432
        /* ComponentView */
        ) {
            var compViewDef = resolveDefinition(nodeDef.element.componentView);
            componentView = Services.createComponentView(view, nodeDef, compViewDef, el);
          }

        listenToElementOutputs(view, componentView, nodeDef, el);
        nodeData = {
          renderElement: el,
          componentView: componentView,
          viewContainer: null,
          template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined
        };

        if (nodeDef.flags & 16777216
        /* EmbeddedViews */
        ) {
            nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);
          }

        break;

      case 2
      /* TypeText */
      :
        nodeData = createText(view, renderHost, nodeDef);
        break;

      case 512
      /* TypeClassProvider */
      :
      case 1024
      /* TypeFactoryProvider */
      :
      case 2048
      /* TypeUseExistingProvider */
      :
      case 256
      /* TypeValueProvider */
      :
        {
          nodeData = nodes[i];

          if (!nodeData && !(nodeDef.flags & 4096
          /* LazyProvider */
          )) {
            var instance = createProviderInstance(view, nodeDef);
            nodeData = {
              instance: instance
            };
          }

          break;
        }

      case 16
      /* TypePipe */
      :
        {
          var _instance = createPipeInstance(view, nodeDef);

          nodeData = {
            instance: _instance
          };
          break;
        }

      case 16384
      /* TypeDirective */
      :
        {
          nodeData = nodes[i];

          if (!nodeData) {
            var _instance2 = createDirectiveInstance(view, nodeDef);

            nodeData = {
              instance: _instance2
            };
          }

          if (nodeDef.flags & 32768
          /* Component */
          ) {
              var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;
              initView(compView, nodeData.instance, nodeData.instance);
            }

          break;
        }

      case 32
      /* TypePureArray */
      :
      case 64
      /* TypePureObject */
      :
      case 128
      /* TypePurePipe */
      :
        nodeData = createPureExpression(view, nodeDef);
        break;

      case 67108864
      /* TypeContentQuery */
      :
      case 134217728
      /* TypeViewQuery */
      :
        nodeData = createQuery();
        break;

      case 8
      /* TypeNgContent */
      :
        appendNgContent(view, renderHost, nodeDef); // no runtime data needed for NgContent...

        nodeData = undefined;
        break;
    }

    nodes[i] = nodeData;
  } // Create the ViewData.nodes of component views after we created everything else,
  // so that e.g. ng-content works


  execComponentViewsAction(view, ViewAction.CreateViewNodes); // fill static content and view queries

  execQueriesAction(view, 67108864
  /* TypeContentQuery */
  | 134217728
  /* TypeViewQuery */
  , 268435456
  /* StaticQuery */
  , 0
  /* CheckAndUpdate */
  );
}

function checkNoChangesView(view) {
  markProjectedViewsForCheck(view);
  Services.updateDirectives(view, 1
  /* CheckNoChanges */
  );
  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);
  Services.updateRenderer(view, 1
  /* CheckNoChanges */
  );
  execComponentViewsAction(view, ViewAction.CheckNoChanges); // Note: We don't check queries for changes as we didn't do this in v2.x.
  // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.

  view.state &= ~(64
  /* CheckProjectedViews */
  | 32
  /* CheckProjectedView */
  );
}

function checkAndUpdateView(view) {
  if (view.state & 1
  /* BeforeFirstCheck */
  ) {
      view.state &= ~1
      /* BeforeFirstCheck */
      ;
      view.state |= 2
      /* FirstCheck */
      ;
    } else {
    view.state &= ~2
    /* FirstCheck */
    ;
  }

  shiftInitState(view, 0
  /* InitState_BeforeInit */
  , 256
  /* InitState_CallingOnInit */
  );
  markProjectedViewsForCheck(view);
  Services.updateDirectives(view, 0
  /* CheckAndUpdate */
  );
  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);
  execQueriesAction(view, 67108864
  /* TypeContentQuery */
  , 536870912
  /* DynamicQuery */
  , 0
  /* CheckAndUpdate */
  );
  var callInit = shiftInitState(view, 256
  /* InitState_CallingOnInit */
  , 512
  /* InitState_CallingAfterContentInit */
  );
  callLifecycleHooksChildrenFirst(view, 2097152
  /* AfterContentChecked */
  | (callInit ? 1048576
  /* AfterContentInit */
  : 0));
  Services.updateRenderer(view, 0
  /* CheckAndUpdate */
  );
  execComponentViewsAction(view, ViewAction.CheckAndUpdate);
  execQueriesAction(view, 134217728
  /* TypeViewQuery */
  , 536870912
  /* DynamicQuery */
  , 0
  /* CheckAndUpdate */
  );
  callInit = shiftInitState(view, 512
  /* InitState_CallingAfterContentInit */
  , 768
  /* InitState_CallingAfterViewInit */
  );
  callLifecycleHooksChildrenFirst(view, 8388608
  /* AfterViewChecked */
  | (callInit ? 4194304
  /* AfterViewInit */
  : 0));

  if (view.def.flags & 2
  /* OnPush */
  ) {
      view.state &= ~8
      /* ChecksEnabled */
      ;
    }

  view.state &= ~(64
  /* CheckProjectedViews */
  | 32
  /* CheckProjectedView */
  );
  shiftInitState(view, 768
  /* InitState_CallingAfterViewInit */
  , 1024
  /* InitState_AfterInit */
  );
}

function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {
  if (argStyle === 0
  /* Inline */
  ) {
      return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
    } else {
    return checkAndUpdateNodeDynamic(view, nodeDef, v0);
  }
}

function markProjectedViewsForCheck(view) {
  var def = view.def;

  if (!(def.nodeFlags & 4
  /* ProjectedTemplate */
  )) {
    return;
  }

  for (var i = 0; i < def.nodes.length; i++) {
    var nodeDef = def.nodes[i];

    if (nodeDef.flags & 4
    /* ProjectedTemplate */
    ) {
        var projectedViews = asElementData(view, i).template._projectedViews;

        if (projectedViews) {
          for (var _i14 = 0; _i14 < projectedViews.length; _i14++) {
            var projectedView = projectedViews[_i14];
            projectedView.state |= 32
            /* CheckProjectedView */
            ;
            markParentViewsForCheckProjectedViews(projectedView, view);
          }
        }
      } else if ((nodeDef.childFlags & 4
    /* ProjectedTemplate */
    ) === 0) {
      // a parent with leafs
      // no child is a component,
      // then skip the children
      i += nodeDef.childCount;
    }
  }
}

function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {
  switch (nodeDef.flags & 201347067
  /* Types */
  ) {
    case 1
    /* TypeElement */
    :
      return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);

    case 2
    /* TypeText */
    :
      return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);

    case 16384
    /* TypeDirective */
    :
      return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);

    case 32
    /* TypePureArray */
    :
    case 64
    /* TypePureObject */
    :
    case 128
    /* TypePurePipe */
    :
      return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);

    default:
      throw 'unreachable';
  }
}

function checkAndUpdateNodeDynamic(view, nodeDef, values) {
  switch (nodeDef.flags & 201347067
  /* Types */
  ) {
    case 1
    /* TypeElement */
    :
      return checkAndUpdateElementDynamic(view, nodeDef, values);

    case 2
    /* TypeText */
    :
      return checkAndUpdateTextDynamic(view, nodeDef, values);

    case 16384
    /* TypeDirective */
    :
      return checkAndUpdateDirectiveDynamic(view, nodeDef, values);

    case 32
    /* TypePureArray */
    :
    case 64
    /* TypePureObject */
    :
    case 128
    /* TypePurePipe */
    :
      return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);

    default:
      throw 'unreachable';
  }
}

function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {
  if (argStyle === 0
  /* Inline */
  ) {
      checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
    } else {
    checkNoChangesNodeDynamic(view, nodeDef, v0);
  } // Returning false is ok here as we would have thrown in case of a change.


  return false;
}

function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {
  var bindLen = nodeDef.bindings.length;
  if (bindLen > 0) checkBindingNoChanges(view, nodeDef, 0, v0);
  if (bindLen > 1) checkBindingNoChanges(view, nodeDef, 1, v1);
  if (bindLen > 2) checkBindingNoChanges(view, nodeDef, 2, v2);
  if (bindLen > 3) checkBindingNoChanges(view, nodeDef, 3, v3);
  if (bindLen > 4) checkBindingNoChanges(view, nodeDef, 4, v4);
  if (bindLen > 5) checkBindingNoChanges(view, nodeDef, 5, v5);
  if (bindLen > 6) checkBindingNoChanges(view, nodeDef, 6, v6);
  if (bindLen > 7) checkBindingNoChanges(view, nodeDef, 7, v7);
  if (bindLen > 8) checkBindingNoChanges(view, nodeDef, 8, v8);
  if (bindLen > 9) checkBindingNoChanges(view, nodeDef, 9, v9);
}

function checkNoChangesNodeDynamic(view, nodeDef, values) {
  for (var i = 0; i < values.length; i++) {
    checkBindingNoChanges(view, nodeDef, i, values[i]);
  }
}
/**
 * Workaround https://github.com/angular/tsickle/issues/497
 * @suppress {misplacedTypeAnnotation}
 */


function checkNoChangesQuery(view, nodeDef) {
  var queryList = asQueryList(view, nodeDef.nodeIndex);

  if (queryList.dirty) {
    throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), "Query ".concat(nodeDef.query.id, " not dirty"), "Query ".concat(nodeDef.query.id, " dirty"), (view.state & 1
    /* BeforeFirstCheck */
    ) !== 0);
  }
}

function destroyView(view) {
  if (view.state & 128
  /* Destroyed */
  ) {
      return;
    }

  execEmbeddedViewsAction(view, ViewAction.Destroy);
  execComponentViewsAction(view, ViewAction.Destroy);
  callLifecycleHooksChildrenFirst(view, 131072
  /* OnDestroy */
  );

  if (view.disposables) {
    for (var i = 0; i < view.disposables.length; i++) {
      view.disposables[i]();
    }
  }

  detachProjectedView(view);

  if (view.renderer.destroyNode) {
    destroyViewNodes(view);
  }

  if (isComponentView(view)) {
    view.renderer.destroy();
  }

  view.state |= 128
  /* Destroyed */
  ;
}

function destroyViewNodes(view) {
  var len = view.def.nodes.length;

  for (var i = 0; i < len; i++) {
    var def = view.def.nodes[i];

    if (def.flags & 1
    /* TypeElement */
    ) {
        view.renderer.destroyNode(asElementData(view, i).renderElement);
      } else if (def.flags & 2
    /* TypeText */
    ) {
        view.renderer.destroyNode(asTextData(view, i).renderText);
      } else if (def.flags & 67108864
    /* TypeContentQuery */
    || def.flags & 134217728
    /* TypeViewQuery */
    ) {
        asQueryList(view, i).destroy();
      }
  }
}

var ViewAction = /*@__PURE__*/function (ViewAction) {
  ViewAction[ViewAction["CreateViewNodes"] = 0] = "CreateViewNodes";
  ViewAction[ViewAction["CheckNoChanges"] = 1] = "CheckNoChanges";
  ViewAction[ViewAction["CheckNoChangesProjectedViews"] = 2] = "CheckNoChangesProjectedViews";
  ViewAction[ViewAction["CheckAndUpdate"] = 3] = "CheckAndUpdate";
  ViewAction[ViewAction["CheckAndUpdateProjectedViews"] = 4] = "CheckAndUpdateProjectedViews";
  ViewAction[ViewAction["Destroy"] = 5] = "Destroy";
  return ViewAction;
}({});

function execComponentViewsAction(view, action) {
  var def = view.def;

  if (!(def.nodeFlags & 33554432
  /* ComponentView */
  )) {
    return;
  }

  for (var i = 0; i < def.nodes.length; i++) {
    var nodeDef = def.nodes[i];

    if (nodeDef.flags & 33554432
    /* ComponentView */
    ) {
        // a leaf
        callViewAction(asElementData(view, i).componentView, action);
      } else if ((nodeDef.childFlags & 33554432
    /* ComponentView */
    ) === 0) {
      // a parent with leafs
      // no child is a component,
      // then skip the children
      i += nodeDef.childCount;
    }
  }
}

function execEmbeddedViewsAction(view, action) {
  var def = view.def;

  if (!(def.nodeFlags & 16777216
  /* EmbeddedViews */
  )) {
    return;
  }

  for (var i = 0; i < def.nodes.length; i++) {
    var nodeDef = def.nodes[i];

    if (nodeDef.flags & 16777216
    /* EmbeddedViews */
    ) {
        // a leaf
        var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;

        for (var k = 0; k < embeddedViews.length; k++) {
          callViewAction(embeddedViews[k], action);
        }
      } else if ((nodeDef.childFlags & 16777216
    /* EmbeddedViews */
    ) === 0) {
      // a parent with leafs
      // no child is a component,
      // then skip the children
      i += nodeDef.childCount;
    }
  }
}

function callViewAction(view, action) {
  var viewState = view.state;

  switch (action) {
    case ViewAction.CheckNoChanges:
      if ((viewState & 128
      /* Destroyed */
      ) === 0) {
        if ((viewState & 12
        /* CatDetectChanges */
        ) === 12
        /* CatDetectChanges */
        ) {
            checkNoChangesView(view);
          } else if (viewState & 64
        /* CheckProjectedViews */
        ) {
            execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);
          }
      }

      break;

    case ViewAction.CheckNoChangesProjectedViews:
      if ((viewState & 128
      /* Destroyed */
      ) === 0) {
        if (viewState & 32
        /* CheckProjectedView */
        ) {
            checkNoChangesView(view);
          } else if (viewState & 64
        /* CheckProjectedViews */
        ) {
            execProjectedViewsAction(view, action);
          }
      }

      break;

    case ViewAction.CheckAndUpdate:
      if ((viewState & 128
      /* Destroyed */
      ) === 0) {
        if ((viewState & 12
        /* CatDetectChanges */
        ) === 12
        /* CatDetectChanges */
        ) {
            checkAndUpdateView(view);
          } else if (viewState & 64
        /* CheckProjectedViews */
        ) {
            execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);
          }
      }

      break;

    case ViewAction.CheckAndUpdateProjectedViews:
      if ((viewState & 128
      /* Destroyed */
      ) === 0) {
        if (viewState & 32
        /* CheckProjectedView */
        ) {
            checkAndUpdateView(view);
          } else if (viewState & 64
        /* CheckProjectedViews */
        ) {
            execProjectedViewsAction(view, action);
          }
      }

      break;

    case ViewAction.Destroy:
      // Note: destroyView recurses over all views,
      // so we don't need to special case projected views here.
      destroyView(view);
      break;

    case ViewAction.CreateViewNodes:
      createViewNodes(view);
      break;
  }
}

function execProjectedViewsAction(view, action) {
  execEmbeddedViewsAction(view, action);
  execComponentViewsAction(view, action);
}

function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {
  if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {
    return;
  }

  var nodeCount = view.def.nodes.length;

  for (var i = 0; i < nodeCount; i++) {
    var nodeDef = view.def.nodes[i];

    if (nodeDef.flags & queryFlags && nodeDef.flags & staticDynamicQueryFlag) {
      Services.setCurrentNode(view, nodeDef.nodeIndex);

      switch (checkType) {
        case 0
        /* CheckAndUpdate */
        :
          checkAndUpdateQuery(view, nodeDef);
          break;

        case 1
        /* CheckNoChanges */
        :
          checkNoChangesQuery(view, nodeDef);
          break;
      }
    }

    if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {
      // no child has a matching query
      // then skip the children
      i += nodeDef.childCount;
    }
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var initialized = false;

function initServicesIfNeeded() {
  if (initialized) {
    return;
  }

  initialized = true;
  var services = isDevMode() ? createDebugServices() : createProdServices();
  Services.setCurrentNode = services.setCurrentNode;
  Services.createRootView = services.createRootView;
  Services.createEmbeddedView = services.createEmbeddedView;
  Services.createComponentView = services.createComponentView;
  Services.createNgModuleRef = services.createNgModuleRef;
  Services.overrideProvider = services.overrideProvider;
  Services.overrideComponentView = services.overrideComponentView;
  Services.clearOverrides = services.clearOverrides;
  Services.checkAndUpdateView = services.checkAndUpdateView;
  Services.checkNoChangesView = services.checkNoChangesView;
  Services.destroyView = services.destroyView;
  Services.resolveDep = resolveDep;
  Services.createDebugContext = services.createDebugContext;
  Services.handleEvent = services.handleEvent;
  Services.updateDirectives = services.updateDirectives;
  Services.updateRenderer = services.updateRenderer;
  Services.dirtyParentQueries = dirtyParentQueries;
}

function createProdServices() {
  return {
    setCurrentNode: function setCurrentNode() {},
    createRootView: createProdRootView,
    createEmbeddedView: createEmbeddedView,
    createComponentView: createComponentView,
    createNgModuleRef: createNgModuleRef,
    overrideProvider: NOOP,
    overrideComponentView: NOOP,
    clearOverrides: NOOP,
    checkAndUpdateView: checkAndUpdateView,
    checkNoChangesView: checkNoChangesView,
    destroyView: destroyView,
    createDebugContext: function createDebugContext(view, nodeIndex) {
      return new DebugContext_(view, nodeIndex);
    },
    handleEvent: function handleEvent(view, nodeIndex, eventName, event) {
      return view.def.handleEvent(view, nodeIndex, eventName, event);
    },
    updateDirectives: function updateDirectives(view, checkType) {
      return view.def.updateDirectives(checkType === 0
      /* CheckAndUpdate */
      ? prodCheckAndUpdateNode : prodCheckNoChangesNode, view);
    },
    updateRenderer: function updateRenderer(view, checkType) {
      return view.def.updateRenderer(checkType === 0
      /* CheckAndUpdate */
      ? prodCheckAndUpdateNode : prodCheckNoChangesNode, view);
    }
  };
}

function createDebugServices() {
  return {
    setCurrentNode: debugSetCurrentNode,
    createRootView: debugCreateRootView,
    createEmbeddedView: debugCreateEmbeddedView,
    createComponentView: debugCreateComponentView,
    createNgModuleRef: debugCreateNgModuleRef,
    overrideProvider: debugOverrideProvider,
    overrideComponentView: debugOverrideComponentView,
    clearOverrides: debugClearOverrides,
    checkAndUpdateView: debugCheckAndUpdateView,
    checkNoChangesView: debugCheckNoChangesView,
    destroyView: debugDestroyView,
    createDebugContext: function createDebugContext(view, nodeIndex) {
      return new DebugContext_(view, nodeIndex);
    },
    handleEvent: debugHandleEvent,
    updateDirectives: debugUpdateDirectives,
    updateRenderer: debugUpdateRenderer
  };
}

function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {
  var rendererFactory = ngModule.injector.get(RendererFactory2);
  return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);
}

function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {
  var rendererFactory = ngModule.injector.get(RendererFactory2);
  var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);
  var defWithOverride = applyProviderOverridesToView(def);
  return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);
}

function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {
  var sanitizer = ngModule.injector.get(Sanitizer);
  var errorHandler = ngModule.injector.get(ErrorHandler);
  var renderer = rendererFactory.createRenderer(null, null);
  return {
    ngModule: ngModule,
    injector: elInjector,
    projectableNodes: projectableNodes,
    selectorOrNode: rootSelectorOrNode,
    sanitizer: sanitizer,
    rendererFactory: rendererFactory,
    renderer: renderer,
    errorHandler: errorHandler
  };
}

function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {
  var defWithOverride = applyProviderOverridesToView(viewDef);
  return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);
}

function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {
  var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);

  if (overrideComponentView) {
    viewDef = overrideComponentView;
  } else {
    viewDef = applyProviderOverridesToView(viewDef);
  }

  return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);
}

function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {
  var defWithOverride = applyProviderOverridesToNgModule(def);
  return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);
}

var providerOverrides = /*@__PURE__*/new Map();
var providerOverridesWithScope = /*@__PURE__*/new Map();
var viewDefOverrides = /*@__PURE__*/new Map();

function debugOverrideProvider(override) {
  providerOverrides.set(override.token, override);
  var injectableDef;

  if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) && typeof injectableDef.providedIn === 'function') {
    providerOverridesWithScope.set(override.token, override);
  }
}

function debugOverrideComponentView(comp, compFactory) {
  var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));
  var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);
  viewDefOverrides.set(comp, compViewDef);
}

function debugClearOverrides() {
  providerOverrides.clear();
  providerOverridesWithScope.clear();
  viewDefOverrides.clear();
} // Notes about the algorithm:
// 1) Locate the providers of an element and check if one of them was overwritten
// 2) Change the providers of that element
//
// We only create new datastructures if we need to, to keep perf impact
// reasonable.


function applyProviderOverridesToView(def) {
  if (providerOverrides.size === 0) {
    return def;
  }

  var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);

  if (elementIndicesWithOverwrittenProviders.length === 0) {
    return def;
  } // clone the whole view definition,
  // as it maintains references between the nodes that are hard to update.


  def = def.factory(function () {
    return NOOP;
  });

  for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {
    applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);
  }

  return def;

  function findElementIndicesWithOverwrittenProviders(def) {
    var elIndicesWithOverwrittenProviders = [];
    var lastElementDef = null;

    for (var _i15 = 0; _i15 < def.nodes.length; _i15++) {
      var nodeDef = def.nodes[_i15];

      if (nodeDef.flags & 1
      /* TypeElement */
      ) {
          lastElementDef = nodeDef;
        }

      if (lastElementDef && nodeDef.flags & 3840
      /* CatProviderNoDirective */
      && providerOverrides.has(nodeDef.provider.token)) {
        elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);
        lastElementDef = null;
      }
    }

    return elIndicesWithOverwrittenProviders;
  }

  function applyProviderOverridesToElement(viewDef, elIndex) {
    for (var _i16 = elIndex + 1; _i16 < viewDef.nodes.length; _i16++) {
      var nodeDef = viewDef.nodes[_i16];

      if (nodeDef.flags & 1
      /* TypeElement */
      ) {
          // stop at the next element
          return;
        }

      if (nodeDef.flags & 3840
      /* CatProviderNoDirective */
      ) {
          var provider = nodeDef.provider;
          var override = providerOverrides.get(provider.token);

          if (override) {
            nodeDef.flags = nodeDef.flags & ~3840
            /* CatProviderNoDirective */
            | override.flags;
            provider.deps = splitDepsDsl(override.deps);
            provider.value = override.value;
          }
        }
    }
  }
} // Notes about the algorithm:
// We only create new datastructures if we need to, to keep perf impact
// reasonable.


function applyProviderOverridesToNgModule(def) {
  var _calcHasOverrides = calcHasOverrides(def),
      hasOverrides = _calcHasOverrides.hasOverrides,
      hasDeprecatedOverrides = _calcHasOverrides.hasDeprecatedOverrides;

  if (!hasOverrides) {
    return def;
  } // clone the whole view definition,
  // as it maintains references between the nodes that are hard to update.


  def = def.factory(function () {
    return NOOP;
  });
  applyProviderOverrides(def);
  return def;

  function calcHasOverrides(def) {
    var hasOverrides = false;
    var hasDeprecatedOverrides = false;

    if (providerOverrides.size === 0) {
      return {
        hasOverrides: hasOverrides,
        hasDeprecatedOverrides: hasDeprecatedOverrides
      };
    }

    def.providers.forEach(function (node) {
      var override = providerOverrides.get(node.token);

      if (node.flags & 3840
      /* CatProviderNoDirective */
      && override) {
        hasOverrides = true;
        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;
      }
    });
    def.modules.forEach(function (module) {
      providerOverridesWithScope.forEach(function (override, token) {
        if (getInjectableDef(token).providedIn === module) {
          hasOverrides = true;
          hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;
        }
      });
    });
    return {
      hasOverrides: hasOverrides,
      hasDeprecatedOverrides: hasDeprecatedOverrides
    };
  }

  function applyProviderOverrides(def) {
    for (var i = 0; i < def.providers.length; i++) {
      var provider = def.providers[i];

      if (hasDeprecatedOverrides) {
        // We had a bug where me made
        // all providers lazy. Keep this logic behind a flag
        // for migrating existing users.
        provider.flags |= 4096
        /* LazyProvider */
        ;
      }

      var override = providerOverrides.get(provider.token);

      if (override) {
        provider.flags = provider.flags & ~3840
        /* CatProviderNoDirective */
        | override.flags;
        provider.deps = splitDepsDsl(override.deps);
        provider.value = override.value;
      }
    }

    if (providerOverridesWithScope.size > 0) {
      var moduleSet = new Set(def.modules);
      providerOverridesWithScope.forEach(function (override, token) {
        if (moduleSet.has(getInjectableDef(token).providedIn)) {
          var _provider = {
            token: token,
            flags: override.flags | (hasDeprecatedOverrides ? 4096
            /* LazyProvider */
            : 0
            /* None */
            ),
            deps: splitDepsDsl(override.deps),
            value: override.value,
            index: def.providers.length
          };
          def.providers.push(_provider);
          def.providersByKey[tokenKey(token)] = _provider;
        }
      });
    }
  }
}

function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {
  var nodeDef = view.def.nodes[checkIndex];
  checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  return nodeDef.flags & 224
  /* CatPureExpression */
  ? asPureExpressionData(view, checkIndex).value : undefined;
}

function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {
  var nodeDef = view.def.nodes[checkIndex];
  checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  return nodeDef.flags & 224
  /* CatPureExpression */
  ? asPureExpressionData(view, checkIndex).value : undefined;
}

function debugCheckAndUpdateView(view) {
  return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);
}

function debugCheckNoChangesView(view) {
  return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);
}

function debugDestroyView(view) {
  return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);
}

var DebugAction = /*@__PURE__*/function (DebugAction) {
  DebugAction[DebugAction["create"] = 0] = "create";
  DebugAction[DebugAction["detectChanges"] = 1] = "detectChanges";
  DebugAction[DebugAction["checkNoChanges"] = 2] = "checkNoChanges";
  DebugAction[DebugAction["destroy"] = 3] = "destroy";
  DebugAction[DebugAction["handleEvent"] = 4] = "handleEvent";
  return DebugAction;
}({});

var _currentAction;

var _currentView;

var _currentNodeIndex;

function debugSetCurrentNode(view, nodeIndex) {
  _currentView = view;
  _currentNodeIndex = nodeIndex;
}

function debugHandleEvent(view, nodeIndex, eventName, event) {
  debugSetCurrentNode(view, nodeIndex);
  return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);
}

function debugUpdateDirectives(view, checkType) {
  if (view.state & 128
  /* Destroyed */
  ) {
      throw viewDestroyedError(DebugAction[_currentAction]);
    }

  debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));
  return view.def.updateDirectives(debugCheckDirectivesFn, view);

  function debugCheckDirectivesFn(view, nodeIndex, argStyle) {
    var nodeDef = view.def.nodes[nodeIndex];

    for (var _len11 = arguments.length, values = new Array(_len11 > 3 ? _len11 - 3 : 0), _key11 = 3; _key11 < _len11; _key11++) {
      values[_key11 - 3] = arguments[_key11];
    }

    if (checkType === 0
    /* CheckAndUpdate */
    ) {
        debugCheckAndUpdateNode(view, nodeDef, argStyle, values);
      } else {
      debugCheckNoChangesNode(view, nodeDef, argStyle, values);
    }

    if (nodeDef.flags & 16384
    /* TypeDirective */
    ) {
        debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));
      }

    return nodeDef.flags & 224
    /* CatPureExpression */
    ? asPureExpressionData(view, nodeDef.nodeIndex).value : undefined;
  }
}

function debugUpdateRenderer(view, checkType) {
  if (view.state & 128
  /* Destroyed */
  ) {
      throw viewDestroyedError(DebugAction[_currentAction]);
    }

  debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));
  return view.def.updateRenderer(debugCheckRenderNodeFn, view);

  function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {
    var nodeDef = view.def.nodes[nodeIndex];

    for (var _len12 = arguments.length, values = new Array(_len12 > 3 ? _len12 - 3 : 0), _key12 = 3; _key12 < _len12; _key12++) {
      values[_key12 - 3] = arguments[_key12];
    }

    if (checkType === 0
    /* CheckAndUpdate */
    ) {
        debugCheckAndUpdateNode(view, nodeDef, argStyle, values);
      } else {
      debugCheckNoChangesNode(view, nodeDef, argStyle, values);
    }

    if (nodeDef.flags & 3
    /* CatRenderNode */
    ) {
        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));
      }

    return nodeDef.flags & 224
    /* CatPureExpression */
    ? asPureExpressionData(view, nodeDef.nodeIndex).value : undefined;
  }
}

function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {
  var changed = checkAndUpdateNode.apply(void 0, [view, nodeDef, argStyle].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(givenValues)));

  if (changed) {
    var values = argStyle === 1
    /* Dynamic */
    ? givenValues[0] : givenValues;

    if (nodeDef.flags & 16384
    /* TypeDirective */
    ) {
        var bindingValues = {};

        for (var i = 0; i < nodeDef.bindings.length; i++) {
          var binding = nodeDef.bindings[i];
          var value = values[i];

          if (binding.flags & 8
          /* TypeProperty */
          ) {
              bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] = normalizeDebugBindingValue(value);
            }
        }

        var elDef = nodeDef.parent;
        var el = asElementData(view, elDef.nodeIndex).renderElement;

        if (!elDef.element.name) {
          // a comment.
          view.renderer.setValue(el, "bindings=".concat(JSON.stringify(bindingValues, null, 2)));
        } else {
          // a regular element.
          for (var attr in bindingValues) {
            var _value3 = bindingValues[attr];

            if (_value3 != null) {
              view.renderer.setAttribute(el, attr, _value3);
            } else {
              view.renderer.removeAttribute(el, attr);
            }
          }
        }
      }
  }
}

function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {
  checkNoChangesNode.apply(void 0, [view, nodeDef, argStyle].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_10__["default"])(values)));
}

function nextDirectiveWithBinding(view, nodeIndex) {
  for (var i = nodeIndex; i < view.def.nodes.length; i++) {
    var nodeDef = view.def.nodes[i];

    if (nodeDef.flags & 16384
    /* TypeDirective */
    && nodeDef.bindings && nodeDef.bindings.length) {
      return i;
    }
  }

  return null;
}

function nextRenderNodeWithBinding(view, nodeIndex) {
  for (var i = nodeIndex; i < view.def.nodes.length; i++) {
    var nodeDef = view.def.nodes[i];

    if (nodeDef.flags & 3
    /* CatRenderNode */
    && nodeDef.bindings && nodeDef.bindings.length) {
      return i;
    }
  }

  return null;
}

var DebugContext_ = /*#__PURE__*/function () {
  function DebugContext_(view, nodeIndex) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, DebugContext_);

    this.view = view;
    this.nodeIndex = nodeIndex;

    if (nodeIndex == null) {
      this.nodeIndex = nodeIndex = 0;
    }

    this.nodeDef = view.def.nodes[nodeIndex];
    var elDef = this.nodeDef;
    var elView = view;

    while (elDef && (elDef.flags & 1
    /* TypeElement */
    ) === 0) {
      elDef = elDef.parent;
    }

    if (!elDef) {
      while (!elDef && elView) {
        elDef = viewParentEl(elView);
        elView = elView.parent;
      }
    }

    this.elDef = elDef;
    this.elView = elView;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(DebugContext_, [{
    key: "logError",
    value: function logError(console) {
      for (var _len13 = arguments.length, values = new Array(_len13 > 1 ? _len13 - 1 : 0), _key13 = 1; _key13 < _len13; _key13++) {
        values[_key13 - 1] = arguments[_key13];
      }

      var logViewDef;
      var logNodeIndex;

      if (this.nodeDef.flags & 2
      /* TypeText */
      ) {
          logViewDef = this.view.def;
          logNodeIndex = this.nodeDef.nodeIndex;
        } else {
        logViewDef = this.elView.def;
        logNodeIndex = this.elDef.nodeIndex;
      } // Note: we only generate a log function for text and element nodes
      // to make the generated code as small as possible.


      var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);
      var currRenderNodeIndex = -1;

      var nodeLogger = function nodeLogger() {
        currRenderNodeIndex++;

        if (currRenderNodeIndex === renderNodeIndex) {
          var _console$error;

          return (_console$error = console.error).bind.apply(_console$error, [console].concat(values));
        } else {
          return NOOP;
        }
      };

      logViewDef.factory(nodeLogger);

      if (currRenderNodeIndex < renderNodeIndex) {
        console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');
        console.error.apply(console, values);
      }
    }
  }, {
    key: "elOrCompView",
    get: function get() {
      // Has to be done lazily as we use the DebugContext also during creation of elements...
      return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;
    }
  }, {
    key: "injector",
    get: function get() {
      return createInjector$1(this.elView, this.elDef);
    }
  }, {
    key: "component",
    get: function get() {
      return this.elOrCompView.component;
    }
  }, {
    key: "context",
    get: function get() {
      return this.elOrCompView.context;
    }
  }, {
    key: "providerTokens",
    get: function get() {
      var tokens = [];

      if (this.elDef) {
        for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {
          var childDef = this.elView.def.nodes[i];

          if (childDef.flags & 20224
          /* CatProvider */
          ) {
              tokens.push(childDef.provider.token);
            }

          i += childDef.childCount;
        }
      }

      return tokens;
    }
  }, {
    key: "references",
    get: function get() {
      var references = {};

      if (this.elDef) {
        collectReferences(this.elView, this.elDef, references);

        for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {
          var childDef = this.elView.def.nodes[i];

          if (childDef.flags & 20224
          /* CatProvider */
          ) {
              collectReferences(this.elView, childDef, references);
            }

          i += childDef.childCount;
        }
      }

      return references;
    }
  }, {
    key: "componentRenderElement",
    get: function get() {
      var elData = findHostElement(this.elOrCompView);
      return elData ? elData.renderElement : undefined;
    }
  }, {
    key: "renderNode",
    get: function get() {
      return this.nodeDef.flags & 2
      /* TypeText */
      ? renderNode(this.view, this.nodeDef) : renderNode(this.elView, this.elDef);
    }
  }]);

  return DebugContext_;
}();

function getRenderNodeIndex(viewDef, nodeIndex) {
  var renderNodeIndex = -1;

  for (var i = 0; i <= nodeIndex; i++) {
    var nodeDef = viewDef.nodes[i];

    if (nodeDef.flags & 3
    /* CatRenderNode */
    ) {
        renderNodeIndex++;
      }
  }

  return renderNodeIndex;
}

function findHostElement(view) {
  while (view && !isComponentView(view)) {
    view = view.parent;
  }

  if (view.parent) {
    return asElementData(view.parent, viewParentEl(view).nodeIndex);
  }

  return null;
}

function collectReferences(view, nodeDef, references) {
  for (var refName in nodeDef.references) {
    references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);
  }
}

function callWithDebugContext(action, fn, self, args) {
  var oldAction = _currentAction;
  var oldView = _currentView;
  var oldNodeIndex = _currentNodeIndex;

  try {
    _currentAction = action;
    var result = fn.apply(self, args);
    _currentView = oldView;
    _currentNodeIndex = oldNodeIndex;
    _currentAction = oldAction;
    return result;
  } catch (e) {
    if (isViewDebugError(e) || !_currentView) {
      throw e;
    }

    throw viewWrappedDebugError(e, getCurrentDebugContext());
  }
}

function getCurrentDebugContext() {
  return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;
}

var DebugRendererFactory2 = /*#__PURE__*/function () {
  function DebugRendererFactory2(delegate) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, DebugRendererFactory2);

    this.delegate = delegate;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(DebugRendererFactory2, [{
    key: "createRenderer",
    value: function createRenderer(element, renderData) {
      return new DebugRenderer2(this.delegate.createRenderer(element, renderData));
    }
  }, {
    key: "begin",
    value: function begin() {
      if (this.delegate.begin) {
        this.delegate.begin();
      }
    }
  }, {
    key: "end",
    value: function end() {
      if (this.delegate.end) {
        this.delegate.end();
      }
    }
  }, {
    key: "whenRenderingDone",
    value: function whenRenderingDone() {
      if (this.delegate.whenRenderingDone) {
        return this.delegate.whenRenderingDone();
      }

      return Promise.resolve(null);
    }
  }]);

  return DebugRendererFactory2;
}();

var DebugRenderer2 = /*#__PURE__*/function () {
  function DebugRenderer2(delegate) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, DebugRenderer2);

    this.delegate = delegate;
    /**
     * Factory function used to create a `DebugContext` when a node is created.
     *
     * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.
     *
     * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine
     * or a Render context.
     */

    this.debugContextFactory = getCurrentDebugContext;
    this.data = this.delegate.data;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(DebugRenderer2, [{
    key: "createDebugContext",
    value: function createDebugContext(nativeElement) {
      return this.debugContextFactory(nativeElement);
    }
  }, {
    key: "destroyNode",
    value: function destroyNode(node) {
      var debugNode = getDebugNode$1(node);
      removeDebugNodeFromIndex(debugNode);

      if (debugNode instanceof DebugNode__PRE_R3__) {
        debugNode.listeners.length = 0;
      }

      if (this.delegate.destroyNode) {
        this.delegate.destroyNode(node);
      }
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.delegate.destroy();
    }
  }, {
    key: "createElement",
    value: function createElement(name, namespace) {
      var el = this.delegate.createElement(name, namespace);
      var debugCtx = this.createDebugContext(el);

      if (debugCtx) {
        var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);
        debugEl.name = name;
        indexDebugNode(debugEl);
      }

      return el;
    }
  }, {
    key: "createComment",
    value: function createComment(value) {
      var comment = this.delegate.createComment(value);
      var debugCtx = this.createDebugContext(comment);

      if (debugCtx) {
        indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));
      }

      return comment;
    }
  }, {
    key: "createText",
    value: function createText(value) {
      var text = this.delegate.createText(value);
      var debugCtx = this.createDebugContext(text);

      if (debugCtx) {
        indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));
      }

      return text;
    }
  }, {
    key: "appendChild",
    value: function appendChild(parent, newChild) {
      var debugEl = getDebugNode$1(parent);
      var debugChildEl = getDebugNode$1(newChild);

      if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {
        debugEl.addChild(debugChildEl);
      }

      this.delegate.appendChild(parent, newChild);
    }
  }, {
    key: "insertBefore",
    value: function insertBefore(parent, newChild, refChild, isMove) {
      var debugEl = getDebugNode$1(parent);
      var debugChildEl = getDebugNode$1(newChild);
      var debugRefEl = getDebugNode$1(refChild);

      if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {
        debugEl.insertBefore(debugRefEl, debugChildEl);
      }

      this.delegate.insertBefore(parent, newChild, refChild, isMove);
    }
  }, {
    key: "removeChild",
    value: function removeChild(parent, oldChild) {
      var debugEl = getDebugNode$1(parent);
      var debugChildEl = getDebugNode$1(oldChild);

      if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {
        debugEl.removeChild(debugChildEl);
      }

      this.delegate.removeChild(parent, oldChild);
    }
  }, {
    key: "selectRootElement",
    value: function selectRootElement(selectorOrNode, preserveContent) {
      var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);
      var debugCtx = getCurrentDebugContext();

      if (debugCtx) {
        indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));
      }

      return el;
    }
  }, {
    key: "setAttribute",
    value: function setAttribute(el, name, value, namespace) {
      var debugEl = getDebugNode$1(el);

      if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {
        var fullName = namespace ? namespace + ':' + name : name;
        debugEl.attributes[fullName] = value;
      }

      this.delegate.setAttribute(el, name, value, namespace);
    }
  }, {
    key: "removeAttribute",
    value: function removeAttribute(el, name, namespace) {
      var debugEl = getDebugNode$1(el);

      if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {
        var fullName = namespace ? namespace + ':' + name : name;
        debugEl.attributes[fullName] = null;
      }

      this.delegate.removeAttribute(el, name, namespace);
    }
  }, {
    key: "addClass",
    value: function addClass(el, name) {
      var debugEl = getDebugNode$1(el);

      if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {
        debugEl.classes[name] = true;
      }

      this.delegate.addClass(el, name);
    }
  }, {
    key: "removeClass",
    value: function removeClass(el, name) {
      var debugEl = getDebugNode$1(el);

      if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {
        debugEl.classes[name] = false;
      }

      this.delegate.removeClass(el, name);
    }
  }, {
    key: "setStyle",
    value: function setStyle(el, style, value, flags) {
      var debugEl = getDebugNode$1(el);

      if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {
        debugEl.styles[style] = value;
      }

      this.delegate.setStyle(el, style, value, flags);
    }
  }, {
    key: "removeStyle",
    value: function removeStyle(el, style, flags) {
      var debugEl = getDebugNode$1(el);

      if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {
        debugEl.styles[style] = null;
      }

      this.delegate.removeStyle(el, style, flags);
    }
  }, {
    key: "setProperty",
    value: function setProperty(el, name, value) {
      var debugEl = getDebugNode$1(el);

      if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {
        debugEl.properties[name] = value;
      }

      this.delegate.setProperty(el, name, value);
    }
  }, {
    key: "listen",
    value: function listen(target, eventName, callback) {
      if (typeof target !== 'string') {
        var debugEl = getDebugNode$1(target);

        if (debugEl) {
          debugEl.listeners.push(new DebugEventListener(eventName, callback));
        }
      }

      return this.delegate.listen(target, eventName, callback);
    }
  }, {
    key: "parentNode",
    value: function parentNode(node) {
      return this.delegate.parentNode(node);
    }
  }, {
    key: "nextSibling",
    value: function nextSibling(node) {
      return this.delegate.nextSibling(node);
    }
  }, {
    key: "setValue",
    value: function setValue(node, value) {
      return this.delegate.setValue(node, value);
    }
  }]);

  return DebugRenderer2;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function overrideProvider(override) {
  initServicesIfNeeded();
  return Services.overrideProvider(override);
}

function overrideComponentView(comp, componentFactory) {
  initServicesIfNeeded();
  return Services.overrideComponentView(comp, componentFactory);
}

function clearOverrides() {
  initServicesIfNeeded();
  return Services.clearOverrides();
} // Attention: this function is called as top level function.
// Putting any logic in here will destroy closure tree shaking!


function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {
  return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);
}

function cloneNgModuleDefinition(def) {
  var providers = Array.from(def.providers);
  var modules = Array.from(def.modules);
  var providersByKey = {};

  for (var key in def.providersByKey) {
    providersByKey[key] = def.providersByKey[key];
  }

  return {
    factory: def.factory,
    scope: def.scope,
    providers: providers,
    modules: modules,
    providersByKey: providersByKey
  };
}

var NgModuleFactory_ = /*#__PURE__*/function (_NgModuleFactory2) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_8__["default"])(NgModuleFactory_, _NgModuleFactory2);

  var _super24 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_9__["default"])(NgModuleFactory_);

  function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {
    var _this35;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_11__["default"])(this, NgModuleFactory_);

    // Attention: this ctor is called as top level function.
    // Putting any logic in here will destroy closure tree shaking!
    _this35 = _super24.call(this);
    _this35.moduleType = moduleType;
    _this35._bootstrapComponents = _bootstrapComponents;
    _this35._ngModuleDefFactory = _ngModuleDefFactory;
    return _this35;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_12__["default"])(NgModuleFactory_, [{
    key: "create",
    value: function create(parentInjector) {
      initServicesIfNeeded(); // Clone the NgModuleDefinition so that any tree shakeable provider definition
      // added to this instance of the NgModuleRef doesn't affect the cached copy.
      // See https://github.com/angular/angular/issues/25018.

      var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));
      return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);
    }
  }]);

  return NgModuleFactory_;
}(NgModuleFactory);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// clang-format on

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


if (typeof ngDevMode !== 'undefined' && ngDevMode) {
  // This helper is to give a reasonable error message to people upgrading to v9 that have not yet
  // installed `@angular/localize` in their app.
  // tslint:disable-next-line: no-toplevel-property-access
  _global.$localize = _global.$localize || function () {
    throw new Error('It looks like your application or one of its dependencies is using i18n.\n' + 'Angular 9 introduced a global `$localize()` function that needs to be loaded.\n' + 'Please run `ng add @angular/localize` from the Angular CLI.\n' + '(For non-CLI projects, add `import \'@angular/localize/init\';` to your `polyfills.ts` file.\n' + 'For server-side rendering applications add the import to your `main.server.ts` file.)');
  };
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This file only reexports content of the `src` folder. Keep it that way.

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "foSv":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _getPrototypeOf; });
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

/***/ }),

/***/ "fp1T":
/*!********************************************!*\
  !*** ./src/app/footer/footer.component.ts ***!
  \********************************************/
/*! exports provided: FooterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FooterComponent", function() { return FooterComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");


var FooterComponent = /** @class */ /*@__PURE__*/ (function () {
    function FooterComponent() {
    }
    FooterComponent.prototype.ngOnInit = function () {
    };
    FooterComponent.ɵfac = function FooterComponent_Factory(t) { return new (t || FooterComponent)(); };
    FooterComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: FooterComponent, selectors: [["app-footer"]], decls: 4, vars: 0, consts: [[1, "container"], [1, "copyright"]], template: function FooterComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "footer");
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "div");
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            }
        }, styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb290ZXIuY29tcG9uZW50LmNzcyJ9 */"] });
    return FooterComponent;
}());




/***/ }),

/***/ "gRHU":
/*!*********************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/Observer.js ***!
  \*********************************************************/
/*! exports provided: empty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return empty; });
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ "2fFW");
/* harmony import */ var _util_hostReportError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/hostReportError */ "NJ4a");


var empty = {
  closed: true,
  next: function next(value) {},
  error: function error(err) {
    if (_config__WEBPACK_IMPORTED_MODULE_0__["config"].useDeprecatedSynchronousErrorHandling) {
      throw err;
    } else {
      Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_1__["hostReportError"])(err);
    }
  },
  complete: function complete() {}
};

/***/ }),

/***/ "gcYM":
/*!***********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/throttleTime.js ***!
  \***********************************************************************/
/*! exports provided: throttleTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throttleTime", function() { return throttleTime; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../scheduler/async */ "D0XW");
/* harmony import */ var _throttle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./throttle */ "yuhW");







function throttleTime(duration) {
  var scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _scheduler_async__WEBPACK_IMPORTED_MODULE_5__["async"];
  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _throttle__WEBPACK_IMPORTED_MODULE_6__["defaultThrottleConfig"];
  return function (source) {
    return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));
  };
}

var ThrottleTimeOperator = /*#__PURE__*/function () {
  function ThrottleTimeOperator(duration, scheduler, leading, trailing) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ThrottleTimeOperator);

    this.duration = duration;
    this.scheduler = scheduler;
    this.leading = leading;
    this.trailing = trailing;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ThrottleTimeOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));
    }
  }]);

  return ThrottleTimeOperator;
}();

var ThrottleTimeSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(ThrottleTimeSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(ThrottleTimeSubscriber);

  function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ThrottleTimeSubscriber);

    _this = _super.call(this, destination);
    _this.duration = duration;
    _this.scheduler = scheduler;
    _this.leading = leading;
    _this.trailing = trailing;
    _this._hasTrailingValue = false;
    _this._trailingValue = null;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ThrottleTimeSubscriber, [{
    key: "_next",
    value: function _next(value) {
      if (this.throttled) {
        if (this.trailing) {
          this._trailingValue = value;
          this._hasTrailingValue = true;
        }
      } else {
        this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, {
          subscriber: this
        }));

        if (this.leading) {
          this.destination.next(value);
        } else if (this.trailing) {
          this._trailingValue = value;
          this._hasTrailingValue = true;
        }
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      if (this._hasTrailingValue) {
        this.destination.next(this._trailingValue);
        this.destination.complete();
      } else {
        this.destination.complete();
      }
    }
  }, {
    key: "clearThrottle",
    value: function clearThrottle() {
      var throttled = this.throttled;

      if (throttled) {
        if (this.trailing && this._hasTrailingValue) {
          this.destination.next(this._trailingValue);
          this._trailingValue = null;
          this._hasTrailingValue = false;
        }

        throttled.unsubscribe();
        this.remove(throttled);
        this.throttled = null;
      }
    }
  }]);

  return ThrottleTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

function dispatchNext(arg) {
  var subscriber = arg.subscriber;
  subscriber.clearThrottle();
}

/***/ }),

/***/ "hKy8":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/pairs.js ***!
  \*****************************************************************/
/*! exports provided: pairs, dispatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return pairs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dispatch", function() { return dispatch; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "quSY");


function pairs(obj, scheduler) {
  if (!scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
      var keys = Object.keys(obj);

      for (var i = 0; i < keys.length && !subscriber.closed; i++) {
        var key = keys[i];

        if (obj.hasOwnProperty(key)) {
          subscriber.next([key, obj[key]]);
        }
      }

      subscriber.complete();
    });
  } else {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
      var keys = Object.keys(obj);
      var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
      subscription.add(scheduler.schedule(dispatch, 0, {
        keys: keys,
        index: 0,
        subscriber: subscriber,
        subscription: subscription,
        obj: obj
      }));
      return subscription;
    });
  }
}
function dispatch(state) {
  var keys = state.keys,
      index = state.index,
      subscriber = state.subscriber,
      subscription = state.subscription,
      obj = state.obj;

  if (!subscriber.closed) {
    if (index < keys.length) {
      var key = keys[index];
      subscriber.next([key, obj[key]]);
      subscription.add(this.schedule({
        keys: keys,
        index: index + 1,
        subscriber: subscriber,
        subscription: subscription,
        obj: obj
      }));
    } else {
      subscriber.complete();
    }
  }
}

/***/ }),

/***/ "hYta":
/*!************************************************!*\
  !*** ./src/app/admin/admin/admin.component.ts ***!
  \************************************************/
/*! exports provided: AdminComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminComponent", function() { return AdminComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "tyNb");



var AdminComponent = /** @class */ /*@__PURE__*/ (function () {
    function AdminComponent() {
    }
    AdminComponent.prototype.ngOnInit = function () {
    };
    AdminComponent.ɵfac = function AdminComponent_Factory(t) { return new (t || AdminComponent)(); };
    AdminComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: AdminComponent, selectors: [["app-admin"]], decls: 6, vars: 0, consts: [[1, "dashboard-wrap", "mtb-40"], [1, "container"], [1, "row"], [1, "col-md-12"], [1, "dash-right"]], template: function AdminComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "section", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](5, "router-outlet");
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            }
        }, directives: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterOutlet"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZG1pbi5jb21wb25lbnQuY3NzIn0= */"] });
    return AdminComponent;
}());




/***/ }),

/***/ "iKkX":
/*!*******************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduler/VirtualTimeScheduler.js ***!
  \*******************************************************************************/
/*! exports provided: VirtualTimeScheduler, VirtualAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VirtualTimeScheduler", function() { return VirtualTimeScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VirtualAction", function() { return VirtualAction; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./AsyncAction */ "3N8a");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./AsyncScheduler */ "IjjT");








var VirtualTimeScheduler = /*@__PURE__*/function () {
  var VirtualTimeScheduler = /*#__PURE__*/function (_AsyncScheduler) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(VirtualTimeScheduler, _AsyncScheduler);

    var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(VirtualTimeScheduler);

    function VirtualTimeScheduler() {
      var _this;

      var SchedulerAction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : VirtualAction;
      var maxFrames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.POSITIVE_INFINITY;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, VirtualTimeScheduler);

      _this = _super.call(this, SchedulerAction, function () {
        return _this.frame;
      });
      _this.maxFrames = maxFrames;
      _this.frame = 0;
      _this.index = -1;
      return _this;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(VirtualTimeScheduler, [{
      key: "flush",
      value: function flush() {
        var actions = this.actions,
            maxFrames = this.maxFrames;
        var error, action;

        while ((action = actions[0]) && action.delay <= maxFrames) {
          actions.shift();
          this.frame = action.delay;

          if (error = action.execute(action.state, action.delay)) {
            break;
          }
        }

        if (error) {
          while (action = actions.shift()) {
            action.unsubscribe();
          }

          throw error;
        }
      }
    }]);

    return VirtualTimeScheduler;
  }(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_7__["AsyncScheduler"]);

  VirtualTimeScheduler.frameTimeFactor = 10;
  return VirtualTimeScheduler;
}();
var VirtualAction = /*#__PURE__*/function (_AsyncAction) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(VirtualAction, _AsyncAction);

  var _super2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(VirtualAction);

  function VirtualAction(scheduler, work) {
    var _this2;

    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : scheduler.index += 1;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, VirtualAction);

    _this2 = _super2.call(this, scheduler, work);
    _this2.scheduler = scheduler;
    _this2.work = work;
    _this2.index = index;
    _this2.active = true;
    _this2.index = scheduler.index = index;
    return _this2;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(VirtualAction, [{
    key: "schedule",
    value: function schedule(state) {
      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      if (!this.id) {
        return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(VirtualAction.prototype), "schedule", this).call(this, state, delay);
      }

      this.active = false;
      var action = new VirtualAction(this.scheduler, this.work);
      this.add(action);
      return action.schedule(state, delay);
    }
  }, {
    key: "requestAsyncId",
    value: function requestAsyncId(scheduler, id) {
      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      this.delay = scheduler.frame + delay;
      var actions = scheduler.actions;
      actions.push(this);
      actions.sort(VirtualAction.sortActions);
      return true;
    }
  }, {
    key: "recycleAsyncId",
    value: function recycleAsyncId(scheduler, id) {
      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      return undefined;
    }
  }, {
    key: "_execute",
    value: function _execute(state, delay) {
      if (this.active === true) {
        return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(VirtualAction.prototype), "_execute", this).call(this, state, delay);
      }
    }
  }], [{
    key: "sortActions",
    value: function sortActions(a, b) {
      if (a.delay === b.delay) {
        if (a.index === b.index) {
          return 0;
        } else if (a.index > b.index) {
          return 1;
        } else {
          return -1;
        }
      } else if (a.delay > b.delay) {
        return 1;
      } else {
        return -1;
      }
    }
  }]);

  return VirtualAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_6__["AsyncAction"]);

/***/ }),

/***/ "itXk":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/combineLatest.js ***!
  \*************************************************************************/
/*! exports provided: combineLatest, CombineLatestOperator, CombineLatestSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return combineLatest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CombineLatestOperator", function() { return CombineLatestOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CombineLatestSubscriber", function() { return CombineLatestSubscriber; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isScheduler */ "z+Ro");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isArray */ "DH7j");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../OuterSubscriber */ "l7GE");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/subscribeToResult */ "ZUHj");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./fromArray */ "yCtX");









var NONE = {};
function combineLatest() {
  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {
    observables[_key] = arguments[_key];
  }

  var resultSelector = undefined;
  var scheduler = undefined;

  if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_4__["isScheduler"])(observables[observables.length - 1])) {
    scheduler = observables.pop();
  }

  if (typeof observables[observables.length - 1] === 'function') {
    resultSelector = observables.pop();
  }

  if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_5__["isArray"])(observables[0])) {
    observables = observables[0];
  }

  return Object(_fromArray__WEBPACK_IMPORTED_MODULE_8__["fromArray"])(observables, scheduler).lift(new CombineLatestOperator(resultSelector));
}
var CombineLatestOperator = /*#__PURE__*/function () {
  function CombineLatestOperator(resultSelector) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, CombineLatestOperator);

    this.resultSelector = resultSelector;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(CombineLatestOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));
    }
  }]);

  return CombineLatestOperator;
}();
var CombineLatestSubscriber = /*#__PURE__*/function (_OuterSubscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(CombineLatestSubscriber, _OuterSubscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(CombineLatestSubscriber);

  function CombineLatestSubscriber(destination, resultSelector) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, CombineLatestSubscriber);

    _this = _super.call(this, destination);
    _this.resultSelector = resultSelector;
    _this.active = 0;
    _this.values = [];
    _this.observables = [];
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(CombineLatestSubscriber, [{
    key: "_next",
    value: function _next(observable) {
      this.values.push(NONE);
      this.observables.push(observable);
    }
  }, {
    key: "_complete",
    value: function _complete() {
      var observables = this.observables;
      var len = observables.length;

      if (len === 0) {
        this.destination.complete();
      } else {
        this.active = len;
        this.toRespond = len;

        for (var i = 0; i < len; i++) {
          var observable = observables[i];
          this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_7__["subscribeToResult"])(this, observable, undefined, i));
        }
      }
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete(unused) {
      if ((this.active -= 1) === 0) {
        this.destination.complete();
      }
    }
  }, {
    key: "notifyNext",
    value: function notifyNext(_outerValue, innerValue, outerIndex) {
      var values = this.values;
      var oldVal = values[outerIndex];
      var toRespond = !this.toRespond ? 0 : oldVal === NONE ? --this.toRespond : this.toRespond;
      values[outerIndex] = innerValue;

      if (toRespond === 0) {
        if (this.resultSelector) {
          this._tryResultSelector(values);
        } else {
          this.destination.next(values.slice());
        }
      }
    }
  }, {
    key: "_tryResultSelector",
    value: function _tryResultSelector(values) {
      var result;

      try {
        result = this.resultSelector.apply(this, values);
      } catch (err) {
        this.destination.error(err);
        return;
      }

      this.destination.next(result);
    }
  }]);

  return CombineLatestSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_6__["OuterSubscriber"]);

/***/ }),

/***/ "jXA+":
/*!***************************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/auth/es2015/public_api.js ***!
  \***************************************************************************/
/*! exports provided: AngularFireAuth, AngularFireAuthModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth */ "aECQ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngularFireAuth", function() { return _auth__WEBPACK_IMPORTED_MODULE_0__["AngularFireAuth"]; });

/* harmony import */ var _auth_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./auth.module */ "w7Ir");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngularFireAuthModule", function() { return _auth_module__WEBPACK_IMPORTED_MODULE_1__["AngularFireAuthModule"]; });




/***/ }),

/***/ "jZKg":
/*!************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduled/scheduleArray.js ***!
  \************************************************************************/
/*! exports provided: scheduleArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduleArray", function() { return scheduleArray; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "quSY");


function scheduleArray(input, scheduler) {
  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
    var i = 0;
    sub.add(scheduler.schedule(function () {
      if (i === input.length) {
        subscriber.complete();
        return;
      }

      subscriber.next(input[i++]);

      if (!subscriber.closed) {
        sub.add(this.schedule());
      }
    }));
    return sub;
  });
}

/***/ }),

/***/ "jhN1":
/*!******************************************************************************************!*\
  !*** ./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js ***!
  \******************************************************************************************/
/*! exports provided: ɵgetDOM, BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, ɵBROWSER_SANITIZATION_PROVIDERS, ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__, ɵBrowserDomAdapter, ɵBrowserGetTestability, ɵDomEventsPlugin, ɵDomRendererFactory2, ɵDomSanitizerImpl, ɵDomSharedStylesHost, ɵELEMENT_PROBE_PROVIDERS, ɵELEMENT_PROBE_PROVIDERS__POST_R3__, ɵHAMMER_PROVIDERS__POST_R3__, ɵHammerGesturesPlugin, ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, ɵKeyEventsPlugin, ɵNAMESPACE_URIS, ɵSharedStylesHost, ɵTRANSITION_ID, ɵangular_packages_platform_browser_platform_browser_a, ɵangular_packages_platform_browser_platform_browser_b, ɵangular_packages_platform_browser_platform_browser_c, ɵangular_packages_platform_browser_platform_browser_d, ɵangular_packages_platform_browser_platform_browser_e, ɵangular_packages_platform_browser_platform_browser_f, ɵangular_packages_platform_browser_platform_browser_g, ɵangular_packages_platform_browser_platform_browser_h, ɵangular_packages_platform_browser_platform_browser_i, ɵangular_packages_platform_browser_platform_browser_j, ɵangular_packages_platform_browser_platform_browser_k, ɵangular_packages_platform_browser_platform_browser_l, ɵangular_packages_platform_browser_platform_browser_m, ɵangular_packages_platform_browser_platform_browser_n, ɵangular_packages_platform_browser_platform_browser_o, ɵescapeHtml, ɵflattenStyles, ɵinitDomAdapter, ɵshimContentAttribute, ɵshimHostAttribute */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BrowserModule", function() { return BrowserModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BrowserTransferStateModule", function() { return BrowserTransferStateModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "By", function() { return By; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DomSanitizer", function() { return DomSanitizer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EVENT_MANAGER_PLUGINS", function() { return EVENT_MANAGER_PLUGINS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventManager", function() { return EventManager; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HAMMER_GESTURE_CONFIG", function() { return HAMMER_GESTURE_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HAMMER_LOADER", function() { return HAMMER_LOADER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HammerGestureConfig", function() { return HammerGestureConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HammerModule", function() { return HammerModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Meta", function() { return Meta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Title", function() { return Title; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TransferState", function() { return TransferState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "disableDebugTools", function() { return disableDebugTools; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableDebugTools", function() { return enableDebugTools; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeStateKey", function() { return makeStateKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "platformBrowser", function() { return platformBrowser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵBROWSER_SANITIZATION_PROVIDERS", function() { return BROWSER_SANITIZATION_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__", function() { return BROWSER_SANITIZATION_PROVIDERS__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵBrowserDomAdapter", function() { return BrowserDomAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵBrowserGetTestability", function() { return BrowserGetTestability; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵDomEventsPlugin", function() { return DomEventsPlugin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵDomRendererFactory2", function() { return DomRendererFactory2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵDomSanitizerImpl", function() { return DomSanitizerImpl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵDomSharedStylesHost", function() { return DomSharedStylesHost; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵELEMENT_PROBE_PROVIDERS", function() { return ELEMENT_PROBE_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵELEMENT_PROBE_PROVIDERS__POST_R3__", function() { return ELEMENT_PROBE_PROVIDERS__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵHAMMER_PROVIDERS__POST_R3__", function() { return HAMMER_PROVIDERS__POST_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵHammerGesturesPlugin", function() { return HammerGesturesPlugin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS", function() { return INTERNAL_BROWSER_PLATFORM_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵKeyEventsPlugin", function() { return KeyEventsPlugin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNAMESPACE_URIS", function() { return NAMESPACE_URIS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵSharedStylesHost", function() { return SharedStylesHost; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵTRANSITION_ID", function() { return TRANSITION_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_a", function() { return errorHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_b", function() { return _document; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_c", function() { return BROWSER_MODULE_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_d", function() { return createMeta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_e", function() { return createTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_f", function() { return initTransferState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_g", function() { return EventManagerPlugin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_h", function() { return HAMMER_PROVIDERS__PRE_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_i", function() { return HAMMER_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_j", function() { return domSanitizerImplFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_k", function() { return appInitializerFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_l", function() { return SERVER_TRANSITION_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_m", function() { return _createNgProbeR2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_n", function() { return ELEMENT_PROBE_PROVIDERS__PRE_R3__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_o", function() { return GenericBrowserDomAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵescapeHtml", function() { return escapeHtml; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵflattenStyles", function() { return flattenStyles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinitDomAdapter", function() { return initDomAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵshimContentAttribute", function() { return shimContentAttribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵshimHostAttribute", function() { return shimHostAttribute; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵgetDOM", function() { return _angular_common__WEBPACK_IMPORTED_MODULE_6__["ɵgetDOM"]; });








/**
 * @license Angular v11.0.2
 * (c) 2010-2020 Google LLC. https://angular.io/
 * License: MIT
 */




/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Provides DOM operations in any browser environment.
 *
 * @security Tread carefully! Interacting with the DOM directly is dangerous and
 * can introduce XSS risks.
 */

var GenericBrowserDomAdapter = /*#__PURE__*/function (_DomAdapter) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(GenericBrowserDomAdapter, _DomAdapter);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(GenericBrowserDomAdapter);

  function GenericBrowserDomAdapter() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, GenericBrowserDomAdapter);

    return _super.call(this);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(GenericBrowserDomAdapter, [{
    key: "supportsDOMEvents",
    value: function supportsDOMEvents() {
      return true;
    }
  }]);

  return GenericBrowserDomAdapter;
}(_angular_common__WEBPACK_IMPORTED_MODULE_6__["ɵDomAdapter"]);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ɵ0 = function ɵ0() {
  if (_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵglobal"]['Node']) {
    return _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵglobal"]['Node'].prototype.contains || function (node) {
      return !!(this.compareDocumentPosition(node) & 16);
    };
  }

  return undefined;
};

var nodeContains = /*@__PURE__*/ɵ0();
/**
 * A `DomAdapter` powered by full browser DOM APIs.
 *
 * @security Tread carefully! Interacting with the DOM directly is dangerous and
 * can introduce XSS risks.
 */

/* tslint:disable:requireParameterType no-console */

var BrowserDomAdapter = /*#__PURE__*/function (_GenericBrowserDomAda) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(BrowserDomAdapter, _GenericBrowserDomAda);

  var _super2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(BrowserDomAdapter);

  function BrowserDomAdapter() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, BrowserDomAdapter);

    return _super2.apply(this, arguments);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(BrowserDomAdapter, [{
    key: "getProperty",
    value: function getProperty(el, name) {
      return el[name];
    }
  }, {
    key: "log",
    value: function log(error) {
      if (window.console) {
        window.console.log && window.console.log(error);
      }
    }
  }, {
    key: "logGroup",
    value: function logGroup(error) {
      if (window.console) {
        window.console.group && window.console.group(error);
      }
    }
  }, {
    key: "logGroupEnd",
    value: function logGroupEnd() {
      if (window.console) {
        window.console.groupEnd && window.console.groupEnd();
      }
    }
  }, {
    key: "onAndCancel",
    value: function onAndCancel(el, evt, listener) {
      el.addEventListener(evt, listener, false); // Needed to follow Dart's subscription semantic, until fix of
      // https://code.google.com/p/dart/issues/detail?id=17406

      return function () {
        el.removeEventListener(evt, listener, false);
      };
    }
  }, {
    key: "dispatchEvent",
    value: function dispatchEvent(el, evt) {
      el.dispatchEvent(evt);
    }
  }, {
    key: "remove",
    value: function remove(node) {
      if (node.parentNode) {
        node.parentNode.removeChild(node);
      }

      return node;
    }
  }, {
    key: "getValue",
    value: function getValue(el) {
      return el.value;
    }
  }, {
    key: "createElement",
    value: function createElement(tagName, doc) {
      doc = doc || this.getDefaultDocument();
      return doc.createElement(tagName);
    }
  }, {
    key: "createHtmlDocument",
    value: function createHtmlDocument() {
      return document.implementation.createHTMLDocument('fakeTitle');
    }
  }, {
    key: "getDefaultDocument",
    value: function getDefaultDocument() {
      return document;
    }
  }, {
    key: "isElementNode",
    value: function isElementNode(node) {
      return node.nodeType === Node.ELEMENT_NODE;
    }
  }, {
    key: "isShadowRoot",
    value: function isShadowRoot(node) {
      return node instanceof DocumentFragment;
    }
  }, {
    key: "getGlobalEventTarget",
    value: function getGlobalEventTarget(doc, target) {
      if (target === 'window') {
        return window;
      }

      if (target === 'document') {
        return doc;
      }

      if (target === 'body') {
        return doc.body;
      }

      return null;
    }
  }, {
    key: "getHistory",
    value: function getHistory() {
      return window.history;
    }
  }, {
    key: "getLocation",
    value: function getLocation() {
      return window.location;
    }
  }, {
    key: "getBaseHref",
    value: function getBaseHref(doc) {
      var href = getBaseElementHref();
      return href == null ? null : relativePath(href);
    }
  }, {
    key: "resetBaseElement",
    value: function resetBaseElement() {
      baseElement = null;
    }
  }, {
    key: "getUserAgent",
    value: function getUserAgent() {
      return window.navigator.userAgent;
    }
  }, {
    key: "performanceNow",
    value: function performanceNow() {
      // performance.now() is not available in all browsers, see
      // http://caniuse.com/#search=performance.now
      return window.performance && window.performance.now ? window.performance.now() : new Date().getTime();
    }
  }, {
    key: "supportsCookies",
    value: function supportsCookies() {
      return true;
    }
  }, {
    key: "getCookie",
    value: function getCookie(name) {
      return Object(_angular_common__WEBPACK_IMPORTED_MODULE_6__["ɵparseCookieValue"])(document.cookie, name);
    }
  }], [{
    key: "makeCurrent",
    value: function makeCurrent() {
      Object(_angular_common__WEBPACK_IMPORTED_MODULE_6__["ɵsetRootDomAdapter"])(new BrowserDomAdapter());
    }
  }]);

  return BrowserDomAdapter;
}(GenericBrowserDomAdapter);

var baseElement = null;

function getBaseElementHref() {
  if (!baseElement) {
    baseElement = document.querySelector('base');

    if (!baseElement) {
      return null;
    }
  }

  return baseElement.getAttribute('href');
} // based on urlUtils.js in AngularJS 1


var urlParsingNode;

function relativePath(url) {
  if (!urlParsingNode) {
    urlParsingNode = document.createElement('a');
  }

  urlParsingNode.setAttribute('href', url);
  return urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * An id that identifies a particular application being bootstrapped, that should
 * match across the client/server boundary.
 */


var TRANSITION_ID = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('TRANSITION_ID');

function appInitializerFactory(transitionId, document, injector) {
  return function () {
    // Wait for all application initializers to be completed before removing the styles set by
    // the server.
    injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ApplicationInitStatus"]).donePromise.then(function () {
      var dom = Object(_angular_common__WEBPACK_IMPORTED_MODULE_6__["ɵgetDOM"])();
      var styles = Array.prototype.slice.apply(document.querySelectorAll("style[ng-transition]"));
      styles.filter(function (el) {
        return el.getAttribute('ng-transition') === transitionId;
      }).forEach(function (el) {
        return dom.remove(el);
      });
    });
  };
}

var SERVER_TRANSITION_PROVIDERS = [{
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_7__["APP_INITIALIZER"],
  useFactory: appInitializerFactory,
  deps: [TRANSITION_ID, _angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"], _angular_core__WEBPACK_IMPORTED_MODULE_7__["Injector"]],
  multi: true
}];
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var BrowserGetTestability = /*#__PURE__*/function () {
  function BrowserGetTestability() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, BrowserGetTestability);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(BrowserGetTestability, [{
    key: "addToWindow",
    value: function addToWindow(registry) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵglobal"]['getAngularTestability'] = function (elem) {
        var findInAncestors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        var testability = registry.findTestabilityInTree(elem, findInAncestors);

        if (testability == null) {
          throw new Error('Could not find testability for element.');
        }

        return testability;
      };

      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵglobal"]['getAllAngularTestabilities'] = function () {
        return registry.getAllTestabilities();
      };

      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵglobal"]['getAllAngularRootElements'] = function () {
        return registry.getAllRootElements();
      };

      var whenAllStable = function whenAllStable(callback
      /** TODO #9100 */
      ) {
        var testabilities = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵglobal"]['getAllAngularTestabilities']();
        var count = testabilities.length;
        var didWork = false;

        var decrement = function decrement(didWork_
        /** TODO #9100 */
        ) {
          didWork = didWork || didWork_;
          count--;

          if (count == 0) {
            callback(didWork);
          }
        };

        testabilities.forEach(function (testability
        /** TODO #9100 */
        ) {
          testability.whenStable(decrement);
        });
      };

      if (!_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵglobal"]['frameworkStabilizers']) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵglobal"]['frameworkStabilizers'] = [];
      }

      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵglobal"]['frameworkStabilizers'].push(whenAllStable);
    }
  }, {
    key: "findTestabilityInTree",
    value: function findTestabilityInTree(registry, elem, findInAncestors) {
      if (elem == null) {
        return null;
      }

      var t = registry.getTestability(elem);

      if (t != null) {
        return t;
      } else if (!findInAncestors) {
        return null;
      }

      if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_6__["ɵgetDOM"])().isShadowRoot(elem)) {
        return this.findTestabilityInTree(registry, elem.host, true);
      }

      return this.findTestabilityInTree(registry, elem.parentElement, true);
    }
  }], [{
    key: "init",
    value: function init() {
      Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["setTestabilityGetter"])(new BrowserGetTestability());
    }
  }]);

  return BrowserGetTestability;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var CAMEL_CASE_REGEXP = /([A-Z])/g;
var DASH_CASE_REGEXP = /-([a-z])/g;

function camelCaseToDashCase(input) {
  return input.replace(CAMEL_CASE_REGEXP, function () {
    for (var _len = arguments.length, m = new Array(_len), _key = 0; _key < _len; _key++) {
      m[_key] = arguments[_key];
    }

    return '-' + m[1].toLowerCase();
  });
}

function dashCaseToCamelCase(input) {
  return input.replace(DASH_CASE_REGEXP, function () {
    for (var _len2 = arguments.length, m = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      m[_key2] = arguments[_key2];
    }

    return m[1].toUpperCase();
  });
}
/**
 * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if
 * `name` is `'probe'`.
 * @param name Name under which it will be exported. Keep in mind this will be a property of the
 * global `ng` object.
 * @param value The value to export.
 */


function exportNgVar(name, value) {
  if (typeof COMPILED === 'undefined' || !COMPILED) {
    // Note: we can't export `ng` when using closure enhanced optimization as:
    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global
    // - we can't declare a closure extern as the namespace `ng` is already used within Google
    //   for typings for angularJS (via `goog.provide('ng....')`).
    var ng = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵglobal"]['ng'] = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵglobal"]['ng'] || {};
    ng[name] = value;
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ɵ0$1 = function ɵ0$1() {
  return {
    'ApplicationRef': _angular_core__WEBPACK_IMPORTED_MODULE_7__["ApplicationRef"],
    'NgZone': _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"]
  };
};

var CORE_TOKENS = /*@__PURE__*/ɵ0$1();
var INSPECT_GLOBAL_NAME = 'probe';
var CORE_TOKENS_GLOBAL_NAME = 'coreTokens';
/**
 * Returns a {@link DebugElement} for the given native DOM element, or
 * null if the given native element does not have an Angular view associated
 * with it.
 */

function inspectNativeElementR2(element) {
  return Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵgetDebugNodeR2"])(element);
}

function _createNgProbeR2(coreTokens) {
  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElementR2);
  exportNgVar(CORE_TOKENS_GLOBAL_NAME, Object.assign(Object.assign({}, CORE_TOKENS), _ngProbeTokensToMap(coreTokens || [])));
  return function () {
    return inspectNativeElementR2;
  };
}

function _ngProbeTokensToMap(tokens) {
  return tokens.reduce(function (prev, t) {
    return prev[t.name] = t.token, prev;
  }, {});
}
/**
 * In Ivy, we don't support NgProbe because we have our own set of testing utilities
 * with more robust functionality.
 *
 * We shouldn't bring in NgProbe because it prevents DebugNode and friends from
 * tree-shaking properly.
 */


var ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];
/**
 * Providers which support debugging Angular applications (e.g. via `ng.probe`).
 */

var ELEMENT_PROBE_PROVIDERS__PRE_R3__ = [{
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_7__["APP_INITIALIZER"],
  useFactory: _createNgProbeR2,
  deps: [[_angular_core__WEBPACK_IMPORTED_MODULE_7__["NgProbeToken"], /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]()]],
  multi: true
}];
var ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__POST_R3__;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The injection token for the event-manager plug-in service.
 *
 * @publicApi
 */

var EVENT_MANAGER_PLUGINS = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('EventManagerPlugins');

var EventManager = /*@__PURE__*/function () {
  var EventManager = /*#__PURE__*/function () {
    /**
     * Initializes an instance of the event-manager service.
     */
    function EventManager(plugins, _zone) {
      var _this = this;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, EventManager);

      this._zone = _zone;
      this._eventNameToPlugin = new Map();
      plugins.forEach(function (p) {
        return p.manager = _this;
      });
      this._plugins = plugins.slice().reverse();
    }
    /**
     * Registers a handler for a specific element and event.
     *
     * @param element The HTML element to receive event notifications.
     * @param eventName The name of the event to listen for.
     * @param handler A function to call when the notification occurs. Receives the
     * event object as an argument.
     * @returns  A callback function that can be used to remove the handler.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(EventManager, [{
      key: "addEventListener",
      value: function addEventListener(element, eventName, handler) {
        var plugin = this._findPluginFor(eventName);

        return plugin.addEventListener(element, eventName, handler);
      }
      /**
       * Registers a global handler for an event in a target view.
       *
       * @param target A target for global event notifications. One of "window", "document", or "body".
       * @param eventName The name of the event to listen for.
       * @param handler A function to call when the notification occurs. Receives the
       * event object as an argument.
       * @returns A callback function that can be used to remove the handler.
       */

    }, {
      key: "addGlobalEventListener",
      value: function addGlobalEventListener(target, eventName, handler) {
        var plugin = this._findPluginFor(eventName);

        return plugin.addGlobalEventListener(target, eventName, handler);
      }
      /**
       * Retrieves the compilation zone in which event listeners are registered.
       */

    }, {
      key: "getZone",
      value: function getZone() {
        return this._zone;
      }
      /** @internal */

    }, {
      key: "_findPluginFor",
      value: function _findPluginFor(eventName) {
        var plugin = this._eventNameToPlugin.get(eventName);

        if (plugin) {
          return plugin;
        }

        var plugins = this._plugins;

        for (var i = 0; i < plugins.length; i++) {
          var _plugin = plugins[i];

          if (_plugin.supports(eventName)) {
            this._eventNameToPlugin.set(eventName, _plugin);

            return _plugin;
          }
        }

        throw new Error("No event manager plugin found for event ".concat(eventName));
      }
    }]);

    return EventManager;
  }();

  EventManager.ɵfac = function EventManager_Factory(t) {
    return new (t || EventManager)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](EVENT_MANAGER_PLUGINS), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"]));
  };

  EventManager.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"]({
    token: EventManager,
    factory: EventManager.ɵfac
  });
  return EventManager;
}();

var EventManagerPlugin = /*#__PURE__*/function () {
  function EventManagerPlugin(_doc) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, EventManagerPlugin);

    this._doc = _doc;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(EventManagerPlugin, [{
    key: "addGlobalEventListener",
    value: function addGlobalEventListener(element, eventName, handler) {
      var target = Object(_angular_common__WEBPACK_IMPORTED_MODULE_6__["ɵgetDOM"])().getGlobalEventTarget(this._doc, element);

      if (!target) {
        throw new Error("Unsupported event target ".concat(target, " for event ").concat(eventName));
      }

      return this.addEventListener(target, eventName, handler);
    }
  }]);

  return EventManagerPlugin;
}();

var SharedStylesHost = /*@__PURE__*/function () {
  var SharedStylesHost = /*#__PURE__*/function () {
    function SharedStylesHost() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SharedStylesHost);

      /** @internal */
      this._stylesSet = new Set();
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SharedStylesHost, [{
      key: "addStyles",
      value: function addStyles(styles) {
        var _this2 = this;

        var additions = new Set();
        styles.forEach(function (style) {
          if (!_this2._stylesSet.has(style)) {
            _this2._stylesSet.add(style);

            additions.add(style);
          }
        });
        this.onStylesAdded(additions);
      }
    }, {
      key: "onStylesAdded",
      value: function onStylesAdded(additions) {}
    }, {
      key: "getAllStyles",
      value: function getAllStyles() {
        return Array.from(this._stylesSet);
      }
    }]);

    return SharedStylesHost;
  }();

  SharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) {
    return new (t || SharedStylesHost)();
  };

  SharedStylesHost.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"]({
    token: SharedStylesHost,
    factory: SharedStylesHost.ɵfac
  });
  return SharedStylesHost;
}();

var DomSharedStylesHost = /*@__PURE__*/function () {
  var DomSharedStylesHost = /*#__PURE__*/function (_SharedStylesHost) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(DomSharedStylesHost, _SharedStylesHost);

    var _super3 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(DomSharedStylesHost);

    function DomSharedStylesHost(_doc) {
      var _this3;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DomSharedStylesHost);

      _this3 = _super3.call(this);
      _this3._doc = _doc;
      _this3._hostNodes = new Set();
      _this3._styleNodes = new Set();

      _this3._hostNodes.add(_doc.head);

      return _this3;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DomSharedStylesHost, [{
      key: "_addStylesToHost",
      value: function _addStylesToHost(styles, host) {
        var _this4 = this;

        styles.forEach(function (style) {
          var styleEl = _this4._doc.createElement('style');

          styleEl.textContent = style;

          _this4._styleNodes.add(host.appendChild(styleEl));
        });
      }
    }, {
      key: "addHost",
      value: function addHost(hostNode) {
        this._addStylesToHost(this._stylesSet, hostNode);

        this._hostNodes.add(hostNode);
      }
    }, {
      key: "removeHost",
      value: function removeHost(hostNode) {
        this._hostNodes.delete(hostNode);
      }
    }, {
      key: "onStylesAdded",
      value: function onStylesAdded(additions) {
        var _this5 = this;

        this._hostNodes.forEach(function (hostNode) {
          return _this5._addStylesToHost(additions, hostNode);
        });
      }
    }, {
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        this._styleNodes.forEach(function (styleNode) {
          return Object(_angular_common__WEBPACK_IMPORTED_MODULE_6__["ɵgetDOM"])().remove(styleNode);
        });
      }
    }]);

    return DomSharedStylesHost;
  }(SharedStylesHost);

  DomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) {
    return new (t || DomSharedStylesHost)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"]));
  };

  DomSharedStylesHost.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"]({
    token: DomSharedStylesHost,
    factory: DomSharedStylesHost.ɵfac
  });
  return DomSharedStylesHost;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NAMESPACE_URIS = {
  'svg': 'http://www.w3.org/2000/svg',
  'xhtml': 'http://www.w3.org/1999/xhtml',
  'xlink': 'http://www.w3.org/1999/xlink',
  'xml': 'http://www.w3.org/XML/1998/namespace',
  'xmlns': 'http://www.w3.org/2000/xmlns/'
};
var COMPONENT_REGEX = /%COMP%/g;
var NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;
var COMPONENT_VARIABLE = '%COMP%';
var HOST_ATTR = "_nghost-".concat(COMPONENT_VARIABLE);
var CONTENT_ATTR = "_ngcontent-".concat(COMPONENT_VARIABLE);

function shimContentAttribute(componentShortId) {
  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);
}

function shimHostAttribute(componentShortId) {
  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);
}

function flattenStyles(compId, styles, target) {
  for (var i = 0; i < styles.length; i++) {
    var style = styles[i];

    if (Array.isArray(style)) {
      flattenStyles(compId, style, target);
    } else {
      style = style.replace(COMPONENT_REGEX, compId);
      target.push(style);
    }
  }

  return target;
}

function decoratePreventDefault(eventHandler) {
  // `DebugNode.triggerEventHandler` needs to know if the listener was created with
  // decoratePreventDefault or is a listener added outside the Angular context so it can handle the
  // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap
  // the listener (see below).
  return function (event) {
    // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function
    // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node
    // can inspect the listener toString contents for the existence of this special token. Because
    // the token is a string literal, it is ensured to not be modified by compiled code.
    if (event === '__ngUnwrap__') {
      return eventHandler;
    }

    var allowDefaultBehavior = eventHandler(event);

    if (allowDefaultBehavior === false) {
      // TODO(tbosch): move preventDefault into event plugins...
      event.preventDefault();
      event.returnValue = false;
    }

    return undefined;
  };
}

var hasLoggedNativeEncapsulationWarning = false;

var DomRendererFactory2 = /*@__PURE__*/function () {
  var DomRendererFactory2 = /*#__PURE__*/function () {
    function DomRendererFactory2(eventManager, sharedStylesHost, appId) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DomRendererFactory2);

      this.eventManager = eventManager;
      this.sharedStylesHost = sharedStylesHost;
      this.appId = appId;
      this.rendererByCompId = new Map();
      this.defaultRenderer = new DefaultDomRenderer2(eventManager);
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DomRendererFactory2, [{
      key: "createRenderer",
      value: function createRenderer(element, type) {
        if (!element || !type) {
          return this.defaultRenderer;
        }

        switch (type.encapsulation) {
          case _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewEncapsulation"].Emulated:
            {
              var renderer = this.rendererByCompId.get(type.id);

              if (!renderer) {
                renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);
                this.rendererByCompId.set(type.id, renderer);
              }

              renderer.applyToHost(element);
              return renderer;
            }

          case 1:
          case _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewEncapsulation"].ShadowDom:
            // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.
            if ((typeof ngDevMode === 'undefined' || ngDevMode) && !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {
              hasLoggedNativeEncapsulationWarning = true;
              console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');
            }

            return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);

          default:
            {
              if (!this.rendererByCompId.has(type.id)) {
                var styles = flattenStyles(type.id, type.styles, []);
                this.sharedStylesHost.addStyles(styles);
                this.rendererByCompId.set(type.id, this.defaultRenderer);
              }

              return this.defaultRenderer;
            }
        }
      }
    }, {
      key: "begin",
      value: function begin() {}
    }, {
      key: "end",
      value: function end() {}
    }]);

    return DomRendererFactory2;
  }();

  DomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) {
    return new (t || DomRendererFactory2)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](EventManager), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](DomSharedStylesHost), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["APP_ID"]));
  };

  DomRendererFactory2.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"]({
    token: DomRendererFactory2,
    factory: DomRendererFactory2.ɵfac
  });
  return DomRendererFactory2;
}();

var DefaultDomRenderer2 = /*#__PURE__*/function () {
  function DefaultDomRenderer2(eventManager) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DefaultDomRenderer2);

    this.eventManager = eventManager;
    this.data = Object.create(null);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DefaultDomRenderer2, [{
    key: "destroy",
    value: function destroy() {}
  }, {
    key: "createElement",
    value: function createElement(name, namespace) {
      if (namespace) {
        // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key
        // will result in undefined, so we just return the namespace here.
        return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);
      }

      return document.createElement(name);
    }
  }, {
    key: "createComment",
    value: function createComment(value) {
      return document.createComment(value);
    }
  }, {
    key: "createText",
    value: function createText(value) {
      return document.createTextNode(value);
    }
  }, {
    key: "appendChild",
    value: function appendChild(parent, newChild) {
      parent.appendChild(newChild);
    }
  }, {
    key: "insertBefore",
    value: function insertBefore(parent, newChild, refChild) {
      if (parent) {
        parent.insertBefore(newChild, refChild);
      }
    }
  }, {
    key: "removeChild",
    value: function removeChild(parent, oldChild) {
      if (parent) {
        parent.removeChild(oldChild);
      }
    }
  }, {
    key: "selectRootElement",
    value: function selectRootElement(selectorOrNode, preserveContent) {
      var el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) : selectorOrNode;

      if (!el) {
        throw new Error("The selector \"".concat(selectorOrNode, "\" did not match any elements"));
      }

      if (!preserveContent) {
        el.textContent = '';
      }

      return el;
    }
  }, {
    key: "parentNode",
    value: function parentNode(node) {
      return node.parentNode;
    }
  }, {
    key: "nextSibling",
    value: function nextSibling(node) {
      return node.nextSibling;
    }
  }, {
    key: "setAttribute",
    value: function setAttribute(el, name, value, namespace) {
      if (namespace) {
        name = namespace + ':' + name; // TODO(FW-811): Ivy may cause issues here because it's passing around
        // full URIs for namespaces, therefore this lookup will fail.

        var namespaceUri = NAMESPACE_URIS[namespace];

        if (namespaceUri) {
          el.setAttributeNS(namespaceUri, name, value);
        } else {
          el.setAttribute(name, value);
        }
      } else {
        el.setAttribute(name, value);
      }
    }
  }, {
    key: "removeAttribute",
    value: function removeAttribute(el, name, namespace) {
      if (namespace) {
        // TODO(FW-811): Ivy may cause issues here because it's passing around
        // full URIs for namespaces, therefore this lookup will fail.
        var namespaceUri = NAMESPACE_URIS[namespace];

        if (namespaceUri) {
          el.removeAttributeNS(namespaceUri, name);
        } else {
          // TODO(FW-811): Since ivy is passing around full URIs for namespaces
          // this could result in properties like `http://www.w3.org/2000/svg:cx="123"`,
          // which is wrong.
          el.removeAttribute("".concat(namespace, ":").concat(name));
        }
      } else {
        el.removeAttribute(name);
      }
    }
  }, {
    key: "addClass",
    value: function addClass(el, name) {
      el.classList.add(name);
    }
  }, {
    key: "removeClass",
    value: function removeClass(el, name) {
      el.classList.remove(name);
    }
  }, {
    key: "setStyle",
    value: function setStyle(el, style, value, flags) {
      if (flags & (_angular_core__WEBPACK_IMPORTED_MODULE_7__["RendererStyleFlags2"].DashCase | _angular_core__WEBPACK_IMPORTED_MODULE_7__["RendererStyleFlags2"].Important)) {
        el.style.setProperty(style, value, flags & _angular_core__WEBPACK_IMPORTED_MODULE_7__["RendererStyleFlags2"].Important ? 'important' : '');
      } else {
        el.style[style] = value;
      }
    }
  }, {
    key: "removeStyle",
    value: function removeStyle(el, style, flags) {
      if (flags & _angular_core__WEBPACK_IMPORTED_MODULE_7__["RendererStyleFlags2"].DashCase) {
        el.style.removeProperty(style);
      } else {
        // IE requires '' instead of null
        // see https://github.com/angular/angular/issues/7916
        el.style[style] = '';
      }
    }
  }, {
    key: "setProperty",
    value: function setProperty(el, name, value) {
      NG_DEV_MODE && checkNoSyntheticProp(name, 'property');
      el[name] = value;
    }
  }, {
    key: "setValue",
    value: function setValue(node, value) {
      node.nodeValue = value;
    }
  }, {
    key: "listen",
    value: function listen(target, event, callback) {
      NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');

      if (typeof target === 'string') {
        return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));
      }

      return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));
    }
  }]);

  return DefaultDomRenderer2;
}();

var ɵ0$2 = function ɵ0$2() {
  return '@'.charCodeAt(0);
};

var AT_CHARCODE = /*@__PURE__*/ɵ0$2();

function checkNoSyntheticProp(name, nameKind) {
  if (name.charCodeAt(0) === AT_CHARCODE) {
    throw new Error("Found the synthetic ".concat(nameKind, " ").concat(name, ". Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application."));
  }
}

var EmulatedEncapsulationDomRenderer2 = /*#__PURE__*/function (_DefaultDomRenderer) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(EmulatedEncapsulationDomRenderer2, _DefaultDomRenderer);

  var _super4 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(EmulatedEncapsulationDomRenderer2);

  function EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, component, appId) {
    var _this6;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, EmulatedEncapsulationDomRenderer2);

    _this6 = _super4.call(this, eventManager);
    _this6.component = component;
    var styles = flattenStyles(appId + '-' + component.id, component.styles, []);
    sharedStylesHost.addStyles(styles);
    _this6.contentAttr = shimContentAttribute(appId + '-' + component.id);
    _this6.hostAttr = shimHostAttribute(appId + '-' + component.id);
    return _this6;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(EmulatedEncapsulationDomRenderer2, [{
    key: "applyToHost",
    value: function applyToHost(element) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(EmulatedEncapsulationDomRenderer2.prototype), "setAttribute", this).call(this, element, this.hostAttr, '');
    }
  }, {
    key: "createElement",
    value: function createElement(parent, name) {
      var el = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(EmulatedEncapsulationDomRenderer2.prototype), "createElement", this).call(this, parent, name);

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(EmulatedEncapsulationDomRenderer2.prototype), "setAttribute", this).call(this, el, this.contentAttr, '');

      return el;
    }
  }]);

  return EmulatedEncapsulationDomRenderer2;
}(DefaultDomRenderer2);

var ShadowDomRenderer = /*#__PURE__*/function (_DefaultDomRenderer2) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(ShadowDomRenderer, _DefaultDomRenderer2);

  var _super5 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(ShadowDomRenderer);

  function ShadowDomRenderer(eventManager, sharedStylesHost, hostEl, component) {
    var _this7;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ShadowDomRenderer);

    _this7 = _super5.call(this, eventManager);
    _this7.sharedStylesHost = sharedStylesHost;
    _this7.hostEl = hostEl;
    _this7.shadowRoot = hostEl.attachShadow({
      mode: 'open'
    });

    _this7.sharedStylesHost.addHost(_this7.shadowRoot);

    var styles = flattenStyles(component.id, component.styles, []);

    for (var i = 0; i < styles.length; i++) {
      var styleEl = document.createElement('style');
      styleEl.textContent = styles[i];

      _this7.shadowRoot.appendChild(styleEl);
    }

    return _this7;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ShadowDomRenderer, [{
    key: "nodeOrShadowRoot",
    value: function nodeOrShadowRoot(node) {
      return node === this.hostEl ? this.shadowRoot : node;
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.sharedStylesHost.removeHost(this.shadowRoot);
    }
  }, {
    key: "appendChild",
    value: function appendChild(parent, newChild) {
      return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(ShadowDomRenderer.prototype), "appendChild", this).call(this, this.nodeOrShadowRoot(parent), newChild);
    }
  }, {
    key: "insertBefore",
    value: function insertBefore(parent, newChild, refChild) {
      return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(ShadowDomRenderer.prototype), "insertBefore", this).call(this, this.nodeOrShadowRoot(parent), newChild, refChild);
    }
  }, {
    key: "removeChild",
    value: function removeChild(parent, oldChild) {
      return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(ShadowDomRenderer.prototype), "removeChild", this).call(this, this.nodeOrShadowRoot(parent), oldChild);
    }
  }, {
    key: "parentNode",
    value: function parentNode(node) {
      return this.nodeOrShadowRoot(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(ShadowDomRenderer.prototype), "parentNode", this).call(this, this.nodeOrShadowRoot(node)));
    }
  }]);

  return ShadowDomRenderer;
}(DefaultDomRenderer2);

var DomEventsPlugin = /*@__PURE__*/function () {
  var DomEventsPlugin = /*#__PURE__*/function (_EventManagerPlugin) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(DomEventsPlugin, _EventManagerPlugin);

    var _super6 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(DomEventsPlugin);

    function DomEventsPlugin(doc) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DomEventsPlugin);

      return _super6.call(this, doc);
    } // This plugin should come last in the list of plugins, because it accepts all
    // events.


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DomEventsPlugin, [{
      key: "supports",
      value: function supports(eventName) {
        return true;
      }
    }, {
      key: "addEventListener",
      value: function addEventListener(element, eventName, handler) {
        var _this8 = this;

        element.addEventListener(eventName, handler, false);
        return function () {
          return _this8.removeEventListener(element, eventName, handler);
        };
      }
    }, {
      key: "removeEventListener",
      value: function removeEventListener(target, eventName, callback) {
        return target.removeEventListener(eventName, callback);
      }
    }]);

    return DomEventsPlugin;
  }(EventManagerPlugin);

  DomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) {
    return new (t || DomEventsPlugin)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"]));
  };

  DomEventsPlugin.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"]({
    token: DomEventsPlugin,
    factory: DomEventsPlugin.ɵfac
  });
  return DomEventsPlugin;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Supported HammerJS recognizer event names.
 */


var EVENT_NAMES = {
  // pan
  'pan': true,
  'panstart': true,
  'panmove': true,
  'panend': true,
  'pancancel': true,
  'panleft': true,
  'panright': true,
  'panup': true,
  'pandown': true,
  // pinch
  'pinch': true,
  'pinchstart': true,
  'pinchmove': true,
  'pinchend': true,
  'pinchcancel': true,
  'pinchin': true,
  'pinchout': true,
  // press
  'press': true,
  'pressup': true,
  // rotate
  'rotate': true,
  'rotatestart': true,
  'rotatemove': true,
  'rotateend': true,
  'rotatecancel': true,
  // swipe
  'swipe': true,
  'swipeleft': true,
  'swiperight': true,
  'swipeup': true,
  'swipedown': true,
  // tap
  'tap': true
};
/**
 * DI token for providing [HammerJS](http://hammerjs.github.io/) support to Angular.
 * @see `HammerGestureConfig`
 *
 * @ngModule HammerModule
 * @publicApi
 */

var HAMMER_GESTURE_CONFIG = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('HammerGestureConfig');
/**
 * Injection token used to provide a {@link HammerLoader} to Angular.
 *
 * @publicApi
 */

var HAMMER_LOADER = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('HammerLoader');

var HammerGestureConfig = /*@__PURE__*/function () {
  var HammerGestureConfig = /*#__PURE__*/function () {
    function HammerGestureConfig() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, HammerGestureConfig);

      /**
       * A set of supported event names for gestures to be used in Angular.
       * Angular supports all built-in recognizers, as listed in
       * [HammerJS documentation](http://hammerjs.github.io/).
       */
      this.events = [];
      /**
       * Maps gesture event names to a set of configuration options
       * that specify overrides to the default values for specific properties.
       *
       * The key is a supported event name to be configured,
       * and the options object contains a set of properties, with override values
       * to be applied to the named recognizer event.
       * For example, to disable recognition of the rotate event, specify
       *  `{"rotate": {"enable": false}}`.
       *
       * Properties that are not present take the HammerJS default values.
       * For information about which properties are supported for which events,
       * and their allowed and default values, see
       * [HammerJS documentation](http://hammerjs.github.io/).
       *
       */

      this.overrides = {};
    }
    /**
     * Creates a [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)
     * and attaches it to a given HTML element.
     * @param element The element that will recognize gestures.
     * @returns A HammerJS event-manager object.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(HammerGestureConfig, [{
      key: "buildHammer",
      value: function buildHammer(element) {
        var mc = new Hammer(element, this.options);
        mc.get('pinch').set({
          enable: true
        });
        mc.get('rotate').set({
          enable: true
        });

        for (var eventName in this.overrides) {
          mc.get(eventName).set(this.overrides[eventName]);
        }

        return mc;
      }
    }]);

    return HammerGestureConfig;
  }();

  HammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) {
    return new (t || HammerGestureConfig)();
  };

  HammerGestureConfig.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"]({
    token: HammerGestureConfig,
    factory: HammerGestureConfig.ɵfac
  });
  return HammerGestureConfig;
}();

var HammerGesturesPlugin = /*@__PURE__*/function () {
  var HammerGesturesPlugin = /*#__PURE__*/function (_EventManagerPlugin2) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(HammerGesturesPlugin, _EventManagerPlugin2);

    var _super7 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(HammerGesturesPlugin);

    function HammerGesturesPlugin(doc, _config, console, loader) {
      var _this9;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, HammerGesturesPlugin);

      _this9 = _super7.call(this, doc);
      _this9._config = _config;
      _this9.console = console;
      _this9.loader = loader;
      return _this9;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(HammerGesturesPlugin, [{
      key: "supports",
      value: function supports(eventName) {
        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {
          return false;
        }

        if (!window.Hammer && !this.loader) {
          this.console.warn("The \"".concat(eventName, "\" event cannot be bound because Hammer.JS is not ") + "loaded and no custom loader has been specified.");
          return false;
        }

        return true;
      }
    }, {
      key: "addEventListener",
      value: function addEventListener(element, eventName, handler) {
        var _this10 = this;

        var zone = this.manager.getZone();
        eventName = eventName.toLowerCase(); // If Hammer is not present but a loader is specified, we defer adding the event listener
        // until Hammer is loaded.

        if (!window.Hammer && this.loader) {
          // This `addEventListener` method returns a function to remove the added listener.
          // Until Hammer is loaded, the returned function needs to *cancel* the registration rather
          // than remove anything.
          var cancelRegistration = false;

          var deregister = function deregister() {
            cancelRegistration = true;
          };

          this.loader().then(function () {
            // If Hammer isn't actually loaded when the custom loader resolves, give up.
            if (!window.Hammer) {
              _this10.console.warn("The custom HAMMER_LOADER completed, but Hammer.JS is not present.");

              deregister = function deregister() {};

              return;
            }

            if (!cancelRegistration) {
              // Now that Hammer is loaded and the listener is being loaded for real,
              // the deregistration function changes from canceling registration to removal.
              deregister = _this10.addEventListener(element, eventName, handler);
            }
          }).catch(function () {
            _this10.console.warn("The \"".concat(eventName, "\" event cannot be bound because the custom ") + "Hammer.JS loader failed.");

            deregister = function deregister() {};
          }); // Return a function that *executes* `deregister` (and not `deregister` itself) so that we
          // can change the behavior of `deregister` once the listener is added. Using a closure in
          // this way allows us to avoid any additional data structures to track listener removal.

          return function () {
            deregister();
          };
        }

        return zone.runOutsideAngular(function () {
          // Creating the manager bind events, must be done outside of angular
          var mc = _this10._config.buildHammer(element);

          var callback = function callback(eventObj) {
            zone.runGuarded(function () {
              handler(eventObj);
            });
          };

          mc.on(eventName, callback);
          return function () {
            mc.off(eventName, callback); // destroy mc to prevent memory leak

            if (typeof mc.destroy === 'function') {
              mc.destroy();
            }
          };
        });
      }
    }, {
      key: "isCustomEvent",
      value: function isCustomEvent(eventName) {
        return this._config.events.indexOf(eventName) > -1;
      }
    }]);

    return HammerGesturesPlugin;
  }(EventManagerPlugin);

  HammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) {
    return new (t || HammerGesturesPlugin)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](HAMMER_GESTURE_CONFIG), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵConsole"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](HAMMER_LOADER, 8));
  };

  HammerGesturesPlugin.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"]({
    token: HammerGesturesPlugin,
    factory: HammerGesturesPlugin.ɵfac
  });
  return HammerGesturesPlugin;
}();
/**
 * In Ivy, support for Hammer gestures is optional, so applications must
 * import the `HammerModule` at root to turn on support. This means that
 * Hammer-specific code can be tree-shaken away if not needed.
 */


var HAMMER_PROVIDERS__POST_R3__ = [];
/**
 * In View Engine, support for Hammer gestures is built-in by default.
 */

var HAMMER_PROVIDERS__PRE_R3__ = [{
  provide: EVENT_MANAGER_PLUGINS,
  useClass: HammerGesturesPlugin,
  multi: true,
  deps: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"], HAMMER_GESTURE_CONFIG, _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵConsole"], [/*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"](), HAMMER_LOADER]]
}, {
  provide: HAMMER_GESTURE_CONFIG,
  useClass: HammerGestureConfig,
  deps: []
}];
var HAMMER_PROVIDERS = HAMMER_PROVIDERS__POST_R3__;

var HammerModule = /*@__PURE__*/function () {
  var HammerModule = function HammerModule() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, HammerModule);
  };

  HammerModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
    type: HammerModule
  });
  HammerModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
    factory: function HammerModule_Factory(t) {
      return new (t || HammerModule)();
    },
    providers: HAMMER_PROVIDERS__PRE_R3__
  });
  return HammerModule;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Defines supported modifiers for key events.
 */


var MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];
var DOM_KEY_LOCATION_NUMPAD = 3; // Map to convert some key or keyIdentifier values to what will be returned by getEventKey

var _keyMap = {
  // The following values are here for cross-browser compatibility and to match the W3C standard
  // cf http://www.w3.org/TR/DOM-Level-3-Events-key/
  '\b': 'Backspace',
  '\t': 'Tab',
  '\x7F': 'Delete',
  '\x1B': 'Escape',
  'Del': 'Delete',
  'Esc': 'Escape',
  'Left': 'ArrowLeft',
  'Right': 'ArrowRight',
  'Up': 'ArrowUp',
  'Down': 'ArrowDown',
  'Menu': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'Win': 'OS'
}; // There is a bug in Chrome for numeric keypad keys:
// https://code.google.com/p/chromium/issues/detail?id=155654
// 1, 2, 3 ... are reported as A, B, C ...

var _chromeNumKeyPadMap = {
  'A': '1',
  'B': '2',
  'C': '3',
  'D': '4',
  'E': '5',
  'F': '6',
  'G': '7',
  'H': '8',
  'I': '9',
  'J': '*',
  'K': '+',
  'M': '-',
  'N': '.',
  'O': '/',
  '\x60': '0',
  '\x90': 'NumLock'
};

var ɵ0$3 = function ɵ0$3(event) {
  return event.altKey;
},
    ɵ1 = function ɵ1(event) {
  return event.ctrlKey;
},
    ɵ2 = function ɵ2(event) {
  return event.metaKey;
},
    ɵ3 = function ɵ3(event) {
  return event.shiftKey;
};
/**
 * Retrieves modifiers from key-event objects.
 */


var MODIFIER_KEY_GETTERS = {
  'alt': ɵ0$3,
  'control': ɵ1,
  'meta': ɵ2,
  'shift': ɵ3
};

var KeyEventsPlugin = /*@__PURE__*/function () {
  var KeyEventsPlugin = /*#__PURE__*/function (_EventManagerPlugin3) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(KeyEventsPlugin, _EventManagerPlugin3);

    var _super8 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(KeyEventsPlugin);

    /**
     * Initializes an instance of the browser plug-in.
     * @param doc The document in which key events will be detected.
     */
    function KeyEventsPlugin(doc) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, KeyEventsPlugin);

      return _super8.call(this, doc);
    }
    /**
     * Reports whether a named key event is supported.
     * @param eventName The event name to query.
     * @return True if the named key event is supported.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(KeyEventsPlugin, [{
      key: "supports",
      value: function supports(eventName) {
        return KeyEventsPlugin.parseEventName(eventName) != null;
      }
      /**
       * Registers a handler for a specific element and key event.
       * @param element The HTML element to receive event notifications.
       * @param eventName The name of the key event to listen for.
       * @param handler A function to call when the notification occurs. Receives the
       * event object as an argument.
       * @returns The key event that was registered.
       */

    }, {
      key: "addEventListener",
      value: function addEventListener(element, eventName, handler) {
        var parsedEvent = KeyEventsPlugin.parseEventName(eventName);
        var outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());
        return this.manager.getZone().runOutsideAngular(function () {
          return Object(_angular_common__WEBPACK_IMPORTED_MODULE_6__["ɵgetDOM"])().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);
        });
      }
    }], [{
      key: "parseEventName",
      value: function parseEventName(eventName) {
        var parts = eventName.toLowerCase().split('.');
        var domEventName = parts.shift();

        if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {
          return null;
        }

        var key = KeyEventsPlugin._normalizeKey(parts.pop());

        var fullKey = '';
        MODIFIER_KEYS.forEach(function (modifierName) {
          var index = parts.indexOf(modifierName);

          if (index > -1) {
            parts.splice(index, 1);
            fullKey += modifierName + '.';
          }
        });
        fullKey += key;

        if (parts.length != 0 || key.length === 0) {
          // returning null instead of throwing to let another plugin process the event
          return null;
        } // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.
        //       The code must remain in the `result['domEventName']` form.
        // return {domEventName, fullKey};


        var result = {};
        result['domEventName'] = domEventName;
        result['fullKey'] = fullKey;
        return result;
      }
    }, {
      key: "getEventFullKey",
      value: function getEventFullKey(event) {
        var fullKey = '';
        var key = getEventKey(event);
        key = key.toLowerCase();

        if (key === ' ') {
          key = 'space'; // for readability
        } else if (key === '.') {
          key = 'dot'; // because '.' is used as a separator in event names
        }

        MODIFIER_KEYS.forEach(function (modifierName) {
          if (modifierName != key) {
            var modifierGetter = MODIFIER_KEY_GETTERS[modifierName];

            if (modifierGetter(event)) {
              fullKey += modifierName + '.';
            }
          }
        });
        fullKey += key;
        return fullKey;
      }
      /**
       * Configures a handler callback for a key event.
       * @param fullKey The event name that combines all simultaneous keystrokes.
       * @param handler The function that responds to the key event.
       * @param zone The zone in which the event occurred.
       * @returns A callback function.
       */

    }, {
      key: "eventCallback",
      value: function eventCallback(fullKey, handler, zone) {
        return function (event
        /** TODO #9100 */
        ) {
          if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {
            zone.runGuarded(function () {
              return handler(event);
            });
          }
        };
      }
      /** @internal */

    }, {
      key: "_normalizeKey",
      value: function _normalizeKey(keyName) {
        // TODO: switch to a Map if the mapping grows too much
        switch (keyName) {
          case 'esc':
            return 'escape';

          default:
            return keyName;
        }
      }
    }]);

    return KeyEventsPlugin;
  }(EventManagerPlugin);

  KeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) {
    return new (t || KeyEventsPlugin)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"]));
  };

  KeyEventsPlugin.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"]({
    token: KeyEventsPlugin,
    factory: KeyEventsPlugin.ɵfac
  });
  return KeyEventsPlugin;
}();

function getEventKey(event) {
  var key = event.key;

  if (key == null) {
    key = event.keyIdentifier; // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and
    // Safari cf
    // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces

    if (key == null) {
      return 'Unidentified';
    }

    if (key.startsWith('U+')) {
      key = String.fromCharCode(parseInt(key.substring(2), 16));

      if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {
        // There is a bug in Chrome for numeric keypad keys:
        // https://code.google.com/p/chromium/issues/detail?id=155654
        // 1, 2, 3 ... are reported as A, B, C ...
        key = _chromeNumKeyPadMap[key];
      }
    }
  }

  return _keyMap[key] || key;
}

var DomSanitizer = /*@__PURE__*/function () {
  var DomSanitizer = function DomSanitizer() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DomSanitizer);
  };

  DomSanitizer.ɵfac = function DomSanitizer_Factory(t) {
    return new (t || DomSanitizer)();
  };

  DomSanitizer.ɵprov = /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"])({
    factory: function DomSanitizer_Factory() {
      return Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"])(DomSanitizerImpl);
    },
    token: DomSanitizer,
    providedIn: "root"
  });
  return DomSanitizer;
}();

function domSanitizerImplFactory(injector) {
  return new DomSanitizerImpl(injector.get(_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"]));
}

var DomSanitizerImpl = /*@__PURE__*/function () {
  var DomSanitizerImpl = /*#__PURE__*/function (_DomSanitizer) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(DomSanitizerImpl, _DomSanitizer);

    var _super9 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(DomSanitizerImpl);

    function DomSanitizerImpl(_doc) {
      var _this11;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DomSanitizerImpl);

      _this11 = _super9.call(this);
      _this11._doc = _doc;
      return _this11;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DomSanitizerImpl, [{
      key: "sanitize",
      value: function sanitize(ctx, value) {
        if (value == null) return null;

        switch (ctx) {
          case _angular_core__WEBPACK_IMPORTED_MODULE_7__["SecurityContext"].NONE:
            return value;

          case _angular_core__WEBPACK_IMPORTED_MODULE_7__["SecurityContext"].HTML:
            if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵallowSanitizationBypassAndThrow"])(value, "HTML"
            /* Html */
            )) {
              return Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵunwrapSafeValue"])(value);
            }

            return Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵ_sanitizeHtml"])(this._doc, String(value));

          case _angular_core__WEBPACK_IMPORTED_MODULE_7__["SecurityContext"].STYLE:
            if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵallowSanitizationBypassAndThrow"])(value, "Style"
            /* Style */
            )) {
              return Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵunwrapSafeValue"])(value);
            }

            return value;

          case _angular_core__WEBPACK_IMPORTED_MODULE_7__["SecurityContext"].SCRIPT:
            if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵallowSanitizationBypassAndThrow"])(value, "Script"
            /* Script */
            )) {
              return Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵunwrapSafeValue"])(value);
            }

            throw new Error('unsafe value used in a script context');

          case _angular_core__WEBPACK_IMPORTED_MODULE_7__["SecurityContext"].URL:
            var type = Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵgetSanitizationBypassType"])(value);

            if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵallowSanitizationBypassAndThrow"])(value, "URL"
            /* Url */
            )) {
              return Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵunwrapSafeValue"])(value);
            }

            return Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵ_sanitizeUrl"])(String(value));

          case _angular_core__WEBPACK_IMPORTED_MODULE_7__["SecurityContext"].RESOURCE_URL:
            if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵallowSanitizationBypassAndThrow"])(value, "ResourceURL"
            /* ResourceUrl */
            )) {
              return Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵunwrapSafeValue"])(value);
            }

            throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');

          default:
            throw new Error("Unexpected SecurityContext ".concat(ctx, " (see http://g.co/ng/security#xss)"));
        }
      }
    }, {
      key: "bypassSecurityTrustHtml",
      value: function bypassSecurityTrustHtml(value) {
        return Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵbypassSanitizationTrustHtml"])(value);
      }
    }, {
      key: "bypassSecurityTrustStyle",
      value: function bypassSecurityTrustStyle(value) {
        return Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵbypassSanitizationTrustStyle"])(value);
      }
    }, {
      key: "bypassSecurityTrustScript",
      value: function bypassSecurityTrustScript(value) {
        return Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵbypassSanitizationTrustScript"])(value);
      }
    }, {
      key: "bypassSecurityTrustUrl",
      value: function bypassSecurityTrustUrl(value) {
        return Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵbypassSanitizationTrustUrl"])(value);
      }
    }, {
      key: "bypassSecurityTrustResourceUrl",
      value: function bypassSecurityTrustResourceUrl(value) {
        return Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵbypassSanitizationTrustResourceUrl"])(value);
      }
    }]);

    return DomSanitizerImpl;
  }(DomSanitizer);

  DomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) {
    return new (t || DomSanitizerImpl)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"]));
  };

  DomSanitizerImpl.ɵprov = /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"])({
    factory: function DomSanitizerImpl_Factory() {
      return domSanitizerImplFactory(Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_7__["INJECTOR"]));
    },
    token: DomSanitizerImpl,
    providedIn: "root"
  });
  return DomSanitizerImpl;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function initDomAdapter() {
  BrowserDomAdapter.makeCurrent();
  BrowserGetTestability.init();
}

function errorHandler() {
  return new _angular_core__WEBPACK_IMPORTED_MODULE_7__["ErrorHandler"]();
}

function _document() {
  // Tell ivy about the global document
  Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetDocument"])(document);
  return document;
}

var ɵ0$4 = _angular_common__WEBPACK_IMPORTED_MODULE_6__["ɵPLATFORM_BROWSER_ID"];
var INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_7__["PLATFORM_ID"],
  useValue: ɵ0$4
}, {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_7__["PLATFORM_INITIALIZER"],
  useValue: initDomAdapter,
  multi: true
}, {
  provide: _angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"],
  useFactory: _document,
  deps: []
}];
var BROWSER_SANITIZATION_PROVIDERS__PRE_R3__ = [{
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Sanitizer"],
  useExisting: DomSanitizer
}, {
  provide: DomSanitizer,
  useClass: DomSanitizerImpl,
  deps: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"]]
}];
var BROWSER_SANITIZATION_PROVIDERS__POST_R3__ = [];
/**
 * @security Replacing built-in sanitization providers exposes the application to XSS risks.
 * Attacker-controlled data introduced by an unsanitized provider could expose your
 * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).
 * @publicApi
 */

var BROWSER_SANITIZATION_PROVIDERS = BROWSER_SANITIZATION_PROVIDERS__POST_R3__;
/**
 * A factory function that returns a `PlatformRef` instance associated with browser service
 * providers.
 *
 * @publicApi
 */

var platformBrowser = /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["createPlatformFactory"])(_angular_core__WEBPACK_IMPORTED_MODULE_7__["platformCore"], 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);
var BROWSER_MODULE_PROVIDERS = [BROWSER_SANITIZATION_PROVIDERS, {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵINJECTOR_SCOPE"],
  useValue: 'root'
}, {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ErrorHandler"],
  useFactory: errorHandler,
  deps: []
}, {
  provide: EVENT_MANAGER_PLUGINS,
  useClass: DomEventsPlugin,
  multi: true,
  deps: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"], _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"], _angular_core__WEBPACK_IMPORTED_MODULE_7__["PLATFORM_ID"]]
}, {
  provide: EVENT_MANAGER_PLUGINS,
  useClass: KeyEventsPlugin,
  multi: true,
  deps: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"]]
}, HAMMER_PROVIDERS, {
  provide: DomRendererFactory2,
  useClass: DomRendererFactory2,
  deps: [EventManager, DomSharedStylesHost, _angular_core__WEBPACK_IMPORTED_MODULE_7__["APP_ID"]]
}, {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_7__["RendererFactory2"],
  useExisting: DomRendererFactory2
}, {
  provide: SharedStylesHost,
  useExisting: DomSharedStylesHost
}, {
  provide: DomSharedStylesHost,
  useClass: DomSharedStylesHost,
  deps: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"]]
}, {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Testability"],
  useClass: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Testability"],
  deps: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"]]
}, {
  provide: EventManager,
  useClass: EventManager,
  deps: [EVENT_MANAGER_PLUGINS, _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"]]
}, ELEMENT_PROBE_PROVIDERS];

var BrowserModule = /*@__PURE__*/function () {
  var BrowserModule = /*#__PURE__*/function () {
    function BrowserModule(parentModule) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, BrowserModule);

      if (parentModule) {
        throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.");
      }
    }
    /**
     * Configures a browser-based app to transition from a server-rendered app, if
     * one is present on the page.
     *
     * @param params An object containing an identifier for the app to transition.
     * The ID must match between the client and server versions of the app.
     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(BrowserModule, null, [{
      key: "withServerTransition",
      value: function withServerTransition(params) {
        return {
          ngModule: BrowserModule,
          providers: [{
            provide: _angular_core__WEBPACK_IMPORTED_MODULE_7__["APP_ID"],
            useValue: params.appId
          }, {
            provide: TRANSITION_ID,
            useExisting: _angular_core__WEBPACK_IMPORTED_MODULE_7__["APP_ID"]
          }, SERVER_TRANSITION_PROVIDERS]
        };
      }
    }]);

    return BrowserModule;
  }();

  BrowserModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
    type: BrowserModule
  });
  BrowserModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
    factory: function BrowserModule_Factory(t) {
      return new (t || BrowserModule)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](BrowserModule, 12));
    },
    providers: BROWSER_MODULE_PROVIDERS,
    imports: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["CommonModule"], _angular_core__WEBPACK_IMPORTED_MODULE_7__["ApplicationModule"]]
  });
  return BrowserModule;
}();
/*@__PURE__*/


(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](BrowserModule, {
    exports: function exports() {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_6__["CommonModule"], _angular_core__WEBPACK_IMPORTED_MODULE_7__["ApplicationModule"]];
    }
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Factory to create a `Meta` service instance for the current DOM document.
 */


function createMeta() {
  return new Meta(Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"]));
}

var Meta = /*@__PURE__*/function () {
  var Meta = /*#__PURE__*/function () {
    function Meta(_doc) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, Meta);

      this._doc = _doc;
      this._dom = Object(_angular_common__WEBPACK_IMPORTED_MODULE_6__["ɵgetDOM"])();
    }
    /**
     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.
     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute
     * values in the provided tag definition, and verifies that all other attribute values are equal.
     * If an existing element is found, it is returned and is not modified in any way.
     * @param tag The definition of a `<meta>` element to match or create.
     * @param forceCreation True to create a new element without checking whether one already exists.
     * @returns The existing element with the same attributes and values if found,
     * the new element if no match is found, or `null` if the tag parameter is not defined.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(Meta, [{
      key: "addTag",
      value: function addTag(tag) {
        var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        if (!tag) return null;
        return this._getOrCreateElement(tag, forceCreation);
      }
      /**
       * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.
       * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute
       * values in the provided tag definition, and verifies that all other attribute values are equal.
       * @param tags An array of tag definitions to match or create.
       * @param forceCreation True to create new elements without checking whether they already exist.
       * @returns The matching elements if found, or the new elements.
       */

    }, {
      key: "addTags",
      value: function addTags(tags) {
        var _this12 = this;

        var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        if (!tags) return [];
        return tags.reduce(function (result, tag) {
          if (tag) {
            result.push(_this12._getOrCreateElement(tag, forceCreation));
          }

          return result;
        }, []);
      }
      /**
       * Retrieves a `<meta>` tag element in the current HTML document.
       * @param attrSelector The tag attribute and value to match against, in the format
       * `"tag_attribute='value string'"`.
       * @returns The matching element, if any.
       */

    }, {
      key: "getTag",
      value: function getTag(attrSelector) {
        if (!attrSelector) return null;
        return this._doc.querySelector("meta[".concat(attrSelector, "]")) || null;
      }
      /**
       * Retrieves a set of `<meta>` tag elements in the current HTML document.
       * @param attrSelector The tag attribute and value to match against, in the format
       * `"tag_attribute='value string'"`.
       * @returns The matching elements, if any.
       */

    }, {
      key: "getTags",
      value: function getTags(attrSelector) {
        if (!attrSelector) return [];

        var list
        /*NodeList*/
        = this._doc.querySelectorAll("meta[".concat(attrSelector, "]"));

        return list ? [].slice.call(list) : [];
      }
      /**
       * Modifies an existing `<meta>` tag element in the current HTML document.
       * @param tag The tag description with which to replace the existing tag content.
       * @param selector A tag attribute and value to match against, to identify
       * an existing tag. A string in the format `"tag_attribute=`value string`"`.
       * If not supplied, matches a tag with the same `name` or `property` attribute value as the
       * replacement tag.
       * @return The modified element.
       */

    }, {
      key: "updateTag",
      value: function updateTag(tag, selector) {
        if (!tag) return null;
        selector = selector || this._parseSelector(tag);
        var meta = this.getTag(selector);

        if (meta) {
          return this._setMetaElementAttributes(tag, meta);
        }

        return this._getOrCreateElement(tag, true);
      }
      /**
       * Removes an existing `<meta>` tag element from the current HTML document.
       * @param attrSelector A tag attribute and value to match against, to identify
       * an existing tag. A string in the format `"tag_attribute=`value string`"`.
       */

    }, {
      key: "removeTag",
      value: function removeTag(attrSelector) {
        this.removeTagElement(this.getTag(attrSelector));
      }
      /**
       * Removes an existing `<meta>` tag element from the current HTML document.
       * @param meta The tag definition to match against to identify an existing tag.
       */

    }, {
      key: "removeTagElement",
      value: function removeTagElement(meta) {
        if (meta) {
          this._dom.remove(meta);
        }
      }
    }, {
      key: "_getOrCreateElement",
      value: function _getOrCreateElement(meta) {
        var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        if (!forceCreation) {
          var selector = this._parseSelector(meta);

          var elem = this.getTag(selector); // It's allowed to have multiple elements with the same name so it's not enough to
          // just check that element with the same name already present on the page. We also need to
          // check if element has tag attributes

          if (elem && this._containsAttributes(meta, elem)) return elem;
        }

        var element = this._dom.createElement('meta');

        this._setMetaElementAttributes(meta, element);

        var head = this._doc.getElementsByTagName('head')[0];

        head.appendChild(element);
        return element;
      }
    }, {
      key: "_setMetaElementAttributes",
      value: function _setMetaElementAttributes(tag, el) {
        Object.keys(tag).forEach(function (prop) {
          return el.setAttribute(prop, tag[prop]);
        });
        return el;
      }
    }, {
      key: "_parseSelector",
      value: function _parseSelector(tag) {
        var attr = tag.name ? 'name' : 'property';
        return "".concat(attr, "=\"").concat(tag[attr], "\"");
      }
    }, {
      key: "_containsAttributes",
      value: function _containsAttributes(tag, elem) {
        return Object.keys(tag).every(function (key) {
          return elem.getAttribute(key) === tag[key];
        });
      }
    }]);

    return Meta;
  }();

  Meta.ɵfac = function Meta_Factory(t) {
    return new (t || Meta)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"]));
  };

  Meta.ɵprov = /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"])({
    factory: createMeta,
    token: Meta,
    providedIn: "root"
  });
  return Meta;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Factory to create Title service.
 */


function createTitle() {
  return new Title(Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"]));
}

var Title = /*@__PURE__*/function () {
  var Title = /*#__PURE__*/function () {
    function Title(_doc) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, Title);

      this._doc = _doc;
    }
    /**
     * Get the title of the current HTML document.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(Title, [{
      key: "getTitle",
      value: function getTitle() {
        return this._doc.title;
      }
      /**
       * Set the title of the current HTML document.
       * @param newTitle
       */

    }, {
      key: "setTitle",
      value: function setTitle(newTitle) {
        this._doc.title = newTitle || '';
      }
    }]);

    return Title;
  }();

  Title.ɵfac = function Title_Factory(t) {
    return new (t || Title)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"]));
  };

  Title.ɵprov = /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"])({
    factory: createTitle,
    token: Title,
    providedIn: "root"
  });
  return Title;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var win = typeof window !== 'undefined' && window || {};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var ChangeDetectionPerfRecord = function ChangeDetectionPerfRecord(msPerTick, numTicks) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ChangeDetectionPerfRecord);

  this.msPerTick = msPerTick;
  this.numTicks = numTicks;
};
/**
 * Entry point for all Angular profiling-related debug tools. This object
 * corresponds to the `ng.profiler` in the dev console.
 */


var AngularProfiler = /*#__PURE__*/function () {
  function AngularProfiler(ref) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, AngularProfiler);

    this.appRef = ref.injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ApplicationRef"]);
  } // tslint:disable:no-console

  /**
   * Exercises change detection in a loop and then prints the average amount of
   * time in milliseconds how long a single round of change detection takes for
   * the current state of the UI. It runs a minimum of 5 rounds for a minimum
   * of 500 milliseconds.
   *
   * Optionally, a user may pass a `config` parameter containing a map of
   * options. Supported options are:
   *
   * `record` (boolean) - causes the profiler to record a CPU profile while
   * it exercises the change detector. Example:
   *
   * ```
   * ng.profiler.timeChangeDetection({record: true})
   * ```
   */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(AngularProfiler, [{
    key: "timeChangeDetection",
    value: function timeChangeDetection(config) {
      var record = config && config['record'];
      var profileName = 'Change Detection'; // Profiler is not available in Android browsers without dev tools opened

      var isProfilerAvailable = win.console.profile != null;

      if (record && isProfilerAvailable) {
        win.console.profile(profileName);
      }

      var start = Object(_angular_common__WEBPACK_IMPORTED_MODULE_6__["ɵgetDOM"])().performanceNow();
      var numTicks = 0;

      while (numTicks < 5 || Object(_angular_common__WEBPACK_IMPORTED_MODULE_6__["ɵgetDOM"])().performanceNow() - start < 500) {
        this.appRef.tick();
        numTicks++;
      }

      var end = Object(_angular_common__WEBPACK_IMPORTED_MODULE_6__["ɵgetDOM"])().performanceNow();

      if (record && isProfilerAvailable) {
        win.console.profileEnd(profileName);
      }

      var msPerTick = (end - start) / numTicks;
      win.console.log("ran ".concat(numTicks, " change detection cycles"));
      win.console.log("".concat(msPerTick.toFixed(2), " ms per check"));
      return new ChangeDetectionPerfRecord(msPerTick, numTicks);
    }
  }]);

  return AngularProfiler;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var PROFILER_GLOBAL_NAME = 'profiler';
/**
 * Enabled Angular debug tools that are accessible via your browser's
 * developer console.
 *
 * Usage:
 *
 * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)
 * 1. Type `ng.` (usually the console will show auto-complete suggestion)
 * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`
 *    then hit Enter.
 *
 * @publicApi
 */

function enableDebugTools(ref) {
  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));
  return ref;
}
/**
 * Disables Angular tools.
 *
 * @publicApi
 */


function disableDebugTools() {
  exportNgVar(PROFILER_GLOBAL_NAME, null);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function escapeHtml(text) {
  var escapedText = {
    '&': '&a;',
    '"': '&q;',
    '\'': '&s;',
    '<': '&l;',
    '>': '&g;'
  };
  return text.replace(/[&"'<>]/g, function (s) {
    return escapedText[s];
  });
}

function unescapeHtml(text) {
  var unescapedText = {
    '&a;': '&',
    '&q;': '"',
    '&s;': '\'',
    '&l;': '<',
    '&g;': '>'
  };
  return text.replace(/&[^;]+;/g, function (s) {
    return unescapedText[s];
  });
}
/**
 * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.
 *
 * Example:
 *
 * ```
 * const COUNTER_KEY = makeStateKey<number>('counter');
 * let value = 10;
 *
 * transferState.set(COUNTER_KEY, value);
 * ```
 *
 * @publicApi
 */


function makeStateKey(key) {
  return key;
}

var TransferState = /*@__PURE__*/function () {
  var TransferState = /*#__PURE__*/function () {
    function TransferState() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, TransferState);

      this.store = {};
      this.onSerializeCallbacks = {};
    }
    /** @internal */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(TransferState, [{
      key: "get",

      /**
       * Get the value corresponding to a key. Return `defaultValue` if key is not found.
       */
      value: function get(key, defaultValue) {
        return this.store[key] !== undefined ? this.store[key] : defaultValue;
      }
      /**
       * Set the value corresponding to a key.
       */

    }, {
      key: "set",
      value: function set(key, value) {
        this.store[key] = value;
      }
      /**
       * Remove a key from the store.
       */

    }, {
      key: "remove",
      value: function remove(key) {
        delete this.store[key];
      }
      /**
       * Test whether a key exists in the store.
       */

    }, {
      key: "hasKey",
      value: function hasKey(key) {
        return this.store.hasOwnProperty(key);
      }
      /**
       * Register a callback to provide the value for a key when `toJson` is called.
       */

    }, {
      key: "onSerialize",
      value: function onSerialize(key, callback) {
        this.onSerializeCallbacks[key] = callback;
      }
      /**
       * Serialize the current state of the store to JSON.
       */

    }, {
      key: "toJson",
      value: function toJson() {
        // Call the onSerialize callbacks and put those values into the store.
        for (var key in this.onSerializeCallbacks) {
          if (this.onSerializeCallbacks.hasOwnProperty(key)) {
            try {
              this.store[key] = this.onSerializeCallbacks[key]();
            } catch (e) {
              console.warn('Exception in onSerialize callback: ', e);
            }
          }
        }

        return JSON.stringify(this.store);
      }
    }], [{
      key: "init",
      value: function init(initState) {
        var transferState = new TransferState();
        transferState.store = initState;
        return transferState;
      }
    }]);

    return TransferState;
  }();

  TransferState.ɵfac = function TransferState_Factory(t) {
    return new (t || TransferState)();
  };

  TransferState.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"]({
    token: TransferState,
    factory: TransferState.ɵfac
  });
  return TransferState;
}();

function initTransferState(doc, appId) {
  // Locate the script tag with the JSON data transferred from the server.
  // The id of the script tag is set to the Angular appId + 'state'.
  var script = doc.getElementById(appId + '-state');
  var initialState = {};

  if (script && script.textContent) {
    try {
      initialState = JSON.parse(unescapeHtml(script.textContent));
    } catch (e) {
      console.warn('Exception while restoring TransferState for app ' + appId, e);
    }
  }

  return TransferState.init(initialState);
}

var BrowserTransferStateModule = /*@__PURE__*/function () {
  var BrowserTransferStateModule = function BrowserTransferStateModule() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, BrowserTransferStateModule);
  };

  BrowserTransferStateModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
    type: BrowserTransferStateModule
  });
  BrowserTransferStateModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
    factory: function BrowserTransferStateModule_Factory(t) {
      return new (t || BrowserTransferStateModule)();
    },
    providers: [{
      provide: TransferState,
      useFactory: initTransferState,
      deps: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"], _angular_core__WEBPACK_IMPORTED_MODULE_7__["APP_ID"]]
    }]
  });
  return BrowserTransferStateModule;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Predicates for use with {@link DebugElement}'s query functions.
 *
 * @publicApi
 */


var By = /*#__PURE__*/function () {
  function By() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, By);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(By, null, [{
    key: "all",

    /**
     * Match all nodes.
     *
     * @usageNotes
     * ### Example
     *
     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}
     */
    value: function all() {
      return function () {
        return true;
      };
    }
    /**
     * Match elements by the given CSS selector.
     *
     * @usageNotes
     * ### Example
     *
     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}
     */

  }, {
    key: "css",
    value: function css(selector) {
      return function (debugElement) {
        return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;
      };
    }
    /**
     * Match nodes that have the given directive present.
     *
     * @usageNotes
     * ### Example
     *
     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}
     */

  }, {
    key: "directive",
    value: function directive(type) {
      return function (debugNode) {
        return debugNode.providerTokens.indexOf(type) !== -1;
      };
    }
  }]);

  return By;
}();

function elementMatches(n, selector) {
  if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_6__["ɵgetDOM"])().isElementNode(n)) {
    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);
  }

  return false;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @publicApi
 */


var VERSION = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_7__["Version"]('11.0.2');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This file only reexports content of the `src` folder. Keep it that way.

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ "jkDv":
/*!***************************************!*\
  !*** ./src/app/admin/admin.module.ts ***!
  \***************************************/
/*! exports provided: AdminModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminModule", function() { return AdminModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _admin_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./admin-routing.module */ "0Em7");
/* harmony import */ var _admin_admin_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./admin/admin.component */ "hYta");
/* harmony import */ var _admin_dashboard_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./admin-dashboard/admin-dashboard.component */ "0/63");







var AdminModule = /** @class */ /*@__PURE__*/ (function () {
    function AdminModule() {
    }
    AdminModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: AdminModule });
    AdminModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function AdminModule_Factory(t) { return new (t || AdminModule)(); }, imports: [[
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ReactiveFormsModule"],
                _admin_routing_module__WEBPACK_IMPORTED_MODULE_3__["AdminRoutingModule"],
            ]] });
    return AdminModule;
}());

(function () {
    (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](AdminModule, { declarations: [_admin_admin_component__WEBPACK_IMPORTED_MODULE_4__["AdminComponent"],
            _admin_dashboard_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_5__["AdminDashboardComponent"]], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ReactiveFormsModule"],
            _admin_routing_module__WEBPACK_IMPORTED_MODULE_3__["AdminRoutingModule"]] });
})();



/***/ }),

/***/ "jtHE":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/ReplaySubject.js ***!
  \**************************************************************/
/*! exports provided: ReplaySubject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReplaySubject", function() { return ReplaySubject; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Subject */ "XNiG");
/* harmony import */ var _scheduler_queue__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./scheduler/queue */ "qgXg");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Subscription */ "quSY");
/* harmony import */ var _operators_observeOn__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./operators/observeOn */ "pxpQ");
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ "9ppp");
/* harmony import */ var _SubjectSubscription__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./SubjectSubscription */ "Ylt2");












var ReplaySubject = /*#__PURE__*/function (_Subject) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(ReplaySubject, _Subject);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(ReplaySubject);

  function ReplaySubject() {
    var _this;

    var bufferSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Number.POSITIVE_INFINITY;
    var windowTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.POSITIVE_INFINITY;
    var scheduler = arguments.length > 2 ? arguments[2] : undefined;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, ReplaySubject);

    _this = _super.call(this);
    _this.scheduler = scheduler;
    _this._events = [];
    _this._infiniteTimeWindow = false;
    _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
    _this._windowTime = windowTime < 1 ? 1 : windowTime;

    if (windowTime === Number.POSITIVE_INFINITY) {
      _this._infiniteTimeWindow = true;
      _this.next = _this.nextInfiniteTimeWindow;
    } else {
      _this.next = _this.nextTimeWindow;
    }

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(ReplaySubject, [{
    key: "nextInfiniteTimeWindow",
    value: function nextInfiniteTimeWindow(value) {
      if (!this.isStopped) {
        var _events = this._events;

        _events.push(value);

        if (_events.length > this._bufferSize) {
          _events.shift();
        }
      }

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(ReplaySubject.prototype), "next", this).call(this, value);
    }
  }, {
    key: "nextTimeWindow",
    value: function nextTimeWindow(value) {
      if (!this.isStopped) {
        this._events.push(new ReplayEvent(this._getNow(), value));

        this._trimBufferThenGetEvents();
      }

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(ReplaySubject.prototype), "next", this).call(this, value);
    }
  }, {
    key: "_subscribe",
    value: function _subscribe(subscriber) {
      var _infiniteTimeWindow = this._infiniteTimeWindow;

      var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();

      var scheduler = this.scheduler;
      var len = _events.length;
      var subscription;

      if (this.closed) {
        throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_10__["ObjectUnsubscribedError"]();
      } else if (this.isStopped || this.hasError) {
        subscription = _Subscription__WEBPACK_IMPORTED_MODULE_8__["Subscription"].EMPTY;
      } else {
        this.observers.push(subscriber);
        subscription = new _SubjectSubscription__WEBPACK_IMPORTED_MODULE_11__["SubjectSubscription"](this, subscriber);
      }

      if (scheduler) {
        subscriber.add(subscriber = new _operators_observeOn__WEBPACK_IMPORTED_MODULE_9__["ObserveOnSubscriber"](subscriber, scheduler));
      }

      if (_infiniteTimeWindow) {
        for (var i = 0; i < len && !subscriber.closed; i++) {
          subscriber.next(_events[i]);
        }
      } else {
        for (var _i = 0; _i < len && !subscriber.closed; _i++) {
          subscriber.next(_events[_i].value);
        }
      }

      if (this.hasError) {
        subscriber.error(this.thrownError);
      } else if (this.isStopped) {
        subscriber.complete();
      }

      return subscription;
    }
  }, {
    key: "_getNow",
    value: function _getNow() {
      return (this.scheduler || _scheduler_queue__WEBPACK_IMPORTED_MODULE_7__["queue"]).now();
    }
  }, {
    key: "_trimBufferThenGetEvents",
    value: function _trimBufferThenGetEvents() {
      var now = this._getNow();

      var _bufferSize = this._bufferSize;
      var _windowTime = this._windowTime;
      var _events = this._events;
      var eventsCount = _events.length;
      var spliceCount = 0;

      while (spliceCount < eventsCount) {
        if (now - _events[spliceCount].time < _windowTime) {
          break;
        }

        spliceCount++;
      }

      if (eventsCount > _bufferSize) {
        spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
      }

      if (spliceCount > 0) {
        _events.splice(0, spliceCount);
      }

      return _events;
    }
  }]);

  return ReplaySubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_6__["Subject"]);

var ReplayEvent = function ReplayEvent(time, value) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, ReplayEvent);

  this.time = time;
  this.value = value;
};

/***/ }),

/***/ "kHIg":
/*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _wrapNativeSuper; });
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var _babel_runtime_helpers_esm_setPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/setPrototypeOf */ "s4An");
/* harmony import */ var _babel_runtime_helpers_esm_isNativeFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/isNativeFunction */ "+pVZ");
/* harmony import */ var _babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/construct */ "RHh3");




function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !Object(_babel_runtime_helpers_esm_isNativeFunction__WEBPACK_IMPORTED_MODULE_2__["default"])(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return Object(_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_3__["default"])(Class, arguments, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_0__["default"])(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return Object(_babel_runtime_helpers_esm_setPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
}

/***/ }),

/***/ "kJWO":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/symbol/observable.js ***!
  \******************************************************************/
/*! exports provided: observable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "observable", function() { return observable; });
var observable = /*@__PURE__*/function () {
  return typeof Symbol === 'function' && Symbol.observable || '@@observable';
}();

/***/ }),

/***/ "kU1M":
/*!*******************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/operators/index.js ***!
  \*******************************************************/
/*! exports provided: audit, auditTime, buffer, bufferCount, bufferTime, bufferToggle, bufferWhen, catchError, combineAll, combineLatest, concat, concatAll, concatMap, concatMapTo, count, debounce, debounceTime, defaultIfEmpty, delay, delayWhen, dematerialize, distinct, distinctUntilChanged, distinctUntilKeyChanged, elementAt, endWith, every, exhaust, exhaustMap, expand, filter, finalize, find, findIndex, first, groupBy, ignoreElements, isEmpty, last, map, mapTo, materialize, max, merge, mergeAll, mergeMap, flatMap, mergeMapTo, mergeScan, min, multicast, observeOn, onErrorResumeNext, pairwise, partition, pluck, publish, publishBehavior, publishLast, publishReplay, race, reduce, repeat, repeatWhen, retry, retryWhen, refCount, sample, sampleTime, scan, sequenceEqual, share, shareReplay, single, skip, skipLast, skipUntil, skipWhile, startWith, subscribeOn, switchAll, switchMap, switchMapTo, take, takeLast, takeUntil, takeWhile, tap, throttle, throttleTime, throwIfEmpty, timeInterval, timeout, timeoutWith, timestamp, toArray, window, windowCount, windowTime, windowToggle, windowWhen, withLatestFrom, zip, zipAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal_operators_audit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/operators/audit */ "tnsW");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "audit", function() { return _internal_operators_audit__WEBPACK_IMPORTED_MODULE_0__["audit"]; });

/* harmony import */ var _internal_operators_auditTime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/operators/auditTime */ "3UWI");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "auditTime", function() { return _internal_operators_auditTime__WEBPACK_IMPORTED_MODULE_1__["auditTime"]; });

/* harmony import */ var _internal_operators_buffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/operators/buffer */ "p9/F");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "buffer", function() { return _internal_operators_buffer__WEBPACK_IMPORTED_MODULE_2__["buffer"]; });

/* harmony import */ var _internal_operators_bufferCount__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/operators/bufferCount */ "9M8c");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bufferCount", function() { return _internal_operators_bufferCount__WEBPACK_IMPORTED_MODULE_3__["bufferCount"]; });

/* harmony import */ var _internal_operators_bufferTime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/operators/bufferTime */ "OsX3");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bufferTime", function() { return _internal_operators_bufferTime__WEBPACK_IMPORTED_MODULE_4__["bufferTime"]; });

/* harmony import */ var _internal_operators_bufferToggle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../internal/operators/bufferToggle */ "FD9M");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bufferToggle", function() { return _internal_operators_bufferToggle__WEBPACK_IMPORTED_MODULE_5__["bufferToggle"]; });

/* harmony import */ var _internal_operators_bufferWhen__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../internal/operators/bufferWhen */ "PfrF");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bufferWhen", function() { return _internal_operators_bufferWhen__WEBPACK_IMPORTED_MODULE_6__["bufferWhen"]; });

/* harmony import */ var _internal_operators_catchError__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../internal/operators/catchError */ "JIr8");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "catchError", function() { return _internal_operators_catchError__WEBPACK_IMPORTED_MODULE_7__["catchError"]; });

/* harmony import */ var _internal_operators_combineAll__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../internal/operators/combineAll */ "7wxJ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combineAll", function() { return _internal_operators_combineAll__WEBPACK_IMPORTED_MODULE_8__["combineAll"]; });

/* harmony import */ var _internal_operators_combineLatest__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../internal/operators/combineLatest */ "fFD9");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return _internal_operators_combineLatest__WEBPACK_IMPORTED_MODULE_9__["combineLatest"]; });

/* harmony import */ var _internal_operators_concat__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../internal/operators/concat */ "f29J");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return _internal_operators_concat__WEBPACK_IMPORTED_MODULE_10__["concat"]; });

/* harmony import */ var _internal_operators_concatAll__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../internal/operators/concatAll */ "0EUg");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatAll", function() { return _internal_operators_concatAll__WEBPACK_IMPORTED_MODULE_11__["concatAll"]; });

/* harmony import */ var _internal_operators_concatMap__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../internal/operators/concatMap */ "bOdf");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatMap", function() { return _internal_operators_concatMap__WEBPACK_IMPORTED_MODULE_12__["concatMap"]; });

/* harmony import */ var _internal_operators_concatMapTo__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../internal/operators/concatMapTo */ "q7zd");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatMapTo", function() { return _internal_operators_concatMapTo__WEBPACK_IMPORTED_MODULE_13__["concatMapTo"]; });

/* harmony import */ var _internal_operators_count__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../internal/operators/count */ "HrJb");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "count", function() { return _internal_operators_count__WEBPACK_IMPORTED_MODULE_14__["count"]; });

/* harmony import */ var _internal_operators_debounce__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../internal/operators/debounce */ "6eBy");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return _internal_operators_debounce__WEBPACK_IMPORTED_MODULE_15__["debounce"]; });

/* harmony import */ var _internal_operators_debounceTime__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../internal/operators/debounceTime */ "Kj3r");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounceTime", function() { return _internal_operators_debounceTime__WEBPACK_IMPORTED_MODULE_16__["debounceTime"]; });

/* harmony import */ var _internal_operators_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../internal/operators/defaultIfEmpty */ "xbPD");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultIfEmpty", function() { return _internal_operators_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_17__["defaultIfEmpty"]; });

/* harmony import */ var _internal_operators_delay__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../internal/operators/delay */ "3E0/");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return _internal_operators_delay__WEBPACK_IMPORTED_MODULE_18__["delay"]; });

/* harmony import */ var _internal_operators_delayWhen__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../internal/operators/delayWhen */ "coGc");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "delayWhen", function() { return _internal_operators_delayWhen__WEBPACK_IMPORTED_MODULE_19__["delayWhen"]; });

/* harmony import */ var _internal_operators_dematerialize__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../internal/operators/dematerialize */ "kgNN");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dematerialize", function() { return _internal_operators_dematerialize__WEBPACK_IMPORTED_MODULE_20__["dematerialize"]; });

/* harmony import */ var _internal_operators_distinct__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../internal/operators/distinct */ "02Lk");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distinct", function() { return _internal_operators_distinct__WEBPACK_IMPORTED_MODULE_21__["distinct"]; });

/* harmony import */ var _internal_operators_distinctUntilChanged__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../internal/operators/distinctUntilChanged */ "/uUt");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distinctUntilChanged", function() { return _internal_operators_distinctUntilChanged__WEBPACK_IMPORTED_MODULE_22__["distinctUntilChanged"]; });

/* harmony import */ var _internal_operators_distinctUntilKeyChanged__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../internal/operators/distinctUntilKeyChanged */ "PZkE");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distinctUntilKeyChanged", function() { return _internal_operators_distinctUntilKeyChanged__WEBPACK_IMPORTED_MODULE_23__["distinctUntilKeyChanged"]; });

/* harmony import */ var _internal_operators_elementAt__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../internal/operators/elementAt */ "9ihq");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "elementAt", function() { return _internal_operators_elementAt__WEBPACK_IMPORTED_MODULE_24__["elementAt"]; });

/* harmony import */ var _internal_operators_endWith__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../internal/operators/endWith */ "0Pi8");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endWith", function() { return _internal_operators_endWith__WEBPACK_IMPORTED_MODULE_25__["endWith"]; });

/* harmony import */ var _internal_operators_every__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../internal/operators/every */ "Gi4w");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "every", function() { return _internal_operators_every__WEBPACK_IMPORTED_MODULE_26__["every"]; });

/* harmony import */ var _internal_operators_exhaust__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../internal/operators/exhaust */ "zt7V");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "exhaust", function() { return _internal_operators_exhaust__WEBPACK_IMPORTED_MODULE_27__["exhaust"]; });

/* harmony import */ var _internal_operators_exhaustMap__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../internal/operators/exhaustMap */ "XqQ8");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "exhaustMap", function() { return _internal_operators_exhaustMap__WEBPACK_IMPORTED_MODULE_28__["exhaustMap"]; });

/* harmony import */ var _internal_operators_expand__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../internal/operators/expand */ "FQpF");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expand", function() { return _internal_operators_expand__WEBPACK_IMPORTED_MODULE_29__["expand"]; });

/* harmony import */ var _internal_operators_filter__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../internal/operators/filter */ "pLZG");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return _internal_operators_filter__WEBPACK_IMPORTED_MODULE_30__["filter"]; });

/* harmony import */ var _internal_operators_finalize__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../internal/operators/finalize */ "nYR2");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "finalize", function() { return _internal_operators_finalize__WEBPACK_IMPORTED_MODULE_31__["finalize"]; });

/* harmony import */ var _internal_operators_find__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../internal/operators/find */ "cBqT");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "find", function() { return _internal_operators_find__WEBPACK_IMPORTED_MODULE_32__["find"]; });

/* harmony import */ var _internal_operators_findIndex__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../internal/operators/findIndex */ "K7De");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findIndex", function() { return _internal_operators_findIndex__WEBPACK_IMPORTED_MODULE_33__["findIndex"]; });

/* harmony import */ var _internal_operators_first__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../internal/operators/first */ "SxV6");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "first", function() { return _internal_operators_first__WEBPACK_IMPORTED_MODULE_34__["first"]; });

/* harmony import */ var _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../internal/operators/groupBy */ "OQgR");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_35__["groupBy"]; });

/* harmony import */ var _internal_operators_ignoreElements__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../internal/operators/ignoreElements */ "4A3s");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ignoreElements", function() { return _internal_operators_ignoreElements__WEBPACK_IMPORTED_MODULE_36__["ignoreElements"]; });

/* harmony import */ var _internal_operators_isEmpty__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../internal/operators/isEmpty */ "m2j4");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEmpty", function() { return _internal_operators_isEmpty__WEBPACK_IMPORTED_MODULE_37__["isEmpty"]; });

/* harmony import */ var _internal_operators_last__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../internal/operators/last */ "NJ9Y");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "last", function() { return _internal_operators_last__WEBPACK_IMPORTED_MODULE_38__["last"]; });

/* harmony import */ var _internal_operators_map__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../internal/operators/map */ "lJxs");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "map", function() { return _internal_operators_map__WEBPACK_IMPORTED_MODULE_39__["map"]; });

/* harmony import */ var _internal_operators_mapTo__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../internal/operators/mapTo */ "CqXF");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mapTo", function() { return _internal_operators_mapTo__WEBPACK_IMPORTED_MODULE_40__["mapTo"]; });

/* harmony import */ var _internal_operators_materialize__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../internal/operators/materialize */ "dkDA");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "materialize", function() { return _internal_operators_materialize__WEBPACK_IMPORTED_MODULE_41__["materialize"]; });

/* harmony import */ var _internal_operators_max__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../internal/operators/max */ "yI9Y");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _internal_operators_max__WEBPACK_IMPORTED_MODULE_42__["max"]; });

/* harmony import */ var _internal_operators_merge__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../internal/operators/merge */ "q92s");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _internal_operators_merge__WEBPACK_IMPORTED_MODULE_43__["merge"]; });

/* harmony import */ var _internal_operators_mergeAll__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../internal/operators/mergeAll */ "bHdf");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeAll", function() { return _internal_operators_mergeAll__WEBPACK_IMPORTED_MODULE_44__["mergeAll"]; });

/* harmony import */ var _internal_operators_mergeMap__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../internal/operators/mergeMap */ "5+tZ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeMap", function() { return _internal_operators_mergeMap__WEBPACK_IMPORTED_MODULE_45__["mergeMap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatMap", function() { return _internal_operators_mergeMap__WEBPACK_IMPORTED_MODULE_45__["flatMap"]; });

/* harmony import */ var _internal_operators_mergeMapTo__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../internal/operators/mergeMapTo */ "UXbc");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeMapTo", function() { return _internal_operators_mergeMapTo__WEBPACK_IMPORTED_MODULE_46__["mergeMapTo"]; });

/* harmony import */ var _internal_operators_mergeScan__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../internal/operators/mergeScan */ "51Bx");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeScan", function() { return _internal_operators_mergeScan__WEBPACK_IMPORTED_MODULE_47__["mergeScan"]; });

/* harmony import */ var _internal_operators_min__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../internal/operators/min */ "FZB8");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _internal_operators_min__WEBPACK_IMPORTED_MODULE_48__["min"]; });

/* harmony import */ var _internal_operators_multicast__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ../internal/operators/multicast */ "oB13");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multicast", function() { return _internal_operators_multicast__WEBPACK_IMPORTED_MODULE_49__["multicast"]; });

/* harmony import */ var _internal_operators_observeOn__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ../internal/operators/observeOn */ "pxpQ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "observeOn", function() { return _internal_operators_observeOn__WEBPACK_IMPORTED_MODULE_50__["observeOn"]; });

/* harmony import */ var _internal_operators_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ../internal/operators/onErrorResumeNext */ "uTdr");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return _internal_operators_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_51__["onErrorResumeNext"]; });

/* harmony import */ var _internal_operators_pairwise__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../internal/operators/pairwise */ "Zy1z");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairwise", function() { return _internal_operators_pairwise__WEBPACK_IMPORTED_MODULE_52__["pairwise"]; });

/* harmony import */ var _internal_operators_partition__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ../internal/operators/partition */ "A3iJ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return _internal_operators_partition__WEBPACK_IMPORTED_MODULE_53__["partition"]; });

/* harmony import */ var _internal_operators_pluck__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../internal/operators/pluck */ "wO+i");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pluck", function() { return _internal_operators_pluck__WEBPACK_IMPORTED_MODULE_54__["pluck"]; });

/* harmony import */ var _internal_operators_publish__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../internal/operators/publish */ "NfdI");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "publish", function() { return _internal_operators_publish__WEBPACK_IMPORTED_MODULE_55__["publish"]; });

/* harmony import */ var _internal_operators_publishBehavior__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ../internal/operators/publishBehavior */ "UGaM");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "publishBehavior", function() { return _internal_operators_publishBehavior__WEBPACK_IMPORTED_MODULE_56__["publishBehavior"]; });

/* harmony import */ var _internal_operators_publishLast__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../internal/operators/publishLast */ "qZ0a");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "publishLast", function() { return _internal_operators_publishLast__WEBPACK_IMPORTED_MODULE_57__["publishLast"]; });

/* harmony import */ var _internal_operators_publishReplay__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ../internal/operators/publishReplay */ "05l1");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "publishReplay", function() { return _internal_operators_publishReplay__WEBPACK_IMPORTED_MODULE_58__["publishReplay"]; });

/* harmony import */ var _internal_operators_race__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ../internal/operators/race */ "4f8F");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "race", function() { return _internal_operators_race__WEBPACK_IMPORTED_MODULE_59__["race"]; });

/* harmony import */ var _internal_operators_reduce__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ../internal/operators/reduce */ "128B");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return _internal_operators_reduce__WEBPACK_IMPORTED_MODULE_60__["reduce"]; });

/* harmony import */ var _internal_operators_repeat__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ../internal/operators/repeat */ "/d8p");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return _internal_operators_repeat__WEBPACK_IMPORTED_MODULE_61__["repeat"]; });

/* harmony import */ var _internal_operators_repeatWhen__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ../internal/operators/repeatWhen */ "Gqsl");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "repeatWhen", function() { return _internal_operators_repeatWhen__WEBPACK_IMPORTED_MODULE_62__["repeatWhen"]; });

/* harmony import */ var _internal_operators_retry__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ../internal/operators/retry */ "un/a");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "retry", function() { return _internal_operators_retry__WEBPACK_IMPORTED_MODULE_63__["retry"]; });

/* harmony import */ var _internal_operators_retryWhen__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ../internal/operators/retryWhen */ "MtjB");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "retryWhen", function() { return _internal_operators_retryWhen__WEBPACK_IMPORTED_MODULE_64__["retryWhen"]; });

/* harmony import */ var _internal_operators_refCount__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ../internal/operators/refCount */ "x+ZX");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "refCount", function() { return _internal_operators_refCount__WEBPACK_IMPORTED_MODULE_65__["refCount"]; });

/* harmony import */ var _internal_operators_sample__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ../internal/operators/sample */ "c6ID");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sample", function() { return _internal_operators_sample__WEBPACK_IMPORTED_MODULE_66__["sample"]; });

/* harmony import */ var _internal_operators_sampleTime__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ../internal/operators/sampleTime */ "1Ykd");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sampleTime", function() { return _internal_operators_sampleTime__WEBPACK_IMPORTED_MODULE_67__["sampleTime"]; });

/* harmony import */ var _internal_operators_scan__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ../internal/operators/scan */ "Kqap");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return _internal_operators_scan__WEBPACK_IMPORTED_MODULE_68__["scan"]; });

/* harmony import */ var _internal_operators_sequenceEqual__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ../internal/operators/sequenceEqual */ "Zyez");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sequenceEqual", function() { return _internal_operators_sequenceEqual__WEBPACK_IMPORTED_MODULE_69__["sequenceEqual"]; });

/* harmony import */ var _internal_operators_share__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ../internal/operators/share */ "w1tV");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "share", function() { return _internal_operators_share__WEBPACK_IMPORTED_MODULE_70__["share"]; });

/* harmony import */ var _internal_operators_shareReplay__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ../internal/operators/shareReplay */ "UXun");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shareReplay", function() { return _internal_operators_shareReplay__WEBPACK_IMPORTED_MODULE_71__["shareReplay"]; });

/* harmony import */ var _internal_operators_single__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ../internal/operators/single */ "cx9U");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "single", function() { return _internal_operators_single__WEBPACK_IMPORTED_MODULE_72__["single"]; });

/* harmony import */ var _internal_operators_skip__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ../internal/operators/skip */ "zP0r");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "skip", function() { return _internal_operators_skip__WEBPACK_IMPORTED_MODULE_73__["skip"]; });

/* harmony import */ var _internal_operators_skipLast__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ../internal/operators/skipLast */ "kagm");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "skipLast", function() { return _internal_operators_skipLast__WEBPACK_IMPORTED_MODULE_74__["skipLast"]; });

/* harmony import */ var _internal_operators_skipUntil__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ../internal/operators/skipUntil */ "vqkR");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "skipUntil", function() { return _internal_operators_skipUntil__WEBPACK_IMPORTED_MODULE_75__["skipUntil"]; });

/* harmony import */ var _internal_operators_skipWhile__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ../internal/operators/skipWhile */ "32Ea");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "skipWhile", function() { return _internal_operators_skipWhile__WEBPACK_IMPORTED_MODULE_76__["skipWhile"]; });

/* harmony import */ var _internal_operators_startWith__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ../internal/operators/startWith */ "JX91");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startWith", function() { return _internal_operators_startWith__WEBPACK_IMPORTED_MODULE_77__["startWith"]; });

/* harmony import */ var _internal_operators_subscribeOn__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ../internal/operators/subscribeOn */ "tf+s");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subscribeOn", function() { return _internal_operators_subscribeOn__WEBPACK_IMPORTED_MODULE_78__["subscribeOn"]; });

/* harmony import */ var _internal_operators_switchAll__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ../internal/operators/switchAll */ "Y6wi");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "switchAll", function() { return _internal_operators_switchAll__WEBPACK_IMPORTED_MODULE_79__["switchAll"]; });

/* harmony import */ var _internal_operators_switchMap__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ../internal/operators/switchMap */ "eIep");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "switchMap", function() { return _internal_operators_switchMap__WEBPACK_IMPORTED_MODULE_80__["switchMap"]; });

/* harmony import */ var _internal_operators_switchMapTo__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ../internal/operators/switchMapTo */ "aGrj");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "switchMapTo", function() { return _internal_operators_switchMapTo__WEBPACK_IMPORTED_MODULE_81__["switchMapTo"]; });

/* harmony import */ var _internal_operators_take__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ../internal/operators/take */ "IzEk");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "take", function() { return _internal_operators_take__WEBPACK_IMPORTED_MODULE_82__["take"]; });

/* harmony import */ var _internal_operators_takeLast__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ../internal/operators/takeLast */ "BFxc");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeLast", function() { return _internal_operators_takeLast__WEBPACK_IMPORTED_MODULE_83__["takeLast"]; });

/* harmony import */ var _internal_operators_takeUntil__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ../internal/operators/takeUntil */ "1G5W");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeUntil", function() { return _internal_operators_takeUntil__WEBPACK_IMPORTED_MODULE_84__["takeUntil"]; });

/* harmony import */ var _internal_operators_takeWhile__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ../internal/operators/takeWhile */ "GJmQ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeWhile", function() { return _internal_operators_takeWhile__WEBPACK_IMPORTED_MODULE_85__["takeWhile"]; });

/* harmony import */ var _internal_operators_tap__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ../internal/operators/tap */ "vkgz");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tap", function() { return _internal_operators_tap__WEBPACK_IMPORTED_MODULE_86__["tap"]; });

/* harmony import */ var _internal_operators_throttle__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ../internal/operators/throttle */ "yuhW");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return _internal_operators_throttle__WEBPACK_IMPORTED_MODULE_87__["throttle"]; });

/* harmony import */ var _internal_operators_throttleTime__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ../internal/operators/throttleTime */ "gcYM");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throttleTime", function() { return _internal_operators_throttleTime__WEBPACK_IMPORTED_MODULE_88__["throttleTime"]; });

/* harmony import */ var _internal_operators_throwIfEmpty__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ../internal/operators/throwIfEmpty */ "XDbj");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throwIfEmpty", function() { return _internal_operators_throwIfEmpty__WEBPACK_IMPORTED_MODULE_89__["throwIfEmpty"]; });

/* harmony import */ var _internal_operators_timeInterval__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ../internal/operators/timeInterval */ "4hIw");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return _internal_operators_timeInterval__WEBPACK_IMPORTED_MODULE_90__["timeInterval"]; });

/* harmony import */ var _internal_operators_timeout__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ../internal/operators/timeout */ "tS1D");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeout", function() { return _internal_operators_timeout__WEBPACK_IMPORTED_MODULE_91__["timeout"]; });

/* harmony import */ var _internal_operators_timeoutWith__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ../internal/operators/timeoutWith */ "syX2");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeoutWith", function() { return _internal_operators_timeoutWith__WEBPACK_IMPORTED_MODULE_92__["timeoutWith"]; });

/* harmony import */ var _internal_operators_timestamp__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ../internal/operators/timestamp */ "r0WS");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timestamp", function() { return _internal_operators_timestamp__WEBPACK_IMPORTED_MODULE_93__["timestamp"]; });

/* harmony import */ var _internal_operators_toArray__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ../internal/operators/toArray */ "IAdc");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return _internal_operators_toArray__WEBPACK_IMPORTED_MODULE_94__["toArray"]; });

/* harmony import */ var _internal_operators_window__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ../internal/operators/window */ "mk5/");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "window", function() { return _internal_operators_window__WEBPACK_IMPORTED_MODULE_95__["window"]; });

/* harmony import */ var _internal_operators_windowCount__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ../internal/operators/windowCount */ "lpKW");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowCount", function() { return _internal_operators_windowCount__WEBPACK_IMPORTED_MODULE_96__["windowCount"]; });

/* harmony import */ var _internal_operators_windowTime__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ../internal/operators/windowTime */ "UHp3");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowTime", function() { return _internal_operators_windowTime__WEBPACK_IMPORTED_MODULE_97__["windowTime"]; });

/* harmony import */ var _internal_operators_windowToggle__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ../internal/operators/windowToggle */ "sTY7");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowToggle", function() { return _internal_operators_windowToggle__WEBPACK_IMPORTED_MODULE_98__["windowToggle"]; });

/* harmony import */ var _internal_operators_windowWhen__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ../internal/operators/windowWhen */ "pXlZ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowWhen", function() { return _internal_operators_windowWhen__WEBPACK_IMPORTED_MODULE_99__["windowWhen"]; });

/* harmony import */ var _internal_operators_withLatestFrom__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ../internal/operators/withLatestFrom */ "zp1y");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "withLatestFrom", function() { return _internal_operators_withLatestFrom__WEBPACK_IMPORTED_MODULE_100__["withLatestFrom"]; });

/* harmony import */ var _internal_operators_zip__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ../internal/operators/zip */ "GjHo");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _internal_operators_zip__WEBPACK_IMPORTED_MODULE_101__["zip"]; });

/* harmony import */ var _internal_operators_zipAll__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ../internal/operators/zipAll */ "JmF6");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zipAll", function() { return _internal_operators_zipAll__WEBPACK_IMPORTED_MODULE_102__["zipAll"]; });









































































































/***/ }),

/***/ "kagm":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/skipLast.js ***!
  \*******************************************************************/
/*! exports provided: skipLast */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "skipLast", function() { return skipLast; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ "4I5i");






function skipLast(count) {
  return function (source) {
    return source.lift(new SkipLastOperator(count));
  };
}

var SkipLastOperator = /*#__PURE__*/function () {
  function SkipLastOperator(_skipCount) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SkipLastOperator);

    this._skipCount = _skipCount;

    if (this._skipCount < 0) {
      throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_5__["ArgumentOutOfRangeError"]();
    }
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SkipLastOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      if (this._skipCount === 0) {
        return source.subscribe(new _Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"](subscriber));
      } else {
        return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));
      }
    }
  }]);

  return SkipLastOperator;
}();

var SkipLastSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(SkipLastSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(SkipLastSubscriber);

  function SkipLastSubscriber(destination, _skipCount) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SkipLastSubscriber);

    _this = _super.call(this, destination);
    _this._skipCount = _skipCount;
    _this._count = 0;
    _this._ring = new Array(_skipCount);
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SkipLastSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var skipCount = this._skipCount;
      var count = this._count++;

      if (count < skipCount) {
        this._ring[count] = value;
      } else {
        var currentIndex = count % skipCount;
        var ring = this._ring;
        var oldValue = ring[currentIndex];
        ring[currentIndex] = value;
        this.destination.next(oldValue);
      }
    }
  }]);

  return SkipLastSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "kgNN":
/*!************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/dematerialize.js ***!
  \************************************************************************/
/*! exports provided: dematerialize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dematerialize", function() { return dematerialize; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");





function dematerialize() {
  return function dematerializeOperatorFunction(source) {
    return source.lift(new DeMaterializeOperator());
  };
}

var DeMaterializeOperator = /*#__PURE__*/function () {
  function DeMaterializeOperator() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DeMaterializeOperator);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DeMaterializeOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new DeMaterializeSubscriber(subscriber));
    }
  }]);

  return DeMaterializeOperator;
}();

var DeMaterializeSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(DeMaterializeSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(DeMaterializeSubscriber);

  function DeMaterializeSubscriber(destination) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DeMaterializeSubscriber);

    return _super.call(this, destination);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DeMaterializeSubscriber, [{
    key: "_next",
    value: function _next(value) {
      value.observe(this.destination);
    }
  }]);

  return DeMaterializeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "l5mm":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/interval.js ***!
  \********************************************************************/
/*! exports provided: interval */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interval", function() { return interval; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ "D0XW");
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isNumeric */ "Y7HM");



function interval() {
  var period = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];

  if (!Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__["isNumeric"])(period) || period < 0) {
    period = 0;
  }

  if (!scheduler || typeof scheduler.schedule !== 'function') {
    scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
  }

  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    subscriber.add(scheduler.schedule(dispatch, period, {
      subscriber: subscriber,
      counter: 0,
      period: period
    }));
    return subscriber;
  });
}

function dispatch(state) {
  var subscriber = state.subscriber,
      counter = state.counter,
      period = state.period;
  subscriber.next(counter);
  this.schedule({
    subscriber: subscriber,
    counter: counter + 1,
    period: period
  }, period);
}

/***/ }),

/***/ "l7GE":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/OuterSubscriber.js ***!
  \****************************************************************/
/*! exports provided: OuterSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OuterSubscriber", function() { return OuterSubscriber; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Subscriber */ "7o/Q");





var OuterSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(OuterSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(OuterSubscriber);

  function OuterSubscriber() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, OuterSubscriber);

    return _super.apply(this, arguments);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(OuterSubscriber, [{
    key: "notifyNext",
    value: function notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {
      this.destination.next(innerValue);
    }
  }, {
    key: "notifyError",
    value: function notifyError(error, innerSub) {
      this.destination.error(error);
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete(innerSub) {
      this.destination.complete();
    }
  }]);

  return OuterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "lJxs":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/map.js ***!
  \**************************************************************/
/*! exports provided: map, MapOperator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapOperator", function() { return MapOperator; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");






function map(project, thisArg) {
  return function mapOperation(source) {
    if (typeof project !== 'function') {
      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
    }

    return source.lift(new MapOperator(project, thisArg));
  };
}
var MapOperator = /*#__PURE__*/function () {
  function MapOperator(project, thisArg) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MapOperator);

    this.project = project;
    this.thisArg = thisArg;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(MapOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
    }
  }]);

  return MapOperator;
}();

var MapSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(MapSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(MapSubscriber);

  function MapSubscriber(destination, project, thisArg) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MapSubscriber);

    _this = _super.call(this, destination);
    _this.project = project;
    _this.count = 0;
    _this.thisArg = thisArg || Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this);
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(MapSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var result;

      try {
        result = this.project.call(this.thisArg, value, this.count++);
      } catch (err) {
        this.destination.error(err);
        return;
      }

      this.destination.next(result);
    }
  }]);

  return MapSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_5__["Subscriber"]);

/***/ }),

/***/ "lpKW":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/windowCount.js ***!
  \**********************************************************************/
/*! exports provided: windowCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowCount", function() { return windowCount; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Subject */ "XNiG");






function windowCount(windowSize) {
  var startWindowEvery = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  return function windowCountOperatorFunction(source) {
    return source.lift(new WindowCountOperator(windowSize, startWindowEvery));
  };
}

var WindowCountOperator = /*#__PURE__*/function () {
  function WindowCountOperator(windowSize, startWindowEvery) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, WindowCountOperator);

    this.windowSize = windowSize;
    this.startWindowEvery = startWindowEvery;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(WindowCountOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));
    }
  }]);

  return WindowCountOperator;
}();

var WindowCountSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(WindowCountSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(WindowCountSubscriber);

  function WindowCountSubscriber(destination, windowSize, startWindowEvery) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, WindowCountSubscriber);

    _this = _super.call(this, destination);
    _this.destination = destination;
    _this.windowSize = windowSize;
    _this.startWindowEvery = startWindowEvery;
    _this.windows = [new _Subject__WEBPACK_IMPORTED_MODULE_5__["Subject"]()];
    _this.count = 0;
    destination.next(_this.windows[0]);
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(WindowCountSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var startWindowEvery = this.startWindowEvery > 0 ? this.startWindowEvery : this.windowSize;
      var destination = this.destination;
      var windowSize = this.windowSize;
      var windows = this.windows;
      var len = windows.length;

      for (var i = 0; i < len && !this.closed; i++) {
        windows[i].next(value);
      }

      var c = this.count - windowSize + 1;

      if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {
        windows.shift().complete();
      }

      if (++this.count % startWindowEvery === 0 && !this.closed) {
        var window = new _Subject__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
        windows.push(window);
        destination.next(window);
      }
    }
  }, {
    key: "_error",
    value: function _error(err) {
      var windows = this.windows;

      if (windows) {
        while (windows.length > 0 && !this.closed) {
          windows.shift().error(err);
        }
      }

      this.destination.error(err);
    }
  }, {
    key: "_complete",
    value: function _complete() {
      var windows = this.windows;

      if (windows) {
        while (windows.length > 0 && !this.closed) {
          windows.shift().complete();
        }
      }

      this.destination.complete();
    }
  }, {
    key: "_unsubscribe",
    value: function _unsubscribe() {
      this.count = 0;
      this.windows = null;
    }
  }]);

  return WindowCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "m2j4":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/isEmpty.js ***!
  \******************************************************************/
/*! exports provided: isEmpty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEmpty", function() { return isEmpty; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");





function isEmpty() {
  return function (source) {
    return source.lift(new IsEmptyOperator());
  };
}

var IsEmptyOperator = /*#__PURE__*/function () {
  function IsEmptyOperator() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, IsEmptyOperator);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(IsEmptyOperator, [{
    key: "call",
    value: function call(observer, source) {
      return source.subscribe(new IsEmptySubscriber(observer));
    }
  }]);

  return IsEmptyOperator;
}();

var IsEmptySubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(IsEmptySubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(IsEmptySubscriber);

  function IsEmptySubscriber(destination) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, IsEmptySubscriber);

    return _super.call(this, destination);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(IsEmptySubscriber, [{
    key: "notifyComplete",
    value: function notifyComplete(isEmpty) {
      var destination = this.destination;
      destination.next(isEmpty);
      destination.complete();
    }
  }, {
    key: "_next",
    value: function _next(value) {
      this.notifyComplete(false);
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.notifyComplete(true);
    }
  }]);

  return IsEmptySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "mCNh":
/*!**********************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/pipe.js ***!
  \**********************************************************/
/*! exports provided: pipe, pipeFromArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pipe", function() { return pipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pipeFromArray", function() { return pipeFromArray; });
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity */ "SpAZ");

function pipe() {
  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }

  return pipeFromArray(fns);
}
function pipeFromArray(fns) {
  if (fns.length === 0) {
    return _identity__WEBPACK_IMPORTED_MODULE_0__["identity"];
  }

  if (fns.length === 1) {
    return fns[0];
  }

  return function piped(input) {
    return fns.reduce(function (prev, fn) {
      return fn(prev);
    }, input);
  };
}

/***/ }),

/***/ "maur":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/firestore/es2015/collection/collection.js ***!
  \*******************************************************************************************/
/*! exports provided: validateEventsArray, AngularFirestoreCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateEventsArray", function() { return validateEventsArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AngularFirestoreCollection", function() { return AngularFirestoreCollection; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/defineProperty */ "rePB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var _observable_fromRef__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../observable/fromRef */ "Ttzs");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _changes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./changes */ "3CkQ");
/* harmony import */ var _document_document__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../document/document */ "VqN3");









function validateEventsArray(events) {
  if (!events || events.length === 0) {
    events = ['added', 'removed', 'modified'];
  }

  return events;
}
var AngularFirestoreCollection = /*#__PURE__*/function () {
  function AngularFirestoreCollection(ref, query, afs) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, AngularFirestoreCollection);

    this.ref = ref;
    this.query = query;
    this.afs = afs;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(AngularFirestoreCollection, [{
    key: "stateChanges",
    value: function stateChanges(events) {
      if (!events || events.length === 0) {
        return Object(_changes__WEBPACK_IMPORTED_MODULE_7__["docChanges"])(this.query, this.afs.schedulers.outsideAngular).pipe(this.afs.keepUnstableUntilFirst);
      }

      return Object(_changes__WEBPACK_IMPORTED_MODULE_7__["docChanges"])(this.query, this.afs.schedulers.outsideAngular).pipe(this.afs.keepUnstableUntilFirst, Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["map"])(function (actions) {
        return actions.filter(function (change) {
          return events.indexOf(change.type) > -1;
        });
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["filter"])(function (changes) {
        return changes.length > 0;
      }));
    }
  }, {
    key: "auditTrail",
    value: function auditTrail(events) {
      return this.stateChanges(events).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["scan"])(function (current, action) {
        return [].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__["default"])(current), Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__["default"])(action));
      }, []));
    }
  }, {
    key: "snapshotChanges",
    value: function snapshotChanges(events) {
      var validatedEvents = validateEventsArray(events);
      var scheduledSortedChanges$ = Object(_changes__WEBPACK_IMPORTED_MODULE_7__["sortedChanges"])(this.query, validatedEvents, this.afs.schedulers.outsideAngular);
      return scheduledSortedChanges$.pipe(this.afs.keepUnstableUntilFirst);
    }
  }, {
    key: "valueChanges",
    value: function valueChanges() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return Object(_observable_fromRef__WEBPACK_IMPORTED_MODULE_5__["fromCollectionRef"])(this.query, this.afs.schedulers.outsideAngular).pipe(this.afs.keepUnstableUntilFirst, Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["map"])(function (actions) {
        return actions.payload.docs.map(function (a) {
          if (options.idField) {
            return Object.assign({}, a.data(), Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options.idField, a.id));
          } else {
            return a.data();
          }
        });
      }));
    }
  }, {
    key: "get",
    value: function get(options) {
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["from"])(this.query.get(options)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["observeOn"])(this.afs.schedulers.insideAngular));
    }
  }, {
    key: "add",
    value: function add(data) {
      return this.ref.add(data);
    }
  }, {
    key: "doc",
    value: function doc(path) {
      return new _document_document__WEBPACK_IMPORTED_MODULE_8__["AngularFirestoreDocument"](this.ref.doc(path), this.afs);
    }
  }]);

  return AngularFirestoreCollection;
}();

/***/ }),

/***/ "md7G":
/*!******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _possibleConstructorReturn; });
/* harmony import */ var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/typeof */ "U8pU");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");


function _possibleConstructorReturn(self, call) {
  if (call && (Object(_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__["default"])(call) === "object" || typeof call === "function")) {
    return call;
  }

  return Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__["default"])(self);
}

/***/ }),

/***/ "mgdk":
/*!**********************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/es2015/public_api.js ***!
  \**********************************************************************/
/*! exports provided: RealtimeDatabaseURL, DATABASE_URL, ɵZoneScheduler, ɵBlockUntilFirstOperator, ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, runOutsideAngular, runInZone, FirebaseZoneScheduler, ɵlazySDKProxy, FirebaseOptionsToken, FirebaseNameOrConfigToken, FIREBASE_OPTIONS, FIREBASE_APP_NAME, FirebaseApp, VERSION, _firebaseAppFactory, AngularFireModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angularfire2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./angularfire2 */ "XU1U");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RealtimeDatabaseURL", function() { return _angularfire2__WEBPACK_IMPORTED_MODULE_0__["RealtimeDatabaseURL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DATABASE_URL", function() { return _angularfire2__WEBPACK_IMPORTED_MODULE_0__["DATABASE_URL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵZoneScheduler", function() { return _angularfire2__WEBPACK_IMPORTED_MODULE_0__["ɵZoneScheduler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵBlockUntilFirstOperator", function() { return _angularfire2__WEBPACK_IMPORTED_MODULE_0__["ɵBlockUntilFirstOperator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵAngularFireSchedulers", function() { return _angularfire2__WEBPACK_IMPORTED_MODULE_0__["ɵAngularFireSchedulers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵkeepUnstableUntilFirstFactory", function() { return _angularfire2__WEBPACK_IMPORTED_MODULE_0__["ɵkeepUnstableUntilFirstFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "runOutsideAngular", function() { return _angularfire2__WEBPACK_IMPORTED_MODULE_0__["runOutsideAngular"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "runInZone", function() { return _angularfire2__WEBPACK_IMPORTED_MODULE_0__["runInZone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FirebaseZoneScheduler", function() { return _angularfire2__WEBPACK_IMPORTED_MODULE_0__["FirebaseZoneScheduler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵlazySDKProxy", function() { return _angularfire2__WEBPACK_IMPORTED_MODULE_0__["ɵlazySDKProxy"]; });

/* harmony import */ var _firebase_app_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./firebase.app.module */ "Czum");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FirebaseOptionsToken", function() { return _firebase_app_module__WEBPACK_IMPORTED_MODULE_1__["FirebaseOptionsToken"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FirebaseNameOrConfigToken", function() { return _firebase_app_module__WEBPACK_IMPORTED_MODULE_1__["FirebaseNameOrConfigToken"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FIREBASE_OPTIONS", function() { return _firebase_app_module__WEBPACK_IMPORTED_MODULE_1__["FIREBASE_OPTIONS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FIREBASE_APP_NAME", function() { return _firebase_app_module__WEBPACK_IMPORTED_MODULE_1__["FIREBASE_APP_NAME"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FirebaseApp", function() { return _firebase_app_module__WEBPACK_IMPORTED_MODULE_1__["FirebaseApp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return _firebase_app_module__WEBPACK_IMPORTED_MODULE_1__["VERSION"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_firebaseAppFactory", function() { return _firebase_app_module__WEBPACK_IMPORTED_MODULE_1__["_firebaseAppFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngularFireModule", function() { return _firebase_app_module__WEBPACK_IMPORTED_MODULE_1__["AngularFireModule"]; });




/***/ }),

/***/ "mk5/":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/window.js ***!
  \*****************************************************************/
/*! exports provided: window */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "window", function() { return window; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subject */ "XNiG");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");






function window(windowBoundaries) {
  return function windowOperatorFunction(source) {
    return source.lift(new WindowOperator(windowBoundaries));
  };
}

var WindowOperator = /*#__PURE__*/function () {
  function WindowOperator(windowBoundaries) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, WindowOperator);

    this.windowBoundaries = windowBoundaries;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(WindowOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      var windowSubscriber = new WindowSubscriber(subscriber);
      var sourceSubscription = source.subscribe(windowSubscriber);

      if (!sourceSubscription.closed) {
        windowSubscriber.add(Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_5__["innerSubscribe"])(this.windowBoundaries, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_5__["SimpleInnerSubscriber"](windowSubscriber)));
      }

      return sourceSubscription;
    }
  }]);

  return WindowOperator;
}();

var WindowSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(WindowSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(WindowSubscriber);

  function WindowSubscriber(destination) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, WindowSubscriber);

    _this = _super.call(this, destination);
    _this.window = new _Subject__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
    destination.next(_this.window);
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(WindowSubscriber, [{
    key: "notifyNext",
    value: function notifyNext() {
      this.openWindow();
    }
  }, {
    key: "notifyError",
    value: function notifyError(error) {
      this._error(error);
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {
      this._complete();
    }
  }, {
    key: "_next",
    value: function _next(value) {
      this.window.next(value);
    }
  }, {
    key: "_error",
    value: function _error(err) {
      this.window.error(err);
      this.destination.error(err);
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.window.complete();
      this.destination.complete();
    }
  }, {
    key: "_unsubscribe",
    value: function _unsubscribe() {
      this.window = null;
    }
  }, {
    key: "openWindow",
    value: function openWindow() {
      var prevWindow = this.window;

      if (prevWindow) {
        prevWindow.complete();
      }

      var destination = this.destination;
      var newWindow = this.window = new _Subject__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
      destination.next(newWindow);
    }
  }]);

  return WindowSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_5__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "mlxB":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/isDate.js ***!
  \************************************************************/
/*! exports provided: isDate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return isDate; });
function isDate(value) {
  return value instanceof Date && !isNaN(+value);
}

/***/ }),

/***/ "mrSG":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __createBinding, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__createBinding", function() { return __createBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function() { return __classPrivateFieldGet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function() { return __classPrivateFieldSet; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ "mrps":
/*!***************************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/firestore/es2015/index.js ***!
  \***************************************************************************/
/*! exports provided: EnablePersistenceToken, PersistenceSettingsToken, FirestoreSettingsToken, ENABLE_PERSISTENCE, PERSISTENCE_SETTINGS, SETTINGS, DefaultFirestoreSettings, associateQuery, AngularFirestore, AngularFirestoreModule, validateEventsArray, AngularFirestoreCollection, AngularFirestoreCollectionGroup, AngularFirestoreDocument, docChanges, sortedChanges, combineChanges, combineChange, fromRef, fromDocRef, fromCollectionRef */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./public_api */ "U9AN");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EnablePersistenceToken", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["EnablePersistenceToken"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PersistenceSettingsToken", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["PersistenceSettingsToken"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FirestoreSettingsToken", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["FirestoreSettingsToken"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ENABLE_PERSISTENCE", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ENABLE_PERSISTENCE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PERSISTENCE_SETTINGS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["PERSISTENCE_SETTINGS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SETTINGS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["SETTINGS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DefaultFirestoreSettings", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DefaultFirestoreSettings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "associateQuery", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["associateQuery"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngularFirestore", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AngularFirestore"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngularFirestoreModule", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AngularFirestoreModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "validateEventsArray", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["validateEventsArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngularFirestoreCollection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AngularFirestoreCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngularFirestoreCollectionGroup", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AngularFirestoreCollectionGroup"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AngularFirestoreDocument", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AngularFirestoreDocument"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "docChanges", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["docChanges"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedChanges", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["sortedChanges"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combineChanges", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["combineChanges"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combineChange", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["combineChange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromRef", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["fromRef"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromDocRef", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["fromDocRef"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromCollectionRef", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["fromCollectionRef"]; });



/***/ }),

/***/ "n6bG":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/isFunction.js ***!
  \****************************************************************/
/*! exports provided: isFunction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return isFunction; });
function isFunction(x) {
  return typeof x === 'function';
}

/***/ }),

/***/ "nYR2":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/finalize.js ***!
  \*******************************************************************/
/*! exports provided: finalize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "finalize", function() { return finalize; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Subscription */ "quSY");






function finalize(callback) {
  return function (source) {
    return source.lift(new FinallyOperator(callback));
  };
}

var FinallyOperator = /*#__PURE__*/function () {
  function FinallyOperator(callback) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, FinallyOperator);

    this.callback = callback;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(FinallyOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new FinallySubscriber(subscriber, this.callback));
    }
  }]);

  return FinallyOperator;
}();

var FinallySubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(FinallySubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(FinallySubscriber);

  function FinallySubscriber(destination, callback) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, FinallySubscriber);

    _this = _super.call(this, destination);

    _this.add(new _Subscription__WEBPACK_IMPORTED_MODULE_5__["Subscription"](callback));

    return _this;
  }

  return FinallySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "ngJS":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/subscribeToArray.js ***!
  \**********************************************************************/
/*! exports provided: subscribeToArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToArray", function() { return subscribeToArray; });
var subscribeToArray = function subscribeToArray(array) {
  return function (subscriber) {
    for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {
      subscriber.next(array[i]);
    }

    subscriber.complete();
  };
};

/***/ }),

/***/ "oB13":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/multicast.js ***!
  \********************************************************************/
/*! exports provided: multicast, MulticastOperator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multicast", function() { return multicast; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MulticastOperator", function() { return MulticastOperator; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/ConnectableObservable */ "EQ5u");



function multicast(subjectOrSubjectFactory, selector) {
  return function multicastOperatorFunction(source) {
    var subjectFactory;

    if (typeof subjectOrSubjectFactory === 'function') {
      subjectFactory = subjectOrSubjectFactory;
    } else {
      subjectFactory = function subjectFactory() {
        return subjectOrSubjectFactory;
      };
    }

    if (typeof selector === 'function') {
      return source.lift(new MulticastOperator(subjectFactory, selector));
    }

    var connectable = Object.create(source, _observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_2__["connectableObservableDescriptor"]);
    connectable.source = source;
    connectable.subjectFactory = subjectFactory;
    return connectable;
  };
}
var MulticastOperator = /*#__PURE__*/function () {
  function MulticastOperator(subjectFactory, selector) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MulticastOperator);

    this.subjectFactory = subjectFactory;
    this.selector = selector;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(MulticastOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      var selector = this.selector;
      var subject = this.subjectFactory();
      var subscription = selector(subject).subscribe(subscriber);
      subscription.add(source.subscribe(subject));
      return subscription;
    }
  }]);

  return MulticastOperator;
}();

/***/ }),

/***/ "ofXK":
/*!**********************************************************************!*\
  !*** ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js ***!
  \**********************************************************************/
/*! exports provided: APP_BASE_HREF, AsyncPipe, CommonModule, CurrencyPipe, DOCUMENT, DatePipe, DecimalPipe, FormStyle, FormatWidth, HashLocationStrategy, I18nPluralPipe, I18nSelectPipe, JsonPipe, KeyValuePipe, LOCATION_INITIALIZED, Location, LocationStrategy, LowerCasePipe, NgClass, NgComponentOutlet, NgForOf, NgForOfContext, NgIf, NgIfContext, NgLocaleLocalization, NgLocalization, NgPlural, NgPluralCase, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgTemplateOutlet, NumberFormatStyle, NumberSymbol, PathLocationStrategy, PercentPipe, PlatformLocation, Plural, SlicePipe, TitleCasePipe, TranslationWidth, UpperCasePipe, VERSION, ViewportScroller, WeekDay, formatCurrency, formatDate, formatNumber, formatPercent, getCurrencySymbol, getLocaleCurrencyCode, getLocaleCurrencyName, getLocaleCurrencySymbol, getLocaleDateFormat, getLocaleDateTimeFormat, getLocaleDayNames, getLocaleDayPeriods, getLocaleDirection, getLocaleEraNames, getLocaleExtraDayPeriodRules, getLocaleExtraDayPeriods, getLocaleFirstDayOfWeek, getLocaleId, getLocaleMonthNames, getLocaleNumberFormat, getLocaleNumberSymbol, getLocalePluralCase, getLocaleTimeFormat, getLocaleWeekEndRange, getNumberOfCurrencyDigits, isPlatformBrowser, isPlatformServer, isPlatformWorkerApp, isPlatformWorkerUi, registerLocaleData, ɵBrowserPlatformLocation, ɵDomAdapter, ɵNullViewportScroller, ɵPLATFORM_BROWSER_ID, ɵPLATFORM_SERVER_ID, ɵPLATFORM_WORKER_APP_ID, ɵPLATFORM_WORKER_UI_ID, ɵangular_packages_common_common_a, ɵangular_packages_common_common_b, ɵangular_packages_common_common_c, ɵangular_packages_common_common_d, ɵangular_packages_common_common_e, ɵangular_packages_common_common_f, ɵgetDOM, ɵparseCookieValue, ɵsetRootDomAdapter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APP_BASE_HREF", function() { return APP_BASE_HREF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncPipe", function() { return AsyncPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommonModule", function() { return CommonModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CurrencyPipe", function() { return CurrencyPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DOCUMENT", function() { return DOCUMENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DatePipe", function() { return DatePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DecimalPipe", function() { return DecimalPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormStyle", function() { return FormStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormatWidth", function() { return FormatWidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HashLocationStrategy", function() { return HashLocationStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "I18nPluralPipe", function() { return I18nPluralPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "I18nSelectPipe", function() { return I18nSelectPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JsonPipe", function() { return JsonPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyValuePipe", function() { return KeyValuePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOCATION_INITIALIZED", function() { return LOCATION_INITIALIZED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Location", function() { return Location; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationStrategy", function() { return LocationStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LowerCasePipe", function() { return LowerCasePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgClass", function() { return NgClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgComponentOutlet", function() { return NgComponentOutlet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgForOf", function() { return NgForOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgForOfContext", function() { return NgForOfContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgIf", function() { return NgIf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgIfContext", function() { return NgIfContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgLocaleLocalization", function() { return NgLocaleLocalization; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgLocalization", function() { return NgLocalization; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgPlural", function() { return NgPlural; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgPluralCase", function() { return NgPluralCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgStyle", function() { return NgStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgSwitch", function() { return NgSwitch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgSwitchCase", function() { return NgSwitchCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgSwitchDefault", function() { return NgSwitchDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgTemplateOutlet", function() { return NgTemplateOutlet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NumberFormatStyle", function() { return NumberFormatStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NumberSymbol", function() { return NumberSymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PathLocationStrategy", function() { return PathLocationStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PercentPipe", function() { return PercentPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PlatformLocation", function() { return PlatformLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Plural", function() { return Plural; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SlicePipe", function() { return SlicePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TitleCasePipe", function() { return TitleCasePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TranslationWidth", function() { return TranslationWidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpperCasePipe", function() { return UpperCasePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewportScroller", function() { return ViewportScroller; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WeekDay", function() { return WeekDay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatCurrency", function() { return formatCurrency; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatDate", function() { return formatDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatNumber", function() { return formatNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatPercent", function() { return formatPercent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCurrencySymbol", function() { return getCurrencySymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleCurrencyCode", function() { return getLocaleCurrencyCode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleCurrencyName", function() { return getLocaleCurrencyName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleCurrencySymbol", function() { return getLocaleCurrencySymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleDateFormat", function() { return getLocaleDateFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleDateTimeFormat", function() { return getLocaleDateTimeFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleDayNames", function() { return getLocaleDayNames; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleDayPeriods", function() { return getLocaleDayPeriods; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleDirection", function() { return getLocaleDirection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleEraNames", function() { return getLocaleEraNames; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleExtraDayPeriodRules", function() { return getLocaleExtraDayPeriodRules; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleExtraDayPeriods", function() { return getLocaleExtraDayPeriods; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleFirstDayOfWeek", function() { return getLocaleFirstDayOfWeek; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleId", function() { return getLocaleId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleMonthNames", function() { return getLocaleMonthNames; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleNumberFormat", function() { return getLocaleNumberFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleNumberSymbol", function() { return getLocaleNumberSymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocalePluralCase", function() { return getLocalePluralCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleTimeFormat", function() { return getLocaleTimeFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleWeekEndRange", function() { return getLocaleWeekEndRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getNumberOfCurrencyDigits", function() { return getNumberOfCurrencyDigits; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPlatformBrowser", function() { return isPlatformBrowser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPlatformServer", function() { return isPlatformServer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPlatformWorkerApp", function() { return isPlatformWorkerApp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPlatformWorkerUi", function() { return isPlatformWorkerUi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registerLocaleData", function() { return registerLocaleData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵBrowserPlatformLocation", function() { return BrowserPlatformLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵDomAdapter", function() { return DomAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNullViewportScroller", function() { return NullViewportScroller; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵPLATFORM_BROWSER_ID", function() { return PLATFORM_BROWSER_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵPLATFORM_SERVER_ID", function() { return PLATFORM_SERVER_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵPLATFORM_WORKER_APP_ID", function() { return PLATFORM_WORKER_APP_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵPLATFORM_WORKER_UI_ID", function() { return PLATFORM_WORKER_UI_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_common_a", function() { return useBrowserPlatformLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_common_b", function() { return createBrowserPlatformLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_common_c", function() { return createLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_common_d", function() { return provideLocationStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_common_e", function() { return COMMON_DIRECTIVES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_common_f", function() { return COMMON_PIPES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetDOM", function() { return getDOM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵparseCookieValue", function() { return parseCookieValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵsetRootDomAdapter", function() { return setRootDomAdapter; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "uFwe");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "ODXe");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ "fXoL");







/**
 * @license Angular v11.0.2
 * (c) 2010-2020 Google LLC. https://angular.io/
 * License: MIT
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var _DOM = null;

function getDOM() {
  return _DOM;
}

function setDOM(adapter) {
  _DOM = adapter;
}

function setRootDomAdapter(adapter) {
  if (!_DOM) {
    _DOM = adapter;
  }
}
/* tslint:disable:requireParameterType */

/**
 * Provides DOM operations in an environment-agnostic way.
 *
 * @security Tread carefully! Interacting with the DOM directly is dangerous and
 * can introduce XSS risks.
 */


var DomAdapter = function DomAdapter() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, DomAdapter);
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A DI Token representing the main rendering context. In a browser this is the DOM Document.
 *
 * Note: Document might not be available in the Application Context when Application and Rendering
 * Contexts are not the same (e.g. when running the application in a Web Worker).
 *
 * @publicApi
 */


var DOCUMENT = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_6__["InjectionToken"]('DocumentToken');

var PlatformLocation = /*@__PURE__*/function () {
  var PlatformLocation = function PlatformLocation() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, PlatformLocation);
  };

  PlatformLocation.ɵfac = function PlatformLocation_Factory(t) {
    return new (t || PlatformLocation)();
  };

  PlatformLocation.ɵprov = /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"])({
    factory: useBrowserPlatformLocation,
    token: PlatformLocation,
    providedIn: "platform"
  });
  return PlatformLocation;
}();

function useBrowserPlatformLocation() {
  return Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"])(BrowserPlatformLocation);
}
/**
 * @description
 * Indicates when a location is initialized.
 *
 * @publicApi
 */


var LOCATION_INITIALIZED = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_6__["InjectionToken"]('Location Initialized');

var BrowserPlatformLocation = /*@__PURE__*/function () {
  var BrowserPlatformLocation = /*#__PURE__*/function (_PlatformLocation) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(BrowserPlatformLocation, _PlatformLocation);

    var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(BrowserPlatformLocation);

    function BrowserPlatformLocation(_doc) {
      var _this;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, BrowserPlatformLocation);

      _this = _super.call(this);
      _this._doc = _doc;

      _this._init();

      return _this;
    } // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it

    /** @internal */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(BrowserPlatformLocation, [{
      key: "_init",
      value: function _init() {
        this.location = getDOM().getLocation();
        this._history = getDOM().getHistory();
      }
    }, {
      key: "getBaseHrefFromDOM",
      value: function getBaseHrefFromDOM() {
        return getDOM().getBaseHref(this._doc);
      }
    }, {
      key: "onPopState",
      value: function onPopState(fn) {
        getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);
      }
    }, {
      key: "onHashChange",
      value: function onHashChange(fn) {
        getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);
      }
    }, {
      key: "pushState",
      value: function pushState(state, title, url) {
        if (supportsState()) {
          this._history.pushState(state, title, url);
        } else {
          this.location.hash = url;
        }
      }
    }, {
      key: "replaceState",
      value: function replaceState(state, title, url) {
        if (supportsState()) {
          this._history.replaceState(state, title, url);
        } else {
          this.location.hash = url;
        }
      }
    }, {
      key: "forward",
      value: function forward() {
        this._history.forward();
      }
    }, {
      key: "back",
      value: function back() {
        this._history.back();
      }
    }, {
      key: "getState",
      value: function getState() {
        return this._history.state;
      }
    }, {
      key: "href",
      get: function get() {
        return this.location.href;
      }
    }, {
      key: "protocol",
      get: function get() {
        return this.location.protocol;
      }
    }, {
      key: "hostname",
      get: function get() {
        return this.location.hostname;
      }
    }, {
      key: "port",
      get: function get() {
        return this.location.port;
      }
    }, {
      key: "pathname",
      get: function get() {
        return this.location.pathname;
      },
      set: function set(newPath) {
        this.location.pathname = newPath;
      }
    }, {
      key: "search",
      get: function get() {
        return this.location.search;
      }
    }, {
      key: "hash",
      get: function get() {
        return this.location.hash;
      }
    }]);

    return BrowserPlatformLocation;
  }(PlatformLocation);

  BrowserPlatformLocation.ɵfac = function BrowserPlatformLocation_Factory(t) {
    return new (t || BrowserPlatformLocation)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](DOCUMENT));
  };

  BrowserPlatformLocation.ɵprov = /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"])({
    factory: createBrowserPlatformLocation,
    token: BrowserPlatformLocation,
    providedIn: "platform"
  });
  return BrowserPlatformLocation;
}();

function supportsState() {
  return !!window.history.pushState;
}

function createBrowserPlatformLocation() {
  return new BrowserPlatformLocation(Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"])(DOCUMENT));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Joins two parts of a URL with a slash if needed.
 *
 * @param start  URL string
 * @param end    URL string
 *
 *
 * @returns The joined URL string.
 */


function joinWithSlash(start, end) {
  if (start.length == 0) {
    return end;
  }

  if (end.length == 0) {
    return start;
  }

  var slashes = 0;

  if (start.endsWith('/')) {
    slashes++;
  }

  if (end.startsWith('/')) {
    slashes++;
  }

  if (slashes == 2) {
    return start + end.substring(1);
  }

  if (slashes == 1) {
    return start + end;
  }

  return start + '/' + end;
}
/**
 * Removes a trailing slash from a URL string if needed.
 * Looks for the first occurrence of either `#`, `?`, or the end of the
 * line as `/` characters and removes the trailing slash if one exists.
 *
 * @param url URL string.
 *
 * @returns The URL string, modified if needed.
 */


function stripTrailingSlash(url) {
  var match = url.match(/#|\?|$/);
  var pathEndIdx = match && match.index || url.length;
  var droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);
  return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);
}
/**
 * Normalizes URL parameters by prepending with `?` if needed.
 *
 * @param  params String of URL parameters.
 *
 * @returns The normalized URL parameters string.
 */


function normalizeQueryParams(params) {
  return params && params[0] !== '?' ? '?' + params : params;
}

var LocationStrategy = /*@__PURE__*/function () {
  var LocationStrategy = function LocationStrategy() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, LocationStrategy);
  };

  LocationStrategy.ɵfac = function LocationStrategy_Factory(t) {
    return new (t || LocationStrategy)();
  };

  LocationStrategy.ɵprov = /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"])({
    factory: provideLocationStrategy,
    token: LocationStrategy,
    providedIn: "root"
  });
  return LocationStrategy;
}();

function provideLocationStrategy(platformLocation) {
  // See #23917
  var location = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"])(DOCUMENT).location;
  return new PathLocationStrategy(Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"])(PlatformLocation), location && location.origin || '');
}
/**
 * A predefined [DI token](guide/glossary#di-token) for the base href
 * to be used with the `PathLocationStrategy`.
 * The base href is the URL prefix that should be preserved when generating
 * and recognizing URLs.
 *
 * @usageNotes
 *
 * The following example shows how to use this token to configure the root app injector
 * with a base href value, so that the DI framework can supply the dependency anywhere in the app.
 *
 * ```typescript
 * import {Component, NgModule} from '@angular/core';
 * import {APP_BASE_HREF} from '@angular/common';
 *
 * @NgModule({
 *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]
 * })
 * class AppModule {}
 * ```
 *
 * @publicApi
 */


var APP_BASE_HREF = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_6__["InjectionToken"]('appBaseHref');

var PathLocationStrategy = /*@__PURE__*/function () {
  var PathLocationStrategy = /*#__PURE__*/function (_LocationStrategy) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(PathLocationStrategy, _LocationStrategy);

    var _super2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(PathLocationStrategy);

    function PathLocationStrategy(_platformLocation, href) {
      var _this2;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, PathLocationStrategy);

      _this2 = _super2.call(this);
      _this2._platformLocation = _platformLocation;

      if (href == null) {
        href = _this2._platformLocation.getBaseHrefFromDOM();
      }

      if (href == null) {
        throw new Error("No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.");
      }

      _this2._baseHref = href;
      return _this2;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(PathLocationStrategy, [{
      key: "onPopState",
      value: function onPopState(fn) {
        this._platformLocation.onPopState(fn);

        this._platformLocation.onHashChange(fn);
      }
    }, {
      key: "getBaseHref",
      value: function getBaseHref() {
        return this._baseHref;
      }
    }, {
      key: "prepareExternalUrl",
      value: function prepareExternalUrl(internal) {
        return joinWithSlash(this._baseHref, internal);
      }
    }, {
      key: "path",
      value: function path() {
        var includeHash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        var pathname = this._platformLocation.pathname + normalizeQueryParams(this._platformLocation.search);
        var hash = this._platformLocation.hash;
        return hash && includeHash ? "".concat(pathname).concat(hash) : pathname;
      }
    }, {
      key: "pushState",
      value: function pushState(state, title, url, queryParams) {
        var externalUrl = this.prepareExternalUrl(url + normalizeQueryParams(queryParams));

        this._platformLocation.pushState(state, title, externalUrl);
      }
    }, {
      key: "replaceState",
      value: function replaceState(state, title, url, queryParams) {
        var externalUrl = this.prepareExternalUrl(url + normalizeQueryParams(queryParams));

        this._platformLocation.replaceState(state, title, externalUrl);
      }
    }, {
      key: "forward",
      value: function forward() {
        this._platformLocation.forward();
      }
    }, {
      key: "back",
      value: function back() {
        this._platformLocation.back();
      }
    }]);

    return PathLocationStrategy;
  }(LocationStrategy);

  PathLocationStrategy.ɵfac = function PathLocationStrategy_Factory(t) {
    return new (t || PathLocationStrategy)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](PlatformLocation), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](APP_BASE_HREF, 8));
  };

  PathLocationStrategy.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"]({
    token: PathLocationStrategy,
    factory: PathLocationStrategy.ɵfac
  });
  return PathLocationStrategy;
}();

var HashLocationStrategy = /*@__PURE__*/function () {
  var HashLocationStrategy = /*#__PURE__*/function (_LocationStrategy2) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(HashLocationStrategy, _LocationStrategy2);

    var _super3 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(HashLocationStrategy);

    function HashLocationStrategy(_platformLocation, _baseHref) {
      var _this3;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, HashLocationStrategy);

      _this3 = _super3.call(this);
      _this3._platformLocation = _platformLocation;
      _this3._baseHref = '';

      if (_baseHref != null) {
        _this3._baseHref = _baseHref;
      }

      return _this3;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(HashLocationStrategy, [{
      key: "onPopState",
      value: function onPopState(fn) {
        this._platformLocation.onPopState(fn);

        this._platformLocation.onHashChange(fn);
      }
    }, {
      key: "getBaseHref",
      value: function getBaseHref() {
        return this._baseHref;
      }
    }, {
      key: "path",
      value: function path() {
        var includeHash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        // the hash value is always prefixed with a `#`
        // and if it is empty then it will stay empty
        var path = this._platformLocation.hash;
        if (path == null) path = '#';
        return path.length > 0 ? path.substring(1) : path;
      }
    }, {
      key: "prepareExternalUrl",
      value: function prepareExternalUrl(internal) {
        var url = joinWithSlash(this._baseHref, internal);
        return url.length > 0 ? '#' + url : url;
      }
    }, {
      key: "pushState",
      value: function pushState(state, title, path, queryParams) {
        var url = this.prepareExternalUrl(path + normalizeQueryParams(queryParams));

        if (url.length == 0) {
          url = this._platformLocation.pathname;
        }

        this._platformLocation.pushState(state, title, url);
      }
    }, {
      key: "replaceState",
      value: function replaceState(state, title, path, queryParams) {
        var url = this.prepareExternalUrl(path + normalizeQueryParams(queryParams));

        if (url.length == 0) {
          url = this._platformLocation.pathname;
        }

        this._platformLocation.replaceState(state, title, url);
      }
    }, {
      key: "forward",
      value: function forward() {
        this._platformLocation.forward();
      }
    }, {
      key: "back",
      value: function back() {
        this._platformLocation.back();
      }
    }]);

    return HashLocationStrategy;
  }(LocationStrategy);

  HashLocationStrategy.ɵfac = function HashLocationStrategy_Factory(t) {
    return new (t || HashLocationStrategy)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](PlatformLocation), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](APP_BASE_HREF, 8));
  };

  HashLocationStrategy.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"]({
    token: HashLocationStrategy,
    factory: HashLocationStrategy.ɵfac
  });
  return HashLocationStrategy;
}();

var Location = /*@__PURE__*/function () {
  var Location = /*#__PURE__*/function () {
    function Location(platformStrategy, platformLocation) {
      var _this4 = this;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, Location);

      /** @internal */
      this._subject = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
      /** @internal */

      this._urlChangeListeners = [];
      this._platformStrategy = platformStrategy;

      var browserBaseHref = this._platformStrategy.getBaseHref();

      this._platformLocation = platformLocation;
      this._baseHref = stripTrailingSlash(_stripIndexHtml(browserBaseHref));

      this._platformStrategy.onPopState(function (ev) {
        _this4._subject.emit({
          'url': _this4.path(true),
          'pop': true,
          'state': ev.state,
          'type': ev.type
        });
      });
    }
    /**
     * Normalizes the URL path for this location.
     *
     * @param includeHash True to include an anchor fragment in the path.
     *
     * @returns The normalized URL path.
     */
    // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is
    // removed.


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(Location, [{
      key: "path",
      value: function path() {
        var includeHash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        return this.normalize(this._platformStrategy.path(includeHash));
      }
      /**
       * Reports the current state of the location history.
       * @returns The current value of the `history.state` object.
       */

    }, {
      key: "getState",
      value: function getState() {
        return this._platformLocation.getState();
      }
      /**
       * Normalizes the given path and compares to the current normalized path.
       *
       * @param path The given URL path.
       * @param query Query parameters.
       *
       * @returns True if the given URL path is equal to the current normalized path, false
       * otherwise.
       */

    }, {
      key: "isCurrentPathEqualTo",
      value: function isCurrentPathEqualTo(path) {
        var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
        return this.path() == this.normalize(path + normalizeQueryParams(query));
      }
      /**
       * Normalizes a URL path by stripping any trailing slashes.
       *
       * @param url String representing a URL.
       *
       * @returns The normalized URL string.
       */

    }, {
      key: "normalize",
      value: function normalize(url) {
        return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));
      }
      /**
       * Normalizes an external URL path.
       * If the given URL doesn't begin with a leading slash (`'/'`), adds one
       * before normalizing. Adds a hash if `HashLocationStrategy` is
       * in use, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.
       *
       * @param url String representing a URL.
       *
       * @returns  A normalized platform-specific URL.
       */

    }, {
      key: "prepareExternalUrl",
      value: function prepareExternalUrl(url) {
        if (url && url[0] !== '/') {
          url = '/' + url;
        }

        return this._platformStrategy.prepareExternalUrl(url);
      } // TODO: rename this method to pushState

      /**
       * Changes the browser's URL to a normalized version of a given URL, and pushes a
       * new item onto the platform's history.
       *
       * @param path  URL path to normalize.
       * @param query Query parameters.
       * @param state Location history state.
       *
       */

    }, {
      key: "go",
      value: function go(path) {
        var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
        var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

        this._platformStrategy.pushState(state, '', path, query);

        this._notifyUrlChangeListeners(this.prepareExternalUrl(path + normalizeQueryParams(query)), state);
      }
      /**
       * Changes the browser's URL to a normalized version of the given URL, and replaces
       * the top item on the platform's history stack.
       *
       * @param path  URL path to normalize.
       * @param query Query parameters.
       * @param state Location history state.
       */

    }, {
      key: "replaceState",
      value: function replaceState(path) {
        var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
        var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

        this._platformStrategy.replaceState(state, '', path, query);

        this._notifyUrlChangeListeners(this.prepareExternalUrl(path + normalizeQueryParams(query)), state);
      }
      /**
       * Navigates forward in the platform's history.
       */

    }, {
      key: "forward",
      value: function forward() {
        this._platformStrategy.forward();
      }
      /**
       * Navigates back in the platform's history.
       */

    }, {
      key: "back",
      value: function back() {
        this._platformStrategy.back();
      }
      /**
       * Registers a URL change listener. Use to catch updates performed by the Angular
       * framework that are not detectible through "popstate" or "hashchange" events.
       *
       * @param fn The change handler function, which take a URL and a location history state.
       */

    }, {
      key: "onUrlChange",
      value: function onUrlChange(fn) {
        var _this5 = this;

        this._urlChangeListeners.push(fn);

        if (!this._urlChangeSubscription) {
          this._urlChangeSubscription = this.subscribe(function (v) {
            _this5._notifyUrlChangeListeners(v.url, v.state);
          });
        }
      }
      /** @internal */

    }, {
      key: "_notifyUrlChangeListeners",
      value: function _notifyUrlChangeListeners() {
        var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
        var state = arguments.length > 1 ? arguments[1] : undefined;

        this._urlChangeListeners.forEach(function (fn) {
          return fn(url, state);
        });
      }
      /**
       * Subscribes to the platform's `popState` events.
       *
       * @param value Event that is triggered when the state history changes.
       * @param exception The exception to throw.
       *
       * @returns Subscribed events.
       */

    }, {
      key: "subscribe",
      value: function subscribe(onNext, onThrow, onReturn) {
        return this._subject.subscribe({
          next: onNext,
          error: onThrow,
          complete: onReturn
        });
      }
    }]);

    return Location;
  }();

  Location.ɵfac = function Location_Factory(t) {
    return new (t || Location)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](LocationStrategy), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](PlatformLocation));
  };
  /**
   * Normalizes URL parameters by prepending with `?` if needed.
   *
   * @param  params String of URL parameters.
   *
   * @returns The normalized URL parameters string.
   */


  Location.normalizeQueryParams = normalizeQueryParams;
  /**
   * Joins two parts of a URL with a slash if needed.
   *
   * @param start  URL string
   * @param end    URL string
   *
   *
   * @returns The joined URL string.
   */

  Location.joinWithSlash = joinWithSlash;
  /**
   * Removes a trailing slash from a URL string if needed.
   * Looks for the first occurrence of either `#`, `?`, or the end of the
   * line as `/` characters and removes the trailing slash if one exists.
   *
   * @param url URL string.
   *
   * @returns The URL string, modified if needed.
   */

  Location.stripTrailingSlash = stripTrailingSlash;
  Location.ɵprov = /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"])({
    factory: createLocation,
    token: Location,
    providedIn: "root"
  });
  return Location;
}();

function createLocation() {
  return new Location(Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"])(LocationStrategy), Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"])(PlatformLocation));
}

function _stripBaseHref(baseHref, url) {
  return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;
}

function _stripIndexHtml(url) {
  return url.replace(/\/index.html$/, '');
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** @internal */


var CURRENCIES_EN = {
  'ADP': [undefined, undefined, 0],
  'AFN': [undefined, undefined, 0],
  'ALL': [undefined, undefined, 0],
  'AMD': [undefined, undefined, 2],
  'AOA': [undefined, 'Kz'],
  'ARS': [undefined, '$'],
  'AUD': ['A$', '$'],
  'BAM': [undefined, 'KM'],
  'BBD': [undefined, '$'],
  'BDT': [undefined, '৳'],
  'BHD': [undefined, undefined, 3],
  'BIF': [undefined, undefined, 0],
  'BMD': [undefined, '$'],
  'BND': [undefined, '$'],
  'BOB': [undefined, 'Bs'],
  'BRL': ['R$'],
  'BSD': [undefined, '$'],
  'BWP': [undefined, 'P'],
  'BYN': [undefined, 'р.', 2],
  'BYR': [undefined, undefined, 0],
  'BZD': [undefined, '$'],
  'CAD': ['CA$', '$', 2],
  'CHF': [undefined, undefined, 2],
  'CLF': [undefined, undefined, 4],
  'CLP': [undefined, '$', 0],
  'CNY': ['CN¥', '¥'],
  'COP': [undefined, '$', 2],
  'CRC': [undefined, '₡', 2],
  'CUC': [undefined, '$'],
  'CUP': [undefined, '$'],
  'CZK': [undefined, 'Kč', 2],
  'DJF': [undefined, undefined, 0],
  'DKK': [undefined, 'kr', 2],
  'DOP': [undefined, '$'],
  'EGP': [undefined, 'E£'],
  'ESP': [undefined, '₧', 0],
  'EUR': ['€'],
  'FJD': [undefined, '$'],
  'FKP': [undefined, '£'],
  'GBP': ['£'],
  'GEL': [undefined, '₾'],
  'GIP': [undefined, '£'],
  'GNF': [undefined, 'FG', 0],
  'GTQ': [undefined, 'Q'],
  'GYD': [undefined, '$', 2],
  'HKD': ['HK$', '$'],
  'HNL': [undefined, 'L'],
  'HRK': [undefined, 'kn'],
  'HUF': [undefined, 'Ft', 2],
  'IDR': [undefined, 'Rp', 2],
  'ILS': ['₪'],
  'INR': ['₹'],
  'IQD': [undefined, undefined, 0],
  'IRR': [undefined, undefined, 0],
  'ISK': [undefined, 'kr', 0],
  'ITL': [undefined, undefined, 0],
  'JMD': [undefined, '$'],
  'JOD': [undefined, undefined, 3],
  'JPY': ['¥', undefined, 0],
  'KHR': [undefined, '៛'],
  'KMF': [undefined, 'CF', 0],
  'KPW': [undefined, '₩', 0],
  'KRW': ['₩', undefined, 0],
  'KWD': [undefined, undefined, 3],
  'KYD': [undefined, '$'],
  'KZT': [undefined, '₸'],
  'LAK': [undefined, '₭', 0],
  'LBP': [undefined, 'L£', 0],
  'LKR': [undefined, 'Rs'],
  'LRD': [undefined, '$'],
  'LTL': [undefined, 'Lt'],
  'LUF': [undefined, undefined, 0],
  'LVL': [undefined, 'Ls'],
  'LYD': [undefined, undefined, 3],
  'MGA': [undefined, 'Ar', 0],
  'MGF': [undefined, undefined, 0],
  'MMK': [undefined, 'K', 0],
  'MNT': [undefined, '₮', 2],
  'MRO': [undefined, undefined, 0],
  'MUR': [undefined, 'Rs', 2],
  'MXN': ['MX$', '$'],
  'MYR': [undefined, 'RM'],
  'NAD': [undefined, '$'],
  'NGN': [undefined, '₦'],
  'NIO': [undefined, 'C$'],
  'NOK': [undefined, 'kr', 2],
  'NPR': [undefined, 'Rs'],
  'NZD': ['NZ$', '$'],
  'OMR': [undefined, undefined, 3],
  'PHP': [undefined, '₱'],
  'PKR': [undefined, 'Rs', 2],
  'PLN': [undefined, 'zł'],
  'PYG': [undefined, '₲', 0],
  'RON': [undefined, 'lei'],
  'RSD': [undefined, undefined, 0],
  'RUB': [undefined, '₽'],
  'RUR': [undefined, 'р.'],
  'RWF': [undefined, 'RF', 0],
  'SBD': [undefined, '$'],
  'SEK': [undefined, 'kr', 2],
  'SGD': [undefined, '$'],
  'SHP': [undefined, '£'],
  'SLL': [undefined, undefined, 0],
  'SOS': [undefined, undefined, 0],
  'SRD': [undefined, '$'],
  'SSP': [undefined, '£'],
  'STD': [undefined, undefined, 0],
  'STN': [undefined, 'Db'],
  'SYP': [undefined, '£', 0],
  'THB': [undefined, '฿'],
  'TMM': [undefined, undefined, 0],
  'TND': [undefined, undefined, 3],
  'TOP': [undefined, 'T$'],
  'TRL': [undefined, undefined, 0],
  'TRY': [undefined, '₺'],
  'TTD': [undefined, '$'],
  'TWD': ['NT$', '$', 2],
  'TZS': [undefined, undefined, 2],
  'UAH': [undefined, '₴'],
  'UGX': [undefined, undefined, 0],
  'USD': ['$'],
  'UYI': [undefined, undefined, 0],
  'UYU': [undefined, '$'],
  'UYW': [undefined, undefined, 4],
  'UZS': [undefined, undefined, 2],
  'VEF': [undefined, 'Bs', 2],
  'VND': ['₫', undefined, 0],
  'VUV': [undefined, undefined, 0],
  'XAF': ['FCFA', undefined, 0],
  'XCD': ['EC$', '$'],
  'XOF': ['CFA', undefined, 0],
  'XPF': ['CFPF', undefined, 0],
  'XXX': ['¤'],
  'YER': [undefined, undefined, 0],
  'ZAR': [undefined, 'R'],
  'ZMK': [undefined, undefined, 0],
  'ZMW': [undefined, 'ZK'],
  'ZWD': [undefined, undefined, 0]
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Format styles that can be used to represent numbers.
 * @see `getLocaleNumberFormat()`.
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */

var NumberFormatStyle = /*@__PURE__*/function (NumberFormatStyle) {
  NumberFormatStyle[NumberFormatStyle["Decimal"] = 0] = "Decimal";
  NumberFormatStyle[NumberFormatStyle["Percent"] = 1] = "Percent";
  NumberFormatStyle[NumberFormatStyle["Currency"] = 2] = "Currency";
  NumberFormatStyle[NumberFormatStyle["Scientific"] = 3] = "Scientific";
  return NumberFormatStyle;
}({});
/**
 * Plurality cases used for translating plurals to different languages.
 *
 * @see `NgPlural`
 * @see `NgPluralCase`
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


var Plural = /*@__PURE__*/function (Plural) {
  Plural[Plural["Zero"] = 0] = "Zero";
  Plural[Plural["One"] = 1] = "One";
  Plural[Plural["Two"] = 2] = "Two";
  Plural[Plural["Few"] = 3] = "Few";
  Plural[Plural["Many"] = 4] = "Many";
  Plural[Plural["Other"] = 5] = "Other";
  return Plural;
}({});
/**
 * Context-dependant translation forms for strings.
 * Typically the standalone version is for the nominative form of the word,
 * and the format version is used for the genitive case.
 * @see [CLDR website](http://cldr.unicode.org/translation/date-time-1/date-time#TOC-Standalone-vs.-Format-Styles)
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


var FormStyle = /*@__PURE__*/function (FormStyle) {
  FormStyle[FormStyle["Format"] = 0] = "Format";
  FormStyle[FormStyle["Standalone"] = 1] = "Standalone";
  return FormStyle;
}({});
/**
 * String widths available for translations.
 * The specific character widths are locale-specific.
 * Examples are given for the word "Sunday" in English.
 *
 * @publicApi
 */


var TranslationWidth = /*@__PURE__*/function (TranslationWidth) {
  /** 1 character for `en-US`. For example: 'S' */
  TranslationWidth[TranslationWidth["Narrow"] = 0] = "Narrow";
  /** 3 characters for `en-US`. For example: 'Sun' */

  TranslationWidth[TranslationWidth["Abbreviated"] = 1] = "Abbreviated";
  /** Full length for `en-US`. For example: "Sunday" */

  TranslationWidth[TranslationWidth["Wide"] = 2] = "Wide";
  /** 2 characters for `en-US`, For example: "Su" */

  TranslationWidth[TranslationWidth["Short"] = 3] = "Short";
  return TranslationWidth;
}({});
/**
 * String widths available for date-time formats.
 * The specific character widths are locale-specific.
 * Examples are given for `en-US`.
 *
 * @see `getLocaleDateFormat()`
 * @see `getLocaleTimeFormat()``
 * @see `getLocaleDateTimeFormat()`
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 * @publicApi
 */


var FormatWidth = /*@__PURE__*/function (FormatWidth) {
  /**
   * For `en-US`, 'M/d/yy, h:mm a'`
   * (Example: `6/15/15, 9:03 AM`)
   */
  FormatWidth[FormatWidth["Short"] = 0] = "Short";
  /**
   * For `en-US`, `'MMM d, y, h:mm:ss a'`
   * (Example: `Jun 15, 2015, 9:03:01 AM`)
   */

  FormatWidth[FormatWidth["Medium"] = 1] = "Medium";
  /**
   * For `en-US`, `'MMMM d, y, h:mm:ss a z'`
   * (Example: `June 15, 2015 at 9:03:01 AM GMT+1`)
   */

  FormatWidth[FormatWidth["Long"] = 2] = "Long";
  /**
   * For `en-US`, `'EEEE, MMMM d, y, h:mm:ss a zzzz'`
   * (Example: `Monday, June 15, 2015 at 9:03:01 AM GMT+01:00`)
   */

  FormatWidth[FormatWidth["Full"] = 3] = "Full";
  return FormatWidth;
}({});
/**
 * Symbols that can be used to replace placeholders in number patterns.
 * Examples are based on `en-US` values.
 *
 * @see `getLocaleNumberSymbol()`
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


var NumberSymbol = /*@__PURE__*/function (NumberSymbol) {
  /**
   * Decimal separator.
   * For `en-US`, the dot character.
   * Example : 2,345`.`67
   */
  NumberSymbol[NumberSymbol["Decimal"] = 0] = "Decimal";
  /**
   * Grouping separator, typically for thousands.
   * For `en-US`, the comma character.
   * Example: 2`,`345.67
   */

  NumberSymbol[NumberSymbol["Group"] = 1] = "Group";
  /**
   * List-item separator.
   * Example: "one, two, and three"
   */

  NumberSymbol[NumberSymbol["List"] = 2] = "List";
  /**
   * Sign for percentage (out of 100).
   * Example: 23.4%
   */

  NumberSymbol[NumberSymbol["PercentSign"] = 3] = "PercentSign";
  /**
   * Sign for positive numbers.
   * Example: +23
   */

  NumberSymbol[NumberSymbol["PlusSign"] = 4] = "PlusSign";
  /**
   * Sign for negative numbers.
   * Example: -23
   */

  NumberSymbol[NumberSymbol["MinusSign"] = 5] = "MinusSign";
  /**
   * Computer notation for exponential value (n times a power of 10).
   * Example: 1.2E3
   */

  NumberSymbol[NumberSymbol["Exponential"] = 6] = "Exponential";
  /**
   * Human-readable format of exponential.
   * Example: 1.2x103
   */

  NumberSymbol[NumberSymbol["SuperscriptingExponent"] = 7] = "SuperscriptingExponent";
  /**
   * Sign for permille (out of 1000).
   * Example: 23.4‰
   */

  NumberSymbol[NumberSymbol["PerMille"] = 8] = "PerMille";
  /**
   * Infinity, can be used with plus and minus.
   * Example: ∞, +∞, -∞
   */

  NumberSymbol[NumberSymbol["Infinity"] = 9] = "Infinity";
  /**
   * Not a number.
   * Example: NaN
   */

  NumberSymbol[NumberSymbol["NaN"] = 10] = "NaN";
  /**
   * Symbol used between time units.
   * Example: 10:52
   */

  NumberSymbol[NumberSymbol["TimeSeparator"] = 11] = "TimeSeparator";
  /**
   * Decimal separator for currency values (fallback to `Decimal`).
   * Example: $2,345.67
   */

  NumberSymbol[NumberSymbol["CurrencyDecimal"] = 12] = "CurrencyDecimal";
  /**
   * Group separator for currency values (fallback to `Group`).
   * Example: $2,345.67
   */

  NumberSymbol[NumberSymbol["CurrencyGroup"] = 13] = "CurrencyGroup";
  return NumberSymbol;
}({});
/**
 * The value for each day of the week, based on the `en-US` locale
 *
 * @publicApi
 */


var WeekDay = /*@__PURE__*/function (WeekDay) {
  WeekDay[WeekDay["Sunday"] = 0] = "Sunday";
  WeekDay[WeekDay["Monday"] = 1] = "Monday";
  WeekDay[WeekDay["Tuesday"] = 2] = "Tuesday";
  WeekDay[WeekDay["Wednesday"] = 3] = "Wednesday";
  WeekDay[WeekDay["Thursday"] = 4] = "Thursday";
  WeekDay[WeekDay["Friday"] = 5] = "Friday";
  WeekDay[WeekDay["Saturday"] = 6] = "Saturday";
  return WeekDay;
}({});
/**
 * Retrieves the locale ID from the currently loaded locale.
 * The loaded locale could be, for example, a global one rather than a regional one.
 * @param locale A locale code, such as `fr-FR`.
 * @returns The locale code. For example, `fr`.
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getLocaleId(locale) {
  return Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale)[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].LocaleId];
}
/**
 * Retrieves day period strings for the given locale.
 *
 * @param locale A locale code for the locale format rules to use.
 * @param formStyle The required grammatical form.
 * @param width The required character width.
 * @returns An array of localized period strings. For example, `[AM, PM]` for `en-US`.
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getLocaleDayPeriods(locale, formStyle, width) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  var amPmData = [data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].DayPeriodsFormat], data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].DayPeriodsStandalone]];
  var amPm = getLastDefinedValue(amPmData, formStyle);
  return getLastDefinedValue(amPm, width);
}
/**
 * Retrieves days of the week for the given locale, using the Gregorian calendar.
 *
 * @param locale A locale code for the locale format rules to use.
 * @param formStyle The required grammatical form.
 * @param width The required character width.
 * @returns An array of localized name strings.
 * For example,`[Sunday, Monday, ... Saturday]` for `en-US`.
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getLocaleDayNames(locale, formStyle, width) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  var daysData = [data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].DaysFormat], data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].DaysStandalone]];
  var days = getLastDefinedValue(daysData, formStyle);
  return getLastDefinedValue(days, width);
}
/**
 * Retrieves months of the year for the given locale, using the Gregorian calendar.
 *
 * @param locale A locale code for the locale format rules to use.
 * @param formStyle The required grammatical form.
 * @param width The required character width.
 * @returns An array of localized name strings.
 * For example,  `[January, February, ...]` for `en-US`.
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getLocaleMonthNames(locale, formStyle, width) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  var monthsData = [data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].MonthsFormat], data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].MonthsStandalone]];
  var months = getLastDefinedValue(monthsData, formStyle);
  return getLastDefinedValue(months, width);
}
/**
 * Retrieves Gregorian-calendar eras for the given locale.
 * @param locale A locale code for the locale format rules to use.
 * @param width The required character width.

 * @returns An array of localized era strings.
 * For example, `[AD, BC]` for `en-US`.
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getLocaleEraNames(locale, width) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  var erasData = data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].Eras];
  return getLastDefinedValue(erasData, width);
}
/**
 * Retrieves the first day of the week for the given locale.
 *
 * @param locale A locale code for the locale format rules to use.
 * @returns A day index number, using the 0-based week-day index for `en-US`
 * (Sunday = 0, Monday = 1, ...).
 * For example, for `fr-FR`, returns 1 to indicate that the first day is Monday.
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getLocaleFirstDayOfWeek(locale) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  return data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].FirstDayOfWeek];
}
/**
 * Range of week days that are considered the week-end for the given locale.
 *
 * @param locale A locale code for the locale format rules to use.
 * @returns The range of day values, `[startDay, endDay]`.
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getLocaleWeekEndRange(locale) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  return data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].WeekendRange];
}
/**
 * Retrieves a localized date-value formating string.
 *
 * @param locale A locale code for the locale format rules to use.
 * @param width The format type.
 * @returns The localized formating string.
 * @see `FormatWidth`
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getLocaleDateFormat(locale, width) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  return getLastDefinedValue(data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].DateFormat], width);
}
/**
 * Retrieves a localized time-value formatting string.
 *
 * @param locale A locale code for the locale format rules to use.
 * @param width The format type.
 * @returns The localized formatting string.
 * @see `FormatWidth`
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)

 * @publicApi
 */


function getLocaleTimeFormat(locale, width) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  return getLastDefinedValue(data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].TimeFormat], width);
}
/**
 * Retrieves a localized date-time formatting string.
 *
 * @param locale A locale code for the locale format rules to use.
 * @param width The format type.
 * @returns The localized formatting string.
 * @see `FormatWidth`
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getLocaleDateTimeFormat(locale, width) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  var dateTimeFormatData = data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].DateTimeFormat];
  return getLastDefinedValue(dateTimeFormatData, width);
}
/**
 * Retrieves a localized number symbol that can be used to replace placeholders in number formats.
 * @param locale The locale code.
 * @param symbol The symbol to localize.
 * @returns The character for the localized symbol.
 * @see `NumberSymbol`
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getLocaleNumberSymbol(locale, symbol) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  var res = data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].NumberSymbols][symbol];

  if (typeof res === 'undefined') {
    if (symbol === NumberSymbol.CurrencyDecimal) {
      return data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].NumberSymbols][NumberSymbol.Decimal];
    } else if (symbol === NumberSymbol.CurrencyGroup) {
      return data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].NumberSymbols][NumberSymbol.Group];
    }
  }

  return res;
}
/**
 * Retrieves a number format for a given locale.
 *
 * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`
 * when used to format the number 12345.678 could result in "12'345,678". That would happen if the
 * grouping separator for your language is an apostrophe, and the decimal separator is a comma.
 *
 * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders
 * that stand for the decimal separator, and so on, and are NOT real characters.
 * You must NOT "translate" the placeholders. For example, don't change `.` to `,` even though in
 * your language the decimal point is written with a comma. The symbols should be replaced by the
 * local equivalents, using the appropriate `NumberSymbol` for your language.
 *
 * Here are the special characters used in number patterns:
 *
 * | Symbol | Meaning |
 * |--------|---------|
 * | . | Replaced automatically by the character used for the decimal point. |
 * | , | Replaced by the "grouping" (thousands) separator. |
 * | 0 | Replaced by a digit (or zero if there aren't enough digits). |
 * | # | Replaced by a digit (or nothing if there aren't enough). |
 * | ¤ | Replaced by a currency symbol, such as $ or USD. |
 * | % | Marks a percent format. The % symbol may change position, but must be retained. |
 * | E | Marks a scientific format. The E symbol may change position, but must be retained. |
 * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |
 *
 * @param locale A locale code for the locale format rules to use.
 * @param type The type of numeric value to be formatted (such as `Decimal` or `Currency`.)
 * @returns The localized format string.
 * @see `NumberFormatStyle`
 * @see [CLDR website](http://cldr.unicode.org/translation/number-patterns)
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getLocaleNumberFormat(locale, type) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  return data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].NumberFormats][type];
}
/**
 * Retrieves the symbol used to represent the currency for the main country
 * corresponding to a given locale. For example, '$' for `en-US`.
 *
 * @param locale A locale code for the locale format rules to use.
 * @returns The localized symbol character,
 * or `null` if the main country cannot be determined.
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getLocaleCurrencySymbol(locale) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  return data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].CurrencySymbol] || null;
}
/**
 * Retrieves the name of the currency for the main country corresponding
 * to a given locale. For example, 'US Dollar' for `en-US`.
 * @param locale A locale code for the locale format rules to use.
 * @returns The currency name,
 * or `null` if the main country cannot be determined.
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getLocaleCurrencyName(locale) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  return data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].CurrencyName] || null;
}
/**
 * Retrieves the default currency code for the given locale.
 *
 * The default is defined as the first currency which is still in use.
 *
 * @param locale The code of the locale whose currency code we want.
 * @returns The code of the default currency for the given locale.
 *
 * @publicApi
 */


function getLocaleCurrencyCode(locale) {
  return Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵgetLocaleCurrencyCode"])(locale);
}
/**
 * Retrieves the currency values for a given locale.
 * @param locale A locale code for the locale format rules to use.
 * @returns The currency values.
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 */


function getLocaleCurrencies(locale) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  return data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].Currencies];
}
/**
 * @alias core/ɵgetLocalePluralCase
 * @publicApi
 */


var getLocalePluralCase = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵgetLocalePluralCase"];

function checkFullData(data) {
  if (!data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].ExtraData]) {
    throw new Error("Missing extra locale data for the locale \"".concat(data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].LocaleId], "\". Use \"registerLocaleData\" to load new data. See the \"I18n guide\" on angular.io to know more."));
  }
}
/**
 * Retrieves locale-specific rules used to determine which day period to use
 * when more than one period is defined for a locale.
 *
 * There is a rule for each defined day period. The
 * first rule is applied to the first day period and so on.
 * Fall back to AM/PM when no rules are available.
 *
 * A rule can specify a period as time range, or as a single time value.
 *
 * This functionality is only available when you have loaded the full locale data.
 * See the ["I18n guide"](guide/i18n#i18n-pipes).
 *
 * @param locale A locale code for the locale format rules to use.
 * @returns The rules for the locale, a single time value or array of *from-time, to-time*,
 * or null if no periods are available.
 *
 * @see `getLocaleExtraDayPeriods()`
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getLocaleExtraDayPeriodRules(locale) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  checkFullData(data);
  var rules = data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].ExtraData][2
  /* ExtraDayPeriodsRules */
  ] || [];
  return rules.map(function (rule) {
    if (typeof rule === 'string') {
      return extractTime(rule);
    }

    return [extractTime(rule[0]), extractTime(rule[1])];
  });
}
/**
 * Retrieves locale-specific day periods, which indicate roughly how a day is broken up
 * in different languages.
 * For example, for `en-US`, periods are morning, noon, afternoon, evening, and midnight.
 *
 * This functionality is only available when you have loaded the full locale data.
 * See the ["I18n guide"](guide/i18n#i18n-pipes).
 *
 * @param locale A locale code for the locale format rules to use.
 * @param formStyle The required grammatical form.
 * @param width The required character width.
 * @returns The translated day-period strings.
 * @see `getLocaleExtraDayPeriodRules()`
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getLocaleExtraDayPeriods(locale, formStyle, width) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  checkFullData(data);
  var dayPeriodsData = [data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].ExtraData][0
  /* ExtraDayPeriodFormats */
  ], data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].ExtraData][1
  /* ExtraDayPeriodStandalone */
  ]];
  var dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];
  return getLastDefinedValue(dayPeriods, width) || [];
}
/**
 * Retrieves the writing direction of a specified locale
 * @param locale A locale code for the locale format rules to use.
 * @publicApi
 * @returns 'rtl' or 'ltr'
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 */


function getLocaleDirection(locale) {
  var data = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵfindLocaleData"])(locale);
  return data[_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵLocaleDataIndex"].Directionality];
}
/**
 * Retrieves the first value that is defined in an array, going backwards from an index position.
 *
 * To avoid repeating the same data (as when the "format" and "standalone" forms are the same)
 * add the first value to the locale data arrays, and add other values only if they are different.
 *
 * @param data The data array to retrieve from.
 * @param index A 0-based index into the array to start from.
 * @returns The value immediately before the given index position.
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getLastDefinedValue(data, index) {
  for (var i = index; i > -1; i--) {
    if (typeof data[i] !== 'undefined') {
      return data[i];
    }
  }

  throw new Error('Locale data API: locale data undefined');
}
/**
 * Extracts the hours and minutes from a string like "15:45"
 */


function extractTime(time) {
  var _time$split = time.split(':'),
      _time$split2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__["default"])(_time$split, 2),
      h = _time$split2[0],
      m = _time$split2[1];

  return {
    hours: +h,
    minutes: +m
  };
}
/**
 * Retrieves the currency symbol for a given currency code.
 *
 * For example, for the default `en-US` locale, the code `USD` can
 * be represented by the narrow symbol `$` or the wide symbol `US$`.
 *
 * @param code The currency code.
 * @param format The format, `wide` or `narrow`.
 * @param locale A locale code for the locale format rules to use.
 *
 * @returns The symbol, or the currency code if no symbol is available.
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function getCurrencySymbol(code, format) {
  var locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'en';
  var currency = getLocaleCurrencies(locale)[code] || CURRENCIES_EN[code] || [];
  var symbolNarrow = currency[1
  /* SymbolNarrow */
  ];

  if (format === 'narrow' && typeof symbolNarrow === 'string') {
    return symbolNarrow;
  }

  return currency[0
  /* Symbol */
  ] || code;
} // Most currencies have cents, that's why the default is 2


var DEFAULT_NB_OF_CURRENCY_DIGITS = 2;
/**
 * Reports the number of decimal digits for a given currency.
 * The value depends upon the presence of cents in that particular currency.
 *
 * @param code The currency code.
 * @returns The number of decimal digits, typically 0 or 2.
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */

function getNumberOfCurrencyDigits(code) {
  var digits;
  var currency = CURRENCIES_EN[code];

  if (currency) {
    digits = currency[2
    /* NbOfDigits */
    ];
  }

  return typeof digits === 'number' ? digits : DEFAULT_NB_OF_CURRENCY_DIGITS;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ISO8601_DATE_REGEX = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/; //    1        2       3         4          5          6          7          8  9     10      11

var NAMED_FORMATS = {};
var DATE_FORMATS_SPLIT = /((?:[^GyYMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;

var ZoneWidth = /*@__PURE__*/function (ZoneWidth) {
  ZoneWidth[ZoneWidth["Short"] = 0] = "Short";
  ZoneWidth[ZoneWidth["ShortGMT"] = 1] = "ShortGMT";
  ZoneWidth[ZoneWidth["Long"] = 2] = "Long";
  ZoneWidth[ZoneWidth["Extended"] = 3] = "Extended";
  return ZoneWidth;
}({});

var DateType = /*@__PURE__*/function (DateType) {
  DateType[DateType["FullYear"] = 0] = "FullYear";
  DateType[DateType["Month"] = 1] = "Month";
  DateType[DateType["Date"] = 2] = "Date";
  DateType[DateType["Hours"] = 3] = "Hours";
  DateType[DateType["Minutes"] = 4] = "Minutes";
  DateType[DateType["Seconds"] = 5] = "Seconds";
  DateType[DateType["FractionalSeconds"] = 6] = "FractionalSeconds";
  DateType[DateType["Day"] = 7] = "Day";
  return DateType;
}({});

var TranslationType = /*@__PURE__*/function (TranslationType) {
  TranslationType[TranslationType["DayPeriods"] = 0] = "DayPeriods";
  TranslationType[TranslationType["Days"] = 1] = "Days";
  TranslationType[TranslationType["Months"] = 2] = "Months";
  TranslationType[TranslationType["Eras"] = 3] = "Eras";
  return TranslationType;
}({});
/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a date according to locale rules.
 *
 * @param value The date to format, as a Date, or a number (milliseconds since UTC epoch)
 * or an [ISO date-time string](https://www.w3.org/TR/NOTE-datetime).
 * @param format The date-time components to include. See `DatePipe` for details.
 * @param locale A locale code for the locale format rules to use.
 * @param timezone The time zone. A time zone offset from GMT (such as `'+0430'`),
 * or a standard UTC/GMT or continental US time zone abbreviation.
 * If not specified, uses host system settings.
 *
 * @returns The formatted date string.
 *
 * @see `DatePipe`
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function formatDate(value, format, locale, timezone) {
  var date = toDate(value);
  var namedFormat = getNamedFormat(locale, format);
  format = namedFormat || format;
  var parts = [];
  var match;

  while (format) {
    match = DATE_FORMATS_SPLIT.exec(format);

    if (match) {
      parts = parts.concat(match.slice(1));
      var part = parts.pop();

      if (!part) {
        break;
      }

      format = part;
    } else {
      parts.push(format);
      break;
    }
  }

  var dateTimezoneOffset = date.getTimezoneOffset();

  if (timezone) {
    dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);
    date = convertTimezoneToLocal(date, timezone, true);
  }

  var text = '';
  parts.forEach(function (value) {
    var dateFormatter = getDateFormatter(value);
    text += dateFormatter ? dateFormatter(date, locale, dateTimezoneOffset) : value === '\'\'' ? '\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\'');
  });
  return text;
}

function getNamedFormat(locale, format) {
  var localeId = getLocaleId(locale);
  NAMED_FORMATS[localeId] = NAMED_FORMATS[localeId] || {};

  if (NAMED_FORMATS[localeId][format]) {
    return NAMED_FORMATS[localeId][format];
  }

  var formatValue = '';

  switch (format) {
    case 'shortDate':
      formatValue = getLocaleDateFormat(locale, FormatWidth.Short);
      break;

    case 'mediumDate':
      formatValue = getLocaleDateFormat(locale, FormatWidth.Medium);
      break;

    case 'longDate':
      formatValue = getLocaleDateFormat(locale, FormatWidth.Long);
      break;

    case 'fullDate':
      formatValue = getLocaleDateFormat(locale, FormatWidth.Full);
      break;

    case 'shortTime':
      formatValue = getLocaleTimeFormat(locale, FormatWidth.Short);
      break;

    case 'mediumTime':
      formatValue = getLocaleTimeFormat(locale, FormatWidth.Medium);
      break;

    case 'longTime':
      formatValue = getLocaleTimeFormat(locale, FormatWidth.Long);
      break;

    case 'fullTime':
      formatValue = getLocaleTimeFormat(locale, FormatWidth.Full);
      break;

    case 'short':
      var shortTime = getNamedFormat(locale, 'shortTime');
      var shortDate = getNamedFormat(locale, 'shortDate');
      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Short), [shortTime, shortDate]);
      break;

    case 'medium':
      var mediumTime = getNamedFormat(locale, 'mediumTime');
      var mediumDate = getNamedFormat(locale, 'mediumDate');
      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Medium), [mediumTime, mediumDate]);
      break;

    case 'long':
      var longTime = getNamedFormat(locale, 'longTime');
      var longDate = getNamedFormat(locale, 'longDate');
      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Long), [longTime, longDate]);
      break;

    case 'full':
      var fullTime = getNamedFormat(locale, 'fullTime');
      var fullDate = getNamedFormat(locale, 'fullDate');
      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Full), [fullTime, fullDate]);
      break;
  }

  if (formatValue) {
    NAMED_FORMATS[localeId][format] = formatValue;
  }

  return formatValue;
}

function formatDateTime(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{([^}]+)}/g, function (match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }

  return str;
}

function padNumber(num, digits) {
  var minusSign = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '-';
  var trim = arguments.length > 3 ? arguments[3] : undefined;
  var negWrap = arguments.length > 4 ? arguments[4] : undefined;
  var neg = '';

  if (num < 0 || negWrap && num <= 0) {
    if (negWrap) {
      num = -num + 1;
    } else {
      num = -num;
      neg = minusSign;
    }
  }

  var strNum = String(num);

  while (strNum.length < digits) {
    strNum = '0' + strNum;
  }

  if (trim) {
    strNum = strNum.substr(strNum.length - digits);
  }

  return neg + strNum;
}

function formatFractionalSeconds(milliseconds, digits) {
  var strMs = padNumber(milliseconds, 3);
  return strMs.substr(0, digits);
}
/**
 * Returns a date formatter that transforms a date into its locale digit representation
 */


function dateGetter(name, size) {
  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var trim = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  var negWrap = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  return function (date, locale) {
    var part = getDatePart(name, date);

    if (offset > 0 || part > -offset) {
      part += offset;
    }

    if (name === DateType.Hours) {
      if (part === 0 && offset === -12) {
        part = 12;
      }
    } else if (name === DateType.FractionalSeconds) {
      return formatFractionalSeconds(part, size);
    }

    var localeMinus = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);
    return padNumber(part, size, localeMinus, trim, negWrap);
  };
}

function getDatePart(part, date) {
  switch (part) {
    case DateType.FullYear:
      return date.getFullYear();

    case DateType.Month:
      return date.getMonth();

    case DateType.Date:
      return date.getDate();

    case DateType.Hours:
      return date.getHours();

    case DateType.Minutes:
      return date.getMinutes();

    case DateType.Seconds:
      return date.getSeconds();

    case DateType.FractionalSeconds:
      return date.getMilliseconds();

    case DateType.Day:
      return date.getDay();

    default:
      throw new Error("Unknown DateType value \"".concat(part, "\"."));
  }
}
/**
 * Returns a date formatter that transforms a date into its locale string representation
 */


function dateStrGetter(name, width) {
  var form = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : FormStyle.Format;
  var extended = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  return function (date, locale) {
    return getDateTranslation(date, locale, name, width, form, extended);
  };
}
/**
 * Returns the locale translation of a date for a given form, type and width
 */


function getDateTranslation(date, locale, name, width, form, extended) {
  switch (name) {
    case TranslationType.Months:
      return getLocaleMonthNames(locale, form, width)[date.getMonth()];

    case TranslationType.Days:
      return getLocaleDayNames(locale, form, width)[date.getDay()];

    case TranslationType.DayPeriods:
      var currentHours = date.getHours();
      var currentMinutes = date.getMinutes();

      if (extended) {
        var rules = getLocaleExtraDayPeriodRules(locale);
        var dayPeriods = getLocaleExtraDayPeriods(locale, form, width);
        var index = rules.findIndex(function (rule) {
          if (Array.isArray(rule)) {
            // morning, afternoon, evening, night
            var _rule = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__["default"])(rule, 2),
                from = _rule[0],
                to = _rule[1];

            var afterFrom = currentHours >= from.hours && currentMinutes >= from.minutes;
            var beforeTo = currentHours < to.hours || currentHours === to.hours && currentMinutes < to.minutes; // We must account for normal rules that span a period during the day (e.g. 6am-9am)
            // where `from` is less (earlier) than `to`. But also rules that span midnight (e.g.
            // 10pm - 5am) where `from` is greater (later!) than `to`.
            //
            // In the first case the current time must be BOTH after `from` AND before `to`
            // (e.g. 8am is after 6am AND before 10am).
            //
            // In the second case the current time must be EITHER after `from` OR before `to`
            // (e.g. 4am is before 5am but not after 10pm; and 11pm is not before 5am but it is
            // after 10pm).

            if (from.hours < to.hours) {
              if (afterFrom && beforeTo) {
                return true;
              }
            } else if (afterFrom || beforeTo) {
              return true;
            }
          } else {
            // noon or midnight
            if (rule.hours === currentHours && rule.minutes === currentMinutes) {
              return true;
            }
          }

          return false;
        });

        if (index !== -1) {
          return dayPeriods[index];
        }
      } // if no rules for the day periods, we use am/pm by default


      return getLocaleDayPeriods(locale, form, width)[currentHours < 12 ? 0 : 1];

    case TranslationType.Eras:
      return getLocaleEraNames(locale, width)[date.getFullYear() <= 0 ? 0 : 1];

    default:
      // This default case is not needed by TypeScript compiler, as the switch is exhaustive.
      // However Closure Compiler does not understand that and reports an error in typed mode.
      // The `throw new Error` below works around the problem, and the unexpected: never variable
      // makes sure tsc still checks this code is unreachable.
      var unexpected = name;
      throw new Error("unexpected translation type ".concat(unexpected));
  }
}
/**
 * Returns a date formatter that transforms a date and an offset into a timezone with ISO8601 or
 * GMT format depending on the width (eg: short = +0430, short:GMT = GMT+4, long = GMT+04:30,
 * extended = +04:30)
 */


function timeZoneGetter(width) {
  return function (date, locale, offset) {
    var zone = -1 * offset;
    var minusSign = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);
    var hours = zone > 0 ? Math.floor(zone / 60) : Math.ceil(zone / 60);

    switch (width) {
      case ZoneWidth.Short:
        return (zone >= 0 ? '+' : '') + padNumber(hours, 2, minusSign) + padNumber(Math.abs(zone % 60), 2, minusSign);

      case ZoneWidth.ShortGMT:
        return 'GMT' + (zone >= 0 ? '+' : '') + padNumber(hours, 1, minusSign);

      case ZoneWidth.Long:
        return 'GMT' + (zone >= 0 ? '+' : '') + padNumber(hours, 2, minusSign) + ':' + padNumber(Math.abs(zone % 60), 2, minusSign);

      case ZoneWidth.Extended:
        if (offset === 0) {
          return 'Z';
        } else {
          return (zone >= 0 ? '+' : '') + padNumber(hours, 2, minusSign) + ':' + padNumber(Math.abs(zone % 60), 2, minusSign);
        }

      default:
        throw new Error("Unknown zone width \"".concat(width, "\""));
    }
  };
}

var JANUARY = 0;
var THURSDAY = 4;

function getFirstThursdayOfYear(year) {
  var firstDayOfYear = new Date(year, JANUARY, 1).getDay();
  return new Date(year, 0, 1 + (firstDayOfYear <= THURSDAY ? THURSDAY : THURSDAY + 7) - firstDayOfYear);
}

function getThursdayThisWeek(datetime) {
  return new Date(datetime.getFullYear(), datetime.getMonth(), datetime.getDate() + (THURSDAY - datetime.getDay()));
}

function weekGetter(size) {
  var monthBased = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  return function (date, locale) {
    var result;

    if (monthBased) {
      var nbDaysBefore1stDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1;
      var today = date.getDate();
      result = 1 + Math.floor((today + nbDaysBefore1stDayOfMonth) / 7);
    } else {
      var thisThurs = getThursdayThisWeek(date); // Some days of a year are part of next year according to ISO 8601.
      // Compute the firstThurs from the year of this week's Thursday

      var firstThurs = getFirstThursdayOfYear(thisThurs.getFullYear());
      var diff = thisThurs.getTime() - firstThurs.getTime();
      result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week
    }

    return padNumber(result, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));
  };
}
/**
 * Returns a date formatter that provides the week-numbering year for the input date.
 */


function weekNumberingYearGetter(size) {
  var trim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  return function (date, locale) {
    var thisThurs = getThursdayThisWeek(date);
    var weekNumberingYear = thisThurs.getFullYear();
    return padNumber(weekNumberingYear, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign), trim);
  };
}

var DATE_FORMATS = {}; // Based on CLDR formats:
// See complete list: http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
// See also explanations: http://cldr.unicode.org/translation/date-time
// TODO(ocombe): support all missing cldr formats: Y, U, Q, D, F, e, c, j, J, C, A, v, V, X, x

function getDateFormatter(format) {
  if (DATE_FORMATS[format]) {
    return DATE_FORMATS[format];
  }

  var formatter;

  switch (format) {
    // Era name (AD/BC)
    case 'G':
    case 'GG':
    case 'GGG':
      formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Abbreviated);
      break;

    case 'GGGG':
      formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Wide);
      break;

    case 'GGGGG':
      formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Narrow);
      break;
    // 1 digit representation of the year, e.g. (AD 1 => 1, AD 199 => 199)

    case 'y':
      formatter = dateGetter(DateType.FullYear, 1, 0, false, true);
      break;
    // 2 digit representation of the year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)

    case 'yy':
      formatter = dateGetter(DateType.FullYear, 2, 0, true, true);
      break;
    // 3 digit representation of the year, padded (000-999). (e.g. AD 2001 => 01, AD 2010 => 10)

    case 'yyy':
      formatter = dateGetter(DateType.FullYear, 3, 0, false, true);
      break;
    // 4 digit representation of the year (e.g. AD 1 => 0001, AD 2010 => 2010)

    case 'yyyy':
      formatter = dateGetter(DateType.FullYear, 4, 0, false, true);
      break;
    // 1 digit representation of the week-numbering year, e.g. (AD 1 => 1, AD 199 => 199)

    case 'Y':
      formatter = weekNumberingYearGetter(1);
      break;
    // 2 digit representation of the week-numbering year, padded (00-99). (e.g. AD 2001 => 01, AD
    // 2010 => 10)

    case 'YY':
      formatter = weekNumberingYearGetter(2, true);
      break;
    // 3 digit representation of the week-numbering year, padded (000-999). (e.g. AD 1 => 001, AD
    // 2010 => 2010)

    case 'YYY':
      formatter = weekNumberingYearGetter(3);
      break;
    // 4 digit representation of the week-numbering year (e.g. AD 1 => 0001, AD 2010 => 2010)

    case 'YYYY':
      formatter = weekNumberingYearGetter(4);
      break;
    // Month of the year (1-12), numeric

    case 'M':
    case 'L':
      formatter = dateGetter(DateType.Month, 1, 1);
      break;

    case 'MM':
    case 'LL':
      formatter = dateGetter(DateType.Month, 2, 1);
      break;
    // Month of the year (January, ...), string, format

    case 'MMM':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated);
      break;

    case 'MMMM':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Wide);
      break;

    case 'MMMMM':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Narrow);
      break;
    // Month of the year (January, ...), string, standalone

    case 'LLL':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated, FormStyle.Standalone);
      break;

    case 'LLLL':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Wide, FormStyle.Standalone);
      break;

    case 'LLLLL':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Narrow, FormStyle.Standalone);
      break;
    // Week of the year (1, ... 52)

    case 'w':
      formatter = weekGetter(1);
      break;

    case 'ww':
      formatter = weekGetter(2);
      break;
    // Week of the month (1, ...)

    case 'W':
      formatter = weekGetter(1, true);
      break;
    // Day of the month (1-31)

    case 'd':
      formatter = dateGetter(DateType.Date, 1);
      break;

    case 'dd':
      formatter = dateGetter(DateType.Date, 2);
      break;
    // Day of the Week

    case 'E':
    case 'EE':
    case 'EEE':
      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Abbreviated);
      break;

    case 'EEEE':
      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Wide);
      break;

    case 'EEEEE':
      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Narrow);
      break;

    case 'EEEEEE':
      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Short);
      break;
    // Generic period of the day (am-pm)

    case 'a':
    case 'aa':
    case 'aaa':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated);
      break;

    case 'aaaa':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide);
      break;

    case 'aaaaa':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow);
      break;
    // Extended period of the day (midnight, at night, ...), standalone

    case 'b':
    case 'bb':
    case 'bbb':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Standalone, true);
      break;

    case 'bbbb':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Standalone, true);
      break;

    case 'bbbbb':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Standalone, true);
      break;
    // Extended period of the day (midnight, night, ...), standalone

    case 'B':
    case 'BB':
    case 'BBB':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Format, true);
      break;

    case 'BBBB':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Format, true);
      break;

    case 'BBBBB':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Format, true);
      break;
    // Hour in AM/PM, (1-12)

    case 'h':
      formatter = dateGetter(DateType.Hours, 1, -12);
      break;

    case 'hh':
      formatter = dateGetter(DateType.Hours, 2, -12);
      break;
    // Hour of the day (0-23)

    case 'H':
      formatter = dateGetter(DateType.Hours, 1);
      break;
    // Hour in day, padded (00-23)

    case 'HH':
      formatter = dateGetter(DateType.Hours, 2);
      break;
    // Minute of the hour (0-59)

    case 'm':
      formatter = dateGetter(DateType.Minutes, 1);
      break;

    case 'mm':
      formatter = dateGetter(DateType.Minutes, 2);
      break;
    // Second of the minute (0-59)

    case 's':
      formatter = dateGetter(DateType.Seconds, 1);
      break;

    case 'ss':
      formatter = dateGetter(DateType.Seconds, 2);
      break;
    // Fractional second

    case 'S':
      formatter = dateGetter(DateType.FractionalSeconds, 1);
      break;

    case 'SS':
      formatter = dateGetter(DateType.FractionalSeconds, 2);
      break;

    case 'SSS':
      formatter = dateGetter(DateType.FractionalSeconds, 3);
      break;
    // Timezone ISO8601 short format (-0430)

    case 'Z':
    case 'ZZ':
    case 'ZZZ':
      formatter = timeZoneGetter(ZoneWidth.Short);
      break;
    // Timezone ISO8601 extended format (-04:30)

    case 'ZZZZZ':
      formatter = timeZoneGetter(ZoneWidth.Extended);
      break;
    // Timezone GMT short format (GMT+4)

    case 'O':
    case 'OO':
    case 'OOO': // Should be location, but fallback to format O instead because we don't have the data yet

    case 'z':
    case 'zz':
    case 'zzz':
      formatter = timeZoneGetter(ZoneWidth.ShortGMT);
      break;
    // Timezone GMT long format (GMT+0430)

    case 'OOOO':
    case 'ZZZZ': // Should be location, but fallback to format O instead because we don't have the data yet

    case 'zzzz':
      formatter = timeZoneGetter(ZoneWidth.Long);
      break;

    default:
      return null;
  }

  DATE_FORMATS[format] = formatter;
  return formatter;
}

function timezoneToOffset(timezone, fallback) {
  // Support: IE 11 only, Edge 13-15+
  // IE/Edge do not "understand" colon (`:`) in timezone
  timezone = timezone.replace(/:/g, '');
  var requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;
  return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;
}

function addDateMinutes(date, minutes) {
  date = new Date(date.getTime());
  date.setMinutes(date.getMinutes() + minutes);
  return date;
}

function convertTimezoneToLocal(date, timezone, reverse) {
  var reverseValue = reverse ? -1 : 1;
  var dateTimezoneOffset = date.getTimezoneOffset();
  var timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);
  return addDateMinutes(date, reverseValue * (timezoneOffset - dateTimezoneOffset));
}
/**
 * Converts a value to date.
 *
 * Supported input formats:
 * - `Date`
 * - number: timestamp
 * - string: numeric (e.g. "1234"), ISO and date strings in a format supported by
 *   [Date.parse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).
 *   Note: ISO strings without time return a date without timeoffset.
 *
 * Throws if unable to convert to a date.
 */


function toDate(value) {
  if (isDate(value)) {
    return value;
  }

  if (typeof value === 'number' && !isNaN(value)) {
    return new Date(value);
  }

  if (typeof value === 'string') {
    value = value.trim();
    var parsedNb = parseFloat(value); // any string that only contains numbers, like "1234" but not like "1234hello"

    if (!isNaN(value - parsedNb)) {
      return new Date(parsedNb);
    }

    if (/^(\d{4}-\d{1,2}-\d{1,2})$/.test(value)) {
      /* For ISO Strings without time the day, month and year must be extracted from the ISO String
      before Date creation to avoid time offset and errors in the new Date.
      If we only replace '-' with ',' in the ISO String ("2015,01,01"), and try to create a new
      date, some browsers (e.g. IE 9) will throw an invalid Date error.
      If we leave the '-' ("2015-01-01") and try to create a new Date("2015-01-01") the timeoffset
      is applied.
      Note: ISO months are 0 for January, 1 for February, ... */
      var _value$split$map = value.split('-').map(function (val) {
        return +val;
      }),
          _value$split$map2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__["default"])(_value$split$map, 3),
          y = _value$split$map2[0],
          m = _value$split$map2[1],
          d = _value$split$map2[2];

      return new Date(y, m - 1, d);
    }

    var match;

    if (match = value.match(ISO8601_DATE_REGEX)) {
      return isoStringToDate(match);
    }
  }

  var date = new Date(value);

  if (!isDate(date)) {
    throw new Error("Unable to convert \"".concat(value, "\" into a date"));
  }

  return date;
}
/**
 * Converts a date in ISO8601 to a Date.
 * Used instead of `Date.parse` because of browser discrepancies.
 */


function isoStringToDate(match) {
  var date = new Date(0);
  var tzHour = 0;
  var tzMin = 0; // match[8] means that the string contains "Z" (UTC) or a timezone like "+01:00" or "+0100"

  var dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;
  var timeSetter = match[8] ? date.setUTCHours : date.setHours; // if there is a timezone defined like "+01:00" or "+0100"

  if (match[9]) {
    tzHour = Number(match[9] + match[10]);
    tzMin = Number(match[9] + match[11]);
  }

  dateSetter.call(date, Number(match[1]), Number(match[2]) - 1, Number(match[3]));
  var h = Number(match[4] || 0) - tzHour;
  var m = Number(match[5] || 0) - tzMin;
  var s = Number(match[6] || 0); // The ECMAScript specification (https://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.11)
  // defines that `DateTime` milliseconds should always be rounded down, so that `999.9ms`
  // becomes `999ms`.

  var ms = Math.floor(parseFloat('0.' + (match[7] || 0)) * 1000);
  timeSetter.call(date, h, m, s, ms);
  return date;
}

function isDate(value) {
  return value instanceof Date && !isNaN(value.valueOf());
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NUMBER_FORMAT_REGEXP = /^(\d+)?\.((\d+)(-(\d+))?)?$/;
var MAX_DIGITS = 22;
var DECIMAL_SEP = '.';
var ZERO_CHAR = '0';
var PATTERN_SEP = ';';
var GROUP_SEP = ',';
var DIGIT_CHAR = '#';
var CURRENCY_CHAR = '¤';
var PERCENT_CHAR = '%';
/**
 * Transforms a number to a locale string based on a style and a format.
 */

function formatNumberToLocaleString(value, pattern, locale, groupSymbol, decimalSymbol, digitsInfo) {
  var isPercent = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
  var formattedText = '';
  var isZero = false;

  if (!isFinite(value)) {
    formattedText = getLocaleNumberSymbol(locale, NumberSymbol.Infinity);
  } else {
    var parsedNumber = parseNumber(value);

    if (isPercent) {
      parsedNumber = toPercent(parsedNumber);
    }

    var minInt = pattern.minInt;
    var minFraction = pattern.minFrac;
    var maxFraction = pattern.maxFrac;

    if (digitsInfo) {
      var parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);

      if (parts === null) {
        throw new Error("".concat(digitsInfo, " is not a valid digit info"));
      }

      var minIntPart = parts[1];
      var minFractionPart = parts[3];
      var maxFractionPart = parts[5];

      if (minIntPart != null) {
        minInt = parseIntAutoRadix(minIntPart);
      }

      if (minFractionPart != null) {
        minFraction = parseIntAutoRadix(minFractionPart);
      }

      if (maxFractionPart != null) {
        maxFraction = parseIntAutoRadix(maxFractionPart);
      } else if (minFractionPart != null && minFraction > maxFraction) {
        maxFraction = minFraction;
      }
    }

    roundNumber(parsedNumber, minFraction, maxFraction);
    var digits = parsedNumber.digits;
    var integerLen = parsedNumber.integerLen;
    var exponent = parsedNumber.exponent;
    var decimals = [];
    isZero = digits.every(function (d) {
      return !d;
    }); // pad zeros for small numbers

    for (; integerLen < minInt; integerLen++) {
      digits.unshift(0);
    } // pad zeros for small numbers


    for (; integerLen < 0; integerLen++) {
      digits.unshift(0);
    } // extract decimals digits


    if (integerLen > 0) {
      decimals = digits.splice(integerLen, digits.length);
    } else {
      decimals = digits;
      digits = [0];
    } // format the integer digits with grouping separators


    var groups = [];

    if (digits.length >= pattern.lgSize) {
      groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));
    }

    while (digits.length > pattern.gSize) {
      groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));
    }

    if (digits.length) {
      groups.unshift(digits.join(''));
    }

    formattedText = groups.join(getLocaleNumberSymbol(locale, groupSymbol)); // append the decimal digits

    if (decimals.length) {
      formattedText += getLocaleNumberSymbol(locale, decimalSymbol) + decimals.join('');
    }

    if (exponent) {
      formattedText += getLocaleNumberSymbol(locale, NumberSymbol.Exponential) + '+' + exponent;
    }
  }

  if (value < 0 && !isZero) {
    formattedText = pattern.negPre + formattedText + pattern.negSuf;
  } else {
    formattedText = pattern.posPre + formattedText + pattern.posSuf;
  }

  return formattedText;
}
/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a number as currency using locale rules.
 *
 * @param value The number to format.
 * @param locale A locale code for the locale format rules to use.
 * @param currency A string containing the currency symbol or its name,
 * such as "$" or "Canadian Dollar". Used in output string, but does not affect the operation
 * of the function.
 * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
 * currency code, such as `USD` for the US dollar and `EUR` for the euro.
 * Used to determine the number of digits in the decimal part.
 * @param digitInfo Decimal representation options, specified by a string in the following format:
 * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.
 *
 * @returns The formatted currency value.
 *
 * @see `formatNumber()`
 * @see `DecimalPipe`
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function formatCurrency(value, locale, currency, currencyCode, digitsInfo) {
  var format = getLocaleNumberFormat(locale, NumberFormatStyle.Currency);
  var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));
  pattern.minFrac = getNumberOfCurrencyDigits(currencyCode);
  pattern.maxFrac = pattern.minFrac;
  var res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.CurrencyGroup, NumberSymbol.CurrencyDecimal, digitsInfo);
  return res.replace(CURRENCY_CHAR, currency) // if we have 2 time the currency character, the second one is ignored
  .replace(CURRENCY_CHAR, '') // If there is a spacing between currency character and the value and
  // the currency character is supressed by passing an empty string, the
  // spacing character would remain as part of the string. Then we
  // should remove it.
  .trim();
}
/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a number as a percentage according to locale rules.
 *
 * @param value The number to format.
 * @param locale A locale code for the locale format rules to use.
 * @param digitInfo Decimal representation options, specified by a string in the following format:
 * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.
 *
 * @returns The formatted percentage value.
 *
 * @see `formatNumber()`
 * @see `DecimalPipe`
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 * @publicApi
 *
 */


function formatPercent(value, locale, digitsInfo) {
  var format = getLocaleNumberFormat(locale, NumberFormatStyle.Percent);
  var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));
  var res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo, true);
  return res.replace(new RegExp(PERCENT_CHAR, 'g'), getLocaleNumberSymbol(locale, NumberSymbol.PercentSign));
}
/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a number as text, with group sizing, separator, and other
 * parameters based on the locale.
 *
 * @param value The number to format.
 * @param locale A locale code for the locale format rules to use.
 * @param digitInfo Decimal representation options, specified by a string in the following format:
 * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.
 *
 * @returns The formatted text string.
 * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
 *
 * @publicApi
 */


function formatNumber(value, locale, digitsInfo) {
  var format = getLocaleNumberFormat(locale, NumberFormatStyle.Decimal);
  var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));
  return formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo);
}

function parseNumberFormat(format) {
  var minusSign = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '-';
  var p = {
    minInt: 1,
    minFrac: 0,
    maxFrac: 0,
    posPre: '',
    posSuf: '',
    negPre: '',
    negSuf: '',
    gSize: 0,
    lgSize: 0
  };
  var patternParts = format.split(PATTERN_SEP);
  var positive = patternParts[0];
  var negative = patternParts[1];
  var positiveParts = positive.indexOf(DECIMAL_SEP) !== -1 ? positive.split(DECIMAL_SEP) : [positive.substring(0, positive.lastIndexOf(ZERO_CHAR) + 1), positive.substring(positive.lastIndexOf(ZERO_CHAR) + 1)],
      integer = positiveParts[0],
      fraction = positiveParts[1] || '';
  p.posPre = integer.substr(0, integer.indexOf(DIGIT_CHAR));

  for (var i = 0; i < fraction.length; i++) {
    var ch = fraction.charAt(i);

    if (ch === ZERO_CHAR) {
      p.minFrac = p.maxFrac = i + 1;
    } else if (ch === DIGIT_CHAR) {
      p.maxFrac = i + 1;
    } else {
      p.posSuf += ch;
    }
  }

  var groups = integer.split(GROUP_SEP);
  p.gSize = groups[1] ? groups[1].length : 0;
  p.lgSize = groups[2] || groups[1] ? (groups[2] || groups[1]).length : 0;

  if (negative) {
    var trunkLen = positive.length - p.posPre.length - p.posSuf.length,
        pos = negative.indexOf(DIGIT_CHAR);
    p.negPre = negative.substr(0, pos).replace(/'/g, '');
    p.negSuf = negative.substr(pos + trunkLen).replace(/'/g, '');
  } else {
    p.negPre = minusSign + p.posPre;
    p.negSuf = p.posSuf;
  }

  return p;
} // Transforms a parsed number into a percentage by multiplying it by 100


function toPercent(parsedNumber) {
  // if the number is 0, don't do anything
  if (parsedNumber.digits[0] === 0) {
    return parsedNumber;
  } // Getting the current number of decimals


  var fractionLen = parsedNumber.digits.length - parsedNumber.integerLen;

  if (parsedNumber.exponent) {
    parsedNumber.exponent += 2;
  } else {
    if (fractionLen === 0) {
      parsedNumber.digits.push(0, 0);
    } else if (fractionLen === 1) {
      parsedNumber.digits.push(0);
    }

    parsedNumber.integerLen += 2;
  }

  return parsedNumber;
}
/**
 * Parses a number.
 * Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/
 */


function parseNumber(num) {
  var numStr = Math.abs(num) + '';
  var exponent = 0,
      digits,
      integerLen;
  var i, j, zeros; // Decimal point?

  if ((integerLen = numStr.indexOf(DECIMAL_SEP)) > -1) {
    numStr = numStr.replace(DECIMAL_SEP, '');
  } // Exponential form?


  if ((i = numStr.search(/e/i)) > 0) {
    // Work out the exponent.
    if (integerLen < 0) integerLen = i;
    integerLen += +numStr.slice(i + 1);
    numStr = numStr.substring(0, i);
  } else if (integerLen < 0) {
    // There was no decimal point or exponent so it is an integer.
    integerLen = numStr.length;
  } // Count the number of leading zeros.


  for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) {
    /* empty */
  }

  if (i === (zeros = numStr.length)) {
    // The digits are all zero.
    digits = [0];
    integerLen = 1;
  } else {
    // Count the number of trailing zeros
    zeros--;

    while (numStr.charAt(zeros) === ZERO_CHAR) {
      zeros--;
    } // Trailing zeros are insignificant so ignore them


    integerLen -= i;
    digits = []; // Convert string to array of digits without leading/trailing zeros.

    for (j = 0; i <= zeros; i++, j++) {
      digits[j] = Number(numStr.charAt(i));
    }
  } // If the number overflows the maximum allowed digits then use an exponent.


  if (integerLen > MAX_DIGITS) {
    digits = digits.splice(0, MAX_DIGITS - 1);
    exponent = integerLen - 1;
    integerLen = 1;
  }

  return {
    digits: digits,
    exponent: exponent,
    integerLen: integerLen
  };
}
/**
 * Round the parsed number to the specified number of decimal places
 * This function changes the parsedNumber in-place
 */


function roundNumber(parsedNumber, minFrac, maxFrac) {
  if (minFrac > maxFrac) {
    throw new Error("The minimum number of digits after fraction (".concat(minFrac, ") is higher than the maximum (").concat(maxFrac, ")."));
  }

  var digits = parsedNumber.digits;
  var fractionLen = digits.length - parsedNumber.integerLen;
  var fractionSize = Math.min(Math.max(minFrac, fractionLen), maxFrac); // The index of the digit to where rounding is to occur

  var roundAt = fractionSize + parsedNumber.integerLen;
  var digit = digits[roundAt];

  if (roundAt > 0) {
    // Drop fractional digits beyond `roundAt`
    digits.splice(Math.max(parsedNumber.integerLen, roundAt)); // Set non-fractional digits beyond `roundAt` to 0

    for (var j = roundAt; j < digits.length; j++) {
      digits[j] = 0;
    }
  } else {
    // We rounded to zero so reset the parsedNumber
    fractionLen = Math.max(0, fractionLen);
    parsedNumber.integerLen = 1;
    digits.length = Math.max(1, roundAt = fractionSize + 1);
    digits[0] = 0;

    for (var i = 1; i < roundAt; i++) {
      digits[i] = 0;
    }
  }

  if (digit >= 5) {
    if (roundAt - 1 < 0) {
      for (var k = 0; k > roundAt; k--) {
        digits.unshift(0);
        parsedNumber.integerLen++;
      }

      digits.unshift(1);
      parsedNumber.integerLen++;
    } else {
      digits[roundAt - 1]++;
    }
  } // Pad out with zeros to get the required fraction length


  for (; fractionLen < Math.max(0, fractionSize); fractionLen++) {
    digits.push(0);
  }

  var dropTrailingZeros = fractionSize !== 0; // Minimal length = nb of decimals required + current nb of integers
  // Any number besides that is optional and can be removed if it's a trailing 0

  var minLen = minFrac + parsedNumber.integerLen; // Do any carrying, e.g. a digit was rounded up to 10

  var carry = digits.reduceRight(function (carry, d, i, digits) {
    d = d + carry;
    digits[i] = d < 10 ? d : d - 10; // d % 10

    if (dropTrailingZeros) {
      // Do not keep meaningless fractional trailing zeros (e.g. 15.52000 --> 15.52)
      if (digits[i] === 0 && i >= minLen) {
        digits.pop();
      } else {
        dropTrailingZeros = false;
      }
    }

    return d >= 10 ? 1 : 0; // Math.floor(d / 10);
  }, 0);

  if (carry) {
    digits.unshift(carry);
    parsedNumber.integerLen++;
  }
}

function parseIntAutoRadix(text) {
  var result = parseInt(text);

  if (isNaN(result)) {
    throw new Error('Invalid integer literal when parsing ' + text);
  }

  return result;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @publicApi
 */


var NgLocalization = function NgLocalization() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgLocalization);
};
/**
 * Returns the plural category for a given value.
 * - "=value" when the case exists,
 * - the plural category otherwise
 */


function getPluralCategory(value, cases, ngLocalization, locale) {
  var key = "=".concat(value);

  if (cases.indexOf(key) > -1) {
    return key;
  }

  key = ngLocalization.getPluralCategory(value, locale);

  if (cases.indexOf(key) > -1) {
    return key;
  }

  if (cases.indexOf('other') > -1) {
    return 'other';
  }

  throw new Error("No plural message found for value \"".concat(value, "\""));
}

var NgLocaleLocalization = /*@__PURE__*/function () {
  var NgLocaleLocalization = /*#__PURE__*/function (_NgLocalization) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(NgLocaleLocalization, _NgLocalization);

    var _super4 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(NgLocaleLocalization);

    function NgLocaleLocalization(locale) {
      var _this6;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgLocaleLocalization);

      _this6 = _super4.call(this);
      _this6.locale = locale;
      return _this6;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(NgLocaleLocalization, [{
      key: "getPluralCategory",
      value: function getPluralCategory(value, locale) {
        var plural = getLocalePluralCase(locale || this.locale)(value);

        switch (plural) {
          case Plural.Zero:
            return 'zero';

          case Plural.One:
            return 'one';

          case Plural.Two:
            return 'two';

          case Plural.Few:
            return 'few';

          case Plural.Many:
            return 'many';

          default:
            return 'other';
        }
      }
    }]);

    return NgLocaleLocalization;
  }(NgLocalization);

  NgLocaleLocalization.ɵfac = function NgLocaleLocalization_Factory(t) {
    return new (t || NgLocaleLocalization)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["LOCALE_ID"]));
  };

  NgLocaleLocalization.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"]({
    token: NgLocaleLocalization,
    factory: NgLocaleLocalization.ɵfac
  });
  return NgLocaleLocalization;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Register global data to be used internally by Angular. See the
 * ["I18n guide"](guide/i18n#i18n-pipes) to know how to import additional locale data.
 *
 * The signature registerLocaleData(data: any, extraData?: any) is deprecated since v5.1
 *
 * @publicApi
 */


function registerLocaleData(data, localeId, extraData) {
  return Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵregisterLocaleData"])(data, localeId, extraData);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function parseCookieValue(cookieStr, name) {
  name = encodeURIComponent(name);

  var _iterator = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(cookieStr.split(';')),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var cookie = _step.value;
      var eqIndex = cookie.indexOf('=');

      var _ref2 = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)],
          _ref3 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__["default"])(_ref2, 2),
          cookieName = _ref3[0],
          cookieValue = _ref3[1];

      if (cookieName.trim() === name) {
        return decodeURIComponent(cookieValue);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return null;
}

var NgClass = /*@__PURE__*/function () {
  var NgClass = /*#__PURE__*/function () {
    function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgClass);

      this._iterableDiffers = _iterableDiffers;
      this._keyValueDiffers = _keyValueDiffers;
      this._ngEl = _ngEl;
      this._renderer = _renderer;
      this._iterableDiffer = null;
      this._keyValueDiffer = null;
      this._initialClasses = [];
      this._rawClass = null;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(NgClass, [{
      key: "ngDoCheck",
      value: function ngDoCheck() {
        if (this._iterableDiffer) {
          var iterableChanges = this._iterableDiffer.diff(this._rawClass);

          if (iterableChanges) {
            this._applyIterableChanges(iterableChanges);
          }
        } else if (this._keyValueDiffer) {
          var keyValueChanges = this._keyValueDiffer.diff(this._rawClass);

          if (keyValueChanges) {
            this._applyKeyValueChanges(keyValueChanges);
          }
        }
      }
    }, {
      key: "_applyKeyValueChanges",
      value: function _applyKeyValueChanges(changes) {
        var _this7 = this;

        changes.forEachAddedItem(function (record) {
          return _this7._toggleClass(record.key, record.currentValue);
        });
        changes.forEachChangedItem(function (record) {
          return _this7._toggleClass(record.key, record.currentValue);
        });
        changes.forEachRemovedItem(function (record) {
          if (record.previousValue) {
            _this7._toggleClass(record.key, false);
          }
        });
      }
    }, {
      key: "_applyIterableChanges",
      value: function _applyIterableChanges(changes) {
        var _this8 = this;

        changes.forEachAddedItem(function (record) {
          if (typeof record.item === 'string') {
            _this8._toggleClass(record.item, true);
          } else {
            throw new Error("NgClass can only toggle CSS classes expressed as strings, got ".concat(Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵstringify"])(record.item)));
          }
        });
        changes.forEachRemovedItem(function (record) {
          return _this8._toggleClass(record.item, false);
        });
      }
      /**
       * Applies a collection of CSS classes to the DOM element.
       *
       * For argument of type Set and Array CSS class names contained in those collections are always
       * added.
       * For argument of type Map CSS class name in the map's key is toggled based on the value (added
       * for truthy and removed for falsy).
       */

    }, {
      key: "_applyClasses",
      value: function _applyClasses(rawClassVal) {
        var _this9 = this;

        if (rawClassVal) {
          if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {
            rawClassVal.forEach(function (klass) {
              return _this9._toggleClass(klass, true);
            });
          } else {
            Object.keys(rawClassVal).forEach(function (klass) {
              return _this9._toggleClass(klass, !!rawClassVal[klass]);
            });
          }
        }
      }
      /**
       * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup
       * purposes.
       */

    }, {
      key: "_removeClasses",
      value: function _removeClasses(rawClassVal) {
        var _this10 = this;

        if (rawClassVal) {
          if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {
            rawClassVal.forEach(function (klass) {
              return _this10._toggleClass(klass, false);
            });
          } else {
            Object.keys(rawClassVal).forEach(function (klass) {
              return _this10._toggleClass(klass, false);
            });
          }
        }
      }
    }, {
      key: "_toggleClass",
      value: function _toggleClass(klass, enabled) {
        var _this11 = this;

        klass = klass.trim();

        if (klass) {
          klass.split(/\s+/g).forEach(function (klass) {
            if (enabled) {
              _this11._renderer.addClass(_this11._ngEl.nativeElement, klass);
            } else {
              _this11._renderer.removeClass(_this11._ngEl.nativeElement, klass);
            }
          });
        }
      }
    }, {
      key: "klass",
      set: function set(value) {
        this._removeClasses(this._initialClasses);

        this._initialClasses = typeof value === 'string' ? value.split(/\s+/) : [];

        this._applyClasses(this._initialClasses);

        this._applyClasses(this._rawClass);
      }
    }, {
      key: "ngClass",
      set: function set(value) {
        this._removeClasses(this._rawClass);

        this._applyClasses(this._initialClasses);

        this._iterableDiffer = null;
        this._keyValueDiffer = null;
        this._rawClass = typeof value === 'string' ? value.split(/\s+/) : value;

        if (this._rawClass) {
          if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵisListLikeIterable"])(this._rawClass)) {
            this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();
          } else {
            this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();
          }
        }
      }
    }]);

    return NgClass;
  }();

  NgClass.ɵfac = function NgClass_Factory(t) {
    return new (t || NgClass)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["IterableDiffers"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["KeyValueDiffers"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["Renderer2"]));
  };

  NgClass.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
    type: NgClass,
    selectors: [["", "ngClass", ""]],
    inputs: {
      klass: ["class", "klass"],
      ngClass: "ngClass"
    }
  });
  return NgClass;
}();

var NgComponentOutlet = /*@__PURE__*/function () {
  var NgComponentOutlet = /*#__PURE__*/function () {
    function NgComponentOutlet(_viewContainerRef) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgComponentOutlet);

      this._viewContainerRef = _viewContainerRef;
      this._componentRef = null;
      this._moduleRef = null;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(NgComponentOutlet, [{
      key: "ngOnChanges",
      value: function ngOnChanges(changes) {
        this._viewContainerRef.clear();

        this._componentRef = null;

        if (this.ngComponentOutlet) {
          var elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;

          if (changes['ngComponentOutletNgModuleFactory']) {
            if (this._moduleRef) this._moduleRef.destroy();

            if (this.ngComponentOutletNgModuleFactory) {
              var parentModule = elInjector.get(_angular_core__WEBPACK_IMPORTED_MODULE_6__["NgModuleRef"]);
              this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);
            } else {
              this._moduleRef = null;
            }
          }

          var componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver : elInjector.get(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ComponentFactoryResolver"]);
          var componentFactory = componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);
          this._componentRef = this._viewContainerRef.createComponent(componentFactory, this._viewContainerRef.length, elInjector, this.ngComponentOutletContent);
        }
      }
    }, {
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        if (this._moduleRef) this._moduleRef.destroy();
      }
    }]);

    return NgComponentOutlet;
  }();

  NgComponentOutlet.ɵfac = function NgComponentOutlet_Factory(t) {
    return new (t || NgComponentOutlet)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewContainerRef"]));
  };

  NgComponentOutlet.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
    type: NgComponentOutlet,
    selectors: [["", "ngComponentOutlet", ""]],
    inputs: {
      ngComponentOutlet: "ngComponentOutlet",
      ngComponentOutletInjector: "ngComponentOutletInjector",
      ngComponentOutletContent: "ngComponentOutletContent",
      ngComponentOutletNgModuleFactory: "ngComponentOutletNgModuleFactory"
    },
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵNgOnChangesFeature"]]
  });
  return NgComponentOutlet;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @publicApi
 */


var NgForOfContext = /*#__PURE__*/function () {
  function NgForOfContext($implicit, ngForOf, index, count) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgForOfContext);

    this.$implicit = $implicit;
    this.ngForOf = ngForOf;
    this.index = index;
    this.count = count;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(NgForOfContext, [{
    key: "first",
    get: function get() {
      return this.index === 0;
    }
  }, {
    key: "last",
    get: function get() {
      return this.index === this.count - 1;
    }
  }, {
    key: "even",
    get: function get() {
      return this.index % 2 === 0;
    }
  }, {
    key: "odd",
    get: function get() {
      return !this.even;
    }
  }]);

  return NgForOfContext;
}();

var NgForOf = /*@__PURE__*/function () {
  var NgForOf = /*#__PURE__*/function () {
    function NgForOf(_viewContainer, _template, _differs) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgForOf);

      this._viewContainer = _viewContainer;
      this._template = _template;
      this._differs = _differs;
      this._ngForOf = null;
      this._ngForOfDirty = true;
      this._differ = null;
    }
    /**
     * The value of the iterable expression, which can be used as a
     * [template input variable](guide/structural-directives#template-input-variable).
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(NgForOf, [{
      key: "ngDoCheck",

      /**
       * Applies the changes when needed.
       */
      value: function ngDoCheck() {
        if (this._ngForOfDirty) {
          this._ngForOfDirty = false; // React on ngForOf changes only once all inputs have been initialized

          var value = this._ngForOf;

          if (!this._differ && value) {
            try {
              this._differ = this._differs.find(value).create(this.ngForTrackBy);
            } catch (_a) {
              throw new Error("Cannot find a differ supporting object '".concat(value, "' of type '").concat(getTypeName(value), "'. NgFor only supports binding to Iterables such as Arrays."));
            }
          }
        }

        if (this._differ) {
          var changes = this._differ.diff(this._ngForOf);

          if (changes) this._applyChanges(changes);
        }
      }
    }, {
      key: "_applyChanges",
      value: function _applyChanges(changes) {
        var _this12 = this;

        var insertTuples = [];
        changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {
          if (item.previousIndex == null) {
            // NgForOf is never "null" or "undefined" here because the differ detected
            // that a new item needs to be inserted from the iterable. This implies that
            // there is an iterable value for "_ngForOf".
            var view = _this12._viewContainer.createEmbeddedView(_this12._template, new NgForOfContext(null, _this12._ngForOf, -1, -1), currentIndex === null ? undefined : currentIndex);

            var tuple = new RecordViewTuple(item, view);
            insertTuples.push(tuple);
          } else if (currentIndex == null) {
            _this12._viewContainer.remove(adjustedPreviousIndex === null ? undefined : adjustedPreviousIndex);
          } else if (adjustedPreviousIndex !== null) {
            var _view = _this12._viewContainer.get(adjustedPreviousIndex);

            _this12._viewContainer.move(_view, currentIndex);

            var _tuple = new RecordViewTuple(item, _view);

            insertTuples.push(_tuple);
          }
        });

        for (var i = 0; i < insertTuples.length; i++) {
          this._perViewChange(insertTuples[i].view, insertTuples[i].record);
        }

        for (var _i = 0, ilen = this._viewContainer.length; _i < ilen; _i++) {
          var viewRef = this._viewContainer.get(_i);

          viewRef.context.index = _i;
          viewRef.context.count = ilen;
          viewRef.context.ngForOf = this._ngForOf;
        }

        changes.forEachIdentityChange(function (record) {
          var viewRef = _this12._viewContainer.get(record.currentIndex);

          viewRef.context.$implicit = record.item;
        });
      }
    }, {
      key: "_perViewChange",
      value: function _perViewChange(view, record) {
        view.context.$implicit = record.item;
      }
      /**
       * Asserts the correct type of the context for the template that `NgForOf` will render.
       *
       * The presence of this method is a signal to the Ivy template type-check compiler that the
       * `NgForOf` structural directive renders its template with a specific context type.
       */

    }, {
      key: "ngForOf",
      set: function set(ngForOf) {
        this._ngForOf = ngForOf;
        this._ngForOfDirty = true;
      }
      /**
       * A function that defines how to track changes for items in the iterable.
       *
       * When items are added, moved, or removed in the iterable,
       * the directive must re-render the appropriate DOM nodes.
       * To minimize churn in the DOM, only nodes that have changed
       * are re-rendered.
       *
       * By default, the change detector assumes that
       * the object instance identifies the node in the iterable.
       * When this function is supplied, the directive uses
       * the result of calling this function to identify the item node,
       * rather than the identity of the object itself.
       *
       * The function receives two inputs,
       * the iteration index and the associated node data.
       */

    }, {
      key: "ngForTrackBy",
      set: function set(fn) {
        if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["isDevMode"])() && fn != null && typeof fn !== 'function') {
          // TODO(vicb): use a log service once there is a public one available
          if (console && console.warn) {
            console.warn("trackBy must be a function, but received ".concat(JSON.stringify(fn), ". ") + "See https://angular.io/api/common/NgForOf#change-propagation for more information.");
          }
        }

        this._trackByFn = fn;
      },
      get: function get() {
        return this._trackByFn;
      }
      /**
       * A reference to the template that is stamped out for each item in the iterable.
       * @see [template reference variable](guide/template-reference-variables)
       */

    }, {
      key: "ngForTemplate",
      set: function set(value) {
        // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1
        // The current type is too restrictive; a template that just uses index, for example,
        // should be acceptable.
        if (value) {
          this._template = value;
        }
      }
    }], [{
      key: "ngTemplateContextGuard",
      value: function ngTemplateContextGuard(dir, ctx) {
        return true;
      }
    }]);

    return NgForOf;
  }();

  NgForOf.ɵfac = function NgForOf_Factory(t) {
    return new (t || NgForOf)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["TemplateRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["IterableDiffers"]));
  };

  NgForOf.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
    type: NgForOf,
    selectors: [["", "ngFor", "", "ngForOf", ""]],
    inputs: {
      ngForOf: "ngForOf",
      ngForTrackBy: "ngForTrackBy",
      ngForTemplate: "ngForTemplate"
    }
  });
  return NgForOf;
}();

var RecordViewTuple = function RecordViewTuple(record, view) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, RecordViewTuple);

  this.record = record;
  this.view = view;
};

function getTypeName(type) {
  return type['name'] || typeof type;
}

var NgIf = /*@__PURE__*/function () {
  var NgIf = /*#__PURE__*/function () {
    function NgIf(_viewContainer, templateRef) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgIf);

      this._viewContainer = _viewContainer;
      this._context = new NgIfContext();
      this._thenTemplateRef = null;
      this._elseTemplateRef = null;
      this._thenViewRef = null;
      this._elseViewRef = null;
      this._thenTemplateRef = templateRef;
    }
    /**
     * The Boolean expression to evaluate as the condition for showing a template.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(NgIf, [{
      key: "_updateView",
      value: function _updateView() {
        if (this._context.$implicit) {
          if (!this._thenViewRef) {
            this._viewContainer.clear();

            this._elseViewRef = null;

            if (this._thenTemplateRef) {
              this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);
            }
          }
        } else {
          if (!this._elseViewRef) {
            this._viewContainer.clear();

            this._thenViewRef = null;

            if (this._elseTemplateRef) {
              this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);
            }
          }
        }
      }
      /**
       * Asserts the correct type of the context for the template that `NgIf` will render.
       *
       * The presence of this method is a signal to the Ivy template type-check compiler that the
       * `NgIf` structural directive renders its template with a specific context type.
       */

    }, {
      key: "ngIf",
      set: function set(condition) {
        this._context.$implicit = this._context.ngIf = condition;

        this._updateView();
      }
      /**
       * A template to show if the condition expression evaluates to true.
       */

    }, {
      key: "ngIfThen",
      set: function set(templateRef) {
        assertTemplate('ngIfThen', templateRef);
        this._thenTemplateRef = templateRef;
        this._thenViewRef = null; // clear previous view if any.

        this._updateView();
      }
      /**
       * A template to show if the condition expression evaluates to false.
       */

    }, {
      key: "ngIfElse",
      set: function set(templateRef) {
        assertTemplate('ngIfElse', templateRef);
        this._elseTemplateRef = templateRef;
        this._elseViewRef = null; // clear previous view if any.

        this._updateView();
      }
    }], [{
      key: "ngTemplateContextGuard",
      value: function ngTemplateContextGuard(dir, ctx) {
        return true;
      }
    }]);

    return NgIf;
  }();

  NgIf.ɵfac = function NgIf_Factory(t) {
    return new (t || NgIf)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["TemplateRef"]));
  };

  NgIf.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
    type: NgIf,
    selectors: [["", "ngIf", ""]],
    inputs: {
      ngIf: "ngIf",
      ngIfThen: "ngIfThen",
      ngIfElse: "ngIfElse"
    }
  });
  return NgIf;
}();
/**
 * @publicApi
 */


var NgIfContext = function NgIfContext() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgIfContext);

  this.$implicit = null;
  this.ngIf = null;
};

function assertTemplate(property, templateRef) {
  var isTemplateRefOrNull = !!(!templateRef || templateRef.createEmbeddedView);

  if (!isTemplateRefOrNull) {
    throw new Error("".concat(property, " must be a TemplateRef, but received '").concat(Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵstringify"])(templateRef), "'."));
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SwitchView = /*#__PURE__*/function () {
  function SwitchView(_viewContainerRef, _templateRef) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, SwitchView);

    this._viewContainerRef = _viewContainerRef;
    this._templateRef = _templateRef;
    this._created = false;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(SwitchView, [{
    key: "create",
    value: function create() {
      this._created = true;

      this._viewContainerRef.createEmbeddedView(this._templateRef);
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this._created = false;

      this._viewContainerRef.clear();
    }
  }, {
    key: "enforceState",
    value: function enforceState(created) {
      if (created && !this._created) {
        this.create();
      } else if (!created && this._created) {
        this.destroy();
      }
    }
  }]);

  return SwitchView;
}();

var NgSwitch = /*@__PURE__*/function () {
  var NgSwitch = /*#__PURE__*/function () {
    function NgSwitch() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgSwitch);

      this._defaultUsed = false;
      this._caseCount = 0;
      this._lastCaseCheckIndex = 0;
      this._lastCasesMatched = false;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(NgSwitch, [{
      key: "_addCase",

      /** @internal */
      value: function _addCase() {
        return this._caseCount++;
      }
      /** @internal */

    }, {
      key: "_addDefault",
      value: function _addDefault(view) {
        if (!this._defaultViews) {
          this._defaultViews = [];
        }

        this._defaultViews.push(view);
      }
      /** @internal */

    }, {
      key: "_matchCase",
      value: function _matchCase(value) {
        var matched = value == this._ngSwitch;
        this._lastCasesMatched = this._lastCasesMatched || matched;
        this._lastCaseCheckIndex++;

        if (this._lastCaseCheckIndex === this._caseCount) {
          this._updateDefaultCases(!this._lastCasesMatched);

          this._lastCaseCheckIndex = 0;
          this._lastCasesMatched = false;
        }

        return matched;
      }
    }, {
      key: "_updateDefaultCases",
      value: function _updateDefaultCases(useDefault) {
        if (this._defaultViews && useDefault !== this._defaultUsed) {
          this._defaultUsed = useDefault;

          for (var i = 0; i < this._defaultViews.length; i++) {
            var defaultView = this._defaultViews[i];
            defaultView.enforceState(useDefault);
          }
        }
      }
    }, {
      key: "ngSwitch",
      set: function set(newValue) {
        this._ngSwitch = newValue;

        if (this._caseCount === 0) {
          this._updateDefaultCases(true);
        }
      }
    }]);

    return NgSwitch;
  }();

  NgSwitch.ɵfac = function NgSwitch_Factory(t) {
    return new (t || NgSwitch)();
  };

  NgSwitch.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
    type: NgSwitch,
    selectors: [["", "ngSwitch", ""]],
    inputs: {
      ngSwitch: "ngSwitch"
    }
  });
  return NgSwitch;
}();

var NgSwitchCase = /*@__PURE__*/function () {
  var NgSwitchCase = /*#__PURE__*/function () {
    function NgSwitchCase(viewContainer, templateRef, ngSwitch) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgSwitchCase);

      this.ngSwitch = ngSwitch;

      ngSwitch._addCase();

      this._view = new SwitchView(viewContainer, templateRef);
    }
    /**
     * Performs case matching. For internal use only.
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(NgSwitchCase, [{
      key: "ngDoCheck",
      value: function ngDoCheck() {
        this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase));
      }
    }]);

    return NgSwitchCase;
  }();

  NgSwitchCase.ɵfac = function NgSwitchCase_Factory(t) {
    return new (t || NgSwitchCase)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["TemplateRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](NgSwitch, 1));
  };

  NgSwitchCase.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
    type: NgSwitchCase,
    selectors: [["", "ngSwitchCase", ""]],
    inputs: {
      ngSwitchCase: "ngSwitchCase"
    }
  });
  return NgSwitchCase;
}();

var NgSwitchDefault = /*@__PURE__*/function () {
  var NgSwitchDefault = function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgSwitchDefault);

    ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));
  };

  NgSwitchDefault.ɵfac = function NgSwitchDefault_Factory(t) {
    return new (t || NgSwitchDefault)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["TemplateRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](NgSwitch, 1));
  };

  NgSwitchDefault.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
    type: NgSwitchDefault,
    selectors: [["", "ngSwitchDefault", ""]]
  });
  return NgSwitchDefault;
}();

var NgPlural = /*@__PURE__*/function () {
  var NgPlural = /*#__PURE__*/function () {
    function NgPlural(_localization) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgPlural);

      this._localization = _localization;
      this._caseViews = {};
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(NgPlural, [{
      key: "addCase",
      value: function addCase(value, switchView) {
        this._caseViews[value] = switchView;
      }
    }, {
      key: "_updateView",
      value: function _updateView() {
        this._clearViews();

        var cases = Object.keys(this._caseViews);
        var key = getPluralCategory(this._switchValue, cases, this._localization);

        this._activateView(this._caseViews[key]);
      }
    }, {
      key: "_clearViews",
      value: function _clearViews() {
        if (this._activeView) this._activeView.destroy();
      }
    }, {
      key: "_activateView",
      value: function _activateView(view) {
        if (view) {
          this._activeView = view;

          this._activeView.create();
        }
      }
    }, {
      key: "ngPlural",
      set: function set(value) {
        this._switchValue = value;

        this._updateView();
      }
    }]);

    return NgPlural;
  }();

  NgPlural.ɵfac = function NgPlural_Factory(t) {
    return new (t || NgPlural)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](NgLocalization));
  };

  NgPlural.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
    type: NgPlural,
    selectors: [["", "ngPlural", ""]],
    inputs: {
      ngPlural: "ngPlural"
    }
  });
  return NgPlural;
}();

var NgPluralCase = /*@__PURE__*/function () {
  var NgPluralCase = function NgPluralCase(value, template, viewContainer, ngPlural) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgPluralCase);

    this.value = value;
    var isANumber = !isNaN(Number(value));
    ngPlural.addCase(isANumber ? "=".concat(value) : value, new SwitchView(viewContainer, template));
  };

  NgPluralCase.ɵfac = function NgPluralCase_Factory(t) {
    return new (t || NgPluralCase)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinjectAttribute"]('ngPluralCase'), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["TemplateRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](NgPlural, 1));
  };

  NgPluralCase.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
    type: NgPluralCase,
    selectors: [["", "ngPluralCase", ""]]
  });
  return NgPluralCase;
}();

var NgStyle = /*@__PURE__*/function () {
  var NgStyle = /*#__PURE__*/function () {
    function NgStyle(_ngEl, _differs, _renderer) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgStyle);

      this._ngEl = _ngEl;
      this._differs = _differs;
      this._renderer = _renderer;
      this._ngStyle = null;
      this._differ = null;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(NgStyle, [{
      key: "ngDoCheck",
      value: function ngDoCheck() {
        if (this._differ) {
          var changes = this._differ.diff(this._ngStyle);

          if (changes) {
            this._applyChanges(changes);
          }
        }
      }
    }, {
      key: "_setStyle",
      value: function _setStyle(nameAndUnit, value) {
        var _nameAndUnit$split = nameAndUnit.split('.'),
            _nameAndUnit$split2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__["default"])(_nameAndUnit$split, 2),
            name = _nameAndUnit$split2[0],
            unit = _nameAndUnit$split2[1];

        value = value != null && unit ? "".concat(value).concat(unit) : value;

        if (value != null) {
          this._renderer.setStyle(this._ngEl.nativeElement, name, value);
        } else {
          this._renderer.removeStyle(this._ngEl.nativeElement, name);
        }
      }
    }, {
      key: "_applyChanges",
      value: function _applyChanges(changes) {
        var _this13 = this;

        changes.forEachRemovedItem(function (record) {
          return _this13._setStyle(record.key, null);
        });
        changes.forEachAddedItem(function (record) {
          return _this13._setStyle(record.key, record.currentValue);
        });
        changes.forEachChangedItem(function (record) {
          return _this13._setStyle(record.key, record.currentValue);
        });
      }
    }, {
      key: "ngStyle",
      set: function set(values) {
        this._ngStyle = values;

        if (!this._differ && values) {
          this._differ = this._differs.find(values).create();
        }
      }
    }]);

    return NgStyle;
  }();

  NgStyle.ɵfac = function NgStyle_Factory(t) {
    return new (t || NgStyle)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["KeyValueDiffers"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["Renderer2"]));
  };

  NgStyle.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
    type: NgStyle,
    selectors: [["", "ngStyle", ""]],
    inputs: {
      ngStyle: "ngStyle"
    }
  });
  return NgStyle;
}();

var NgTemplateOutlet = /*@__PURE__*/function () {
  var NgTemplateOutlet = /*#__PURE__*/function () {
    function NgTemplateOutlet(_viewContainerRef) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NgTemplateOutlet);

      this._viewContainerRef = _viewContainerRef;
      this._viewRef = null;
      /**
       * A context object to attach to the {@link EmbeddedViewRef}. This should be an
       * object, the object's keys will be available for binding by the local template `let`
       * declarations.
       * Using the key `$implicit` in the context object will set its value as default.
       */

      this.ngTemplateOutletContext = null;
      /**
       * A string defining the template reference and optionally the context object for the template.
       */

      this.ngTemplateOutlet = null;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(NgTemplateOutlet, [{
      key: "ngOnChanges",
      value: function ngOnChanges(changes) {
        var recreateView = this._shouldRecreateView(changes);

        if (recreateView) {
          var viewContainerRef = this._viewContainerRef;

          if (this._viewRef) {
            viewContainerRef.remove(viewContainerRef.indexOf(this._viewRef));
          }

          this._viewRef = this.ngTemplateOutlet ? viewContainerRef.createEmbeddedView(this.ngTemplateOutlet, this.ngTemplateOutletContext) : null;
        } else if (this._viewRef && this.ngTemplateOutletContext) {
          this._updateExistingContext(this.ngTemplateOutletContext);
        }
      }
      /**
       * We need to re-create existing embedded view if:
       * - templateRef has changed
       * - context has changes
       *
       * We mark context object as changed when the corresponding object
       * shape changes (new properties are added or existing properties are removed).
       * In other words we consider context with the same properties as "the same" even
       * if object reference changes (see https://github.com/angular/angular/issues/13407).
       */

    }, {
      key: "_shouldRecreateView",
      value: function _shouldRecreateView(changes) {
        var ctxChange = changes['ngTemplateOutletContext'];
        return !!changes['ngTemplateOutlet'] || ctxChange && this._hasContextShapeChanged(ctxChange);
      }
    }, {
      key: "_hasContextShapeChanged",
      value: function _hasContextShapeChanged(ctxChange) {
        var prevCtxKeys = Object.keys(ctxChange.previousValue || {});
        var currCtxKeys = Object.keys(ctxChange.currentValue || {});

        if (prevCtxKeys.length === currCtxKeys.length) {
          var _iterator2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(currCtxKeys),
              _step2;

          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
              var propName = _step2.value;

              if (prevCtxKeys.indexOf(propName) === -1) {
                return true;
              }
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }

          return false;
        }

        return true;
      }
    }, {
      key: "_updateExistingContext",
      value: function _updateExistingContext(ctx) {
        for (var _i2 = 0, _Object$keys = Object.keys(ctx); _i2 < _Object$keys.length; _i2++) {
          var propName = _Object$keys[_i2];
          this._viewRef.context[propName] = this.ngTemplateOutletContext[propName];
        }
      }
    }]);

    return NgTemplateOutlet;
  }();

  NgTemplateOutlet.ɵfac = function NgTemplateOutlet_Factory(t) {
    return new (t || NgTemplateOutlet)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewContainerRef"]));
  };

  NgTemplateOutlet.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
    type: NgTemplateOutlet,
    selectors: [["", "ngTemplateOutlet", ""]],
    inputs: {
      ngTemplateOutletContext: "ngTemplateOutletContext",
      ngTemplateOutlet: "ngTemplateOutlet"
    },
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵNgOnChangesFeature"]]
  });
  return NgTemplateOutlet;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A collection of Angular directives that are likely to be used in each and every Angular
 * application.
 */


var COMMON_DIRECTIVES = [NgClass, NgComponentOutlet, NgForOf, NgIf, NgTemplateOutlet, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgPlural, NgPluralCase];
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

function invalidPipeArgumentError(type, value) {
  return Error("InvalidPipeArgument: '".concat(value, "' for pipe '").concat(Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵstringify"])(type), "'"));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ObservableStrategy = /*#__PURE__*/function () {
  function ObservableStrategy() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, ObservableStrategy);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(ObservableStrategy, [{
    key: "createSubscription",
    value: function createSubscription(async, updateLatestValue) {
      return async.subscribe({
        next: updateLatestValue,
        error: function error(e) {
          throw e;
        }
      });
    }
  }, {
    key: "dispose",
    value: function dispose(subscription) {
      subscription.unsubscribe();
    }
  }, {
    key: "onDestroy",
    value: function onDestroy(subscription) {
      subscription.unsubscribe();
    }
  }]);

  return ObservableStrategy;
}();

var PromiseStrategy = /*#__PURE__*/function () {
  function PromiseStrategy() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, PromiseStrategy);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(PromiseStrategy, [{
    key: "createSubscription",
    value: function createSubscription(async, updateLatestValue) {
      return async.then(updateLatestValue, function (e) {
        throw e;
      });
    }
  }, {
    key: "dispose",
    value: function dispose(subscription) {}
  }, {
    key: "onDestroy",
    value: function onDestroy(subscription) {}
  }]);

  return PromiseStrategy;
}();

var _promiseStrategy = /*@__PURE__*/new PromiseStrategy();

var _observableStrategy = /*@__PURE__*/new ObservableStrategy();

var AsyncPipe = /*@__PURE__*/function () {
  var AsyncPipe = /*#__PURE__*/function () {
    function AsyncPipe(_ref) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, AsyncPipe);

      this._ref = _ref;
      this._latestValue = null;
      this._subscription = null;
      this._obj = null;
      this._strategy = null;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(AsyncPipe, [{
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        if (this._subscription) {
          this._dispose();
        }
      }
    }, {
      key: "transform",
      value: function transform(obj) {
        if (!this._obj) {
          if (obj) {
            this._subscribe(obj);
          }

          return this._latestValue;
        }

        if (obj !== this._obj) {
          this._dispose();

          return this.transform(obj);
        }

        return this._latestValue;
      }
    }, {
      key: "_subscribe",
      value: function _subscribe(obj) {
        var _this14 = this;

        this._obj = obj;
        this._strategy = this._selectStrategy(obj);
        this._subscription = this._strategy.createSubscription(obj, function (value) {
          return _this14._updateLatestValue(obj, value);
        });
      }
    }, {
      key: "_selectStrategy",
      value: function _selectStrategy(obj) {
        if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵisPromise"])(obj)) {
          return _promiseStrategy;
        }

        if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵisObservable"])(obj)) {
          return _observableStrategy;
        }

        throw invalidPipeArgumentError(AsyncPipe, obj);
      }
    }, {
      key: "_dispose",
      value: function _dispose() {
        this._strategy.dispose(this._subscription);

        this._latestValue = null;
        this._subscription = null;
        this._obj = null;
      }
    }, {
      key: "_updateLatestValue",
      value: function _updateLatestValue(async, value) {
        if (async === this._obj) {
          this._latestValue = value;

          this._ref.markForCheck();
        }
      }
    }]);

    return AsyncPipe;
  }();

  AsyncPipe.ɵfac = function AsyncPipe_Factory(t) {
    return new (t || AsyncPipe)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinjectPipeChangeDetectorRef"]());
  };

  AsyncPipe.ɵpipe = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefinePipe"]({
    name: "async",
    type: AsyncPipe,
    pure: false
  });
  return AsyncPipe;
}();

var LowerCasePipe = /*@__PURE__*/function () {
  var LowerCasePipe = /*#__PURE__*/function () {
    function LowerCasePipe() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, LowerCasePipe);
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(LowerCasePipe, [{
      key: "transform",
      value: function transform(value) {
        if (value == null) return null;

        if (typeof value !== 'string') {
          throw invalidPipeArgumentError(LowerCasePipe, value);
        }

        return value.toLowerCase();
      }
    }]);

    return LowerCasePipe;
  }();

  LowerCasePipe.ɵfac = function LowerCasePipe_Factory(t) {
    return new (t || LowerCasePipe)();
  };

  LowerCasePipe.ɵpipe = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefinePipe"]({
    name: "lowercase",
    type: LowerCasePipe,
    pure: true
  });
  return LowerCasePipe;
}(); //
// Regex below matches any Unicode word and compatible with ES5. In ES2018 the same result
// can be achieved by using /\p{L}\S*/gu and also known as Unicode Property Escapes
// (http://2ality.com/2017/07/regexp-unicode-property-escapes.html). Since there is no
// transpilation of this functionality down to ES5 without external tool, the only solution is
// to use already transpiled form. Example can be found here -
// https://mothereff.in/regexpu#input=var+regex+%3D+/%5Cp%7BL%7D/u%3B&unicodePropertyEscape=1
//


var unicodeWordMatch = /(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D])\S*/g;

var TitleCasePipe = /*@__PURE__*/function () {
  var TitleCasePipe = /*#__PURE__*/function () {
    function TitleCasePipe() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, TitleCasePipe);
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(TitleCasePipe, [{
      key: "transform",
      value: function transform(value) {
        if (value == null) return null;

        if (typeof value !== 'string') {
          throw invalidPipeArgumentError(TitleCasePipe, value);
        }

        return value.replace(unicodeWordMatch, function (txt) {
          return txt[0].toUpperCase() + txt.substr(1).toLowerCase();
        });
      }
    }]);

    return TitleCasePipe;
  }();

  TitleCasePipe.ɵfac = function TitleCasePipe_Factory(t) {
    return new (t || TitleCasePipe)();
  };

  TitleCasePipe.ɵpipe = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefinePipe"]({
    name: "titlecase",
    type: TitleCasePipe,
    pure: true
  });
  return TitleCasePipe;
}();

var UpperCasePipe = /*@__PURE__*/function () {
  var UpperCasePipe = /*#__PURE__*/function () {
    function UpperCasePipe() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, UpperCasePipe);
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(UpperCasePipe, [{
      key: "transform",
      value: function transform(value) {
        if (value == null) return null;

        if (typeof value !== 'string') {
          throw invalidPipeArgumentError(UpperCasePipe, value);
        }

        return value.toUpperCase();
      }
    }]);

    return UpperCasePipe;
  }();

  UpperCasePipe.ɵfac = function UpperCasePipe_Factory(t) {
    return new (t || UpperCasePipe)();
  };

  UpperCasePipe.ɵpipe = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefinePipe"]({
    name: "uppercase",
    type: UpperCasePipe,
    pure: true
  });
  return UpperCasePipe;
}();

var DatePipe = /*@__PURE__*/function () {
  var DatePipe = /*#__PURE__*/function () {
    function DatePipe(locale) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, DatePipe);

      this.locale = locale;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(DatePipe, [{
      key: "transform",
      value: function transform(value) {
        var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'mediumDate';
        var timezone = arguments.length > 2 ? arguments[2] : undefined;
        var locale = arguments.length > 3 ? arguments[3] : undefined;
        if (value == null || value === '' || value !== value) return null;

        try {
          return formatDate(value, format, locale || this.locale, timezone);
        } catch (error) {
          throw invalidPipeArgumentError(DatePipe, error.message);
        }
      }
    }]);

    return DatePipe;
  }();

  DatePipe.ɵfac = function DatePipe_Factory(t) {
    return new (t || DatePipe)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["LOCALE_ID"]));
  };

  DatePipe.ɵpipe = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefinePipe"]({
    name: "date",
    type: DatePipe,
    pure: true
  });
  return DatePipe;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var _INTERPOLATION_REGEXP = /#/g;

var I18nPluralPipe = /*@__PURE__*/function () {
  var I18nPluralPipe = /*#__PURE__*/function () {
    function I18nPluralPipe(_localization) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, I18nPluralPipe);

      this._localization = _localization;
    }
    /**
     * @param value the number to be formatted
     * @param pluralMap an object that mimics the ICU format, see
     * http://userguide.icu-project.org/formatparse/messages.
     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
     * default).
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(I18nPluralPipe, [{
      key: "transform",
      value: function transform(value, pluralMap, locale) {
        if (value == null) return '';

        if (typeof pluralMap !== 'object' || pluralMap === null) {
          throw invalidPipeArgumentError(I18nPluralPipe, pluralMap);
        }

        var key = getPluralCategory(value, Object.keys(pluralMap), this._localization, locale);
        return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());
      }
    }]);

    return I18nPluralPipe;
  }();

  I18nPluralPipe.ɵfac = function I18nPluralPipe_Factory(t) {
    return new (t || I18nPluralPipe)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](NgLocalization));
  };

  I18nPluralPipe.ɵpipe = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefinePipe"]({
    name: "i18nPlural",
    type: I18nPluralPipe,
    pure: true
  });
  return I18nPluralPipe;
}();

var I18nSelectPipe = /*@__PURE__*/function () {
  var I18nSelectPipe = /*#__PURE__*/function () {
    function I18nSelectPipe() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, I18nSelectPipe);
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(I18nSelectPipe, [{
      key: "transform",

      /**
       * @param value a string to be internationalized.
       * @param mapping an object that indicates the text that should be displayed
       * for different values of the provided `value`.
       */
      value: function transform(value, mapping) {
        if (value == null) return '';

        if (typeof mapping !== 'object' || typeof value !== 'string') {
          throw invalidPipeArgumentError(I18nSelectPipe, mapping);
        }

        if (mapping.hasOwnProperty(value)) {
          return mapping[value];
        }

        if (mapping.hasOwnProperty('other')) {
          return mapping['other'];
        }

        return '';
      }
    }]);

    return I18nSelectPipe;
  }();

  I18nSelectPipe.ɵfac = function I18nSelectPipe_Factory(t) {
    return new (t || I18nSelectPipe)();
  };

  I18nSelectPipe.ɵpipe = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefinePipe"]({
    name: "i18nSelect",
    type: I18nSelectPipe,
    pure: true
  });
  return I18nSelectPipe;
}();

var JsonPipe = /*@__PURE__*/function () {
  var JsonPipe = /*#__PURE__*/function () {
    function JsonPipe() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, JsonPipe);
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(JsonPipe, [{
      key: "transform",

      /**
       * @param value A value of any type to convert into a JSON-format string.
       */
      value: function transform(value) {
        return JSON.stringify(value, null, 2);
      }
    }]);

    return JsonPipe;
  }();

  JsonPipe.ɵfac = function JsonPipe_Factory(t) {
    return new (t || JsonPipe)();
  };

  JsonPipe.ɵpipe = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefinePipe"]({
    name: "json",
    type: JsonPipe,
    pure: false
  });
  return JsonPipe;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function makeKeyValuePair(key, value) {
  return {
    key: key,
    value: value
  };
}

var KeyValuePipe = /*@__PURE__*/function () {
  var KeyValuePipe = /*#__PURE__*/function () {
    function KeyValuePipe(differs) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, KeyValuePipe);

      this.differs = differs;
      this.keyValues = [];
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(KeyValuePipe, [{
      key: "transform",
      value: function transform(input) {
        var _this15 = this;

        var compareFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultComparator;

        if (!input || !(input instanceof Map) && typeof input !== 'object') {
          return null;
        }

        if (!this.differ) {
          // make a differ for whatever type we've been passed in
          this.differ = this.differs.find(input).create();
        }

        var differChanges = this.differ.diff(input);

        if (differChanges) {
          this.keyValues = [];
          differChanges.forEachItem(function (r) {
            _this15.keyValues.push(makeKeyValuePair(r.key, r.currentValue));
          });
          this.keyValues.sort(compareFn);
        }

        return this.keyValues;
      }
    }]);

    return KeyValuePipe;
  }();

  KeyValuePipe.ɵfac = function KeyValuePipe_Factory(t) {
    return new (t || KeyValuePipe)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["KeyValueDiffers"]));
  };

  KeyValuePipe.ɵpipe = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefinePipe"]({
    name: "keyvalue",
    type: KeyValuePipe,
    pure: false
  });
  return KeyValuePipe;
}();

function defaultComparator(keyValueA, keyValueB) {
  var a = keyValueA.key;
  var b = keyValueB.key; // if same exit with 0;

  if (a === b) return 0; // make sure that undefined are at the end of the sort.

  if (a === undefined) return 1;
  if (b === undefined) return -1; // make sure that nulls are at the end of the sort.

  if (a === null) return 1;
  if (b === null) return -1;

  if (typeof a == 'string' && typeof b == 'string') {
    return a < b ? -1 : 1;
  }

  if (typeof a == 'number' && typeof b == 'number') {
    return a - b;
  }

  if (typeof a == 'boolean' && typeof b == 'boolean') {
    return a < b ? -1 : 1;
  } // `a` and `b` are of different types. Compare their string values.


  var aString = String(a);
  var bString = String(b);
  return aString == bString ? 0 : aString < bString ? -1 : 1;
}

var DecimalPipe = /*@__PURE__*/function () {
  var DecimalPipe = /*#__PURE__*/function () {
    function DecimalPipe(_locale) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, DecimalPipe);

      this._locale = _locale;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(DecimalPipe, [{
      key: "transform",
      value: function transform(value, digitsInfo, locale) {
        if (!isValue(value)) return null;
        locale = locale || this._locale;

        try {
          var num = strToNumber(value);
          return formatNumber(num, locale, digitsInfo);
        } catch (error) {
          throw invalidPipeArgumentError(DecimalPipe, error.message);
        }
      }
    }]);

    return DecimalPipe;
  }();

  DecimalPipe.ɵfac = function DecimalPipe_Factory(t) {
    return new (t || DecimalPipe)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["LOCALE_ID"]));
  };

  DecimalPipe.ɵpipe = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefinePipe"]({
    name: "number",
    type: DecimalPipe,
    pure: true
  });
  return DecimalPipe;
}();

var PercentPipe = /*@__PURE__*/function () {
  var PercentPipe = /*#__PURE__*/function () {
    function PercentPipe(_locale) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, PercentPipe);

      this._locale = _locale;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(PercentPipe, [{
      key: "transform",
      value: function transform(value, digitsInfo, locale) {
        if (!isValue(value)) return null;
        locale = locale || this._locale;

        try {
          var num = strToNumber(value);
          return formatPercent(num, locale, digitsInfo);
        } catch (error) {
          throw invalidPipeArgumentError(PercentPipe, error.message);
        }
      }
    }]);

    return PercentPipe;
  }();

  PercentPipe.ɵfac = function PercentPipe_Factory(t) {
    return new (t || PercentPipe)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["LOCALE_ID"]));
  };

  PercentPipe.ɵpipe = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefinePipe"]({
    name: "percent",
    type: PercentPipe,
    pure: true
  });
  return PercentPipe;
}();

var CurrencyPipe = /*@__PURE__*/function () {
  var CurrencyPipe = /*#__PURE__*/function () {
    function CurrencyPipe(_locale) {
      var _defaultCurrencyCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'USD';

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, CurrencyPipe);

      this._locale = _locale;
      this._defaultCurrencyCode = _defaultCurrencyCode;
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(CurrencyPipe, [{
      key: "transform",
      value: function transform(value, currencyCode) {
        var display = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'symbol';
        var digitsInfo = arguments.length > 3 ? arguments[3] : undefined;
        var locale = arguments.length > 4 ? arguments[4] : undefined;
        if (!isValue(value)) return null;
        locale = locale || this._locale;

        if (typeof display === 'boolean') {
          if (console && console.warn) {
            console.warn("Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are \"code\", \"symbol\" or \"symbol-narrow\".");
          }

          display = display ? 'symbol' : 'code';
        }

        var currency = currencyCode || this._defaultCurrencyCode;

        if (display !== 'code') {
          if (display === 'symbol' || display === 'symbol-narrow') {
            currency = getCurrencySymbol(currency, display === 'symbol' ? 'wide' : 'narrow', locale);
          } else {
            currency = display;
          }
        }

        try {
          var num = strToNumber(value);
          return formatCurrency(num, locale, currency, currencyCode, digitsInfo);
        } catch (error) {
          throw invalidPipeArgumentError(CurrencyPipe, error.message);
        }
      }
    }]);

    return CurrencyPipe;
  }();

  CurrencyPipe.ɵfac = function CurrencyPipe_Factory(t) {
    return new (t || CurrencyPipe)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["LOCALE_ID"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["DEFAULT_CURRENCY_CODE"]));
  };

  CurrencyPipe.ɵpipe = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefinePipe"]({
    name: "currency",
    type: CurrencyPipe,
    pure: true
  });
  return CurrencyPipe;
}();

function isValue(value) {
  return !(value == null || value === '' || value !== value);
}
/**
 * Transforms a string into a number (if needed).
 */


function strToNumber(value) {
  // Convert strings to numbers
  if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {
    return Number(value);
  }

  if (typeof value !== 'number') {
    throw new Error("".concat(value, " is not a number"));
  }

  return value;
}

var SlicePipe = /*@__PURE__*/function () {
  var SlicePipe = /*#__PURE__*/function () {
    function SlicePipe() {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, SlicePipe);
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(SlicePipe, [{
      key: "transform",
      value: function transform(value, start, end) {
        if (value == null) return null;

        if (!this.supports(value)) {
          throw invalidPipeArgumentError(SlicePipe, value);
        }

        return value.slice(start, end);
      }
    }, {
      key: "supports",
      value: function supports(obj) {
        return typeof obj === 'string' || Array.isArray(obj);
      }
    }]);

    return SlicePipe;
  }();

  SlicePipe.ɵfac = function SlicePipe_Factory(t) {
    return new (t || SlicePipe)();
  };

  SlicePipe.ɵpipe = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefinePipe"]({
    name: "slice",
    type: SlicePipe,
    pure: false
  });
  return SlicePipe;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A collection of Angular pipes that are likely to be used in each and every application.
 */


var COMMON_PIPES = [AsyncPipe, UpperCasePipe, LowerCasePipe, JsonPipe, SlicePipe, DecimalPipe, PercentPipe, TitleCasePipe, CurrencyPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, KeyValuePipe];

var CommonModule = /*@__PURE__*/function () {
  var CommonModule = function CommonModule() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, CommonModule);
  };

  CommonModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineNgModule"]({
    type: CommonModule
  });
  CommonModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjector"]({
    factory: function CommonModule_Factory(t) {
      return new (t || CommonModule)();
    },
    providers: [{
      provide: NgLocalization,
      useClass: NgLocaleLocalization
    }]
  });
  return CommonModule;
}();
/*@__PURE__*/


(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵsetNgModuleScope"](CommonModule, {
    declarations: [NgClass, NgComponentOutlet, NgForOf, NgIf, NgTemplateOutlet, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgPlural, NgPluralCase, AsyncPipe, UpperCasePipe, LowerCasePipe, JsonPipe, SlicePipe, DecimalPipe, PercentPipe, TitleCasePipe, CurrencyPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, KeyValuePipe],
    exports: [NgClass, NgComponentOutlet, NgForOf, NgIf, NgTemplateOutlet, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgPlural, NgPluralCase, AsyncPipe, UpperCasePipe, LowerCasePipe, JsonPipe, SlicePipe, DecimalPipe, PercentPipe, TitleCasePipe, CurrencyPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, KeyValuePipe]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var PLATFORM_BROWSER_ID = 'browser';
var PLATFORM_SERVER_ID = 'server';
var PLATFORM_WORKER_APP_ID = 'browserWorkerApp';
var PLATFORM_WORKER_UI_ID = 'browserWorkerUi';
/**
 * Returns whether a platform id represents a browser platform.
 * @publicApi
 */

function isPlatformBrowser(platformId) {
  return platformId === PLATFORM_BROWSER_ID;
}
/**
 * Returns whether a platform id represents a server platform.
 * @publicApi
 */


function isPlatformServer(platformId) {
  return platformId === PLATFORM_SERVER_ID;
}
/**
 * Returns whether a platform id represents a web worker app platform.
 * @publicApi
 */


function isPlatformWorkerApp(platformId) {
  return platformId === PLATFORM_WORKER_APP_ID;
}
/**
 * Returns whether a platform id represents a web worker UI platform.
 * @publicApi
 */


function isPlatformWorkerUi(platformId) {
  return platformId === PLATFORM_WORKER_UI_ID;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @publicApi
 */


var VERSION = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_6__["Version"]('11.0.2');

var ViewportScroller = /*@__PURE__*/function () {
  var ViewportScroller = function ViewportScroller() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, ViewportScroller);
  }; // De-sugared tree-shakable injection
  // See #23917

  /** @nocollapse */


  ViewportScroller.ɵprov = /*@__PURE__*/Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"])({
    token: ViewportScroller,
    providedIn: 'root',
    factory: function factory() {
      return new BrowserViewportScroller(Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"])(DOCUMENT), window, Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ErrorHandler"]));
    }
  });
  return ViewportScroller;
}();
/**
 * Manages the scroll position for a browser window.
 */


var BrowserViewportScroller = /*#__PURE__*/function () {
  function BrowserViewportScroller(document, window, errorHandler) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, BrowserViewportScroller);

    this.document = document;
    this.window = window;
    this.errorHandler = errorHandler;

    this.offset = function () {
      return [0, 0];
    };
  }
  /**
   * Configures the top offset used when scrolling to an anchor.
   * @param offset A position in screen coordinates (a tuple with x and y values)
   * or a function that returns the top offset position.
   *
   */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(BrowserViewportScroller, [{
    key: "setOffset",
    value: function setOffset(offset) {
      if (Array.isArray(offset)) {
        this.offset = function () {
          return offset;
        };
      } else {
        this.offset = offset;
      }
    }
    /**
     * Retrieves the current scroll position.
     * @returns The position in screen coordinates.
     */

  }, {
    key: "getScrollPosition",
    value: function getScrollPosition() {
      if (this.supportsScrolling()) {
        return [this.window.scrollX, this.window.scrollY];
      } else {
        return [0, 0];
      }
    }
    /**
     * Sets the scroll position.
     * @param position The new position in screen coordinates.
     */

  }, {
    key: "scrollToPosition",
    value: function scrollToPosition(position) {
      if (this.supportsScrolling()) {
        this.window.scrollTo(position[0], position[1]);
      }
    }
    /**
     * Scrolls to an anchor element.
     * @param anchor The ID of the anchor element.
     */

  }, {
    key: "scrollToAnchor",
    value: function scrollToAnchor(anchor) {
      if (this.supportsScrolling()) {
        var elSelected = this.document.getElementById(anchor) || this.document.getElementsByName(anchor)[0];

        if (elSelected) {
          this.scrollToElement(elSelected);
        }
      }
    }
    /**
     * Disables automatic scroll restoration provided by the browser.
     */

  }, {
    key: "setHistoryScrollRestoration",
    value: function setHistoryScrollRestoration(scrollRestoration) {
      if (this.supportScrollRestoration()) {
        var history = this.window.history;

        if (history && history.scrollRestoration) {
          history.scrollRestoration = scrollRestoration;
        }
      }
    }
  }, {
    key: "scrollToElement",
    value: function scrollToElement(el) {
      var rect = el.getBoundingClientRect();
      var left = rect.left + this.window.pageXOffset;
      var top = rect.top + this.window.pageYOffset;
      var offset = this.offset();
      this.window.scrollTo(left - offset[0], top - offset[1]);
    }
    /**
     * We only support scroll restoration when we can get a hold of window.
     * This means that we do not support this behavior when running in a web worker.
     *
     * Lifting this restriction right now would require more changes in the dom adapter.
     * Since webworkers aren't widely used, we will lift it once RouterScroller is
     * battle-tested.
     */

  }, {
    key: "supportScrollRestoration",
    value: function supportScrollRestoration() {
      try {
        if (!this.window || !this.window.scrollTo) {
          return false;
        } // The `scrollRestoration` property could be on the `history` instance or its prototype.


        var scrollRestorationDescriptor = getScrollRestorationProperty(this.window.history) || getScrollRestorationProperty(Object.getPrototypeOf(this.window.history)); // We can write to the `scrollRestoration` property if it is a writable data field or it has a
        // setter function.

        return !!scrollRestorationDescriptor && !!(scrollRestorationDescriptor.writable || scrollRestorationDescriptor.set);
      } catch (_a) {
        return false;
      }
    }
  }, {
    key: "supportsScrolling",
    value: function supportsScrolling() {
      try {
        return !!this.window.scrollTo;
      } catch (_a) {
        return false;
      }
    }
  }]);

  return BrowserViewportScroller;
}();

function getScrollRestorationProperty(obj) {
  return Object.getOwnPropertyDescriptor(obj, 'scrollRestoration');
}
/**
 * Provides an empty implementation of the viewport scroller.
 */


var NullViewportScroller = /*#__PURE__*/function () {
  function NullViewportScroller() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NullViewportScroller);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(NullViewportScroller, [{
    key: "setOffset",

    /**
     * Empty implementation
     */
    value: function setOffset(offset) {}
    /**
     * Empty implementation
     */

  }, {
    key: "getScrollPosition",
    value: function getScrollPosition() {
      return [0, 0];
    }
    /**
     * Empty implementation
     */

  }, {
    key: "scrollToPosition",
    value: function scrollToPosition(position) {}
    /**
     * Empty implementation
     */

  }, {
    key: "scrollToAnchor",
    value: function scrollToAnchor(anchor) {}
    /**
     * Empty implementation
     */

  }, {
    key: "setHistoryScrollRestoration",
    value: function setHistoryScrollRestoration(scrollRestoration) {}
  }]);

  return NullViewportScroller;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This file only reexports content of the `src` folder. Keep it that way.

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "p9/F":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/buffer.js ***!
  \*****************************************************************/
/*! exports provided: buffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buffer", function() { return buffer; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");






function buffer(closingNotifier) {
  return function bufferOperatorFunction(source) {
    return source.lift(new BufferOperator(closingNotifier));
  };
}

var BufferOperator = /*#__PURE__*/function () {
  function BufferOperator(closingNotifier) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, BufferOperator);

    this.closingNotifier = closingNotifier;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(BufferOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));
    }
  }]);

  return BufferOperator;
}();

var BufferSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(BufferSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(BufferSubscriber);

  function BufferSubscriber(destination, closingNotifier) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, BufferSubscriber);

    _this = _super.call(this, destination);
    _this.buffer = [];

    _this.add(Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_5__["innerSubscribe"])(closingNotifier, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_5__["SimpleInnerSubscriber"](Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this))));

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(BufferSubscriber, [{
    key: "_next",
    value: function _next(value) {
      this.buffer.push(value);
    }
  }, {
    key: "notifyNext",
    value: function notifyNext() {
      var buffer = this.buffer;
      this.buffer = [];
      this.destination.next(buffer);
    }
  }]);

  return BufferSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_5__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "pLZG":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/filter.js ***!
  \*****************************************************************/
/*! exports provided: filter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return filter; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");





function filter(predicate, thisArg) {
  return function filterOperatorFunction(source) {
    return source.lift(new FilterOperator(predicate, thisArg));
  };
}

var FilterOperator = /*#__PURE__*/function () {
  function FilterOperator(predicate, thisArg) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, FilterOperator);

    this.predicate = predicate;
    this.thisArg = thisArg;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(FilterOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
    }
  }]);

  return FilterOperator;
}();

var FilterSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(FilterSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(FilterSubscriber);

  function FilterSubscriber(destination, predicate, thisArg) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, FilterSubscriber);

    _this = _super.call(this, destination);
    _this.predicate = predicate;
    _this.thisArg = thisArg;
    _this.count = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(FilterSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var result;

      try {
        result = this.predicate.call(this.thisArg, value, this.count++);
      } catch (err) {
        this.destination.error(err);
        return;
      }

      if (result) {
        this.destination.next(value);
      }
    }
  }]);

  return FilterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "pLzU":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/subscribeToIterable.js ***!
  \*************************************************************************/
/*! exports provided: subscribeToIterable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToIterable", function() { return subscribeToIterable; });
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/iterator */ "Lhse");

var subscribeToIterable = function subscribeToIterable(iterable) {
  return function (subscriber) {
    var iterator = iterable[_symbol_iterator__WEBPACK_IMPORTED_MODULE_0__["iterator"]]();

    do {
      var item = void 0;

      try {
        item = iterator.next();
      } catch (err) {
        subscriber.error(err);
        return subscriber;
      }

      if (item.done) {
        subscriber.complete();
        break;
      }

      subscriber.next(item.value);

      if (subscriber.closed) {
        break;
      }
    } while (true);

    if (typeof iterator.return === 'function') {
      subscriber.add(function () {
        if (iterator.return) {
          iterator.return();
        }
      });
    }

    return subscriber;
  };
};

/***/ }),

/***/ "pXlZ":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/windowWhen.js ***!
  \*********************************************************************/
/*! exports provided: windowWhen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowWhen", function() { return windowWhen; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subject */ "XNiG");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../OuterSubscriber */ "l7GE");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/subscribeToResult */ "ZUHj");







function windowWhen(closingSelector) {
  return function windowWhenOperatorFunction(source) {
    return source.lift(new WindowOperator(closingSelector));
  };
}

var WindowOperator = /*#__PURE__*/function () {
  function WindowOperator(closingSelector) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, WindowOperator);

    this.closingSelector = closingSelector;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(WindowOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));
    }
  }]);

  return WindowOperator;
}();

var WindowSubscriber = /*#__PURE__*/function (_OuterSubscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(WindowSubscriber, _OuterSubscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(WindowSubscriber);

  function WindowSubscriber(destination, closingSelector) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, WindowSubscriber);

    _this = _super.call(this, destination);
    _this.destination = destination;
    _this.closingSelector = closingSelector;

    _this.openWindow();

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(WindowSubscriber, [{
    key: "notifyNext",
    value: function notifyNext(_outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {
      this.openWindow(innerSub);
    }
  }, {
    key: "notifyError",
    value: function notifyError(error) {
      this._error(error);
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete(innerSub) {
      this.openWindow(innerSub);
    }
  }, {
    key: "_next",
    value: function _next(value) {
      this.window.next(value);
    }
  }, {
    key: "_error",
    value: function _error(err) {
      this.window.error(err);
      this.destination.error(err);
      this.unsubscribeClosingNotification();
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.window.complete();
      this.destination.complete();
      this.unsubscribeClosingNotification();
    }
  }, {
    key: "unsubscribeClosingNotification",
    value: function unsubscribeClosingNotification() {
      if (this.closingNotification) {
        this.closingNotification.unsubscribe();
      }
    }
  }, {
    key: "openWindow",
    value: function openWindow() {
      var innerSub = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

      if (innerSub) {
        this.remove(innerSub);
        innerSub.unsubscribe();
      }

      var prevWindow = this.window;

      if (prevWindow) {
        prevWindow.complete();
      }

      var window = this.window = new _Subject__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
      this.destination.next(window);
      var closingNotifier;

      try {
        var closingSelector = this.closingSelector;
        closingNotifier = closingSelector();
      } catch (e) {
        this.destination.error(e);
        this.window.error(e);
        return;
      }

      this.add(this.closingNotification = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_6__["subscribeToResult"])(this, closingNotifier));
    }
  }]);

  return WindowSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_5__["OuterSubscriber"]);

/***/ }),

/***/ "pjAE":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/UnsubscriptionError.js ***!
  \*************************************************************************/
/*! exports provided: UnsubscriptionError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnsubscriptionError", function() { return UnsubscriptionError; });
var UnsubscriptionErrorImpl = /*@__PURE__*/function () {
  function UnsubscriptionErrorImpl(errors) {
    Error.call(this);
    this.message = errors ? "".concat(errors.length, " errors occurred during unsubscription:\n").concat(errors.map(function (err, i) {
      return "".concat(i + 1, ") ").concat(err.toString());
    }).join('\n  ')) : '';
    this.name = 'UnsubscriptionError';
    this.errors = errors;
    return this;
  }

  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);
  return UnsubscriptionErrorImpl;
}();

var UnsubscriptionError = UnsubscriptionErrorImpl;

/***/ }),

/***/ "pxpQ":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/observeOn.js ***!
  \********************************************************************/
/*! exports provided: observeOn, ObserveOnOperator, ObserveOnSubscriber, ObserveOnMessage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "observeOn", function() { return observeOn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserveOnOperator", function() { return ObserveOnOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserveOnSubscriber", function() { return ObserveOnSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserveOnMessage", function() { return ObserveOnMessage; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Notification */ "WMd4");






function observeOn(scheduler) {
  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  return function observeOnOperatorFunction(source) {
    return source.lift(new ObserveOnOperator(scheduler, delay));
  };
}
var ObserveOnOperator = /*#__PURE__*/function () {
  function ObserveOnOperator(scheduler) {
    var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ObserveOnOperator);

    this.scheduler = scheduler;
    this.delay = delay;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ObserveOnOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
    }
  }]);

  return ObserveOnOperator;
}();
var ObserveOnSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(ObserveOnSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(ObserveOnSubscriber);

  function ObserveOnSubscriber(destination, scheduler) {
    var _this;

    var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ObserveOnSubscriber);

    _this = _super.call(this, destination);
    _this.scheduler = scheduler;
    _this.delay = delay;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ObserveOnSubscriber, [{
    key: "scheduleMessage",
    value: function scheduleMessage(notification) {
      var destination = this.destination;
      destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
    }
  }, {
    key: "_next",
    value: function _next(value) {
      this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_5__["Notification"].createNext(value));
    }
  }, {
    key: "_error",
    value: function _error(err) {
      this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_5__["Notification"].createError(err));
      this.unsubscribe();
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_5__["Notification"].createComplete());
      this.unsubscribe();
    }
  }], [{
    key: "dispatch",
    value: function dispatch(arg) {
      var notification = arg.notification,
          destination = arg.destination;
      notification.observe(destination);
      this.unsubscribe();
    }
  }]);

  return ObserveOnSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);
var ObserveOnMessage = function ObserveOnMessage(notification, destination) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ObserveOnMessage);

  this.notification = notification;
  this.destination = destination;
};

/***/ }),

/***/ "q/0M":
/*!*********************************************************!*\
  !*** ./node_modules/@firebase/logger/dist/index.esm.js ***!
  \*********************************************************/
/*! exports provided: LogLevel, Logger, setLogLevel, setUserLogHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LogLevel", function() { return LogLevel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Logger", function() { return Logger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setLogLevel", function() { return setLogLevel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUserLogHandler", function() { return setUserLogHandler; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
    s += arguments[i].length;
  }

  for (var r = Array(s), k = 0, i = 0; i < il; i++) {
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
      r[k] = a[j];
    }
  }

  return r;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var _a;
/**
 * A container for all of the Logger instances
 */


var instances = [];
/**
 * The JS SDK supports 5 log levels and also allows a user the ability to
 * silence the logs altogether.
 *
 * The order is a follows:
 * DEBUG < VERBOSE < INFO < WARN < ERROR
 *
 * All of the log types above the current log level will be captured (i.e. if
 * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and
 * `VERBOSE` logs will not)
 */

var LogLevel = /*@__PURE__*/function (LogLevel) {
  LogLevel[LogLevel["DEBUG"] = 0] = "DEBUG";
  LogLevel[LogLevel["VERBOSE"] = 1] = "VERBOSE";
  LogLevel[LogLevel["INFO"] = 2] = "INFO";
  LogLevel[LogLevel["WARN"] = 3] = "WARN";
  LogLevel[LogLevel["ERROR"] = 4] = "ERROR";
  LogLevel[LogLevel["SILENT"] = 5] = "SILENT";
  return LogLevel;
}({});

var levelStringToEnum = {
  'debug': LogLevel.DEBUG,
  'verbose': LogLevel.VERBOSE,
  'info': LogLevel.INFO,
  'warn': LogLevel.WARN,
  'error': LogLevel.ERROR,
  'silent': LogLevel.SILENT
};
/**
 * The default log level
 */

var defaultLogLevel = LogLevel.INFO;
/**
 * By default, `console.debug` is not displayed in the developer console (in
 * chrome). To avoid forcing users to have to opt-in to these logs twice
 * (i.e. once for firebase, and once in the console), we are sending `DEBUG`
 * logs to the `console.log` function.
 */

var ConsoleMethod = (_a = {}, _a[LogLevel.DEBUG] = 'log', _a[LogLevel.VERBOSE] = 'log', _a[LogLevel.INFO] = 'info', _a[LogLevel.WARN] = 'warn', _a[LogLevel.ERROR] = 'error', _a);
/**
 * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR
 * messages on to their corresponding console counterparts (if the log method
 * is supported by the current log level)
 */

var defaultLogHandler = function defaultLogHandler(instance, logType) {
  var args = [];

  for (var _i = 2; _i < arguments.length; _i++) {
    args[_i - 2] = arguments[_i];
  }

  if (logType < instance.logLevel) {
    return;
  }

  var now = new Date().toISOString();
  var method = ConsoleMethod[logType];

  if (method) {
    console[method].apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
  } else {
    throw new Error("Attempted to log a message with an invalid logType (value: " + logType + ")");
  }
};

var Logger =
/** @class */

/*@__PURE__*/
function () {
  /**
   * Gives you an instance of a Logger to capture messages according to
   * Firebase's logging scheme.
   *
   * @param name The name that the logs will be associated with
   */
  function Logger(name) {
    this.name = name;
    /**
     * The log level of the given Logger instance.
     */

    this._logLevel = defaultLogLevel;
    /**
     * The main (internal) log handler for the Logger instance.
     * Can be set to a new function in internal package code but not by user.
     */

    this._logHandler = defaultLogHandler;
    /**
     * The optional, additional, user-defined log handler for the Logger instance.
     */

    this._userLogHandler = null;
    /**
     * Capture the current instance for later use
     */

    instances.push(this);
  }

  Object.defineProperty(Logger.prototype, "logLevel", {
    get: function get() {
      return this._logLevel;
    },
    set: function set(val) {
      if (!(val in LogLevel)) {
        throw new TypeError("Invalid value \"" + val + "\" assigned to `logLevel`");
      }

      this._logLevel = val;
    },
    enumerable: false,
    configurable: true
  }); // Workaround for setter/getter having to be the same type.

  Logger.prototype.setLogLevel = function (val) {
    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;
  };

  Object.defineProperty(Logger.prototype, "logHandler", {
    get: function get() {
      return this._logHandler;
    },
    set: function set(val) {
      if (typeof val !== 'function') {
        throw new TypeError('Value assigned to `logHandler` must be a function');
      }

      this._logHandler = val;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Logger.prototype, "userLogHandler", {
    get: function get() {
      return this._userLogHandler;
    },
    set: function set(val) {
      this._userLogHandler = val;
    },
    enumerable: false,
    configurable: true
  });
  /**
   * The functions below are all based on the `console` interface
   */

  Logger.prototype.debug = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));

    this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));
  };

  Logger.prototype.log = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));

    this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));
  };

  Logger.prototype.info = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));

    this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));
  };

  Logger.prototype.warn = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));

    this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));
  };

  Logger.prototype.error = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));

    this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));
  };

  return Logger;
}();

function setLogLevel(level) {
  instances.forEach(function (inst) {
    inst.setLogLevel(level);
  });
}

function setUserLogHandler(logCallback, options) {
  var _loop_1 = function _loop_1(instance) {
    var customLogLevel = null;

    if (options && options.level) {
      customLogLevel = levelStringToEnum[options.level];
    }

    if (logCallback === null) {
      instance.userLogHandler = null;
    } else {
      instance.userLogHandler = function (instance, level) {
        var args = [];

        for (var _i = 2; _i < arguments.length; _i++) {
          args[_i - 2] = arguments[_i];
        }

        var message = args.map(function (arg) {
          if (arg == null) {
            return null;
          } else if (typeof arg === 'string') {
            return arg;
          } else if (typeof arg === 'number' || typeof arg === 'boolean') {
            return arg.toString();
          } else if (arg instanceof Error) {
            return arg.message;
          } else {
            try {
              return JSON.stringify(arg);
            } catch (ignored) {
              return null;
            }
          }
        }).filter(function (arg) {
          return arg;
        }).join(' ');

        if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {
          logCallback({
            level: LogLevel[level].toLowerCase(),
            message: message,
            args: args,
            type: instance.name
          });
        }
      };
    }
  };

  for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {
    var instance = instances_1[_i];

    _loop_1(instance);
  }
}



/***/ }),

/***/ "q7zd":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/concatMapTo.js ***!
  \**********************************************************************/
/*! exports provided: concatMapTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concatMapTo", function() { return concatMapTo; });
/* harmony import */ var _concatMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./concatMap */ "bOdf");

function concatMapTo(innerObservable, resultSelector) {
  return Object(_concatMap__WEBPACK_IMPORTED_MODULE_0__["concatMap"])(function () {
    return innerObservable;
  }, resultSelector);
}

/***/ }),

/***/ "q92s":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/merge.js ***!
  \****************************************************************/
/*! exports provided: merge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return merge; });
/* harmony import */ var _observable_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/merge */ "VRyK");

function merge() {
  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {
    observables[_key] = arguments[_key];
  }

  return function (source) {
    return source.lift.call(_observable_merge__WEBPACK_IMPORTED_MODULE_0__["merge"].apply(void 0, [source].concat(observables)));
  };
}

/***/ }),

/***/ "qCKp":
/*!*********************************************!*\
  !*** ./node_modules/rxjs/_esm2015/index.js ***!
  \*********************************************/
/*! exports provided: Observable, ConnectableObservable, GroupedObservable, observable, Subject, BehaviorSubject, ReplaySubject, AsyncSubject, asap, asapScheduler, async, asyncScheduler, queue, queueScheduler, animationFrame, animationFrameScheduler, VirtualTimeScheduler, VirtualAction, Scheduler, Subscription, Subscriber, Notification, NotificationKind, pipe, noop, identity, isObservable, ArgumentOutOfRangeError, EmptyError, ObjectUnsubscribedError, UnsubscriptionError, TimeoutError, bindCallback, bindNodeCallback, combineLatest, concat, defer, empty, forkJoin, from, fromEvent, fromEventPattern, generate, iif, interval, merge, never, of, onErrorResumeNext, pairs, partition, race, range, throwError, timer, using, zip, scheduled, EMPTY, NEVER, config */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal_Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/Observable */ "HDdC");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Observable", function() { return _internal_Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"]; });

/* harmony import */ var _internal_observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/observable/ConnectableObservable */ "EQ5u");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectableObservable", function() { return _internal_observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_1__["ConnectableObservable"]; });

/* harmony import */ var _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/operators/groupBy */ "OQgR");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GroupedObservable", function() { return _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_2__["GroupedObservable"]; });

/* harmony import */ var _internal_symbol_observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/symbol/observable */ "kJWO");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "observable", function() { return _internal_symbol_observable__WEBPACK_IMPORTED_MODULE_3__["observable"]; });

/* harmony import */ var _internal_Subject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/Subject */ "XNiG");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Subject", function() { return _internal_Subject__WEBPACK_IMPORTED_MODULE_4__["Subject"]; });

/* harmony import */ var _internal_BehaviorSubject__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./internal/BehaviorSubject */ "2Vo4");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BehaviorSubject", function() { return _internal_BehaviorSubject__WEBPACK_IMPORTED_MODULE_5__["BehaviorSubject"]; });

/* harmony import */ var _internal_ReplaySubject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./internal/ReplaySubject */ "jtHE");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReplaySubject", function() { return _internal_ReplaySubject__WEBPACK_IMPORTED_MODULE_6__["ReplaySubject"]; });

/* harmony import */ var _internal_AsyncSubject__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./internal/AsyncSubject */ "NHP+");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AsyncSubject", function() { return _internal_AsyncSubject__WEBPACK_IMPORTED_MODULE_7__["AsyncSubject"]; });

/* harmony import */ var _internal_scheduler_asap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./internal/scheduler/asap */ "7Hc7");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asap", function() { return _internal_scheduler_asap__WEBPACK_IMPORTED_MODULE_8__["asap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asapScheduler", function() { return _internal_scheduler_asap__WEBPACK_IMPORTED_MODULE_8__["asapScheduler"]; });

/* harmony import */ var _internal_scheduler_async__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./internal/scheduler/async */ "D0XW");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "async", function() { return _internal_scheduler_async__WEBPACK_IMPORTED_MODULE_9__["async"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asyncScheduler", function() { return _internal_scheduler_async__WEBPACK_IMPORTED_MODULE_9__["asyncScheduler"]; });

/* harmony import */ var _internal_scheduler_queue__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./internal/scheduler/queue */ "qgXg");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "queue", function() { return _internal_scheduler_queue__WEBPACK_IMPORTED_MODULE_10__["queue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "queueScheduler", function() { return _internal_scheduler_queue__WEBPACK_IMPORTED_MODULE_10__["queueScheduler"]; });

/* harmony import */ var _internal_scheduler_animationFrame__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./internal/scheduler/animationFrame */ "eNwd");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "animationFrame", function() { return _internal_scheduler_animationFrame__WEBPACK_IMPORTED_MODULE_11__["animationFrame"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "animationFrameScheduler", function() { return _internal_scheduler_animationFrame__WEBPACK_IMPORTED_MODULE_11__["animationFrameScheduler"]; });

/* harmony import */ var _internal_scheduler_VirtualTimeScheduler__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./internal/scheduler/VirtualTimeScheduler */ "iKkX");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VirtualTimeScheduler", function() { return _internal_scheduler_VirtualTimeScheduler__WEBPACK_IMPORTED_MODULE_12__["VirtualTimeScheduler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VirtualAction", function() { return _internal_scheduler_VirtualTimeScheduler__WEBPACK_IMPORTED_MODULE_12__["VirtualAction"]; });

/* harmony import */ var _internal_Scheduler__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./internal/Scheduler */ "Y/cZ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Scheduler", function() { return _internal_Scheduler__WEBPACK_IMPORTED_MODULE_13__["Scheduler"]; });

/* harmony import */ var _internal_Subscription__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./internal/Subscription */ "quSY");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Subscription", function() { return _internal_Subscription__WEBPACK_IMPORTED_MODULE_14__["Subscription"]; });

/* harmony import */ var _internal_Subscriber__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./internal/Subscriber */ "7o/Q");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Subscriber", function() { return _internal_Subscriber__WEBPACK_IMPORTED_MODULE_15__["Subscriber"]; });

/* harmony import */ var _internal_Notification__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./internal/Notification */ "WMd4");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Notification", function() { return _internal_Notification__WEBPACK_IMPORTED_MODULE_16__["Notification"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NotificationKind", function() { return _internal_Notification__WEBPACK_IMPORTED_MODULE_16__["NotificationKind"]; });

/* harmony import */ var _internal_util_pipe__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./internal/util/pipe */ "mCNh");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pipe", function() { return _internal_util_pipe__WEBPACK_IMPORTED_MODULE_17__["pipe"]; });

/* harmony import */ var _internal_util_noop__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./internal/util/noop */ "KqfI");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return _internal_util_noop__WEBPACK_IMPORTED_MODULE_18__["noop"]; });

/* harmony import */ var _internal_util_identity__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./internal/util/identity */ "SpAZ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return _internal_util_identity__WEBPACK_IMPORTED_MODULE_19__["identity"]; });

/* harmony import */ var _internal_util_isObservable__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./internal/util/isObservable */ "7+OI");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObservable", function() { return _internal_util_isObservable__WEBPACK_IMPORTED_MODULE_20__["isObservable"]; });

/* harmony import */ var _internal_util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./internal/util/ArgumentOutOfRangeError */ "4I5i");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArgumentOutOfRangeError", function() { return _internal_util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_21__["ArgumentOutOfRangeError"]; });

/* harmony import */ var _internal_util_EmptyError__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./internal/util/EmptyError */ "sVev");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmptyError", function() { return _internal_util_EmptyError__WEBPACK_IMPORTED_MODULE_22__["EmptyError"]; });

/* harmony import */ var _internal_util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./internal/util/ObjectUnsubscribedError */ "9ppp");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectUnsubscribedError", function() { return _internal_util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_23__["ObjectUnsubscribedError"]; });

/* harmony import */ var _internal_util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./internal/util/UnsubscriptionError */ "pjAE");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UnsubscriptionError", function() { return _internal_util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_24__["UnsubscriptionError"]; });

/* harmony import */ var _internal_util_TimeoutError__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./internal/util/TimeoutError */ "Y6u4");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TimeoutError", function() { return _internal_util_TimeoutError__WEBPACK_IMPORTED_MODULE_25__["TimeoutError"]; });

/* harmony import */ var _internal_observable_bindCallback__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./internal/observable/bindCallback */ "QqCr");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bindCallback", function() { return _internal_observable_bindCallback__WEBPACK_IMPORTED_MODULE_26__["bindCallback"]; });

/* harmony import */ var _internal_observable_bindNodeCallback__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./internal/observable/bindNodeCallback */ "4O5X");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bindNodeCallback", function() { return _internal_observable_bindNodeCallback__WEBPACK_IMPORTED_MODULE_27__["bindNodeCallback"]; });

/* harmony import */ var _internal_observable_combineLatest__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./internal/observable/combineLatest */ "itXk");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return _internal_observable_combineLatest__WEBPACK_IMPORTED_MODULE_28__["combineLatest"]; });

/* harmony import */ var _internal_observable_concat__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./internal/observable/concat */ "GyhO");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return _internal_observable_concat__WEBPACK_IMPORTED_MODULE_29__["concat"]; });

/* harmony import */ var _internal_observable_defer__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./internal/observable/defer */ "NXyV");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defer", function() { return _internal_observable_defer__WEBPACK_IMPORTED_MODULE_30__["defer"]; });

/* harmony import */ var _internal_observable_empty__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./internal/observable/empty */ "EY2u");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return _internal_observable_empty__WEBPACK_IMPORTED_MODULE_31__["empty"]; });

/* harmony import */ var _internal_observable_forkJoin__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./internal/observable/forkJoin */ "cp0P");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forkJoin", function() { return _internal_observable_forkJoin__WEBPACK_IMPORTED_MODULE_32__["forkJoin"]; });

/* harmony import */ var _internal_observable_from__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./internal/observable/from */ "Cfvw");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "from", function() { return _internal_observable_from__WEBPACK_IMPORTED_MODULE_33__["from"]; });

/* harmony import */ var _internal_observable_fromEvent__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./internal/observable/fromEvent */ "xgIS");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromEvent", function() { return _internal_observable_fromEvent__WEBPACK_IMPORTED_MODULE_34__["fromEvent"]; });

/* harmony import */ var _internal_observable_fromEventPattern__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./internal/observable/fromEventPattern */ "04ZW");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromEventPattern", function() { return _internal_observable_fromEventPattern__WEBPACK_IMPORTED_MODULE_35__["fromEventPattern"]; });

/* harmony import */ var _internal_observable_generate__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./internal/observable/generate */ "WPMC");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "generate", function() { return _internal_observable_generate__WEBPACK_IMPORTED_MODULE_36__["generate"]; });

/* harmony import */ var _internal_observable_iif__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./internal/observable/iif */ "r0o6");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "iif", function() { return _internal_observable_iif__WEBPACK_IMPORTED_MODULE_37__["iif"]; });

/* harmony import */ var _internal_observable_interval__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./internal/observable/interval */ "l5mm");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interval", function() { return _internal_observable_interval__WEBPACK_IMPORTED_MODULE_38__["interval"]; });

/* harmony import */ var _internal_observable_merge__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./internal/observable/merge */ "VRyK");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _internal_observable_merge__WEBPACK_IMPORTED_MODULE_39__["merge"]; });

/* harmony import */ var _internal_observable_never__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./internal/observable/never */ "5yfJ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "never", function() { return _internal_observable_never__WEBPACK_IMPORTED_MODULE_40__["never"]; });

/* harmony import */ var _internal_observable_of__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./internal/observable/of */ "LRne");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "of", function() { return _internal_observable_of__WEBPACK_IMPORTED_MODULE_41__["of"]; });

/* harmony import */ var _internal_observable_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./internal/observable/onErrorResumeNext */ "Hkhx");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return _internal_observable_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_42__["onErrorResumeNext"]; });

/* harmony import */ var _internal_observable_pairs__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./internal/observable/pairs */ "hKy8");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return _internal_observable_pairs__WEBPACK_IMPORTED_MODULE_43__["pairs"]; });

/* harmony import */ var _internal_observable_partition__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./internal/observable/partition */ "2QGa");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return _internal_observable_partition__WEBPACK_IMPORTED_MODULE_44__["partition"]; });

/* harmony import */ var _internal_observable_race__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./internal/observable/race */ "Nv8m");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "race", function() { return _internal_observable_race__WEBPACK_IMPORTED_MODULE_45__["race"]; });

/* harmony import */ var _internal_observable_range__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./internal/observable/range */ "NNCq");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _internal_observable_range__WEBPACK_IMPORTED_MODULE_46__["range"]; });

/* harmony import */ var _internal_observable_throwError__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./internal/observable/throwError */ "z6cu");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throwError", function() { return _internal_observable_throwError__WEBPACK_IMPORTED_MODULE_47__["throwError"]; });

/* harmony import */ var _internal_observable_timer__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./internal/observable/timer */ "PqYM");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return _internal_observable_timer__WEBPACK_IMPORTED_MODULE_48__["timer"]; });

/* harmony import */ var _internal_observable_using__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./internal/observable/using */ "Qn8I");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "using", function() { return _internal_observable_using__WEBPACK_IMPORTED_MODULE_49__["using"]; });

/* harmony import */ var _internal_observable_zip__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./internal/observable/zip */ "1uah");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _internal_observable_zip__WEBPACK_IMPORTED_MODULE_50__["zip"]; });

/* harmony import */ var _internal_scheduled_scheduled__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./internal/scheduled/scheduled */ "7HRe");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scheduled", function() { return _internal_scheduled_scheduled__WEBPACK_IMPORTED_MODULE_51__["scheduled"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EMPTY", function() { return _internal_observable_empty__WEBPACK_IMPORTED_MODULE_31__["EMPTY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NEVER", function() { return _internal_observable_never__WEBPACK_IMPORTED_MODULE_40__["NEVER"]; });

/* harmony import */ var _internal_config__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./internal/config */ "2fFW");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "config", function() { return _internal_config__WEBPACK_IMPORTED_MODULE_52__["config"]; });

























































/***/ }),

/***/ "qZ0a":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/publishLast.js ***!
  \**********************************************************************/
/*! exports provided: publishLast */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "publishLast", function() { return publishLast; });
/* harmony import */ var _AsyncSubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../AsyncSubject */ "NHP+");
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ "oB13");


function publishLast() {
  return function (source) {
    return Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(new _AsyncSubject__WEBPACK_IMPORTED_MODULE_0__["AsyncSubject"]())(source);
  };
}

/***/ }),

/***/ "qgXg":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduler/queue.js ***!
  \****************************************************************/
/*! exports provided: queueScheduler, queue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queueScheduler", function() { return queueScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queue", function() { return queue; });
/* harmony import */ var _QueueAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./QueueAction */ "YuR2");
/* harmony import */ var _QueueScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./QueueScheduler */ "Hh5Z");


var queueScheduler = /*@__PURE__*/new _QueueScheduler__WEBPACK_IMPORTED_MODULE_1__["QueueScheduler"](_QueueAction__WEBPACK_IMPORTED_MODULE_0__["QueueAction"]);
var queue = queueScheduler;

/***/ }),

/***/ "qnoD":
/*!*******************************************************!*\
  !*** ./src/app/services/firebase/firebase.service.ts ***!
  \*******************************************************/
/*! exports provided: FirebaseService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FirebaseService", function() { return FirebaseService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_fire_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/fire/firestore */ "mrps");



var FirebaseService = /** @class */ /*@__PURE__*/ (function () {
    function FirebaseService(db) {
        this.db = db;
    }
    FirebaseService.prototype.getUser = function (userKey) {
        return this.db.collection('users').doc(userKey).snapshotChanges();
    };
    FirebaseService.prototype.updateUser = function (userKey, value) {
        value.nameToSearch = value.name.toLowerCase();
        return this.db.collection('users').doc(userKey).set(value);
    };
    FirebaseService.prototype.deleteUser = function (userKey) {
        return this.db.collection('users').doc(userKey).delete();
    };
    FirebaseService.prototype.getUsers = function () {
        return this.db.collection('users', function (ref) {
            return ref
                .where('role_id', '>=', 0);
        }).valueChanges();
    };
    FirebaseService.prototype.searchUsers = function (searchValue) {
        return this.db.collection('users', function (ref) {
            return ref
                .where('eMail', '==', searchValue.username)
                .where('password', '==', btoa(searchValue.password));
        }).valueChanges();
    };
    FirebaseService.prototype.isLoggedIn = function () {
        if (localStorage.getItem('currentUser')) {
            return true;
        }
        return false;
    };
    FirebaseService.prototype.searchUsersByAge = function (value) {
        return this.db.collection('users', function (ref) { return ref.orderBy('age').startAt(value); }).snapshotChanges();
    };
    FirebaseService.prototype.createUser = function (value, avatar) {
        return this.db.collection('users').add({
            name: value.name,
            nameToSearch: value.name.toLowerCase(),
            surname: value.surname,
            age: parseInt(value.age),
            avatar: avatar
        });
    };
    FirebaseService.prototype.logout = function () {
        localStorage.removeItem('currentUser');
        //this.isLoggedIn();
    };
    FirebaseService.ɵfac = function FirebaseService_Factory(t) { return new (t || FirebaseService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_fire_firestore__WEBPACK_IMPORTED_MODULE_1__["AngularFirestore"])); };
    FirebaseService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: FirebaseService, factory: FirebaseService.ɵfac, providedIn: 'root' });
    return FirebaseService;
}());




/***/ }),

/***/ "quSY":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/Subscription.js ***!
  \*************************************************************/
/*! exports provided: Subscription */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subscription", function() { return Subscription; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/isArray */ "DH7j");
/* harmony import */ var _util_isObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/isObject */ "XoHu");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/isFunction */ "n6bG");
/* harmony import */ var _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/UnsubscriptionError */ "pjAE");






var Subscription = /*@__PURE__*/function () {
  var Subscription = /*#__PURE__*/function () {
    function Subscription(unsubscribe) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Subscription);

      this.closed = false;
      this._parentOrParents = null;
      this._subscriptions = null;

      if (unsubscribe) {
        this._ctorUnsubscribe = true;
        this._unsubscribe = unsubscribe;
      }
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Subscription, [{
      key: "unsubscribe",
      value: function unsubscribe() {
        var errors;

        if (this.closed) {
          return;
        }

        var _parentOrParents = this._parentOrParents,
            _ctorUnsubscribe = this._ctorUnsubscribe,
            _unsubscribe = this._unsubscribe,
            _subscriptions = this._subscriptions;
        this.closed = true;
        this._parentOrParents = null;
        this._subscriptions = null;

        if (_parentOrParents instanceof Subscription) {
          _parentOrParents.remove(this);
        } else if (_parentOrParents !== null) {
          for (var index = 0; index < _parentOrParents.length; ++index) {
            var parent = _parentOrParents[index];
            parent.remove(this);
          }
        }

        if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_4__["isFunction"])(_unsubscribe)) {
          if (_ctorUnsubscribe) {
            this._unsubscribe = undefined;
          }

          try {
            _unsubscribe.call(this);
          } catch (e) {
            errors = e instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_5__["UnsubscriptionError"] ? flattenUnsubscriptionErrors(e.errors) : [e];
          }
        }

        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(_subscriptions)) {
          var _index = -1;

          var len = _subscriptions.length;

          while (++_index < len) {
            var sub = _subscriptions[_index];

            if (Object(_util_isObject__WEBPACK_IMPORTED_MODULE_3__["isObject"])(sub)) {
              try {
                sub.unsubscribe();
              } catch (e) {
                errors = errors || [];

                if (e instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_5__["UnsubscriptionError"]) {
                  errors = errors.concat(flattenUnsubscriptionErrors(e.errors));
                } else {
                  errors.push(e);
                }
              }
            }
          }
        }

        if (errors) {
          throw new _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_5__["UnsubscriptionError"](errors);
        }
      }
    }, {
      key: "add",
      value: function add(teardown) {
        var subscription = teardown;

        if (!teardown) {
          return Subscription.EMPTY;
        }

        switch (typeof teardown) {
          case 'function':
            subscription = new Subscription(teardown);

          case 'object':
            if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {
              return subscription;
            } else if (this.closed) {
              subscription.unsubscribe();
              return subscription;
            } else if (!(subscription instanceof Subscription)) {
              var tmp = subscription;
              subscription = new Subscription();
              subscription._subscriptions = [tmp];
            }

            break;

          default:
            {
              throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
            }
        }

        var _subscription = subscription,
            _parentOrParents = _subscription._parentOrParents;

        if (_parentOrParents === null) {
          subscription._parentOrParents = this;
        } else if (_parentOrParents instanceof Subscription) {
          if (_parentOrParents === this) {
            return subscription;
          }

          subscription._parentOrParents = [_parentOrParents, this];
        } else if (_parentOrParents.indexOf(this) === -1) {
          _parentOrParents.push(this);
        } else {
          return subscription;
        }

        var subscriptions = this._subscriptions;

        if (subscriptions === null) {
          this._subscriptions = [subscription];
        } else {
          subscriptions.push(subscription);
        }

        return subscription;
      }
    }, {
      key: "remove",
      value: function remove(subscription) {
        var subscriptions = this._subscriptions;

        if (subscriptions) {
          var subscriptionIndex = subscriptions.indexOf(subscription);

          if (subscriptionIndex !== -1) {
            subscriptions.splice(subscriptionIndex, 1);
          }
        }
      }
    }]);

    return Subscription;
  }();

  Subscription.EMPTY = function (empty) {
    empty.closed = true;
    return empty;
  }( /*@__PURE__*/new Subscription());

  return Subscription;
}();

function flattenUnsubscriptionErrors(errors) {
  return errors.reduce(function (errs, err) {
    return errs.concat(err instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_5__["UnsubscriptionError"] ? err.errors : err);
  }, []);
}

/***/ }),

/***/ "r0WS":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/timestamp.js ***!
  \********************************************************************/
/*! exports provided: timestamp, Timestamp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timestamp", function() { return timestamp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Timestamp", function() { return Timestamp; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ "D0XW");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./map */ "lJxs");



function timestamp() {
  var scheduler = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
  return Object(_map__WEBPACK_IMPORTED_MODULE_2__["map"])(function (value) {
    return new Timestamp(value, scheduler.now());
  });
}
var Timestamp = function Timestamp(value, timestamp) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Timestamp);

  this.value = value;
  this.timestamp = timestamp;
};

/***/ }),

/***/ "r0o6":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/iif.js ***!
  \***************************************************************/
/*! exports provided: iif */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iif", function() { return iif; });
/* harmony import */ var _defer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defer */ "NXyV");
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./empty */ "EY2u");


function iif(condition) {
  var trueResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _empty__WEBPACK_IMPORTED_MODULE_1__["EMPTY"];
  var falseResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _empty__WEBPACK_IMPORTED_MODULE_1__["EMPTY"];
  return Object(_defer__WEBPACK_IMPORTED_MODULE_0__["defer"])(function () {
    return condition() ? trueResult : falseResult;
  });
}

/***/ }),

/***/ "rePB":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _defineProperty; });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),

/***/ "s4An":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _setPrototypeOf; });
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

/***/ }),

/***/ "sTY7":
/*!***********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/windowToggle.js ***!
  \***********************************************************************/
/*! exports provided: windowToggle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowToggle", function() { return windowToggle; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Subject */ "XNiG");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Subscription */ "quSY");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../OuterSubscriber */ "l7GE");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/subscribeToResult */ "ZUHj");











function windowToggle(openings, closingSelector) {
  return function (source) {
    return source.lift(new WindowToggleOperator(openings, closingSelector));
  };
}

var WindowToggleOperator = /*#__PURE__*/function () {
  function WindowToggleOperator(openings, closingSelector) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, WindowToggleOperator);

    this.openings = openings;
    this.closingSelector = closingSelector;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(WindowToggleOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));
    }
  }]);

  return WindowToggleOperator;
}();

var WindowToggleSubscriber = /*#__PURE__*/function (_OuterSubscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(WindowToggleSubscriber, _OuterSubscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(WindowToggleSubscriber);

  function WindowToggleSubscriber(destination, openings, closingSelector) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, WindowToggleSubscriber);

    _this = _super.call(this, destination);
    _this.openings = openings;
    _this.closingSelector = closingSelector;
    _this.contexts = [];

    _this.add(_this.openSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_10__["subscribeToResult"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this), openings, openings));

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(WindowToggleSubscriber, [{
    key: "_next",
    value: function _next(value) {
      var contexts = this.contexts;

      if (contexts) {
        var len = contexts.length;

        for (var i = 0; i < len; i++) {
          contexts[i].window.next(value);
        }
      }
    }
  }, {
    key: "_error",
    value: function _error(err) {
      var contexts = this.contexts;
      this.contexts = null;

      if (contexts) {
        var len = contexts.length;
        var index = -1;

        while (++index < len) {
          var context = contexts[index];
          context.window.error(err);
          context.subscription.unsubscribe();
        }
      }

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(WindowToggleSubscriber.prototype), "_error", this).call(this, err);
    }
  }, {
    key: "_complete",
    value: function _complete() {
      var contexts = this.contexts;
      this.contexts = null;

      if (contexts) {
        var len = contexts.length;
        var index = -1;

        while (++index < len) {
          var context = contexts[index];
          context.window.complete();
          context.subscription.unsubscribe();
        }
      }

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(WindowToggleSubscriber.prototype), "_complete", this).call(this);
    }
  }, {
    key: "_unsubscribe",
    value: function _unsubscribe() {
      var contexts = this.contexts;
      this.contexts = null;

      if (contexts) {
        var len = contexts.length;
        var index = -1;

        while (++index < len) {
          var context = contexts[index];
          context.window.unsubscribe();
          context.subscription.unsubscribe();
        }
      }
    }
  }, {
    key: "notifyNext",
    value: function notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {
      if (outerValue === this.openings) {
        var closingNotifier;

        try {
          var closingSelector = this.closingSelector;
          closingNotifier = closingSelector(innerValue);
        } catch (e) {
          return this.error(e);
        }

        var window = new _Subject__WEBPACK_IMPORTED_MODULE_7__["Subject"]();
        var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_8__["Subscription"]();
        var context = {
          window: window,
          subscription: subscription
        };
        this.contexts.push(context);
        var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_10__["subscribeToResult"])(this, closingNotifier, context);

        if (innerSubscription.closed) {
          this.closeWindow(this.contexts.length - 1);
        } else {
          innerSubscription.context = context;
          subscription.add(innerSubscription);
        }

        this.destination.next(window);
      } else {
        this.closeWindow(this.contexts.indexOf(outerValue));
      }
    }
  }, {
    key: "notifyError",
    value: function notifyError(err) {
      this.error(err);
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete(inner) {
      if (inner !== this.openSubscription) {
        this.closeWindow(this.contexts.indexOf(inner.context));
      }
    }
  }, {
    key: "closeWindow",
    value: function closeWindow(index) {
      if (index === -1) {
        return;
      }

      var contexts = this.contexts;
      var context = contexts[index];
      var window = context.window,
          subscription = context.subscription;
      contexts.splice(index, 1);
      window.complete();
      subscription.unsubscribe();
    }
  }]);

  return WindowToggleSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_9__["OuterSubscriber"]);

/***/ }),

/***/ "sVev":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/EmptyError.js ***!
  \****************************************************************/
/*! exports provided: EmptyError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmptyError", function() { return EmptyError; });
var EmptyErrorImpl = /*@__PURE__*/function () {
  function EmptyErrorImpl() {
    Error.call(this);
    this.message = 'no elements in sequence';
    this.name = 'EmptyError';
    return this;
  }

  EmptyErrorImpl.prototype = Object.create(Error.prototype);
  return EmptyErrorImpl;
}();

var EmptyError = EmptyErrorImpl;

/***/ }),

/***/ "syX2":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/timeoutWith.js ***!
  \**********************************************************************/
/*! exports provided: timeoutWith */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeoutWith", function() { return timeoutWith; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../scheduler/async */ "D0XW");
/* harmony import */ var _util_isDate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/isDate */ "mlxB");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");









function timeoutWith(due, withObservable) {
  var scheduler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _scheduler_async__WEBPACK_IMPORTED_MODULE_6__["async"];
  return function (source) {
    var absoluteTimeout = Object(_util_isDate__WEBPACK_IMPORTED_MODULE_7__["isDate"])(due);
    var waitFor = absoluteTimeout ? +due - scheduler.now() : Math.abs(due);
    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));
  };
}

var TimeoutWithOperator = /*#__PURE__*/function () {
  function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, TimeoutWithOperator);

    this.waitFor = waitFor;
    this.absoluteTimeout = absoluteTimeout;
    this.withObservable = withObservable;
    this.scheduler = scheduler;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(TimeoutWithOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));
    }
  }]);

  return TimeoutWithOperator;
}();

var TimeoutWithSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(TimeoutWithSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(TimeoutWithSubscriber);

  function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, TimeoutWithSubscriber);

    _this = _super.call(this, destination);
    _this.absoluteTimeout = absoluteTimeout;
    _this.waitFor = waitFor;
    _this.withObservable = withObservable;
    _this.scheduler = scheduler;

    _this.scheduleTimeout();

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(TimeoutWithSubscriber, [{
    key: "scheduleTimeout",
    value: function scheduleTimeout() {
      var action = this.action;

      if (action) {
        this.action = action.schedule(this, this.waitFor);
      } else {
        this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));
      }
    }
  }, {
    key: "_next",
    value: function _next(value) {
      if (!this.absoluteTimeout) {
        this.scheduleTimeout();
      }

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(TimeoutWithSubscriber.prototype), "_next", this).call(this, value);
    }
  }, {
    key: "_unsubscribe",
    value: function _unsubscribe() {
      this.action = undefined;
      this.scheduler = null;
      this.withObservable = null;
    }
  }], [{
    key: "dispatchTimeout",
    value: function dispatchTimeout(subscriber) {
      var withObservable = subscriber.withObservable;

      subscriber._unsubscribeAndRecycle();

      subscriber.add(Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_8__["innerSubscribe"])(withObservable, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_8__["SimpleInnerSubscriber"](subscriber)));
    }
  }]);

  return TimeoutWithSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_8__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "tS1D":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/timeout.js ***!
  \******************************************************************/
/*! exports provided: timeout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeout", function() { return timeout; });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ "D0XW");
/* harmony import */ var _util_TimeoutError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/TimeoutError */ "Y6u4");
/* harmony import */ var _timeoutWith__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timeoutWith */ "syX2");
/* harmony import */ var _observable_throwError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../observable/throwError */ "z6cu");




function timeout(due) {
  var scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _scheduler_async__WEBPACK_IMPORTED_MODULE_0__["async"];
  return Object(_timeoutWith__WEBPACK_IMPORTED_MODULE_2__["timeoutWith"])(due, Object(_observable_throwError__WEBPACK_IMPORTED_MODULE_3__["throwError"])(new _util_TimeoutError__WEBPACK_IMPORTED_MODULE_1__["TimeoutError"]()), scheduler);
}

/***/ }),

/***/ "tf+s":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/subscribeOn.js ***!
  \**********************************************************************/
/*! exports provided: subscribeOn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeOn", function() { return subscribeOn; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _observable_SubscribeOnObservable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/SubscribeOnObservable */ "O4y0");



function subscribeOn(scheduler) {
  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  return function subscribeOnOperatorFunction(source) {
    return source.lift(new SubscribeOnOperator(scheduler, delay));
  };
}

var SubscribeOnOperator = /*#__PURE__*/function () {
  function SubscribeOnOperator(scheduler, delay) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, SubscribeOnOperator);

    this.scheduler = scheduler;
    this.delay = delay;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(SubscribeOnOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return new _observable_SubscribeOnObservable__WEBPACK_IMPORTED_MODULE_2__["SubscribeOnObservable"](source, this.delay, this.scheduler).subscribe(subscriber);
    }
  }]);

  return SubscribeOnOperator;
}();

/***/ }),

/***/ "tnsW":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/audit.js ***!
  \****************************************************************/
/*! exports provided: audit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "audit", function() { return audit; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");





function audit(durationSelector) {
  return function auditOperatorFunction(source) {
    return source.lift(new AuditOperator(durationSelector));
  };
}

var AuditOperator = /*#__PURE__*/function () {
  function AuditOperator(durationSelector) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, AuditOperator);

    this.durationSelector = durationSelector;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(AuditOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));
    }
  }]);

  return AuditOperator;
}();

var AuditSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(AuditSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(AuditSubscriber);

  function AuditSubscriber(destination, durationSelector) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, AuditSubscriber);

    _this = _super.call(this, destination);
    _this.durationSelector = durationSelector;
    _this.hasValue = false;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(AuditSubscriber, [{
    key: "_next",
    value: function _next(value) {
      this.value = value;
      this.hasValue = true;

      if (!this.throttled) {
        var duration;

        try {
          var durationSelector = this.durationSelector;
          duration = durationSelector(value);
        } catch (err) {
          return this.destination.error(err);
        }

        var innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["innerSubscribe"])(duration, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["SimpleInnerSubscriber"](this));

        if (!innerSubscription || innerSubscription.closed) {
          this.clearThrottle();
        } else {
          this.add(this.throttled = innerSubscription);
        }
      }
    }
  }, {
    key: "clearThrottle",
    value: function clearThrottle() {
      var value = this.value,
          hasValue = this.hasValue,
          throttled = this.throttled;

      if (throttled) {
        this.remove(throttled);
        this.throttled = undefined;
        throttled.unsubscribe();
      }

      if (hasValue) {
        this.value = undefined;
        this.hasValue = false;
        this.destination.next(value);
      }
    }
  }, {
    key: "notifyNext",
    value: function notifyNext() {
      this.clearThrottle();
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {
      this.clearThrottle();
    }
  }]);

  return AuditSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "ts7B":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/firestore/es2015/collection-group/collection-group.js ***!
  \*******************************************************************************************************/
/*! exports provided: AngularFirestoreCollectionGroup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AngularFirestoreCollectionGroup", function() { return AngularFirestoreCollectionGroup; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var _observable_fromRef__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../observable/fromRef */ "Ttzs");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _collection_collection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../collection/collection */ "maur");
/* harmony import */ var _collection_changes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../collection/changes */ "3CkQ");








var AngularFirestoreCollectionGroup = /*#__PURE__*/function () {
  function AngularFirestoreCollectionGroup(query, afs) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, AngularFirestoreCollectionGroup);

    this.query = query;
    this.afs = afs;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(AngularFirestoreCollectionGroup, [{
    key: "stateChanges",
    value: function stateChanges(events) {
      if (!events || events.length === 0) {
        return Object(_collection_changes__WEBPACK_IMPORTED_MODULE_7__["docChanges"])(this.query, this.afs.schedulers.outsideAngular).pipe(this.afs.keepUnstableUntilFirst);
      }

      return Object(_collection_changes__WEBPACK_IMPORTED_MODULE_7__["docChanges"])(this.query, this.afs.schedulers.outsideAngular).pipe(this.afs.keepUnstableUntilFirst, Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (actions) {
        return actions.filter(function (change) {
          return events.indexOf(change.type) > -1;
        });
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["filter"])(function (changes) {
        return changes.length > 0;
      }));
    }
  }, {
    key: "auditTrail",
    value: function auditTrail(events) {
      return this.stateChanges(events).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["scan"])(function (current, action) {
        return [].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(current), Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(action));
      }, []));
    }
  }, {
    key: "snapshotChanges",
    value: function snapshotChanges(events) {
      var validatedEvents = Object(_collection_collection__WEBPACK_IMPORTED_MODULE_6__["validateEventsArray"])(events);
      var scheduledSortedChanges$ = Object(_collection_changes__WEBPACK_IMPORTED_MODULE_7__["sortedChanges"])(this.query, validatedEvents, this.afs.schedulers.outsideAngular);
      return scheduledSortedChanges$.pipe(this.afs.keepUnstableUntilFirst);
    }
  }, {
    key: "valueChanges",
    value: function valueChanges() {
      var fromCollectionRefScheduled$ = Object(_observable_fromRef__WEBPACK_IMPORTED_MODULE_4__["fromCollectionRef"])(this.query, this.afs.schedulers.outsideAngular);
      return fromCollectionRefScheduled$.pipe(this.afs.keepUnstableUntilFirst, Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (actions) {
        return actions.payload.docs.map(function (a) {
          return a.data();
        });
      }));
    }
  }, {
    key: "get",
    value: function get(options) {
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])(this.query.get(options)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["observeOn"])(this.afs.schedulers.insideAngular));
    }
  }]);

  return AngularFirestoreCollectionGroup;
}();

/***/ }),

/***/ "tyNb":
/*!**********************************************************************!*\
  !*** ./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js ***!
  \**********************************************************************/
/*! exports provided: ActivatedRoute, ActivatedRouteSnapshot, ActivationEnd, ActivationStart, BaseRouteReuseStrategy, ChildActivationEnd, ChildActivationStart, ChildrenOutletContexts, DefaultUrlSerializer, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, NoPreloading, OutletContext, PRIMARY_OUTLET, PreloadAllModules, PreloadingStrategy, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, ROUTES, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouteReuseStrategy, Router, RouterEvent, RouterLink, RouterLinkActive, RouterLinkWithHref, RouterModule, RouterOutlet, RouterPreloader, RouterState, RouterStateSnapshot, RoutesRecognized, Scroll, UrlHandlingStrategy, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, convertToParamMap, provideRoutes, ɵEmptyOutletComponent, ɵROUTER_PROVIDERS, ɵangular_packages_router_router_a, ɵangular_packages_router_router_b, ɵangular_packages_router_router_c, ɵangular_packages_router_router_d, ɵangular_packages_router_router_e, ɵangular_packages_router_router_f, ɵangular_packages_router_router_g, ɵangular_packages_router_router_h, ɵangular_packages_router_router_i, ɵangular_packages_router_router_j, ɵangular_packages_router_router_k, ɵangular_packages_router_router_l, ɵangular_packages_router_router_m, ɵangular_packages_router_router_n, ɵangular_packages_router_router_o, ɵassignExtraOptionsToRouter, ɵflatten */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActivatedRoute", function() { return ActivatedRoute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActivatedRouteSnapshot", function() { return ActivatedRouteSnapshot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActivationEnd", function() { return ActivationEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActivationStart", function() { return ActivationStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseRouteReuseStrategy", function() { return BaseRouteReuseStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChildActivationEnd", function() { return ChildActivationEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChildActivationStart", function() { return ChildActivationStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChildrenOutletContexts", function() { return ChildrenOutletContexts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultUrlSerializer", function() { return DefaultUrlSerializer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GuardsCheckEnd", function() { return GuardsCheckEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GuardsCheckStart", function() { return GuardsCheckStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigationCancel", function() { return NavigationCancel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigationEnd", function() { return NavigationEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigationError", function() { return NavigationError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigationStart", function() { return NavigationStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NoPreloading", function() { return NoPreloading; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OutletContext", function() { return OutletContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PRIMARY_OUTLET", function() { return PRIMARY_OUTLET; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PreloadAllModules", function() { return PreloadAllModules; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PreloadingStrategy", function() { return PreloadingStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ROUTER_CONFIGURATION", function() { return ROUTER_CONFIGURATION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ROUTER_INITIALIZER", function() { return ROUTER_INITIALIZER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ROUTES", function() { return ROUTES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResolveEnd", function() { return ResolveEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResolveStart", function() { return ResolveStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouteConfigLoadEnd", function() { return RouteConfigLoadEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouteConfigLoadStart", function() { return RouteConfigLoadStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouteReuseStrategy", function() { return RouteReuseStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Router", function() { return Router; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterEvent", function() { return RouterEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterLink", function() { return RouterLink; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterLinkActive", function() { return RouterLinkActive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterLinkWithHref", function() { return RouterLinkWithHref; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterModule", function() { return RouterModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterOutlet", function() { return RouterOutlet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterPreloader", function() { return RouterPreloader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterState", function() { return RouterState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterStateSnapshot", function() { return RouterStateSnapshot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoutesRecognized", function() { return RoutesRecognized; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scroll", function() { return Scroll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UrlHandlingStrategy", function() { return UrlHandlingStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UrlSegment", function() { return UrlSegment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UrlSegmentGroup", function() { return UrlSegmentGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UrlSerializer", function() { return UrlSerializer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UrlTree", function() { return UrlTree; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertToParamMap", function() { return convertToParamMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "provideRoutes", function() { return provideRoutes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵEmptyOutletComponent", function() { return ɵEmptyOutletComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵROUTER_PROVIDERS", function() { return ROUTER_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_a", function() { return ROUTER_FORROOT_GUARD; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_b", function() { return routerNgProbeToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_c", function() { return createRouterScroller; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_d", function() { return provideLocationStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_e", function() { return provideForRootGuard; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_f", function() { return setupRouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_g", function() { return rootRoute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_h", function() { return RouterInitializer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_i", function() { return getAppInitializer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_j", function() { return getBootstrapListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_k", function() { return provideRouterInitializer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_l", function() { return ɵEmptyOutletComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_m", function() { return Tree; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_n", function() { return TreeNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_o", function() { return RouterScroller; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵassignExtraOptionsToRouter", function() { return assignExtraOptionsToRouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵflatten", function() { return flatten; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "ODXe");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/defineProperty */ "rePB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "uFwe");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs/operators */ "kU1M");










/**
 * @license Angular v11.0.2
 * (c) 2010-2020 Google LLC. https://angular.io/
 * License: MIT
 */




/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Base for events the router goes through, as opposed to events tied to a specific
 * route. Fired one time for any given navigation.
 *
 * The following code shows how a class subscribes to router events.
 *
 * ```ts
 * class MyService {
 *   constructor(public router: Router, logger: Logger) {
 *     router.events.pipe(
 *        filter((e: Event): e is RouterEvent => e instanceof RouterEvent)
 *     ).subscribe((e: RouterEvent) => {
 *       logger.log(e.id, e.url);
 *     });
 *   }
 * }
 * ```
 *
 * @see `Event`
 * @see [Router events summary](guide/router#router-events)
 * @publicApi
 */




var RouterEvent = function RouterEvent(
/** A unique ID that the router assigns to every router navigation. */
id,
/** The URL that is the destination for this navigation. */
url) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, RouterEvent);

  this.id = id;
  this.url = url;
};
/**
 * An event triggered when a navigation starts.
 *
 * @publicApi
 */


var NavigationStart = /*#__PURE__*/function (_RouterEvent) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(NavigationStart, _RouterEvent);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(NavigationStart);

  function NavigationStart(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url) {
    var _this;

    var navigationTrigger = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'imperative';
    var restoredState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, NavigationStart);

    _this = _super.call(this, id, url);
    _this.navigationTrigger = navigationTrigger;
    _this.restoredState = restoredState;
    return _this;
  }
  /** @docsNotRequired */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(NavigationStart, [{
    key: "toString",
    value: function toString() {
      return "NavigationStart(id: ".concat(this.id, ", url: '").concat(this.url, "')");
    }
  }]);

  return NavigationStart;
}(RouterEvent);
/**
 * An event triggered when a navigation ends successfully.
 *
 * @see `NavigationStart`
 * @see `NavigationCancel`
 * @see `NavigationError`
 *
 * @publicApi
 */


var NavigationEnd = /*#__PURE__*/function (_RouterEvent2) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(NavigationEnd, _RouterEvent2);

  var _super2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(NavigationEnd);

  function NavigationEnd(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects) {
    var _this2;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, NavigationEnd);

    _this2 = _super2.call(this, id, url);
    _this2.urlAfterRedirects = urlAfterRedirects;
    return _this2;
  }
  /** @docsNotRequired */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(NavigationEnd, [{
    key: "toString",
    value: function toString() {
      return "NavigationEnd(id: ".concat(this.id, ", url: '").concat(this.url, "', urlAfterRedirects: '").concat(this.urlAfterRedirects, "')");
    }
  }]);

  return NavigationEnd;
}(RouterEvent);
/**
 * An event triggered when a navigation is canceled, directly or indirectly.
 * This can happen when a route guard
 * returns `false` or initiates a redirect by returning a `UrlTree`.
 *
 * @see `NavigationStart`
 * @see `NavigationEnd`
 * @see `NavigationError`
 *
 * @publicApi
 */


var NavigationCancel = /*#__PURE__*/function (_RouterEvent3) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(NavigationCancel, _RouterEvent3);

  var _super3 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(NavigationCancel);

  function NavigationCancel(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  reason) {
    var _this3;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, NavigationCancel);

    _this3 = _super3.call(this, id, url);
    _this3.reason = reason;
    return _this3;
  }
  /** @docsNotRequired */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(NavigationCancel, [{
    key: "toString",
    value: function toString() {
      return "NavigationCancel(id: ".concat(this.id, ", url: '").concat(this.url, "')");
    }
  }]);

  return NavigationCancel;
}(RouterEvent);
/**
 * An event triggered when a navigation fails due to an unexpected error.
 *
 * @see `NavigationStart`
 * @see `NavigationEnd`
 * @see `NavigationCancel`
 *
 * @publicApi
 */


var NavigationError = /*#__PURE__*/function (_RouterEvent4) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(NavigationError, _RouterEvent4);

  var _super4 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(NavigationError);

  function NavigationError(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  error) {
    var _this4;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, NavigationError);

    _this4 = _super4.call(this, id, url);
    _this4.error = error;
    return _this4;
  }
  /** @docsNotRequired */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(NavigationError, [{
    key: "toString",
    value: function toString() {
      return "NavigationError(id: ".concat(this.id, ", url: '").concat(this.url, "', error: ").concat(this.error, ")");
    }
  }]);

  return NavigationError;
}(RouterEvent);
/**
 * An event triggered when routes are recognized.
 *
 * @publicApi
 */


var RoutesRecognized = /*#__PURE__*/function (_RouterEvent5) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(RoutesRecognized, _RouterEvent5);

  var _super5 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(RoutesRecognized);

  function RoutesRecognized(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects,
  /** @docsNotRequired */
  state) {
    var _this5;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, RoutesRecognized);

    _this5 = _super5.call(this, id, url);
    _this5.urlAfterRedirects = urlAfterRedirects;
    _this5.state = state;
    return _this5;
  }
  /** @docsNotRequired */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RoutesRecognized, [{
    key: "toString",
    value: function toString() {
      return "RoutesRecognized(id: ".concat(this.id, ", url: '").concat(this.url, "', urlAfterRedirects: '").concat(this.urlAfterRedirects, "', state: ").concat(this.state, ")");
    }
  }]);

  return RoutesRecognized;
}(RouterEvent);
/**
 * An event triggered at the start of the Guard phase of routing.
 *
 * @see `GuardsCheckEnd`
 *
 * @publicApi
 */


var GuardsCheckStart = /*#__PURE__*/function (_RouterEvent6) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(GuardsCheckStart, _RouterEvent6);

  var _super6 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(GuardsCheckStart);

  function GuardsCheckStart(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects,
  /** @docsNotRequired */
  state) {
    var _this6;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, GuardsCheckStart);

    _this6 = _super6.call(this, id, url);
    _this6.urlAfterRedirects = urlAfterRedirects;
    _this6.state = state;
    return _this6;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(GuardsCheckStart, [{
    key: "toString",
    value: function toString() {
      return "GuardsCheckStart(id: ".concat(this.id, ", url: '").concat(this.url, "', urlAfterRedirects: '").concat(this.urlAfterRedirects, "', state: ").concat(this.state, ")");
    }
  }]);

  return GuardsCheckStart;
}(RouterEvent);
/**
 * An event triggered at the end of the Guard phase of routing.
 *
 * @see `GuardsCheckStart`
 *
 * @publicApi
 */


var GuardsCheckEnd = /*#__PURE__*/function (_RouterEvent7) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(GuardsCheckEnd, _RouterEvent7);

  var _super7 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(GuardsCheckEnd);

  function GuardsCheckEnd(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects,
  /** @docsNotRequired */
  state,
  /** @docsNotRequired */
  shouldActivate) {
    var _this7;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, GuardsCheckEnd);

    _this7 = _super7.call(this, id, url);
    _this7.urlAfterRedirects = urlAfterRedirects;
    _this7.state = state;
    _this7.shouldActivate = shouldActivate;
    return _this7;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(GuardsCheckEnd, [{
    key: "toString",
    value: function toString() {
      return "GuardsCheckEnd(id: ".concat(this.id, ", url: '").concat(this.url, "', urlAfterRedirects: '").concat(this.urlAfterRedirects, "', state: ").concat(this.state, ", shouldActivate: ").concat(this.shouldActivate, ")");
    }
  }]);

  return GuardsCheckEnd;
}(RouterEvent);
/**
 * An event triggered at the the start of the Resolve phase of routing.
 *
 * Runs in the "resolve" phase whether or not there is anything to resolve.
 * In future, may change to only run when there are things to be resolved.
 *
 * @see `ResolveEnd`
 *
 * @publicApi
 */


var ResolveStart = /*#__PURE__*/function (_RouterEvent8) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(ResolveStart, _RouterEvent8);

  var _super8 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(ResolveStart);

  function ResolveStart(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects,
  /** @docsNotRequired */
  state) {
    var _this8;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, ResolveStart);

    _this8 = _super8.call(this, id, url);
    _this8.urlAfterRedirects = urlAfterRedirects;
    _this8.state = state;
    return _this8;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ResolveStart, [{
    key: "toString",
    value: function toString() {
      return "ResolveStart(id: ".concat(this.id, ", url: '").concat(this.url, "', urlAfterRedirects: '").concat(this.urlAfterRedirects, "', state: ").concat(this.state, ")");
    }
  }]);

  return ResolveStart;
}(RouterEvent);
/**
 * An event triggered at the end of the Resolve phase of routing.
 * @see `ResolveStart`.
 *
 * @publicApi
 */


var ResolveEnd = /*#__PURE__*/function (_RouterEvent9) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(ResolveEnd, _RouterEvent9);

  var _super9 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(ResolveEnd);

  function ResolveEnd(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects,
  /** @docsNotRequired */
  state) {
    var _this9;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, ResolveEnd);

    _this9 = _super9.call(this, id, url);
    _this9.urlAfterRedirects = urlAfterRedirects;
    _this9.state = state;
    return _this9;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ResolveEnd, [{
    key: "toString",
    value: function toString() {
      return "ResolveEnd(id: ".concat(this.id, ", url: '").concat(this.url, "', urlAfterRedirects: '").concat(this.urlAfterRedirects, "', state: ").concat(this.state, ")");
    }
  }]);

  return ResolveEnd;
}(RouterEvent);
/**
 * An event triggered before lazy loading a route configuration.
 *
 * @see `RouteConfigLoadEnd`
 *
 * @publicApi
 */


var RouteConfigLoadStart = /*#__PURE__*/function () {
  function RouteConfigLoadStart(
  /** @docsNotRequired */
  route) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, RouteConfigLoadStart);

    this.route = route;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RouteConfigLoadStart, [{
    key: "toString",
    value: function toString() {
      return "RouteConfigLoadStart(path: ".concat(this.route.path, ")");
    }
  }]);

  return RouteConfigLoadStart;
}();
/**
 * An event triggered when a route has been lazy loaded.
 *
 * @see `RouteConfigLoadStart`
 *
 * @publicApi
 */


var RouteConfigLoadEnd = /*#__PURE__*/function () {
  function RouteConfigLoadEnd(
  /** @docsNotRequired */
  route) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, RouteConfigLoadEnd);

    this.route = route;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RouteConfigLoadEnd, [{
    key: "toString",
    value: function toString() {
      return "RouteConfigLoadEnd(path: ".concat(this.route.path, ")");
    }
  }]);

  return RouteConfigLoadEnd;
}();
/**
 * An event triggered at the start of the child-activation
 * part of the Resolve phase of routing.
 * @see  `ChildActivationEnd`
 * @see `ResolveStart`
 *
 * @publicApi
 */


var ChildActivationStart = /*#__PURE__*/function () {
  function ChildActivationStart(
  /** @docsNotRequired */
  snapshot) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, ChildActivationStart);

    this.snapshot = snapshot;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ChildActivationStart, [{
    key: "toString",
    value: function toString() {
      var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';
      return "ChildActivationStart(path: '".concat(path, "')");
    }
  }]);

  return ChildActivationStart;
}();
/**
 * An event triggered at the end of the child-activation part
 * of the Resolve phase of routing.
 * @see `ChildActivationStart`
 * @see `ResolveStart`
 * @publicApi
 */


var ChildActivationEnd = /*#__PURE__*/function () {
  function ChildActivationEnd(
  /** @docsNotRequired */
  snapshot) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, ChildActivationEnd);

    this.snapshot = snapshot;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ChildActivationEnd, [{
    key: "toString",
    value: function toString() {
      var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';
      return "ChildActivationEnd(path: '".concat(path, "')");
    }
  }]);

  return ChildActivationEnd;
}();
/**
 * An event triggered at the start of the activation part
 * of the Resolve phase of routing.
 * @see `ActivationEnd`
 * @see `ResolveStart`
 *
 * @publicApi
 */


var ActivationStart = /*#__PURE__*/function () {
  function ActivationStart(
  /** @docsNotRequired */
  snapshot) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, ActivationStart);

    this.snapshot = snapshot;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ActivationStart, [{
    key: "toString",
    value: function toString() {
      var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';
      return "ActivationStart(path: '".concat(path, "')");
    }
  }]);

  return ActivationStart;
}();
/**
 * An event triggered at the end of the activation part
 * of the Resolve phase of routing.
 * @see `ActivationStart`
 * @see `ResolveStart`
 *
 * @publicApi
 */


var ActivationEnd = /*#__PURE__*/function () {
  function ActivationEnd(
  /** @docsNotRequired */
  snapshot) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, ActivationEnd);

    this.snapshot = snapshot;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ActivationEnd, [{
    key: "toString",
    value: function toString() {
      var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';
      return "ActivationEnd(path: '".concat(path, "')");
    }
  }]);

  return ActivationEnd;
}();
/**
 * An event triggered by scrolling.
 *
 * @publicApi
 */


var Scroll = /*#__PURE__*/function () {
  function Scroll(
  /** @docsNotRequired */
  routerEvent,
  /** @docsNotRequired */
  position,
  /** @docsNotRequired */
  anchor) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, Scroll);

    this.routerEvent = routerEvent;
    this.position = position;
    this.anchor = anchor;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(Scroll, [{
    key: "toString",
    value: function toString() {
      var pos = this.position ? "".concat(this.position[0], ", ").concat(this.position[1]) : null;
      return "Scroll(anchor: '".concat(this.anchor, "', position: '").concat(pos, "')");
    }
  }]);

  return Scroll;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The primary routing outlet.
 *
 * @publicApi
 */


var PRIMARY_OUTLET = 'primary';

var ParamsAsMap = /*#__PURE__*/function () {
  function ParamsAsMap(params) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, ParamsAsMap);

    this.params = params || {};
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ParamsAsMap, [{
    key: "has",
    value: function has(name) {
      return Object.prototype.hasOwnProperty.call(this.params, name);
    }
  }, {
    key: "get",
    value: function get(name) {
      if (this.has(name)) {
        var v = this.params[name];
        return Array.isArray(v) ? v[0] : v;
      }

      return null;
    }
  }, {
    key: "getAll",
    value: function getAll(name) {
      if (this.has(name)) {
        var v = this.params[name];
        return Array.isArray(v) ? v : [v];
      }

      return [];
    }
  }, {
    key: "keys",
    get: function get() {
      return Object.keys(this.params);
    }
  }]);

  return ParamsAsMap;
}();
/**
 * Converts a `Params` instance to a `ParamMap`.
 * @param params The instance to convert.
 * @returns The new map instance.
 *
 * @publicApi
 */


function convertToParamMap(params) {
  return new ParamsAsMap(params);
}

var NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';

function navigationCancelingError(message) {
  var error = Error('NavigationCancelingError: ' + message);
  error[NAVIGATION_CANCELING_ERROR] = true;
  return error;
}

function isNavigationCancelingError(error) {
  return error && error[NAVIGATION_CANCELING_ERROR];
} // Matches the route configuration (`route`) against the actual URL (`segments`).


function defaultUrlMatcher(segments, segmentGroup, route) {
  var parts = route.path.split('/');

  if (parts.length > segments.length) {
    // The actual URL is shorter than the config, no match
    return null;
  }

  if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || parts.length < segments.length)) {
    // The config is longer than the actual URL but we are looking for a full match, return null
    return null;
  }

  var posParams = {}; // Check each config part against the actual URL

  for (var index = 0; index < parts.length; index++) {
    var part = parts[index];
    var segment = segments[index];
    var isParameter = part.startsWith(':');

    if (isParameter) {
      posParams[part.substring(1)] = segment;
    } else if (part !== segment.path) {
      // The actual URL part does not match the config, no match
      return null;
    }
  }

  return {
    consumed: segments.slice(0, parts.length),
    posParams: posParams
  };
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function shallowEqualArrays(a, b) {
  if (a.length !== b.length) return false;

  for (var i = 0; i < a.length; ++i) {
    if (!shallowEqual(a[i], b[i])) return false;
  }

  return true;
}

function shallowEqual(a, b) {
  // Casting Object.keys return values to include `undefined` as there are some cases
  // in IE 11 where this can happen. Cannot provide a test because the behavior only
  // exists in certain circumstances in IE 11, therefore doing this cast ensures the
  // logic is correct for when this edge case is hit.
  var k1 = Object.keys(a);
  var k2 = Object.keys(b);

  if (!k1 || !k2 || k1.length != k2.length) {
    return false;
  }

  var key;

  for (var i = 0; i < k1.length; i++) {
    key = k1[i];

    if (!equalArraysOrString(a[key], b[key])) {
      return false;
    }
  }

  return true;
}
/**
 * Test equality for arrays of strings or a string.
 */


function equalArraysOrString(a, b) {
  if (Array.isArray(a) && Array.isArray(b)) {
    if (a.length !== b.length) return false;

    var aSorted = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__["default"])(a).sort();

    var bSorted = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__["default"])(b).sort();

    return aSorted.every(function (val, index) {
      return bSorted[index] === val;
    });
  } else {
    return a === b;
  }
}
/**
 * Flattens single-level nested arrays.
 */


function flatten(arr) {
  return Array.prototype.concat.apply([], arr);
}
/**
 * Return the last element of an array.
 */


function last(a) {
  return a.length > 0 ? a[a.length - 1] : null;
}
/**
 * Verifys all booleans in an array are `true`.
 */


function and(bools) {
  return !bools.some(function (v) {
    return !v;
  });
}

function forEach(map, callback) {
  for (var prop in map) {
    if (map.hasOwnProperty(prop)) {
      callback(map[prop], prop);
    }
  }
}

function waitForMap(obj, fn) {
  if (Object.keys(obj).length === 0) {
    return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])({});
  }

  var waitHead = [];
  var waitTail = [];
  var res = {};
  forEach(obj, function (a, k) {
    var mapped = fn(k, a).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (r) {
      return res[k] = r;
    }));

    if (k === PRIMARY_OUTLET) {
      waitHead.push(mapped);
    } else {
      waitTail.push(mapped);
    }
  }); // Closure compiler has problem with using spread operator here. So we use "Array.concat".
  // Note that we also need to cast the new promise because TypeScript cannot infer the type
  // when calling the "of" function through "Function.apply"

  return rxjs__WEBPACK_IMPORTED_MODULE_11__["of"].apply(null, waitHead.concat(waitTail)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["concatAll"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["last"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function () {
    return res;
  }));
}

function wrapIntoObservable(value) {
  if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵisObservable"])(value)) {
    return value;
  }

  if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵisPromise"])(value)) {
    // Use `Promise.resolve()` to wrap promise-like instances.
    // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the
    // change detection.
    return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["from"])(Promise.resolve(value));
  }

  return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(value);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function createEmptyUrlTree() {
  return new UrlTree(new UrlSegmentGroup([], {}), {}, null);
}

function containsTree(container, containee, exact) {
  if (exact) {
    return equalQueryParams(container.queryParams, containee.queryParams) && equalSegmentGroups(container.root, containee.root);
  }

  return containsQueryParams(container.queryParams, containee.queryParams) && containsSegmentGroup(container.root, containee.root);
}

function equalQueryParams(container, containee) {
  // TODO: This does not handle array params correctly.
  return shallowEqual(container, containee);
}

function equalSegmentGroups(container, containee) {
  if (!equalPath(container.segments, containee.segments)) return false;
  if (container.numberOfChildren !== containee.numberOfChildren) return false;

  for (var c in containee.children) {
    if (!container.children[c]) return false;
    if (!equalSegmentGroups(container.children[c], containee.children[c])) return false;
  }

  return true;
}

function containsQueryParams(container, containee) {
  return Object.keys(containee).length <= Object.keys(container).length && Object.keys(containee).every(function (key) {
    return equalArraysOrString(container[key], containee[key]);
  });
}

function containsSegmentGroup(container, containee) {
  return containsSegmentGroupHelper(container, containee, containee.segments);
}

function containsSegmentGroupHelper(container, containee, containeePaths) {
  if (container.segments.length > containeePaths.length) {
    var current = container.segments.slice(0, containeePaths.length);
    if (!equalPath(current, containeePaths)) return false;
    if (containee.hasChildren()) return false;
    return true;
  } else if (container.segments.length === containeePaths.length) {
    if (!equalPath(container.segments, containeePaths)) return false;

    for (var c in containee.children) {
      if (!container.children[c]) return false;
      if (!containsSegmentGroup(container.children[c], containee.children[c])) return false;
    }

    return true;
  } else {
    var _current = containeePaths.slice(0, container.segments.length);

    var next = containeePaths.slice(container.segments.length);
    if (!equalPath(container.segments, _current)) return false;
    if (!container.children[PRIMARY_OUTLET]) return false;
    return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);
  }
}
/**
 * @description
 *
 * Represents the parsed URL.
 *
 * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a
 * serialized tree.
 * UrlTree is a data structure that provides a lot of affordances in dealing with URLs
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * @Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const tree: UrlTree =
 *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');
 *     const f = tree.fragment; // return 'fragment'
 *     const q = tree.queryParams; // returns {debug: 'true'}
 *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];
 *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'
 *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'
 *     g.children['support'].segments; // return 1 segment 'help'
 *   }
 * }
 * ```
 *
 * @publicApi
 */


var UrlTree = /*#__PURE__*/function () {
  /** @internal */
  function UrlTree(
  /** The root segment group of the URL tree */
  root,
  /** The query params of the URL */
  queryParams,
  /** The fragment of the URL */
  fragment) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, UrlTree);

    this.root = root;
    this.queryParams = queryParams;
    this.fragment = fragment;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(UrlTree, [{
    key: "toString",

    /** @docsNotRequired */
    value: function toString() {
      return DEFAULT_SERIALIZER.serialize(this);
    }
  }, {
    key: "queryParamMap",
    get: function get() {
      if (!this._queryParamMap) {
        this._queryParamMap = convertToParamMap(this.queryParams);
      }

      return this._queryParamMap;
    }
  }]);

  return UrlTree;
}();
/**
 * @description
 *
 * Represents the parsed URL segment group.
 *
 * See `UrlTree` for more information.
 *
 * @publicApi
 */


var UrlSegmentGroup = /*#__PURE__*/function () {
  function UrlSegmentGroup(
  /** The URL segments of this group. See `UrlSegment` for more information */
  segments,
  /** The list of children of this group */
  children) {
    var _this10 = this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, UrlSegmentGroup);

    this.segments = segments;
    this.children = children;
    /** The parent node in the url tree */

    this.parent = null;
    forEach(children, function (v, k) {
      return v.parent = _this10;
    });
  }
  /** Whether the segment has child segments */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(UrlSegmentGroup, [{
    key: "hasChildren",
    value: function hasChildren() {
      return this.numberOfChildren > 0;
    }
    /** Number of child segments */

  }, {
    key: "toString",

    /** @docsNotRequired */
    value: function toString() {
      return serializePaths(this);
    }
  }, {
    key: "numberOfChildren",
    get: function get() {
      return Object.keys(this.children).length;
    }
  }]);

  return UrlSegmentGroup;
}();
/**
 * @description
 *
 * Represents a single URL segment.
 *
 * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix
 * parameters associated with the segment.
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * @Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const tree: UrlTree = router.parseUrl('/team;id=33');
 *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];
 *     const s: UrlSegment[] = g.segments;
 *     s[0].path; // returns 'team'
 *     s[0].parameters; // returns {id: 33}
 *   }
 * }
 * ```
 *
 * @publicApi
 */


var UrlSegment = /*#__PURE__*/function () {
  function UrlSegment(
  /** The path part of a URL segment */
  path,
  /** The matrix parameters associated with a segment */
  parameters) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, UrlSegment);

    this.path = path;
    this.parameters = parameters;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(UrlSegment, [{
    key: "toString",

    /** @docsNotRequired */
    value: function toString() {
      return serializePath(this);
    }
  }, {
    key: "parameterMap",
    get: function get() {
      if (!this._parameterMap) {
        this._parameterMap = convertToParamMap(this.parameters);
      }

      return this._parameterMap;
    }
  }]);

  return UrlSegment;
}();

function equalSegments(as, bs) {
  return equalPath(as, bs) && as.every(function (a, i) {
    return shallowEqual(a.parameters, bs[i].parameters);
  });
}

function equalPath(as, bs) {
  if (as.length !== bs.length) return false;
  return as.every(function (a, i) {
    return a.path === bs[i].path;
  });
}

function mapChildrenIntoArray(segment, fn) {
  var res = [];
  forEach(segment.children, function (child, childOutlet) {
    if (childOutlet === PRIMARY_OUTLET) {
      res = res.concat(fn(child, childOutlet));
    }
  });
  forEach(segment.children, function (child, childOutlet) {
    if (childOutlet !== PRIMARY_OUTLET) {
      res = res.concat(fn(child, childOutlet));
    }
  });
  return res;
}
/**
 * @description
 *
 * Serializes and deserializes a URL string into a URL tree.
 *
 * The url serialization strategy is customizable. You can
 * make all URLs case insensitive by providing a custom UrlSerializer.
 *
 * See `DefaultUrlSerializer` for an example of a URL serializer.
 *
 * @publicApi
 */


var UrlSerializer = function UrlSerializer() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, UrlSerializer);
};
/**
 * @description
 *
 * A default implementation of the `UrlSerializer`.
 *
 * Example URLs:
 *
 * ```
 * /inbox/33(popup:compose)
 * /inbox/33;open=true/messages/44
 * ```
 *
 * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the
 * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to
 * specify route specific parameters.
 *
 * @publicApi
 */


var DefaultUrlSerializer = /*#__PURE__*/function () {
  function DefaultUrlSerializer() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, DefaultUrlSerializer);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(DefaultUrlSerializer, [{
    key: "parse",

    /** Parses a url into a `UrlTree` */
    value: function parse(url) {
      var p = new UrlParser(url);
      return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());
    }
    /** Converts a `UrlTree` into a url */

  }, {
    key: "serialize",
    value: function serialize(tree) {
      var segment = "/".concat(serializeSegment(tree.root, true));
      var query = serializeQueryParams(tree.queryParams);
      var fragment = typeof tree.fragment === "string" ? "#".concat(encodeUriFragment(tree.fragment)) : '';
      return "".concat(segment).concat(query).concat(fragment);
    }
  }]);

  return DefaultUrlSerializer;
}();

var DEFAULT_SERIALIZER = /*@__PURE__*/new DefaultUrlSerializer();

function serializePaths(segment) {
  return segment.segments.map(function (p) {
    return serializePath(p);
  }).join('/');
}

function serializeSegment(segment, root) {
  if (!segment.hasChildren()) {
    return serializePaths(segment);
  }

  if (root) {
    var primary = segment.children[PRIMARY_OUTLET] ? serializeSegment(segment.children[PRIMARY_OUTLET], false) : '';
    var children = [];
    forEach(segment.children, function (v, k) {
      if (k !== PRIMARY_OUTLET) {
        children.push("".concat(k, ":").concat(serializeSegment(v, false)));
      }
    });
    return children.length > 0 ? "".concat(primary, "(").concat(children.join('//'), ")") : primary;
  } else {
    var _children = mapChildrenIntoArray(segment, function (v, k) {
      if (k === PRIMARY_OUTLET) {
        return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];
      }

      return ["".concat(k, ":").concat(serializeSegment(v, false))];
    }); // use no parenthesis if the only child is a primary outlet route


    if (Object.keys(segment.children).length === 1 && segment.children[PRIMARY_OUTLET] != null) {
      return "".concat(serializePaths(segment), "/").concat(_children[0]);
    }

    return "".concat(serializePaths(segment), "/(").concat(_children.join('//'), ")");
  }
}
/**
 * Encodes a URI string with the default encoding. This function will only ever be called from
 * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need
 * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't
 * have to be encoded per https://url.spec.whatwg.org.
 */


function encodeUriString(s) {
  return encodeURIComponent(s).replace(/%40/g, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',');
}
/**
 * This function should be used to encode both keys and values in a query string key/value. In
 * the following URL, you need to call encodeUriQuery on "k" and "v":
 *
 * http://www.site.org/html;mk=mv?k=v#f
 */


function encodeUriQuery(s) {
  return encodeUriString(s).replace(/%3B/gi, ';');
}
/**
 * This function should be used to encode a URL fragment. In the following URL, you need to call
 * encodeUriFragment on "f":
 *
 * http://www.site.org/html;mk=mv?k=v#f
 */


function encodeUriFragment(s) {
  return encodeURI(s);
}
/**
 * This function should be run on any URI segment as well as the key and value in a key/value
 * pair for matrix params. In the following URL, you need to call encodeUriSegment on "html",
 * "mk", and "mv":
 *
 * http://www.site.org/html;mk=mv?k=v#f
 */


function encodeUriSegment(s) {
  return encodeUriString(s).replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/%26/gi, '&');
}

function decode(s) {
  return decodeURIComponent(s);
} // Query keys/values should have the "+" replaced first, as "+" in a query string is " ".
// decodeURIComponent function will not decode "+" as a space.


function decodeQuery(s) {
  return decode(s.replace(/\+/g, '%20'));
}

function serializePath(path) {
  return "".concat(encodeUriSegment(path.path)).concat(serializeMatrixParams(path.parameters));
}

function serializeMatrixParams(params) {
  return Object.keys(params).map(function (key) {
    return ";".concat(encodeUriSegment(key), "=").concat(encodeUriSegment(params[key]));
  }).join('');
}

function serializeQueryParams(params) {
  var strParams = Object.keys(params).map(function (name) {
    var value = params[name];
    return Array.isArray(value) ? value.map(function (v) {
      return "".concat(encodeUriQuery(name), "=").concat(encodeUriQuery(v));
    }).join('&') : "".concat(encodeUriQuery(name), "=").concat(encodeUriQuery(value));
  });
  return strParams.length ? "?".concat(strParams.join('&')) : '';
}

var SEGMENT_RE = /^[^\/()?;=#]+/;

function matchSegments(str) {
  var match = str.match(SEGMENT_RE);
  return match ? match[0] : '';
}

var QUERY_PARAM_RE = /^[^=?&#]+/; // Return the name of the query param at the start of the string or an empty string

function matchQueryParams(str) {
  var match = str.match(QUERY_PARAM_RE);
  return match ? match[0] : '';
}

var QUERY_PARAM_VALUE_RE = /^[^?&#]+/; // Return the value of the query param at the start of the string or an empty string

function matchUrlQueryParamValue(str) {
  var match = str.match(QUERY_PARAM_VALUE_RE);
  return match ? match[0] : '';
}

var UrlParser = /*#__PURE__*/function () {
  function UrlParser(url) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, UrlParser);

    this.url = url;
    this.remaining = url;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(UrlParser, [{
    key: "parseRootSegment",
    value: function parseRootSegment() {
      this.consumeOptional('/');

      if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {
        return new UrlSegmentGroup([], {});
      } // The root segment group never has segments


      return new UrlSegmentGroup([], this.parseChildren());
    }
  }, {
    key: "parseQueryParams",
    value: function parseQueryParams() {
      var params = {};

      if (this.consumeOptional('?')) {
        do {
          this.parseQueryParam(params);
        } while (this.consumeOptional('&'));
      }

      return params;
    }
  }, {
    key: "parseFragment",
    value: function parseFragment() {
      return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;
    }
  }, {
    key: "parseChildren",
    value: function parseChildren() {
      if (this.remaining === '') {
        return {};
      }

      this.consumeOptional('/');
      var segments = [];

      if (!this.peekStartsWith('(')) {
        segments.push(this.parseSegment());
      }

      while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {
        this.capture('/');
        segments.push(this.parseSegment());
      }

      var children = {};

      if (this.peekStartsWith('/(')) {
        this.capture('/');
        children = this.parseParens(true);
      }

      var res = {};

      if (this.peekStartsWith('(')) {
        res = this.parseParens(false);
      }

      if (segments.length > 0 || Object.keys(children).length > 0) {
        res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);
      }

      return res;
    } // parse a segment with its matrix parameters
    // ie `name;k1=v1;k2`

  }, {
    key: "parseSegment",
    value: function parseSegment() {
      var path = matchSegments(this.remaining);

      if (path === '' && this.peekStartsWith(';')) {
        throw new Error("Empty path url segment cannot have parameters: '".concat(this.remaining, "'."));
      }

      this.capture(path);
      return new UrlSegment(decode(path), this.parseMatrixParams());
    }
  }, {
    key: "parseMatrixParams",
    value: function parseMatrixParams() {
      var params = {};

      while (this.consumeOptional(';')) {
        this.parseParam(params);
      }

      return params;
    }
  }, {
    key: "parseParam",
    value: function parseParam(params) {
      var key = matchSegments(this.remaining);

      if (!key) {
        return;
      }

      this.capture(key);
      var value = '';

      if (this.consumeOptional('=')) {
        var valueMatch = matchSegments(this.remaining);

        if (valueMatch) {
          value = valueMatch;
          this.capture(value);
        }
      }

      params[decode(key)] = decode(value);
    } // Parse a single query parameter `name[=value]`

  }, {
    key: "parseQueryParam",
    value: function parseQueryParam(params) {
      var key = matchQueryParams(this.remaining);

      if (!key) {
        return;
      }

      this.capture(key);
      var value = '';

      if (this.consumeOptional('=')) {
        var valueMatch = matchUrlQueryParamValue(this.remaining);

        if (valueMatch) {
          value = valueMatch;
          this.capture(value);
        }
      }

      var decodedKey = decodeQuery(key);
      var decodedVal = decodeQuery(value);

      if (params.hasOwnProperty(decodedKey)) {
        // Append to existing values
        var currentVal = params[decodedKey];

        if (!Array.isArray(currentVal)) {
          currentVal = [currentVal];
          params[decodedKey] = currentVal;
        }

        currentVal.push(decodedVal);
      } else {
        // Create a new value
        params[decodedKey] = decodedVal;
      }
    } // parse `(a/b//outlet_name:c/d)`

  }, {
    key: "parseParens",
    value: function parseParens(allowPrimary) {
      var segments = {};
      this.capture('(');

      while (!this.consumeOptional(')') && this.remaining.length > 0) {
        var path = matchSegments(this.remaining);
        var next = this.remaining[path.length]; // if is is not one of these characters, then the segment was unescaped
        // or the group was not closed

        if (next !== '/' && next !== ')' && next !== ';') {
          throw new Error("Cannot parse url '".concat(this.url, "'"));
        }

        var outletName = undefined;

        if (path.indexOf(':') > -1) {
          outletName = path.substr(0, path.indexOf(':'));
          this.capture(outletName);
          this.capture(':');
        } else if (allowPrimary) {
          outletName = PRIMARY_OUTLET;
        }

        var children = this.parseChildren();
        segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] : new UrlSegmentGroup([], children);
        this.consumeOptional('//');
      }

      return segments;
    }
  }, {
    key: "peekStartsWith",
    value: function peekStartsWith(str) {
      return this.remaining.startsWith(str);
    } // Consumes the prefix when it is present and returns whether it has been consumed

  }, {
    key: "consumeOptional",
    value: function consumeOptional(str) {
      if (this.peekStartsWith(str)) {
        this.remaining = this.remaining.substring(str.length);
        return true;
      }

      return false;
    }
  }, {
    key: "capture",
    value: function capture(str) {
      if (!this.consumeOptional(str)) {
        throw new Error("Expected \"".concat(str, "\"."));
      }
    }
  }]);

  return UrlParser;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var Tree = /*#__PURE__*/function () {
  function Tree(root) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, Tree);

    this._root = root;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(Tree, [{
    key: "parent",

    /**
     * @internal
     */
    value: function parent(t) {
      var p = this.pathFromRoot(t);
      return p.length > 1 ? p[p.length - 2] : null;
    }
    /**
     * @internal
     */

  }, {
    key: "children",
    value: function children(t) {
      var n = findNode(t, this._root);
      return n ? n.children.map(function (t) {
        return t.value;
      }) : [];
    }
    /**
     * @internal
     */

  }, {
    key: "firstChild",
    value: function firstChild(t) {
      var n = findNode(t, this._root);
      return n && n.children.length > 0 ? n.children[0].value : null;
    }
    /**
     * @internal
     */

  }, {
    key: "siblings",
    value: function siblings(t) {
      var p = findPath(t, this._root);
      if (p.length < 2) return [];
      var c = p[p.length - 2].children.map(function (c) {
        return c.value;
      });
      return c.filter(function (cc) {
        return cc !== t;
      });
    }
    /**
     * @internal
     */

  }, {
    key: "pathFromRoot",
    value: function pathFromRoot(t) {
      return findPath(t, this._root).map(function (s) {
        return s.value;
      });
    }
  }, {
    key: "root",
    get: function get() {
      return this._root.value;
    }
  }]);

  return Tree;
}(); // DFS for the node matching the value


function findNode(value, node) {
  if (value === node.value) return node;

  var _iterator = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(node.children),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var child = _step.value;

      var _node = findNode(value, child);

      if (_node) return _node;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return null;
} // Return the path to the node with the given value using DFS


function findPath(value, node) {
  if (value === node.value) return [node];

  var _iterator2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(node.children),
      _step2;

  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var child = _step2.value;
      var path = findPath(value, child);

      if (path.length) {
        path.unshift(node);
        return path;
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }

  return [];
}

var TreeNode = /*#__PURE__*/function () {
  function TreeNode(value, children) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, TreeNode);

    this.value = value;
    this.children = children;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(TreeNode, [{
    key: "toString",
    value: function toString() {
      return "TreeNode(".concat(this.value, ")");
    }
  }]);

  return TreeNode;
}(); // Return the list of T indexed by outlet name


function nodeChildrenAsMap(node) {
  var map = {};

  if (node) {
    node.children.forEach(function (child) {
      return map[child.value.outlet] = child;
    });
  }

  return map;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Represents the state of the router as a tree of activated routes.
 *
 * @usageNotes
 *
 * Every node in the route tree is an `ActivatedRoute` instance
 * that knows about the "consumed" URL segments, the extracted parameters,
 * and the resolved data.
 * Use the `ActivatedRoute` properties to traverse the tree from any node.
 *
 * The following fragment shows how a component gets the root node
 * of the current state to establish its own route tree:
 *
 * ```
 * @Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const state: RouterState = router.routerState;
 *     const root: ActivatedRoute = state.root;
 *     const child = root.firstChild;
 *     const id: Observable<string> = child.params.map(p => p.id);
 *     //...
 *   }
 * }
 * ```
 *
 * @see `ActivatedRoute`
 * @see [Getting route information](guide/router#getting-route-information)
 *
 * @publicApi
 */


var RouterState = /*#__PURE__*/function (_Tree) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(RouterState, _Tree);

  var _super10 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(RouterState);

  /** @internal */
  function RouterState(root,
  /** The current snapshot of the router state */
  snapshot) {
    var _this11;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, RouterState);

    _this11 = _super10.call(this, root);
    _this11.snapshot = snapshot;
    setRouterState(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this11), root);
    return _this11;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RouterState, [{
    key: "toString",
    value: function toString() {
      return this.snapshot.toString();
    }
  }]);

  return RouterState;
}(Tree);

function createEmptyState(urlTree, rootComponent) {
  var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);
  var emptyUrl = new rxjs__WEBPACK_IMPORTED_MODULE_11__["BehaviorSubject"]([new UrlSegment('', {})]);
  var emptyParams = new rxjs__WEBPACK_IMPORTED_MODULE_11__["BehaviorSubject"]({});
  var emptyData = new rxjs__WEBPACK_IMPORTED_MODULE_11__["BehaviorSubject"]({});
  var emptyQueryParams = new rxjs__WEBPACK_IMPORTED_MODULE_11__["BehaviorSubject"]({});
  var fragment = new rxjs__WEBPACK_IMPORTED_MODULE_11__["BehaviorSubject"]('');
  var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);
  activated.snapshot = snapshot.root;
  return new RouterState(new TreeNode(activated, []), snapshot);
}

function createEmptyStateSnapshot(urlTree, rootComponent) {
  var emptyParams = {};
  var emptyData = {};
  var emptyQueryParams = {};
  var fragment = '';
  var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});
  return new RouterStateSnapshot('', new TreeNode(activated, []));
}
/**
 * Provides access to information about a route associated with a component
 * that is loaded in an outlet.
 * Use to traverse the `RouterState` tree and extract information from nodes.
 *
 * The following example shows how to construct a component using information from a
 * currently activated route.
 *
 * {@example router/activated-route/module.ts region="activated-route"
 *     header="activated-route.component.ts"}
 *
 * @see [Getting route information](guide/router#getting-route-information)
 *
 * @publicApi
 */


var ActivatedRoute = /*#__PURE__*/function () {
  /** @internal */
  function ActivatedRoute(
  /** An observable of the URL segments matched by this route. */
  url,
  /** An observable of the matrix parameters scoped to this route. */
  params,
  /** An observable of the query parameters shared by all the routes. */
  queryParams,
  /** An observable of the URL fragment shared by all the routes. */
  fragment,
  /** An observable of the static and resolved data of this route. */
  data,
  /** The outlet name of the route, a constant. */
  outlet,
  /** The component of the route, a constant. */
  // TODO(vsavkin): remove |string
  component, futureSnapshot) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, ActivatedRoute);

    this.url = url;
    this.params = params;
    this.queryParams = queryParams;
    this.fragment = fragment;
    this.data = data;
    this.outlet = outlet;
    this.component = component;
    this._futureSnapshot = futureSnapshot;
  }
  /** The configuration used to match this route. */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ActivatedRoute, [{
    key: "toString",
    value: function toString() {
      return this.snapshot ? this.snapshot.toString() : "Future(".concat(this._futureSnapshot, ")");
    }
  }, {
    key: "routeConfig",
    get: function get() {
      return this._futureSnapshot.routeConfig;
    }
    /** The root of the router state. */

  }, {
    key: "root",
    get: function get() {
      return this._routerState.root;
    }
    /** The parent of this route in the router state tree. */

  }, {
    key: "parent",
    get: function get() {
      return this._routerState.parent(this);
    }
    /** The first child of this route in the router state tree. */

  }, {
    key: "firstChild",
    get: function get() {
      return this._routerState.firstChild(this);
    }
    /** The children of this route in the router state tree. */

  }, {
    key: "children",
    get: function get() {
      return this._routerState.children(this);
    }
    /** The path from the root of the router state tree to this route. */

  }, {
    key: "pathFromRoot",
    get: function get() {
      return this._routerState.pathFromRoot(this);
    }
    /**
     * An Observable that contains a map of the required and optional parameters
     * specific to the route.
     * The map supports retrieving single and multiple values from the same parameter.
     */

  }, {
    key: "paramMap",
    get: function get() {
      if (!this._paramMap) {
        this._paramMap = this.params.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (p) {
          return convertToParamMap(p);
        }));
      }

      return this._paramMap;
    }
    /**
     * An Observable that contains a map of the query parameters available to all routes.
     * The map supports retrieving single and multiple values from the query parameter.
     */

  }, {
    key: "queryParamMap",
    get: function get() {
      if (!this._queryParamMap) {
        this._queryParamMap = this.queryParams.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (p) {
          return convertToParamMap(p);
        }));
      }

      return this._queryParamMap;
    }
  }]);

  return ActivatedRoute;
}();
/**
 * Returns the inherited params, data, and resolve for a given route.
 * By default, this only inherits values up to the nearest path-less or component-less route.
 * @internal
 */


function inheritedParamsDataResolve(route) {
  var paramsInheritanceStrategy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'emptyOnly';
  var pathFromRoot = route.pathFromRoot;
  var inheritingStartingFrom = 0;

  if (paramsInheritanceStrategy !== 'always') {
    inheritingStartingFrom = pathFromRoot.length - 1;

    while (inheritingStartingFrom >= 1) {
      var current = pathFromRoot[inheritingStartingFrom];
      var parent = pathFromRoot[inheritingStartingFrom - 1]; // current route is an empty path => inherits its parent's params and data

      if (current.routeConfig && current.routeConfig.path === '') {
        inheritingStartingFrom--; // parent is componentless => current route should inherit its params and data
      } else if (!parent.component) {
        inheritingStartingFrom--;
      } else {
        break;
      }
    }
  }

  return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));
}
/** @internal */


function flattenInherited(pathFromRoot) {
  return pathFromRoot.reduce(function (res, curr) {
    var params = Object.assign(Object.assign({}, res.params), curr.params);
    var data = Object.assign(Object.assign({}, res.data), curr.data);
    var resolve = Object.assign(Object.assign({}, res.resolve), curr._resolvedData);
    return {
      params: params,
      data: data,
      resolve: resolve
    };
  }, {
    params: {},
    data: {},
    resolve: {}
  });
}
/**
 * @description
 *
 * Contains the information about a route associated with a component loaded in an
 * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to
 * traverse the router state tree.
 *
 * The following example initializes a component with route information extracted
 * from the snapshot of the root node at the time of creation.
 *
 * ```
 * @Component({templateUrl:'./my-component.html'})
 * class MyComponent {
 *   constructor(route: ActivatedRoute) {
 *     const id: string = route.snapshot.params.id;
 *     const url: string = route.snapshot.url.join('');
 *     const user = route.snapshot.data.user;
 *   }
 * }
 * ```
 *
 * @publicApi
 */


var ActivatedRouteSnapshot = /*#__PURE__*/function () {
  /** @internal */
  function ActivatedRouteSnapshot(
  /** The URL segments matched by this route */
  url,
  /** The matrix parameters scoped to this route */
  params,
  /** The query parameters shared by all the routes */
  queryParams,
  /** The URL fragment shared by all the routes */
  fragment,
  /** The static and resolved data of this route */
  data,
  /** The outlet name of the route */
  outlet,
  /** The component of the route */
  component, routeConfig, urlSegment, lastPathIndex, resolve) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, ActivatedRouteSnapshot);

    this.url = url;
    this.params = params;
    this.queryParams = queryParams;
    this.fragment = fragment;
    this.data = data;
    this.outlet = outlet;
    this.component = component;
    this.routeConfig = routeConfig;
    this._urlSegment = urlSegment;
    this._lastPathIndex = lastPathIndex;
    this._resolve = resolve;
  }
  /** The root of the router state */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ActivatedRouteSnapshot, [{
    key: "toString",
    value: function toString() {
      var url = this.url.map(function (segment) {
        return segment.toString();
      }).join('/');
      var matched = this.routeConfig ? this.routeConfig.path : '';
      return "Route(url:'".concat(url, "', path:'").concat(matched, "')");
    }
  }, {
    key: "root",
    get: function get() {
      return this._routerState.root;
    }
    /** The parent of this route in the router state tree */

  }, {
    key: "parent",
    get: function get() {
      return this._routerState.parent(this);
    }
    /** The first child of this route in the router state tree */

  }, {
    key: "firstChild",
    get: function get() {
      return this._routerState.firstChild(this);
    }
    /** The children of this route in the router state tree */

  }, {
    key: "children",
    get: function get() {
      return this._routerState.children(this);
    }
    /** The path from the root of the router state tree to this route */

  }, {
    key: "pathFromRoot",
    get: function get() {
      return this._routerState.pathFromRoot(this);
    }
  }, {
    key: "paramMap",
    get: function get() {
      if (!this._paramMap) {
        this._paramMap = convertToParamMap(this.params);
      }

      return this._paramMap;
    }
  }, {
    key: "queryParamMap",
    get: function get() {
      if (!this._queryParamMap) {
        this._queryParamMap = convertToParamMap(this.queryParams);
      }

      return this._queryParamMap;
    }
  }]);

  return ActivatedRouteSnapshot;
}();
/**
 * @description
 *
 * Represents the state of the router at a moment in time.
 *
 * This is a tree of activated route snapshots. Every node in this tree knows about
 * the "consumed" URL segments, the extracted parameters, and the resolved data.
 *
 * The following example shows how a component is initialized with information
 * from the snapshot of the root node's state at the time of creation.
 *
 * ```
 * @Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const state: RouterState = router.routerState;
 *     const snapshot: RouterStateSnapshot = state.snapshot;
 *     const root: ActivatedRouteSnapshot = snapshot.root;
 *     const child = root.firstChild;
 *     const id: Observable<string> = child.params.map(p => p.id);
 *     //...
 *   }
 * }
 * ```
 *
 * @publicApi
 */


var RouterStateSnapshot = /*#__PURE__*/function (_Tree2) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(RouterStateSnapshot, _Tree2);

  var _super11 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(RouterStateSnapshot);

  /** @internal */
  function RouterStateSnapshot(
  /** The url from which this snapshot was created */
  url, root) {
    var _this12;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, RouterStateSnapshot);

    _this12 = _super11.call(this, root);
    _this12.url = url;
    setRouterState(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this12), root);
    return _this12;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RouterStateSnapshot, [{
    key: "toString",
    value: function toString() {
      return serializeNode(this._root);
    }
  }]);

  return RouterStateSnapshot;
}(Tree);

function setRouterState(state, node) {
  node.value._routerState = state;
  node.children.forEach(function (c) {
    return setRouterState(state, c);
  });
}

function serializeNode(node) {
  var c = node.children.length > 0 ? " { ".concat(node.children.map(serializeNode).join(', '), " } ") : '';
  return "".concat(node.value).concat(c);
}
/**
 * The expectation is that the activate route is created with the right set of parameters.
 * So we push new values into the observables only when they are not the initial values.
 * And we detect that by checking if the snapshot field is set.
 */


function advanceActivatedRoute(route) {
  if (route.snapshot) {
    var currentSnapshot = route.snapshot;
    var nextSnapshot = route._futureSnapshot;
    route.snapshot = nextSnapshot;

    if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {
      route.queryParams.next(nextSnapshot.queryParams);
    }

    if (currentSnapshot.fragment !== nextSnapshot.fragment) {
      route.fragment.next(nextSnapshot.fragment);
    }

    if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {
      route.params.next(nextSnapshot.params);
    }

    if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {
      route.url.next(nextSnapshot.url);
    }

    if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {
      route.data.next(nextSnapshot.data);
    }
  } else {
    route.snapshot = route._futureSnapshot; // this is for resolved data

    route.data.next(route._futureSnapshot.data);
  }
}

function equalParamsAndUrlSegments(a, b) {
  var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);
  var parentsMismatch = !a.parent !== !b.parent;
  return equalUrlParams && !parentsMismatch && (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function createRouterState(routeReuseStrategy, curr, prevState) {
  var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);
  return new RouterState(root, curr);
}

function createNode(routeReuseStrategy, curr, prevState) {
  // reuse an activated route that is currently displayed on the screen
  if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {
    var value = prevState.value;
    value._futureSnapshot = curr.value;
    var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);
    return new TreeNode(value, children); // retrieve an activated route that is used to be displayed, but is not currently displayed
  } else {
    var detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);

    if (detachedRouteHandle) {
      var _tree = detachedRouteHandle.route;
      setFutureSnapshotsOfActivatedRoutes(curr, _tree);
      return _tree;
    } else {
      var _value = createActivatedRoute(curr.value);

      var _children2 = curr.children.map(function (c) {
        return createNode(routeReuseStrategy, c);
      });

      return new TreeNode(_value, _children2);
    }
  }
}

function setFutureSnapshotsOfActivatedRoutes(curr, result) {
  if (curr.value.routeConfig !== result.value.routeConfig) {
    throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');
  }

  if (curr.children.length !== result.children.length) {
    throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');
  }

  result.value._futureSnapshot = curr.value;

  for (var i = 0; i < curr.children.length; ++i) {
    setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);
  }
}

function createOrReuseChildren(routeReuseStrategy, curr, prevState) {
  return curr.children.map(function (child) {
    var _iterator3 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(prevState.children),
        _step3;

    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var p = _step3.value;

        if (routeReuseStrategy.shouldReuseRoute(child.value, p.value.snapshot)) {
          return createNode(routeReuseStrategy, child, p);
        }
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }

    return createNode(routeReuseStrategy, child);
  });
}

function createActivatedRoute(c) {
  return new ActivatedRoute(new rxjs__WEBPACK_IMPORTED_MODULE_11__["BehaviorSubject"](c.url), new rxjs__WEBPACK_IMPORTED_MODULE_11__["BehaviorSubject"](c.params), new rxjs__WEBPACK_IMPORTED_MODULE_11__["BehaviorSubject"](c.queryParams), new rxjs__WEBPACK_IMPORTED_MODULE_11__["BehaviorSubject"](c.fragment), new rxjs__WEBPACK_IMPORTED_MODULE_11__["BehaviorSubject"](c.data), c.outlet, c.component, c);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function _createUrlTree(route, urlTree, commands, queryParams, fragment) {
  if (commands.length === 0) {
    return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);
  }

  var nav = computeNavigation(commands);

  if (nav.toRoot()) {
    return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);
  }

  var startingPosition = findStartingPosition(nav, urlTree, route);
  var segmentGroup = startingPosition.processChildren ? updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) : updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);
  return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);
}

function isMatrixParams(command) {
  return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;
}
/**
 * Determines if a given command has an `outlets` map. When we encounter a command
 * with an outlets k/v map, we need to apply each outlet individually to the existing segment.
 */


function isCommandWithOutlets(command) {
  return typeof command === 'object' && command != null && command.outlets;
}

function tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {
  var qp = {};

  if (queryParams) {
    forEach(queryParams, function (value, name) {
      qp[name] = Array.isArray(value) ? value.map(function (v) {
        return "".concat(v);
      }) : "".concat(value);
    });
  }

  if (urlTree.root === oldSegmentGroup) {
    return new UrlTree(newSegmentGroup, qp, fragment);
  }

  return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);
}

function replaceSegment(current, oldSegment, newSegment) {
  var children = {};
  forEach(current.children, function (c, outletName) {
    if (c === oldSegment) {
      children[outletName] = newSegment;
    } else {
      children[outletName] = replaceSegment(c, oldSegment, newSegment);
    }
  });
  return new UrlSegmentGroup(current.segments, children);
}

var Navigation = /*#__PURE__*/function () {
  function Navigation(isAbsolute, numberOfDoubleDots, commands) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, Navigation);

    this.isAbsolute = isAbsolute;
    this.numberOfDoubleDots = numberOfDoubleDots;
    this.commands = commands;

    if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {
      throw new Error('Root segment cannot have matrix parameters');
    }

    var cmdWithOutlet = commands.find(isCommandWithOutlets);

    if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {
      throw new Error('{outlets:{}} has to be the last command');
    }
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(Navigation, [{
    key: "toRoot",
    value: function toRoot() {
      return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';
    }
  }]);

  return Navigation;
}();
/** Transforms commands to a normalized `Navigation` */


function computeNavigation(commands) {
  if (typeof commands[0] === 'string' && commands.length === 1 && commands[0] === '/') {
    return new Navigation(true, 0, commands);
  }

  var numberOfDoubleDots = 0;
  var isAbsolute = false;
  var res = commands.reduce(function (res, cmd, cmdIdx) {
    if (typeof cmd === 'object' && cmd != null) {
      if (cmd.outlets) {
        var outlets = {};
        forEach(cmd.outlets, function (commands, name) {
          outlets[name] = typeof commands === 'string' ? commands.split('/') : commands;
        });
        return [].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__["default"])(res), [{
          outlets: outlets
        }]);
      }

      if (cmd.segmentPath) {
        return [].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__["default"])(res), [cmd.segmentPath]);
      }
    }

    if (!(typeof cmd === 'string')) {
      return [].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__["default"])(res), [cmd]);
    }

    if (cmdIdx === 0) {
      cmd.split('/').forEach(function (urlPart, partIndex) {
        if (partIndex == 0 && urlPart === '.') {// skip './a'
        } else if (partIndex == 0 && urlPart === '') {
          //  '/a'
          isAbsolute = true;
        } else if (urlPart === '..') {
          //  '../a'
          numberOfDoubleDots++;
        } else if (urlPart != '') {
          res.push(urlPart);
        }
      });
      return res;
    }

    return [].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__["default"])(res), [cmd]);
  }, []);
  return new Navigation(isAbsolute, numberOfDoubleDots, res);
}

var Position = function Position(segmentGroup, processChildren, index) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, Position);

  this.segmentGroup = segmentGroup;
  this.processChildren = processChildren;
  this.index = index;
};

function findStartingPosition(nav, tree, route) {
  if (nav.isAbsolute) {
    return new Position(tree.root, true, 0);
  }

  if (route.snapshot._lastPathIndex === -1) {
    var segmentGroup = route.snapshot._urlSegment; // Pathless ActivatedRoute has _lastPathIndex === -1 but should not process children
    // see issue #26224, #13011, #35687
    // However, if the ActivatedRoute is the root we should process children like above.

    var processChildren = segmentGroup === tree.root;
    return new Position(segmentGroup, processChildren, 0);
  }

  var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;
  var index = route.snapshot._lastPathIndex + modifier;
  return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);
}

function createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {
  var g = group;
  var ci = index;
  var dd = numberOfDoubleDots;

  while (dd > ci) {
    dd -= ci;
    g = g.parent;

    if (!g) {
      throw new Error('Invalid number of \'../\'');
    }

    ci = g.segments.length;
  }

  return new Position(g, false, ci - dd);
}

function getOutlets(commands) {
  if (isCommandWithOutlets(commands[0])) {
    return commands[0].outlets;
  }

  return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__["default"])({}, PRIMARY_OUTLET, commands);
}

function updateSegmentGroup(segmentGroup, startIndex, commands) {
  if (!segmentGroup) {
    segmentGroup = new UrlSegmentGroup([], {});
  }

  if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {
    return updateSegmentGroupChildren(segmentGroup, startIndex, commands);
  }

  var m = prefixedWith(segmentGroup, startIndex, commands);
  var slicedCommands = commands.slice(m.commandIndex);

  if (m.match && m.pathIndex < segmentGroup.segments.length) {
    var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});
    g.children[PRIMARY_OUTLET] = new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);
    return updateSegmentGroupChildren(g, 0, slicedCommands);
  } else if (m.match && slicedCommands.length === 0) {
    return new UrlSegmentGroup(segmentGroup.segments, {});
  } else if (m.match && !segmentGroup.hasChildren()) {
    return createNewSegmentGroup(segmentGroup, startIndex, commands);
  } else if (m.match) {
    return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);
  } else {
    return createNewSegmentGroup(segmentGroup, startIndex, commands);
  }
}

function updateSegmentGroupChildren(segmentGroup, startIndex, commands) {
  if (commands.length === 0) {
    return new UrlSegmentGroup(segmentGroup.segments, {});
  } else {
    var outlets = getOutlets(commands);
    var children = {};
    forEach(outlets, function (commands, outlet) {
      if (commands !== null) {
        children[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);
      }
    });
    forEach(segmentGroup.children, function (child, childOutlet) {
      if (outlets[childOutlet] === undefined) {
        children[childOutlet] = child;
      }
    });
    return new UrlSegmentGroup(segmentGroup.segments, children);
  }
}

function prefixedWith(segmentGroup, startIndex, commands) {
  var currentCommandIndex = 0;
  var currentPathIndex = startIndex;
  var noMatch = {
    match: false,
    pathIndex: 0,
    commandIndex: 0
  };

  while (currentPathIndex < segmentGroup.segments.length) {
    if (currentCommandIndex >= commands.length) return noMatch;
    var path = segmentGroup.segments[currentPathIndex];
    var command = commands[currentCommandIndex]; // Do not try to consume command as part of the prefixing if it has outlets because it can
    // contain outlets other than the one being processed. Consuming the outlets command would
    // result in other outlets being ignored.

    if (isCommandWithOutlets(command)) {
      break;
    }

    var curr = "".concat(command);
    var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;
    if (currentPathIndex > 0 && curr === undefined) break;

    if (curr && next && typeof next === 'object' && next.outlets === undefined) {
      if (!compare(curr, next, path)) return noMatch;
      currentCommandIndex += 2;
    } else {
      if (!compare(curr, {}, path)) return noMatch;
      currentCommandIndex++;
    }

    currentPathIndex++;
  }

  return {
    match: true,
    pathIndex: currentPathIndex,
    commandIndex: currentCommandIndex
  };
}

function createNewSegmentGroup(segmentGroup, startIndex, commands) {
  var paths = segmentGroup.segments.slice(0, startIndex);
  var i = 0;

  while (i < commands.length) {
    var command = commands[i];

    if (isCommandWithOutlets(command)) {
      var children = createNewSegmentChildren(command.outlets);
      return new UrlSegmentGroup(paths, children);
    } // if we start with an object literal, we need to reuse the path part from the segment


    if (i === 0 && isMatrixParams(commands[0])) {
      var p = segmentGroup.segments[startIndex];
      paths.push(new UrlSegment(p.path, commands[0]));
      i++;
      continue;
    }

    var curr = isCommandWithOutlets(command) ? command.outlets[PRIMARY_OUTLET] : "".concat(command);
    var next = i < commands.length - 1 ? commands[i + 1] : null;

    if (curr && next && isMatrixParams(next)) {
      paths.push(new UrlSegment(curr, stringify(next)));
      i += 2;
    } else {
      paths.push(new UrlSegment(curr, {}));
      i++;
    }
  }

  return new UrlSegmentGroup(paths, {});
}

function createNewSegmentChildren(outlets) {
  var children = {};
  forEach(outlets, function (commands, outlet) {
    if (commands !== null) {
      children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);
    }
  });
  return children;
}

function stringify(params) {
  var res = {};
  forEach(params, function (v, k) {
    return res[k] = "".concat(v);
  });
  return res;
}

function compare(path, params, segment) {
  return path == segment.path && shallowEqual(params, segment.parameters);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var activateRoutes = function activateRoutes(rootContexts, routeReuseStrategy, forwardEvent) {
  return Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (t) {
    new ActivateRoutes(routeReuseStrategy, t.targetRouterState, t.currentRouterState, forwardEvent).activate(rootContexts);
    return t;
  });
};

var ActivateRoutes = /*#__PURE__*/function () {
  function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, ActivateRoutes);

    this.routeReuseStrategy = routeReuseStrategy;
    this.futureState = futureState;
    this.currState = currState;
    this.forwardEvent = forwardEvent;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ActivateRoutes, [{
    key: "activate",
    value: function activate(parentContexts) {
      var futureRoot = this.futureState._root;
      var currRoot = this.currState ? this.currState._root : null;
      this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);
      advanceActivatedRoute(this.futureState.root);
      this.activateChildRoutes(futureRoot, currRoot, parentContexts);
    } // De-activate the child route that are not re-used for the future state

  }, {
    key: "deactivateChildRoutes",
    value: function deactivateChildRoutes(futureNode, currNode, contexts) {
      var _this13 = this;

      var children = nodeChildrenAsMap(currNode); // Recurse on the routes active in the future state to de-activate deeper children

      futureNode.children.forEach(function (futureChild) {
        var childOutletName = futureChild.value.outlet;

        _this13.deactivateRoutes(futureChild, children[childOutletName], contexts);

        delete children[childOutletName];
      }); // De-activate the routes that will not be re-used

      forEach(children, function (v, childName) {
        _this13.deactivateRouteAndItsChildren(v, contexts);
      });
    }
  }, {
    key: "deactivateRoutes",
    value: function deactivateRoutes(futureNode, currNode, parentContext) {
      var future = futureNode.value;
      var curr = currNode ? currNode.value : null;

      if (future === curr) {
        // Reusing the node, check to see if the children need to be de-activated
        if (future.component) {
          // If we have a normal route, we need to go through an outlet.
          var context = parentContext.getContext(future.outlet);

          if (context) {
            this.deactivateChildRoutes(futureNode, currNode, context.children);
          }
        } else {
          // if we have a componentless route, we recurse but keep the same outlet map.
          this.deactivateChildRoutes(futureNode, currNode, parentContext);
        }
      } else {
        if (curr) {
          // Deactivate the current route which will not be re-used
          this.deactivateRouteAndItsChildren(currNode, parentContext);
        }
      }
    }
  }, {
    key: "deactivateRouteAndItsChildren",
    value: function deactivateRouteAndItsChildren(route, parentContexts) {
      if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {
        this.detachAndStoreRouteSubtree(route, parentContexts);
      } else {
        this.deactivateRouteAndOutlet(route, parentContexts);
      }
    }
  }, {
    key: "detachAndStoreRouteSubtree",
    value: function detachAndStoreRouteSubtree(route, parentContexts) {
      var context = parentContexts.getContext(route.value.outlet);

      if (context && context.outlet) {
        var componentRef = context.outlet.detach();
        var contexts = context.children.onOutletDeactivated();
        this.routeReuseStrategy.store(route.value.snapshot, {
          componentRef: componentRef,
          route: route,
          contexts: contexts
        });
      }
    }
  }, {
    key: "deactivateRouteAndOutlet",
    value: function deactivateRouteAndOutlet(route, parentContexts) {
      var _this14 = this;

      var context = parentContexts.getContext(route.value.outlet);

      if (context) {
        var children = nodeChildrenAsMap(route);
        var contexts = route.value.component ? context.children : parentContexts;
        forEach(children, function (v, k) {
          return _this14.deactivateRouteAndItsChildren(v, contexts);
        });

        if (context.outlet) {
          // Destroy the component
          context.outlet.deactivate(); // Destroy the contexts for all the outlets that were in the component

          context.children.onOutletDeactivated();
        }
      }
    }
  }, {
    key: "activateChildRoutes",
    value: function activateChildRoutes(futureNode, currNode, contexts) {
      var _this15 = this;

      var children = nodeChildrenAsMap(currNode);
      futureNode.children.forEach(function (c) {
        _this15.activateRoutes(c, children[c.value.outlet], contexts);

        _this15.forwardEvent(new ActivationEnd(c.value.snapshot));
      });

      if (futureNode.children.length) {
        this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));
      }
    }
  }, {
    key: "activateRoutes",
    value: function activateRoutes(futureNode, currNode, parentContexts) {
      var future = futureNode.value;
      var curr = currNode ? currNode.value : null;
      advanceActivatedRoute(future); // reusing the node

      if (future === curr) {
        if (future.component) {
          // If we have a normal route, we need to go through an outlet.
          var context = parentContexts.getOrCreateContext(future.outlet);
          this.activateChildRoutes(futureNode, currNode, context.children);
        } else {
          // if we have a componentless route, we recurse but keep the same outlet map.
          this.activateChildRoutes(futureNode, currNode, parentContexts);
        }
      } else {
        if (future.component) {
          // if we have a normal route, we need to place the component into the outlet and recurse.
          var _context = parentContexts.getOrCreateContext(future.outlet);

          if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {
            var stored = this.routeReuseStrategy.retrieve(future.snapshot);
            this.routeReuseStrategy.store(future.snapshot, null);

            _context.children.onOutletReAttached(stored.contexts);

            _context.attachRef = stored.componentRef;
            _context.route = stored.route.value;

            if (_context.outlet) {
              // Attach right away when the outlet has already been instantiated
              // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated
              _context.outlet.attach(stored.componentRef, stored.route.value);
            }

            advanceActivatedRouteNodeAndItsChildren(stored.route);
          } else {
            var config = parentLoadedConfig(future.snapshot);
            var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;
            _context.attachRef = null;
            _context.route = future;
            _context.resolver = cmpFactoryResolver;

            if (_context.outlet) {
              // Activate the outlet when it has already been instantiated
              // Otherwise it will get activated from its `ngOnInit` when instantiated
              _context.outlet.activateWith(future, cmpFactoryResolver);
            }

            this.activateChildRoutes(futureNode, null, _context.children);
          }
        } else {
          // if we have a componentless route, we recurse but keep the same outlet map.
          this.activateChildRoutes(futureNode, null, parentContexts);
        }
      }
    }
  }]);

  return ActivateRoutes;
}();

function advanceActivatedRouteNodeAndItsChildren(node) {
  advanceActivatedRoute(node.value);
  node.children.forEach(advanceActivatedRouteNodeAndItsChildren);
}

function parentLoadedConfig(snapshot) {
  for (var s = snapshot.parent; s; s = s.parent) {
    var route = s.routeConfig;
    if (route && route._loadedConfig) return route._loadedConfig;
    if (route && route.component) return null;
  }

  return null;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var LoadedRouterConfig = function LoadedRouterConfig(routes, module) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, LoadedRouterConfig);

  this.routes = routes;
  this.module = module;
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Simple function check, but generic so type inference will flow. Example:
 *
 * function product(a: number, b: number) {
 *   return a * b;
 * }
 *
 * if (isFunction<product>(fn)) {
 *   return fn(1, 2);
 * } else {
 *   throw "Must provide the `product` function";
 * }
 */


function isFunction(v) {
  return typeof v === 'function';
}

function isBoolean(v) {
  return typeof v === 'boolean';
}

function isUrlTree(v) {
  return v instanceof UrlTree;
}

function isCanLoad(guard) {
  return guard && isFunction(guard.canLoad);
}

function isCanActivate(guard) {
  return guard && isFunction(guard.canActivate);
}

function isCanActivateChild(guard) {
  return guard && isFunction(guard.canActivateChild);
}

function isCanDeactivate(guard) {
  return guard && isFunction(guard.canDeactivate);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var INITIAL_VALUE = /*@__PURE__*/Symbol('INITIAL_VALUE');

function prioritizedGuardValue() {
  return Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["switchMap"])(function (obs) {
    return rxjs__WEBPACK_IMPORTED_MODULE_11__["combineLatest"].apply(void 0, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__["default"])(obs.map(function (o) {
      return o.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["startWith"])(INITIAL_VALUE));
    }))).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["scan"])(function (acc, list) {
      var isPending = false;
      return list.reduce(function (innerAcc, val, i) {
        if (innerAcc !== INITIAL_VALUE) return innerAcc; // Toggle pending flag if any values haven't been set yet

        if (val === INITIAL_VALUE) isPending = true; // Any other return values are only valid if we haven't yet hit a pending
        // call. This guarantees that in the case of a guard at the bottom of the
        // tree that returns a redirect, we will wait for the higher priority
        // guard at the top to finish before performing the redirect.

        if (!isPending) {
          // Early return when we hit a `false` value as that should always
          // cancel navigation
          if (val === false) return val;

          if (i === list.length - 1 || isUrlTree(val)) {
            return val;
          }
        }

        return innerAcc;
      }, acc);
    }, INITIAL_VALUE), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["filter"])(function (item) {
      return item !== INITIAL_VALUE;
    }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (item) {
      return isUrlTree(item) ? item : item === true;
    }), //
    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["take"])(1));
  });
}

var ɵEmptyOutletComponent = /*@__PURE__*/function () {
  var ɵEmptyOutletComponent = function ɵEmptyOutletComponent() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, ɵEmptyOutletComponent);
  };

  ɵEmptyOutletComponent.ɵfac = function ɵEmptyOutletComponent_Factory(t) {
    return new (t || ɵEmptyOutletComponent)();
  };

  ɵEmptyOutletComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineComponent"]({
    type: ɵEmptyOutletComponent,
    selectors: [["ng-component"]],
    decls: 1,
    vars: 0,
    template: function ɵEmptyOutletComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](0, "router-outlet");
      }
    },
    directives: function directives() {
      return [RouterOutlet];
    },
    encapsulation: 2
  });
  return ɵEmptyOutletComponent;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function validateConfig(config) {
  var parentPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  // forEach doesn't iterate undefined values
  for (var i = 0; i < config.length; i++) {
    var route = config[i];
    var fullPath = getFullPath(parentPath, route);
    validateNode(route, fullPath);
  }
}

function validateNode(route, fullPath) {
  if (typeof ngDevMode === 'undefined' || ngDevMode) {
    if (!route) {
      throw new Error("\n      Invalid configuration of route '".concat(fullPath, "': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    "));
    }

    if (Array.isArray(route)) {
      throw new Error("Invalid configuration of route '".concat(fullPath, "': Array cannot be specified"));
    }

    if (!route.component && !route.children && !route.loadChildren && route.outlet && route.outlet !== PRIMARY_OUTLET) {
      throw new Error("Invalid configuration of route '".concat(fullPath, "': a componentless route without children or loadChildren cannot have a named outlet set"));
    }

    if (route.redirectTo && route.children) {
      throw new Error("Invalid configuration of route '".concat(fullPath, "': redirectTo and children cannot be used together"));
    }

    if (route.redirectTo && route.loadChildren) {
      throw new Error("Invalid configuration of route '".concat(fullPath, "': redirectTo and loadChildren cannot be used together"));
    }

    if (route.children && route.loadChildren) {
      throw new Error("Invalid configuration of route '".concat(fullPath, "': children and loadChildren cannot be used together"));
    }

    if (route.redirectTo && route.component) {
      throw new Error("Invalid configuration of route '".concat(fullPath, "': redirectTo and component cannot be used together"));
    }

    if (route.path && route.matcher) {
      throw new Error("Invalid configuration of route '".concat(fullPath, "': path and matcher cannot be used together"));
    }

    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {
      throw new Error("Invalid configuration of route '".concat(fullPath, "'. One of the following must be provided: component, redirectTo, children or loadChildren"));
    }

    if (route.path === void 0 && route.matcher === void 0) {
      throw new Error("Invalid configuration of route '".concat(fullPath, "': routes must have either a path or a matcher specified"));
    }

    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {
      throw new Error("Invalid configuration of route '".concat(fullPath, "': path cannot start with a slash"));
    }

    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {
      var exp = "The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.";
      throw new Error("Invalid configuration of route '{path: \"".concat(fullPath, "\", redirectTo: \"").concat(route.redirectTo, "\"}': please provide 'pathMatch'. ").concat(exp));
    }

    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {
      throw new Error("Invalid configuration of route '".concat(fullPath, "': pathMatch can only be set to 'prefix' or 'full'"));
    }
  }

  if (route.children) {
    validateConfig(route.children, fullPath);
  }
}

function getFullPath(parentPath, currentRoute) {
  if (!currentRoute) {
    return parentPath;
  }

  if (!parentPath && !currentRoute.path) {
    return '';
  } else if (parentPath && !currentRoute.path) {
    return "".concat(parentPath, "/");
  } else if (!parentPath && currentRoute.path) {
    return currentRoute.path;
  } else {
    return "".concat(parentPath, "/").concat(currentRoute.path);
  }
}
/**
 * Makes a copy of the config and adds any default required properties.
 */


function standardizeConfig(r) {
  var children = r.children && r.children.map(standardizeConfig);
  var c = children ? Object.assign(Object.assign({}, r), {
    children: children
  }) : Object.assign({}, r);

  if (!c.component && (children || c.loadChildren) && c.outlet && c.outlet !== PRIMARY_OUTLET) {
    c.component = ɵEmptyOutletComponent;
  }

  return c;
}
/** Returns of `Map` of outlet names to the `Route`s for that outlet. */


function groupRoutesByOutlet(routes) {
  return routes.reduce(function (map, route) {
    var routeOutlet = getOutlet(route);

    if (map.has(routeOutlet)) {
      map.get(routeOutlet).push(route);
    } else {
      map.set(routeOutlet, [route]);
    }

    return map;
  }, new Map());
}
/** Returns the `route.outlet` or PRIMARY_OUTLET if none exists. */


function getOutlet(route) {
  return route.outlet || PRIMARY_OUTLET;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NoMatch = function NoMatch(segmentGroup) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, NoMatch);

  this.segmentGroup = segmentGroup || null;
};

var AbsoluteRedirect = function AbsoluteRedirect(urlTree) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, AbsoluteRedirect);

  this.urlTree = urlTree;
};

function noMatch(segmentGroup) {
  return new rxjs__WEBPACK_IMPORTED_MODULE_11__["Observable"](function (obs) {
    return obs.error(new NoMatch(segmentGroup));
  });
}

function absoluteRedirect(newTree) {
  return new rxjs__WEBPACK_IMPORTED_MODULE_11__["Observable"](function (obs) {
    return obs.error(new AbsoluteRedirect(newTree));
  });
}

function namedOutletsRedirect(redirectTo) {
  return new rxjs__WEBPACK_IMPORTED_MODULE_11__["Observable"](function (obs) {
    return obs.error(new Error("Only absolute redirects can have named outlets. redirectTo: '".concat(redirectTo, "'")));
  });
}

function canLoadFails(route) {
  return new rxjs__WEBPACK_IMPORTED_MODULE_11__["Observable"](function (obs) {
    return obs.error(navigationCancelingError("Cannot load children because the guard of the route \"path: '".concat(route.path, "'\" returned false")));
  });
}
/**
 * Returns the `UrlTree` with the redirection applied.
 *
 * Lazy modules are loaded along the way.
 */


function applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {
  return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();
}

var ApplyRedirects = /*#__PURE__*/function () {
  function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, ApplyRedirects);

    this.configLoader = configLoader;
    this.urlSerializer = urlSerializer;
    this.urlTree = urlTree;
    this.config = config;
    this.allowRedirects = true;
    this.ngModule = moduleInjector.get(_angular_core__WEBPACK_IMPORTED_MODULE_10__["NgModuleRef"]);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ApplyRedirects, [{
    key: "apply",
    value: function apply() {
      var _this16 = this;

      var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);
      var urlTrees$ = expanded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (rootSegmentGroup) {
        return _this16.createUrlTree(rootSegmentGroup, _this16.urlTree.queryParams, _this16.urlTree.fragment);
      }));
      return urlTrees$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["catchError"])(function (e) {
        if (e instanceof AbsoluteRedirect) {
          // after an absolute redirect we do not apply any more redirects!
          _this16.allowRedirects = false; // we need to run matching, so we can fetch all lazy-loaded modules

          return _this16.match(e.urlTree);
        }

        if (e instanceof NoMatch) {
          throw _this16.noMatchError(e);
        }

        throw e;
      }));
    }
  }, {
    key: "match",
    value: function match(tree) {
      var _this17 = this;

      var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);
      var mapped$ = expanded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (rootSegmentGroup) {
        return _this17.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment);
      }));
      return mapped$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["catchError"])(function (e) {
        if (e instanceof NoMatch) {
          throw _this17.noMatchError(e);
        }

        throw e;
      }));
    }
  }, {
    key: "noMatchError",
    value: function noMatchError(e) {
      return new Error("Cannot match any routes. URL Segment: '".concat(e.segmentGroup, "'"));
    }
  }, {
    key: "createUrlTree",
    value: function createUrlTree(rootCandidate, queryParams, fragment) {
      var root = rootCandidate.segments.length > 0 ? new UrlSegmentGroup([], Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__["default"])({}, PRIMARY_OUTLET, rootCandidate)) : rootCandidate;
      return new UrlTree(root, queryParams, fragment);
    }
  }, {
    key: "expandSegmentGroup",
    value: function expandSegmentGroup(ngModule, routes, segmentGroup, outlet) {
      if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {
        return this.expandChildren(ngModule, routes, segmentGroup).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (children) {
          return new UrlSegmentGroup([], children);
        }));
      }

      return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);
    } // Recursively expand segment groups for all the child outlets

  }, {
    key: "expandChildren",
    value: function expandChildren(ngModule, routes, segmentGroup) {
      var _this18 = this;

      return waitForMap(segmentGroup.children, function (childOutlet, child) {
        return _this18.expandSegmentGroup(ngModule, routes, child, childOutlet);
      });
    }
  }, {
    key: "expandSegment",
    value: function expandSegment(ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {
      var _this19 = this;

      // We need to expand each outlet group independently to ensure that we not only load modules
      // for routes matching the given `outlet`, but also those which will be activated because
      // their path is empty string. This can result in multiple outlets being activated at once.
      var routesByOutlet = groupRoutesByOutlet(routes);

      if (!routesByOutlet.has(outlet)) {
        routesByOutlet.set(outlet, []);
      }

      var expandRoutes = function expandRoutes(routes) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["from"])(routes).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["concatMap"])(function (r) {
          var expanded$ = _this19.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);

          return expanded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["catchError"])(function (e) {
            if (e instanceof NoMatch) {
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(null);
            }

            throw e;
          }));
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["first"])(function (s) {
          return s !== null;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["catchError"])(function (e) {
          if (e instanceof rxjs__WEBPACK_IMPORTED_MODULE_11__["EmptyError"] || e.name === 'EmptyError') {
            if (_this19.noLeftoversInUrl(segmentGroup, segments, outlet)) {
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(new UrlSegmentGroup([], {}));
            }

            throw new NoMatch(segmentGroup);
          }

          throw e;
        }));
      };

      var expansions = Array.from(routesByOutlet.entries()).map(function (_ref2) {
        var _ref3 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_ref2, 2),
            routeOutlet = _ref3[0],
            routes = _ref3[1];

        var expanded = expandRoutes(routes); // Map all results from outlets we aren't activating to `null` so they can be ignored later

        return routeOutlet === outlet ? expanded : expanded.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function () {
          return null;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["catchError"])(function () {
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(null);
        }));
      });
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["from"])(expansions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["combineAll"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["first"])(), // Return only the expansion for the route outlet we are trying to activate.
      Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (results) {
        return results.find(function (result) {
          return result !== null;
        });
      }));
    }
  }, {
    key: "noLeftoversInUrl",
    value: function noLeftoversInUrl(segmentGroup, segments, outlet) {
      return segments.length === 0 && !segmentGroup.children[outlet];
    }
  }, {
    key: "expandSegmentAgainstRoute",
    value: function expandSegmentAgainstRoute(ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {
      // Empty string segments are special because multiple outlets can match a single path, i.e.
      // `[{path: '', component: B}, {path: '', loadChildren: () => {}, outlet: "about"}]`
      if (getOutlet(route) !== outlet && route.path !== '') {
        return noMatch(segmentGroup);
      }

      if (route.redirectTo === undefined) {
        return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);
      }

      if (allowRedirects && this.allowRedirects) {
        return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);
      }

      return noMatch(segmentGroup);
    }
  }, {
    key: "expandSegmentAgainstRouteUsingRedirect",
    value: function expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet) {
      if (route.path === '**') {
        return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);
      }

      return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);
    }
  }, {
    key: "expandWildCardWithParamsAgainstRouteUsingRedirect",
    value: function expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet) {
      var _this20 = this;

      var newTree = this.applyRedirectCommands([], route.redirectTo, {});

      if (route.redirectTo.startsWith('/')) {
        return absoluteRedirect(newTree);
      }

      return this.lineralizeSegments(route, newTree).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeMap"])(function (newSegments) {
        var group = new UrlSegmentGroup(newSegments, {});
        return _this20.expandSegment(ngModule, group, routes, newSegments, outlet, false);
      }));
    }
  }, {
    key: "expandRegularSegmentAgainstRouteUsingRedirect",
    value: function expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet) {
      var _this21 = this;

      var _match = match(segmentGroup, route, segments),
          matched = _match.matched,
          consumedSegments = _match.consumedSegments,
          lastChild = _match.lastChild,
          positionalParamSegments = _match.positionalParamSegments;

      if (!matched) return noMatch(segmentGroup);
      var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);

      if (route.redirectTo.startsWith('/')) {
        return absoluteRedirect(newTree);
      }

      return this.lineralizeSegments(route, newTree).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeMap"])(function (newSegments) {
        return _this21.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);
      }));
    }
  }, {
    key: "matchSegmentAgainstRoute",
    value: function matchSegmentAgainstRoute(ngModule, rawSegmentGroup, route, segments) {
      var _this22 = this;

      if (route.path === '**') {
        if (route.loadChildren) {
          return this.configLoader.load(ngModule.injector, route).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (cfg) {
            route._loadedConfig = cfg;
            return new UrlSegmentGroup(segments, {});
          }));
        }

        return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(new UrlSegmentGroup(segments, {}));
      }

      var _match2 = match(rawSegmentGroup, route, segments),
          matched = _match2.matched,
          consumedSegments = _match2.consumedSegments,
          lastChild = _match2.lastChild;

      if (!matched) return noMatch(rawSegmentGroup);
      var rawSlicedSegments = segments.slice(lastChild);
      var childConfig$ = this.getChildConfig(ngModule, route, segments);
      return childConfig$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeMap"])(function (routerConfig) {
        var childModule = routerConfig.module;
        var childConfig = routerConfig.routes;

        var _split = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig),
            segmentGroup = _split.segmentGroup,
            slicedSegments = _split.slicedSegments;

        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {
          var _expanded$ = _this22.expandChildren(childModule, childConfig, segmentGroup);

          return _expanded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (children) {
            return new UrlSegmentGroup(consumedSegments, children);
          }));
        }

        if (childConfig.length === 0 && slicedSegments.length === 0) {
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(new UrlSegmentGroup(consumedSegments, {}));
        }

        var expanded$ = _this22.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);

        return expanded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (cs) {
          return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);
        }));
      }));
    }
  }, {
    key: "getChildConfig",
    value: function getChildConfig(ngModule, route, segments) {
      var _this23 = this;

      if (route.children) {
        // The children belong to the same module
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(new LoadedRouterConfig(route.children, ngModule));
      }

      if (route.loadChildren) {
        // lazy children belong to the loaded module
        if (route._loadedConfig !== undefined) {
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(route._loadedConfig);
        }

        return this.runCanLoadGuards(ngModule.injector, route, segments).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeMap"])(function (shouldLoadResult) {
          if (shouldLoadResult) {
            return _this23.configLoader.load(ngModule.injector, route).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (cfg) {
              route._loadedConfig = cfg;
              return cfg;
            }));
          }

          return canLoadFails(route);
        }));
      }

      return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(new LoadedRouterConfig([], ngModule));
    }
  }, {
    key: "runCanLoadGuards",
    value: function runCanLoadGuards(moduleInjector, route, segments) {
      var _this24 = this;

      var canLoad = route.canLoad;
      if (!canLoad || canLoad.length === 0) return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(true);
      var canLoadObservables = canLoad.map(function (injectionToken) {
        var guard = moduleInjector.get(injectionToken);
        var guardVal;

        if (isCanLoad(guard)) {
          guardVal = guard.canLoad(route, segments);
        } else if (isFunction(guard)) {
          guardVal = guard(route, segments);
        } else {
          throw new Error('Invalid CanLoad guard');
        }

        return wrapIntoObservable(guardVal);
      });
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(canLoadObservables).pipe(prioritizedGuardValue(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["tap"])(function (result) {
        if (!isUrlTree(result)) return;
        var error = navigationCancelingError("Redirecting to \"".concat(_this24.urlSerializer.serialize(result), "\""));
        error.url = result;
        throw error;
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (result) {
        return result === true;
      }));
    }
  }, {
    key: "lineralizeSegments",
    value: function lineralizeSegments(route, urlTree) {
      var res = [];
      var c = urlTree.root;

      while (true) {
        res = res.concat(c.segments);

        if (c.numberOfChildren === 0) {
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(res);
        }

        if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {
          return namedOutletsRedirect(route.redirectTo);
        }

        c = c.children[PRIMARY_OUTLET];
      }
    }
  }, {
    key: "applyRedirectCommands",
    value: function applyRedirectCommands(segments, redirectTo, posParams) {
      return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);
    }
  }, {
    key: "applyRedirectCreatreUrlTree",
    value: function applyRedirectCreatreUrlTree(redirectTo, urlTree, segments, posParams) {
      var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);
      return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);
    }
  }, {
    key: "createQueryParams",
    value: function createQueryParams(redirectToParams, actualParams) {
      var res = {};
      forEach(redirectToParams, function (v, k) {
        var copySourceValue = typeof v === 'string' && v.startsWith(':');

        if (copySourceValue) {
          var sourceName = v.substring(1);
          res[k] = actualParams[sourceName];
        } else {
          res[k] = v;
        }
      });
      return res;
    }
  }, {
    key: "createSegmentGroup",
    value: function createSegmentGroup(redirectTo, group, segments, posParams) {
      var _this25 = this;

      var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);
      var children = {};
      forEach(group.children, function (child, name) {
        children[name] = _this25.createSegmentGroup(redirectTo, child, segments, posParams);
      });
      return new UrlSegmentGroup(updatedSegments, children);
    }
  }, {
    key: "createSegments",
    value: function createSegments(redirectTo, redirectToSegments, actualSegments, posParams) {
      var _this26 = this;

      return redirectToSegments.map(function (s) {
        return s.path.startsWith(':') ? _this26.findPosParam(redirectTo, s, posParams) : _this26.findOrReturn(s, actualSegments);
      });
    }
  }, {
    key: "findPosParam",
    value: function findPosParam(redirectTo, redirectToUrlSegment, posParams) {
      var pos = posParams[redirectToUrlSegment.path.substring(1)];
      if (!pos) throw new Error("Cannot redirect to '".concat(redirectTo, "'. Cannot find '").concat(redirectToUrlSegment.path, "'."));
      return pos;
    }
  }, {
    key: "findOrReturn",
    value: function findOrReturn(redirectToUrlSegment, actualSegments) {
      var idx = 0;

      var _iterator4 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(actualSegments),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var s = _step4.value;

          if (s.path === redirectToUrlSegment.path) {
            actualSegments.splice(idx);
            return s;
          }

          idx++;
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }

      return redirectToUrlSegment;
    }
  }]);

  return ApplyRedirects;
}();

function match(segmentGroup, route, segments) {
  if (route.path === '') {
    if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {
      return {
        matched: false,
        consumedSegments: [],
        lastChild: 0,
        positionalParamSegments: {}
      };
    }

    return {
      matched: true,
      consumedSegments: [],
      lastChild: 0,
      positionalParamSegments: {}
    };
  }

  var matcher = route.matcher || defaultUrlMatcher;
  var res = matcher(segments, segmentGroup, route);

  if (!res) {
    return {
      matched: false,
      consumedSegments: [],
      lastChild: 0,
      positionalParamSegments: {}
    };
  }

  return {
    matched: true,
    consumedSegments: res.consumed,
    lastChild: res.consumed.length,
    positionalParamSegments: res.posParams
  };
}

function split(segmentGroup, consumedSegments, slicedSegments, config) {
  if (slicedSegments.length > 0 && containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {
    var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));
    return {
      segmentGroup: mergeTrivialChildren(s),
      slicedSegments: []
    };
  }

  if (slicedSegments.length === 0 && containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {
    var _s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));

    return {
      segmentGroup: mergeTrivialChildren(_s),
      slicedSegments: slicedSegments
    };
  }

  return {
    segmentGroup: segmentGroup,
    slicedSegments: slicedSegments
  };
}

function mergeTrivialChildren(s) {
  if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {
    var c = s.children[PRIMARY_OUTLET];
    return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);
  }

  return s;
}

function addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {
  var res = {};

  var _iterator5 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(routes),
      _step5;

  try {
    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
      var r = _step5.value;

      if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {
        res[getOutlet(r)] = new UrlSegmentGroup([], {});
      }
    }
  } catch (err) {
    _iterator5.e(err);
  } finally {
    _iterator5.f();
  }

  return Object.assign(Object.assign({}, children), res);
}

function createChildrenForEmptySegments(routes, primarySegmentGroup) {
  var res = {};
  res[PRIMARY_OUTLET] = primarySegmentGroup;

  var _iterator6 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(routes),
      _step6;

  try {
    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
      var r = _step6.value;

      if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {
        res[getOutlet(r)] = new UrlSegmentGroup([], {});
      }
    }
  } catch (err) {
    _iterator6.e(err);
  } finally {
    _iterator6.f();
  }

  return res;
}

function containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {
  return routes.some(function (r) {
    return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET;
  });
}

function containsEmptyPathRedirects(segmentGroup, segments, routes) {
  return routes.some(function (r) {
    return isEmptyPathRedirect(segmentGroup, segments, r);
  });
}

function isEmptyPathRedirect(segmentGroup, segments, r) {
  if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {
    return false;
  }

  return r.path === '' && r.redirectTo !== undefined;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function applyRedirects$1(moduleInjector, configLoader, urlSerializer, config) {
  return function (source) {
    return source.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["switchMap"])(function (t) {
      return applyRedirects(moduleInjector, configLoader, urlSerializer, t.extractedUrl, config).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (urlAfterRedirects) {
        return Object.assign(Object.assign({}, t), {
          urlAfterRedirects: urlAfterRedirects
        });
      }));
    }));
  };
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var CanActivate = function CanActivate(path) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, CanActivate);

  this.path = path;
  this.route = this.path[this.path.length - 1];
};

var CanDeactivate = function CanDeactivate(component, route) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, CanDeactivate);

  this.component = component;
  this.route = route;
};

function getAllRouteGuards(future, curr, parentContexts) {
  var futureRoot = future._root;
  var currRoot = curr ? curr._root : null;
  return getChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);
}

function getCanActivateChild(p) {
  var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;
  if (!canActivateChild || canActivateChild.length === 0) return null;
  return {
    node: p,
    guards: canActivateChild
  };
}

function getToken(token, snapshot, moduleInjector) {
  var config = getClosestLoadedConfig(snapshot);
  var injector = config ? config.module.injector : moduleInjector;
  return injector.get(token);
}

function getClosestLoadedConfig(snapshot) {
  if (!snapshot) return null;

  for (var s = snapshot.parent; s; s = s.parent) {
    var route = s.routeConfig;
    if (route && route._loadedConfig) return route._loadedConfig;
  }

  return null;
}

function getChildRouteGuards(futureNode, currNode, contexts, futurePath) {
  var checks = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {
    canDeactivateChecks: [],
    canActivateChecks: []
  };
  var prevChildren = nodeChildrenAsMap(currNode); // Process the children of the future route

  futureNode.children.forEach(function (c) {
    getRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]), checks);
    delete prevChildren[c.value.outlet];
  }); // Process any children left from the current route (not active for the future route)

  forEach(prevChildren, function (v, k) {
    return deactivateRouteAndItsChildren(v, contexts.getContext(k), checks);
  });
  return checks;
}

function getRouteGuards(futureNode, currNode, parentContexts, futurePath) {
  var checks = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {
    canDeactivateChecks: [],
    canActivateChecks: []
  };
  var future = futureNode.value;
  var curr = currNode ? currNode.value : null;
  var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null; // reusing the node

  if (curr && future.routeConfig === curr.routeConfig) {
    var shouldRun = shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);

    if (shouldRun) {
      checks.canActivateChecks.push(new CanActivate(futurePath));
    } else {
      // we need to set the data
      future.data = curr.data;
      future._resolvedData = curr._resolvedData;
    } // If we have a component, we need to go through an outlet.


    if (future.component) {
      getChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath, checks); // if we have a componentless route, we recurse but keep the same outlet map.
    } else {
      getChildRouteGuards(futureNode, currNode, parentContexts, futurePath, checks);
    }

    if (shouldRun && context && context.outlet && context.outlet.isActivated) {
      checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, curr));
    }
  } else {
    if (curr) {
      deactivateRouteAndItsChildren(currNode, context, checks);
    }

    checks.canActivateChecks.push(new CanActivate(futurePath)); // If we have a component, we need to go through an outlet.

    if (future.component) {
      getChildRouteGuards(futureNode, null, context ? context.children : null, futurePath, checks); // if we have a componentless route, we recurse but keep the same outlet map.
    } else {
      getChildRouteGuards(futureNode, null, parentContexts, futurePath, checks);
    }
  }

  return checks;
}

function shouldRunGuardsAndResolvers(curr, future, mode) {
  if (typeof mode === 'function') {
    return mode(curr, future);
  }

  switch (mode) {
    case 'pathParamsChange':
      return !equalPath(curr.url, future.url);

    case 'pathParamsOrQueryParamsChange':
      return !equalPath(curr.url, future.url) || !shallowEqual(curr.queryParams, future.queryParams);

    case 'always':
      return true;

    case 'paramsOrQueryParamsChange':
      return !equalParamsAndUrlSegments(curr, future) || !shallowEqual(curr.queryParams, future.queryParams);

    case 'paramsChange':
    default:
      return !equalParamsAndUrlSegments(curr, future);
  }
}

function deactivateRouteAndItsChildren(route, context, checks) {
  var children = nodeChildrenAsMap(route);
  var r = route.value;
  forEach(children, function (node, childName) {
    if (!r.component) {
      deactivateRouteAndItsChildren(node, context, checks);
    } else if (context) {
      deactivateRouteAndItsChildren(node, context.children.getContext(childName), checks);
    } else {
      deactivateRouteAndItsChildren(node, null, checks);
    }
  });

  if (!r.component) {
    checks.canDeactivateChecks.push(new CanDeactivate(null, r));
  } else if (context && context.outlet && context.outlet.isActivated) {
    checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));
  } else {
    checks.canDeactivateChecks.push(new CanDeactivate(null, r));
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function checkGuards(moduleInjector, forwardEvent) {
  return function (source) {
    return source.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeMap"])(function (t) {
      var targetSnapshot = t.targetSnapshot,
          currentSnapshot = t.currentSnapshot,
          _t$guards = t.guards,
          canActivateChecks = _t$guards.canActivateChecks,
          canDeactivateChecks = _t$guards.canDeactivateChecks;

      if (canDeactivateChecks.length === 0 && canActivateChecks.length === 0) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(Object.assign(Object.assign({}, t), {
          guardsResult: true
        }));
      }

      return runCanDeactivateChecks(canDeactivateChecks, targetSnapshot, currentSnapshot, moduleInjector).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeMap"])(function (canDeactivate) {
        return canDeactivate && isBoolean(canDeactivate) ? runCanActivateChecks(targetSnapshot, canActivateChecks, moduleInjector, forwardEvent) : Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(canDeactivate);
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (guardsResult) {
        return Object.assign(Object.assign({}, t), {
          guardsResult: guardsResult
        });
      }));
    }));
  };
}

function runCanDeactivateChecks(checks, futureRSS, currRSS, moduleInjector) {
  return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["from"])(checks).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeMap"])(function (check) {
    return runCanDeactivate(check.component, check.route, currRSS, futureRSS, moduleInjector);
  }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["first"])(function (result) {
    return result !== true;
  }, true));
}

function runCanActivateChecks(futureSnapshot, checks, moduleInjector, forwardEvent) {
  return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["from"])(checks).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["concatMap"])(function (check) {
    return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["from"])([fireChildActivationStart(check.route.parent, forwardEvent), fireActivationStart(check.route, forwardEvent), runCanActivateChild(futureSnapshot, check.path, moduleInjector), runCanActivate(futureSnapshot, check.route, moduleInjector)]).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["concatAll"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["first"])(function (result) {
      return result !== true;
    }, true));
  }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["first"])(function (result) {
    return result !== true;
  }, true));
}
/**
 * This should fire off `ActivationStart` events for each route being activated at this
 * level.
 * In other words, if you're activating `a` and `b` below, `path` will contain the
 * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always
 * return
 * `true` so checks continue to run.
 */


function fireActivationStart(snapshot, forwardEvent) {
  if (snapshot !== null && forwardEvent) {
    forwardEvent(new ActivationStart(snapshot));
  }

  return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(true);
}
/**
 * This should fire off `ChildActivationStart` events for each route being activated at this
 * level.
 * In other words, if you're activating `a` and `b` below, `path` will contain the
 * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always
 * return
 * `true` so checks continue to run.
 */


function fireChildActivationStart(snapshot, forwardEvent) {
  if (snapshot !== null && forwardEvent) {
    forwardEvent(new ChildActivationStart(snapshot));
  }

  return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(true);
}

function runCanActivate(futureRSS, futureARS, moduleInjector) {
  var canActivate = futureARS.routeConfig ? futureARS.routeConfig.canActivate : null;
  if (!canActivate || canActivate.length === 0) return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(true);
  var canActivateObservables = canActivate.map(function (c) {
    return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["defer"])(function () {
      var guard = getToken(c, futureARS, moduleInjector);
      var observable;

      if (isCanActivate(guard)) {
        observable = wrapIntoObservable(guard.canActivate(futureARS, futureRSS));
      } else if (isFunction(guard)) {
        observable = wrapIntoObservable(guard(futureARS, futureRSS));
      } else {
        throw new Error('Invalid CanActivate guard');
      }

      return observable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["first"])());
    });
  });
  return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(canActivateObservables).pipe(prioritizedGuardValue());
}

function runCanActivateChild(futureRSS, path, moduleInjector) {
  var futureARS = path[path.length - 1];
  var canActivateChildGuards = path.slice(0, path.length - 1).reverse().map(function (p) {
    return getCanActivateChild(p);
  }).filter(function (_) {
    return _ !== null;
  });
  var canActivateChildGuardsMapped = canActivateChildGuards.map(function (d) {
    return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["defer"])(function () {
      var guardsMapped = d.guards.map(function (c) {
        var guard = getToken(c, d.node, moduleInjector);
        var observable;

        if (isCanActivateChild(guard)) {
          observable = wrapIntoObservable(guard.canActivateChild(futureARS, futureRSS));
        } else if (isFunction(guard)) {
          observable = wrapIntoObservable(guard(futureARS, futureRSS));
        } else {
          throw new Error('Invalid CanActivateChild guard');
        }

        return observable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["first"])());
      });
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(guardsMapped).pipe(prioritizedGuardValue());
    });
  });
  return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(canActivateChildGuardsMapped).pipe(prioritizedGuardValue());
}

function runCanDeactivate(component, currARS, currRSS, futureRSS, moduleInjector) {
  var canDeactivate = currARS && currARS.routeConfig ? currARS.routeConfig.canDeactivate : null;
  if (!canDeactivate || canDeactivate.length === 0) return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(true);
  var canDeactivateObservables = canDeactivate.map(function (c) {
    var guard = getToken(c, currARS, moduleInjector);
    var observable;

    if (isCanDeactivate(guard)) {
      observable = wrapIntoObservable(guard.canDeactivate(component, currARS, currRSS, futureRSS));
    } else if (isFunction(guard)) {
      observable = wrapIntoObservable(guard(component, currARS, currRSS, futureRSS));
    } else {
      throw new Error('Invalid CanDeactivate guard');
    }

    return observable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["first"])());
  });
  return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(canDeactivateObservables).pipe(prioritizedGuardValue());
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NoMatch$1 = function NoMatch$1() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, NoMatch$1);
};

function recognize(rootComponentType, config, urlTree, url) {
  var paramsInheritanceStrategy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'emptyOnly';
  var relativeLinkResolution = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'legacy';
  return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution).recognize();
}

var Recognizer = /*#__PURE__*/function () {
  function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, Recognizer);

    this.rootComponentType = rootComponentType;
    this.config = config;
    this.urlTree = urlTree;
    this.url = url;
    this.paramsInheritanceStrategy = paramsInheritanceStrategy;
    this.relativeLinkResolution = relativeLinkResolution;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(Recognizer, [{
    key: "recognize",
    value: function recognize() {
      try {
        var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config, this.relativeLinkResolution).segmentGroup;
        var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);
        var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});
        var rootNode = new TreeNode(root, children);
        var routeState = new RouterStateSnapshot(this.url, rootNode);
        this.inheritParamsAndData(routeState._root);
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(routeState);
      } catch (e) {
        return new rxjs__WEBPACK_IMPORTED_MODULE_11__["Observable"](function (obs) {
          return obs.error(e);
        });
      }
    }
  }, {
    key: "inheritParamsAndData",
    value: function inheritParamsAndData(routeNode) {
      var _this27 = this;

      var route = routeNode.value;
      var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);
      route.params = Object.freeze(i.params);
      route.data = Object.freeze(i.data);
      routeNode.children.forEach(function (n) {
        return _this27.inheritParamsAndData(n);
      });
    }
  }, {
    key: "processSegmentGroup",
    value: function processSegmentGroup(config, segmentGroup, outlet) {
      if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {
        return this.processChildren(config, segmentGroup);
      }

      return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);
    }
  }, {
    key: "processChildren",
    value: function processChildren(config, segmentGroup) {
      var _this28 = this;

      var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) {
        return _this28.processSegmentGroup(config, child, childOutlet);
      });
      checkOutletNameUniqueness(children);
      sortActivatedRouteSnapshots(children);
      return children;
    }
  }, {
    key: "processSegment",
    value: function processSegment(config, segmentGroup, segments, outlet) {
      var _iterator7 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(config),
          _step7;

      try {
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
          var r = _step7.value;

          try {
            return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);
          } catch (e) {
            if (!(e instanceof NoMatch$1)) throw e;
          }
        }
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }

      if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {
        return [];
      }

      throw new NoMatch$1();
    }
  }, {
    key: "noLeftoversInUrl",
    value: function noLeftoversInUrl(segmentGroup, segments, outlet) {
      return segments.length === 0 && !segmentGroup.children[outlet];
    }
  }, {
    key: "processSegmentAgainstRoute",
    value: function processSegmentAgainstRoute(route, rawSegment, segments, outlet) {
      if (route.redirectTo) throw new NoMatch$1();
      if ((route.outlet || PRIMARY_OUTLET) !== outlet) throw new NoMatch$1();
      var snapshot;
      var consumedSegments = [];
      var rawSlicedSegments = [];

      if (route.path === '**') {
        var params = segments.length > 0 ? last(segments).parameters : {};
        snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));
      } else {
        var result = match$1(rawSegment, route, segments);
        consumedSegments = result.consumedSegments;
        rawSlicedSegments = segments.slice(result.lastChild);
        snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));
      }

      var childConfig = getChildConfig(route);

      var _split$ = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig, this.relativeLinkResolution),
          segmentGroup = _split$.segmentGroup,
          slicedSegments = _split$.slicedSegments;

      if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {
        var _children3 = this.processChildren(childConfig, segmentGroup);

        return [new TreeNode(snapshot, _children3)];
      }

      if (childConfig.length === 0 && slicedSegments.length === 0) {
        return [new TreeNode(snapshot, [])];
      }

      var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);
      return [new TreeNode(snapshot, children)];
    }
  }]);

  return Recognizer;
}();

function sortActivatedRouteSnapshots(nodes) {
  nodes.sort(function (a, b) {
    if (a.value.outlet === PRIMARY_OUTLET) return -1;
    if (b.value.outlet === PRIMARY_OUTLET) return 1;
    return a.value.outlet.localeCompare(b.value.outlet);
  });
}

function getChildConfig(route) {
  if (route.children) {
    return route.children;
  }

  if (route.loadChildren) {
    return route._loadedConfig.routes;
  }

  return [];
}

function match$1(segmentGroup, route, segments) {
  if (route.path === '') {
    if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {
      throw new NoMatch$1();
    }

    return {
      consumedSegments: [],
      lastChild: 0,
      parameters: {}
    };
  }

  var matcher = route.matcher || defaultUrlMatcher;
  var res = matcher(segments, segmentGroup, route);
  if (!res) throw new NoMatch$1();
  var posParams = {};
  forEach(res.posParams, function (v, k) {
    posParams[k] = v.path;
  });
  var parameters = res.consumed.length > 0 ? Object.assign(Object.assign({}, posParams), res.consumed[res.consumed.length - 1].parameters) : posParams;
  return {
    consumedSegments: res.consumed,
    lastChild: res.consumed.length,
    parameters: parameters
  };
}

function checkOutletNameUniqueness(nodes) {
  var names = {};
  nodes.forEach(function (n) {
    var routeWithSameOutletName = names[n.value.outlet];

    if (routeWithSameOutletName) {
      var p = routeWithSameOutletName.url.map(function (s) {
        return s.toString();
      }).join('/');
      var c = n.value.url.map(function (s) {
        return s.toString();
      }).join('/');
      throw new Error("Two segments cannot have the same outlet name: '".concat(p, "' and '").concat(c, "'."));
    }

    names[n.value.outlet] = n.value;
  });
}

function getSourceSegmentGroup(segmentGroup) {
  var s = segmentGroup;

  while (s._sourceSegment) {
    s = s._sourceSegment;
  }

  return s;
}

function getPathIndexShift(segmentGroup) {
  var s = segmentGroup;
  var res = s._segmentIndexShift ? s._segmentIndexShift : 0;

  while (s._sourceSegment) {
    s = s._sourceSegment;
    res += s._segmentIndexShift ? s._segmentIndexShift : 0;
  }

  return res - 1;
}

function split$1(segmentGroup, consumedSegments, slicedSegments, config, relativeLinkResolution) {
  if (slicedSegments.length > 0 && containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {
    var _s2 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));

    _s2._sourceSegment = segmentGroup;
    _s2._segmentIndexShift = consumedSegments.length;
    return {
      segmentGroup: _s2,
      slicedSegments: []
    };
  }

  if (slicedSegments.length === 0 && containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {
    var _s3 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, config, segmentGroup.children, relativeLinkResolution));

    _s3._sourceSegment = segmentGroup;
    _s3._segmentIndexShift = consumedSegments.length;
    return {
      segmentGroup: _s3,
      slicedSegments: slicedSegments
    };
  }

  var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);
  s._sourceSegment = segmentGroup;
  s._segmentIndexShift = consumedSegments.length;
  return {
    segmentGroup: s,
    slicedSegments: slicedSegments
  };
}

function addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, routes, children, relativeLinkResolution) {
  var res = {};

  var _iterator8 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(routes),
      _step8;

  try {
    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
      var r = _step8.value;

      if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {
        var s = new UrlSegmentGroup([], {});
        s._sourceSegment = segmentGroup;

        if (relativeLinkResolution === 'legacy') {
          s._segmentIndexShift = segmentGroup.segments.length;
        } else {
          s._segmentIndexShift = consumedSegments.length;
        }

        res[getOutlet$1(r)] = s;
      }
    }
  } catch (err) {
    _iterator8.e(err);
  } finally {
    _iterator8.f();
  }

  return Object.assign(Object.assign({}, children), res);
}

function createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {
  var res = {};
  res[PRIMARY_OUTLET] = primarySegment;
  primarySegment._sourceSegment = segmentGroup;
  primarySegment._segmentIndexShift = consumedSegments.length;

  var _iterator9 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(routes),
      _step9;

  try {
    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
      var r = _step9.value;

      if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {
        var s = new UrlSegmentGroup([], {});
        s._sourceSegment = segmentGroup;
        s._segmentIndexShift = consumedSegments.length;
        res[getOutlet$1(r)] = s;
      }
    }
  } catch (err) {
    _iterator9.e(err);
  } finally {
    _iterator9.f();
  }

  return res;
}

function containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {
  return routes.some(function (r) {
    return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET;
  });
}

function containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {
  return routes.some(function (r) {
    return emptyPathMatch(segmentGroup, slicedSegments, r);
  });
}

function emptyPathMatch(segmentGroup, slicedSegments, r) {
  if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {
    return false;
  }

  return r.path === '' && r.redirectTo === undefined;
}

function getOutlet$1(route) {
  return route.outlet || PRIMARY_OUTLET;
}

function getData(route) {
  return route.data || {};
}

function getResolve(route) {
  return route.resolve || {};
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function recognize$1(rootComponentType, config, serializer, paramsInheritanceStrategy, relativeLinkResolution) {
  return function (source) {
    return source.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeMap"])(function (t) {
      return recognize(rootComponentType, config, t.urlAfterRedirects, serializer(t.urlAfterRedirects), paramsInheritanceStrategy, relativeLinkResolution).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (targetSnapshot) {
        return Object.assign(Object.assign({}, t), {
          targetSnapshot: targetSnapshot
        });
      }));
    }));
  };
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function resolveData(paramsInheritanceStrategy, moduleInjector) {
  return function (source) {
    return source.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeMap"])(function (t) {
      var targetSnapshot = t.targetSnapshot,
          canActivateChecks = t.guards.canActivateChecks;

      if (!canActivateChecks.length) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(t);
      }

      var canActivateChecksResolved = 0;
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["from"])(canActivateChecks).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["concatMap"])(function (check) {
        return runResolve(check.route, targetSnapshot, paramsInheritanceStrategy, moduleInjector);
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["tap"])(function () {
        return canActivateChecksResolved++;
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["takeLast"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeMap"])(function (_) {
        return canActivateChecksResolved === canActivateChecks.length ? Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(t) : rxjs__WEBPACK_IMPORTED_MODULE_11__["EMPTY"];
      }));
    }));
  };
}

function runResolve(futureARS, futureRSS, paramsInheritanceStrategy, moduleInjector) {
  var resolve = futureARS._resolve;
  return resolveNode(resolve, futureARS, futureRSS, moduleInjector).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (resolvedData) {
    futureARS._resolvedData = resolvedData;
    futureARS.data = Object.assign(Object.assign({}, futureARS.data), inheritedParamsDataResolve(futureARS, paramsInheritanceStrategy).resolve);
    return null;
  }));
}

function resolveNode(resolve, futureARS, futureRSS, moduleInjector) {
  var keys = Object.keys(resolve);

  if (keys.length === 0) {
    return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])({});
  }

  var data = {};
  return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["from"])(keys).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeMap"])(function (key) {
    return getResolver(resolve[key], futureARS, futureRSS, moduleInjector).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["tap"])(function (value) {
      data[key] = value;
    }));
  }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["takeLast"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeMap"])(function () {
    // Ensure all resolvers returned values, otherwise don't emit any "next" and just complete
    // the chain which will cancel navigation
    if (Object.keys(data).length === keys.length) {
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(data);
    }

    return rxjs__WEBPACK_IMPORTED_MODULE_11__["EMPTY"];
  }));
}

function getResolver(injectionToken, futureARS, futureRSS, moduleInjector) {
  var resolver = getToken(injectionToken, futureARS, moduleInjector);
  return resolver.resolve ? wrapIntoObservable(resolver.resolve(futureARS, futureRSS)) : wrapIntoObservable(resolver(futureARS, futureRSS));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Perform a side effect through a switchMap for every emission on the source Observable,
 * but return an Observable that is identical to the source. It's essentially the same as
 * the `tap` operator, but if the side effectful `next` function returns an ObservableInput,
 * it will wait before continuing with the original value.
 */


function switchTap(next) {
  return function (source) {
    return source.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["switchMap"])(function (v) {
      var nextResult = next(v);

      if (nextResult) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["from"])(nextResult).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function () {
          return v;
        }));
      }

      return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["from"])([v]);
    }));
  };
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Provides a way to customize when activated routes get reused.
 *
 * @publicApi
 */


var RouteReuseStrategy = function RouteReuseStrategy() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, RouteReuseStrategy);
};
/**
 * @description
 *
 * This base route reuse strategy only reuses routes when the matched router configs are
 * identical. This prevents components from being destroyed and recreated
 * when just the fragment or query parameters change
 * (that is, the existing component is _reused_).
 *
 * This strategy does not store any routes for later reuse.
 *
 * Angular uses this strategy by default.
 *
 *
 * It can be used as a base class for custom route reuse strategies, i.e. you can create your own
 * class that extends the `BaseRouteReuseStrategy` one.
 * @publicApi
 */


var BaseRouteReuseStrategy = /*#__PURE__*/function () {
  function BaseRouteReuseStrategy() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, BaseRouteReuseStrategy);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(BaseRouteReuseStrategy, [{
    key: "shouldDetach",

    /**
     * Whether the given route should detach for later reuse.
     * Always returns false for `BaseRouteReuseStrategy`.
     * */
    value: function shouldDetach(route) {
      return false;
    }
    /**
     * A no-op; the route is never stored since this strategy never detaches routes for later re-use.
     */

  }, {
    key: "store",
    value: function store(route, detachedTree) {}
    /** Returns `false`, meaning the route (and its subtree) is never reattached */

  }, {
    key: "shouldAttach",
    value: function shouldAttach(route) {
      return false;
    }
    /** Returns `null` because this strategy does not store routes for later re-use. */

  }, {
    key: "retrieve",
    value: function retrieve(route) {
      return null;
    }
    /**
     * Determines if a route should be reused.
     * This strategy returns `true` when the future route config and current route config are
     * identical.
     */

  }, {
    key: "shouldReuseRoute",
    value: function shouldReuseRoute(future, curr) {
      return future.routeConfig === curr.routeConfig;
    }
  }]);

  return BaseRouteReuseStrategy;
}();

var DefaultRouteReuseStrategy = /*#__PURE__*/function (_BaseRouteReuseStrate) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(DefaultRouteReuseStrategy, _BaseRouteReuseStrate);

  var _super12 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(DefaultRouteReuseStrategy);

  function DefaultRouteReuseStrategy() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, DefaultRouteReuseStrategy);

    return _super12.apply(this, arguments);
  }

  return DefaultRouteReuseStrategy;
}(BaseRouteReuseStrategy);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The [DI token](guide/glossary/#di-token) for a router configuration.
 * @see `ROUTES`
 * @publicApi
 */


var ROUTES = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_10__["InjectionToken"]('ROUTES');

var RouterConfigLoader = /*#__PURE__*/function () {
  function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, RouterConfigLoader);

    this.loader = loader;
    this.compiler = compiler;
    this.onLoadStartListener = onLoadStartListener;
    this.onLoadEndListener = onLoadEndListener;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RouterConfigLoader, [{
    key: "load",
    value: function load(parentInjector, route) {
      var _this29 = this;

      if (this.onLoadStartListener) {
        this.onLoadStartListener(route);
      }

      var moduleFactory$ = this.loadModuleFactory(route.loadChildren);
      return moduleFactory$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (factory) {
        if (_this29.onLoadEndListener) {
          _this29.onLoadEndListener(route);
        }

        var module = factory.create(parentInjector);
        return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig), module);
      }));
    }
  }, {
    key: "loadModuleFactory",
    value: function loadModuleFactory(loadChildren) {
      var _this30 = this;

      if (typeof loadChildren === 'string') {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["from"])(this.loader.load(loadChildren));
      } else {
        return wrapIntoObservable(loadChildren()).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeMap"])(function (t) {
          if (t instanceof _angular_core__WEBPACK_IMPORTED_MODULE_10__["NgModuleFactory"]) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(t);
          } else {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["from"])(_this30.compiler.compileModuleAsync(t));
          }
        }));
      }
    }
  }]);

  return RouterConfigLoader;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Store contextual information about a `RouterOutlet`
 *
 * @publicApi
 */


var OutletContext = function OutletContext() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, OutletContext);

  this.outlet = null;
  this.route = null;
  this.resolver = null;
  this.children = new ChildrenOutletContexts();
  this.attachRef = null;
};
/**
 * Store contextual information about the children (= nested) `RouterOutlet`
 *
 * @publicApi
 */


var ChildrenOutletContexts = /*#__PURE__*/function () {
  function ChildrenOutletContexts() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, ChildrenOutletContexts);

    // contexts for child outlets, by name.
    this.contexts = new Map();
  }
  /** Called when a `RouterOutlet` directive is instantiated */


  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ChildrenOutletContexts, [{
    key: "onChildOutletCreated",
    value: function onChildOutletCreated(childName, outlet) {
      var context = this.getOrCreateContext(childName);
      context.outlet = outlet;
      this.contexts.set(childName, context);
    }
    /**
     * Called when a `RouterOutlet` directive is destroyed.
     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be
     * re-created later.
     */

  }, {
    key: "onChildOutletDestroyed",
    value: function onChildOutletDestroyed(childName) {
      var context = this.getContext(childName);

      if (context) {
        context.outlet = null;
      }
    }
    /**
     * Called when the corresponding route is deactivated during navigation.
     * Because the component get destroyed, all children outlet are destroyed.
     */

  }, {
    key: "onOutletDeactivated",
    value: function onOutletDeactivated() {
      var contexts = this.contexts;
      this.contexts = new Map();
      return contexts;
    }
  }, {
    key: "onOutletReAttached",
    value: function onOutletReAttached(contexts) {
      this.contexts = contexts;
    }
  }, {
    key: "getOrCreateContext",
    value: function getOrCreateContext(childName) {
      var context = this.getContext(childName);

      if (!context) {
        context = new OutletContext();
        this.contexts.set(childName, context);
      }

      return context;
    }
  }, {
    key: "getContext",
    value: function getContext(childName) {
      return this.contexts.get(childName) || null;
    }
  }]);

  return ChildrenOutletContexts;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Provides a way to migrate AngularJS applications to Angular.
 *
 * @publicApi
 */


var UrlHandlingStrategy = function UrlHandlingStrategy() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, UrlHandlingStrategy);
};
/**
 * @publicApi
 */


var DefaultUrlHandlingStrategy = /*#__PURE__*/function () {
  function DefaultUrlHandlingStrategy() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, DefaultUrlHandlingStrategy);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(DefaultUrlHandlingStrategy, [{
    key: "shouldProcessUrl",
    value: function shouldProcessUrl(url) {
      return true;
    }
  }, {
    key: "extract",
    value: function extract(url) {
      return url;
    }
  }, {
    key: "merge",
    value: function merge(newUrlPart, wholeUrl) {
      return newUrlPart;
    }
  }]);

  return DefaultUrlHandlingStrategy;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function defaultErrorHandler(error) {
  throw error;
}

function defaultMalformedUriErrorHandler(error, urlSerializer, url) {
  return urlSerializer.parse('/');
}
/**
 * @internal
 */


function defaultRouterHook(snapshot, runExtras) {
  return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(null);
}

var Router = /*@__PURE__*/function () {
  var Router = /*#__PURE__*/function () {
    /**
     * Creates the router service.
     */
    // TODO: vsavkin make internal after the final is out.
    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {
      var _this31 = this;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, Router);

      this.rootComponentType = rootComponentType;
      this.urlSerializer = urlSerializer;
      this.rootContexts = rootContexts;
      this.location = location;
      this.config = config;
      this.lastSuccessfulNavigation = null;
      this.currentNavigation = null;
      /**
       * Tracks the previously seen location change from the location subscription so we can compare
       * the two latest to see if they are duplicates. See setUpLocationChangeListener.
       */

      this.lastLocationChangeInfo = null;
      this.navigationId = 0;
      this.isNgZoneEnabled = false;
      /**
       * An event stream for routing events in this NgModule.
       */

      this.events = new rxjs__WEBPACK_IMPORTED_MODULE_11__["Subject"]();
      /**
       * A handler for navigation errors in this NgModule.
       */

      this.errorHandler = defaultErrorHandler;
      /**
       * A handler for errors thrown by `Router.parseUrl(url)`
       * when `url` contains an invalid character.
       * The most common case is a `%` sign
       * that's not encoded and is not part of a percent encoded sequence.
       */

      this.malformedUriErrorHandler = defaultMalformedUriErrorHandler;
      /**
       * True if at least one navigation event has occurred,
       * false otherwise.
       */

      this.navigated = false;
      this.lastSuccessfulId = -1;
      /**
       * Hooks that enable you to pause navigation,
       * either before or after the preactivation phase.
       * Used by `RouterModule`.
       *
       * @internal
       */

      this.hooks = {
        beforePreactivation: defaultRouterHook,
        afterPreactivation: defaultRouterHook
      };
      /**
       * A strategy for extracting and merging URLs.
       * Used for AngularJS to Angular migrations.
       */

      this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();
      /**
       * A strategy for re-using routes.
       */

      this.routeReuseStrategy = new DefaultRouteReuseStrategy();
      /**
       * How to handle a navigation request to the current URL. One of:
       * - `'ignore'` :  The router ignores the request.
       * - `'reload'` : The router reloads the URL. Use to implement a "refresh" feature.
       */

      this.onSameUrlNavigation = 'ignore';
      /**
       * How to merge parameters, data, and resolved data from parent to child
       * routes. One of:
       *
       * - `'emptyOnly'` : Inherit parent parameters, data, and resolved data
       * for path-less or component-less routes.
       * - `'always'` : Inherit parent parameters, data, and resolved data
       * for all child routes.
       */

      this.paramsInheritanceStrategy = 'emptyOnly';
      /**
       * Determines when the router updates the browser URL.
       * By default (`"deferred"`), updates the browser URL after navigation has finished.
       * Set to `'eager'` to update the browser URL at the beginning of navigation.
       * You can choose to update early so that, if navigation fails,
       * you can show an error message with the URL that failed.
       */

      this.urlUpdateStrategy = 'deferred';
      /**
       * Enables a bug fix that corrects relative link resolution in components with empty paths.
       * @see `RouterModule`
       */

      this.relativeLinkResolution = 'corrected';

      var onLoadStart = function onLoadStart(r) {
        return _this31.triggerEvent(new RouteConfigLoadStart(r));
      };

      var onLoadEnd = function onLoadEnd(r) {
        return _this31.triggerEvent(new RouteConfigLoadEnd(r));
      };

      this.ngModule = injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_10__["NgModuleRef"]);
      this.console = injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵConsole"]);
      var ngZone = injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_10__["NgZone"]);
      this.isNgZoneEnabled = ngZone instanceof _angular_core__WEBPACK_IMPORTED_MODULE_10__["NgZone"];
      this.resetConfig(config);
      this.currentUrlTree = createEmptyUrlTree();
      this.rawUrlTree = this.currentUrlTree;
      this.browserUrlTree = this.currentUrlTree;
      this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);
      this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);
      this.transitions = new rxjs__WEBPACK_IMPORTED_MODULE_11__["BehaviorSubject"]({
        id: 0,
        currentUrlTree: this.currentUrlTree,
        currentRawUrl: this.currentUrlTree,
        extractedUrl: this.urlHandlingStrategy.extract(this.currentUrlTree),
        urlAfterRedirects: this.urlHandlingStrategy.extract(this.currentUrlTree),
        rawUrl: this.currentUrlTree,
        extras: {},
        resolve: null,
        reject: null,
        promise: Promise.resolve(true),
        source: 'imperative',
        restoredState: null,
        currentSnapshot: this.routerState.snapshot,
        targetSnapshot: null,
        currentRouterState: this.routerState,
        targetRouterState: null,
        guards: {
          canActivateChecks: [],
          canDeactivateChecks: []
        },
        guardsResult: null
      });
      this.navigations = this.setupNavigations(this.transitions);
      this.processNavigations();
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(Router, [{
      key: "setupNavigations",
      value: function setupNavigations(transitions) {
        var _this32 = this;

        var eventsSubject = this.events;
        return transitions.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["filter"])(function (t) {
          return t.id !== 0;
        }), // Extract URL
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (t) {
          return Object.assign(Object.assign({}, t), {
            extractedUrl: _this32.urlHandlingStrategy.extract(t.rawUrl)
          });
        }), // Using switchMap so we cancel executing navigations when a new one comes in
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["switchMap"])(function (t) {
          var completed = false;
          var errored = false;
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(t).pipe( // Store the Navigation object
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["tap"])(function (t) {
            _this32.currentNavigation = {
              id: t.id,
              initialUrl: t.currentRawUrl,
              extractedUrl: t.extractedUrl,
              trigger: t.source,
              extras: t.extras,
              previousNavigation: _this32.lastSuccessfulNavigation ? Object.assign(Object.assign({}, _this32.lastSuccessfulNavigation), {
                previousNavigation: null
              }) : null
            };
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["switchMap"])(function (t) {
            var urlTransition = !_this32.navigated || t.extractedUrl.toString() !== _this32.browserUrlTree.toString();

            var processCurrentUrl = (_this32.onSameUrlNavigation === 'reload' ? true : urlTransition) && _this32.urlHandlingStrategy.shouldProcessUrl(t.rawUrl);

            if (processCurrentUrl) {
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(t).pipe( // Fire NavigationStart event
              Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["switchMap"])(function (t) {
                var transition = _this32.transitions.getValue();

                eventsSubject.next(new NavigationStart(t.id, _this32.serializeUrl(t.extractedUrl), t.source, t.restoredState));

                if (transition !== _this32.transitions.getValue()) {
                  return rxjs__WEBPACK_IMPORTED_MODULE_11__["EMPTY"];
                }

                return [t];
              }), // This delay is required to match old behavior that forced navigation
              // to always be async
              Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["switchMap"])(function (t) {
                return Promise.resolve(t);
              }), // ApplyRedirects
              applyRedirects$1(_this32.ngModule.injector, _this32.configLoader, _this32.urlSerializer, _this32.config), // Update the currentNavigation
              Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["tap"])(function (t) {
                _this32.currentNavigation = Object.assign(Object.assign({}, _this32.currentNavigation), {
                  finalUrl: t.urlAfterRedirects
                });
              }), // Recognize
              recognize$1(_this32.rootComponentType, _this32.config, function (url) {
                return _this32.serializeUrl(url);
              }, _this32.paramsInheritanceStrategy, _this32.relativeLinkResolution), // Update URL if in `eager` update mode
              Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["tap"])(function (t) {
                if (_this32.urlUpdateStrategy === 'eager') {
                  if (!t.extras.skipLocationChange) {
                    _this32.setBrowserUrl(t.urlAfterRedirects, !!t.extras.replaceUrl, t.id, t.extras.state);
                  }

                  _this32.browserUrlTree = t.urlAfterRedirects;
                }
              }), // Fire RoutesRecognized
              Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["tap"])(function (t) {
                var routesRecognized = new RoutesRecognized(t.id, _this32.serializeUrl(t.extractedUrl), _this32.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);
                eventsSubject.next(routesRecognized);
              }));
            } else {
              var processPreviousUrl = urlTransition && _this32.rawUrlTree && _this32.urlHandlingStrategy.shouldProcessUrl(_this32.rawUrlTree);
              /* When the current URL shouldn't be processed, but the previous one was,
               * we handle this "error condition" by navigating to the previously
               * successful URL, but leaving the URL intact.*/


              if (processPreviousUrl) {
                var id = t.id,
                    extractedUrl = t.extractedUrl,
                    source = t.source,
                    restoredState = t.restoredState,
                    extras = t.extras;
                var navStart = new NavigationStart(id, _this32.serializeUrl(extractedUrl), source, restoredState);
                eventsSubject.next(navStart);
                var targetSnapshot = createEmptyState(extractedUrl, _this32.rootComponentType).snapshot;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(Object.assign(Object.assign({}, t), {
                  targetSnapshot: targetSnapshot,
                  urlAfterRedirects: extractedUrl,
                  extras: Object.assign(Object.assign({}, extras), {
                    skipLocationChange: false,
                    replaceUrl: false
                  })
                }));
              } else {
                /* When neither the current or previous URL can be processed, do nothing
                 * other than update router's internal reference to the current "settled"
                 * URL. This way the next navigation will be coming from the current URL
                 * in the browser.
                 */
                _this32.rawUrlTree = t.rawUrl;
                _this32.browserUrlTree = t.urlAfterRedirects;
                t.resolve(null);
                return rxjs__WEBPACK_IMPORTED_MODULE_11__["EMPTY"];
              }
            }
          }), // Before Preactivation
          switchTap(function (t) {
            var targetSnapshot = t.targetSnapshot,
                navigationId = t.id,
                appliedUrlTree = t.extractedUrl,
                rawUrlTree = t.rawUrl,
                _t$extras = t.extras,
                skipLocationChange = _t$extras.skipLocationChange,
                replaceUrl = _t$extras.replaceUrl;
            return _this32.hooks.beforePreactivation(targetSnapshot, {
              navigationId: navigationId,
              appliedUrlTree: appliedUrlTree,
              rawUrlTree: rawUrlTree,
              skipLocationChange: !!skipLocationChange,
              replaceUrl: !!replaceUrl
            });
          }), // --- GUARDS ---
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["tap"])(function (t) {
            var guardsStart = new GuardsCheckStart(t.id, _this32.serializeUrl(t.extractedUrl), _this32.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);

            _this32.triggerEvent(guardsStart);
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (t) {
            return Object.assign(Object.assign({}, t), {
              guards: getAllRouteGuards(t.targetSnapshot, t.currentSnapshot, _this32.rootContexts)
            });
          }), checkGuards(_this32.ngModule.injector, function (evt) {
            return _this32.triggerEvent(evt);
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["tap"])(function (t) {
            if (isUrlTree(t.guardsResult)) {
              var error = navigationCancelingError("Redirecting to \"".concat(_this32.serializeUrl(t.guardsResult), "\""));
              error.url = t.guardsResult;
              throw error;
            }
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["tap"])(function (t) {
            var guardsEnd = new GuardsCheckEnd(t.id, _this32.serializeUrl(t.extractedUrl), _this32.serializeUrl(t.urlAfterRedirects), t.targetSnapshot, !!t.guardsResult);

            _this32.triggerEvent(guardsEnd);
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["filter"])(function (t) {
            if (!t.guardsResult) {
              _this32.resetUrlToCurrentUrlTree();

              var navCancel = new NavigationCancel(t.id, _this32.serializeUrl(t.extractedUrl), '');
              eventsSubject.next(navCancel);
              t.resolve(false);
              return false;
            }

            return true;
          }), // --- RESOLVE ---
          switchTap(function (t) {
            if (t.guards.canActivateChecks.length) {
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(t).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["tap"])(function (t) {
                var resolveStart = new ResolveStart(t.id, _this32.serializeUrl(t.extractedUrl), _this32.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);

                _this32.triggerEvent(resolveStart);
              }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["switchMap"])(function (t) {
                var dataResolved = false;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(t).pipe(resolveData(_this32.paramsInheritanceStrategy, _this32.ngModule.injector), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["tap"])({
                  next: function next() {
                    return dataResolved = true;
                  },
                  complete: function complete() {
                    if (!dataResolved) {
                      var navCancel = new NavigationCancel(t.id, _this32.serializeUrl(t.extractedUrl), "At least one route resolver didn't emit any value.");
                      eventsSubject.next(navCancel);
                      t.resolve(false);
                    }
                  }
                }));
              }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["tap"])(function (t) {
                var resolveEnd = new ResolveEnd(t.id, _this32.serializeUrl(t.extractedUrl), _this32.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);

                _this32.triggerEvent(resolveEnd);
              }));
            }

            return undefined;
          }), // --- AFTER PREACTIVATION ---
          switchTap(function (t) {
            var targetSnapshot = t.targetSnapshot,
                navigationId = t.id,
                appliedUrlTree = t.extractedUrl,
                rawUrlTree = t.rawUrl,
                _t$extras2 = t.extras,
                skipLocationChange = _t$extras2.skipLocationChange,
                replaceUrl = _t$extras2.replaceUrl;
            return _this32.hooks.afterPreactivation(targetSnapshot, {
              navigationId: navigationId,
              appliedUrlTree: appliedUrlTree,
              rawUrlTree: rawUrlTree,
              skipLocationChange: !!skipLocationChange,
              replaceUrl: !!replaceUrl
            });
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (t) {
            var targetRouterState = createRouterState(_this32.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);
            return Object.assign(Object.assign({}, t), {
              targetRouterState: targetRouterState
            });
          }),
          /* Once here, we are about to activate syncronously. The assumption is this
             will succeed, and user code may read from the Router service. Therefore
             before activation, we need to update router properties storing the current
             URL and the RouterState, as well as updated the browser URL. All this should
             happen *before* activating. */
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["tap"])(function (t) {
            _this32.currentUrlTree = t.urlAfterRedirects;
            _this32.rawUrlTree = _this32.urlHandlingStrategy.merge(_this32.currentUrlTree, t.rawUrl);
            _this32.routerState = t.targetRouterState;

            if (_this32.urlUpdateStrategy === 'deferred') {
              if (!t.extras.skipLocationChange) {
                _this32.setBrowserUrl(_this32.rawUrlTree, !!t.extras.replaceUrl, t.id, t.extras.state);
              }

              _this32.browserUrlTree = t.urlAfterRedirects;
            }
          }), activateRoutes(_this32.rootContexts, _this32.routeReuseStrategy, function (evt) {
            return _this32.triggerEvent(evt);
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["tap"])({
            next: function next() {
              completed = true;
            },
            complete: function complete() {
              completed = true;
            }
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["finalize"])(function () {
            /* When the navigation stream finishes either through error or success, we
             * set the `completed` or `errored` flag. However, there are some situations
             * where we could get here without either of those being set. For instance, a
             * redirect during NavigationStart. Therefore, this is a catch-all to make
             * sure the NavigationCancel
             * event is fired when a navigation gets cancelled but not caught by other
             * means. */
            if (!completed && !errored) {
              // Must reset to current URL tree here to ensure history.state is set. On a
              // fresh page load, if a new navigation comes in before a successful
              // navigation completes, there will be nothing in
              // history.state.navigationId. This can cause sync problems with AngularJS
              // sync code which looks for a value here in order to determine whether or
              // not to handle a given popstate event or to leave it to the Angualr
              // router.
              _this32.resetUrlToCurrentUrlTree();

              var navCancel = new NavigationCancel(t.id, _this32.serializeUrl(t.extractedUrl), "Navigation ID ".concat(t.id, " is not equal to the current navigation id ").concat(_this32.navigationId));
              eventsSubject.next(navCancel);
              t.resolve(false);
            } // currentNavigation should always be reset to null here. If navigation was
            // successful, lastSuccessfulTransition will have already been set. Therefore
            // we can safely set currentNavigation to null here.


            _this32.currentNavigation = null;
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["catchError"])(function (e) {
            errored = true;
            /* This error type is issued during Redirect, and is handled as a
             * cancellation rather than an error. */

            if (isNavigationCancelingError(e)) {
              var redirecting = isUrlTree(e.url);

              if (!redirecting) {
                // Set property only if we're not redirecting. If we landed on a page and
                // redirect to `/` route, the new navigation is going to see the `/`
                // isn't a change from the default currentUrlTree and won't navigate.
                // This is only applicable with initial navigation, so setting
                // `navigated` only when not redirecting resolves this scenario.
                _this32.navigated = true;

                _this32.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);
              }

              var navCancel = new NavigationCancel(t.id, _this32.serializeUrl(t.extractedUrl), e.message);
              eventsSubject.next(navCancel); // When redirecting, we need to delay resolving the navigation
              // promise and push it to the redirect navigation

              if (!redirecting) {
                t.resolve(false);
              } else {
                // setTimeout is required so this navigation finishes with
                // the return EMPTY below. If it isn't allowed to finish
                // processing, there can be multiple navigations to the same
                // URL.
                setTimeout(function () {
                  var mergedTree = _this32.urlHandlingStrategy.merge(e.url, _this32.rawUrlTree);

                  var extras = {
                    skipLocationChange: t.extras.skipLocationChange,
                    replaceUrl: _this32.urlUpdateStrategy === 'eager'
                  };
                  return _this32.scheduleNavigation(mergedTree, 'imperative', null, extras, {
                    resolve: t.resolve,
                    reject: t.reject,
                    promise: t.promise
                  });
                }, 0);
              }
              /* All other errors should reset to the router's internal URL reference to
               * the pre-error state. */

            } else {
              _this32.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);

              var navError = new NavigationError(t.id, _this32.serializeUrl(t.extractedUrl), e);
              eventsSubject.next(navError);

              try {
                t.resolve(_this32.errorHandler(e));
              } catch (ee) {
                t.reject(ee);
              }
            }

            return rxjs__WEBPACK_IMPORTED_MODULE_11__["EMPTY"];
          })); // TODO(jasonaden): remove cast once g3 is on updated TypeScript
        }));
      }
      /**
       * @internal
       * TODO: this should be removed once the constructor of the router made internal
       */

    }, {
      key: "resetRootComponentType",
      value: function resetRootComponentType(rootComponentType) {
        this.rootComponentType = rootComponentType; // TODO: vsavkin router 4.0 should make the root component set to null
        // this will simplify the lifecycle of the router.

        this.routerState.root.component = this.rootComponentType;
      }
    }, {
      key: "getTransition",
      value: function getTransition() {
        var transition = this.transitions.value; // This value needs to be set. Other values such as extractedUrl are set on initial navigation
        // but the urlAfterRedirects may not get set if we aren't processing the new URL *and* not
        // processing the previous URL.

        transition.urlAfterRedirects = this.browserUrlTree;
        return transition;
      }
    }, {
      key: "setTransition",
      value: function setTransition(t) {
        this.transitions.next(Object.assign(Object.assign({}, this.getTransition()), t));
      }
      /**
       * Sets up the location change listener and performs the initial navigation.
       */

    }, {
      key: "initialNavigation",
      value: function initialNavigation() {
        this.setUpLocationChangeListener();

        if (this.navigationId === 0) {
          this.navigateByUrl(this.location.path(true), {
            replaceUrl: true
          });
        }
      }
      /**
       * Sets up the location change listener. This listener detects navigations triggered from outside
       * the Router (the browser back/forward buttons, for example) and schedules a corresponding Router
       * navigation so that the correct events, guards, etc. are triggered.
       */

    }, {
      key: "setUpLocationChangeListener",
      value: function setUpLocationChangeListener() {
        var _this33 = this;

        // Don't need to use Zone.wrap any more, because zone.js
        // already patch onPopState, so location change callback will
        // run into ngZone
        if (!this.locationSubscription) {
          this.locationSubscription = this.location.subscribe(function (event) {
            var currentChange = _this33.extractLocationChangeInfoFromEvent(event);

            if (_this33.shouldScheduleNavigation(_this33.lastLocationChangeInfo, currentChange)) {
              // The `setTimeout` was added in #12160 and is likely to support Angular/AngularJS
              // hybrid apps.
              setTimeout(function () {
                var source = currentChange.source,
                    state = currentChange.state,
                    urlTree = currentChange.urlTree;
                var extras = {
                  replaceUrl: true
                };

                if (state) {
                  var stateCopy = Object.assign({}, state);
                  delete stateCopy.navigationId;

                  if (Object.keys(stateCopy).length !== 0) {
                    extras.state = stateCopy;
                  }
                }

                _this33.scheduleNavigation(urlTree, source, state, extras);
              }, 0);
            }

            _this33.lastLocationChangeInfo = currentChange;
          });
        }
      }
      /** Extracts router-related information from a `PopStateEvent`. */

    }, {
      key: "extractLocationChangeInfoFromEvent",
      value: function extractLocationChangeInfoFromEvent(change) {
        var _a;

        return {
          source: change['type'] === 'popstate' ? 'popstate' : 'hashchange',
          urlTree: this.parseUrl(change['url']),
          // Navigations coming from Angular router have a navigationId state
          // property. When this exists, restore the state.
          state: ((_a = change.state) === null || _a === void 0 ? void 0 : _a.navigationId) ? change.state : null,
          transitionId: this.getTransition().id
        };
      }
      /**
       * Determines whether two events triggered by the Location subscription are due to the same
       * navigation. The location subscription can fire two events (popstate and hashchange) for a
       * single navigation. The second one should be ignored, that is, we should not schedule another
       * navigation in the Router.
       */

    }, {
      key: "shouldScheduleNavigation",
      value: function shouldScheduleNavigation(previous, current) {
        if (!previous) return true;
        var sameDestination = current.urlTree.toString() === previous.urlTree.toString();
        var eventsOccurredAtSameTime = current.transitionId === previous.transitionId;

        if (!eventsOccurredAtSameTime || !sameDestination) {
          return true;
        }

        if (current.source === 'hashchange' && previous.source === 'popstate' || current.source === 'popstate' && previous.source === 'hashchange') {
          return false;
        }

        return true;
      }
      /** The current URL. */

    }, {
      key: "getCurrentNavigation",

      /** The current Navigation object if one exists */
      value: function getCurrentNavigation() {
        return this.currentNavigation;
      }
      /** @internal */

    }, {
      key: "triggerEvent",
      value: function triggerEvent(event) {
        this.events.next(event);
      }
      /**
       * Resets the route configuration used for navigation and generating links.
       *
       * @param config The route array for the new configuration.
       *
       * @usageNotes
       *
       * ```
       * router.resetConfig([
       *  { path: 'team/:id', component: TeamCmp, children: [
       *    { path: 'simple', component: SimpleCmp },
       *    { path: 'user/:name', component: UserCmp }
       *  ]}
       * ]);
       * ```
       */

    }, {
      key: "resetConfig",
      value: function resetConfig(config) {
        validateConfig(config);
        this.config = config.map(standardizeConfig);
        this.navigated = false;
        this.lastSuccessfulId = -1;
      }
      /** @nodoc */

    }, {
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        this.dispose();
      }
      /** Disposes of the router. */

    }, {
      key: "dispose",
      value: function dispose() {
        if (this.locationSubscription) {
          this.locationSubscription.unsubscribe();
          this.locationSubscription = undefined;
        }
      }
      /**
       * Appends URL segments to the current URL tree to create a new URL tree.
       *
       * @param commands An array of URL fragments with which to construct the new URL tree.
       * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path
       * segments, followed by the parameters for each segment.
       * The fragments are applied to the current URL tree or the one provided  in the `relativeTo`
       * property of the options object, if supplied.
       * @param navigationExtras Options that control the navigation strategy.
       * @returns The new URL tree.
       *
       * @usageNotes
       *
       * ```
       * // create /team/33/user/11
       * router.createUrlTree(['/team', 33, 'user', 11]);
       *
       * // create /team/33;expand=true/user/11
       * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);
       *
       * // you can collapse static segments like this (this works only with the first passed-in value):
       * router.createUrlTree(['/team/33/user', userId]);
       *
       * // If the first segment can contain slashes, and you do not want the router to split it,
       * // you can do the following:
       * router.createUrlTree([{segmentPath: '/one/two'}]);
       *
       * // create /team/33/(user/11//right:chat)
       * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);
       *
       * // remove the right secondary node
       * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);
       *
       * // assuming the current url is `/team/33/user/11` and the route points to `user/11`
       *
       * // navigate to /team/33/user/11/details
       * router.createUrlTree(['details'], {relativeTo: route});
       *
       * // navigate to /team/33/user/22
       * router.createUrlTree(['../22'], {relativeTo: route});
       *
       * // navigate to /team/44/user/22
       * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});
       * ```
       */

    }, {
      key: "createUrlTree",
      value: function createUrlTree(commands) {
        var navigationExtras = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var relativeTo = navigationExtras.relativeTo,
            queryParams = navigationExtras.queryParams,
            fragment = navigationExtras.fragment,
            queryParamsHandling = navigationExtras.queryParamsHandling,
            preserveFragment = navigationExtras.preserveFragment;
        var a = relativeTo || this.routerState.root;
        var f = preserveFragment ? this.currentUrlTree.fragment : fragment;
        var q = null;

        switch (queryParamsHandling) {
          case 'merge':
            q = Object.assign(Object.assign({}, this.currentUrlTree.queryParams), queryParams);
            break;

          case 'preserve':
            q = this.currentUrlTree.queryParams;
            break;

          default:
            q = queryParams || null;
        }

        if (q !== null) {
          q = this.removeEmptyProps(q);
        }

        return _createUrlTree(a, this.currentUrlTree, commands, q, f);
      }
      /**
       * Navigates to a view using an absolute route path.
       *
       * @param url An absolute path for a defined route. The function does not apply any delta to the
       *     current URL.
       * @param extras An object containing properties that modify the navigation strategy.
       *
       * @returns A Promise that resolves to 'true' when navigation succeeds,
       * to 'false' when navigation fails, or is rejected on error.
       *
       * @usageNotes
       *
       * The following calls request navigation to an absolute path.
       *
       * ```
       * router.navigateByUrl("/team/33/user/11");
       *
       * // Navigate without updating the URL
       * router.navigateByUrl("/team/33/user/11", { skipLocationChange: true });
       * ```
       *
       * @see [Routing and Navigation guide](guide/router)
       *
       */

    }, {
      key: "navigateByUrl",
      value: function navigateByUrl(url) {
        var extras = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
          skipLocationChange: false
        };

        if (typeof ngDevMode === 'undefined' || ngDevMode && this.isNgZoneEnabled && !_angular_core__WEBPACK_IMPORTED_MODULE_10__["NgZone"].isInAngularZone()) {
          this.console.warn("Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?");
        }

        var urlTree = isUrlTree(url) ? url : this.parseUrl(url);
        var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);
        return this.scheduleNavigation(mergedTree, 'imperative', null, extras);
      }
      /**
       * Navigate based on the provided array of commands and a starting point.
       * If no starting route is provided, the navigation is absolute.
       *
       * @param commands An array of URL fragments with which to construct the target URL.
       * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path
       * segments, followed by the parameters for each segment.
       * The fragments are applied to the current URL or the one provided  in the `relativeTo` property
       * of the options object, if supplied.
       * @param extras An options object that determines how the URL should be constructed or
       *     interpreted.
       *
       * @returns A Promise that resolves to `true` when navigation succeeds, to `false` when navigation
       *     fails,
       * or is rejected on error.
       *
       * @usageNotes
       *
       * The following calls request navigation to a dynamic route path relative to the current URL.
       *
       * ```
       * router.navigate(['team', 33, 'user', 11], {relativeTo: route});
       *
       * // Navigate without updating the URL, overriding the default behavior
       * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});
       * ```
       *
       * @see [Routing and Navigation guide](guide/router)
       *
       */

    }, {
      key: "navigate",
      value: function navigate(commands) {
        var extras = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
          skipLocationChange: false
        };
        validateCommands(commands);
        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);
      }
      /** Serializes a `UrlTree` into a string */

    }, {
      key: "serializeUrl",
      value: function serializeUrl(url) {
        return this.urlSerializer.serialize(url);
      }
      /** Parses a string into a `UrlTree` */

    }, {
      key: "parseUrl",
      value: function parseUrl(url) {
        var urlTree;

        try {
          urlTree = this.urlSerializer.parse(url);
        } catch (e) {
          urlTree = this.malformedUriErrorHandler(e, this.urlSerializer, url);
        }

        return urlTree;
      }
      /** Returns whether the url is activated */

    }, {
      key: "isActive",
      value: function isActive(url, exact) {
        if (isUrlTree(url)) {
          return containsTree(this.currentUrlTree, url, exact);
        }

        var urlTree = this.parseUrl(url);
        return containsTree(this.currentUrlTree, urlTree, exact);
      }
    }, {
      key: "removeEmptyProps",
      value: function removeEmptyProps(params) {
        return Object.keys(params).reduce(function (result, key) {
          var value = params[key];

          if (value !== null && value !== undefined) {
            result[key] = value;
          }

          return result;
        }, {});
      }
    }, {
      key: "processNavigations",
      value: function processNavigations() {
        var _this34 = this;

        this.navigations.subscribe(function (t) {
          _this34.navigated = true;
          _this34.lastSuccessfulId = t.id;

          _this34.events.next(new NavigationEnd(t.id, _this34.serializeUrl(t.extractedUrl), _this34.serializeUrl(_this34.currentUrlTree)));

          _this34.lastSuccessfulNavigation = _this34.currentNavigation;
          _this34.currentNavigation = null;
          t.resolve(true);
        }, function (e) {
          _this34.console.warn("Unhandled Navigation Error: ");
        });
      }
    }, {
      key: "scheduleNavigation",
      value: function scheduleNavigation(rawUrl, source, restoredState, extras, priorPromise) {
        // * Imperative navigations (router.navigate) might trigger additional navigations to the same
        //   URL via a popstate event and the locationChangeListener. We should skip these duplicate
        //   navs. Duplicates may also be triggered by attempts to sync AngularJS and Angular router
        //   states.
        // * Imperative navigations can be cancelled by router guards, meaning the URL won't change. If
        //   the user follows that with a navigation using the back/forward button or manual URL change,
        //   the destination may be the same as the previous imperative attempt. We should not skip
        //   these navigations because it's a separate case from the one above -- it's not a duplicate
        //   navigation.
        var lastNavigation = this.getTransition(); // We don't want to skip duplicate successful navs if they're imperative because
        // onSameUrlNavigation could be 'reload' (so the duplicate is intended).

        var browserNavPrecededByRouterNav = source !== 'imperative' && (lastNavigation === null || lastNavigation === void 0 ? void 0 : lastNavigation.source) === 'imperative';
        var lastNavigationSucceeded = this.lastSuccessfulId === lastNavigation.id; // If the last navigation succeeded or is in flight, we can use the rawUrl as the comparison.
        // However, if it failed, we should compare to the final result (urlAfterRedirects).

        var lastNavigationUrl = lastNavigationSucceeded || this.currentNavigation ? lastNavigation.rawUrl : lastNavigation.urlAfterRedirects;
        var duplicateNav = lastNavigationUrl.toString() === rawUrl.toString();

        if (browserNavPrecededByRouterNav && duplicateNav) {
          return Promise.resolve(true); // return value is not used
        }

        var resolve;
        var reject;
        var promise;

        if (priorPromise) {
          resolve = priorPromise.resolve;
          reject = priorPromise.reject;
          promise = priorPromise.promise;
        } else {
          promise = new Promise(function (res, rej) {
            resolve = res;
            reject = rej;
          });
        }

        var id = ++this.navigationId;
        this.setTransition({
          id: id,
          source: source,
          restoredState: restoredState,
          currentUrlTree: this.currentUrlTree,
          currentRawUrl: this.rawUrlTree,
          rawUrl: rawUrl,
          extras: extras,
          resolve: resolve,
          reject: reject,
          promise: promise,
          currentSnapshot: this.routerState.snapshot,
          currentRouterState: this.routerState
        }); // Make sure that the error is propagated even though `processNavigations` catch
        // handler does not rethrow

        return promise.catch(function (e) {
          return Promise.reject(e);
        });
      }
    }, {
      key: "setBrowserUrl",
      value: function setBrowserUrl(url, replaceUrl, id, state) {
        var path = this.urlSerializer.serialize(url);
        state = state || {};

        if (this.location.isCurrentPathEqualTo(path) || replaceUrl) {
          // TODO(jasonaden): Remove first `navigationId` and rely on `ng` namespace.
          this.location.replaceState(path, '', Object.assign(Object.assign({}, state), {
            navigationId: id
          }));
        } else {
          this.location.go(path, '', Object.assign(Object.assign({}, state), {
            navigationId: id
          }));
        }
      }
    }, {
      key: "resetStateAndUrl",
      value: function resetStateAndUrl(storedState, storedUrl, rawUrl) {
        this.routerState = storedState;
        this.currentUrlTree = storedUrl;
        this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);
        this.resetUrlToCurrentUrlTree();
      }
    }, {
      key: "resetUrlToCurrentUrlTree",
      value: function resetUrlToCurrentUrlTree() {
        this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', {
          navigationId: this.lastSuccessfulId
        });
      }
    }, {
      key: "url",
      get: function get() {
        return this.serializeUrl(this.currentUrlTree);
      }
    }]);

    return Router;
  }();

  Router.ɵfac = function Router_Factory(t) {
    return new (t || Router)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__["Type"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](UrlSerializer), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](ChildrenOutletContexts), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_9__["Location"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__["NgModuleFactoryLoader"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__["Compiler"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](undefined));
  };

  Router.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineInjectable"]({
    token: Router,
    factory: Router.ɵfac
  });
  return Router;
}();

function validateCommands(commands) {
  for (var i = 0; i < commands.length; i++) {
    var cmd = commands[i];

    if (cmd == null) {
      throw new Error("The requested path contains ".concat(cmd, " segment at index ").concat(i));
    }
  }
}

var RouterLink = /*@__PURE__*/function () {
  var RouterLink = /*#__PURE__*/function () {
    function RouterLink(router, route, tabIndex, renderer, el) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, RouterLink);

      this.router = router;
      this.route = route;
      this.commands = [];
      /** @internal */

      this.onChanges = new rxjs__WEBPACK_IMPORTED_MODULE_11__["Subject"]();

      if (tabIndex == null) {
        renderer.setAttribute(el.nativeElement, 'tabindex', '0');
      }
    }
    /** @nodoc */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RouterLink, [{
      key: "ngOnChanges",
      value: function ngOnChanges(changes) {
        // This is subscribed to by `RouterLinkActive` so that it knows to update when there are changes
        // to the RouterLinks it's tracking.
        this.onChanges.next(this);
      }
      /**
       * Commands to pass to {@link Router#createUrlTree Router#createUrlTree}.
       *   - **array**: commands to pass to {@link Router#createUrlTree Router#createUrlTree}.
       *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`
       *   - **null|undefined**: shorthand for an empty array of commands, i.e. `[]`
       * @see {@link Router#createUrlTree Router#createUrlTree}
       */

    }, {
      key: "onClick",

      /** @nodoc */
      value: function onClick() {
        var extras = {
          skipLocationChange: attrBoolValue(this.skipLocationChange),
          replaceUrl: attrBoolValue(this.replaceUrl),
          state: this.state
        };
        this.router.navigateByUrl(this.urlTree, extras);
        return true;
      }
    }, {
      key: "routerLink",
      set: function set(commands) {
        if (commands != null) {
          this.commands = Array.isArray(commands) ? commands : [commands];
        } else {
          this.commands = [];
        }
      }
    }, {
      key: "urlTree",
      get: function get() {
        return this.router.createUrlTree(this.commands, {
          relativeTo: this.route,
          queryParams: this.queryParams,
          fragment: this.fragment,
          queryParamsHandling: this.queryParamsHandling,
          preserveFragment: attrBoolValue(this.preserveFragment)
        });
      }
    }]);

    return RouterLink;
  }();

  RouterLink.ɵfac = function RouterLink_Factory(t) {
    return new (t || RouterLink)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](Router), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinjectAttribute"]('tabindex'), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__["ElementRef"]));
  };

  RouterLink.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineDirective"]({
    type: RouterLink,
    selectors: [["", "routerLink", "", 5, "a", 5, "area"]],
    hostBindings: function RouterLink_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("click", function RouterLink_click_HostBindingHandler() {
          return ctx.onClick();
        });
      }
    },
    inputs: {
      routerLink: "routerLink",
      queryParams: "queryParams",
      fragment: "fragment",
      queryParamsHandling: "queryParamsHandling",
      preserveFragment: "preserveFragment",
      skipLocationChange: "skipLocationChange",
      replaceUrl: "replaceUrl",
      state: "state"
    },
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵNgOnChangesFeature"]]
  });
  return RouterLink;
}();

var RouterLinkWithHref = /*@__PURE__*/function () {
  var RouterLinkWithHref = /*#__PURE__*/function () {
    function RouterLinkWithHref(router, route, locationStrategy) {
      var _this35 = this;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, RouterLinkWithHref);

      this.router = router;
      this.route = route;
      this.locationStrategy = locationStrategy;
      this.commands = [];
      /** @internal */

      this.onChanges = new rxjs__WEBPACK_IMPORTED_MODULE_11__["Subject"]();
      this.subscription = router.events.subscribe(function (s) {
        if (s instanceof NavigationEnd) {
          _this35.updateTargetUrlAndHref();
        }
      });
    }
    /**
     * Commands to pass to {@link Router#createUrlTree Router#createUrlTree}.
     *   - **array**: commands to pass to {@link Router#createUrlTree Router#createUrlTree}.
     *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`
     *   - **null|undefined**: shorthand for an empty array of commands, i.e. `[]`
     * @see {@link Router#createUrlTree Router#createUrlTree}
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RouterLinkWithHref, [{
      key: "ngOnChanges",

      /** @nodoc */
      value: function ngOnChanges(changes) {
        this.updateTargetUrlAndHref();
        this.onChanges.next(this);
      }
      /** @nodoc */

    }, {
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        this.subscription.unsubscribe();
      }
      /** @nodoc */

    }, {
      key: "onClick",
      value: function onClick(button, ctrlKey, shiftKey, altKey, metaKey) {
        if (button !== 0 || ctrlKey || shiftKey || altKey || metaKey) {
          return true;
        }

        if (typeof this.target === 'string' && this.target != '_self') {
          return true;
        }

        var extras = {
          skipLocationChange: attrBoolValue(this.skipLocationChange),
          replaceUrl: attrBoolValue(this.replaceUrl),
          state: this.state
        };
        this.router.navigateByUrl(this.urlTree, extras);
        return false;
      }
    }, {
      key: "updateTargetUrlAndHref",
      value: function updateTargetUrlAndHref() {
        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));
      }
    }, {
      key: "routerLink",
      set: function set(commands) {
        if (commands != null) {
          this.commands = Array.isArray(commands) ? commands : [commands];
        } else {
          this.commands = [];
        }
      }
    }, {
      key: "urlTree",
      get: function get() {
        return this.router.createUrlTree(this.commands, {
          relativeTo: this.route,
          queryParams: this.queryParams,
          fragment: this.fragment,
          queryParamsHandling: this.queryParamsHandling,
          preserveFragment: attrBoolValue(this.preserveFragment)
        });
      }
    }]);

    return RouterLinkWithHref;
  }();

  RouterLinkWithHref.ɵfac = function RouterLinkWithHref_Factory(t) {
    return new (t || RouterLinkWithHref)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](Router), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_9__["LocationStrategy"]));
  };

  RouterLinkWithHref.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineDirective"]({
    type: RouterLinkWithHref,
    selectors: [["a", "routerLink", ""], ["area", "routerLink", ""]],
    hostVars: 2,
    hostBindings: function RouterLinkWithHref_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("click", function RouterLinkWithHref_click_HostBindingHandler($event) {
          return ctx.onClick($event.button, $event.ctrlKey, $event.shiftKey, $event.altKey, $event.metaKey);
        });
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵhostProperty"]("href", ctx.href, _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵsanitizeUrl"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵattribute"]("target", ctx.target);
      }
    },
    inputs: {
      routerLink: "routerLink",
      target: "target",
      queryParams: "queryParams",
      fragment: "fragment",
      queryParamsHandling: "queryParamsHandling",
      preserveFragment: "preserveFragment",
      skipLocationChange: "skipLocationChange",
      replaceUrl: "replaceUrl",
      state: "state"
    },
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵNgOnChangesFeature"]]
  });
  return RouterLinkWithHref;
}();

function attrBoolValue(s) {
  return s === '' || !!s;
}

var RouterLinkActive = /*@__PURE__*/function () {
  var RouterLinkActive = /*#__PURE__*/function () {
    function RouterLinkActive(router, element, renderer, cdr, link, linkWithHref) {
      var _this36 = this;

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, RouterLinkActive);

      this.router = router;
      this.element = element;
      this.renderer = renderer;
      this.cdr = cdr;
      this.link = link;
      this.linkWithHref = linkWithHref;
      this.classes = [];
      this.isActive = false;
      this.routerLinkActiveOptions = {
        exact: false
      };
      this.routerEventsSubscription = router.events.subscribe(function (s) {
        if (s instanceof NavigationEnd) {
          _this36.update();
        }
      });
    }
    /** @nodoc */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RouterLinkActive, [{
      key: "ngAfterContentInit",
      value: function ngAfterContentInit() {
        var _this37 = this;

        // `of(null)` is used to force subscribe body to execute once immediately (like `startWith`).
        Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["from"])([this.links.changes, this.linksWithHrefs.changes, Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(null)]).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeAll"])()).subscribe(function (_) {
          _this37.update();

          _this37.subscribeToEachLinkOnChanges();
        });
      }
    }, {
      key: "subscribeToEachLinkOnChanges",
      value: function subscribeToEachLinkOnChanges() {
        var _this38 = this;

        var _a;

        (_a = this.linkInputChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();
        var allLinkChanges = [].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__["default"])(this.links.toArray()), Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__["default"])(this.linksWithHrefs.toArray()), [this.link, this.linkWithHref]).filter(function (link) {
          return !!link;
        }).map(function (link) {
          return link.onChanges;
        });
        this.linkInputChangesSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["from"])(allLinkChanges).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeAll"])()).subscribe(function (link) {
          if (_this38.isActive !== _this38.isLinkActive(_this38.router)(link)) {
            _this38.update();
          }
        });
      }
    }, {
      key: "ngOnChanges",

      /** @nodoc */
      value: function ngOnChanges(changes) {
        this.update();
      }
      /** @nodoc */

    }, {
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        var _a;

        this.routerEventsSubscription.unsubscribe();
        (_a = this.linkInputChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();
      }
    }, {
      key: "update",
      value: function update() {
        var _this39 = this;

        if (!this.links || !this.linksWithHrefs || !this.router.navigated) return;
        Promise.resolve().then(function () {
          var hasActiveLinks = _this39.hasActiveLinks();

          if (_this39.isActive !== hasActiveLinks) {
            _this39.isActive = hasActiveLinks;

            _this39.cdr.markForCheck();

            _this39.classes.forEach(function (c) {
              if (hasActiveLinks) {
                _this39.renderer.addClass(_this39.element.nativeElement, c);
              } else {
                _this39.renderer.removeClass(_this39.element.nativeElement, c);
              }
            });
          }
        });
      }
    }, {
      key: "isLinkActive",
      value: function isLinkActive(router) {
        var _this40 = this;

        return function (link) {
          return router.isActive(link.urlTree, _this40.routerLinkActiveOptions.exact);
        };
      }
    }, {
      key: "hasActiveLinks",
      value: function hasActiveLinks() {
        var isActiveCheckFn = this.isLinkActive(this.router);
        return this.link && isActiveCheckFn(this.link) || this.linkWithHref && isActiveCheckFn(this.linkWithHref) || this.links.some(isActiveCheckFn) || this.linksWithHrefs.some(isActiveCheckFn);
      }
    }, {
      key: "routerLinkActive",
      set: function set(data) {
        var classes = Array.isArray(data) ? data : data.split(' ');
        this.classes = classes.filter(function (c) {
          return !!c;
        });
      }
    }]);

    return RouterLinkActive;
  }();

  RouterLinkActive.ɵfac = function RouterLinkActive_Factory(t) {
    return new (t || RouterLinkActive)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](Router), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](RouterLink, 8), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](RouterLinkWithHref, 8));
  };

  RouterLinkActive.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineDirective"]({
    type: RouterLinkActive,
    selectors: [["", "routerLinkActive", ""]],
    contentQueries: function RouterLinkActive_ContentQueries(rf, ctx, dirIndex) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵcontentQuery"](dirIndex, RouterLink, true);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵcontentQuery"](dirIndex, RouterLinkWithHref, true);
      }

      if (rf & 2) {
        var _t;

        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.links = _t);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.linksWithHrefs = _t);
      }
    },
    inputs: {
      routerLinkActiveOptions: "routerLinkActiveOptions",
      routerLinkActive: "routerLinkActive"
    },
    exportAs: ["routerLinkActive"],
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵNgOnChangesFeature"]]
  });
  return RouterLinkActive;
}();

var RouterOutlet = /*@__PURE__*/function () {
  var RouterOutlet = /*#__PURE__*/function () {
    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, RouterOutlet);

      this.parentContexts = parentContexts;
      this.location = location;
      this.resolver = resolver;
      this.changeDetector = changeDetector;
      this.activated = null;
      this._activatedRoute = null;
      this.activateEvents = new _angular_core__WEBPACK_IMPORTED_MODULE_10__["EventEmitter"]();
      this.deactivateEvents = new _angular_core__WEBPACK_IMPORTED_MODULE_10__["EventEmitter"]();
      this.name = name || PRIMARY_OUTLET;
      parentContexts.onChildOutletCreated(this.name, this);
    }
    /** @nodoc */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RouterOutlet, [{
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        this.parentContexts.onChildOutletDestroyed(this.name);
      }
      /** @nodoc */

    }, {
      key: "ngOnInit",
      value: function ngOnInit() {
        if (!this.activated) {
          // If the outlet was not instantiated at the time the route got activated we need to populate
          // the outlet when it is initialized (ie inside a NgIf)
          var context = this.parentContexts.getContext(this.name);

          if (context && context.route) {
            if (context.attachRef) {
              // `attachRef` is populated when there is an existing component to mount
              this.attach(context.attachRef, context.route);
            } else {
              // otherwise the component defined in the configuration is created
              this.activateWith(context.route, context.resolver || null);
            }
          }
        }
      }
    }, {
      key: "detach",

      /**
       * Called when the `RouteReuseStrategy` instructs to detach the subtree
       */
      value: function detach() {
        if (!this.activated) throw new Error('Outlet is not activated');
        this.location.detach();
        var cmp = this.activated;
        this.activated = null;
        this._activatedRoute = null;
        return cmp;
      }
      /**
       * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree
       */

    }, {
      key: "attach",
      value: function attach(ref, activatedRoute) {
        this.activated = ref;
        this._activatedRoute = activatedRoute;
        this.location.insert(ref.hostView);
      }
    }, {
      key: "deactivate",
      value: function deactivate() {
        if (this.activated) {
          var c = this.component;
          this.activated.destroy();
          this.activated = null;
          this._activatedRoute = null;
          this.deactivateEvents.emit(c);
        }
      }
    }, {
      key: "activateWith",
      value: function activateWith(activatedRoute, resolver) {
        if (this.isActivated) {
          throw new Error('Cannot activate an already activated outlet');
        }

        this._activatedRoute = activatedRoute;
        var snapshot = activatedRoute._futureSnapshot;
        var component = snapshot.routeConfig.component;
        resolver = resolver || this.resolver;
        var factory = resolver.resolveComponentFactory(component);
        var childContexts = this.parentContexts.getOrCreateContext(this.name).children;
        var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);
        this.activated = this.location.createComponent(factory, this.location.length, injector); // Calling `markForCheck` to make sure we will run the change detection when the
        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.

        this.changeDetector.markForCheck();
        this.activateEvents.emit(this.activated.instance);
      }
    }, {
      key: "isActivated",
      get: function get() {
        return !!this.activated;
      }
    }, {
      key: "component",
      get: function get() {
        if (!this.activated) throw new Error('Outlet is not activated');
        return this.activated.instance;
      }
    }, {
      key: "activatedRoute",
      get: function get() {
        if (!this.activated) throw new Error('Outlet is not activated');
        return this._activatedRoute;
      }
    }, {
      key: "activatedRouteData",
      get: function get() {
        if (this._activatedRoute) {
          return this._activatedRoute.snapshot.data;
        }

        return {};
      }
    }]);

    return RouterOutlet;
  }();

  RouterOutlet.ɵfac = function RouterOutlet_Factory(t) {
    return new (t || RouterOutlet)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](ChildrenOutletContexts), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__["ComponentFactoryResolver"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinjectAttribute"]('name'), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__["ChangeDetectorRef"]));
  };

  RouterOutlet.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineDirective"]({
    type: RouterOutlet,
    selectors: [["router-outlet"]],
    outputs: {
      activateEvents: "activate",
      deactivateEvents: "deactivate"
    },
    exportAs: ["outlet"]
  });
  return RouterOutlet;
}();

var OutletInjector = /*#__PURE__*/function () {
  function OutletInjector(route, childContexts, parent) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, OutletInjector);

    this.route = route;
    this.childContexts = childContexts;
    this.parent = parent;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(OutletInjector, [{
    key: "get",
    value: function get(token, notFoundValue) {
      if (token === ActivatedRoute) {
        return this.route;
      }

      if (token === ChildrenOutletContexts) {
        return this.childContexts;
      }

      return this.parent.get(token, notFoundValue);
    }
  }]);

  return OutletInjector;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Provides a preloading strategy.
 *
 * @publicApi
 */


var PreloadingStrategy = function PreloadingStrategy() {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, PreloadingStrategy);
};
/**
 * @description
 *
 * Provides a preloading strategy that preloads all modules as quickly as possible.
 *
 * ```
 * RouterModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})
 * ```
 *
 * @publicApi
 */


var PreloadAllModules = /*#__PURE__*/function () {
  function PreloadAllModules() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, PreloadAllModules);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(PreloadAllModules, [{
    key: "preload",
    value: function preload(route, fn) {
      return fn().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["catchError"])(function () {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(null);
      }));
    }
  }]);

  return PreloadAllModules;
}();
/**
 * @description
 *
 * Provides a preloading strategy that does not preload any modules.
 *
 * This strategy is enabled by default.
 *
 * @publicApi
 */


var NoPreloading = /*#__PURE__*/function () {
  function NoPreloading() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, NoPreloading);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(NoPreloading, [{
    key: "preload",
    value: function preload(route, fn) {
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(null);
    }
  }]);

  return NoPreloading;
}();

var RouterPreloader = /*@__PURE__*/function () {
  var RouterPreloader = /*#__PURE__*/function () {
    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, RouterPreloader);

      this.router = router;
      this.injector = injector;
      this.preloadingStrategy = preloadingStrategy;

      var onStartLoad = function onStartLoad(r) {
        return router.triggerEvent(new RouteConfigLoadStart(r));
      };

      var onEndLoad = function onEndLoad(r) {
        return router.triggerEvent(new RouteConfigLoadEnd(r));
      };

      this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RouterPreloader, [{
      key: "setUpPreloading",
      value: function setUpPreloading() {
        var _this41 = this;

        this.subscription = this.router.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["filter"])(function (e) {
          return e instanceof NavigationEnd;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["concatMap"])(function () {
          return _this41.preload();
        })).subscribe(function () {});
      }
    }, {
      key: "preload",
      value: function preload() {
        var ngModule = this.injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_10__["NgModuleRef"]);
        return this.processRoutes(ngModule, this.router.config);
      }
      /** @nodoc */

    }, {
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        if (this.subscription) {
          this.subscription.unsubscribe();
        }
      }
    }, {
      key: "processRoutes",
      value: function processRoutes(ngModule, routes) {
        var res = [];

        var _iterator10 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(routes),
            _step10;

        try {
          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
            var route = _step10.value;

            // we already have the config loaded, just recurse
            if (route.loadChildren && !route.canLoad && route._loadedConfig) {
              var childConfig = route._loadedConfig;
              res.push(this.processRoutes(childConfig.module, childConfig.routes)); // no config loaded, fetch the config
            } else if (route.loadChildren && !route.canLoad) {
              res.push(this.preloadConfig(ngModule, route)); // recurse into children
            } else if (route.children) {
              res.push(this.processRoutes(ngModule, route.children));
            }
          }
        } catch (err) {
          _iterator10.e(err);
        } finally {
          _iterator10.f();
        }

        return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["from"])(res).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeAll"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function (_) {
          return void 0;
        }));
      }
    }, {
      key: "preloadConfig",
      value: function preloadConfig(ngModule, route) {
        var _this42 = this;

        return this.preloadingStrategy.preload(route, function () {
          var loaded$ = _this42.loader.load(ngModule.injector, route);

          return loaded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["mergeMap"])(function (config) {
            route._loadedConfig = config;
            return _this42.processRoutes(config.module, config.routes);
          }));
        });
      }
    }]);

    return RouterPreloader;
  }();

  RouterPreloader.ɵfac = function RouterPreloader_Factory(t) {
    return new (t || RouterPreloader)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](Router), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__["NgModuleFactoryLoader"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__["Compiler"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](PreloadingStrategy));
  };

  RouterPreloader.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineInjectable"]({
    token: RouterPreloader,
    factory: RouterPreloader.ɵfac
  });
  return RouterPreloader;
}();

var RouterScroller = /*@__PURE__*/function () {
  var RouterScroller = /*#__PURE__*/function () {
    function RouterScroller(router,
    /** @docsNotRequired */
    viewportScroller) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, RouterScroller);

      this.router = router;
      this.viewportScroller = viewportScroller;
      this.options = options;
      this.lastId = 0;
      this.lastSource = 'imperative';
      this.restoredId = 0;
      this.store = {}; // Default both options to 'disabled'

      options.scrollPositionRestoration = options.scrollPositionRestoration || 'disabled';
      options.anchorScrolling = options.anchorScrolling || 'disabled';
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RouterScroller, [{
      key: "init",
      value: function init() {
        // we want to disable the automatic scrolling because having two places
        // responsible for scrolling results race conditions, especially given
        // that browser don't implement this behavior consistently
        if (this.options.scrollPositionRestoration !== 'disabled') {
          this.viewportScroller.setHistoryScrollRestoration('manual');
        }

        this.routerEventsSubscription = this.createScrollEvents();
        this.scrollEventsSubscription = this.consumeScrollEvents();
      }
    }, {
      key: "createScrollEvents",
      value: function createScrollEvents() {
        var _this43 = this;

        return this.router.events.subscribe(function (e) {
          if (e instanceof NavigationStart) {
            // store the scroll position of the current stable navigations.
            _this43.store[_this43.lastId] = _this43.viewportScroller.getScrollPosition();
            _this43.lastSource = e.navigationTrigger;
            _this43.restoredId = e.restoredState ? e.restoredState.navigationId : 0;
          } else if (e instanceof NavigationEnd) {
            _this43.lastId = e.id;

            _this43.scheduleScrollEvent(e, _this43.router.parseUrl(e.urlAfterRedirects).fragment);
          }
        });
      }
    }, {
      key: "consumeScrollEvents",
      value: function consumeScrollEvents() {
        var _this44 = this;

        return this.router.events.subscribe(function (e) {
          if (!(e instanceof Scroll)) return; // a popstate event. The pop state event will always ignore anchor scrolling.

          if (e.position) {
            if (_this44.options.scrollPositionRestoration === 'top') {
              _this44.viewportScroller.scrollToPosition([0, 0]);
            } else if (_this44.options.scrollPositionRestoration === 'enabled') {
              _this44.viewportScroller.scrollToPosition(e.position);
            } // imperative navigation "forward"

          } else {
            if (e.anchor && _this44.options.anchorScrolling === 'enabled') {
              _this44.viewportScroller.scrollToAnchor(e.anchor);
            } else if (_this44.options.scrollPositionRestoration !== 'disabled') {
              _this44.viewportScroller.scrollToPosition([0, 0]);
            }
          }
        });
      }
    }, {
      key: "scheduleScrollEvent",
      value: function scheduleScrollEvent(routerEvent, anchor) {
        this.router.triggerEvent(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));
      }
      /** @nodoc */

    }, {
      key: "ngOnDestroy",
      value: function ngOnDestroy() {
        if (this.routerEventsSubscription) {
          this.routerEventsSubscription.unsubscribe();
        }

        if (this.scrollEventsSubscription) {
          this.scrollEventsSubscription.unsubscribe();
        }
      }
    }]);

    return RouterScroller;
  }();

  RouterScroller.ɵfac = function RouterScroller_Factory(t) {
    return new (t || RouterScroller)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](Router), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_9__["ViewportScroller"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](undefined));
  };

  RouterScroller.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineInjectable"]({
    token: RouterScroller,
    factory: RouterScroller.ɵfac
  });
  return RouterScroller;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The directives defined in the `RouterModule`.
 */


var ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, ɵEmptyOutletComponent];
/**
 * A [DI token](guide/glossary/#di-token) for the router service.
 *
 * @publicApi
 */

var ROUTER_CONFIGURATION = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_10__["InjectionToken"]('ROUTER_CONFIGURATION');
/**
 * @docsNotRequired
 */

var ROUTER_FORROOT_GUARD = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_10__["InjectionToken"]('ROUTER_FORROOT_GUARD');
var ɵ0 = {
  enableTracing: false
};
var ROUTER_PROVIDERS = [_angular_common__WEBPACK_IMPORTED_MODULE_9__["Location"], {
  provide: UrlSerializer,
  useClass: DefaultUrlSerializer
}, {
  provide: Router,
  useFactory: setupRouter,
  deps: [UrlSerializer, ChildrenOutletContexts, _angular_common__WEBPACK_IMPORTED_MODULE_9__["Location"], _angular_core__WEBPACK_IMPORTED_MODULE_10__["Injector"], _angular_core__WEBPACK_IMPORTED_MODULE_10__["NgModuleFactoryLoader"], _angular_core__WEBPACK_IMPORTED_MODULE_10__["Compiler"], ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_10__["Optional"]()], [RouteReuseStrategy, /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_10__["Optional"]()]]
}, ChildrenOutletContexts, {
  provide: ActivatedRoute,
  useFactory: rootRoute,
  deps: [Router]
}, {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_10__["NgModuleFactoryLoader"],
  useClass: _angular_core__WEBPACK_IMPORTED_MODULE_10__["SystemJsNgModuleLoader"]
}, RouterPreloader, NoPreloading, PreloadAllModules, {
  provide: ROUTER_CONFIGURATION,
  useValue: ɵ0
}];

function routerNgProbeToken() {
  return new _angular_core__WEBPACK_IMPORTED_MODULE_10__["NgProbeToken"]('Router', Router);
}

var RouterModule = /*@__PURE__*/function () {
  var RouterModule = /*#__PURE__*/function () {
    // Note: We are injecting the Router so it gets created eagerly...
    function RouterModule(guard, router) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, RouterModule);
    }
    /**
     * Creates and configures a module with all the router providers and directives.
     * Optionally sets up an application listener to perform an initial navigation.
     *
     * When registering the NgModule at the root, import as follows:
     *
     * ```
     * @NgModule({
     *   imports: [RouterModule.forRoot(ROUTES)]
     * })
     * class MyNgModule {}
     * ```
     *
     * @param routes An array of `Route` objects that define the navigation paths for the application.
     * @param config An `ExtraOptions` configuration object that controls how navigation is performed.
     * @return The new `NgModule`.
     *
     */


    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RouterModule, null, [{
      key: "forRoot",
      value: function forRoot(routes, config) {
        return {
          ngModule: RouterModule,
          providers: [ROUTER_PROVIDERS, provideRoutes(routes), {
            provide: ROUTER_FORROOT_GUARD,
            useFactory: provideForRootGuard,
            deps: [[Router, new _angular_core__WEBPACK_IMPORTED_MODULE_10__["Optional"](), new _angular_core__WEBPACK_IMPORTED_MODULE_10__["SkipSelf"]()]]
          }, {
            provide: ROUTER_CONFIGURATION,
            useValue: config ? config : {}
          }, {
            provide: _angular_common__WEBPACK_IMPORTED_MODULE_9__["LocationStrategy"],
            useFactory: provideLocationStrategy,
            deps: [_angular_common__WEBPACK_IMPORTED_MODULE_9__["PlatformLocation"], [new _angular_core__WEBPACK_IMPORTED_MODULE_10__["Inject"](_angular_common__WEBPACK_IMPORTED_MODULE_9__["APP_BASE_HREF"]), new _angular_core__WEBPACK_IMPORTED_MODULE_10__["Optional"]()], ROUTER_CONFIGURATION]
          }, {
            provide: RouterScroller,
            useFactory: createRouterScroller,
            deps: [Router, _angular_common__WEBPACK_IMPORTED_MODULE_9__["ViewportScroller"], ROUTER_CONFIGURATION]
          }, {
            provide: PreloadingStrategy,
            useExisting: config && config.preloadingStrategy ? config.preloadingStrategy : NoPreloading
          }, {
            provide: _angular_core__WEBPACK_IMPORTED_MODULE_10__["NgProbeToken"],
            multi: true,
            useFactory: routerNgProbeToken
          }, provideRouterInitializer()]
        };
      }
      /**
       * Creates a module with all the router directives and a provider registering routes,
       * without creating a new Router service.
       * When registering for submodules and lazy-loaded submodules, create the NgModule as follows:
       *
       * ```
       * @NgModule({
       *   imports: [RouterModule.forChild(ROUTES)]
       * })
       * class MyNgModule {}
       * ```
       *
       * @param routes An array of `Route` objects that define the navigation paths for the submodule.
       * @return The new NgModule.
       *
       */

    }, {
      key: "forChild",
      value: function forChild(routes) {
        return {
          ngModule: RouterModule,
          providers: [provideRoutes(routes)]
        };
      }
    }]);

    return RouterModule;
  }();

  RouterModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineNgModule"]({
    type: RouterModule
  });
  RouterModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineInjector"]({
    factory: function RouterModule_Factory(t) {
      return new (t || RouterModule)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](ROUTER_FORROOT_GUARD, 8), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](Router, 8));
    }
  });
  return RouterModule;
}();
/*@__PURE__*/


(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵsetNgModuleScope"](RouterModule, {
    declarations: [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, ɵEmptyOutletComponent],
    exports: [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, ɵEmptyOutletComponent]
  });
})();

function createRouterScroller(router, viewportScroller, config) {
  if (config.scrollOffset) {
    viewportScroller.setOffset(config.scrollOffset);
  }

  return new RouterScroller(router, viewportScroller, config);
}

function provideLocationStrategy(platformLocationStrategy, baseHref) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return options.useHash ? new _angular_common__WEBPACK_IMPORTED_MODULE_9__["HashLocationStrategy"](platformLocationStrategy, baseHref) : new _angular_common__WEBPACK_IMPORTED_MODULE_9__["PathLocationStrategy"](platformLocationStrategy, baseHref);
}

function provideForRootGuard(router) {
  if ((typeof ngDevMode === 'undefined' || ngDevMode) && router) {
    throw new Error("RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.");
  }

  return 'guarded';
}
/**
 * Registers a [DI provider](guide/glossary#provider) for a set of routes.
 * @param routes The route configuration to provide.
 *
 * @usageNotes
 *
 * ```
 * @NgModule({
 *   imports: [RouterModule.forChild(ROUTES)],
 *   providers: [provideRoutes(EXTRA_ROUTES)]
 * })
 * class MyNgModule {}
 * ```
 *
 * @publicApi
 */


function provideRoutes(routes) {
  return [{
    provide: _angular_core__WEBPACK_IMPORTED_MODULE_10__["ANALYZE_FOR_ENTRY_COMPONENTS"],
    multi: true,
    useValue: routes
  }, {
    provide: ROUTES,
    multi: true,
    useValue: routes
  }];
}

function setupRouter(urlSerializer, contexts, location, injector, loader, compiler, config) {
  var opts = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : {};
  var urlHandlingStrategy = arguments.length > 8 ? arguments[8] : undefined;
  var routeReuseStrategy = arguments.length > 9 ? arguments[9] : undefined;
  var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));

  if (urlHandlingStrategy) {
    router.urlHandlingStrategy = urlHandlingStrategy;
  }

  if (routeReuseStrategy) {
    router.routeReuseStrategy = routeReuseStrategy;
  }

  assignExtraOptionsToRouter(opts, router);

  if (opts.enableTracing) {
    var dom = Object(_angular_common__WEBPACK_IMPORTED_MODULE_9__["ɵgetDOM"])();
    router.events.subscribe(function (e) {
      dom.logGroup("Router Event: ".concat(e.constructor.name));
      dom.log(e.toString());
      dom.log(e);
      dom.logGroupEnd();
    });
  }

  return router;
}

function assignExtraOptionsToRouter(opts, router) {
  if (opts.errorHandler) {
    router.errorHandler = opts.errorHandler;
  }

  if (opts.malformedUriErrorHandler) {
    router.malformedUriErrorHandler = opts.malformedUriErrorHandler;
  }

  if (opts.onSameUrlNavigation) {
    router.onSameUrlNavigation = opts.onSameUrlNavigation;
  }

  if (opts.paramsInheritanceStrategy) {
    router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;
  }

  if (opts.relativeLinkResolution) {
    router.relativeLinkResolution = opts.relativeLinkResolution;
  }

  if (opts.urlUpdateStrategy) {
    router.urlUpdateStrategy = opts.urlUpdateStrategy;
  }
}

function rootRoute(router) {
  return router.routerState.root;
}

var RouterInitializer = /*@__PURE__*/function () {
  var RouterInitializer = /*#__PURE__*/function () {
    function RouterInitializer(injector) {
      Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__["default"])(this, RouterInitializer);

      this.injector = injector;
      this.initNavigation = false;
      this.resultOfPreactivationDone = new rxjs__WEBPACK_IMPORTED_MODULE_11__["Subject"]();
    }

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RouterInitializer, [{
      key: "appInitializer",
      value: function appInitializer() {
        var _this45 = this;

        var p = this.injector.get(_angular_common__WEBPACK_IMPORTED_MODULE_9__["LOCATION_INITIALIZED"], Promise.resolve(null));
        return p.then(function () {
          var resolve = null;
          var res = new Promise(function (r) {
            return resolve = r;
          });

          var router = _this45.injector.get(Router);

          var opts = _this45.injector.get(ROUTER_CONFIGURATION);

          if (opts.initialNavigation === 'disabled') {
            router.setUpLocationChangeListener();
            resolve(true);
          } else if ( // TODO: enabled is deprecated as of v11, can be removed in v13
          opts.initialNavigation === 'enabled' || opts.initialNavigation === 'enabledBlocking') {
            router.hooks.afterPreactivation = function () {
              // only the initial navigation should be delayed
              if (!_this45.initNavigation) {
                _this45.initNavigation = true;
                resolve(true);
                return _this45.resultOfPreactivationDone; // subsequent navigations should not be delayed
              } else {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["of"])(null);
              }
            };

            router.initialNavigation();
          } else {
            resolve(true);
          }

          return res;
        });
      }
    }, {
      key: "bootstrapListener",
      value: function bootstrapListener(bootstrappedComponentRef) {
        var opts = this.injector.get(ROUTER_CONFIGURATION);
        var preloader = this.injector.get(RouterPreloader);
        var routerScroller = this.injector.get(RouterScroller);
        var router = this.injector.get(Router);
        var ref = this.injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ApplicationRef"]);

        if (bootstrappedComponentRef !== ref.components[0]) {
          return;
        } // Default case


        if (opts.initialNavigation === 'enabledNonBlocking' || opts.initialNavigation === undefined) {
          router.initialNavigation();
        }

        preloader.setUpPreloading();
        routerScroller.init();
        router.resetRootComponentType(ref.componentTypes[0]);
        this.resultOfPreactivationDone.next(null);
        this.resultOfPreactivationDone.complete();
      }
    }]);

    return RouterInitializer;
  }();

  RouterInitializer.ɵfac = function RouterInitializer_Factory(t) {
    return new (t || RouterInitializer)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__["Injector"]));
  };

  RouterInitializer.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineInjectable"]({
    token: RouterInitializer,
    factory: RouterInitializer.ɵfac
  });
  return RouterInitializer;
}();

function getAppInitializer(r) {
  return r.appInitializer.bind(r);
}

function getBootstrapListener(r) {
  return r.bootstrapListener.bind(r);
}
/**
 * A [DI token](guide/glossary/#di-token) for the router initializer that
 * is called after the app is bootstrapped.
 *
 * @publicApi
 */


var ROUTER_INITIALIZER = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_10__["InjectionToken"]('Router Initializer');

function provideRouterInitializer() {
  return [RouterInitializer, {
    provide: _angular_core__WEBPACK_IMPORTED_MODULE_10__["APP_INITIALIZER"],
    multi: true,
    useFactory: getAppInitializer,
    deps: [RouterInitializer]
  }, {
    provide: ROUTER_INITIALIZER,
    useFactory: getBootstrapListener,
    deps: [RouterInitializer]
  }, {
    provide: _angular_core__WEBPACK_IMPORTED_MODULE_10__["APP_BOOTSTRAP_LISTENER"],
    multi: true,
    useExisting: ROUTER_INITIALIZER
  }];
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @publicApi
 */


var VERSION = /*@__PURE__*/new _angular_core__WEBPACK_IMPORTED_MODULE_10__["Version"]('11.0.2');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This file only reexports content of the `src` folder. Keep it that way.

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ "uFwe":
/*!******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _createForOfIteratorHelper; });
/* harmony import */ var _babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/unsupportedIterableToArray */ "BsWD");

function _createForOfIteratorHelper(o, allowArrayLike) {
  var it;

  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = Object(_babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;

      var F = function F() {};

      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e) {
          throw _e;
        },
        f: F
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var normalCompletion = true,
      didErr = false,
      err;
  return {
    s: function s() {
      it = o[Symbol.iterator]();
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e2) {
      didErr = true;
      err = _e2;
    },
    f: function f() {
      try {
        if (!normalCompletion && it["return"] != null) it["return"]();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}

/***/ }),

/***/ "uTdr":
/*!****************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/onErrorResumeNext.js ***!
  \****************************************************************************/
/*! exports provided: onErrorResumeNext, onErrorResumeNextStatic */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return onErrorResumeNext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNextStatic", function() { return onErrorResumeNextStatic; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../observable/from */ "Cfvw");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isArray */ "DH7j");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");







function onErrorResumeNext() {
  for (var _len = arguments.length, nextSources = new Array(_len), _key = 0; _key < _len; _key++) {
    nextSources[_key] = arguments[_key];
  }

  if (nextSources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_5__["isArray"])(nextSources[0])) {
    nextSources = nextSources[0];
  }

  return function (source) {
    return source.lift(new OnErrorResumeNextOperator(nextSources));
  };
}
function onErrorResumeNextStatic() {
  for (var _len2 = arguments.length, nextSources = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    nextSources[_key2] = arguments[_key2];
  }

  var source = undefined;

  if (nextSources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_5__["isArray"])(nextSources[0])) {
    nextSources = nextSources[0];
  }

  source = nextSources.shift();
  return Object(_observable_from__WEBPACK_IMPORTED_MODULE_4__["from"])(source).lift(new OnErrorResumeNextOperator(nextSources));
}

var OnErrorResumeNextOperator = /*#__PURE__*/function () {
  function OnErrorResumeNextOperator(nextSources) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, OnErrorResumeNextOperator);

    this.nextSources = nextSources;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(OnErrorResumeNextOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));
    }
  }]);

  return OnErrorResumeNextOperator;
}();

var OnErrorResumeNextSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(OnErrorResumeNextSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(OnErrorResumeNextSubscriber);

  function OnErrorResumeNextSubscriber(destination, nextSources) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, OnErrorResumeNextSubscriber);

    _this = _super.call(this, destination);
    _this.destination = destination;
    _this.nextSources = nextSources;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(OnErrorResumeNextSubscriber, [{
    key: "notifyError",
    value: function notifyError() {
      this.subscribeToNextSource();
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {
      this.subscribeToNextSource();
    }
  }, {
    key: "_error",
    value: function _error(err) {
      this.subscribeToNextSource();
      this.unsubscribe();
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.subscribeToNextSource();
      this.unsubscribe();
    }
  }, {
    key: "subscribeToNextSource",
    value: function subscribeToNextSource() {
      var next = this.nextSources.shift();

      if (!!next) {
        var innerSubscriber = new _innerSubscribe__WEBPACK_IMPORTED_MODULE_6__["SimpleInnerSubscriber"](this);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_6__["innerSubscribe"])(next, innerSubscriber);

        if (innerSubscription !== innerSubscriber) {
          destination.add(innerSubscription);
        }
      } else {
        this.destination.complete();
      }
    }
  }]);

  return OnErrorResumeNextSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_6__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "un/a":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/retry.js ***!
  \****************************************************************/
/*! exports provided: retry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "retry", function() { return retry; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");







function retry() {
  var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
  return function (source) {
    return source.lift(new RetryOperator(count, source));
  };
}

var RetryOperator = /*#__PURE__*/function () {
  function RetryOperator(count, source) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, RetryOperator);

    this.count = count;
    this.source = source;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RetryOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));
    }
  }]);

  return RetryOperator;
}();

var RetrySubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(RetrySubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(RetrySubscriber);

  function RetrySubscriber(destination, count, source) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, RetrySubscriber);

    _this = _super.call(this, destination);
    _this.count = count;
    _this.source = source;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RetrySubscriber, [{
    key: "error",
    value: function error(err) {
      if (!this.isStopped) {
        var source = this.source,
            count = this.count;

        if (count === 0) {
          return Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(RetrySubscriber.prototype), "error", this).call(this, err);
        } else if (count > -1) {
          this.count = count - 1;
        }

        source.subscribe(this._unsubscribeAndRecycle());
      }
    }
  }]);

  return RetrySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_6__["Subscriber"]);

/***/ }),

/***/ "vY5A":
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/*! exports provided: AppRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "tyNb");




var routes = [];
var AppRoutingModule = /** @class */ /*@__PURE__*/ (function () {
    function AppRoutingModule() {
    }
    AppRoutingModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: AppRoutingModule });
    AppRoutingModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function AppRoutingModule_Factory(t) { return new (t || AppRoutingModule)(); }, imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forRoot(routes)], _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]] });
    return AppRoutingModule;
}());

(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](AppRoutingModule, { imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]], exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]] }); })();



/***/ }),

/***/ "vkgz":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/tap.js ***!
  \**************************************************************/
/*! exports provided: tap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tap", function() { return tap; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");
/* harmony import */ var _util_noop__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/noop */ "KqfI");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/isFunction */ "n6bG");








function tap(nextOrObserver, error, complete) {
  return function tapOperatorFunction(source) {
    return source.lift(new DoOperator(nextOrObserver, error, complete));
  };
}

var DoOperator = /*#__PURE__*/function () {
  function DoOperator(nextOrObserver, error, complete) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, DoOperator);

    this.nextOrObserver = nextOrObserver;
    this.error = error;
    this.complete = complete;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(DoOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));
    }
  }]);

  return DoOperator;
}();

var TapSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(TapSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(TapSubscriber);

  function TapSubscriber(destination, observerOrNext, error, complete) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, TapSubscriber);

    _this = _super.call(this, destination);
    _this._tapNext = _util_noop__WEBPACK_IMPORTED_MODULE_6__["noop"];
    _this._tapError = _util_noop__WEBPACK_IMPORTED_MODULE_6__["noop"];
    _this._tapComplete = _util_noop__WEBPACK_IMPORTED_MODULE_6__["noop"];
    _this._tapError = error || _util_noop__WEBPACK_IMPORTED_MODULE_6__["noop"];
    _this._tapComplete = complete || _util_noop__WEBPACK_IMPORTED_MODULE_6__["noop"];

    if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_7__["isFunction"])(observerOrNext)) {
      _this._context = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this);
      _this._tapNext = observerOrNext;
    } else if (observerOrNext) {
      _this._context = observerOrNext;
      _this._tapNext = observerOrNext.next || _util_noop__WEBPACK_IMPORTED_MODULE_6__["noop"];
      _this._tapError = observerOrNext.error || _util_noop__WEBPACK_IMPORTED_MODULE_6__["noop"];
      _this._tapComplete = observerOrNext.complete || _util_noop__WEBPACK_IMPORTED_MODULE_6__["noop"];
    }

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(TapSubscriber, [{
    key: "_next",
    value: function _next(value) {
      try {
        this._tapNext.call(this._context, value);
      } catch (err) {
        this.destination.error(err);
        return;
      }

      this.destination.next(value);
    }
  }, {
    key: "_error",
    value: function _error(err) {
      try {
        this._tapError.call(this._context, err);
      } catch (err) {
        this.destination.error(err);
        return;
      }

      this.destination.error(err);
    }
  }, {
    key: "_complete",
    value: function _complete() {
      try {
        this._tapComplete.call(this._context);
      } catch (err) {
        this.destination.error(err);
        return;
      }

      return this.destination.complete();
    }
  }]);

  return TapSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_5__["Subscriber"]);

/***/ }),

/***/ "vqkR":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/skipUntil.js ***!
  \********************************************************************/
/*! exports provided: skipUntil */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "skipUntil", function() { return skipUntil; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");








function skipUntil(notifier) {
  return function (source) {
    return source.lift(new SkipUntilOperator(notifier));
  };
}

var SkipUntilOperator = /*#__PURE__*/function () {
  function SkipUntilOperator(notifier) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, SkipUntilOperator);

    this.notifier = notifier;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(SkipUntilOperator, [{
    key: "call",
    value: function call(destination, source) {
      return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));
    }
  }]);

  return SkipUntilOperator;
}();

var SkipUntilSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(SkipUntilSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(SkipUntilSubscriber);

  function SkipUntilSubscriber(destination, notifier) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, SkipUntilSubscriber);

    _this = _super.call(this, destination);
    _this.hasValue = false;
    var innerSubscriber = new _innerSubscribe__WEBPACK_IMPORTED_MODULE_7__["SimpleInnerSubscriber"](Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this));

    _this.add(innerSubscriber);

    _this.innerSubscription = innerSubscriber;
    var innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_7__["innerSubscribe"])(notifier, innerSubscriber);

    if (innerSubscription !== innerSubscriber) {
      _this.add(innerSubscription);

      _this.innerSubscription = innerSubscription;
    }

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(SkipUntilSubscriber, [{
    key: "_next",
    value: function _next(value) {
      if (this.hasValue) {
        Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(SkipUntilSubscriber.prototype), "_next", this).call(this, value);
      }
    }
  }, {
    key: "notifyNext",
    value: function notifyNext() {
      this.hasValue = true;

      if (this.innerSubscription) {
        this.innerSubscription.unsubscribe();
      }
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {}
  }]);

  return SkipUntilSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_7__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "vuIU":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/createClass.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _createClass; });
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

/***/ }),

/***/ "w1tV":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/share.js ***!
  \****************************************************************/
/*! exports provided: share */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "share", function() { return share; });
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./multicast */ "oB13");
/* harmony import */ var _refCount__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./refCount */ "x+ZX");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subject */ "XNiG");




function shareSubjectFactory() {
  return new _Subject__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
}

function share() {
  return function (source) {
    return Object(_refCount__WEBPACK_IMPORTED_MODULE_1__["refCount"])()(Object(_multicast__WEBPACK_IMPORTED_MODULE_0__["multicast"])(shareSubjectFactory)(source));
  };
}

/***/ }),

/***/ "w7Ir":
/*!****************************************************************************!*\
  !*** ./node_modules/@angular/fire/__ivy_ngcc__/auth/es2015/auth.module.js ***!
  \****************************************************************************/
/*! exports provided: AngularFireAuthModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AngularFireAuthModule", function() { return AngularFireAuthModule; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth */ "aECQ");
/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/auth */ "6nsN");



var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var AngularFireAuthModule = /*@__PURE__*/function () {
  var AngularFireAuthModule = function AngularFireAuthModule() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, AngularFireAuthModule);
  };

  AngularFireAuthModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
    type: AngularFireAuthModule
  });
  AngularFireAuthModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
    factory: function AngularFireAuthModule_Factory(t) {
      return new (t || AngularFireAuthModule)();
    },
    providers: [_auth__WEBPACK_IMPORTED_MODULE_2__["AngularFireAuth"]]
  });
  return AngularFireAuthModule;
}();



/***/ }),

/***/ "wO+i":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/pluck.js ***!
  \****************************************************************/
/*! exports provided: pluck */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pluck", function() { return pluck; });
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map */ "lJxs");

function pluck() {
  for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {
    properties[_key] = arguments[_key];
  }

  var length = properties.length;

  if (length === 0) {
    throw new Error('list of properties cannot be empty.');
  }

  return function (source) {
    return Object(_map__WEBPACK_IMPORTED_MODULE_0__["map"])(plucker(properties, length))(source);
  };
}

function plucker(props, length) {
  var mapper = function mapper(x) {
    var currentProp = x;

    for (var i = 0; i < length; i++) {
      var p = currentProp != null ? currentProp[props[i]] : undefined;

      if (p !== void 0) {
        currentProp = p;
      } else {
        return undefined;
      }
    }

    return currentProp;
  };

  return mapper;
}

/***/ }),

/***/ "wj3C":
/*!******************************************************!*\
  !*** ./node_modules/@firebase/app/dist/index.cjs.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', {
  value: true
});

var tslib = __webpack_require__(/*! tslib */ "mrSG");

var util = __webpack_require__(/*! @firebase/util */ "zVF4");

var component = __webpack_require__(/*! @firebase/component */ "S+S0");

var logger$1 = __webpack_require__(/*! @firebase/logger */ "q/0M");
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var _a;

var ERRORS = (_a = {}, _a["no-app"
/* NO_APP */
] = "No Firebase App '{$appName}' has been created - " + 'call Firebase App.initializeApp()', _a["bad-app-name"
/* BAD_APP_NAME */
] = "Illegal App name: '{$appName}", _a["duplicate-app"
/* DUPLICATE_APP */
] = "Firebase App named '{$appName}' already exists", _a["app-deleted"
/* APP_DELETED */
] = "Firebase App named '{$appName}' already deleted", _a["invalid-app-argument"
/* INVALID_APP_ARGUMENT */
] = 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.', _a["invalid-log-argument"
/* INVALID_LOG_ARGUMENT */
] = 'First argument to `onLog` must be null or a function.', _a);
var ERROR_FACTORY = new util.ErrorFactory('app', 'Firebase', ERRORS);
var name$1 = "@firebase/app";
var version = "0.6.11";
var name$2 = "@firebase/analytics";
var name$3 = "@firebase/auth";
var name$4 = "@firebase/database";
var name$5 = "@firebase/functions";
var name$6 = "@firebase/installations";
var name$7 = "@firebase/messaging";
var name$8 = "@firebase/performance";
var name$9 = "@firebase/remote-config";
var name$a = "@firebase/storage";
var name$b = "@firebase/firestore";
var name$c = "firebase-wrapper";
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var _a$1;

var DEFAULT_ENTRY_NAME = '[DEFAULT]';
var PLATFORM_LOG_STRING = (_a$1 = {}, _a$1[name$1] = 'fire-core', _a$1[name$2] = 'fire-analytics', _a$1[name$3] = 'fire-auth', _a$1[name$4] = 'fire-rtdb', _a$1[name$5] = 'fire-fn', _a$1[name$6] = 'fire-iid', _a$1[name$7] = 'fire-fcm', _a$1[name$8] = 'fire-perf', _a$1[name$9] = 'fire-rc', _a$1[name$a] = 'fire-gcs', _a$1[name$b] = 'fire-fst', _a$1['fire-js'] = 'fire-js', _a$1[name$c] = 'fire-js-all', _a$1);
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var logger = new logger$1.Logger('@firebase/app');
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Global context object for a collection of services using
 * a shared authentication state.
 */

var FirebaseAppImpl =
/** @class */

/*@__PURE__*/
function () {
  function FirebaseAppImpl(options, config, firebase_) {
    var e_1, _a;

    var _this = this;

    this.firebase_ = firebase_;
    this.isDeleted_ = false;
    this.name_ = config.name;
    this.automaticDataCollectionEnabled_ = config.automaticDataCollectionEnabled || false;
    this.options_ = util.deepCopy(options);
    this.container = new component.ComponentContainer(config.name); // add itself to container

    this._addComponent(new component.Component('app', function () {
      return _this;
    }, "PUBLIC"
    /* PUBLIC */
    ));

    try {
      // populate ComponentContainer with existing components
      for (var _b = tslib.__values(this.firebase_.INTERNAL.components.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
        var component$1 = _c.value;

        this._addComponent(component$1);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  }

  Object.defineProperty(FirebaseAppImpl.prototype, "automaticDataCollectionEnabled", {
    get: function get() {
      this.checkDestroyed_();
      return this.automaticDataCollectionEnabled_;
    },
    set: function set(val) {
      this.checkDestroyed_();
      this.automaticDataCollectionEnabled_ = val;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(FirebaseAppImpl.prototype, "name", {
    get: function get() {
      this.checkDestroyed_();
      return this.name_;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(FirebaseAppImpl.prototype, "options", {
    get: function get() {
      this.checkDestroyed_();
      return this.options_;
    },
    enumerable: false,
    configurable: true
  });

  FirebaseAppImpl.prototype.delete = function () {
    var _this = this;

    return new Promise(function (resolve) {
      _this.checkDestroyed_();

      resolve();
    }).then(function () {
      _this.firebase_.INTERNAL.removeApp(_this.name_);

      return Promise.all(_this.container.getProviders().map(function (provider) {
        return provider.delete();
      }));
    }).then(function () {
      _this.isDeleted_ = true;
    });
  };
  /**
   * Return a service instance associated with this app (creating it
   * on demand), identified by the passed instanceIdentifier.
   *
   * NOTE: Currently storage and functions are the only ones that are leveraging this
   * functionality. They invoke it by calling:
   *
   * ```javascript
   * firebase.app().storage('STORAGE BUCKET ID')
   * ```
   *
   * The service name is passed to this already
   * @internal
   */


  FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {
    if (instanceIdentifier === void 0) {
      instanceIdentifier = DEFAULT_ENTRY_NAME;
    }

    this.checkDestroyed_(); // getImmediate will always succeed because _getService is only called for registered components.

    return this.container.getProvider(name).getImmediate({
      identifier: instanceIdentifier
    });
  };
  /**
   * Remove a service instance from the cache, so we will create a new instance for this service
   * when people try to get this service again.
   *
   * NOTE: currently only firestore is using this functionality to support firestore shutdown.
   *
   * @param name The service name
   * @param instanceIdentifier instance identifier in case multiple instances are allowed
   * @internal
   */


  FirebaseAppImpl.prototype._removeServiceInstance = function (name, instanceIdentifier) {
    if (instanceIdentifier === void 0) {
      instanceIdentifier = DEFAULT_ENTRY_NAME;
    } // eslint-disable-next-line @typescript-eslint/no-explicit-any


    this.container.getProvider(name).clearInstance(instanceIdentifier);
  };
  /**
   * @param component the component being added to this app's container
   */


  FirebaseAppImpl.prototype._addComponent = function (component) {
    try {
      this.container.addComponent(component);
    } catch (e) {
      logger.debug("Component " + component.name + " failed to register with FirebaseApp " + this.name, e);
    }
  };

  FirebaseAppImpl.prototype._addOrOverwriteComponent = function (component) {
    this.container.addOrOverwriteComponent(component);
  };
  /**
   * This function will throw an Error if the App has already been deleted -
   * use before performing API actions on the App.
   */


  FirebaseAppImpl.prototype.checkDestroyed_ = function () {
    if (this.isDeleted_) {
      throw ERROR_FACTORY.create("app-deleted"
      /* APP_DELETED */
      , {
        appName: this.name_
      });
    }
  };

  return FirebaseAppImpl;
}(); // Prevent dead-code elimination of these methods w/o invalid property
// copying.


FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options || FirebaseAppImpl.prototype.delete || console.log('dc');
var version$1 = "7.20.0";
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Because auth can't share code with other components, we attach the utility functions
 * in an internal namespace to share code.
 * This function return a firebase namespace object without
 * any utility functions, so it can be shared between the regular firebaseNamespace and
 * the lite version.
 */

function createFirebaseNamespaceCore(firebaseAppImpl) {
  var apps = {}; // eslint-disable-next-line @typescript-eslint/no-explicit-any

  var components = new Map(); // A namespace is a plain JavaScript Object.

  var namespace = {
    // Hack to prevent Babel from modifying the object returned
    // as the firebase namespace.
    // @ts-ignore
    __esModule: true,
    initializeApp: initializeApp,
    // @ts-ignore
    app: app,
    registerVersion: registerVersion,
    setLogLevel: logger$1.setLogLevel,
    onLog: onLog,
    // @ts-ignore
    apps: null,
    SDK_VERSION: version$1,
    INTERNAL: {
      registerComponent: registerComponent,
      removeApp: removeApp,
      components: components,
      useAsService: useAsService
    }
  }; // Inject a circular default export to allow Babel users who were previously
  // using:
  //
  //   import firebase from 'firebase';
  //   which becomes: var firebase = require('firebase').default;
  //
  // instead of
  //
  //   import * as firebase from 'firebase';
  //   which becomes: var firebase = require('firebase');
  // eslint-disable-next-line @typescript-eslint/no-explicit-any

  namespace['default'] = namespace; // firebase.apps is a read-only getter.

  Object.defineProperty(namespace, 'apps', {
    get: getApps
  });
  /**
   * Called by App.delete() - but before any services associated with the App
   * are deleted.
   */

  function removeApp(name) {
    delete apps[name];
  }
  /**
   * Get the App object for a given name (or DEFAULT).
   */


  function app(name) {
    name = name || DEFAULT_ENTRY_NAME;

    if (!util.contains(apps, name)) {
      throw ERROR_FACTORY.create("no-app"
      /* NO_APP */
      , {
        appName: name
      });
    }

    return apps[name];
  } // @ts-ignore


  app['App'] = firebaseAppImpl;

  function initializeApp(options, rawConfig) {
    if (rawConfig === void 0) {
      rawConfig = {};
    }

    if (typeof rawConfig !== 'object' || rawConfig === null) {
      var name_1 = rawConfig;
      rawConfig = {
        name: name_1
      };
    }

    var config = rawConfig;

    if (config.name === undefined) {
      config.name = DEFAULT_ENTRY_NAME;
    }

    var name = config.name;

    if (typeof name !== 'string' || !name) {
      throw ERROR_FACTORY.create("bad-app-name"
      /* BAD_APP_NAME */
      , {
        appName: String(name)
      });
    }

    if (util.contains(apps, name)) {
      throw ERROR_FACTORY.create("duplicate-app"
      /* DUPLICATE_APP */
      , {
        appName: name
      });
    }

    var app = new firebaseAppImpl(options, config, namespace);
    apps[name] = app;
    return app;
  }
  /*
   * Return an array of all the non-deleted FirebaseApps.
   */


  function getApps() {
    // Make a copy so caller cannot mutate the apps list.
    return Object.keys(apps).map(function (name) {
      return apps[name];
    });
  }

  function registerComponent(component) {
    var e_1, _a;

    var componentName = component.name;

    if (components.has(componentName)) {
      logger.debug("There were multiple attempts to register component " + componentName + ".");
      return component.type === "PUBLIC"
      /* PUBLIC */
      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any
      namespace[componentName] : null;
    }

    components.set(componentName, component); // create service namespace for public components

    if (component.type === "PUBLIC"
    /* PUBLIC */
    ) {
        // The Service namespace is an accessor function ...
        var serviceNamespace = function serviceNamespace(appArg) {
          if (appArg === void 0) {
            appArg = app();
          } // eslint-disable-next-line @typescript-eslint/no-explicit-any


          if (typeof appArg[componentName] !== 'function') {
            // Invalid argument.
            // This happens in the following case: firebase.storage('gs:/')
            throw ERROR_FACTORY.create("invalid-app-argument"
            /* INVALID_APP_ARGUMENT */
            , {
              appName: componentName
            });
          } // Forward service instance lookup to the FirebaseApp.
          // eslint-disable-next-line @typescript-eslint/no-explicit-any


          return appArg[componentName]();
        }; // ... and a container for service-level properties.


        if (component.serviceProps !== undefined) {
          util.deepExtend(serviceNamespace, component.serviceProps);
        } // eslint-disable-next-line @typescript-eslint/no-explicit-any


        namespace[componentName] = serviceNamespace; // Patch the FirebaseAppImpl prototype
        // eslint-disable-next-line @typescript-eslint/no-explicit-any

        firebaseAppImpl.prototype[componentName] = // TODO: The eslint disable can be removed and the 'ignoreRestArgs'
        // option added to the no-explicit-any rule when ESlint releases it.
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        function () {
          var args = [];

          for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
          }

          var serviceFxn = this._getService.bind(this, componentName);

          return serviceFxn.apply(this, component.multipleInstances ? args : []);
        };
      }

    try {
      // add the component to existing app instances
      for (var _b = tslib.__values(Object.keys(apps)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var appName = _c.value;

        apps[appName]._addComponent(component);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return component.type === "PUBLIC"
    /* PUBLIC */
    ? // eslint-disable-next-line @typescript-eslint/no-explicit-any
    namespace[componentName] : null;
  }

  function registerVersion(libraryKeyOrName, version, variant) {
    var _a; // TODO: We can use this check to whitelist strings when/if we set up
    // a good whitelist system.


    var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;

    if (variant) {
      library += "-" + variant;
    }

    var libraryMismatch = library.match(/\s|\//);
    var versionMismatch = version.match(/\s|\//);

    if (libraryMismatch || versionMismatch) {
      var warning = ["Unable to register library \"" + library + "\" with version \"" + version + "\":"];

      if (libraryMismatch) {
        warning.push("library name \"" + library + "\" contains illegal characters (whitespace or \"/\")");
      }

      if (libraryMismatch && versionMismatch) {
        warning.push('and');
      }

      if (versionMismatch) {
        warning.push("version name \"" + version + "\" contains illegal characters (whitespace or \"/\")");
      }

      logger.warn(warning.join(' '));
      return;
    }

    registerComponent(new component.Component(library + "-version", function () {
      return {
        library: library,
        version: version
      };
    }, "VERSION"
    /* VERSION */
    ));
  }

  function onLog(logCallback, options) {
    if (logCallback !== null && typeof logCallback !== 'function') {
      throw ERROR_FACTORY.create("invalid-log-argument"
      /* INVALID_LOG_ARGUMENT */
      , {
        appName: name
      });
    }

    logger$1.setUserLogHandler(logCallback, options);
  } // Map the requested service to a registered service name
  // (used to map auth to serverAuth service when needed).


  function useAsService(app, name) {
    if (name === 'serverAuth') {
      return null;
    }

    var useService = name;
    return useService;
  }

  return namespace;
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Return a firebase namespace object.
 *
 * In production, this will be called exactly once and the result
 * assigned to the 'firebase' global.  It may be called multiple times
 * in unit tests.
 */


function createFirebaseNamespace() {
  var namespace = createFirebaseNamespaceCore(FirebaseAppImpl);
  namespace.INTERNAL = tslib.__assign(tslib.__assign({}, namespace.INTERNAL), {
    createFirebaseNamespace: createFirebaseNamespace,
    extendNamespace: extendNamespace,
    createSubscribe: util.createSubscribe,
    ErrorFactory: util.ErrorFactory,
    deepExtend: util.deepExtend
  });
  /**
   * Patch the top-level firebase namespace with additional properties.
   *
   * firebase.INTERNAL.extendNamespace()
   */

  function extendNamespace(props) {
    util.deepExtend(namespace, props);
  }

  return namespace;
}

var firebase = createFirebaseNamespace();
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var PlatformLoggerService =
/** @class */

/*@__PURE__*/
function () {
  function PlatformLoggerService(container) {
    this.container = container;
  } // In initial implementation, this will be called by installations on
  // auth token refresh, and installations will send this string.


  PlatformLoggerService.prototype.getPlatformInfoString = function () {
    var providers = this.container.getProviders(); // Loop through providers and get library/version pairs from any that are
    // version components.

    return providers.map(function (provider) {
      if (isVersionServiceProvider(provider)) {
        var service = provider.getImmediate();
        return service.library + "/" + service.version;
      } else {
        return null;
      }
    }).filter(function (logString) {
      return logString;
    }).join(' ');
  };

  return PlatformLoggerService;
}();
/**
 *
 * @param provider check if this provider provides a VersionService
 *
 * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider
 * provides VersionService. The provider is not necessarily a 'app-version'
 * provider.
 */


function isVersionServiceProvider(provider) {
  var component = provider.getComponent();
  return (component === null || component === void 0 ? void 0 : component.type) === "VERSION"
  /* VERSION */
  ;
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function registerCoreComponents(firebase, variant) {
  firebase.INTERNAL.registerComponent(new component.Component('platform-logger', function (container) {
    return new PlatformLoggerService(container);
  }, "PRIVATE"
  /* PRIVATE */
  )); // Register `app` package.

  firebase.registerVersion(name$1, version, variant); // Register platform SDK identifier (no version).

  firebase.registerVersion('fire-js', '');
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Firebase Lite detection test
// eslint-disable-next-line @typescript-eslint/no-explicit-any


if (util.isBrowser() && self.firebase !== undefined) {
  logger.warn("\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  "); // eslint-disable-next-line

  var sdkVersion = self.firebase.SDK_VERSION;

  if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {
    logger.warn("\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    ");
  }
}

var initializeApp = firebase.initializeApp; // TODO: This disable can be removed and the 'ignoreRestArgs' option added to
// the no-explicit-any rule when ESlint releases it.
// eslint-disable-next-line @typescript-eslint/no-explicit-any

firebase.initializeApp = function () {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  } // Environment check before initializing app
  // Do the check in initializeApp, so people have a chance to disable it by setting logLevel
  // in @firebase/logger


  if (util.isNode()) {
    logger.warn("\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\n      run in a Node environment.  If running in a Node environment, make sure you\n      are using the bundle specified by the \"main\" field in package.json.\n      \n      If you are using Webpack, you can specify \"main\" as the first item in\n      \"resolve.mainFields\":\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\n      \n      If using Rollup, use the rollup-plugin-node-resolve plugin and specify \"main\"\n      as the first item in \"mainFields\", e.g. ['main', 'module'].\n      https://github.com/rollup/rollup-plugin-node-resolve\n      ");
  }

  return initializeApp.apply(undefined, args);
};

var firebase$1 = firebase;
registerCoreComponents(firebase$1);
exports.default = firebase$1;
exports.firebase = firebase$1;

/***/ }),

/***/ "x+ZX":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/refCount.js ***!
  \*******************************************************************/
/*! exports provided: refCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "refCount", function() { return refCount; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");





function refCount() {
  return function refCountOperatorFunction(source) {
    return source.lift(new RefCountOperator(source));
  };
}

var RefCountOperator = /*#__PURE__*/function () {
  function RefCountOperator(connectable) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, RefCountOperator);

    this.connectable = connectable;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(RefCountOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      var connectable = this.connectable;
      connectable._refCount++;
      var refCounter = new RefCountSubscriber(subscriber, connectable);
      var subscription = source.subscribe(refCounter);

      if (!refCounter.closed) {
        refCounter.connection = connectable.connect();
      }

      return subscription;
    }
  }]);

  return RefCountOperator;
}();

var RefCountSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(RefCountSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(RefCountSubscriber);

  function RefCountSubscriber(destination, connectable) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, RefCountSubscriber);

    _this = _super.call(this, destination);
    _this.connectable = connectable;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(RefCountSubscriber, [{
    key: "_unsubscribe",
    value: function _unsubscribe() {
      var connectable = this.connectable;

      if (!connectable) {
        this.connection = null;
        return;
      }

      this.connectable = null;
      var refCount = connectable._refCount;

      if (refCount <= 0) {
        this.connection = null;
        return;
      }

      connectable._refCount = refCount - 1;

      if (refCount > 1) {
        this.connection = null;
        return;
      }

      var connection = this.connection;
      var sharedConnection = connectable._connection;
      this.connection = null;

      if (sharedConnection && (!connection || sharedConnection === connection)) {
        sharedConnection.unsubscribe();
      }
    }
  }]);

  return RefCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "x7I3":
/*!*********************************************************************!*\
  !*** ./node_modules/@firebase/webchannel-wrapper/dist/index.esm.js ***!
  \*********************************************************************/
/*! exports provided: default, ErrorCode, EventType, WebChannel, XhrIo, createWebChannelTransport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorCode", function() { return ErrorCode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventType", function() { return EventType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WebChannel", function() { return WebChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XhrIo", function() { return XhrIo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createWebChannelTransport", function() { return createWebChannelTransport; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

/* global Reflect, Promise */
var _extendStatics = function extendStatics(d, b) {
  _extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    }
  };

  return _extendStatics(d, b);
};

function __extends(d, b) {
  _extendStatics(d, b);

  function __() {
    this.constructor = d;
  }

  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};
var g,
    goog = goog || {},
    k = commonjsGlobal || self;

function aa() {}

function ba(a) {
  var b = typeof a;
  return "object" != b ? b : a ? Array.isArray(a) ? "array" : b : "null";
}

function ca(a) {
  var b = ba(a);
  return "array" == b || "object" == b && "number" == typeof a.length;
}

function n(a) {
  var b = typeof a;
  return "object" == b && null != a || "function" == b;
}

function da(a) {
  return Object.prototype.hasOwnProperty.call(a, ea) && a[ea] || (a[ea] = ++fa);
}

var ea = "closure_uid_" + (1E9 * Math.random() >>> 0),
    fa = 0;

function ha(a, b, c) {
  return a.call.apply(a.bind, arguments);
}

function ja(a, b, c) {
  if (!a) throw Error();

  if (2 < arguments.length) {
    var d = Array.prototype.slice.call(arguments, 2);
    return function () {
      var e = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(e, d);
      return a.apply(b, e);
    };
  }

  return function () {
    return a.apply(b, arguments);
  };
}

function p(a, b, c) {
  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? p = ha : p = ja;
  return p.apply(null, arguments);
}

function ka(a, b) {
  var c = Array.prototype.slice.call(arguments, 1);
  return function () {
    var d = c.slice();
    d.push.apply(d, arguments);
    return a.apply(this, d);
  };
}

var q = Date.now;

function r(a, b) {
  function c() {}

  c.prototype = b.prototype;
  a.S = b.prototype;
  a.prototype = new c();
  a.prototype.constructor = a;
}

function u() {
  this.j = this.j;
  this.i = this.i;
}

var la = 0;
u.prototype.j = !1;

u.prototype.ja = function () {
  if (!this.j && (this.j = !0, this.G(), 0 != la)) {
    var a = da(this);
  }
};

u.prototype.G = function () {
  if (this.i) for (; this.i.length;) {
    this.i.shift()();
  }
};

var na = Array.prototype.indexOf ? function (a, b) {
  return Array.prototype.indexOf.call(a, b, void 0);
} : function (a, b) {
  if ("string" === typeof a) return "string" !== typeof b || 1 != b.length ? -1 : a.indexOf(b, 0);

  for (var c = 0; c < a.length; c++) {
    if (c in a && a[c] === b) return c;
  }

  return -1;
},
    oa = Array.prototype.forEach ? function (a, b, c) {
  Array.prototype.forEach.call(a, b, c);
} : function (a, b, c) {
  for (var d = a.length, e = "string" === typeof a ? a.split("") : a, f = 0; f < d; f++) {
    f in e && b.call(c, e[f], f, a);
  }
};

function pa(a) {
  a: {
    var b = qa;

    for (var c = a.length, d = "string" === typeof a ? a.split("") : a, e = 0; e < c; e++) {
      if (e in d && b.call(void 0, d[e], e, a)) {
        b = e;
        break a;
      }
    }

    b = -1;
  }

  return 0 > b ? null : "string" === typeof a ? a.charAt(b) : a[b];
}

function ra(a) {
  return Array.prototype.concat.apply([], arguments);
}

function sa(a) {
  var b = a.length;

  if (0 < b) {
    for (var c = Array(b), d = 0; d < b; d++) {
      c[d] = a[d];
    }

    return c;
  }

  return [];
}

function ta(a) {
  return /^[\s\xa0]*$/.test(a);
}

var ua = String.prototype.trim ? function (a) {
  return a.trim();
} : function (a) {
  return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1];
};

function v(a, b) {
  return -1 != a.indexOf(b);
}

function xa(a, b) {
  return a < b ? -1 : a > b ? 1 : 0;
}

var w;

a: {
  var ya = k.navigator;

  if (ya) {
    var za = ya.userAgent;

    if (za) {
      w = za;
      break a;
    }
  }

  w = "";
}

function Aa(a, b, c) {
  for (var d in a) {
    b.call(c, a[d], d, a);
  }
}

function Ba(a) {
  var b = {};

  for (var c in a) {
    b[c] = a[c];
  }

  return b;
}

var Ca = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");

function Da(a, b) {
  var c, d;

  for (var e = 1; e < arguments.length; e++) {
    d = arguments[e];

    for (c in d) {
      a[c] = d[c];
    }

    for (var f = 0; f < Ca.length; f++) {
      c = Ca[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
    }
  }
}

function Ea(a) {
  Ea[" "](a);
  return a;
}

Ea[" "] = aa;

function Fa(a, b) {
  var c = Ga;
  return Object.prototype.hasOwnProperty.call(c, a) ? c[a] : c[a] = b(a);
}

var Ha = v(w, "Opera"),
    x = v(w, "Trident") || v(w, "MSIE"),
    Ia = v(w, "Edge"),
    Ja = Ia || x,
    Ka = v(w, "Gecko") && !(v(w.toLowerCase(), "webkit") && !v(w, "Edge")) && !(v(w, "Trident") || v(w, "MSIE")) && !v(w, "Edge"),
    La = v(w.toLowerCase(), "webkit") && !v(w, "Edge");

function Ma() {
  var a = k.document;
  return a ? a.documentMode : void 0;
}

var Na;

a: {
  var Oa = "",
      Pa = function () {
    var a = w;
    if (Ka) return /rv:([^\);]+)(\)|;)/.exec(a);
    if (Ia) return /Edge\/([\d\.]+)/.exec(a);
    if (x) return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);
    if (La) return /WebKit\/(\S+)/.exec(a);
    if (Ha) return /(?:Version)[ \/]?(\S+)/.exec(a);
  }();

  Pa && (Oa = Pa ? Pa[1] : "");

  if (x) {
    var Qa = Ma();

    if (null != Qa && Qa > parseFloat(Oa)) {
      Na = String(Qa);
      break a;
    }
  }

  Na = Oa;
}

var Ga = {};

function Ra(a) {
  return Fa(a, function () {
    {
      var b = 0;
      var e = ua(String(Na)).split("."),
          f = ua(String(a)).split("."),
          h = Math.max(e.length, f.length);

      for (var m = 0; 0 == b && m < h; m++) {
        var c = e[m] || "",
            d = f[m] || "";

        do {
          c = /(\d*)(\D*)(.*)/.exec(c) || ["", "", "", ""];
          d = /(\d*)(\D*)(.*)/.exec(d) || ["", "", "", ""];
          if (0 == c[0].length && 0 == d[0].length) break;
          b = xa(0 == c[1].length ? 0 : parseInt(c[1], 10), 0 == d[1].length ? 0 : parseInt(d[1], 10)) || xa(0 == c[2].length, 0 == d[2].length) || xa(c[2], d[2]);
          c = c[3];
          d = d[3];
        } while (0 == b);
      }
    }
    return 0 <= b;
  });
}

var Sa;

if (k.document && x) {
  var Ta = Ma();
  Sa = Ta ? Ta : parseInt(Na, 10) || void 0;
} else Sa = void 0;

var Ua = Sa;

var Va = !x || 9 <= Number(Ua),
    Wa = x && !Ra("9"),
    Xa = function () {
  if (!k.addEventListener || !Object.defineProperty) return !1;
  var a = !1,
      b = Object.defineProperty({}, "passive", {
    get: function get() {
      a = !0;
    }
  });

  try {
    k.addEventListener("test", aa, b), k.removeEventListener("test", aa, b);
  } catch (c) {}

  return a;
}();

function y(a, b) {
  this.type = a;
  this.a = this.target = b;
  this.defaultPrevented = !1;
}

y.prototype.b = function () {
  this.defaultPrevented = !0;
};

function A(a, b) {
  y.call(this, a ? a.type : "");
  this.relatedTarget = this.a = this.target = null;
  this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;
  this.key = "";
  this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;
  this.pointerId = 0;
  this.pointerType = "";
  this.c = null;

  if (a) {
    var c = this.type = a.type,
        d = a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : null;
    this.target = a.target || a.srcElement;
    this.a = b;

    if (b = a.relatedTarget) {
      if (Ka) {
        a: {
          try {
            Ea(b.nodeName);
            var e = !0;
            break a;
          } catch (f) {}

          e = !1;
        }

        e || (b = null);
      }
    } else "mouseover" == c ? b = a.fromElement : "mouseout" == c && (b = a.toElement);

    this.relatedTarget = b;
    d ? (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = d.screenX || 0, this.screenY = d.screenY || 0) : (this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0);
    this.button = a.button;
    this.key = a.key || "";
    this.ctrlKey = a.ctrlKey;
    this.altKey = a.altKey;
    this.shiftKey = a.shiftKey;
    this.metaKey = a.metaKey;
    this.pointerId = a.pointerId || 0;
    this.pointerType = "string" === typeof a.pointerType ? a.pointerType : Ya[a.pointerType] || "";
    this.c = a;
    a.defaultPrevented && this.b();
  }
}

r(A, y);
var Ya = {
  2: "touch",
  3: "pen",
  4: "mouse"
};

A.prototype.b = function () {
  A.S.b.call(this);
  var a = this.c;
  if (a.preventDefault) a.preventDefault();else if (a.returnValue = !1, Wa) try {
    if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode) a.keyCode = -1;
  } catch (b) {}
};

var C = "closure_listenable_" + (1E6 * Math.random() | 0),
    Za = 0;

function $a(a, b, c, d, e) {
  this.listener = a;
  this.proxy = null;
  this.src = b;
  this.type = c;
  this.capture = !!d;
  this.ca = e;
  this.key = ++Za;
  this.Y = this.Z = !1;
}

function ab(a) {
  a.Y = !0;
  a.listener = null;
  a.proxy = null;
  a.src = null;
  a.ca = null;
}

function bb(a) {
  this.src = a;
  this.a = {};
  this.b = 0;
}

bb.prototype.add = function (a, b, c, d, e) {
  var f = a.toString();
  a = this.a[f];
  a || (a = this.a[f] = [], this.b++);
  var h = cb(a, b, d, e);
  -1 < h ? (b = a[h], c || (b.Z = !1)) : (b = new $a(b, this.src, f, !!d, e), b.Z = c, a.push(b));
  return b;
};

function db(a, b) {
  var c = b.type;

  if (c in a.a) {
    var d = a.a[c],
        e = na(d, b),
        f;
    (f = 0 <= e) && Array.prototype.splice.call(d, e, 1);
    f && (ab(b), 0 == a.a[c].length && (delete a.a[c], a.b--));
  }
}

function cb(a, b, c, d) {
  for (var e = 0; e < a.length; ++e) {
    var f = a[e];
    if (!f.Y && f.listener == b && f.capture == !!c && f.ca == d) return e;
  }

  return -1;
}

var eb = "closure_lm_" + (1E6 * Math.random() | 0),
    fb = {};

function hb(a, b, c, d, e) {
  if (d && d.once) return ib(a, b, c, d, e);

  if (Array.isArray(b)) {
    for (var f = 0; f < b.length; f++) {
      hb(a, b[f], c, d, e);
    }

    return null;
  }

  c = jb(c);
  return a && a[C] ? a.va(b, c, n(d) ? !!d.capture : !!d, e) : kb(a, b, c, !1, d, e);
}

function kb(a, b, c, d, e, f) {
  if (!b) throw Error("Invalid event type");
  var h = n(e) ? !!e.capture : !!e;
  if (h && !Va) return null;
  var m = lb(a);
  m || (a[eb] = m = new bb(a));
  c = m.add(b, c, d, h, f);
  if (c.proxy) return c;
  d = mb();
  c.proxy = d;
  d.src = a;
  d.listener = c;
  if (a.addEventListener) Xa || (e = h), void 0 === e && (e = !1), a.addEventListener(b.toString(), d, e);else if (a.attachEvent) a.attachEvent(nb(b.toString()), d);else if (a.addListener && a.removeListener) a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");
  return c;
}

function mb() {
  var a = ob,
      b = Va ? function (c) {
    return a.call(b.src, b.listener, c);
  } : function (c) {
    c = a.call(b.src, b.listener, c);
    if (!c) return c;
  };
  return b;
}

function ib(a, b, c, d, e) {
  if (Array.isArray(b)) {
    for (var f = 0; f < b.length; f++) {
      ib(a, b[f], c, d, e);
    }

    return null;
  }

  c = jb(c);
  return a && a[C] ? a.wa(b, c, n(d) ? !!d.capture : !!d, e) : kb(a, b, c, !0, d, e);
}

function pb(a, b, c, d, e) {
  if (Array.isArray(b)) for (var f = 0; f < b.length; f++) {
    pb(a, b[f], c, d, e);
  } else (d = n(d) ? !!d.capture : !!d, c = jb(c), a && a[C]) ? (a = a.c, b = String(b).toString(), b in a.a && (f = a.a[b], c = cb(f, c, d, e), -1 < c && (ab(f[c]), Array.prototype.splice.call(f, c, 1), 0 == f.length && (delete a.a[b], a.b--)))) : a && (a = lb(a)) && (b = a.a[b.toString()], a = -1, b && (a = cb(b, c, d, e)), (c = -1 < a ? b[a] : null) && rb(c));
}

function rb(a) {
  if ("number" !== typeof a && a && !a.Y) {
    var b = a.src;
    if (b && b[C]) db(b.c, a);else {
      var c = a.type,
          d = a.proxy;
      b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent ? b.detachEvent(nb(c), d) : b.addListener && b.removeListener && b.removeListener(d);
      (c = lb(b)) ? (db(c, a), 0 == c.b && (c.src = null, b[eb] = null)) : ab(a);
    }
  }
}

function nb(a) {
  return a in fb ? fb[a] : fb[a] = "on" + a;
}

function sb(a, b) {
  var c = a.listener,
      d = a.ca || a.src;
  a.Z && rb(a);
  return c.call(d, b);
}

function ob(a, b) {
  if (a.Y) return !0;

  if (!Va) {
    if (!b) a: {
      b = ["window", "event"];

      for (var c = k, d = 0; d < b.length; d++) {
        if (c = c[b[d]], null == c) {
          b = null;
          break a;
        }
      }

      b = c;
    }
    b = new A(b, this);
    return sb(a, b);
  }

  return sb(a, new A(b, this));
}

function lb(a) {
  a = a[eb];
  return a instanceof bb ? a : null;
}

var tb = "__closure_events_fn_" + (1E9 * Math.random() >>> 0);

function jb(a) {
  if ("function" == ba(a)) return a;
  a[tb] || (a[tb] = function (b) {
    return a.handleEvent(b);
  });
  return a[tb];
}

function D() {
  u.call(this);
  this.c = new bb(this);
  this.J = this;
  this.C = null;
}

r(D, u);
D.prototype[C] = !0;
g = D.prototype;

g.addEventListener = function (a, b, c, d) {
  hb(this, a, b, c, d);
};

g.removeEventListener = function (a, b, c, d) {
  pb(this, a, b, c, d);
};

g.dispatchEvent = function (a) {
  var b,
      c = this.C;
  if (c) for (b = []; c; c = c.C) {
    b.push(c);
  }
  c = this.J;
  var d = a.type || a;
  if ("string" === typeof a) a = new y(a, c);else if (a instanceof y) a.target = a.target || c;else {
    var e = a;
    a = new y(d, c);
    Da(a, e);
  }
  e = !0;
  if (b) for (var f = b.length - 1; 0 <= f; f--) {
    var h = a.a = b[f];
    e = ub(h, d, !0, a) && e;
  }
  h = a.a = c;
  e = ub(h, d, !0, a) && e;
  e = ub(h, d, !1, a) && e;
  if (b) for (f = 0; f < b.length; f++) {
    h = a.a = b[f], e = ub(h, d, !1, a) && e;
  }
  return e;
};

g.G = function () {
  D.S.G.call(this);

  if (this.c) {
    var a = this.c,
        c;

    for (c in a.a) {
      for (var d = a.a[c], e = 0; e < d.length; e++) {
        ab(d[e]);
      }

      delete a.a[c];
      a.b--;
    }
  }

  this.C = null;
};

g.va = function (a, b, c, d) {
  return this.c.add(String(a), b, !1, c, d);
};

g.wa = function (a, b, c, d) {
  return this.c.add(String(a), b, !0, c, d);
};

function ub(a, b, c, d) {
  b = a.c.a[String(b)];
  if (!b) return !0;
  b = b.concat();

  for (var e = !0, f = 0; f < b.length; ++f) {
    var h = b[f];

    if (h && !h.Y && h.capture == c) {
      var m = h.listener,
          l = h.ca || h.src;
      h.Z && db(a.c, h);
      e = !1 !== m.call(l, d) && e;
    }
  }

  return e && !d.defaultPrevented;
}

var vb = k.JSON.stringify;

function wb() {
  this.b = this.a = null;
}

var yb = new (
/** @class */
function () {
  function class_1(a, b, c) {
    this.f = c;
    this.c = a;
    this.g = b;
    this.b = 0;
    this.a = null;
  }

  class_1.prototype.get = function () {
    var a;
    0 < this.b ? (this.b--, a = this.a, this.a = a.next, a.next = null) : a = this.c();
    return a;
  };

  return class_1;
}())(function () {
  return new xb();
}, function (a) {
  a.reset();
}, 100);

wb.prototype.add = function (a, b) {
  var c = yb.get();
  c.set(a, b);
  this.b ? this.b.next = c : this.a = c;
  this.b = c;
};

function zb() {
  var a = Ab,
      b = null;
  a.a && (b = a.a, a.a = a.a.next, a.a || (a.b = null), b.next = null);
  return b;
}

function xb() {
  this.next = this.b = this.a = null;
}

xb.prototype.set = function (a, b) {
  this.a = a;
  this.b = b;
  this.next = null;
};

xb.prototype.reset = function () {
  this.next = this.b = this.a = null;
};

function Bb(a) {
  k.setTimeout(function () {
    throw a;
  }, 0);
}

function Cb(a, b) {
  Db || Eb();
  Fb || (Db(), Fb = !0);
  Ab.add(a, b);
}

var Db;

function Eb() {
  var a = k.Promise.resolve(void 0);

  Db = function Db() {
    a.then(Gb);
  };
}

var Fb = !1,
    Ab = new wb();

function Gb() {
  for (var a; a = zb();) {
    try {
      a.a.call(a.b);
    } catch (c) {
      Bb(c);
    }

    var b = yb;
    b.g(a);
    b.b < b.f && (b.b++, a.next = b.a, b.a = a);
  }

  Fb = !1;
}

function Hb(a, b) {
  D.call(this);
  this.b = a || 1;
  this.a = b || k;
  this.f = p(this.Ya, this);
  this.g = q();
}

r(Hb, D);
g = Hb.prototype;
g.aa = !1;
g.M = null;

g.Ya = function () {
  if (this.aa) {
    var a = q() - this.g;
    0 < a && a < .8 * this.b ? this.M = this.a.setTimeout(this.f, this.b - a) : (this.M && (this.a.clearTimeout(this.M), this.M = null), this.dispatchEvent("tick"), this.aa && (Ib(this), this.start()));
  }
};

g.start = function () {
  this.aa = !0;
  this.M || (this.M = this.a.setTimeout(this.f, this.b), this.g = q());
};

function Ib(a) {
  a.aa = !1;
  a.M && (a.a.clearTimeout(a.M), a.M = null);
}

g.G = function () {
  Hb.S.G.call(this);
  Ib(this);
  delete this.a;
};

function Jb(a, b, c) {
  if ("function" == ba(a)) c && (a = p(a, c));else if (a && "function" == typeof a.handleEvent) a = p(a.handleEvent, a);else throw Error("Invalid listener argument");
  return 2147483647 < Number(b) ? -1 : k.setTimeout(a, b || 0);
}

function Kb(a) {
  a.a = Jb(function () {
    a.a = null;
    a.c && (a.c = !1, Kb(a));
  }, a.h);
  var b = a.b;
  a.b = null;
  a.g.apply(null, b);
}

var Lb =
/** @class */

/*@__PURE__*/
function (_super) {
  __extends(Lb, _super);

  function Lb(a, b, c) {
    var _this = _super.call(this) || this;

    _this.g = null != c ? a.bind(c) : a;
    _this.h = b;
    _this.b = null;
    _this.c = !1;
    _this.a = null;
    return _this;
  }

  Lb.prototype.f = function (a) {
    this.b = arguments;
    this.a ? this.c = !0 : Kb(this);
  };

  Lb.prototype.G = function () {
    _super.prototype.G.call(this);

    this.a && (k.clearTimeout(this.a), this.a = null, this.c = !1, this.b = null);
  };

  return Lb;
}(u);

function E(a) {
  u.call(this);
  this.b = a;
  this.a = {};
}

r(E, u);
var Mb = [];

function Nb(a, b, c, d) {
  Array.isArray(c) || (c && (Mb[0] = c.toString()), c = Mb);

  for (var e = 0; e < c.length; e++) {
    var f = hb(b, c[e], d || a.handleEvent, !1, a.b || a);
    if (!f) break;
    a.a[f.key] = f;
  }
}

function Ob(a) {
  Aa(a.a, function (b, c) {
    this.a.hasOwnProperty(c) && rb(b);
  }, a);
  a.a = {};
}

E.prototype.G = function () {
  E.S.G.call(this);
  Ob(this);
};

E.prototype.handleEvent = function () {
  throw Error("EventHandler.handleEvent not implemented");
};

function Pb() {
  this.a = !0;
}

function Qb(a, b, c, d, e, f) {
  a.info(function () {
    if (a.a) {
      if (f) {
        var h = "";

        for (var m = f.split("&"), l = 0; l < m.length; l++) {
          var t = m[l].split("=");

          if (1 < t.length) {
            var B = t[0];
            t = t[1];
            var z = B.split("_");
            h = 2 <= z.length && "type" == z[1] ? h + (B + "=" + t + "&") : h + (B + "=redacted&");
          }
        }
      } else h = null;
    } else h = f;
    return "XMLHTTP REQ (" + d + ") [attempt " + e + "]: " + b + "\n" + c + "\n" + h;
  });
}

function Rb(a, b, c, d, e, f, h) {
  a.info(function () {
    return "XMLHTTP RESP (" + d + ") [ attempt " + e + "]: " + b + "\n" + c + "\n" + f + " " + h;
  });
}

function F(a, b, c, d) {
  a.info(function () {
    return "XMLHTTP TEXT (" + b + "): " + Sb(a, c) + (d ? " " + d : "");
  });
}

function Tb(a, b) {
  a.info(function () {
    return "TIMEOUT: " + b;
  });
}

Pb.prototype.info = function () {};

function Sb(a, b) {
  if (!a.a) return b;
  if (!b) return null;

  try {
    var c = JSON.parse(b);
    if (c) for (a = 0; a < c.length; a++) {
      if (Array.isArray(c[a])) {
        var d = c[a];

        if (!(2 > d.length)) {
          var e = d[1];

          if (Array.isArray(e) && !(1 > e.length)) {
            var f = e[0];
            if ("noop" != f && "stop" != f && "close" != f) for (var h = 1; h < e.length; h++) {
              e[h] = "";
            }
          }
        }
      }
    }
    return vb(c);
  } catch (m) {
    return b;
  }
}

var Ub = null;

function Vb() {
  return Ub = Ub || new D();
}

function Wb(a) {
  y.call(this, "serverreachability", a);
}

r(Wb, y);

function G(a) {
  var b = Vb();
  b.dispatchEvent(new Wb(b, a));
}

function Xb(a) {
  y.call(this, "statevent", a);
}

r(Xb, y);

function H(a) {
  var b = Vb();
  b.dispatchEvent(new Xb(b, a));
}

function Yb(a) {
  y.call(this, "timingevent", a);
}

r(Yb, y);

function I(a, b) {
  if ("function" != ba(a)) throw Error("Fn must not be null and must be a function");
  return k.setTimeout(function () {
    a();
  }, b);
}

var Zb = {
  NO_ERROR: 0,
  Za: 1,
  gb: 2,
  fb: 3,
  bb: 4,
  eb: 5,
  hb: 6,
  Da: 7,
  TIMEOUT: 8,
  kb: 9
};
var $b = {
  ab: "complete",
  ob: "success",
  Ea: "error",
  Da: "abort",
  mb: "ready",
  nb: "readystatechange",
  TIMEOUT: "timeout",
  ib: "incrementaldata",
  lb: "progress",
  cb: "downloadprogress",
  pb: "uploadprogress"
};

function ac() {}

ac.prototype.a = null;

function bc(a) {
  var b;
  (b = a.a) || (b = a.a = {});
  return b;
}

function cc() {}

var J = {
  OPEN: "a",
  $a: "b",
  Ea: "c",
  jb: "d"
};

function dc() {
  y.call(this, "d");
}

r(dc, y);

function ec() {
  y.call(this, "c");
}

r(ec, y);
var fc;

function gc() {}

r(gc, ac);
fc = new gc();

function K(a, b, c, d) {
  this.g = a;
  this.c = b;
  this.f = c;
  this.T = d || 1;
  this.J = new E(this);
  this.P = hc;
  a = Ja ? 125 : void 0;
  this.R = new Hb(a);
  this.B = null;
  this.b = !1;
  this.j = this.l = this.i = this.H = this.u = this.U = this.o = null;
  this.s = [];
  this.a = null;
  this.D = 0;
  this.h = this.m = null;
  this.N = -1;
  this.A = !1;
  this.O = 0;
  this.F = null;
  this.W = this.C = this.V = this.I = !1;
}

var hc = 45E3,
    ic = {},
    jc = {};
g = K.prototype;

g.setTimeout = function (a) {
  this.P = a;
};

function kc(a, b, c) {
  a.H = 1;
  a.i = lc(L(b));
  a.j = c;
  a.I = !0;
  mc(a, null);
}

function mc(a, b) {
  a.u = q();
  M(a);
  a.l = L(a.i);
  var c = a.l,
      d = a.T;
  Array.isArray(d) || (d = [String(d)]);
  nc(c.b, "t", d);
  a.D = 0;
  a.a = oc(a.g, a.g.C ? b : null);
  0 < a.O && (a.F = new Lb(p(a.Ca, a, a.a), a.O));
  Nb(a.J, a.a, "readystatechange", a.Wa);
  b = a.B ? Ba(a.B) : {};
  a.j ? (a.m || (a.m = "POST"), b["Content-Type"] = "application/x-www-form-urlencoded", a.a.ba(a.l, a.m, a.j, b)) : (a.m = "GET", a.a.ba(a.l, a.m, null, b));
  G(1);
  Qb(a.c, a.m, a.l, a.f, a.T, a.j);
}

g.Wa = function (a) {
  a = a.target;
  var b = this.F;
  b && 3 == N(a) ? b.f() : this.Ca(a);
};

g.Ca = function (a) {
  try {
    if (a == this.a) a: {
      var b = N(this.a),
          c = this.a.ua(),
          d = this.a.X();

      if (!(3 > b || 3 == b && !Ja && !this.a.$())) {
        this.A || 4 != b || 7 == c || (8 == c || 0 >= d ? G(3) : G(2));
        pc(this);
        var e = this.a.X();
        this.N = e;
        var f = this.a.$();
        this.b = 200 == e;
        Rb(this.c, this.m, this.l, this.f, this.T, b, e);

        if (this.b) {
          if (this.V && !this.C) {
            b: {
              if (this.a) {
                var h,
                    m = this.a;

                if ((h = m.a ? m.a.getResponseHeader("X-HTTP-Initial-Response") : null) && !ta(h)) {
                  var l = h;
                  break b;
                }
              }

              l = null;
            }

            if (l) F(this.c, this.f, l, "Initial handshake response via X-HTTP-Initial-Response"), this.C = !0, qc(this, l);else {
              this.b = !1;
              this.h = 3;
              H(12);
              O(this);
              rc(this);
              break a;
            }
          }

          this.I ? (tc(this, b, f), Ja && this.b && 3 == b && (Nb(this.J, this.R, "tick", this.Va), this.R.start())) : (F(this.c, this.f, f, null), qc(this, f));
          4 == b && O(this);
          this.b && !this.A && (4 == b ? uc(this.g, this) : (this.b = !1, M(this)));
        } else 400 == e && 0 < f.indexOf("Unknown SID") ? (this.h = 3, H(12)) : (this.h = 0, H(13)), O(this), rc(this);
      }
    }
  } catch (t) {} finally {}
};

function tc(a, b, c) {
  for (var d = !0; !a.A && a.D < c.length;) {
    var e = vc(a, c);

    if (e == jc) {
      4 == b && (a.h = 4, H(14), d = !1);
      F(a.c, a.f, null, "[Incomplete Response]");
      break;
    } else if (e == ic) {
      a.h = 4;
      H(15);
      F(a.c, a.f, c, "[Invalid Chunk]");
      d = !1;
      break;
    } else F(a.c, a.f, e, null), qc(a, e);
  }

  4 == b && 0 == c.length && (a.h = 1, H(16), d = !1);
  a.b = a.b && d;
  d ? 0 < c.length && !a.W && (a.W = !0, b = a.g, b.a == a && b.V && !b.F && (b.c.info("Great, no buffering proxy detected. Bytes received: " + c.length), xc(b), b.F = !0)) : (F(a.c, a.f, c, "[Invalid Chunked Response]"), O(a), rc(a));
}

g.Va = function () {
  if (this.a) {
    var a = N(this.a),
        b = this.a.$();
    this.D < b.length && (pc(this), tc(this, a, b), this.b && 4 != a && M(this));
  }
};

function vc(a, b) {
  var c = a.D,
      d = b.indexOf("\n", c);
  if (-1 == d) return jc;
  c = Number(b.substring(c, d));
  if (isNaN(c)) return ic;
  d += 1;
  if (d + c > b.length) return jc;
  b = b.substr(d, c);
  a.D = d + c;
  return b;
}

g.cancel = function () {
  this.A = !0;
  O(this);
};

function M(a) {
  a.U = q() + a.P;
  yc(a, a.P);
}

function yc(a, b) {
  if (null != a.o) throw Error("WatchDog timer not null");
  a.o = I(p(a.Ua, a), b);
}

function pc(a) {
  a.o && (k.clearTimeout(a.o), a.o = null);
}

g.Ua = function () {
  this.o = null;
  var a = q();
  0 <= a - this.U ? (Tb(this.c, this.l), 2 != this.H && (G(3), H(17)), O(this), this.h = 2, rc(this)) : yc(this, this.U - a);
};

function rc(a) {
  0 == a.g.v || a.A || uc(a.g, a);
}

function O(a) {
  pc(a);
  var b = a.F;
  b && "function" == typeof b.ja && b.ja();
  a.F = null;
  Ib(a.R);
  Ob(a.J);
  a.a && (b = a.a, a.a = null, b.abort(), b.ja());
}

function qc(a, b) {
  try {
    var c = a.g;
    if (0 != c.v && (c.a == a || zc(c.b, a))) if (c.I = a.N, !a.C && zc(c.b, a) && 3 == c.v) {
      try {
        var d = c.ka.a.parse(b);
      } catch (sc) {
        d = null;
      }

      if (Array.isArray(d) && 3 == d.length) {
        var e = d;
        if (0 == e[0]) a: {
          if (!c.j) {
            if (c.a) if (c.a.u + 3E3 < a.u) Ac(c), Bc(c);else break a;
            Cc(c);
            H(18);
          }
        } else c.oa = e[1], 0 < c.oa - c.P && 37500 > e[2] && c.H && 0 == c.o && !c.m && (c.m = I(p(c.Ra, c), 6E3));

        if (1 >= Dc(c.b) && c.ea) {
          try {
            c.ea();
          } catch (sc) {}

          c.ea = void 0;
        }
      } else P(c, 11);
    } else if ((a.C || c.a == a) && Ac(c), !ta(b)) for (b = d = c.ka.a.parse(b), d = 0; d < b.length; d++) {
      if (e = b[d], c.P = e[0], e = e[1], 2 == c.v) {
        if ("c" == e[0]) {
          c.J = e[1];
          c.ga = e[2];
          var f = e[3];
          null != f && (c.ha = f, c.c.info("VER=" + c.ha));
          var h = e[4];
          null != h && (c.pa = h, c.c.info("SVER=" + c.pa));
          var m = e[5];

          if (null != m && "number" === typeof m && 0 < m) {
            var l = 1.5 * m;
            c.D = l;
            c.c.info("backChannelRequestTimeoutMs_=" + l);
          }

          l = c;
          var t = a.a;

          if (t) {
            var B = t.a ? t.a.getResponseHeader("X-Client-Wire-Protocol") : null;

            if (B) {
              var z = l.b;
              !z.a && (v(B, "spdy") || v(B, "quic") || v(B, "h2")) && (z.f = z.g, z.a = new Set(), z.b && (Ec(z, z.b), z.b = null));
            }

            if (l.A) {
              var qb = t.a ? t.a.getResponseHeader("X-HTTP-Session-Id") : null;
              qb && (l.na = qb, Q(l.B, l.A, qb));
            }
          }

          c.v = 3;
          c.f && c.f.ta();
          c.V && (c.N = q() - a.u, c.c.info("Handshake RTT: " + c.N + "ms"));
          l = c;
          var va = a;
          l.la = Fc(l, l.C ? l.ga : null, l.fa);

          if (va.C) {
            Gc(l.b, va);
            var wa = va,
                wc = l.D;
            wc && wa.setTimeout(wc);
            wa.o && (pc(wa), M(wa));
            l.a = va;
          } else Hc(l);

          0 < c.g.length && Ic(c);
        } else "stop" != e[0] && "close" != e[0] || P(c, 7);
      } else 3 == c.v && ("stop" == e[0] || "close" == e[0] ? "stop" == e[0] ? P(c, 7) : Jc(c) : "noop" != e[0] && c.f && c.f.sa(e), c.o = 0);
    }
    G(4);
  } catch (sc) {}
}

function Kc(a) {
  if (a.K && "function" == typeof a.K) return a.K();
  if ("string" === typeof a) return a.split("");

  if (ca(a)) {
    for (var b = [], c = a.length, d = 0; d < c; d++) {
      b.push(a[d]);
    }

    return b;
  }

  b = [];
  c = 0;

  for (d in a) {
    b[c++] = a[d];
  }

  return a = b;
}

function Lc(a, b) {
  if (a.forEach && "function" == typeof a.forEach) a.forEach(b, void 0);else if (ca(a) || "string" === typeof a) oa(a, b, void 0);else {
    if (a.L && "function" == typeof a.L) var c = a.L();else if (a.K && "function" == typeof a.K) c = void 0;else if (ca(a) || "string" === typeof a) {
      c = [];

      for (var d = a.length, e = 0; e < d; e++) {
        c.push(e);
      }
    } else for (e in c = [], d = 0, a) {
      c[d++] = e;
    }
    d = Kc(a);
    e = d.length;

    for (var f = 0; f < e; f++) {
      b.call(void 0, d[f], c && c[f], a);
    }
  }
}

function R(a, b) {
  this.b = {};
  this.a = [];
  this.c = 0;
  var c = arguments.length;

  if (1 < c) {
    if (c % 2) throw Error("Uneven number of arguments");

    for (var d = 0; d < c; d += 2) {
      this.set(arguments[d], arguments[d + 1]);
    }
  } else if (a) if (a instanceof R) for (c = a.L(), d = 0; d < c.length; d++) {
    this.set(c[d], a.get(c[d]));
  } else for (d in a) {
    this.set(d, a[d]);
  }
}

g = R.prototype;

g.K = function () {
  Mc(this);

  for (var a = [], b = 0; b < this.a.length; b++) {
    a.push(this.b[this.a[b]]);
  }

  return a;
};

g.L = function () {
  Mc(this);
  return this.a.concat();
};

function Mc(a) {
  if (a.c != a.a.length) {
    for (var b = 0, c = 0; b < a.a.length;) {
      var d = a.a[b];
      S(a.b, d) && (a.a[c++] = d);
      b++;
    }

    a.a.length = c;
  }

  if (a.c != a.a.length) {
    var e = {};

    for (c = b = 0; b < a.a.length;) {
      d = a.a[b], S(e, d) || (a.a[c++] = d, e[d] = 1), b++;
    }

    a.a.length = c;
  }
}

g.get = function (a, b) {
  return S(this.b, a) ? this.b[a] : b;
};

g.set = function (a, b) {
  S(this.b, a) || (this.c++, this.a.push(a));
  this.b[a] = b;
};

g.forEach = function (a, b) {
  for (var c = this.L(), d = 0; d < c.length; d++) {
    var e = c[d],
        f = this.get(e);
    a.call(b, f, e, this);
  }
};

function S(a, b) {
  return Object.prototype.hasOwnProperty.call(a, b);
}

var Nc = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;

function Oc(a, b) {
  if (a) {
    a = a.split("&");

    for (var c = 0; c < a.length; c++) {
      var d = a[c].indexOf("="),
          e = null;

      if (0 <= d) {
        var f = a[c].substring(0, d);
        e = a[c].substring(d + 1);
      } else f = a[c];

      b(f, e ? decodeURIComponent(e.replace(/\+/g, " ")) : "");
    }
  }
}

function T(a, b) {
  this.c = this.j = this.f = "";
  this.h = null;
  this.i = this.g = "";
  this.a = !1;

  if (a instanceof T) {
    this.a = void 0 !== b ? b : a.a;
    Pc(this, a.f);
    this.j = a.j;
    Qc(this, a.c);
    Rc(this, a.h);
    this.g = a.g;
    b = a.b;
    var c = new U();
    c.c = b.c;
    b.a && (c.a = new R(b.a), c.b = b.b);
    Sc(this, c);
    this.i = a.i;
  } else a && (c = String(a).match(Nc)) ? (this.a = !!b, Pc(this, c[1] || "", !0), this.j = Tc(c[2] || ""), Qc(this, c[3] || "", !0), Rc(this, c[4]), this.g = Tc(c[5] || "", !0), Sc(this, c[6] || "", !0), this.i = Tc(c[7] || "")) : (this.a = !!b, this.b = new U(null, this.a));
}

T.prototype.toString = function () {
  var a = [],
      b = this.f;
  b && a.push(Uc(b, Vc, !0), ":");
  var c = this.c;
  if (c || "file" == b) a.push("//"), (b = this.j) && a.push(Uc(b, Vc, !0), "@"), a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g, "%$1")), c = this.h, null != c && a.push(":", String(c));
  if (c = this.g) this.c && "/" != c.charAt(0) && a.push("/"), a.push(Uc(c, "/" == c.charAt(0) ? Wc : Xc, !0));
  (c = this.b.toString()) && a.push("?", c);
  (c = this.i) && a.push("#", Uc(c, Yc));
  return a.join("");
};

function L(a) {
  return new T(a);
}

function Pc(a, b, c) {
  a.f = c ? Tc(b, !0) : b;
  a.f && (a.f = a.f.replace(/:$/, ""));
}

function Qc(a, b, c) {
  a.c = c ? Tc(b, !0) : b;
}

function Rc(a, b) {
  if (b) {
    b = Number(b);
    if (isNaN(b) || 0 > b) throw Error("Bad port number " + b);
    a.h = b;
  } else a.h = null;
}

function Sc(a, b, c) {
  b instanceof U ? (a.b = b, Zc(a.b, a.a)) : (c || (b = Uc(b, $c)), a.b = new U(b, a.a));
}

function Q(a, b, c) {
  a.b.set(b, c);
}

function lc(a) {
  Q(a, "zx", Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ q()).toString(36));
  return a;
}

function ad(a) {
  return a instanceof T ? L(a) : new T(a, void 0);
}

function bd(a, b, c, d) {
  var e = new T(null, void 0);
  a && Pc(e, a);
  b && Qc(e, b);
  c && Rc(e, c);
  d && (e.g = d);
  return e;
}

function Tc(a, b) {
  return a ? b ? decodeURI(a.replace(/%25/g, "%2525")) : decodeURIComponent(a) : "";
}

function Uc(a, b, c) {
  return "string" === typeof a ? (a = encodeURI(a).replace(b, cd), c && (a = a.replace(/%25([0-9a-fA-F]{2})/g, "%$1")), a) : null;
}

function cd(a) {
  a = a.charCodeAt(0);
  return "%" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);
}

var Vc = /[#\/\?@]/g,
    Xc = /[#\?:]/g,
    Wc = /[#\?]/g,
    $c = /[#\?@]/g,
    Yc = /#/g;

function U(a, b) {
  this.b = this.a = null;
  this.c = a || null;
  this.f = !!b;
}

function V(a) {
  a.a || (a.a = new R(), a.b = 0, a.c && Oc(a.c, function (b, c) {
    a.add(decodeURIComponent(b.replace(/\+/g, " ")), c);
  }));
}

g = U.prototype;

g.add = function (a, b) {
  V(this);
  this.c = null;
  a = W(this, a);
  var c = this.a.get(a);
  c || this.a.set(a, c = []);
  c.push(b);
  this.b += 1;
  return this;
};

function dd(a, b) {
  V(a);
  b = W(a, b);
  S(a.a.b, b) && (a.c = null, a.b -= a.a.get(b).length, a = a.a, S(a.b, b) && (delete a.b[b], a.c--, a.a.length > 2 * a.c && Mc(a)));
}

function ed(a, b) {
  V(a);
  b = W(a, b);
  return S(a.a.b, b);
}

g.forEach = function (a, b) {
  V(this);
  this.a.forEach(function (c, d) {
    oa(c, function (e) {
      a.call(b, e, d, this);
    }, this);
  }, this);
};

g.L = function () {
  V(this);

  for (var a = this.a.K(), b = this.a.L(), c = [], d = 0; d < b.length; d++) {
    for (var e = a[d], f = 0; f < e.length; f++) {
      c.push(b[d]);
    }
  }

  return c;
};

g.K = function (a) {
  V(this);
  var b = [];
  if ("string" === typeof a) ed(this, a) && (b = ra(b, this.a.get(W(this, a))));else {
    a = this.a.K();

    for (var c = 0; c < a.length; c++) {
      b = ra(b, a[c]);
    }
  }
  return b;
};

g.set = function (a, b) {
  V(this);
  this.c = null;
  a = W(this, a);
  ed(this, a) && (this.b -= this.a.get(a).length);
  this.a.set(a, [b]);
  this.b += 1;
  return this;
};

g.get = function (a, b) {
  if (!a) return b;
  a = this.K(a);
  return 0 < a.length ? String(a[0]) : b;
};

function nc(a, b, c) {
  dd(a, b);
  0 < c.length && (a.c = null, a.a.set(W(a, b), sa(c)), a.b += c.length);
}

g.toString = function () {
  if (this.c) return this.c;
  if (!this.a) return "";

  for (var a = [], b = this.a.L(), c = 0; c < b.length; c++) {
    var d = b[c],
        e = encodeURIComponent(String(d));
    d = this.K(d);

    for (var f = 0; f < d.length; f++) {
      var h = e;
      "" !== d[f] && (h += "=" + encodeURIComponent(String(d[f])));
      a.push(h);
    }
  }

  return this.c = a.join("&");
};

function W(a, b) {
  b = String(b);
  a.f && (b = b.toLowerCase());
  return b;
}

function Zc(a, b) {
  b && !a.f && (V(a), a.c = null, a.a.forEach(function (c, d) {
    var e = d.toLowerCase();
    d != e && (dd(this, d), nc(this, e, c));
  }, a));
  a.f = b;
}

function fd(a, b) {
  this.b = a;
  this.a = b;
}

function gd(a) {
  this.g = a || hd;
  k.PerformanceNavigationTiming ? (a = k.performance.getEntriesByType("navigation"), a = 0 < a.length && ("hq" == a[0].nextHopProtocol || "h2" == a[0].nextHopProtocol)) : a = !!(k.ia && k.ia.ya && k.ia.ya() && k.ia.ya().qb);
  this.f = a ? this.g : 1;
  this.a = null;
  1 < this.f && (this.a = new Set());
  this.b = null;
  this.c = [];
}

var hd = 10;

function id(a) {
  return a.b ? !0 : a.a ? a.a.size >= a.f : !1;
}

function Dc(a) {
  return a.b ? 1 : a.a ? a.a.size : 0;
}

function zc(a, b) {
  return a.b ? a.b == b : a.a ? a.a.has(b) : !1;
}

function Ec(a, b) {
  a.a ? a.a.add(b) : a.b = b;
}

function Gc(a, b) {
  a.b && a.b == b ? a.b = null : a.a && a.a.has(b) && a.a.delete(b);
}

gd.prototype.cancel = function () {
  var e_1, _a;

  this.c = jd(this);
  if (this.b) this.b.cancel(), this.b = null;else if (this.a && 0 !== this.a.size) {
    try {
      for (var _b = __values(this.a.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
        var a = _c.value;
        a.cancel();
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    this.a.clear();
  }
};

function jd(a) {
  var e_2, _a;

  if (null != a.b) return a.c.concat(a.b.s);

  if (null != a.a && 0 !== a.a.size) {
    var b = a.c;

    try {
      for (var _b = __values(a.a.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
        var c = _c.value;
        b = b.concat(c.s);
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }

    return b;
  }

  return sa(a.c);
}

function kd() {}

kd.prototype.stringify = function (a) {
  return k.JSON.stringify(a, void 0);
};

kd.prototype.parse = function (a) {
  return k.JSON.parse(a, void 0);
};

function ld() {
  this.a = new kd();
}

function md(a, b, c) {
  var d = c || "";

  try {
    Lc(a, function (e, f) {
      var h = e;
      n(e) && (h = vb(e));
      b.push(d + f + "=" + encodeURIComponent(h));
    });
  } catch (e) {
    throw b.push(d + "type=" + encodeURIComponent("_badmap")), e;
  }
}

function nd(a, b) {
  var c = new Pb();

  if (k.Image) {
    var d = new Image();
    d.onload = ka(od, c, d, "TestLoadImage: loaded", !0, b);
    d.onerror = ka(od, c, d, "TestLoadImage: error", !1, b);
    d.onabort = ka(od, c, d, "TestLoadImage: abort", !1, b);
    d.ontimeout = ka(od, c, d, "TestLoadImage: timeout", !1, b);
    k.setTimeout(function () {
      if (d.ontimeout) d.ontimeout();
    }, 1E4);
    d.src = a;
  } else b(!1);
}

function od(a, b, c, d, e) {
  try {
    b.onload = null, b.onerror = null, b.onabort = null, b.ontimeout = null, e(d);
  } catch (f) {}
}

var pd = k.JSON.parse;

function X(a) {
  D.call(this);
  this.headers = new R();
  this.H = a || null;
  this.b = !1;
  this.s = this.a = null;
  this.B = "";
  this.h = 0;
  this.f = "";
  this.g = this.A = this.l = this.u = !1;
  this.o = 0;
  this.m = null;
  this.I = qd;
  this.D = this.F = !1;
}

r(X, D);
var qd = "",
    rd = /^https?$/i,
    sd = ["POST", "PUT"];
g = X.prototype;

g.ba = function (a, b, c, d) {
  if (this.a) throw Error("[goog.net.XhrIo] Object is active with another request=" + this.B + "; newUri=" + a);
  b = b ? b.toUpperCase() : "GET";
  this.B = a;
  this.f = "";
  this.h = 0;
  this.u = !1;
  this.b = !0;
  this.a = new XMLHttpRequest();
  this.s = this.H ? bc(this.H) : bc(fc);
  this.a.onreadystatechange = p(this.za, this);

  try {
    this.A = !0, this.a.open(b, String(a), !0), this.A = !1;
  } catch (f) {
    td(this, f);
    return;
  }

  a = c || "";
  var e = new R(this.headers);
  d && Lc(d, function (f, h) {
    e.set(h, f);
  });
  d = pa(e.L());
  c = k.FormData && a instanceof k.FormData;
  !(0 <= na(sd, b)) || d || c || e.set("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");
  e.forEach(function (f, h) {
    this.a.setRequestHeader(h, f);
  }, this);
  this.I && (this.a.responseType = this.I);
  "withCredentials" in this.a && this.a.withCredentials !== this.F && (this.a.withCredentials = this.F);

  try {
    ud(this), 0 < this.o && ((this.D = vd(this.a)) ? (this.a.timeout = this.o, this.a.ontimeout = p(this.xa, this)) : this.m = Jb(this.xa, this.o, this)), this.l = !0, this.a.send(a), this.l = !1;
  } catch (f) {
    td(this, f);
  }
};

function vd(a) {
  return x && Ra(9) && "number" === typeof a.timeout && void 0 !== a.ontimeout;
}

function qa(a) {
  return "content-type" == a.toLowerCase();
}

g.xa = function () {
  "undefined" != typeof goog && this.a && (this.f = "Timed out after " + this.o + "ms, aborting", this.h = 8, this.dispatchEvent("timeout"), this.abort(8));
};

function td(a, b) {
  a.b = !1;
  a.a && (a.g = !0, a.a.abort(), a.g = !1);
  a.f = b;
  a.h = 5;
  wd(a);
  xd(a);
}

function wd(a) {
  a.u || (a.u = !0, a.dispatchEvent("complete"), a.dispatchEvent("error"));
}

g.abort = function (a) {
  this.a && this.b && (this.b = !1, this.g = !0, this.a.abort(), this.g = !1, this.h = a || 7, this.dispatchEvent("complete"), this.dispatchEvent("abort"), xd(this));
};

g.G = function () {
  this.a && (this.b && (this.b = !1, this.g = !0, this.a.abort(), this.g = !1), xd(this, !0));
  X.S.G.call(this);
};

g.za = function () {
  this.j || (this.A || this.l || this.g ? yd(this) : this.Ta());
};

g.Ta = function () {
  yd(this);
};

function yd(a) {
  if (a.b && "undefined" != typeof goog && (!a.s[1] || 4 != N(a) || 2 != a.X())) if (a.l && 4 == N(a)) Jb(a.za, 0, a);else if (a.dispatchEvent("readystatechange"), 4 == N(a)) {
    a.b = !1;

    try {
      var b = a.X();

      a: switch (b) {
        case 200:
        case 201:
        case 202:
        case 204:
        case 206:
        case 304:
        case 1223:
          var c = !0;
          break a;

        default:
          c = !1;
      }

      var d;

      if (!(d = c)) {
        var e;

        if (e = 0 === b) {
          var f = String(a.B).match(Nc)[1] || null;

          if (!f && k.self && k.self.location) {
            var h = k.self.location.protocol;
            f = h.substr(0, h.length - 1);
          }

          e = !rd.test(f ? f.toLowerCase() : "");
        }

        d = e;
      }

      if (d) a.dispatchEvent("complete"), a.dispatchEvent("success");else {
        a.h = 6;

        try {
          var m = 2 < N(a) ? a.a.statusText : "";
        } catch (l) {
          m = "";
        }

        a.f = m + " [" + a.X() + "]";
        wd(a);
      }
    } finally {
      xd(a);
    }
  }
}

function xd(a, b) {
  if (a.a) {
    ud(a);
    var c = a.a,
        d = a.s[0] ? aa : null;
    a.a = null;
    a.s = null;
    b || a.dispatchEvent("ready");

    try {
      c.onreadystatechange = d;
    } catch (e) {}
  }
}

function ud(a) {
  a.a && a.D && (a.a.ontimeout = null);
  a.m && (k.clearTimeout(a.m), a.m = null);
}

function N(a) {
  return a.a ? a.a.readyState : 0;
}

g.X = function () {
  try {
    return 2 < N(this) ? this.a.status : -1;
  } catch (a) {
    return -1;
  }
};

g.$ = function () {
  try {
    return this.a ? this.a.responseText : "";
  } catch (a) {
    return "";
  }
};

g.Na = function (a) {
  if (this.a) {
    var b = this.a.responseText;
    a && 0 == b.indexOf(a) && (b = b.substring(a.length));
    return pd(b);
  }
};

g.ua = function () {
  return this.h;
};

g.Qa = function () {
  return "string" === typeof this.f ? this.f : String(this.f);
};

function zd(a) {
  var b = "";
  Aa(a, function (c, d) {
    b += d;
    b += ":";
    b += c;
    b += "\r\n";
  });
  return b;
}

function Ad(a, b, c) {
  a: {
    for (d in c) {
      var d = !1;
      break a;
    }

    d = !0;
  }

  d || (c = zd(c), "string" === typeof a ? null != c && encodeURIComponent(String(c)) : Q(a, b, c));
}

function Bd(a, b, c) {
  return c && c.internalChannelParams ? c.internalChannelParams[a] || b : b;
}

function Cd(a) {
  this.pa = 0;
  this.g = [];
  this.c = new Pb();
  this.ga = this.la = this.B = this.fa = this.a = this.na = this.A = this.W = this.i = this.O = this.l = null;
  this.La = this.R = 0;
  this.Ia = Bd("failFast", !1, a);
  this.H = this.m = this.j = this.h = this.f = null;
  this.T = !0;
  this.I = this.oa = this.P = -1;
  this.U = this.o = this.u = 0;
  this.Fa = Bd("baseRetryDelayMs", 5E3, a);
  this.Ma = Bd("retryDelaySeedMs", 1E4, a);
  this.Ja = Bd("forwardChannelMaxRetries", 2, a);
  this.ma = Bd("forwardChannelRequestTimeoutMs", 2E4, a);
  this.Ka = a && a.g || void 0;
  this.D = void 0;
  this.C = a && a.supportsCrossDomainXhr || !1;
  this.J = "";
  this.b = new gd(a && a.concurrentRequestLimit);
  this.ka = new ld();
  this.da = a && a.fastHandshake || !1;
  this.Ga = a && a.b || !1;
  a && a.f && (this.c.a = !1);
  a && a.forceLongPolling && (this.T = !1);
  this.V = !this.da && this.T && a && a.c || !1;
  this.ea = void 0;
  this.N = 0;
  this.F = !1;
  this.s = null;
}

g = Cd.prototype;
g.ha = 8;
g.v = 1;

function Jc(a) {
  Dd(a);

  if (3 == a.v) {
    var b = a.R++,
        c = L(a.B);
    Q(c, "SID", a.J);
    Q(c, "RID", b);
    Q(c, "TYPE", "terminate");
    Ed(a, c);
    b = new K(a, a.c, b, void 0);
    b.H = 2;
    b.i = lc(L(c));
    c = !1;
    k.navigator && k.navigator.sendBeacon && (c = k.navigator.sendBeacon(b.i.toString(), ""));
    !c && k.Image && (new Image().src = b.i, c = !0);
    c || (b.a = oc(b.g, null), b.a.ba(b.i));
    b.u = q();
    M(b);
  }

  Fd(a);
}

function Bc(a) {
  a.a && (xc(a), a.a.cancel(), a.a = null);
}

function Dd(a) {
  Bc(a);
  a.j && (k.clearTimeout(a.j), a.j = null);
  Ac(a);
  a.b.cancel();
  a.h && ("number" === typeof a.h && k.clearTimeout(a.h), a.h = null);
}

function Gd(a, b) {
  a.g.push(new fd(a.La++, b));
  3 == a.v && Ic(a);
}

function Ic(a) {
  id(a.b) || a.h || (a.h = !0, Cb(a.Ba, a), a.u = 0);
}

function Hd(a, b) {
  if (Dc(a.b) >= a.b.f - (a.h ? 1 : 0)) return !1;
  if (a.h) return a.g = b.s.concat(a.g), !0;
  if (1 == a.v || 2 == a.v || a.u >= (a.Ia ? 0 : a.Ja)) return !1;
  a.h = I(p(a.Ba, a, b), Id(a, a.u));
  a.u++;
  return !0;
}

g.Ba = function (a) {
  if (this.h) if (this.h = null, 1 == this.v) {
    if (!a) {
      this.R = Math.floor(1E5 * Math.random());
      a = this.R++;
      var b = new K(this, this.c, a, void 0),
          c = this.l;
      this.O && (c ? (c = Ba(c), Da(c, this.O)) : c = this.O);
      null === this.i && (b.B = c);
      var d;
      if (this.da) a: {
        for (var e = d = 0; e < this.g.length; e++) {
          b: {
            var f = this.g[e];

            if ("__data__" in f.a && (f = f.a.__data__, "string" === typeof f)) {
              f = f.length;
              break b;
            }

            f = void 0;
          }

          if (void 0 === f) break;
          d += f;

          if (4096 < d) {
            d = e;
            break a;
          }

          if (4096 === d || e === this.g.length - 1) {
            d = e + 1;
            break a;
          }
        }

        d = 1E3;
      } else d = 1E3;
      d = Jd(this, b, d);
      e = L(this.B);
      Q(e, "RID", a);
      Q(e, "CVER", 22);
      this.A && Q(e, "X-HTTP-Session-Id", this.A);
      Ed(this, e);
      this.i && c && Ad(e, this.i, c);
      Ec(this.b, b);
      this.Ga && Q(e, "TYPE", "init");
      this.da ? (Q(e, "$req", d), Q(e, "SID", "null"), b.V = !0, kc(b, e, null)) : kc(b, e, d);
      this.v = 2;
    }
  } else 3 == this.v && (a ? Kd(this, a) : 0 == this.g.length || id(this.b) || Kd(this));
};

function Kd(a, b) {
  var c;
  b ? c = b.f : c = a.R++;
  var d = L(a.B);
  Q(d, "SID", a.J);
  Q(d, "RID", c);
  Q(d, "AID", a.P);
  Ed(a, d);
  a.i && a.l && Ad(d, a.i, a.l);
  c = new K(a, a.c, c, a.u + 1);
  null === a.i && (c.B = a.l);
  b && (a.g = b.s.concat(a.g));
  b = Jd(a, c, 1E3);
  c.setTimeout(Math.round(.5 * a.ma) + Math.round(.5 * a.ma * Math.random()));
  Ec(a.b, c);
  kc(c, d, b);
}

function Ed(a, b) {
  a.f && Lc({}, function (c, d) {
    Q(b, d, c);
  });
}

function Jd(a, b, c) {
  c = Math.min(a.g.length, c);
  var d = a.f ? p(a.f.Ha, a.f, a) : null;

  a: for (var e = a.g, f = -1;;) {
    var h = ["count=" + c];
    -1 == f ? 0 < c ? (f = e[0].b, h.push("ofs=" + f)) : f = 0 : h.push("ofs=" + f);

    for (var m = !0, l = 0; l < c; l++) {
      var t = e[l].b,
          B = e[l].a;
      t -= f;
      if (0 > t) f = Math.max(0, e[l].b - 100), m = !1;else try {
        md(B, h, "req" + t + "_");
      } catch (z) {
        d && d(B);
      }
    }

    if (m) {
      d = h.join("&");
      break a;
    }
  }

  a = a.g.splice(0, c);
  b.s = a;
  return d;
}

function Hc(a) {
  a.a || a.j || (a.U = 1, Cb(a.Aa, a), a.o = 0);
}

function Cc(a) {
  if (a.a || a.j || 3 <= a.o) return !1;
  a.U++;
  a.j = I(p(a.Aa, a), Id(a, a.o));
  a.o++;
  return !0;
}

g.Aa = function () {
  this.j = null;
  Ld(this);

  if (this.V && !(this.F || null == this.a || 0 >= this.N)) {
    var a = 2 * this.N;
    this.c.info("BP detection timer enabled: " + a);
    this.s = I(p(this.Sa, this), a);
  }
};

g.Sa = function () {
  this.s && (this.s = null, this.c.info("BP detection timeout reached."), this.c.info("Buffering proxy detected and switch to long-polling!"), this.H = !1, this.F = !0, Bc(this), Ld(this));
};

function xc(a) {
  null != a.s && (k.clearTimeout(a.s), a.s = null);
}

function Ld(a) {
  a.a = new K(a, a.c, "rpc", a.U);
  null === a.i && (a.a.B = a.l);
  a.a.O = 0;
  var b = L(a.la);
  Q(b, "RID", "rpc");
  Q(b, "SID", a.J);
  Q(b, "CI", a.H ? "0" : "1");
  Q(b, "AID", a.P);
  Ed(a, b);
  Q(b, "TYPE", "xmlhttp");
  a.i && a.l && Ad(b, a.i, a.l);
  a.D && a.a.setTimeout(a.D);
  var c = a.a;
  a = a.ga;
  c.H = 1;
  c.i = lc(L(b));
  c.j = null;
  c.I = !0;
  mc(c, a);
}

g.Ra = function () {
  null != this.m && (this.m = null, Bc(this), Cc(this), H(19));
};

function Ac(a) {
  null != a.m && (k.clearTimeout(a.m), a.m = null);
}

function uc(a, b) {
  var c = null;

  if (a.a == b) {
    Ac(a);
    xc(a);
    a.a = null;
    var d = 2;
  } else if (zc(a.b, b)) c = b.s, Gc(a.b, b), d = 1;else return;

  a.I = b.N;
  if (0 != a.v) if (b.b) {
    if (1 == d) {
      c = b.j ? b.j.length : 0;
      b = q() - b.u;
      var e = a.u;
      d = Vb();
      d.dispatchEvent(new Yb(d, c, b, e));
      Ic(a);
    } else Hc(a);
  } else if (e = b.h, 3 == e || 0 == e && 0 < a.I || !(1 == d && Hd(a, b) || 2 == d && Cc(a))) switch (c && 0 < c.length && (b = a.b, b.c = b.c.concat(c)), e) {
    case 1:
      P(a, 5);
      break;

    case 4:
      P(a, 10);
      break;

    case 3:
      P(a, 6);
      break;

    default:
      P(a, 2);
  }
}

function Id(a, b) {
  var c = a.Fa + Math.floor(Math.random() * a.Ma);
  a.f || (c *= 2);
  return c * b;
}

function P(a, b) {
  a.c.info("Error code " + b);

  if (2 == b) {
    var c = null;
    a.f && (c = null);
    var d = p(a.Xa, a);
    c || (c = new T("//www.google.com/images/cleardot.gif"), k.location && "http" == k.location.protocol || Pc(c, "https"), lc(c));
    nd(c.toString(), d);
  } else H(2);

  a.v = 0;
  a.f && a.f.ra(b);
  Fd(a);
  Dd(a);
}

g.Xa = function (a) {
  a ? (this.c.info("Successfully pinged google.com"), H(2)) : (this.c.info("Failed to ping google.com"), H(1));
};

function Fd(a) {
  a.v = 0;
  a.I = -1;

  if (a.f) {
    if (0 != jd(a.b).length || 0 != a.g.length) a.b.c.length = 0, sa(a.g), a.g.length = 0;
    a.f.qa();
  }
}

function Fc(a, b, c) {
  var d = ad(c);
  if ("" != d.c) b && Qc(d, b + "." + d.c), Rc(d, d.h);else {
    var e = k.location;
    d = bd(e.protocol, b ? b + "." + e.hostname : e.hostname, +e.port, c);
  }
  a.W && Aa(a.W, function (f, h) {
    Q(d, h, f);
  });
  b = a.A;
  c = a.na;
  b && c && Q(d, b, c);
  Q(d, "VER", a.ha);
  Ed(a, d);
  return d;
}

function oc(a, b) {
  if (b && !a.C) throw Error("Can't create secondary domain capable XhrIo object.");
  b = new X(a.Ka);
  b.F = a.C;
  return b;
}

function Md() {}

g = Md.prototype;

g.ta = function () {};

g.sa = function () {};

g.ra = function () {};

g.qa = function () {};

g.Ha = function () {};

function Nd() {
  if (x && !(10 <= Number(Ua))) throw Error("Environmental error: no available transport.");
}

Nd.prototype.a = function (a, b) {
  return new Y(a, b);
};

function Y(a, b) {
  D.call(this);
  this.a = new Cd(b);
  this.l = a;
  this.b = b && b.messageUrlParams || null;
  a = b && b.messageHeaders || null;
  b && b.clientProtocolHeaderRequired && (a ? a["X-Client-Protocol"] = "webchannel" : a = {
    "X-Client-Protocol": "webchannel"
  });
  this.a.l = a;
  a = b && b.initMessageHeaders || null;
  b && b.messageContentType && (a ? a["X-WebChannel-Content-Type"] = b.messageContentType : a = {
    "X-WebChannel-Content-Type": b.messageContentType
  });
  b && b.a && (a ? a["X-WebChannel-Client-Profile"] = b.a : a = {
    "X-WebChannel-Client-Profile": b.a
  });
  this.a.O = a;
  (a = b && b.httpHeadersOverwriteParam) && !ta(a) && (this.a.i = a);
  this.h = b && b.supportsCrossDomainXhr || !1;
  this.g = b && b.sendRawJson || !1;
  (b = b && b.httpSessionIdParam) && !ta(b) && (this.a.A = b, a = this.b, null !== a && b in a && (a = this.b, b in a && delete a[b]));
  this.f = new Z(this);
}

r(Y, D);
g = Y.prototype;

g.addEventListener = function (a, b, c, d) {
  Y.S.addEventListener.call(this, a, b, c, d);
};

g.removeEventListener = function (a, b, c, d) {
  Y.S.removeEventListener.call(this, a, b, c, d);
};

g.Oa = function () {
  this.a.f = this.f;
  this.h && (this.a.C = !0);
  var a = this.a,
      b = this.l,
      c = this.b || void 0;
  H(0);
  a.fa = b;
  a.W = c || {};
  a.H = a.T;
  a.B = Fc(a, null, a.fa);
  Ic(a);
};

g.close = function () {
  Jc(this.a);
};

g.Pa = function (a) {
  if ("string" === typeof a) {
    var b = {};
    b.__data__ = a;
    Gd(this.a, b);
  } else this.g ? (b = {}, b.__data__ = vb(a), Gd(this.a, b)) : Gd(this.a, a);
};

g.G = function () {
  this.a.f = null;
  delete this.f;
  Jc(this.a);
  delete this.a;
  Y.S.G.call(this);
};

function Od(a) {
  dc.call(this);
  var b = a.__sm__;

  if (b) {
    a: {
      for (var c in b) {
        a = c;
        break a;
      }

      a = void 0;
    }

    (this.c = a) ? (a = this.c, this.data = null !== b && a in b ? b[a] : void 0) : this.data = b;
  } else this.data = a;
}

r(Od, dc);

function Pd() {
  ec.call(this);
  this.status = 1;
}

r(Pd, ec);

function Z(a) {
  this.a = a;
}

r(Z, Md);

Z.prototype.ta = function () {
  this.a.dispatchEvent("a");
};

Z.prototype.sa = function (a) {
  this.a.dispatchEvent(new Od(a));
};

Z.prototype.ra = function (a) {
  this.a.dispatchEvent(new Pd(a));
};

Z.prototype.qa = function () {
  this.a.dispatchEvent("b");
};
/*
Copyright 2017 Google LLC
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


Nd.prototype.createWebChannel = Nd.prototype.a;
Y.prototype.send = Y.prototype.Pa;
Y.prototype.open = Y.prototype.Oa;
Y.prototype.close = Y.prototype.close;
Zb.NO_ERROR = 0;
Zb.TIMEOUT = 8;
Zb.HTTP_ERROR = 6;
$b.COMPLETE = "complete";
cc.EventType = J;
J.OPEN = "a";
J.CLOSE = "b";
J.ERROR = "c";
J.MESSAGE = "d";
D.prototype.listen = D.prototype.va;
X.prototype.listenOnce = X.prototype.wa;
X.prototype.getLastError = X.prototype.Qa;
X.prototype.getLastErrorCode = X.prototype.ua;
X.prototype.getStatus = X.prototype.X;
X.prototype.getResponseJson = X.prototype.Na;
X.prototype.getResponseText = X.prototype.$;
X.prototype.send = X.prototype.ba;

var createWebChannelTransport = function createWebChannelTransport() {
  return new Nd();
};

var ErrorCode = Zb;
var EventType = $b;
var WebChannel = cc;
var XhrIo = X;
var esm = {
  createWebChannelTransport: createWebChannelTransport,
  ErrorCode: ErrorCode,
  EventType: EventType,
  WebChannel: WebChannel,
  XhrIo: XhrIo
};
/* harmony default export */ __webpack_exports__["default"] = (esm);


/***/ }),

/***/ "xbPD":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/defaultIfEmpty.js ***!
  \*************************************************************************/
/*! exports provided: defaultIfEmpty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultIfEmpty", function() { return defaultIfEmpty; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");





function defaultIfEmpty() {
  var defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  return function (source) {
    return source.lift(new DefaultIfEmptyOperator(defaultValue));
  };
}

var DefaultIfEmptyOperator = /*#__PURE__*/function () {
  function DefaultIfEmptyOperator(defaultValue) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DefaultIfEmptyOperator);

    this.defaultValue = defaultValue;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DefaultIfEmptyOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));
    }
  }]);

  return DefaultIfEmptyOperator;
}();

var DefaultIfEmptySubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(DefaultIfEmptySubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(DefaultIfEmptySubscriber);

  function DefaultIfEmptySubscriber(destination, defaultValue) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DefaultIfEmptySubscriber);

    _this = _super.call(this, destination);
    _this.defaultValue = defaultValue;
    _this.isEmpty = true;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DefaultIfEmptySubscriber, [{
    key: "_next",
    value: function _next(value) {
      this.isEmpty = false;
      this.destination.next(value);
    }
  }, {
    key: "_complete",
    value: function _complete() {
      if (this.isEmpty) {
        this.destination.next(this.defaultValue);
      }

      this.destination.complete();
    }
  }]);

  return DefaultIfEmptySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "xgIS":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/fromEvent.js ***!
  \*********************************************************************/
/*! exports provided: fromEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromEvent", function() { return fromEvent; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ "DH7j");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isFunction */ "n6bG");
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operators/map */ "lJxs");






var toString = /*@__PURE__*/function () {
  return Object.prototype.toString;
}();

function fromEvent(target, eventName, options, resultSelector) {
  if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(options)) {
    resultSelector = options;
    options = undefined;
  }

  if (resultSelector) {
    return fromEvent(target, eventName, options).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_4__["map"])(function (args) {
      return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(args) ? resultSelector.apply(void 0, Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(args)) : resultSelector(args);
    }));
  }

  return new _Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"](function (subscriber) {
    function handler(e) {
      if (arguments.length > 1) {
        subscriber.next(Array.prototype.slice.call(arguments));
      } else {
        subscriber.next(e);
      }
    }

    setupSubscription(target, eventName, handler, subscriber, options);
  });
}

function setupSubscription(sourceObj, eventName, handler, subscriber, options) {
  var unsubscribe;

  if (isEventTarget(sourceObj)) {
    var source = sourceObj;
    sourceObj.addEventListener(eventName, handler, options);

    unsubscribe = function unsubscribe() {
      return source.removeEventListener(eventName, handler, options);
    };
  } else if (isJQueryStyleEventEmitter(sourceObj)) {
    var _source = sourceObj;
    sourceObj.on(eventName, handler);

    unsubscribe = function unsubscribe() {
      return _source.off(eventName, handler);
    };
  } else if (isNodeStyleEventEmitter(sourceObj)) {
    var _source2 = sourceObj;
    sourceObj.addListener(eventName, handler);

    unsubscribe = function unsubscribe() {
      return _source2.removeListener(eventName, handler);
    };
  } else if (sourceObj && sourceObj.length) {
    for (var i = 0, len = sourceObj.length; i < len; i++) {
      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);
    }
  } else {
    throw new TypeError('Invalid event target');
  }

  subscriber.add(unsubscribe);
}

function isNodeStyleEventEmitter(sourceObj) {
  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';
}

function isJQueryStyleEventEmitter(sourceObj) {
  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';
}

function isEventTarget(sourceObj) {
  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';
}

/***/ }),

/***/ "yCtX":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/fromArray.js ***!
  \*********************************************************************/
/*! exports provided: fromArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromArray", function() { return fromArray; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");
/* harmony import */ var _util_subscribeToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeToArray */ "ngJS");
/* harmony import */ var _scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduled/scheduleArray */ "jZKg");



function fromArray(input, scheduler) {
  if (!scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](Object(_util_subscribeToArray__WEBPACK_IMPORTED_MODULE_1__["subscribeToArray"])(input));
  } else {
    return Object(_scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__["scheduleArray"])(input, scheduler);
  }
}

/***/ }),

/***/ "yI9Y":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/max.js ***!
  \**************************************************************/
/*! exports provided: max */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reduce */ "128B");

function max(comparer) {
  var max = typeof comparer === 'function' ? function (x, y) {
    return comparer(x, y) > 0 ? x : y;
  } : function (x, y) {
    return x > y ? x : y;
  };
  return Object(_reduce__WEBPACK_IMPORTED_MODULE_0__["reduce"])(max);
}

/***/ }),

/***/ "yuhW":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/throttle.js ***!
  \*******************************************************************/
/*! exports provided: defaultThrottleConfig, throttle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultThrottleConfig", function() { return defaultThrottleConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return throttle; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");





var defaultThrottleConfig = {
  leading: true,
  trailing: false
};
function throttle(durationSelector) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultThrottleConfig;
  return function (source) {
    return source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));
  };
}

var ThrottleOperator = /*#__PURE__*/function () {
  function ThrottleOperator(durationSelector, leading, trailing) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ThrottleOperator);

    this.durationSelector = durationSelector;
    this.leading = leading;
    this.trailing = trailing;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ThrottleOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));
    }
  }]);

  return ThrottleOperator;
}();

var ThrottleSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(ThrottleSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(ThrottleSubscriber);

  function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, ThrottleSubscriber);

    _this = _super.call(this, destination);
    _this.destination = destination;
    _this.durationSelector = durationSelector;
    _this._leading = _leading;
    _this._trailing = _trailing;
    _this._hasValue = false;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(ThrottleSubscriber, [{
    key: "_next",
    value: function _next(value) {
      this._hasValue = true;
      this._sendValue = value;

      if (!this._throttled) {
        if (this._leading) {
          this.send();
        } else {
          this.throttle(value);
        }
      }
    }
  }, {
    key: "send",
    value: function send() {
      var _hasValue = this._hasValue,
          _sendValue = this._sendValue;

      if (_hasValue) {
        this.destination.next(_sendValue);
        this.throttle(_sendValue);
      }

      this._hasValue = false;
      this._sendValue = undefined;
    }
  }, {
    key: "throttle",
    value: function throttle(value) {
      var duration = this.tryDurationSelector(value);

      if (!!duration) {
        this.add(this._throttled = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["innerSubscribe"])(duration, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["SimpleInnerSubscriber"](this)));
      }
    }
  }, {
    key: "tryDurationSelector",
    value: function tryDurationSelector(value) {
      try {
        return this.durationSelector(value);
      } catch (err) {
        this.destination.error(err);
        return null;
      }
    }
  }, {
    key: "throttlingDone",
    value: function throttlingDone() {
      var _throttled = this._throttled,
          _trailing = this._trailing;

      if (_throttled) {
        _throttled.unsubscribe();
      }

      this._throttled = undefined;

      if (_trailing) {
        this.send();
      }
    }
  }, {
    key: "notifyNext",
    value: function notifyNext() {
      this.throttlingDone();
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {
      this.throttlingDone();
    }
  }]);

  return ThrottleSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "z+Ro":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/util/isScheduler.js ***!
  \*****************************************************************/
/*! exports provided: isScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isScheduler", function() { return isScheduler; });
function isScheduler(value) {
  return value && typeof value.schedule === 'function';
}

/***/ }),

/***/ "z6cu":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/observable/throwError.js ***!
  \**********************************************************************/
/*! exports provided: throwError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throwError", function() { return throwError; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "HDdC");

function throwError(error, scheduler) {
  if (!scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
      return subscriber.error(error);
    });
  } else {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
      return scheduler.schedule(dispatch, 0, {
        error: error,
        subscriber: subscriber
      });
    });
  }
}

function dispatch(_ref) {
  var error = _ref.error,
      subscriber = _ref.subscriber;
  subscriber.error(error);
}

/***/ }),

/***/ "zP0r":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/skip.js ***!
  \***************************************************************/
/*! exports provided: skip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "skip", function() { return skip; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscriber */ "7o/Q");





function skip(count) {
  return function (source) {
    return source.lift(new SkipOperator(count));
  };
}

var SkipOperator = /*#__PURE__*/function () {
  function SkipOperator(total) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SkipOperator);

    this.total = total;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SkipOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new SkipSubscriber(subscriber, this.total));
    }
  }]);

  return SkipOperator;
}();

var SkipSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(SkipSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(SkipSubscriber);

  function SkipSubscriber(destination, total) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SkipSubscriber);

    _this = _super.call(this, destination);
    _this.total = total;
    _this.count = 0;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SkipSubscriber, [{
    key: "_next",
    value: function _next(x) {
      if (++this.count > this.total) {
        this.destination.next(x);
      }
    }
  }]);

  return SkipSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);

/***/ }),

/***/ "zUnb":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environments/environment */ "AytR");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/app.module */ "ZAI4");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ "jhN1");




if (_environments_environment__WEBPACK_IMPORTED_MODULE_1__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["enableProdMode"])();
}
_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__["platformBrowser"]().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_2__["AppModule"])
    .catch(function (err) { return console.log(err); });



/***/ }),

/***/ "zVF4":
/*!*******************************************************!*\
  !*** ./node_modules/@firebase/util/dist/index.cjs.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', {
  value: true
});

var tslib = __webpack_require__(/*! tslib */ "mrSG");
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.
 */


var CONSTANTS = {
  /**
   * @define {boolean} Whether this is the client Node.js SDK.
   */
  NODE_CLIENT: false,

  /**
   * @define {boolean} Whether this is the Admin Node.js SDK.
   */
  NODE_ADMIN: false,

  /**
   * Firebase SDK Version
   */
  SDK_VERSION: '${JSCORE_VERSION}'
};
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Throws an error if the provided assertion is falsy
 */

var assert = function assert(assertion, message) {
  if (!assertion) {
    throw assertionError(message);
  }
};
/**
 * Returns an Error object suitable for throwing.
 */


var assertionError = function assertionError(message) {
  return new Error('Firebase Database (' + CONSTANTS.SDK_VERSION + ') INTERNAL ASSERT FAILED: ' + message);
};
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var stringToByteArray = function stringToByteArray(str) {
  // TODO(user): Use native implementations if/when available
  var out = [];
  var p = 0;

  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i);

    if (c < 128) {
      out[p++] = c;
    } else if (c < 2048) {
      out[p++] = c >> 6 | 192;
      out[p++] = c & 63 | 128;
    } else if ((c & 0xfc00) === 0xd800 && i + 1 < str.length && (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
      // Surrogate Pair
      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);
      out[p++] = c >> 18 | 240;
      out[p++] = c >> 12 & 63 | 128;
      out[p++] = c >> 6 & 63 | 128;
      out[p++] = c & 63 | 128;
    } else {
      out[p++] = c >> 12 | 224;
      out[p++] = c >> 6 & 63 | 128;
      out[p++] = c & 63 | 128;
    }
  }

  return out;
};
/**
 * Turns an array of numbers into the string given by the concatenation of the
 * characters to which the numbers correspond.
 * @param bytes Array of numbers representing characters.
 * @return Stringification of the array.
 */


var byteArrayToString = function byteArrayToString(bytes) {
  // TODO(user): Use native implementations if/when available
  var out = [];
  var pos = 0,
      c = 0;

  while (pos < bytes.length) {
    var c1 = bytes[pos++];

    if (c1 < 128) {
      out[c++] = String.fromCharCode(c1);
    } else if (c1 > 191 && c1 < 224) {
      var c2 = bytes[pos++];
      out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);
    } else if (c1 > 239 && c1 < 365) {
      // Surrogate Pair
      var c2 = bytes[pos++];
      var c3 = bytes[pos++];
      var c4 = bytes[pos++];
      var u = ((c1 & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) - 0x10000;
      out[c++] = String.fromCharCode(0xd800 + (u >> 10));
      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));
    } else {
      var c2 = bytes[pos++];
      var c3 = bytes[pos++];
      out[c++] = String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
    }
  }

  return out.join('');
}; // We define it as an object literal instead of a class because a class compiled down to es5 can't
// be treeshaked. https://github.com/rollup/rollup/issues/1691
// Static lookup maps, lazily populated by init_()


var base64 = {
  /**
   * Maps bytes to characters.
   */
  byteToCharMap_: null,

  /**
   * Maps characters to bytes.
   */
  charToByteMap_: null,

  /**
   * Maps bytes to websafe characters.
   * @private
   */
  byteToCharMapWebSafe_: null,

  /**
   * Maps websafe characters to bytes.
   * @private
   */
  charToByteMapWebSafe_: null,

  /**
   * Our default alphabet, shared between
   * ENCODED_VALS and ENCODED_VALS_WEBSAFE
   */
  ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',

  /**
   * Our default alphabet. Value 64 (=) is special; it means "nothing."
   */
  get ENCODED_VALS() {
    return this.ENCODED_VALS_BASE + '+/=';
  },

  /**
   * Our websafe alphabet.
   */
  get ENCODED_VALS_WEBSAFE() {
    return this.ENCODED_VALS_BASE + '-_.';
  },

  /**
   * Whether this browser supports the atob and btoa functions. This extension
   * started at Mozilla but is now implemented by many browsers. We use the
   * ASSUME_* variables to avoid pulling in the full useragent detection library
   * but still allowing the standard per-browser compilations.
   *
   */
  HAS_NATIVE_SUPPORT: typeof atob === 'function',

  /**
   * Base64-encode an array of bytes.
   *
   * @param input An array of bytes (numbers with
   *     value in [0, 255]) to encode.
   * @param webSafe Boolean indicating we should use the
   *     alternative alphabet.
   * @return The base64 encoded string.
   */
  encodeByteArray: function encodeByteArray(input, webSafe) {
    if (!Array.isArray(input)) {
      throw Error('encodeByteArray takes an array as a parameter');
    }

    this.init_();
    var byteToCharMap = webSafe ? this.byteToCharMapWebSafe_ : this.byteToCharMap_;
    var output = [];

    for (var i = 0; i < input.length; i += 3) {
      var byte1 = input[i];
      var haveByte2 = i + 1 < input.length;
      var byte2 = haveByte2 ? input[i + 1] : 0;
      var haveByte3 = i + 2 < input.length;
      var byte3 = haveByte3 ? input[i + 2] : 0;
      var outByte1 = byte1 >> 2;
      var outByte2 = (byte1 & 0x03) << 4 | byte2 >> 4;
      var outByte3 = (byte2 & 0x0f) << 2 | byte3 >> 6;
      var outByte4 = byte3 & 0x3f;

      if (!haveByte3) {
        outByte4 = 64;

        if (!haveByte2) {
          outByte3 = 64;
        }
      }

      output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
    }

    return output.join('');
  },

  /**
   * Base64-encode a string.
   *
   * @param input A string to encode.
   * @param webSafe If true, we should use the
   *     alternative alphabet.
   * @return The base64 encoded string.
   */
  encodeString: function encodeString(input, webSafe) {
    // Shortcut for Mozilla browsers that implement
    // a native base64 encoder in the form of "btoa/atob"
    if (this.HAS_NATIVE_SUPPORT && !webSafe) {
      return btoa(input);
    }

    return this.encodeByteArray(stringToByteArray(input), webSafe);
  },

  /**
   * Base64-decode a string.
   *
   * @param input to decode.
   * @param webSafe True if we should use the
   *     alternative alphabet.
   * @return string representing the decoded value.
   */
  decodeString: function decodeString(input, webSafe) {
    // Shortcut for Mozilla browsers that implement
    // a native base64 encoder in the form of "btoa/atob"
    if (this.HAS_NATIVE_SUPPORT && !webSafe) {
      return atob(input);
    }

    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));
  },

  /**
   * Base64-decode a string.
   *
   * In base-64 decoding, groups of four characters are converted into three
   * bytes.  If the encoder did not apply padding, the input length may not
   * be a multiple of 4.
   *
   * In this case, the last group will have fewer than 4 characters, and
   * padding will be inferred.  If the group has one or two characters, it decodes
   * to one byte.  If the group has three characters, it decodes to two bytes.
   *
   * @param input Input to decode.
   * @param webSafe True if we should use the web-safe alphabet.
   * @return bytes representing the decoded value.
   */
  decodeStringToByteArray: function decodeStringToByteArray(input, webSafe) {
    this.init_();
    var charToByteMap = webSafe ? this.charToByteMapWebSafe_ : this.charToByteMap_;
    var output = [];

    for (var i = 0; i < input.length;) {
      var byte1 = charToByteMap[input.charAt(i++)];
      var haveByte2 = i < input.length;
      var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
      ++i;
      var haveByte3 = i < input.length;
      var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
      ++i;
      var haveByte4 = i < input.length;
      var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
      ++i;

      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
        throw Error();
      }

      var outByte1 = byte1 << 2 | byte2 >> 4;
      output.push(outByte1);

      if (byte3 !== 64) {
        var outByte2 = byte2 << 4 & 0xf0 | byte3 >> 2;
        output.push(outByte2);

        if (byte4 !== 64) {
          var outByte3 = byte3 << 6 & 0xc0 | byte4;
          output.push(outByte3);
        }
      }
    }

    return output;
  },

  /**
   * Lazy static initialization function. Called before
   * accessing any of the static map variables.
   * @private
   */
  init_: function init_() {
    if (!this.byteToCharMap_) {
      this.byteToCharMap_ = {};
      this.charToByteMap_ = {};
      this.byteToCharMapWebSafe_ = {};
      this.charToByteMapWebSafe_ = {}; // We want quick mappings back and forth, so we precompute two maps.

      for (var i = 0; i < this.ENCODED_VALS.length; i++) {
        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);
        this.charToByteMap_[this.byteToCharMap_[i]] = i;
        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);
        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i; // Be forgiving when decoding and correctly decode both encodings.

        if (i >= this.ENCODED_VALS_BASE.length) {
          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;
        }
      }
    }
  }
};
/**
 * URL-safe base64 encoding
 */

var base64Encode = function base64Encode(str) {
  var utf8Bytes = stringToByteArray(str);
  return base64.encodeByteArray(utf8Bytes, true);
};
/**
 * URL-safe base64 decoding
 *
 * NOTE: DO NOT use the global atob() function - it does NOT support the
 * base64Url variant encoding.
 *
 * @param str To be decoded
 * @return Decoded result, if possible
 */


var base64Decode = function base64Decode(str) {
  try {
    return base64.decodeString(str, true);
  } catch (e) {
    console.error('base64Decode failed: ', e);
  }

  return null;
};
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Do a deep-copy of basic JavaScript Objects or Arrays.
 */


function deepCopy(value) {
  return deepExtend(undefined, value);
}
/**
 * Copy properties from source to target (recursively allows extension
 * of Objects and Arrays).  Scalar values in the target are over-written.
 * If target is undefined, an object of the appropriate type will be created
 * (and returned).
 *
 * We recursively copy all child properties of plain Objects in the source- so
 * that namespace- like dictionaries are merged.
 *
 * Note that the target can be a function, in which case the properties in
 * the source Object are copied onto it as static properties of the Function.
 */


function deepExtend(target, source) {
  if (!(source instanceof Object)) {
    return source;
  }

  switch (source.constructor) {
    case Date:
      // Treat Dates like scalars; if the target date object had any child
      // properties - they will be lost!
      var dateValue = source;
      return new Date(dateValue.getTime());

    case Object:
      if (target === undefined) {
        target = {};
      }

      break;

    case Array:
      // Always copy the array source and overwrite the target.
      target = [];
      break;

    default:
      // Not a plain Object - treat it as a scalar.
      return source;
  }

  for (var prop in source) {
    if (!source.hasOwnProperty(prop)) {
      continue;
    }

    target[prop] = deepExtend(target[prop], source[prop]);
  }

  return target;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var Deferred =
/** @class */

/*@__PURE__*/
function () {
  function Deferred() {
    var _this = this;

    this.reject = function () {};

    this.resolve = function () {};

    this.promise = new Promise(function (resolve, reject) {
      _this.resolve = resolve;
      _this.reject = reject;
    });
  }
  /**
   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around
   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback
   * and returns a node-style callback which will resolve or reject the Deferred's promise.
   */


  Deferred.prototype.wrapCallback = function (callback) {
    var _this = this;

    return function (error, value) {
      if (error) {
        _this.reject(error);
      } else {
        _this.resolve(value);
      }

      if (typeof callback === 'function') {
        // Attaching noop handler just in case developer wasn't expecting
        // promises
        _this.promise.catch(function () {}); // Some of our callbacks don't expect a value and our own tests
        // assert that the parameter length is 1


        if (callback.length === 1) {
          callback(error);
        } else {
          callback(error, value);
        }
      }
    };
  };

  return Deferred;
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Returns navigator.userAgent string or '' if it's not defined.
 * @return user agent string
 */


function getUA() {
  if (typeof navigator !== 'undefined' && typeof navigator['userAgent'] === 'string') {
    return navigator['userAgent'];
  } else {
    return '';
  }
}
/**
 * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.
 *
 * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap
 * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally
 * wait for a callback.
 */


function isMobileCordova() {
  return typeof window !== 'undefined' && // @ts-ignore Setting up an broadly applicable index signature for Window
  // just to deal with this case would probably be a bad idea.
  !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA());
}
/**
 * Detect Node.js.
 *
 * @return true if Node.js environment is detected.
 */
// Node detection logic from: https://github.com/iliakan/detect-node/


function isNode() {
  try {
    return Object.prototype.toString.call(global.process) === '[object process]';
  } catch (e) {
    return false;
  }
}
/**
 * Detect Browser Environment
 */


function isBrowser() {
  return typeof self === 'object' && self.self === self;
}

function isBrowserExtension() {
  var runtime = typeof chrome === 'object' ? chrome.runtime : typeof browser === 'object' ? browser.runtime : undefined;
  return typeof runtime === 'object' && runtime.id !== undefined;
}
/**
 * Detect React Native.
 *
 * @return true if ReactNative environment is detected.
 */


function isReactNative() {
  return typeof navigator === 'object' && navigator['product'] === 'ReactNative';
}
/** Detects Electron apps. */


function isElectron() {
  return getUA().indexOf('Electron/') >= 0;
}
/** Detects Internet Explorer. */


function isIE() {
  var ua = getUA();
  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;
}
/** Detects Universal Windows Platform apps. */


function isUWP() {
  return getUA().indexOf('MSAppHost/') >= 0;
}
/**
 * Detect whether the current SDK build is the Node version.
 *
 * @return true if it's the Node SDK build.
 */


function isNodeSdk() {
  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;
}
/** Returns true if we are running in Safari. */


function isSafari() {
  return !isNode() && navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome');
}
/**
 * This method checks if indexedDB is supported by current browser/service worker context
 * @return true if indexedDB is supported by current browser/service worker context
 */


function isIndexedDBAvailable() {
  return 'indexedDB' in self && indexedDB != null;
}
/**
 * This method validates browser context for indexedDB by opening a dummy indexedDB database and reject
 * if errors occur during the database open operation.
 */


function validateIndexedDBOpenable() {
  return new Promise(function (resolve, reject) {
    try {
      var preExist_1 = true;
      var DB_CHECK_NAME_1 = 'validate-browser-context-for-indexeddb-analytics-module';
      var request_1 = window.indexedDB.open(DB_CHECK_NAME_1);

      request_1.onsuccess = function () {
        request_1.result.close(); // delete database only when it doesn't pre-exist

        if (!preExist_1) {
          window.indexedDB.deleteDatabase(DB_CHECK_NAME_1);
        }

        resolve(true);
      };

      request_1.onupgradeneeded = function () {
        preExist_1 = false;
      };

      request_1.onerror = function () {
        var _a;

        reject(((_a = request_1.error) === null || _a === void 0 ? void 0 : _a.message) || '');
      };
    } catch (error) {
      reject(error);
    }
  });
}
/**
 *
 * This method checks whether cookie is enabled within current browser
 * @return true if cookie is enabled within current browser
 */


function areCookiesEnabled() {
  if (!navigator || !navigator.cookieEnabled) {
    return false;
  }

  return true;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var ERROR_NAME = 'FirebaseError'; // Based on code from:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types

var FirebaseError =
/** @class */

/*@__PURE__*/
function (_super) {
  tslib.__extends(FirebaseError, _super);

  function FirebaseError(code, message) {
    var _this = _super.call(this, message) || this;

    _this.code = code;
    _this.name = ERROR_NAME; // Fix For ES5
    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work

    Object.setPrototypeOf(_this, FirebaseError.prototype); // Maintains proper stack trace for where our error was thrown.
    // Only available on V8.

    if (Error.captureStackTrace) {
      Error.captureStackTrace(_this, ErrorFactory.prototype.create);
    }

    return _this;
  }

  return FirebaseError;
}(Error);

var ErrorFactory =
/** @class */

/*@__PURE__*/
function () {
  function ErrorFactory(service, serviceName, errors) {
    this.service = service;
    this.serviceName = serviceName;
    this.errors = errors;
  }

  ErrorFactory.prototype.create = function (code) {
    var data = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      data[_i - 1] = arguments[_i];
    }

    var customData = data[0] || {};
    var fullCode = this.service + "/" + code;
    var template = this.errors[code];
    var message = template ? replaceTemplate(template, customData) : 'Error'; // Service Name: Error message (service/code).

    var fullMessage = this.serviceName + ": " + message + " (" + fullCode + ").";
    var error = new FirebaseError(fullCode, fullMessage); // Keys with an underscore at the end of their name are not included in
    // error.data for some reason.
    // TODO: Replace with Object.entries when lib is updated to es2017.

    for (var _a = 0, _b = Object.keys(customData); _a < _b.length; _a++) {
      var key = _b[_a];

      if (key.slice(-1) !== '_') {
        if (key in error) {
          console.warn("Overwriting FirebaseError base field \"" + key + "\" can cause unexpected behavior.");
        }

        error[key] = customData[key];
      }
    }

    return error;
  };

  return ErrorFactory;
}();

function replaceTemplate(template, data) {
  return template.replace(PATTERN, function (_, key) {
    var value = data[key];
    return value != null ? String(value) : "<" + key + "?>";
  });
}

var PATTERN = /\{\$([^}]+)}/g;
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Evaluates a JSON string into a javascript object.
 *
 * @param {string} str A string containing JSON.
 * @return {*} The javascript object representing the specified JSON.
 */

function jsonEval(str) {
  return JSON.parse(str);
}
/**
 * Returns JSON representing a javascript object.
 * @param {*} data Javascript object to be stringified.
 * @return {string} The JSON contents of the object.
 */


function stringify(data) {
  return JSON.stringify(data);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Decodes a Firebase auth. token into constituent parts.
 *
 * Notes:
 * - May return with invalid / incomplete claims if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */


var decode = function decode(token) {
  var header = {},
      claims = {},
      data = {},
      signature = '';

  try {
    var parts = token.split('.');
    header = jsonEval(base64Decode(parts[0]) || '');
    claims = jsonEval(base64Decode(parts[1]) || '');
    signature = parts[2];
    data = claims['d'] || {};
    delete claims['d'];
  } catch (e) {}

  return {
    header: header,
    claims: claims,
    data: data,
    signature: signature
  };
};
/**
 * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the
 * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */


var isValidTimestamp = function isValidTimestamp(token) {
  var claims = decode(token).claims;
  var now = Math.floor(new Date().getTime() / 1000);
  var validSince = 0,
      validUntil = 0;

  if (typeof claims === 'object') {
    if (claims.hasOwnProperty('nbf')) {
      validSince = claims['nbf'];
    } else if (claims.hasOwnProperty('iat')) {
      validSince = claims['iat'];
    }

    if (claims.hasOwnProperty('exp')) {
      validUntil = claims['exp'];
    } else {
      // token will expire after 24h by default
      validUntil = validSince + 86400;
    }
  }

  return !!now && !!validSince && !!validUntil && now >= validSince && now <= validUntil;
};
/**
 * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.
 *
 * Notes:
 * - May return null if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */


var issuedAtTime = function issuedAtTime(token) {
  var claims = decode(token).claims;

  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {
    return claims['iat'];
  }

  return null;
};
/**
 * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */


var isValidFormat = function isValidFormat(token) {
  var decoded = decode(token),
      claims = decoded.claims;
  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');
};
/**
 * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */


var isAdmin = function isAdmin(token) {
  var claims = decode(token).claims;
  return typeof claims === 'object' && claims['admin'] === true;
};
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function contains(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}

function safeGet(obj, key) {
  if (Object.prototype.hasOwnProperty.call(obj, key)) {
    return obj[key];
  } else {
    return undefined;
  }
}

function isEmpty(obj) {
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      return false;
    }
  }

  return true;
}

function map(obj, fn, contextObj) {
  var res = {};

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      res[key] = fn.call(contextObj, obj[key], key, obj);
    }
  }

  return res;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a
 * params object (e.g. {arg: 'val', arg2: 'val2'})
 * Note: You must prepend it with ? when adding it to a URL.
 */


function querystring(querystringParams) {
  var params = [];

  var _loop_1 = function _loop_1(key, value) {
    if (Array.isArray(value)) {
      value.forEach(function (arrayVal) {
        params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));
      });
    } else {
      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
    }
  };

  for (var _i = 0, _a = Object.entries(querystringParams); _i < _a.length; _i++) {
    var _b = _a[_i],
        key = _b[0],
        value = _b[1];

    _loop_1(key, value);
  }

  return params.length ? '&' + params.join('&') : '';
}
/**
 * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object
 * (e.g. {arg: 'val', arg2: 'val2'})
 */


function querystringDecode(querystring) {
  var obj = {};
  var tokens = querystring.replace(/^\?/, '').split('&');
  tokens.forEach(function (token) {
    if (token) {
      var key = token.split('=');
      obj[key[0]] = key[1];
    }
  });
  return obj;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview SHA-1 cryptographic hash.
 * Variable names follow the notation in FIPS PUB 180-3:
 * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.
 *
 * Usage:
 *   var sha1 = new sha1();
 *   sha1.update(bytes);
 *   var hash = sha1.digest();
 *
 * Performance:
 *   Chrome 23:   ~400 Mbit/s
 *   Firefox 16:  ~250 Mbit/s
 *
 */

/**
 * SHA-1 cryptographic hash constructor.
 *
 * The properties declared here are discussed in the above algorithm document.
 * @constructor
 * @final
 * @struct
 */


var Sha1 =
/** @class */

/*@__PURE__*/
function () {
  function Sha1() {
    /**
     * Holds the previous values of accumulated variables a-e in the compress_
     * function.
     * @private
     */
    this.chain_ = [];
    /**
     * A buffer holding the partially computed hash result.
     * @private
     */

    this.buf_ = [];
    /**
     * An array of 80 bytes, each a part of the message to be hashed.  Referred to
     * as the message schedule in the docs.
     * @private
     */

    this.W_ = [];
    /**
     * Contains data needed to pad messages less than 64 bytes.
     * @private
     */

    this.pad_ = [];
    /**
     * @private {number}
     */

    this.inbuf_ = 0;
    /**
     * @private {number}
     */

    this.total_ = 0;
    this.blockSize = 512 / 8;
    this.pad_[0] = 128;

    for (var i = 1; i < this.blockSize; ++i) {
      this.pad_[i] = 0;
    }

    this.reset();
  }

  Sha1.prototype.reset = function () {
    this.chain_[0] = 0x67452301;
    this.chain_[1] = 0xefcdab89;
    this.chain_[2] = 0x98badcfe;
    this.chain_[3] = 0x10325476;
    this.chain_[4] = 0xc3d2e1f0;
    this.inbuf_ = 0;
    this.total_ = 0;
  };
  /**
   * Internal compress helper function.
   * @param buf Block to compress.
   * @param offset Offset of the block in the buffer.
   * @private
   */


  Sha1.prototype.compress_ = function (buf, offset) {
    if (!offset) {
      offset = 0;
    }

    var W = this.W_; // get 16 big endian words

    if (typeof buf === 'string') {
      for (var i = 0; i < 16; i++) {
        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS
        // have a bug that turns the post-increment ++ operator into pre-increment
        // during JIT compilation.  We have code that depends heavily on SHA-1 for
        // correctness and which is affected by this bug, so I've removed all uses
        // of post-increment ++ in which the result value is used.  We can revert
        // this change once the Safari bug
        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and
        // most clients have been updated.
        W[i] = buf.charCodeAt(offset) << 24 | buf.charCodeAt(offset + 1) << 16 | buf.charCodeAt(offset + 2) << 8 | buf.charCodeAt(offset + 3);
        offset += 4;
      }
    } else {
      for (var i = 0; i < 16; i++) {
        W[i] = buf[offset] << 24 | buf[offset + 1] << 16 | buf[offset + 2] << 8 | buf[offset + 3];
        offset += 4;
      }
    } // expand to 80 words


    for (var i = 16; i < 80; i++) {
      var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
      W[i] = (t << 1 | t >>> 31) & 0xffffffff;
    }

    var a = this.chain_[0];
    var b = this.chain_[1];
    var c = this.chain_[2];
    var d = this.chain_[3];
    var e = this.chain_[4];
    var f, k; // TODO(user): Try to unroll this loop to speed up the computation.

    for (var i = 0; i < 80; i++) {
      if (i < 40) {
        if (i < 20) {
          f = d ^ b & (c ^ d);
          k = 0x5a827999;
        } else {
          f = b ^ c ^ d;
          k = 0x6ed9eba1;
        }
      } else {
        if (i < 60) {
          f = b & c | d & (b | c);
          k = 0x8f1bbcdc;
        } else {
          f = b ^ c ^ d;
          k = 0xca62c1d6;
        }
      }

      var t = (a << 5 | a >>> 27) + f + e + k + W[i] & 0xffffffff;
      e = d;
      d = c;
      c = (b << 30 | b >>> 2) & 0xffffffff;
      b = a;
      a = t;
    }

    this.chain_[0] = this.chain_[0] + a & 0xffffffff;
    this.chain_[1] = this.chain_[1] + b & 0xffffffff;
    this.chain_[2] = this.chain_[2] + c & 0xffffffff;
    this.chain_[3] = this.chain_[3] + d & 0xffffffff;
    this.chain_[4] = this.chain_[4] + e & 0xffffffff;
  };

  Sha1.prototype.update = function (bytes, length) {
    // TODO(johnlenz): tighten the function signature and remove this check
    if (bytes == null) {
      return;
    }

    if (length === undefined) {
      length = bytes.length;
    }

    var lengthMinusBlock = length - this.blockSize;
    var n = 0; // Using local instead of member variables gives ~5% speedup on Firefox 16.

    var buf = this.buf_;
    var inbuf = this.inbuf_; // The outer while loop should execute at most twice.

    while (n < length) {
      // When we have no data in the block to top up, we can directly process the
      // input buffer (assuming it contains sufficient data). This gives ~25%
      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that
      // the data is provided in large chunks (or in multiples of 64 bytes).
      if (inbuf === 0) {
        while (n <= lengthMinusBlock) {
          this.compress_(bytes, n);
          n += this.blockSize;
        }
      }

      if (typeof bytes === 'string') {
        while (n < length) {
          buf[inbuf] = bytes.charCodeAt(n);
          ++inbuf;
          ++n;

          if (inbuf === this.blockSize) {
            this.compress_(buf);
            inbuf = 0; // Jump to the outer loop so we use the full-block optimization.

            break;
          }
        }
      } else {
        while (n < length) {
          buf[inbuf] = bytes[n];
          ++inbuf;
          ++n;

          if (inbuf === this.blockSize) {
            this.compress_(buf);
            inbuf = 0; // Jump to the outer loop so we use the full-block optimization.

            break;
          }
        }
      }
    }

    this.inbuf_ = inbuf;
    this.total_ += length;
  };
  /** @override */


  Sha1.prototype.digest = function () {
    var digest = [];
    var totalBits = this.total_ * 8; // Add pad 0x80 0x00*.

    if (this.inbuf_ < 56) {
      this.update(this.pad_, 56 - this.inbuf_);
    } else {
      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));
    } // Add # bits.


    for (var i = this.blockSize - 1; i >= 56; i--) {
      this.buf_[i] = totalBits & 255;
      totalBits /= 256; // Don't use bit-shifting here!
    }

    this.compress_(this.buf_);
    var n = 0;

    for (var i = 0; i < 5; i++) {
      for (var j = 24; j >= 0; j -= 8) {
        digest[n] = this.chain_[i] >> j & 255;
        ++n;
      }
    }

    return digest;
  };

  return Sha1;
}();
/**
 * Helper to make a Subscribe function (just like Promise helps make a
 * Thenable).
 *
 * @param executor Function which can make calls to a single Observer
 *     as a proxy.
 * @param onNoObservers Callback when count of Observers goes to zero.
 */


function createSubscribe(executor, onNoObservers) {
  var proxy = new ObserverProxy(executor, onNoObservers);
  return proxy.subscribe.bind(proxy);
}
/**
 * Implement fan-out for any number of Observers attached via a subscribe
 * function.
 */


var ObserverProxy =
/** @class */

/*@__PURE__*/
function () {
  /**
   * @param executor Function which can make calls to a single Observer
   *     as a proxy.
   * @param onNoObservers Callback when count of Observers goes to zero.
   */
  function ObserverProxy(executor, onNoObservers) {
    var _this = this;

    this.observers = [];
    this.unsubscribes = [];
    this.observerCount = 0; // Micro-task scheduling by calling task.then().

    this.task = Promise.resolve();
    this.finalized = false;
    this.onNoObservers = onNoObservers; // Call the executor asynchronously so subscribers that are called
    // synchronously after the creation of the subscribe function
    // can still receive the very first value generated in the executor.

    this.task.then(function () {
      executor(_this);
    }).catch(function (e) {
      _this.error(e);
    });
  }

  ObserverProxy.prototype.next = function (value) {
    this.forEachObserver(function (observer) {
      observer.next(value);
    });
  };

  ObserverProxy.prototype.error = function (error) {
    this.forEachObserver(function (observer) {
      observer.error(error);
    });
    this.close(error);
  };

  ObserverProxy.prototype.complete = function () {
    this.forEachObserver(function (observer) {
      observer.complete();
    });
    this.close();
  };
  /**
   * Subscribe function that can be used to add an Observer to the fan-out list.
   *
   * - We require that no event is sent to a subscriber sychronously to their
   *   call to subscribe().
   */


  ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {
    var _this = this;

    var observer;

    if (nextOrObserver === undefined && error === undefined && complete === undefined) {
      throw new Error('Missing Observer.');
    } // Assemble an Observer object when passed as callback functions.


    if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {
      observer = nextOrObserver;
    } else {
      observer = {
        next: nextOrObserver,
        error: error,
        complete: complete
      };
    }

    if (observer.next === undefined) {
      observer.next = noop;
    }

    if (observer.error === undefined) {
      observer.error = noop;
    }

    if (observer.complete === undefined) {
      observer.complete = noop;
    }

    var unsub = this.unsubscribeOne.bind(this, this.observers.length); // Attempt to subscribe to a terminated Observable - we
    // just respond to the Observer with the final error or complete
    // event.

    if (this.finalized) {
      // eslint-disable-next-line @typescript-eslint/no-floating-promises
      this.task.then(function () {
        try {
          if (_this.finalError) {
            observer.error(_this.finalError);
          } else {
            observer.complete();
          }
        } catch (e) {// nothing
        }

        return;
      });
    }

    this.observers.push(observer);
    return unsub;
  }; // Unsubscribe is synchronous - we guarantee that no events are sent to
  // any unsubscribed Observer.


  ObserverProxy.prototype.unsubscribeOne = function (i) {
    if (this.observers === undefined || this.observers[i] === undefined) {
      return;
    }

    delete this.observers[i];
    this.observerCount -= 1;

    if (this.observerCount === 0 && this.onNoObservers !== undefined) {
      this.onNoObservers(this);
    }
  };

  ObserverProxy.prototype.forEachObserver = function (fn) {
    if (this.finalized) {
      // Already closed by previous event....just eat the additional values.
      return;
    } // Since sendOne calls asynchronously - there is no chance that
    // this.observers will become undefined.


    for (var i = 0; i < this.observers.length; i++) {
      this.sendOne(i, fn);
    }
  }; // Call the Observer via one of it's callback function. We are careful to
  // confirm that the observe has not been unsubscribed since this asynchronous
  // function had been queued.


  ObserverProxy.prototype.sendOne = function (i, fn) {
    var _this = this; // Execute the callback asynchronously
    // eslint-disable-next-line @typescript-eslint/no-floating-promises


    this.task.then(function () {
      if (_this.observers !== undefined && _this.observers[i] !== undefined) {
        try {
          fn(_this.observers[i]);
        } catch (e) {
          // Ignore exceptions raised in Observers or missing methods of an
          // Observer.
          // Log error to console. b/31404806
          if (typeof console !== 'undefined' && console.error) {
            console.error(e);
          }
        }
      }
    });
  };

  ObserverProxy.prototype.close = function (err) {
    var _this = this;

    if (this.finalized) {
      return;
    }

    this.finalized = true;

    if (err !== undefined) {
      this.finalError = err;
    } // Proxy is no longer needed - garbage collect references
    // eslint-disable-next-line @typescript-eslint/no-floating-promises


    this.task.then(function () {
      _this.observers = undefined;
      _this.onNoObservers = undefined;
    });
  };

  return ObserverProxy;
}();
/** Turn synchronous function into one called asynchronously. */
// eslint-disable-next-line @typescript-eslint/ban-types


function async(fn, onError) {
  return function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    Promise.resolve(true).then(function () {
      fn.apply(void 0, args);
    }).catch(function (error) {
      if (onError) {
        onError(error);
      }
    });
  };
}
/**
 * Return true if the object passed in implements any of the named methods.
 */


function implementsAnyMethods(obj, methods) {
  if (typeof obj !== 'object' || obj === null) {
    return false;
  }

  for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {
    var method = methods_1[_i];

    if (method in obj && typeof obj[method] === 'function') {
      return true;
    }
  }

  return false;
}

function noop() {// do nothing
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Check to make sure the appropriate number of arguments are provided for a public function.
 * Throws an error if it fails.
 *
 * @param fnName The function name
 * @param minCount The minimum number of arguments to allow for the function call
 * @param maxCount The maximum number of argument to allow for the function call
 * @param argCount The actual number of arguments provided.
 */


var validateArgCount = function validateArgCount(fnName, minCount, maxCount, argCount) {
  var argError;

  if (argCount < minCount) {
    argError = 'at least ' + minCount;
  } else if (argCount > maxCount) {
    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;
  }

  if (argError) {
    var error = fnName + ' failed: Was called with ' + argCount + (argCount === 1 ? ' argument.' : ' arguments.') + ' Expects ' + argError + '.';
    throw new Error(error);
  }
};
/**
 * Generates a string to prefix an error message about failed argument validation
 *
 * @param fnName The function name
 * @param argumentNumber The index of the argument
 * @param optional Whether or not the argument is optional
 * @return The prefix to add to the error thrown for validation.
 */


function errorPrefix(fnName, argumentNumber, optional) {
  var argName = '';

  switch (argumentNumber) {
    case 1:
      argName = optional ? 'first' : 'First';
      break;

    case 2:
      argName = optional ? 'second' : 'Second';
      break;

    case 3:
      argName = optional ? 'third' : 'Third';
      break;

    case 4:
      argName = optional ? 'fourth' : 'Fourth';
      break;

    default:
      throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');
  }

  var error = fnName + ' failed: ';
  error += argName + ' argument ';
  return error;
}
/**
 * @param fnName
 * @param argumentNumber
 * @param namespace
 * @param optional
 */


function validateNamespace(fnName, argumentNumber, namespace, optional) {
  if (optional && !namespace) {
    return;
  }

  if (typeof namespace !== 'string') {
    //TODO: I should do more validation here. We only allow certain chars in namespaces.
    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid firebase namespace.');
  }
}

function validateCallback(fnName, argumentNumber, // eslint-disable-next-line @typescript-eslint/ban-types
callback, optional) {
  if (optional && !callback) {
    return;
  }

  if (typeof callback !== 'function') {
    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid function.');
  }
}

function validateContextObject(fnName, argumentNumber, context, optional) {
  if (optional && !context) {
    return;
  }

  if (typeof context !== 'object' || context === null) {
    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid context object.');
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they
// automatically replaced '\r\n' with '\n', and they didn't handle surrogate pairs,
// so it's been modified.
// Note that not all Unicode characters appear as single characters in JavaScript strings.
// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters
// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first
// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate
// pair).
// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3

/**
 * @param {string} str
 * @return {Array}
 */


var stringToByteArray$1 = function stringToByteArray$1(str) {
  var out = [];
  var p = 0;

  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i); // Is this the lead surrogate in a surrogate pair?

    if (c >= 0xd800 && c <= 0xdbff) {
      var high = c - 0xd800; // the high 10 bits.

      i++;
      assert(i < str.length, 'Surrogate pair missing trail surrogate.');
      var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.

      c = 0x10000 + (high << 10) + low;
    }

    if (c < 128) {
      out[p++] = c;
    } else if (c < 2048) {
      out[p++] = c >> 6 | 192;
      out[p++] = c & 63 | 128;
    } else if (c < 65536) {
      out[p++] = c >> 12 | 224;
      out[p++] = c >> 6 & 63 | 128;
      out[p++] = c & 63 | 128;
    } else {
      out[p++] = c >> 18 | 240;
      out[p++] = c >> 12 & 63 | 128;
      out[p++] = c >> 6 & 63 | 128;
      out[p++] = c & 63 | 128;
    }
  }

  return out;
};
/**
 * Calculate length without actually converting; useful for doing cheaper validation.
 * @param {string} str
 * @return {number}
 */


var stringLength = function stringLength(str) {
  var p = 0;

  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i);

    if (c < 128) {
      p++;
    } else if (c < 2048) {
      p += 2;
    } else if (c >= 0xd800 && c <= 0xdbff) {
      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.
      p += 4;
      i++; // skip trail surrogate.
    } else {
      p += 3;
    }
  }

  return p;
};
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * The amount of milliseconds to exponentially increase.
 */


var DEFAULT_INTERVAL_MILLIS = 1000;
/**
 * The factor to backoff by.
 * Should be a number greater than 1.
 */

var DEFAULT_BACKOFF_FACTOR = 2;
/**
 * The maximum milliseconds to increase to.
 *
 * <p>Visible for testing
 */

var MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.

/**
 * The percentage of backoff time to randomize by.
 * See
 * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic
 * for context.
 *
 * <p>Visible for testing
 */

var RANDOM_FACTOR = 0.5;
/**
 * Based on the backoff method from
 * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.
 * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.
 */

function calculateBackoffMillis(backoffCount, intervalMillis, backoffFactor) {
  if (intervalMillis === void 0) {
    intervalMillis = DEFAULT_INTERVAL_MILLIS;
  }

  if (backoffFactor === void 0) {
    backoffFactor = DEFAULT_BACKOFF_FACTOR;
  } // Calculates an exponentially increasing value.
  // Deviation: calculates value from count and a constant interval, so we only need to save value
  // and count to restore state.


  var currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount); // A random "fuzz" to avoid waves of retries.
  // Deviation: randomFactor is required.

  var randomWait = Math.round( // A fraction of the backoff value to add/subtract.
  // Deviation: changes multiplication order to improve readability.
  RANDOM_FACTOR * currBaseValue * ( // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines
  // if we add or subtract.
  Math.random() - 0.5) * 2); // Limits backoff to max to avoid effectively permanent backoff.

  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);
}

exports.CONSTANTS = CONSTANTS;
exports.Deferred = Deferred;
exports.ErrorFactory = ErrorFactory;
exports.FirebaseError = FirebaseError;
exports.MAX_VALUE_MILLIS = MAX_VALUE_MILLIS;
exports.RANDOM_FACTOR = RANDOM_FACTOR;
exports.Sha1 = Sha1;
exports.areCookiesEnabled = areCookiesEnabled;
exports.assert = assert;
exports.assertionError = assertionError;
exports.async = async;
exports.base64 = base64;
exports.base64Decode = base64Decode;
exports.base64Encode = base64Encode;
exports.calculateBackoffMillis = calculateBackoffMillis;
exports.contains = contains;
exports.createSubscribe = createSubscribe;
exports.decode = decode;
exports.deepCopy = deepCopy;
exports.deepExtend = deepExtend;
exports.errorPrefix = errorPrefix;
exports.getUA = getUA;
exports.isAdmin = isAdmin;
exports.isBrowser = isBrowser;
exports.isBrowserExtension = isBrowserExtension;
exports.isElectron = isElectron;
exports.isEmpty = isEmpty;
exports.isIE = isIE;
exports.isIndexedDBAvailable = isIndexedDBAvailable;
exports.isMobileCordova = isMobileCordova;
exports.isNode = isNode;
exports.isNodeSdk = isNodeSdk;
exports.isReactNative = isReactNative;
exports.isSafari = isSafari;
exports.isUWP = isUWP;
exports.isValidFormat = isValidFormat;
exports.isValidTimestamp = isValidTimestamp;
exports.issuedAtTime = issuedAtTime;
exports.jsonEval = jsonEval;
exports.map = map;
exports.querystring = querystring;
exports.querystringDecode = querystringDecode;
exports.safeGet = safeGet;
exports.stringLength = stringLength;
exports.stringToByteArray = stringToByteArray$1;
exports.stringify = stringify;
exports.validateArgCount = validateArgCount;
exports.validateCallback = validateCallback;
exports.validateContextObject = validateContextObject;
exports.validateIndexedDBOpenable = validateIndexedDBOpenable;
exports.validateNamespace = validateNamespace;

/***/ }),

/***/ "znLP":
/*!**********************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameScheduler.js ***!
  \**********************************************************************************/
/*! exports provided: AnimationFrameScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimationFrameScheduler", function() { return AnimationFrameScheduler; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AsyncScheduler */ "IjjT");





var AnimationFrameScheduler = /*#__PURE__*/function (_AsyncScheduler) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(AnimationFrameScheduler, _AsyncScheduler);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(AnimationFrameScheduler);

  function AnimationFrameScheduler() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, AnimationFrameScheduler);

    return _super.apply(this, arguments);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(AnimationFrameScheduler, [{
    key: "flush",
    value: function flush(action) {
      this.active = true;
      this.scheduled = undefined;
      var actions = this.actions;
      var error;
      var index = -1;
      var count = actions.length;
      action = action || actions.shift();

      do {
        if (error = action.execute(action.state, action.delay)) {
          break;
        }
      } while (++index < count && (action = actions.shift()));

      this.active = false;

      if (error) {
        while (++index < count && (action = actions.shift())) {
          action.unsubscribe();
        }

        throw error;
      }
    }
  }]);

  return AnimationFrameScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_4__["AsyncScheduler"]);

/***/ }),

/***/ "zp1y":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js ***!
  \*************************************************************************/
/*! exports provided: withLatestFrom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "withLatestFrom", function() { return withLatestFrom; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../OuterSubscriber */ "l7GE");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/subscribeToResult */ "ZUHj");








function withLatestFrom() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return function (source) {
    var project;

    if (typeof args[args.length - 1] === 'function') {
      project = args.pop();
    }

    var observables = args;
    return source.lift(new WithLatestFromOperator(observables, project));
  };
}

var WithLatestFromOperator = /*#__PURE__*/function () {
  function WithLatestFromOperator(observables, project) {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, WithLatestFromOperator);

    this.observables = observables;
    this.project = project;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(WithLatestFromOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));
    }
  }]);

  return WithLatestFromOperator;
}();

var WithLatestFromSubscriber = /*#__PURE__*/function (_OuterSubscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(WithLatestFromSubscriber, _OuterSubscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(WithLatestFromSubscriber);

  function WithLatestFromSubscriber(destination, observables, project) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, WithLatestFromSubscriber);

    _this = _super.call(this, destination);
    _this.observables = observables;
    _this.project = project;
    _this.toRespond = [];
    var len = observables.length;
    _this.values = new Array(len);

    for (var i = 0; i < len; i++) {
      _this.toRespond.push(i);
    }

    for (var _i = 0; _i < len; _i++) {
      var observable = observables[_i];

      _this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_7__["subscribeToResult"])(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__["default"])(_this), observable, undefined, _i));
    }

    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(WithLatestFromSubscriber, [{
    key: "notifyNext",
    value: function notifyNext(_outerValue, innerValue, outerIndex) {
      this.values[outerIndex] = innerValue;
      var toRespond = this.toRespond;

      if (toRespond.length > 0) {
        var found = toRespond.indexOf(outerIndex);

        if (found !== -1) {
          toRespond.splice(found, 1);
        }
      }
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {}
  }, {
    key: "_next",
    value: function _next(value) {
      if (this.toRespond.length === 0) {
        var args = [value].concat(Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(this.values));

        if (this.project) {
          this._tryProject(args);
        } else {
          this.destination.next(args);
        }
      }
    }
  }, {
    key: "_tryProject",
    value: function _tryProject(args) {
      var result;

      try {
        result = this.project.apply(this, args);
      } catch (err) {
        this.destination.error(err);
        return;
      }

      this.destination.next(result);
    }
  }]);

  return WithLatestFromSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_6__["OuterSubscriber"]);

/***/ }),

/***/ "zt7V":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/operators/exhaust.js ***!
  \******************************************************************/
/*! exports provided: exhaust */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exhaust", function() { return exhaust; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../innerSubscribe */ "zx2A");





function exhaust() {
  return function (source) {
    return source.lift(new SwitchFirstOperator());
  };
}

var SwitchFirstOperator = /*#__PURE__*/function () {
  function SwitchFirstOperator() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SwitchFirstOperator);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SwitchFirstOperator, [{
    key: "call",
    value: function call(subscriber, source) {
      return source.subscribe(new SwitchFirstSubscriber(subscriber));
    }
  }]);

  return SwitchFirstOperator;
}();

var SwitchFirstSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(SwitchFirstSubscriber, _SimpleOuterSubscribe);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(SwitchFirstSubscriber);

  function SwitchFirstSubscriber(destination) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SwitchFirstSubscriber);

    _this = _super.call(this, destination);
    _this.hasCompleted = false;
    _this.hasSubscription = false;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SwitchFirstSubscriber, [{
    key: "_next",
    value: function _next(value) {
      if (!this.hasSubscription) {
        this.hasSubscription = true;
        this.add(Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["innerSubscribe"])(value, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["SimpleInnerSubscriber"](this)));
      }
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.hasCompleted = true;

      if (!this.hasSubscription) {
        this.destination.complete();
      }
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {
      this.hasSubscription = false;

      if (this.hasCompleted) {
        this.destination.complete();
      }
    }
  }]);

  return SwitchFirstSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_4__["SimpleOuterSubscriber"]);

/***/ }),

/***/ "zx2A":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm2015/internal/innerSubscribe.js ***!
  \***************************************************************/
/*! exports provided: SimpleInnerSubscriber, ComplexInnerSubscriber, SimpleOuterSubscriber, ComplexOuterSubscriber, innerSubscribe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SimpleInnerSubscriber", function() { return SimpleInnerSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComplexInnerSubscriber", function() { return ComplexInnerSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SimpleOuterSubscriber", function() { return SimpleOuterSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComplexOuterSubscriber", function() { return ComplexOuterSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "innerSubscribe", function() { return innerSubscribe; });
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Subscriber */ "7o/Q");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Observable */ "HDdC");
/* harmony import */ var _util_subscribeTo__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util/subscribeTo */ "SeVD");







var SimpleInnerSubscriber = /*#__PURE__*/function (_Subscriber) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(SimpleInnerSubscriber, _Subscriber);

  var _super = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(SimpleInnerSubscriber);

  function SimpleInnerSubscriber(parent) {
    var _this;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, SimpleInnerSubscriber);

    _this = _super.call(this);
    _this.parent = parent;
    return _this;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(SimpleInnerSubscriber, [{
    key: "_next",
    value: function _next(value) {
      this.parent.notifyNext(value);
    }
  }, {
    key: "_error",
    value: function _error(error) {
      this.parent.notifyError(error);
      this.unsubscribe();
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.parent.notifyComplete();
      this.unsubscribe();
    }
  }]);

  return SimpleInnerSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);
var ComplexInnerSubscriber = /*#__PURE__*/function (_Subscriber2) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(ComplexInnerSubscriber, _Subscriber2);

  var _super2 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(ComplexInnerSubscriber);

  function ComplexInnerSubscriber(parent, outerValue, outerIndex) {
    var _this2;

    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, ComplexInnerSubscriber);

    _this2 = _super2.call(this);
    _this2.parent = parent;
    _this2.outerValue = outerValue;
    _this2.outerIndex = outerIndex;
    return _this2;
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(ComplexInnerSubscriber, [{
    key: "_next",
    value: function _next(value) {
      this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);
    }
  }, {
    key: "_error",
    value: function _error(error) {
      this.parent.notifyError(error);
      this.unsubscribe();
    }
  }, {
    key: "_complete",
    value: function _complete() {
      this.parent.notifyComplete(this);
      this.unsubscribe();
    }
  }]);

  return ComplexInnerSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);
var SimpleOuterSubscriber = /*#__PURE__*/function (_Subscriber3) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(SimpleOuterSubscriber, _Subscriber3);

  var _super3 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(SimpleOuterSubscriber);

  function SimpleOuterSubscriber() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, SimpleOuterSubscriber);

    return _super3.apply(this, arguments);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(SimpleOuterSubscriber, [{
    key: "notifyNext",
    value: function notifyNext(innerValue) {
      this.destination.next(innerValue);
    }
  }, {
    key: "notifyError",
    value: function notifyError(err) {
      this.destination.error(err);
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete() {
      this.destination.complete();
    }
  }]);

  return SimpleOuterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);
var ComplexOuterSubscriber = /*#__PURE__*/function (_Subscriber4) {
  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(ComplexOuterSubscriber, _Subscriber4);

  var _super4 = Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(ComplexOuterSubscriber);

  function ComplexOuterSubscriber() {
    Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, ComplexOuterSubscriber);

    return _super4.apply(this, arguments);
  }

  Object(C_xampp_htdocs_demotest_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(ComplexOuterSubscriber, [{
    key: "notifyNext",
    value: function notifyNext(_outerValue, innerValue, _outerIndex, _innerSub) {
      this.destination.next(innerValue);
    }
  }, {
    key: "notifyError",
    value: function notifyError(error) {
      this.destination.error(error);
    }
  }, {
    key: "notifyComplete",
    value: function notifyComplete(_innerSub) {
      this.destination.complete();
    }
  }]);

  return ComplexOuterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_4__["Subscriber"]);
function innerSubscribe(result, innerSubscriber) {
  if (innerSubscriber.closed) {
    return undefined;
  }

  if (result instanceof _Observable__WEBPACK_IMPORTED_MODULE_5__["Observable"]) {
    return result.subscribe(innerSubscriber);
  }

  return Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_6__["subscribeTo"])(result)(innerSubscriber);
}

/***/ })

},[[0,"runtime"]]]);
//# sourceMappingURL=main.0e4ced80dcd7e42eb55b.js.map